digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = new java.util.Locale;
specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>();
if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>();
if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\";
"
    "Block 5:
[preds: 4 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"jaJPJP equals stripped\");
throw $r11;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r3 = \"ja-JP-x-lvariant-JP\";
$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>();
$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\");
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>();
$r7 = <java.util.Locale: java.util.Locale US>;
$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$r8 = <java.util.Locale: java.util.Locale US>;
r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>();
$r10 = <java.util.Locale: java.util.Locale US>;
if r9 == $r10 goto return;
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\");
"
    "Block 12:
[preds: 10 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = new java.util.Locale;
specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>();
if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = new java.util.Locale;
specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>();
if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>();
if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>();
if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>();
if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>();
$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>();
if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\";
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\";
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\";
"->"Block 5:
[preds: 4 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"jaJPJP equals stripped\");
throw $r11;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2);
if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\";
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$r3 = \"ja-JP-x-lvariant-JP\";
$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>();
$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r3 = \"ja-JP-x-lvariant-JP\";
$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>();
$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
"->"Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\");
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r3 = \"ja-JP-x-lvariant-JP\";
$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>();
$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>();
$r7 = <java.util.Locale: java.util.Locale US>;
$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\");
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>();
$r7 = <java.util.Locale: java.util.Locale US>;
$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>();
$r7 = <java.util.Locale: java.util.Locale US>;
$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\");
$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>();
$r7 = <java.util.Locale: java.util.Locale US>;
$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$r8 = <java.util.Locale: java.util.Locale US>;
r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>();
$r10 = <java.util.Locale: java.util.Locale US>;
if r9 == $r10 goto return;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$r8 = <java.util.Locale: java.util.Locale US>;
r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>();
$r10 = <java.util.Locale: java.util.Locale US>;
if r9 == $r10 goto return;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$r8 = <java.util.Locale: java.util.Locale US>;
r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>();
$r10 = <java.util.Locale: java.util.Locale US>;
if r9 == $r10 goto return;
"->"Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\");
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$r8 = <java.util.Locale: java.util.Locale US>;
r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>();
$r10 = <java.util.Locale: java.util.Locale US>;
if r9 == $r10 goto return;
"->"Block 12:
[preds: 10 11 ] [succs: ]
return;
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\");
"->"Block 12:
[preds: 10 11 ] [succs: ]
return;
";
}
