digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r29 := @parameter0: java.lang.String[];
$r0 = new java.util.TreeMap;
specialinvoke $r0.<java.util.TreeMap: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"one\", $r2);
virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
$r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object clone()>();
r6 = (java.util.TreeMap) $r5;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"two\", $r7);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
virtualinvoke r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"three\", $r9);
$r11 = virtualinvoke r6.<java.util.TreeMap: java.util.Set keySet()>();
r30 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
r31 = (java.lang.String) $r21;
$r22 = \"one\";
$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z4 != 0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r23 = \"three\";
$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z5 != 0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: ]
$r24 = new java.lang.IllegalStateException;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);
throw $r24;
"
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (java.lang.String) $r13;
$r14 = \"one\";
$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z2 != 0 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r15 = \"two\";
$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z3 != 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: ]
$r16 = new java.lang.IllegalStateException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);
throw $r16;
"
    "Block 11:
[preds: 8 9 ] [succs: 7 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 12:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r29 := @parameter0: java.lang.String[];
$r0 = new java.util.TreeMap;
specialinvoke $r0.<java.util.TreeMap: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"one\", $r2);
virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
$r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object clone()>();
r6 = (java.util.TreeMap) $r5;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"two\", $r7);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
virtualinvoke r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"three\", $r9);
$r11 = virtualinvoke r6.<java.util.TreeMap: java.util.Set keySet()>();
r30 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
r31 = (java.lang.String) $r21;
$r22 = \"one\";
$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z4 != 0 goto (branch);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
"->"Block 6:
[preds: 1 ] [succs: 7 ]
$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
r31 = (java.lang.String) $r21;
$r22 = \"one\";
$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z4 != 0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r23 = \"three\";
$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z5 != 0 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
r31 = (java.lang.String) $r21;
$r22 = \"one\";
$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z4 != 0 goto (branch);
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r23 = \"three\";
$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z5 != 0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: ]
$r24 = new java.lang.IllegalStateException;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);
throw $r24;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r23 = \"three\";
$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31);
if $z5 != 0 goto (branch);
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();
r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 8:
[preds: 7 ] [succs: 9 11 ]
$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (java.lang.String) $r13;
$r14 = \"one\";
$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z2 != 0 goto (branch);
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 12:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (java.lang.String) $r13;
$r14 = \"one\";
$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z2 != 0 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r15 = \"two\";
$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z3 != 0 goto (branch);
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (java.lang.String) $r13;
$r14 = \"one\";
$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z2 != 0 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 7 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r15 = \"two\";
$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z3 != 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: ]
$r16 = new java.lang.IllegalStateException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r15 = \"two\";
$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33);
if $z3 != 0 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 7 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 11:
[preds: 8 9 ] [succs: 7 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
}
