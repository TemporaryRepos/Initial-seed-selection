digraph "unitGraph" {
    "r0 := @parameter0: java.util.HashMap"
    "i0 := @parameter1: int"
    "$i1 = virtualinvoke r0.<java.util.HashMap: int size()>()"
    "if i0 <= $i1 goto $r1 = new java.util.HashSet"
    "$r28 = new java.lang.IllegalArgumentException"
    "specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Error in test: elemBeforePut must be <= HashMap size\")"
    "throw $r28"
    "$r1 = new java.util.HashSet"
    "$i2 = virtualinvoke r0.<java.util.HashMap: int size()>()"
    "specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2)"
    "r2 = $r1"
    "$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()"
    "virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3)"
    "$r4 = new java.util.HashSet"
    "$i3 = virtualinvoke r0.<java.util.HashMap: int size()>()"
    "specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3)"
    "r5 = $r4"
    "$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()"
    "r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()"
    "i4 = 0"
    "if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r21 = (java.lang.Integer) $r20"
    "$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21)"
    "if $z4 != 0 goto i4 = i4 + 1"
    "$r22 = new java.lang.RuntimeException"
    "$r23 = new java.lang.StringBuilder"
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)"
    "throw $r22"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)"
    "$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)"
    "if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "$r19 = new java.lang.RuntimeException"
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error in test: expected key 0 to be in the HashMap\")"
    "throw $r19"
    "$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)"
    "$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r29 = (java.lang.Integer) $r12"
    "$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29)"
    "if $z3 != 0 goto (branch)"
    "$r13 = new java.lang.RuntimeException"
    "$r14 = new java.lang.StringBuilder"
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18)"
    "throw $r13"
    "goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"
    "$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)"
    "if $z2 != 0 goto return"
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Collected keys do not match original set of keys\")"
    "throw $r11"
    "return"
    "r0 := @parameter0: java.util.HashMap"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$i1 = virtualinvoke r0.<java.util.HashMap: int size()>()";
    "$i1 = virtualinvoke r0.<java.util.HashMap: int size()>()"->"if i0 <= $i1 goto $r1 = new java.util.HashSet";
    "if i0 <= $i1 goto $r1 = new java.util.HashSet"->"$r28 = new java.lang.IllegalArgumentException";
    "if i0 <= $i1 goto $r1 = new java.util.HashSet"->"$r1 = new java.util.HashSet";
    "$r28 = new java.lang.IllegalArgumentException"->"specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Error in test: elemBeforePut must be <= HashMap size\")";
    "specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Error in test: elemBeforePut must be <= HashMap size\")"->"throw $r28";
    "$r1 = new java.util.HashSet"->"$i2 = virtualinvoke r0.<java.util.HashMap: int size()>()";
    "$i2 = virtualinvoke r0.<java.util.HashMap: int size()>()"->"specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2)";
    "specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2)"->"r2 = $r1";
    "r2 = $r1"->"$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()";
    "$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()"->"virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3)";
    "virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3)"->"$r4 = new java.util.HashSet";
    "$r4 = new java.util.HashSet"->"$i3 = virtualinvoke r0.<java.util.HashMap: int size()>()";
    "$i3 = virtualinvoke r0.<java.util.HashMap: int size()>()"->"specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3)";
    "specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3)"->"r5 = $r4";
    "r5 = $r4"->"$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()";
    "$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>()"->"r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()";
    "r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r21 = (java.lang.Integer) $r20";
    "r21 = (java.lang.Integer) $r20"->"$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21)";
    "$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21)"->"if $z4 != 0 goto i4 = i4 + 1";
    "if $z4 != 0 goto i4 = i4 + 1"->"$r22 = new java.lang.RuntimeException";
    "if $z4 != 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r22 = new java.lang.RuntimeException"->"$r23 = new java.lang.StringBuilder";
    "$r23 = new java.lang.StringBuilder"->"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)";
    "specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)"->"throw $r22";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)"->"$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)";
    "$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)"->"if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"$r19 = new java.lang.RuntimeException";
    "if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$r19 = new java.lang.RuntimeException"->"specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error in test: expected key 0 to be in the HashMap\")";
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error in test: expected key 0 to be in the HashMap\")"->"throw $r19";
    "$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)";
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)"->"$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)"->"$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)";
    "$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r29 = (java.lang.Integer) $r12";
    "r29 = (java.lang.Integer) $r12"->"$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29)";
    "$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29)"->"if $z3 != 0 goto (branch)";
    "if $z3 != 0 goto (branch)"->"$r13 = new java.lang.RuntimeException";
    "if $z3 != 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]";
    "$r13 = new java.lang.RuntimeException"->"$r14 = new java.lang.StringBuilder";
    "$r14 = new java.lang.StringBuilder"->"specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18)";
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18)"->"throw $r13";
    "goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5)"->"if $z2 != 0 goto return";
    "if $z2 != 0 goto return"->"$r11 = new java.lang.RuntimeException";
    "if $z2 != 0 goto return"->"return";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Collected keys do not match original set of keys\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Collected keys do not match original set of keys\")"->"throw $r11";
}
