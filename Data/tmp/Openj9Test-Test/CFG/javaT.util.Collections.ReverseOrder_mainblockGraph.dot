digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = newarray (javaT.util.Collections.Foo)[3];
$r1 = new javaT.util.Collections.Foo;
specialinvoke $r1.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r0[0] = $r1;
$r2 = new javaT.util.Collections.Foo;
specialinvoke $r2.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r0[1] = $r2;
$r3 = new javaT.util.Collections.Foo;
specialinvoke $r3.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r0[2] = $r3;
r4 = $r0;
r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
r6 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, r6);
$r7 = newarray (javaT.util.Collections.Foo)[3];
$r8 = new javaT.util.Collections.Foo;
specialinvoke $r8.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r7[0] = $r8;
$r9 = new javaT.util.Collections.Foo;
specialinvoke $r9.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r7[1] = $r9;
$r10 = new javaT.util.Collections.Foo;
specialinvoke $r10.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r7[2] = $r10;
r11 = $r7;
r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);
$z0 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z0 != 0 goto $r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
"
    "Block 1:
[preds: 0 ] [succs: ]
$r18 = new java.lang.Exception;
$r19 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>($r19);
throw $r18;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
r14 = (java.util.Comparator) $r13;
r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r15, r14);
$z1 = interfaceinvoke r15.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z1 != 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.Exception;
$r17 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>($r17);
throw $r16;
"
    "Block 4:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = newarray (javaT.util.Collections.Foo)[3];
$r1 = new javaT.util.Collections.Foo;
specialinvoke $r1.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r0[0] = $r1;
$r2 = new javaT.util.Collections.Foo;
specialinvoke $r2.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r0[1] = $r2;
$r3 = new javaT.util.Collections.Foo;
specialinvoke $r3.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r0[2] = $r3;
r4 = $r0;
r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
r6 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, r6);
$r7 = newarray (javaT.util.Collections.Foo)[3];
$r8 = new javaT.util.Collections.Foo;
specialinvoke $r8.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r7[0] = $r8;
$r9 = new javaT.util.Collections.Foo;
specialinvoke $r9.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r7[1] = $r9;
$r10 = new javaT.util.Collections.Foo;
specialinvoke $r10.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r7[2] = $r10;
r11 = $r7;
r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);
$z0 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z0 != 0 goto $r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
"->"Block 1:
[preds: 0 ] [succs: ]
$r18 = new java.lang.Exception;
$r19 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>($r19);
throw $r18;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = newarray (javaT.util.Collections.Foo)[3];
$r1 = new javaT.util.Collections.Foo;
specialinvoke $r1.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r0[0] = $r1;
$r2 = new javaT.util.Collections.Foo;
specialinvoke $r2.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r0[1] = $r2;
$r3 = new javaT.util.Collections.Foo;
specialinvoke $r3.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r0[2] = $r3;
r4 = $r0;
r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
r6 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, r6);
$r7 = newarray (javaT.util.Collections.Foo)[3];
$r8 = new javaT.util.Collections.Foo;
specialinvoke $r8.<javaT.util.Collections.Foo: void <init>(int)>(3);
$r7[0] = $r8;
$r9 = new javaT.util.Collections.Foo;
specialinvoke $r9.<javaT.util.Collections.Foo: void <init>(int)>(2);
$r7[1] = $r9;
$r10 = new javaT.util.Collections.Foo;
specialinvoke $r10.<javaT.util.Collections.Foo: void <init>(int)>(1);
$r7[2] = $r10;
r11 = $r7;
r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);
$z0 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z0 != 0 goto $r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
r14 = (java.util.Comparator) $r13;
r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r15, r14);
$z1 = interfaceinvoke r15.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z1 != 0 goto return;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
r14 = (java.util.Comparator) $r13;
r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r15, r14);
$z1 = interfaceinvoke r15.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z1 != 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.Exception;
$r17 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>($r17);
throw $r16;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r13 = staticinvoke <javaT.util.Collections.ReverseOrder: java.lang.Object serialClone(java.lang.Object)>(r6);
r14 = (java.util.Comparator) $r13;
r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r15, r14);
$z1 = interfaceinvoke r15.<java.util.List: boolean equals(java.lang.Object)>(r12);
if $z1 != 0 goto return;
"->"Block 4:
[preds: 2 ] [succs: ]
return;
";
}
