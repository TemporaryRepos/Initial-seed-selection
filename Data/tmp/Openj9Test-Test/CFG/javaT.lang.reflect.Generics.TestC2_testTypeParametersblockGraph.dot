digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r13 = r2[0];
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i3 = lengthof r2;
if $i3 == 3 goto r13 = r2[0];
"
    "Block 2:
[preds: 1 ] [succs: ]
$r12 = new java.lang.AssertionError;
specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2 should have three type parameters\");
throw $r12;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r13 = r2[0];
r14 = interfaceinvoke r13.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i2 = lengthof r14;
if $i2 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r11 = new java.lang.AssertionError;
specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 should have one bound\");
throw $r11;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r15 = r2[1];
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r9 = r14[0];
$z8 = $r9 instanceof java.lang.reflect.ParameterizedType;
if $z8 != 0 goto r15 = r2[1];
"
    "Block 8:
[preds: 7 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T1 should be a parameterized type\");
throw $r10;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r15 = r2[1];
r16 = interfaceinvoke r15.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i1 = lengthof r16;
if $i1 == 1 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T2 should have one bound\");
throw $r8;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r17 = r2[2];
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r6 = r16[0];
$z7 = $r6 instanceof java.lang.reflect.ParameterizedType;
if $z7 != 0 goto r17 = r2[2];
"
    "Block 14:
[preds: 13 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T2 should be a parameterized type\");
throw $r7;
"
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r17 = r2[2];
r18 = interfaceinvoke r17.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i0 = lengthof r18;
if $i0 == 1 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 17:
[preds: 16 ] [succs: ]
$r5 = new java.lang.AssertionError;
specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T3 should have one bound\");
throw $r5;
"
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto return;
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$r3 = r18[0];
if $r3 == class \"Ljava/lang/Throwable;\" goto return;
"
    "Block 20:
[preds: 19 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T3 should be Throwable\");
throw $r4;
"
    "Block 21:
[preds: 18 19 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r13 = r2[0];
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i3 = lengthof r2;
if $i3 == 3 goto r13 = r2[0];
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r13 = r2[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r13 = r2[0];
r14 = interfaceinvoke r13.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i3 = lengthof r2;
if $i3 == 3 goto r13 = r2[0];
"->"Block 2:
[preds: 1 ] [succs: ]
$r12 = new java.lang.AssertionError;
specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2 should have three type parameters\");
throw $r12;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i3 = lengthof r2;
if $i3 == 3 goto r13 = r2[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r13 = r2[0];
r14 = interfaceinvoke r13.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r13 = r2[0];
r14 = interfaceinvoke r13.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$i2 = lengthof r14;
if $i2 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r13 = r2[0];
r14 = interfaceinvoke r13.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r15 = r2[1];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i2 = lengthof r14;
if $i2 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 5:
[preds: 4 ] [succs: ]
$r11 = new java.lang.AssertionError;
specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 should have one bound\");
throw $r11;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i2 = lengthof r14;
if $i2 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r15 = r2[1];
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r15 = r2[1];
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r9 = r14[0];
$z8 = $r9 instanceof java.lang.reflect.ParameterizedType;
if $z8 != 0 goto r15 = r2[1];
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r15 = r2[1];
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r15 = r2[1];
r16 = interfaceinvoke r15.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r9 = r14[0];
$z8 = $r9 instanceof java.lang.reflect.ParameterizedType;
if $z8 != 0 goto r15 = r2[1];
"->"Block 8:
[preds: 7 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T1 should be a parameterized type\");
throw $r10;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r9 = r14[0];
$z8 = $r9 instanceof java.lang.reflect.ParameterizedType;
if $z8 != 0 goto r15 = r2[1];
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r15 = r2[1];
r16 = interfaceinvoke r15.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r15 = r2[1];
r16 = interfaceinvoke r15.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$i1 = lengthof r16;
if $i1 == 1 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r15 = r2[1];
r16 = interfaceinvoke r15.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r17 = r2[2];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i1 = lengthof r16;
if $i1 == 1 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 11:
[preds: 10 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T2 should have one bound\");
throw $r8;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i1 = lengthof r16;
if $i1 == 1 goto $z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r17 = r2[2];
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r17 = r2[2];
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r6 = r16[0];
$z7 = $r6 instanceof java.lang.reflect.ParameterizedType;
if $z7 != 0 goto r17 = r2[2];
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r17 = r2[2];
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r17 = r2[2];
r18 = interfaceinvoke r17.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r6 = r16[0];
$z7 = $r6 instanceof java.lang.reflect.ParameterizedType;
if $z7 != 0 goto r17 = r2[2];
"->"Block 14:
[preds: 13 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T2 should be a parameterized type\");
throw $r7;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r6 = r16[0];
$z7 = $r6 instanceof java.lang.reflect.ParameterizedType;
if $z7 != 0 goto r17 = r2[2];
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r17 = r2[2];
r18 = interfaceinvoke r17.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r17 = r2[2];
r18 = interfaceinvoke r17.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$i0 = lengthof r18;
if $i0 == 1 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r17 = r2[2];
r18 = interfaceinvoke r17.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto return;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i0 = lengthof r18;
if $i0 == 1 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 17:
[preds: 16 ] [succs: ]
$r5 = new java.lang.AssertionError;
specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T3 should have one bound\");
throw $r5;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i0 = lengthof r18;
if $i0 == 1 goto $z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto return;
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto return;
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
$r3 = r18[0];
if $r3 == class \"Ljava/lang/Throwable;\" goto return;
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto return;
"->"Block 21:
[preds: 18 19 ] [succs: ]
return;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$r3 = r18[0];
if $r3 == class \"Ljava/lang/Throwable;\" goto return;
"->"Block 20:
[preds: 19 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T3 should be Throwable\");
throw $r4;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$r3 = r18[0];
if $r3 == class \"Ljava/lang/Throwable;\" goto return;
"->"Block 21:
[preds: 18 19 ] [succs: ]
return;
";
}
