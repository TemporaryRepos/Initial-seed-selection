digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.util.Calendar;
virtualinvoke r0.<java.util.Calendar: void clear()>();
virtualinvoke r0.<java.util.Calendar: void set(int,int,int,int,int,int)>(2000, 10, 2, 0, 0, 0);
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);
i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);
if i0 != 2000 goto $r1 = new java.lang.RuntimeException;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i1 != 10 goto $r1 = new java.lang.RuntimeException;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 2 goto return;
"
    "Block 3:
[preds: 0 1 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong date produced (\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$i3 = i1 + 1;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r1;
"
    "Block 4:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.util.Calendar;
virtualinvoke r0.<java.util.Calendar: void clear()>();
virtualinvoke r0.<java.util.Calendar: void set(int,int,int,int,int,int)>(2000, 10, 2, 0, 0, 0);
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);
i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);
if i0 != 2000 goto $r1 = new java.lang.RuntimeException;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if i1 != 10 goto $r1 = new java.lang.RuntimeException;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.util.Calendar;
virtualinvoke r0.<java.util.Calendar: void clear()>();
virtualinvoke r0.<java.util.Calendar: void set(int,int,int,int,int,int)>(2000, 10, 2, 0, 0, 0);
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);
i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);
if i0 != 2000 goto $r1 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong date produced (\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$i3 = i1 + 1;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i1 != 10 goto $r1 = new java.lang.RuntimeException;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 2 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i1 != 10 goto $r1 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong date produced (\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$i3 = i1 + 1;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 2 goto return;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong date produced (\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$i3 = i1 + 1;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 2 goto return;
"->"Block 4:
[preds: 2 ] [succs: ]
return;
";
}
