digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r64 = null;
r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);
r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1);
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64);
"
    "Block 4:
[preds: 3 ] [succs: 7 11 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)];
"
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"
    "Block 6:
[preds: 5 ] [succs: 7 11 ]
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63);
"
    "Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1);
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64);
"
    "Block 10:
[preds: 9 ] [succs: 13 17 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)];
"
    "Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54);
"
    "Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1);
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64);
"
    "Block 16:
[preds: 15 ] [succs: 19 24 ]
goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>];
"
    "Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45);
"
    "Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68);
"
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0);
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64);
"
    "Block 23:
[preds: 22 ] [succs: 26 31 ]
goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>];
"
    "Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"
    "Block 25:
[preds: 24 ] [succs: 26 31 ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36);
"
    "Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"
    "Block 27:
[preds: 26 ] [succs: 28 31 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70);
"
    "Block 28:
[preds: 27 ] [succs: 29 31 ]
l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0);
"
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64);
"
    "Block 30:
[preds: 29 ] [succs: 33 37 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()];
"
    "Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"
    "Block 32:
[preds: 31 ] [succs: 33 37 ]
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29);
"
    "Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0);
"
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64);
"
    "Block 36:
[preds: 35 ] [succs: 39 53 ]
goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)];
"
    "Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"
    "Block 38:
[preds: 37 ] [succs: 39 53 ]
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22);
"
    "Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"
    "Block 40:
[preds: 39 ] [succs: 41 53 ]
$l10 = (long) i9;
"
    "Block 41:
[preds: 40 ] [succs: 42 53 ]
$b11 = $l10 cmp l0;
"
    "Block 42:
[preds: 41 ] [succs: 43 52 53 ]
if $b11 == 0 goto (branch);
"
    "Block 43:
[preds: 42 ] [succs: 44 53 ]
$r2 = new java.lang.StringBuilder;
"
    "Block 44:
[preds: 43 ] [succs: 45 53 ]
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
"
    "Block 45:
[preds: 44 ] [succs: 46 53 ]
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
"
    "Block 46:
[preds: 45 ] [succs: 47 53 ]
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
"
    "Block 47:
[preds: 46 ] [succs: 48 53 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \");
"
    "Block 48:
[preds: 47 ] [succs: 49 53 ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
"
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \");
"
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8);
"
    "Block 52:
[preds: 42 51 ] [succs: 55 ]
goto [?= return];
"
    "Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
"
    "Block 54:
[preds: 53 ] [succs: 55 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15);
"
    "Block 55:
[preds: 52 53 54 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r64 = null;
r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);
r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1);
";
    "Block 0:
[preds: ] [succs: 1 5 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r64 = null;
r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);
r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1);
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1);
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64);
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64);
"->"Block 4:
[preds: 3 ] [succs: 7 11 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 4:
[preds: 3 ] [succs: 7 11 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)];
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 4:
[preds: 3 ] [succs: 7 11 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)];
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"->"Block 6:
[preds: 5 ] [succs: 7 11 ]
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63);
";
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 7 11 ]
$r55 := @caughtexception;
r65 = $r55;
$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 6:
[preds: 5 ] [succs: 7 11 ]
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63);
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
";
    "Block 6:
[preds: 5 ] [succs: 7 11 ]
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63);
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"->"Block 8:
[preds: 7 ] [succs: 9 11 ]
l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1);
";
    "Block 7:
[preds: 4 5 6 ] [succs: 8 11 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1);
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1);
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64);
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1);
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64);
"->"Block 10:
[preds: 9 ] [succs: 13 17 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64);
"->"Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 10:
[preds: 9 ] [succs: 13 17 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)];
"->"Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 10:
[preds: 9 ] [succs: 13 17 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)];
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"->"Block 12:
[preds: 11 ] [succs: 13 17 ]
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54);
";
    "Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"->"Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 11:
[preds: 4 5 6 7 8 9 ] [succs: 12 13 17 ]
$r46 := @caughtexception;
r66 = $r46;
$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54);
"->"Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54);
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"->"Block 14:
[preds: 13 ] [succs: 15 17 ]
l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1);
";
    "Block 13:
[preds: 10 11 12 ] [succs: 14 17 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1);
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64);
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1);
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64);
"->"Block 16:
[preds: 15 ] [succs: 19 24 ]
goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>];
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64);
"->"Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 16:
[preds: 15 ] [succs: 19 24 ]
goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>];
"->"Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 16:
[preds: 15 ] [succs: 19 24 ]
goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>];
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 18:
[preds: 17 ] [succs: 19 24 ]
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45);
";
    "Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 17:
[preds: 10 11 12 13 14 15 ] [succs: 18 19 24 ]
$r37 := @caughtexception;
r67 = $r37;
$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45);
"->"Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 20:
[preds: 19 ] [succs: 21 24 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68);
";
    "Block 19:
[preds: 16 17 18 ] [succs: 20 24 ]
$r68 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68);
"->"Block 21:
[preds: 20 ] [succs: 22 24 ]
l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0);
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0);
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64);
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64);
"->"Block 23:
[preds: 22 ] [succs: 26 31 ]
goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>];
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 23:
[preds: 22 ] [succs: 26 31 ]
goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>];
"->"Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 23:
[preds: 22 ] [succs: 26 31 ]
goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>];
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 25:
[preds: 24 ] [succs: 26 31 ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36);
";
    "Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 24:
[preds: 16 17 18 19 20 21 22 ] [succs: 25 26 31 ]
$r30 := @caughtexception;
r69 = $r30;
$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 25:
[preds: 24 ] [succs: 26 31 ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36);
"->"Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
";
    "Block 25:
[preds: 24 ] [succs: 26 31 ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36);
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 27:
[preds: 26 ] [succs: 28 31 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70);
";
    "Block 26:
[preds: 23 24 25 ] [succs: 27 31 ]
$r70 = <java.math.BigInteger: java.math.BigInteger ONE>;
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 27:
[preds: 26 ] [succs: 28 31 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70);
"->"Block 28:
[preds: 27 ] [succs: 29 31 ]
l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0);
";
    "Block 27:
[preds: 26 ] [succs: 28 31 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70);
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 28:
[preds: 27 ] [succs: 29 31 ]
l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0);
"->"Block 29:
[preds: 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64);
";
    "Block 28:
[preds: 27 ] [succs: 29 31 ]
l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0);
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64);
"->"Block 30:
[preds: 29 ] [succs: 33 37 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()];
";
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64);
"->"Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 30:
[preds: 29 ] [succs: 33 37 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()];
"->"Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 30:
[preds: 29 ] [succs: 33 37 ]
goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()];
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"->"Block 32:
[preds: 31 ] [succs: 33 37 ]
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29);
";
    "Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"->"Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 31:
[preds: 23 24 25 26 27 28 29 ] [succs: 32 33 37 ]
$r23 := @caughtexception;
r71 = $r23;
$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 32:
[preds: 31 ] [succs: 33 37 ]
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29);
"->"Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
";
    "Block 32:
[preds: 31 ] [succs: 33 37 ]
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29);
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"->"Block 34:
[preds: 33 ] [succs: 35 37 ]
l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0);
";
    "Block 33:
[preds: 30 31 32 ] [succs: 34 37 ]
r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>();
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0);
"->"Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64);
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0);
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64);
"->"Block 36:
[preds: 35 ] [succs: 39 53 ]
goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)];
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64);
"->"Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 36:
[preds: 35 ] [succs: 39 53 ]
goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)];
"->"Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 36:
[preds: 35 ] [succs: 39 53 ]
goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)];
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"->"Block 38:
[preds: 37 ] [succs: 39 53 ]
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22);
";
    "Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"->"Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 37:
[preds: 30 31 32 33 34 35 ] [succs: 38 39 53 ]
$r16 := @caughtexception;
r72 = $r16;
$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64);
if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 38:
[preds: 37 ] [succs: 39 53 ]
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22);
"->"Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
";
    "Block 38:
[preds: 37 ] [succs: 39 53 ]
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"->"Block 40:
[preds: 39 ] [succs: 41 53 ]
$l10 = (long) i9;
";
    "Block 39:
[preds: 36 37 38 ] [succs: 40 53 ]
i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 40:
[preds: 39 ] [succs: 41 53 ]
$l10 = (long) i9;
"->"Block 41:
[preds: 40 ] [succs: 42 53 ]
$b11 = $l10 cmp l0;
";
    "Block 40:
[preds: 39 ] [succs: 41 53 ]
$l10 = (long) i9;
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 41:
[preds: 40 ] [succs: 42 53 ]
$b11 = $l10 cmp l0;
"->"Block 42:
[preds: 41 ] [succs: 43 52 53 ]
if $b11 == 0 goto (branch);
";
    "Block 41:
[preds: 40 ] [succs: 42 53 ]
$b11 = $l10 cmp l0;
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 42:
[preds: 41 ] [succs: 43 52 53 ]
if $b11 == 0 goto (branch);
"->"Block 43:
[preds: 42 ] [succs: 44 53 ]
$r2 = new java.lang.StringBuilder;
";
    "Block 42:
[preds: 41 ] [succs: 43 52 53 ]
if $b11 == 0 goto (branch);
"->"Block 52:
[preds: 42 51 ] [succs: 55 ]
goto [?= return];
";
    "Block 42:
[preds: 41 ] [succs: 43 52 53 ]
if $b11 == 0 goto (branch);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 43:
[preds: 42 ] [succs: 44 53 ]
$r2 = new java.lang.StringBuilder;
"->"Block 44:
[preds: 43 ] [succs: 45 53 ]
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
";
    "Block 43:
[preds: 42 ] [succs: 44 53 ]
$r2 = new java.lang.StringBuilder;
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 44:
[preds: 43 ] [succs: 45 53 ]
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
"->"Block 45:
[preds: 44 ] [succs: 46 53 ]
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
";
    "Block 44:
[preds: 43 ] [succs: 45 53 ]
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 45:
[preds: 44 ] [succs: 46 53 ]
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
"->"Block 46:
[preds: 45 ] [succs: 47 53 ]
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
";
    "Block 45:
[preds: 44 ] [succs: 46 53 ]
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 46:
[preds: 45 ] [succs: 47 53 ]
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
"->"Block 47:
[preds: 46 ] [succs: 48 53 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \");
";
    "Block 46:
[preds: 45 ] [succs: 47 53 ]
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 47:
[preds: 46 ] [succs: 48 53 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \");
"->"Block 48:
[preds: 47 ] [succs: 49 53 ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
";
    "Block 47:
[preds: 46 ] [succs: 48 53 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \");
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 48:
[preds: 47 ] [succs: 49 53 ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
"->"Block 49:
[preds: 48 ] [succs: 50 53 ]
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \");
";
    "Block 48:
[preds: 47 ] [succs: 49 53 ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \");
"->"Block 50:
[preds: 49 ] [succs: 51 53 ]
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \");
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 51:
[preds: 50 ] [succs: 52 53 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8);
";
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8);
"->"Block 52:
[preds: 42 51 ] [succs: 55 ]
goto [?= return];
";
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8);
"->"Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
";
    "Block 52:
[preds: 42 51 ] [succs: 55 ]
goto [?= return];
"->"Block 55:
[preds: 52 53 54 ] [succs: ]
return;
";
    "Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
"->"Block 54:
[preds: 53 ] [succs: 55 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15);
";
    "Block 53:
[preds: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ] [succs: 54 55 ]
$r9 := @caughtexception;
r73 = $r9;
$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>();
if $i2 > 32 goto return;
"->"Block 55:
[preds: 52 53 54 ] [succs: ]
return;
";
    "Block 54:
[preds: 53 ] [succs: 55 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15);
"->"Block 55:
[preds: 52 53 54 ] [succs: ]
return;
";
}
