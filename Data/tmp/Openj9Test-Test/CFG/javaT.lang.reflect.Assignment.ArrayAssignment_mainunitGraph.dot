digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "r0 = newmultiarray (int)[5][5]"
    "r5 = r0"
    "r6 = newarray (java.lang.Object)[1]"
    "$r1 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>()"
    "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2)"
    "if $z0 != 0 goto return"
    "$r3 = new java.lang.Exception"
    "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"bad array assignment check in reflection\")"
    "throw $r3"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"r0 = newmultiarray (int)[5][5]";
    "r0 = newmultiarray (int)[5][5]"->"r5 = r0";
    "r5 = r0"->"r6 = newarray (java.lang.Object)[1]";
    "r6 = newarray (java.lang.Object)[1]"->"$r1 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>()";
    "$r1 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>()"->"$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()";
    "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2)";
    "$z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r3 = new java.lang.Exception";
    "if $z0 != 0 goto return"->"return";
    "$r3 = new java.lang.Exception"->"specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"bad array assignment check in reflection\")";
    "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"bad array assignment check in reflection\")"->"throw $r3";
}
