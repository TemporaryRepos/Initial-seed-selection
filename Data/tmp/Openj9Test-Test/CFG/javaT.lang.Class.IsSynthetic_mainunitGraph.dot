digraph "unitGraph" {
    "r16 := @parameter0: java.lang.String[]"
    "b9 = 0"
    "$r0 = new javaT.lang.Class.IsSynthetic$1"
    "specialinvoke $r0.<javaT.lang.Class.IsSynthetic$1: void <init>()>()"
    "r1 = $r0"
    "$i0 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic;\", 0)"
    "i10 = b9 + $i0"
    "$i1 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)"
    "i11 = i10 + $i1"
    "$i2 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$1LocalClass;\", 0)"
    "i12 = i11 + $i2"
    "$i3 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$NestedClass;\", 0)"
    "i13 = i12 + $i3"
    "$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"
    "$i4 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>($r2, 0)"
    "i14 = i13 + $i4"
    "$r3 = class \"LjavaT/lang/Class/Tricky;\""
    "r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()"
    "i5 = lengthof r4"
    "i15 = 0"
    "if i15 >= i5 goto (branch)"
    "r11 = r4[i15]"
    "r12 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()"
    "$i6 = lengthof r12"
    "if $i6 <= 0 goto i15 = i15 + 1"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Testing class that should be synthetic.\")"
    "r14 = r12"
    "i7 = lengthof r14"
    "i16 = 0"
    "if i16 >= i7 goto i15 = i15 + 1"
    "r15 = r14[i16]"
    "$i8 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(r15, 1)"
    "i14 = i14 + $i8"
    "i16 = i16 + 1"
    "goto [?= (branch)]"
    "i15 = i15 + 1"
    "if i14 == 0 goto return"
    "$r5 = new java.lang.RuntimeException"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed with \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failures.\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)"
    "throw $r5"
    "return"
    "r16 := @parameter0: java.lang.String[]"->"b9 = 0";
    "b9 = 0"->"$r0 = new javaT.lang.Class.IsSynthetic$1";
    "$r0 = new javaT.lang.Class.IsSynthetic$1"->"specialinvoke $r0.<javaT.lang.Class.IsSynthetic$1: void <init>()>()";
    "specialinvoke $r0.<javaT.lang.Class.IsSynthetic$1: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$i0 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic;\", 0)";
    "$i0 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic;\", 0)"->"i10 = b9 + $i0";
    "i10 = b9 + $i0"->"$i1 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)";
    "$i1 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)"->"i11 = i10 + $i1";
    "i11 = i10 + $i1"->"$i2 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$1LocalClass;\", 0)";
    "$i2 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$1LocalClass;\", 0)"->"i12 = i11 + $i2";
    "i12 = i11 + $i2"->"$i3 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$NestedClass;\", 0)";
    "$i3 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsSynthetic$NestedClass;\", 0)"->"i13 = i12 + $i3";
    "i13 = i12 + $i3"->"$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()";
    "$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"->"$i4 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>($r2, 0)";
    "$i4 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>($r2, 0)"->"i14 = i13 + $i4";
    "i14 = i13 + $i4"->"$r3 = class \"LjavaT/lang/Class/Tricky;\"";
    "$r3 = class \"LjavaT/lang/Class/Tricky;\""->"r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()";
    "r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()"->"i5 = lengthof r4";
    "i5 = lengthof r4"->"i15 = 0";
    "i15 = 0"->"if i15 >= i5 goto (branch)";
    "if i15 >= i5 goto (branch)"->"r11 = r4[i15]";
    "if i15 >= i5 goto (branch)"->"if i14 == 0 goto return";
    "r11 = r4[i15]"->"r12 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()";
    "r12 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()"->"$i6 = lengthof r12";
    "$i6 = lengthof r12"->"if $i6 <= 0 goto i15 = i15 + 1";
    "if $i6 <= 0 goto i15 = i15 + 1"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "if $i6 <= 0 goto i15 = i15 + 1"->"i15 = i15 + 1";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Testing class that should be synthetic.\")";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Testing class that should be synthetic.\")"->"r14 = r12";
    "r14 = r12"->"i7 = lengthof r14";
    "i7 = lengthof r14"->"i16 = 0";
    "i16 = 0"->"if i16 >= i7 goto i15 = i15 + 1";
    "if i16 >= i7 goto i15 = i15 + 1"->"r15 = r14[i16]";
    "if i16 >= i7 goto i15 = i15 + 1"->"i15 = i15 + 1";
    "r15 = r14[i16]"->"$i8 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(r15, 1)";
    "$i8 = staticinvoke <javaT.lang.Class.IsSynthetic: int test(java.lang.Class,boolean)>(r15, 1)"->"i14 = i14 + $i8";
    "i14 = i14 + $i8"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 >= i7 goto i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 >= i5 goto (branch)";
    "if i14 == 0 goto return"->"$r5 = new java.lang.RuntimeException";
    "if i14 == 0 goto return"->"return";
    "$r5 = new java.lang.RuntimeException"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed with \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed with \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failures.\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failures.\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)"->"throw $r5";
}
