digraph "unitGraph" {
    "r1 := @this: javaT.text.Collator.IteratorTest"
    "r0 := @parameter0: java.text.CollationElementIterator"
    "i4 = 100"
    "i5 = 0"
    "r2 = newarray (int)[i4]"
    "$i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()"
    "i1 = $i0"
    "if $i0 == -1 goto $i2 = lengthof r2"
    "if i5 != i4 goto $i3 = i5"
    "i4 = i4 * 2"
    "r3 = newarray (int)[i4]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i5)"
    "r2 = r3"
    "$i3 = i5"
    "i5 = i5 + 1"
    "r2[$i3] = i1"
    "goto [?= $i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()]"
    "$i2 = lengthof r2"
    "if $i2 <= i5 goto return r2"
    "r4 = newarray (int)[i5]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i5)"
    "r2 = r4"
    "return r2"
    "r1 := @this: javaT.text.Collator.IteratorTest"->"r0 := @parameter0: java.text.CollationElementIterator";
    "r0 := @parameter0: java.text.CollationElementIterator"->"i4 = 100";
    "i4 = 100"->"i5 = 0";
    "i5 = 0"->"r2 = newarray (int)[i4]";
    "r2 = newarray (int)[i4]"->"$i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()";
    "$i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()"->"i1 = $i0";
    "i1 = $i0"->"if $i0 == -1 goto $i2 = lengthof r2";
    "if $i0 == -1 goto $i2 = lengthof r2"->"if i5 != i4 goto $i3 = i5";
    "if $i0 == -1 goto $i2 = lengthof r2"->"$i2 = lengthof r2";
    "if i5 != i4 goto $i3 = i5"->"i4 = i4 * 2";
    "if i5 != i4 goto $i3 = i5"->"$i3 = i5";
    "i4 = i4 * 2"->"r3 = newarray (int)[i4]";
    "r3 = newarray (int)[i4]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i5)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i5)"->"r2 = r3";
    "r2 = r3"->"$i3 = i5";
    "$i3 = i5"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"r2[$i3] = i1";
    "r2[$i3] = i1"->"goto [?= $i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()]";
    "goto [?= $i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()]"->"$i0 = virtualinvoke r0.<java.text.CollationElementIterator: int next()>()";
    "$i2 = lengthof r2"->"if $i2 <= i5 goto return r2";
    "if $i2 <= i5 goto return r2"->"r4 = newarray (int)[i5]";
    "if $i2 <= i5 goto return r2"->"return r2";
    "r4 = newarray (int)[i5]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i5)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i5)"->"r2 = r4";
    "r2 = r4"->"return r2";
}
