digraph "unitGraph" {
    "r2 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"
    "r5 := @parameter0: java.lang.String"
    "r0 := @parameter1: java.lang.String"
    "r1 := @parameter2: java.lang.String"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)"
    "if $z0 != 0 goto return"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Parsing... unexpected Class returned.\n   original: \")"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   got:      \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   expected: \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r2.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r12)"
    "return"
    "r2 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"->"r5 := @parameter0: java.lang.String";
    "r5 := @parameter0: java.lang.String"->"r0 := @parameter1: java.lang.String";
    "r0 := @parameter1: java.lang.String"->"r1 := @parameter2: java.lang.String";
    "r1 := @parameter2: java.lang.String"->"$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r3 = new java.lang.StringBuilder";
    "if $z0 != 0 goto return"->"return";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Parsing... unexpected Class returned.\n   original: \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Parsing... unexpected Class returned.\n   original: \")"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   got:      \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   got:      \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   expected: \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   expected: \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r2.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r12)";
    "virtualinvoke r2.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r12)"->"return";
}
