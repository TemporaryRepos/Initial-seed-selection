digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.nio.channels.Channels.ReadOffset$1"
    "specialinvoke $r0.<javaT.nio.channels.Channels.ReadOffset$1: void <init>()>()"
    "r1 = $r0"
    "r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)"
    "r3 = newarray (byte)[3]"
    "virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 1)"
    "virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 2, 1)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new javaT.nio.channels.Channels.ReadOffset$1";
    "$r0 = new javaT.nio.channels.Channels.ReadOffset$1"->"specialinvoke $r0.<javaT.nio.channels.Channels.ReadOffset$1: void <init>()>()";
    "specialinvoke $r0.<javaT.nio.channels.Channels.ReadOffset$1: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)";
    "r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)"->"r3 = newarray (byte)[3]";
    "r3 = newarray (byte)[3]"->"virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 1)";
    "virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 1)"->"virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 2, 1)";
    "virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 2, 1)"->"return";
}
