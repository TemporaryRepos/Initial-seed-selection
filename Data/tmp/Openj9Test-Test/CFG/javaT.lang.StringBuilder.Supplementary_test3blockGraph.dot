digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i2 >= $i0 goto i3 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r22 = new java.lang.StringBuilder;
$r23 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r24 = $r23[i2];
specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
r38 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r25 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r26 = $r25[i2];
$r27 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();
$z1 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);
if $z1 != 0 goto $z2 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= $r28 = new java.lang.StringBuilder];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r30 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r31 = $r30[i2];
$r32 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r31);
$r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
$r36 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r37 = $r36[i2];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z2, $r35, r38, $r37);
i2 = i2 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
i3 = 0;
"
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$i1 = lengthof $r1;
if i3 >= $i1 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r2 = new java.lang.StringBuilder;
$r3 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r4 = $r3[i3];
$r5 = $r4[0];
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
r39 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r6 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r7 = $r6[i3];
$r8 = $r7[1];
$r9 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
if $z0 != 0 goto $z3 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z3 = 1;
goto [?= $r10 = new java.lang.StringBuilder];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z3 = 0;
"
    "Block 11:
[preds: 9 10 ] [succs: 7 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r12 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r13 = $r12[i3];
$r14 = $r13[0];
$r15 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r14);
$r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r19 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r20 = $r19[i3];
$r21 = $r20[1];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z3, $r18, r39, $r21);
i3 = i3 + 1;
goto [?= $r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>];
"
    "Block 12:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i2 >= $i0 goto i3 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i2 >= $i0 goto i3 = 0;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r22 = new java.lang.StringBuilder;
$r23 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r24 = $r23[i2];
specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
r38 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r25 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r26 = $r25[i2];
$r27 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();
$z1 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);
if $z1 != 0 goto $z2 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i2 >= $i0 goto i3 = 0;
"->"Block 6:
[preds: 1 ] [succs: 7 ]
i3 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r22 = new java.lang.StringBuilder;
$r23 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r24 = $r23[i2];
specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
r38 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r25 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r26 = $r25[i2];
$r27 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();
$z1 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);
if $z1 != 0 goto $z2 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= $r28 = new java.lang.StringBuilder];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r22 = new java.lang.StringBuilder;
$r23 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r24 = $r23[i2];
specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
r38 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r25 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r26 = $r25[i2];
$r27 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();
$z1 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);
if $z1 != 0 goto $z2 = 0;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= $r28 = new java.lang.StringBuilder];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r30 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r31 = $r30[i2];
$r32 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r31);
$r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
$r36 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r37 = $r36[i2];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z2, $r35, r38, $r37);
i2 = i2 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r30 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r31 = $r30[i2];
$r32 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r31);
$r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
$r36 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r37 = $r36[i2];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z2, $r35, r38, $r37);
i2 = i2 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r30 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$r31 = $r30[i2];
$r32 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r31);
$r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
$r36 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] golden3>;
$r37 = $r36[i2];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z2, $r35, r38, $r37);
i2 = i2 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i2 >= $i0 goto i3 = 0;
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
i3 = 0;
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$i1 = lengthof $r1;
if i3 >= $i1 goto return;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$i1 = lengthof $r1;
if i3 >= $i1 goto return;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r2 = new java.lang.StringBuilder;
$r3 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r4 = $r3[i3];
$r5 = $r4[0];
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
r39 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r6 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r7 = $r6[i3];
$r8 = $r7[1];
$r9 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
if $z0 != 0 goto $z3 = 0;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$i1 = lengthof $r1;
if i3 >= $i1 goto return;
"->"Block 12:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r2 = new java.lang.StringBuilder;
$r3 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r4 = $r3[i3];
$r5 = $r4[0];
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
r39 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r6 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r7 = $r6[i3];
$r8 = $r7[1];
$r9 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
if $z0 != 0 goto $z3 = 0;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
$z3 = 1;
goto [?= $r10 = new java.lang.StringBuilder];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r2 = new java.lang.StringBuilder;
$r3 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r4 = $r3[i3];
$r5 = $r4[0];
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
r39 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r6 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r7 = $r6[i3];
$r8 = $r7[1];
$r9 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
if $z0 != 0 goto $z3 = 0;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
$z3 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z3 = 1;
goto [?= $r10 = new java.lang.StringBuilder];
"->"Block 11:
[preds: 9 10 ] [succs: 7 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r12 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r13 = $r12[i3];
$r14 = $r13[0];
$r15 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r14);
$r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r19 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r20 = $r19[i3];
$r21 = $r20[1];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z3, $r18, r39, $r21);
i3 = i3 + 1;
goto [?= $r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>];
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z3 = 0;
"->"Block 11:
[preds: 9 10 ] [succs: 7 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r12 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r13 = $r12[i3];
$r14 = $r13[0];
$r15 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r14);
$r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r19 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r20 = $r19[i3];
$r21 = $r20[1];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z3, $r18, r39, $r21);
i3 = i3 + 1;
goto [?= $r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>];
";
    "Block 11:
[preds: 9 10 ] [succs: 7 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"reverse() for <\");
$r12 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r13 = $r12[i3];
$r14 = $r13[0];
$r15 = staticinvoke <javaT.lang.StringBuilder.Supplementary: java.lang.String toHexString(java.lang.String)>($r14);
$r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r19 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$r20 = $r19[i3];
$r21 = $r20[1];
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,java.lang.StringBuilder,java.lang.String)>($z3, $r18, r39, $r21);
i3 = i3 + 1;
goto [?= $r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>];
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[][] testdata1>;
$i1 = lengthof $r1;
if i3 >= $i1 goto return;
";
}
