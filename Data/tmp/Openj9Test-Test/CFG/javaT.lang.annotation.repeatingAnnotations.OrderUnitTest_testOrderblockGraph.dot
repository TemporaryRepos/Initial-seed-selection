digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
$r2 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Foo;\");
r3 = (javaT.lang.annotation.repeatingAnnotations.Foo[]) $r2;
$r4 = r1[0];
$z0 = $r4 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r5 = r3[0];
$z1 = interfaceinvoke $r5.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z0 != $z1 goto $r6 = new java.lang.RuntimeException;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = r1[1];
$z2 = $r7 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r8 = r3[1];
$z3 = interfaceinvoke $r8.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z2 == $z3 goto return;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Order of directly / indirectly present annotations from getDeclaredAnnotationsByType does not match order from getDeclaredAnnotations.\");
throw $r6;
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
$r2 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Foo;\");
r3 = (javaT.lang.annotation.repeatingAnnotations.Foo[]) $r2;
$r4 = r1[0];
$z0 = $r4 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r5 = r3[0];
$z1 = interfaceinvoke $r5.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z0 != $z1 goto $r6 = new java.lang.RuntimeException;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = r1[1];
$z2 = $r7 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r8 = r3[1];
$z3 = interfaceinvoke $r8.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z2 == $z3 goto return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
$r2 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Foo;\");
r3 = (javaT.lang.annotation.repeatingAnnotations.Foo[]) $r2;
$r4 = r1[0];
$z0 = $r4 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r5 = r3[0];
$z1 = interfaceinvoke $r5.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z0 != $z1 goto $r6 = new java.lang.RuntimeException;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Order of directly / indirectly present annotations from getDeclaredAnnotationsByType does not match order from getDeclaredAnnotations.\");
throw $r6;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = r1[1];
$z2 = $r7 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r8 = r3[1];
$z3 = interfaceinvoke $r8.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z2 == $z3 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Order of directly / indirectly present annotations from getDeclaredAnnotationsByType does not match order from getDeclaredAnnotations.\");
throw $r6;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = r1[1];
$z2 = $r7 instanceof javaT.lang.annotation.repeatingAnnotations.Foo;
$r8 = r3[1];
$z3 = interfaceinvoke $r8.<javaT.lang.'annotation'.repeatingAnnotations.Foo: boolean isDirect()>();
if $z2 == $z3 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
}
