digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.util.Hashtable.ReadObject"
    "specialinvoke $r0.<javaT.util.Hashtable.ReadObject: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r1.<javaT.util.Hashtable.ReadObject: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"value\")"
    "$r3 = staticinvoke <javaT.util.Hashtable.ReadObject: java.lang.Object copyObject(java.lang.Object)>(r1)"
    "r4 = (javaT.util.Hashtable.ReadObject) $r3"
    "$r5 = virtualinvoke r4.<javaT.util.Hashtable.ReadObject: java.lang.Object get(java.lang.Object)>(\"key\")"
    "r6 = (java.lang.String) $r5"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = new javaT.util.Hashtable.ReadObject";
    "$r0 = new javaT.util.Hashtable.ReadObject"->"specialinvoke $r0.<javaT.util.Hashtable.ReadObject: void <init>()>()";
    "specialinvoke $r0.<javaT.util.Hashtable.ReadObject: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r1.<javaT.util.Hashtable.ReadObject: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"value\")";
    "virtualinvoke r1.<javaT.util.Hashtable.ReadObject: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"value\")"->"$r3 = staticinvoke <javaT.util.Hashtable.ReadObject: java.lang.Object copyObject(java.lang.Object)>(r1)";
    "$r3 = staticinvoke <javaT.util.Hashtable.ReadObject: java.lang.Object copyObject(java.lang.Object)>(r1)"->"r4 = (javaT.util.Hashtable.ReadObject) $r3";
    "r4 = (javaT.util.Hashtable.ReadObject) $r3"->"$r5 = virtualinvoke r4.<javaT.util.Hashtable.ReadObject: java.lang.Object get(java.lang.Object)>(\"key\")";
    "$r5 = virtualinvoke r4.<javaT.util.Hashtable.ReadObject: java.lang.Object get(java.lang.Object)>(\"key\")"->"r6 = (java.lang.String) $r5";
    "r6 = (java.lang.String) $r5"->"return";
}
