digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r5 := @caughtexception;
r6 = $r5;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
if $z0 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ListIterator.hasNext() returns true for an empty List after ListIterator.previous().\");
throw $r4;
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r5 := @caughtexception;
r6 = $r5;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r5 := @caughtexception;
r6 = $r5;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>()];
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r5 := @caughtexception;
r6 = $r5;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ListIterator.hasNext() returns true for an empty List after ListIterator.previous().\");
throw $r4;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
}
