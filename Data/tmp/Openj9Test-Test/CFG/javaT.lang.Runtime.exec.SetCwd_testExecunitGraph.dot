digraph "unitGraph" {
    "r17 := @parameter0: java.lang.String"
    "r9 := @parameter1: java.lang.String[]"
    "z2 := @parameter2: boolean"
    "$r0 = new java.io.File"
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\".\")"
    "r1 = $r0"
    "r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()"
    "r3 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>()"
    "i1 = 0"
    "$i0 = lengthof r2"
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "r5 = r2[i1]"
    "$z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()"
    "if $z0 == 0 goto i1 = i1 + 1"
    "$r6 = new java.io.File"
    "specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, \"SetCwd.class\")"
    "$z1 = virtualinvoke $r6.<java.io.File: boolean exists()>()"
    "if $z1 == 0 goto i1 = i1 + 1"
    "r7 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>()"
    "if z2 == 0 goto $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "r18 = virtualinvoke $r16.<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>(r17, null, r5)"
    "goto [?= $r10 = new java.io.BufferedReader]"
    "$r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "r18 = virtualinvoke $r8.<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>(r9, null, r5)"
    "$r10 = new java.io.BufferedReader"
    "$r11 = new java.io.InputStreamReader"
    "$r12 = virtualinvoke r18.<java.lang.Process: java.io.InputStream getInputStream()>()"
    "specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r12)"
    "specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11)"
    "r13 = $r10"
    "r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>()"
    "$z3 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>(r7)"
    "if $z3 != 0 goto virtualinvoke r18.<java.lang.Process: int waitFor()>()"
    "$r15 = new java.lang.Exception"
    "specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(\"inconsistent directory after exec\")"
    "throw $r15"
    "virtualinvoke r18.<java.lang.Process: int waitFor()>()"
    "i1 = i1 + 1"
    "goto [?= $i0 = lengthof r2]"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r3)"
    "return"
    "r17 := @parameter0: java.lang.String"->"r9 := @parameter1: java.lang.String[]";
    "r9 := @parameter1: java.lang.String[]"->"z2 := @parameter2: boolean";
    "z2 := @parameter2: boolean"->"$r0 = new java.io.File";
    "$r0 = new java.io.File"->"specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\".\")";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\".\")"->"r1 = $r0";
    "r1 = $r0"->"r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()";
    "r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()"->"r3 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>()";
    "r3 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>()"->"i1 = 0";
    "i1 = 0"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"r5 = r2[i1]";
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "r5 = r2[i1]"->"$z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()";
    "$z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()"->"if $z0 == 0 goto i1 = i1 + 1";
    "if $z0 == 0 goto i1 = i1 + 1"->"$r6 = new java.io.File";
    "if $z0 == 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "$r6 = new java.io.File"->"specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, \"SetCwd.class\")";
    "specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, \"SetCwd.class\")"->"$z1 = virtualinvoke $r6.<java.io.File: boolean exists()>()";
    "$z1 = virtualinvoke $r6.<java.io.File: boolean exists()>()"->"if $z1 == 0 goto i1 = i1 + 1";
    "if $z1 == 0 goto i1 = i1 + 1"->"r7 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>()";
    "if $z1 == 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "r7 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>()"->"if z2 == 0 goto $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "if z2 == 0 goto $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "if z2 == 0 goto $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"r18 = virtualinvoke $r16.<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>(r17, null, r5)";
    "r18 = virtualinvoke $r16.<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>(r17, null, r5)"->"goto [?= $r10 = new java.io.BufferedReader]";
    "goto [?= $r10 = new java.io.BufferedReader]"->"$r10 = new java.io.BufferedReader";
    "$r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"r18 = virtualinvoke $r8.<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>(r9, null, r5)";
    "r18 = virtualinvoke $r8.<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>(r9, null, r5)"->"$r10 = new java.io.BufferedReader";
    "$r10 = new java.io.BufferedReader"->"$r11 = new java.io.InputStreamReader";
    "$r11 = new java.io.InputStreamReader"->"$r12 = virtualinvoke r18.<java.lang.Process: java.io.InputStream getInputStream()>()";
    "$r12 = virtualinvoke r18.<java.lang.Process: java.io.InputStream getInputStream()>()"->"specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r12)";
    "specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r12)"->"specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11)";
    "specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11)"->"r13 = $r10";
    "r13 = $r10"->"r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>()";
    "r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>()"->"$z3 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>(r7)";
    "$z3 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>(r7)"->"if $z3 != 0 goto virtualinvoke r18.<java.lang.Process: int waitFor()>()";
    "if $z3 != 0 goto virtualinvoke r18.<java.lang.Process: int waitFor()>()"->"$r15 = new java.lang.Exception";
    "if $z3 != 0 goto virtualinvoke r18.<java.lang.Process: int waitFor()>()"->"virtualinvoke r18.<java.lang.Process: int waitFor()>()";
    "$r15 = new java.lang.Exception"->"specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(\"inconsistent directory after exec\")";
    "specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(\"inconsistent directory after exec\")"->"throw $r15";
    "virtualinvoke r18.<java.lang.Process: int waitFor()>()"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= $i0 = lengthof r2]";
    "goto [?= $i0 = lengthof r2]"->"$i0 = lengthof r2";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r3)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r3)"->"return";
}
