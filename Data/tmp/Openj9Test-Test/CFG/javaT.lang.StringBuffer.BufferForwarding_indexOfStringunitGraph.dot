digraph "unitGraph" {
    "r2 := @this: javaT.lang.StringBuffer.BufferForwarding"
    "$r0 = new java.lang.StringBuffer"
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"xyz\")"
    "r1 = $r0"
    "$i0 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"y\")"
    "virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i0, 1)"
    "$i1 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"not found\")"
    "virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i1, -1)"
    "return"
    "r2 := @this: javaT.lang.StringBuffer.BufferForwarding"->"$r0 = new java.lang.StringBuffer";
    "$r0 = new java.lang.StringBuffer"->"specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"xyz\")";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"xyz\")"->"r1 = $r0";
    "r1 = $r0"->"$i0 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"y\")";
    "$i0 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"y\")"->"virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i0, 1)";
    "virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i0, 1)"->"$i1 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"not found\")";
    "$i1 = virtualinvoke r1.<java.lang.StringBuffer: int indexOf(java.lang.String)>(\"not found\")"->"virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i1, -1)";
    "virtualinvoke r2.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(int,int)>($i1, -1)"->"return";
}
