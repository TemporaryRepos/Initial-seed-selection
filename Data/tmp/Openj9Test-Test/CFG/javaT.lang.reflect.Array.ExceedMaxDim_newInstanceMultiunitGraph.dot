digraph "unitGraph" {
    "r8 = staticinvoke <javaT.lang.reflect.Array.ExceedMaxDim: java.lang.Object getArrayOf256Dimensions()>()"
    "$r0 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()"
    "$r1 = newarray (int)[2]"
    "$r1[0] = 1"
    "$r1[1] = 1"
    "r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r0, $r1)"
    "$r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>()"
    "$r3 = newarray (int)[1]"
    "$r3[0] = 1"
    "staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r3)"
    "goto [?= $r4 = new java.lang.Exception]"
    "$r5 := @caughtexception"
    "r6 = $r5"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"success: newInstanceMulti test\")"
    "return"
    "$r4 = new java.lang.Exception"
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"MultiNewArray allowed dimensions > MAXDIM\")"
    "throw $r4"
    "r8 = staticinvoke <javaT.lang.reflect.Array.ExceedMaxDim: java.lang.Object getArrayOf256Dimensions()>()"->"$r0 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()";
    "r8 = staticinvoke <javaT.lang.reflect.Array.ExceedMaxDim: java.lang.Object getArrayOf256Dimensions()>()"->"$r5 := @caughtexception";
    "$r0 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()"->"$r1 = newarray (int)[2]";
    "$r0 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()"->"$r5 := @caughtexception";
    "$r1 = newarray (int)[2]"->"$r1[0] = 1";
    "$r1 = newarray (int)[2]"->"$r5 := @caughtexception";
    "$r1[0] = 1"->"$r1[1] = 1";
    "$r1[0] = 1"->"$r5 := @caughtexception";
    "$r1[1] = 1"->"r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r0, $r1)";
    "$r1[1] = 1"->"$r5 := @caughtexception";
    "r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r0, $r1)"->"$r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>()";
    "r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r0, $r1)"->"$r5 := @caughtexception";
    "$r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>()"->"$r3 = newarray (int)[1]";
    "$r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>()"->"$r5 := @caughtexception";
    "$r3 = newarray (int)[1]"->"$r3[0] = 1";
    "$r3 = newarray (int)[1]"->"$r5 := @caughtexception";
    "$r3[0] = 1"->"staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r3)";
    "$r3[0] = 1"->"$r5 := @caughtexception";
    "staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r3)"->"goto [?= $r4 = new java.lang.Exception]";
    "staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r3)"->"$r5 := @caughtexception";
    "goto [?= $r4 = new java.lang.Exception]"->"$r4 = new java.lang.Exception";
    "$r5 := @caughtexception"->"r6 = $r5";
    "r6 = $r5"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"success: newInstanceMulti test\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"success: newInstanceMulti test\")"->"return";
    "$r4 = new java.lang.Exception"->"specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"MultiNewArray allowed dimensions > MAXDIM\")";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"MultiNewArray allowed dimensions > MAXDIM\")"->"throw $r4";
}
