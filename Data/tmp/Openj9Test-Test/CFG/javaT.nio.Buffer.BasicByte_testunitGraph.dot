digraph "unitGraph" {
    "staticinvoke <javaT.nio.Buffer.BasicByte: void testAllocate()>()"
    "$r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(7168)"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r0, 0)"
    "$r1 = newarray (byte)[7168]"
    "$r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, 0, 7168)"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r2, 0)"
    "$r3 = newarray (byte)[1024]"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(byte[])>($r3)"
    "r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(7168)"
    "virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)"
    "$i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()"
    "$i1 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>()"
    "if $i0 >= $i1 goto staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)"
    "$b2 = virtualinvoke r4.<java.nio.ByteBuffer: byte get()>()"
    "$l3 = (long) $b2"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void ck(java.nio.Buffer,long,long)>(r4, $l3, 0L)"
    "goto [?= $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()]"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)"
    "$r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10)"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void callReset(java.nio.ByteBuffer)>($r6)"
    "return"
    "staticinvoke <javaT.nio.Buffer.BasicByte: void testAllocate()>()"->"$r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(7168)";
    "$r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(7168)"->"staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r0, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r0, 0)"->"$r1 = newarray (byte)[7168]";
    "$r1 = newarray (byte)[7168]"->"$r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, 0, 7168)";
    "$r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, 0, 7168)"->"staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r2, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, $r2, 0)"->"$r3 = newarray (byte)[1024]";
    "$r3 = newarray (byte)[1024]"->"staticinvoke <javaT.nio.Buffer.BasicByte: void test(byte[])>($r3)";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(byte[])>($r3)"->"r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(7168)";
    "r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(7168)"->"virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)";
    "virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)"->"$i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()";
    "$i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()"->"$i1 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>()";
    "$i1 = virtualinvoke r4.<java.nio.ByteBuffer: int limit()>()"->"if $i0 >= $i1 goto staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)";
    "if $i0 >= $i1 goto staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)"->"$b2 = virtualinvoke r4.<java.nio.ByteBuffer: byte get()>()";
    "if $i0 >= $i1 goto staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)"->"staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)";
    "$b2 = virtualinvoke r4.<java.nio.ByteBuffer: byte get()>()"->"$l3 = (long) $b2";
    "$l3 = (long) $b2"->"staticinvoke <javaT.nio.Buffer.BasicByte: void ck(java.nio.Buffer,long,long)>(r4, $l3, 0L)";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void ck(java.nio.Buffer,long,long)>(r4, $l3, 0L)"->"goto [?= $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()]";
    "goto [?= $i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()]"->"$i0 = virtualinvoke r4.<java.nio.ByteBuffer: int position()>()";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void test(int,java.nio.ByteBuffer,boolean)>(0, r4, 1)"->"$r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10)";
    "$r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10)"->"staticinvoke <javaT.nio.Buffer.BasicByte: void callReset(java.nio.ByteBuffer)>($r6)";
    "staticinvoke <javaT.nio.Buffer.BasicByte: void callReset(java.nio.ByteBuffer)>($r6)"->"return";
}
