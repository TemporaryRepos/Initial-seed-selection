digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.Type;
r2 := @parameter1: java.lang.String;
if r0 == null goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 5 ]
$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);
if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0);
goto [?= return];
"
    "Block 5:
[preds: 1 3 ] [succs: ]
$r4 := @caughtexception;
r5 = $r4;
$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0);
throw r5;
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.Type;
r2 := @parameter1: java.lang.String;
if r0 == null goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 3 5 ]
$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);
if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.Type;
r2 := @parameter1: java.lang.String;
if r0 == null goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 5 ]
$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);
if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 5 ]
$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);
if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 5 ]
$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);
if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"->"Block 5:
[preds: 1 3 ] [succs: ]
$r4 := @caughtexception;
r5 = $r4;
$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0);
throw r5;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0);
goto [?= return];
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2);
"->"Block 5:
[preds: 1 3 ] [succs: ]
$r4 := @caughtexception;
r5 = $r4;
$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0);
throw r5;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>;
interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0);
goto [?= return];
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
}
