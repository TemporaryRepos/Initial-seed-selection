digraph "unitGraph" {
    "r0 := @parameter0: java.nio.CharBuffer"
    "i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()"
    "$i1 = i0 + 7"
    "r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>($i1)"
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>(7)"
    "i5 = 0"
    "if i5 >= i0 goto virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()"
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i5)"
    "$i3 = (int) $l2"
    "$c4 = (char) $i3"
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c4)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>(r2)"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()"
    "return"
    "r0 := @parameter0: java.nio.CharBuffer"->"i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()"->"$i1 = i0 + 7";
    "$i1 = i0 + 7"->"r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>($i1)";
    "r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>($i1)"->"virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>(7)";
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>(7)"->"i5 = 0";
    "i5 = 0"->"if i5 >= i0 goto virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()";
    "if i5 >= i0 goto virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()"->"$l2 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i5)";
    "if i5 >= i0 goto virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()"->"virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()";
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i5)"->"$i3 = (int) $l2";
    "$i3 = (int) $l2"->"$c4 = (char) $i3";
    "$c4 = (char) $i3"->"virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c4)";
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c4)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i0 goto virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>()"->"virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>(7)";
    "virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>(7)"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>(r2)";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>(r2)"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()"->"return";
}
