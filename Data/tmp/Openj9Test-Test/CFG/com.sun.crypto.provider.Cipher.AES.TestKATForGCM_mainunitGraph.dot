digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM"
    "specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>()"
    "r1 = $r0"
    "$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>"
    "$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2)"
    "if $z0 == 0 goto return"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM";
    "$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM"->"specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>()";
    "specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>";
    "$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>"->"$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2)";
    "$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2)"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto return"->"return";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")"->"return";
}
