digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @this: javaT.lang.Class.ArrayMethods;
$r0 = newmultiarray (java.lang.Integer)[0][0][0];
$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
r3 = r2;
i0 = lengthof r3;
i3 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i3];
$r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke $r5.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(\"clone\");
if $z0 == 0 goto i3 = i3 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r6.<javaT.lang.Class.ArrayMethods: int failed>;
$i2 = $i1 + 1;
r6.<javaT.lang.Class.ArrayMethods: int failed> = $i2;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"getMethods() Should not find clone()\");
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @this: javaT.lang.Class.ArrayMethods;
$r0 = newmultiarray (java.lang.Integer)[0][0][0];
$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
r3 = r2;
i0 = lengthof r3;
i3 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= i0 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i3];
$r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke $r5.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(\"clone\");
if $z0 == 0 goto i3 = i3 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= i0 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i3];
$r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke $r5.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(\"clone\");
if $z0 == 0 goto i3 = i3 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r6.<javaT.lang.Class.ArrayMethods: int failed>;
$i2 = $i1 + 1;
r6.<javaT.lang.Class.ArrayMethods: int failed> = $i2;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"getMethods() Should not find clone()\");
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i3];
$r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke $r5.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(\"clone\");
if $z0 == 0 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r6.<javaT.lang.Class.ArrayMethods: int failed>;
$i2 = $i1 + 1;
r6.<javaT.lang.Class.ArrayMethods: int failed> = $i2;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"getMethods() Should not find clone()\");
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= i0 goto return;
";
}
