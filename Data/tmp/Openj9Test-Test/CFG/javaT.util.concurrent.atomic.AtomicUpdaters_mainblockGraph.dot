digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
z7 = 0;
r66 = r0;
i2 = lengthof r66;
i3 = 0;
"
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i3 >= i2 goto staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r67 = r66[i3];
$r32 = \"-v\";
$z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z1 == 0 goto $r33 = \"UseSM\";
"
    "Block 3:
[preds: 2 ] [succs: 9 ]
<javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose> = 1;
goto [?= i3 = i3 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 8 ]
$r33 = \"UseSM\";
$z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z2 == 0 goto $r34 = new java.lang.IllegalArgumentException;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r68 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if r68 == null goto $r39 = new java.lang.SecurityManager;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r40 = new java.lang.RuntimeException;
specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"No security manager should initially be installed\");
throw $r40;
"
    "Block 7:
[preds: 5 ] [succs: 9 ]
$r39 = new java.lang.SecurityManager;
specialinvoke $r39.<java.lang.SecurityManager: void <init>()>();
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r39);
z7 = 1;
goto [?= i3 = i3 + 1];
"
    "Block 8:
[preds: 4 ] [succs: ]
$r34 = new java.lang.IllegalArgumentException;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected option: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);
throw $r34;
"
    "Block 9:
[preds: 3 7 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 1 ] [succs: 11 12 ]
staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
i4 = 0;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = newarray (java.lang.Object)[1];
if z7 == 0 goto $r69 = \"out\";
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
$r69 = \"\";
goto [?= $r1[0] = $r69];
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
$r69 = \"out\";
"
    "Block 13:
[preds: 11 12 ] [succs: 14 ]
$r1[0] = $r69;
virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Testing with%s a SecurityManager present\n\", $r1);
r70 = <javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests>;
i5 = lengthof r70;
i6 = 0;
"
    "Block 14:
[preds: 13 74 ] [succs: 15 75 ]
if i6 >= i5 goto (branch);
"
    "Block 15:
[preds: 14 ] [succs: 16 29 ]
r71 = r70[i6];
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
r72 = null;
r73 = null;
r9 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.Class clazz>;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\" - testing getDeclaredField\");
"
    "Block 16:
[preds: 15 ] [succs: 17 29 ]
$r11 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"
    "Block 17:
[preds: 16 ] [succs: 18 29 ]
virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r11);
"
    "Block 18:
[preds: 17 ] [succs: 19 29 ]
$z0 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
"
    "Block 19:
[preds: 18 ] [succs: 20 28 29 ]
if $z0 != 0 goto (branch);
"
    "Block 20:
[preds: 19 ] [succs: 21 29 ]
$r27 = new java.lang.Error;
"
    "Block 21:
[preds: 20 ] [succs: 22 29 ]
$r28 = new java.lang.StringBuilder;
"
    "Block 22:
[preds: 21 ] [succs: 23 29 ]
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
"
    "Block 23:
[preds: 22 ] [succs: 24 29 ]
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access: \");
"
    "Block 24:
[preds: 23 ] [succs: 25 29 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r27.<java.lang.Error: void <init>(java.lang.String)>($r31);
"
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r72 = $r27;
"
    "Block 28:
[preds: 19 27 ] [succs: 33 ]
goto [?= (branch)];
"
    "Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"
    "Block 30:
[preds: 29 ] [succs: 33 ]
$r61 = new java.lang.Error;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access failure: \");
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r61.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r65, r74);
r72 = $r61;
goto [?= (branch)];
"
    "Block 31:
[preds: 29 ] [succs: 32 33 ]
$z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z6 == 0 goto (branch);
"
    "Block 32:
[preds: 31 ] [succs: 33 ]
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected reflection exception: \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r60 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r74.<java.security.AccessControlException: void printStackTrace(java.io.PrintStream)>($r60);
"
    "Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"
    "Block 34:
[preds: 33 ] [succs: 35 65 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r72.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r26);
"
    "Block 35:
[preds: 33 34 ] [succs: 36 65 ]
$r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"
    "Block 36:
[preds: 35 ] [succs: 37 65 ]
$r12 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE type>;
"
    "Block 37:
[preds: 36 ] [succs: 38 65 ]
$i0 = virtualinvoke $r12.<javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: int ordinal()>();
"
    "Block 38:
[preds: 37 ] [succs: 39 65 ]
$i1 = $r13[$i0];
"
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"
    "Block 40:
[preds: 39 ] [succs: 41 65 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 41:
[preds: 40 ] [succs: 42 65 ]
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicIntegerFieldUpdater\");
"
    "Block 42:
[preds: 41 ] [succs: 43 65 ]
$r25 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"
    "Block 43:
[preds: 42 ] [succs: 44 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r25);
"
    "Block 44:
[preds: 43 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"
    "Block 45:
[preds: 39 ] [succs: 46 65 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 46:
[preds: 45 ] [succs: 47 65 ]
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicLongFieldUpdater\");
"
    "Block 47:
[preds: 46 ] [succs: 48 65 ]
$r23 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"
    "Block 48:
[preds: 47 ] [succs: 49 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r23);
"
    "Block 49:
[preds: 48 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"
    "Block 50:
[preds: 39 ] [succs: 51 65 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 51:
[preds: 50 ] [succs: 52 65 ]
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicReferenceFieldUpdater\");
"
    "Block 52:
[preds: 51 ] [succs: 53 65 ]
$r15 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"
    "Block 53:
[preds: 52 ] [succs: 54 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(r9, class \"Ljava/lang/Object;\", $r15);
"
    "Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
"
    "Block 55:
[preds: 54 ] [succs: 56 64 65 ]
if $z8 != 0 goto (branch);
"
    "Block 56:
[preds: 55 ] [succs: 57 65 ]
$r17 = new java.lang.Error;
"
    "Block 57:
[preds: 56 ] [succs: 58 65 ]
$r18 = new java.lang.StringBuilder;
"
    "Block 58:
[preds: 57 ] [succs: 59 65 ]
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
"
    "Block 59:
[preds: 58 ] [succs: 60 65 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access: \");
"
    "Block 60:
[preds: 59 ] [succs: 61 65 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"
    "Block 61:
[preds: 60 ] [succs: 62 65 ]
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 62:
[preds: 61 ] [succs: 63 65 ]
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>($r21);
"
    "Block 63:
[preds: 62 ] [succs: 64 65 ]
r73 = $r17;
"
    "Block 64:
[preds: 55 63 ] [succs: 69 ]
goto [?= (branch)];
"
    "Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"
    "Block 66:
[preds: 65 ] [succs: 69 ]
$r49 = new java.lang.Error;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access failure: \");
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r49.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r53, r42);
r73 = $r49;
goto [?= (branch)];
"
    "Block 67:
[preds: 65 ] [succs: 68 69 ]
$z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z4 == 0 goto (branch);
"
    "Block 68:
[preds: 67 ] [succs: 69 ]
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = new java.lang.StringBuilder;
specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected updater exception: \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r48 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r42.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r48);
"
    "Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
"
    "Block 70:
[preds: 69 ] [succs: 71 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r73.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r16);
"
    "Block 71:
[preds: 69 70 ] [succs: 72 73 ]
if r73 != null goto i4 = i4 + 1;
"
    "Block 72:
[preds: 71 ] [succs: 73 74 ]
if r72 == null goto i6 = i6 + 1;
"
    "Block 73:
[preds: 71 72 ] [succs: 74 ]
i4 = i4 + 1;
"
    "Block 74:
[preds: 72 73 ] [succs: 14 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 75:
[preds: 14 ] [succs: 76 77 ]
if i4 <= 0 goto return;
"
    "Block 76:
[preds: 75 ] [succs: ]
$r3 = new java.lang.Error;
specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed - see previous stacktraces\");
throw $r3;
"
    "Block 77:
[preds: 75 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
z7 = 0;
r66 = r0;
i2 = lengthof r66;
i3 = 0;
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i3 >= i2 goto staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i3 >= i2 goto staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r67 = r66[i3];
$r32 = \"-v\";
$z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z1 == 0 goto $r33 = \"UseSM\";
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i3 >= i2 goto staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
"->"Block 10:
[preds: 1 ] [succs: 11 12 ]
staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
i4 = 0;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = newarray (java.lang.Object)[1];
if z7 == 0 goto $r69 = \"out\";
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r67 = r66[i3];
$r32 = \"-v\";
$z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z1 == 0 goto $r33 = \"UseSM\";
"->"Block 3:
[preds: 2 ] [succs: 9 ]
<javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose> = 1;
goto [?= i3 = i3 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r67 = r66[i3];
$r32 = \"-v\";
$z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z1 == 0 goto $r33 = \"UseSM\";
"->"Block 4:
[preds: 2 ] [succs: 5 8 ]
$r33 = \"UseSM\";
$z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z2 == 0 goto $r34 = new java.lang.IllegalArgumentException;
";
    "Block 3:
[preds: 2 ] [succs: 9 ]
<javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose> = 1;
goto [?= i3 = i3 + 1];
"->"Block 9:
[preds: 3 7 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 8 ]
$r33 = \"UseSM\";
$z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z2 == 0 goto $r34 = new java.lang.IllegalArgumentException;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
r68 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if r68 == null goto $r39 = new java.lang.SecurityManager;
";
    "Block 4:
[preds: 2 ] [succs: 5 8 ]
$r33 = \"UseSM\";
$z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r67);
if $z2 == 0 goto $r34 = new java.lang.IllegalArgumentException;
"->"Block 8:
[preds: 4 ] [succs: ]
$r34 = new java.lang.IllegalArgumentException;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected option: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);
throw $r34;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r68 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if r68 == null goto $r39 = new java.lang.SecurityManager;
"->"Block 6:
[preds: 5 ] [succs: ]
$r40 = new java.lang.RuntimeException;
specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"No security manager should initially be installed\");
throw $r40;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r68 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if r68 == null goto $r39 = new java.lang.SecurityManager;
"->"Block 7:
[preds: 5 ] [succs: 9 ]
$r39 = new java.lang.SecurityManager;
specialinvoke $r39.<java.lang.SecurityManager: void <init>()>();
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r39);
z7 = 1;
goto [?= i3 = i3 + 1];
";
    "Block 7:
[preds: 5 ] [succs: 9 ]
$r39 = new java.lang.SecurityManager;
specialinvoke $r39.<java.lang.SecurityManager: void <init>()>();
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r39);
z7 = 1;
goto [?= i3 = i3 + 1];
"->"Block 9:
[preds: 3 7 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 3 7 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i3 >= i2 goto staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
";
    "Block 10:
[preds: 1 ] [succs: 11 12 ]
staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
i4 = 0;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = newarray (java.lang.Object)[1];
if z7 == 0 goto $r69 = \"out\";
"->"Block 11:
[preds: 10 ] [succs: 13 ]
$r69 = \"\";
goto [?= $r1[0] = $r69];
";
    "Block 10:
[preds: 1 ] [succs: 11 12 ]
staticinvoke <javaT.util.concurrent.atomic.AtomicUpdaters: void initTests(boolean)>(z7);
i4 = 0;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = newarray (java.lang.Object)[1];
if z7 == 0 goto $r69 = \"out\";
"->"Block 12:
[preds: 10 ] [succs: 13 ]
$r69 = \"out\";
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
$r69 = \"\";
goto [?= $r1[0] = $r69];
"->"Block 13:
[preds: 11 12 ] [succs: 14 ]
$r1[0] = $r69;
virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Testing with%s a SecurityManager present\n\", $r1);
r70 = <javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests>;
i5 = lengthof r70;
i6 = 0;
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
$r69 = \"out\";
"->"Block 13:
[preds: 11 12 ] [succs: 14 ]
$r1[0] = $r69;
virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Testing with%s a SecurityManager present\n\", $r1);
r70 = <javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests>;
i5 = lengthof r70;
i6 = 0;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 ]
$r1[0] = $r69;
virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Testing with%s a SecurityManager present\n\", $r1);
r70 = <javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests>;
i5 = lengthof r70;
i6 = 0;
"->"Block 14:
[preds: 13 74 ] [succs: 15 75 ]
if i6 >= i5 goto (branch);
";
    "Block 14:
[preds: 13 74 ] [succs: 15 75 ]
if i6 >= i5 goto (branch);
"->"Block 15:
[preds: 14 ] [succs: 16 29 ]
r71 = r70[i6];
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
r72 = null;
r73 = null;
r9 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.Class clazz>;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\" - testing getDeclaredField\");
";
    "Block 14:
[preds: 13 74 ] [succs: 15 75 ]
if i6 >= i5 goto (branch);
"->"Block 75:
[preds: 14 ] [succs: 76 77 ]
if i4 <= 0 goto return;
";
    "Block 15:
[preds: 14 ] [succs: 16 29 ]
r71 = r70[i6];
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
r72 = null;
r73 = null;
r9 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.Class clazz>;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\" - testing getDeclaredField\");
"->"Block 16:
[preds: 15 ] [succs: 17 29 ]
$r11 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
";
    "Block 15:
[preds: 14 ] [succs: 16 29 ]
r71 = r70[i6];
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
r72 = null;
r73 = null;
r9 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.Class clazz>;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\" - testing getDeclaredField\");
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 16:
[preds: 15 ] [succs: 17 29 ]
$r11 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 17:
[preds: 16 ] [succs: 18 29 ]
virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r11);
";
    "Block 16:
[preds: 15 ] [succs: 17 29 ]
$r11 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 17:
[preds: 16 ] [succs: 18 29 ]
virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r11);
"->"Block 18:
[preds: 17 ] [succs: 19 29 ]
$z0 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
";
    "Block 17:
[preds: 16 ] [succs: 18 29 ]
virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r11);
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 18:
[preds: 17 ] [succs: 19 29 ]
$z0 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
"->"Block 19:
[preds: 18 ] [succs: 20 28 29 ]
if $z0 != 0 goto (branch);
";
    "Block 18:
[preds: 17 ] [succs: 19 29 ]
$z0 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 19:
[preds: 18 ] [succs: 20 28 29 ]
if $z0 != 0 goto (branch);
"->"Block 20:
[preds: 19 ] [succs: 21 29 ]
$r27 = new java.lang.Error;
";
    "Block 19:
[preds: 18 ] [succs: 20 28 29 ]
if $z0 != 0 goto (branch);
"->"Block 28:
[preds: 19 27 ] [succs: 33 ]
goto [?= (branch)];
";
    "Block 19:
[preds: 18 ] [succs: 20 28 29 ]
if $z0 != 0 goto (branch);
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 20:
[preds: 19 ] [succs: 21 29 ]
$r27 = new java.lang.Error;
"->"Block 21:
[preds: 20 ] [succs: 22 29 ]
$r28 = new java.lang.StringBuilder;
";
    "Block 20:
[preds: 19 ] [succs: 21 29 ]
$r27 = new java.lang.Error;
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 21:
[preds: 20 ] [succs: 22 29 ]
$r28 = new java.lang.StringBuilder;
"->"Block 22:
[preds: 21 ] [succs: 23 29 ]
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
";
    "Block 21:
[preds: 20 ] [succs: 22 29 ]
$r28 = new java.lang.StringBuilder;
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 22:
[preds: 21 ] [succs: 23 29 ]
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
"->"Block 23:
[preds: 22 ] [succs: 24 29 ]
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access: \");
";
    "Block 22:
[preds: 21 ] [succs: 23 29 ]
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 23:
[preds: 22 ] [succs: 24 29 ]
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access: \");
"->"Block 24:
[preds: 23 ] [succs: 25 29 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
";
    "Block 23:
[preds: 22 ] [succs: 24 29 ]
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access: \");
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 24:
[preds: 23 ] [succs: 25 29 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"->"Block 25:
[preds: 24 ] [succs: 26 29 ]
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 24:
[preds: 23 ] [succs: 25 29 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r27.<java.lang.Error: void <init>(java.lang.String)>($r31);
";
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r27.<java.lang.Error: void <init>(java.lang.String)>($r31);
"->"Block 27:
[preds: 26 ] [succs: 28 29 ]
r72 = $r27;
";
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r27.<java.lang.Error: void <init>(java.lang.String)>($r31);
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r72 = $r27;
"->"Block 28:
[preds: 19 27 ] [succs: 33 ]
goto [?= (branch)];
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r72 = $r27;
"->"Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 28:
[preds: 19 27 ] [succs: 33 ]
goto [?= (branch)];
"->"Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"->"Block 30:
[preds: 29 ] [succs: 33 ]
$r61 = new java.lang.Error;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access failure: \");
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r61.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r65, r74);
r72 = $r61;
goto [?= (branch)];
";
    "Block 29:
[preds: 15 16 17 18 19 20 21 22 23 24 25 26 27 ] [succs: 30 31 ]
$r54 := @caughtexception;
r74 = $r54;
$z5 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean reflectOk>;
if $z5 == 0 goto $z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"->"Block 31:
[preds: 29 ] [succs: 32 33 ]
$z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z6 == 0 goto (branch);
";
    "Block 30:
[preds: 29 ] [succs: 33 ]
$r61 = new java.lang.Error;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected reflective access failure: \");
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r61.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r65, r74);
r72 = $r61;
goto [?= (branch)];
"->"Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 31:
[preds: 29 ] [succs: 32 33 ]
$z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z6 == 0 goto (branch);
"->"Block 32:
[preds: 31 ] [succs: 33 ]
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected reflection exception: \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r60 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r74.<java.security.AccessControlException: void printStackTrace(java.io.PrintStream)>($r60);
";
    "Block 31:
[preds: 29 ] [succs: 32 33 ]
$z6 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z6 == 0 goto (branch);
"->"Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 32:
[preds: 31 ] [succs: 33 ]
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected reflection exception: \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r60 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r74.<java.security.AccessControlException: void printStackTrace(java.io.PrintStream)>($r60);
"->"Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"->"Block 34:
[preds: 33 ] [succs: 35 65 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r72.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r26);
";
    "Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"->"Block 35:
[preds: 33 34 ] [succs: 36 65 ]
$r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 33:
[preds: 28 30 31 32 ] [succs: 34 35 65 ]
if r72 == null goto $r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 34:
[preds: 33 ] [succs: 35 65 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r72.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r26);
"->"Block 35:
[preds: 33 34 ] [succs: 36 65 ]
$r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
";
    "Block 34:
[preds: 33 ] [succs: 35 65 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r72.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r26);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 65 ]
$r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"->"Block 36:
[preds: 35 ] [succs: 37 65 ]
$r12 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE type>;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 65 ]
$r13 = <javaT.util.concurrent.atomic.AtomicUpdaters$1: int[] $SwitchMap$javaT$util$concurrent$atomic$AtomicUpdaters$TYPE>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 36:
[preds: 35 ] [succs: 37 65 ]
$r12 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE type>;
"->"Block 37:
[preds: 36 ] [succs: 38 65 ]
$i0 = virtualinvoke $r12.<javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: int ordinal()>();
";
    "Block 36:
[preds: 35 ] [succs: 37 65 ]
$r12 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE type>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 37:
[preds: 36 ] [succs: 38 65 ]
$i0 = virtualinvoke $r12.<javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: int ordinal()>();
"->"Block 38:
[preds: 37 ] [succs: 39 65 ]
$i1 = $r13[$i0];
";
    "Block 37:
[preds: 36 ] [succs: 38 65 ]
$i0 = virtualinvoke $r12.<javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: int ordinal()>();
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 38:
[preds: 37 ] [succs: 39 65 ]
$i1 = $r13[$i0];
"->"Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
";
    "Block 38:
[preds: 37 ] [succs: 39 65 ]
$i1 = $r13[$i0];
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"->"Block 40:
[preds: 39 ] [succs: 41 65 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"->"Block 45:
[preds: 39 ] [succs: 46 65 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"->"Block 50:
[preds: 39 ] [succs: 51 65 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"->"Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
";
    "Block 39:
[preds: 38 ] [succs: 40 45 50 54 65 ]
tableswitch($i1) {     case 1: goto $r24 = <java.lang.System: java.io.PrintStream out>;     case 2: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 3: goto $r14 = <java.lang.System: java.io.PrintStream out>;     default: goto $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>; };
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 40:
[preds: 39 ] [succs: 41 65 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
"->"Block 41:
[preds: 40 ] [succs: 42 65 ]
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicIntegerFieldUpdater\");
";
    "Block 40:
[preds: 39 ] [succs: 41 65 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 41:
[preds: 40 ] [succs: 42 65 ]
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicIntegerFieldUpdater\");
"->"Block 42:
[preds: 41 ] [succs: 43 65 ]
$r25 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
";
    "Block 41:
[preds: 40 ] [succs: 42 65 ]
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicIntegerFieldUpdater\");
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 42:
[preds: 41 ] [succs: 43 65 ]
$r25 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 43:
[preds: 42 ] [succs: 44 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r25);
";
    "Block 42:
[preds: 41 ] [succs: 43 65 ]
$r25 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 43:
[preds: 42 ] [succs: 44 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r25);
"->"Block 44:
[preds: 43 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
";
    "Block 43:
[preds: 42 ] [succs: 44 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r25);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 44:
[preds: 43 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"->"Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
";
    "Block 44:
[preds: 43 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 45:
[preds: 39 ] [succs: 46 65 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 46:
[preds: 45 ] [succs: 47 65 ]
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicLongFieldUpdater\");
";
    "Block 45:
[preds: 39 ] [succs: 46 65 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 46:
[preds: 45 ] [succs: 47 65 ]
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicLongFieldUpdater\");
"->"Block 47:
[preds: 46 ] [succs: 48 65 ]
$r23 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
";
    "Block 46:
[preds: 45 ] [succs: 47 65 ]
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicLongFieldUpdater\");
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 47:
[preds: 46 ] [succs: 48 65 ]
$r23 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 48:
[preds: 47 ] [succs: 49 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r23);
";
    "Block 47:
[preds: 46 ] [succs: 48 65 ]
$r23 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 48:
[preds: 47 ] [succs: 49 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r23);
"->"Block 49:
[preds: 48 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
";
    "Block 48:
[preds: 47 ] [succs: 49 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(r9, $r23);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 49:
[preds: 48 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"->"Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
";
    "Block 49:
[preds: 48 ] [succs: 54 65 ]
goto [?= $z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>];
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 50:
[preds: 39 ] [succs: 51 65 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
"->"Block 51:
[preds: 50 ] [succs: 52 65 ]
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicReferenceFieldUpdater\");
";
    "Block 50:
[preds: 39 ] [succs: 51 65 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 51:
[preds: 50 ] [succs: 52 65 ]
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicReferenceFieldUpdater\");
"->"Block 52:
[preds: 51 ] [succs: 53 65 ]
$r15 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
";
    "Block 51:
[preds: 50 ] [succs: 52 65 ]
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\" - testing AtomicReferenceFieldUpdater\");
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 52:
[preds: 51 ] [succs: 53 65 ]
$r15 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 53:
[preds: 52 ] [succs: 54 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(r9, class \"Ljava/lang/Object;\", $r15);
";
    "Block 52:
[preds: 51 ] [succs: 53 65 ]
$r15 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: java.lang.String field>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 53:
[preds: 52 ] [succs: 54 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(r9, class \"Ljava/lang/Object;\", $r15);
"->"Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
";
    "Block 53:
[preds: 52 ] [succs: 54 65 ]
staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(r9, class \"Ljava/lang/Object;\", $r15);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
"->"Block 55:
[preds: 54 ] [succs: 56 64 65 ]
if $z8 != 0 goto (branch);
";
    "Block 54:
[preds: 39 44 49 53 ] [succs: 55 65 ]
$z8 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 55:
[preds: 54 ] [succs: 56 64 65 ]
if $z8 != 0 goto (branch);
"->"Block 56:
[preds: 55 ] [succs: 57 65 ]
$r17 = new java.lang.Error;
";
    "Block 55:
[preds: 54 ] [succs: 56 64 65 ]
if $z8 != 0 goto (branch);
"->"Block 64:
[preds: 55 63 ] [succs: 69 ]
goto [?= (branch)];
";
    "Block 55:
[preds: 54 ] [succs: 56 64 65 ]
if $z8 != 0 goto (branch);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 56:
[preds: 55 ] [succs: 57 65 ]
$r17 = new java.lang.Error;
"->"Block 57:
[preds: 56 ] [succs: 58 65 ]
$r18 = new java.lang.StringBuilder;
";
    "Block 56:
[preds: 55 ] [succs: 57 65 ]
$r17 = new java.lang.Error;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 57:
[preds: 56 ] [succs: 58 65 ]
$r18 = new java.lang.StringBuilder;
"->"Block 58:
[preds: 57 ] [succs: 59 65 ]
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
";
    "Block 57:
[preds: 56 ] [succs: 58 65 ]
$r18 = new java.lang.StringBuilder;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 58:
[preds: 57 ] [succs: 59 65 ]
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
"->"Block 59:
[preds: 58 ] [succs: 60 65 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access: \");
";
    "Block 58:
[preds: 57 ] [succs: 59 65 ]
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 59:
[preds: 58 ] [succs: 60 65 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access: \");
"->"Block 60:
[preds: 59 ] [succs: 61 65 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
";
    "Block 59:
[preds: 58 ] [succs: 60 65 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access: \");
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 60:
[preds: 59 ] [succs: 61 65 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"->"Block 61:
[preds: 60 ] [succs: 62 65 ]
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 60:
[preds: 59 ] [succs: 61 65 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 61:
[preds: 60 ] [succs: 62 65 ]
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 62:
[preds: 61 ] [succs: 63 65 ]
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>($r21);
";
    "Block 61:
[preds: 60 ] [succs: 62 65 ]
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 62:
[preds: 61 ] [succs: 63 65 ]
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>($r21);
"->"Block 63:
[preds: 62 ] [succs: 64 65 ]
r73 = $r17;
";
    "Block 62:
[preds: 61 ] [succs: 63 65 ]
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>($r21);
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 63:
[preds: 62 ] [succs: 64 65 ]
r73 = $r17;
"->"Block 64:
[preds: 55 63 ] [succs: 69 ]
goto [?= (branch)];
";
    "Block 63:
[preds: 62 ] [succs: 64 65 ]
r73 = $r17;
"->"Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
";
    "Block 64:
[preds: 55 63 ] [succs: 69 ]
goto [?= (branch)];
"->"Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
";
    "Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"->"Block 66:
[preds: 65 ] [succs: 69 ]
$r49 = new java.lang.Error;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access failure: \");
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r49.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r53, r42);
r73 = $r49;
goto [?= (branch)];
";
    "Block 65:
[preds: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ] [succs: 66 67 ]
$r41 := @caughtexception;
r42 = $r41;
$z3 = r71.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: boolean updaterOk>;
if $z3 == 0 goto $z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
"->"Block 67:
[preds: 65 ] [succs: 68 69 ]
$z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z4 == 0 goto (branch);
";
    "Block 66:
[preds: 65 ] [succs: 69 ]
$r49 = new java.lang.Error;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected updater access failure: \");
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r49.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>($r53, r42);
r73 = $r49;
goto [?= (branch)];
"->"Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
";
    "Block 67:
[preds: 65 ] [succs: 68 69 ]
$z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z4 == 0 goto (branch);
"->"Block 68:
[preds: 67 ] [succs: 69 ]
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = new java.lang.StringBuilder;
specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected updater exception: \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r48 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r42.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r48);
";
    "Block 67:
[preds: 65 ] [succs: 68 69 ]
$z4 = <javaT.util.concurrent.atomic.AtomicUpdaters: boolean verbose>;
if $z4 == 0 goto (branch);
"->"Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
";
    "Block 68:
[preds: 67 ] [succs: 69 ]
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = new java.lang.StringBuilder;
specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Got expected updater exception: \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r48 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r42.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r48);
"->"Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
";
    "Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
"->"Block 70:
[preds: 69 ] [succs: 71 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r73.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r16);
";
    "Block 69:
[preds: 64 66 67 68 ] [succs: 70 71 ]
if r73 == null goto (branch);
"->"Block 71:
[preds: 69 70 ] [succs: 72 73 ]
if r73 != null goto i4 = i4 + 1;
";
    "Block 70:
[preds: 69 ] [succs: 71 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke r73.<java.lang.Error: void printStackTrace(java.io.PrintStream)>($r16);
"->"Block 71:
[preds: 69 70 ] [succs: 72 73 ]
if r73 != null goto i4 = i4 + 1;
";
    "Block 71:
[preds: 69 70 ] [succs: 72 73 ]
if r73 != null goto i4 = i4 + 1;
"->"Block 72:
[preds: 71 ] [succs: 73 74 ]
if r72 == null goto i6 = i6 + 1;
";
    "Block 71:
[preds: 69 70 ] [succs: 72 73 ]
if r73 != null goto i4 = i4 + 1;
"->"Block 73:
[preds: 71 72 ] [succs: 74 ]
i4 = i4 + 1;
";
    "Block 72:
[preds: 71 ] [succs: 73 74 ]
if r72 == null goto i6 = i6 + 1;
"->"Block 73:
[preds: 71 72 ] [succs: 74 ]
i4 = i4 + 1;
";
    "Block 72:
[preds: 71 ] [succs: 73 74 ]
if r72 == null goto i6 = i6 + 1;
"->"Block 74:
[preds: 72 73 ] [succs: 14 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 73:
[preds: 71 72 ] [succs: 74 ]
i4 = i4 + 1;
"->"Block 74:
[preds: 72 73 ] [succs: 14 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 74:
[preds: 72 73 ] [succs: 14 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 14:
[preds: 13 74 ] [succs: 15 75 ]
if i6 >= i5 goto (branch);
";
    "Block 75:
[preds: 14 ] [succs: 76 77 ]
if i4 <= 0 goto return;
"->"Block 76:
[preds: 75 ] [succs: ]
$r3 = new java.lang.Error;
specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed - see previous stacktraces\");
throw $r3;
";
    "Block 75:
[preds: 14 ] [succs: 76 77 ]
if i4 <= 0 goto return;
"->"Block 77:
[preds: 75 ] [succs: ]
return;
";
}
