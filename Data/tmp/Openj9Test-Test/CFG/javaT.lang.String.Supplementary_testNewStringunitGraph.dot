digraph "unitGraph" {
    "r1 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "r4 := @parameter3: java.lang.Class"
    "$r0 = new java.lang.String"
    "specialinvoke $r0.<java.lang.String: void <init>(int[],int,int)>(r1, i0, i1)"
    "r10 = $r0"
    "goto [?= $r2 = new java.lang.StringBuilder]"
    "$r8 := @caughtexception"
    "r11 = $r8"
    "$z0 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r11)"
    "if $z0 == 0 goto $r9 = new java.lang.RuntimeException"
    "return"
    "$r9 = new java.lang.RuntimeException"
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r11)"
    "throw $r9"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) didn\'t throw \")"
    "$r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()"
    "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>(1, $r7)"
    "r1 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"r4 := @parameter3: java.lang.Class";
    "r4 := @parameter3: java.lang.Class"->"$r0 = new java.lang.String";
    "r4 := @parameter3: java.lang.Class"->"$r8 := @caughtexception";
    "$r0 = new java.lang.String"->"specialinvoke $r0.<java.lang.String: void <init>(int[],int,int)>(r1, i0, i1)";
    "$r0 = new java.lang.String"->"$r8 := @caughtexception";
    "specialinvoke $r0.<java.lang.String: void <init>(int[],int,int)>(r1, i0, i1)"->"r10 = $r0";
    "specialinvoke $r0.<java.lang.String: void <init>(int[],int,int)>(r1, i0, i1)"->"$r8 := @caughtexception";
    "r10 = $r0"->"goto [?= $r2 = new java.lang.StringBuilder]";
    "r10 = $r0"->"$r8 := @caughtexception";
    "goto [?= $r2 = new java.lang.StringBuilder]"->"$r2 = new java.lang.StringBuilder";
    "$r8 := @caughtexception"->"r11 = $r8";
    "r11 = $r8"->"$z0 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r11)";
    "$z0 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r11)"->"if $z0 == 0 goto $r9 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r9 = new java.lang.RuntimeException"->"return";
    "if $z0 == 0 goto $r9 = new java.lang.RuntimeException"->"$r9 = new java.lang.RuntimeException";
    "$r9 = new java.lang.RuntimeException"->"specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r11)";
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r11)"->"throw $r9";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) didn\'t throw \")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) didn\'t throw \")"->"$r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()";
    "$r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()"->"$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)";
    "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>(1, $r7)";
    "staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>(1, $r7)"->"return";
}
