digraph "unitGraph" {
    "r0 := @parameter0: javaT.lang.annotation.ScalarTypes"
    "r1 := @parameter1: java.lang.reflect.AnnotatedElement"
    "$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>"
    "$i1 = $i0 + 1"
    "<javaT.lang.'annotation'.UnitTest: int numTests> = $i1"
    "$b2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: byte b()>()"
    "if $b2 != 1 goto $r8 = new java.lang.StringBuilder"
    "$s3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: short s()>()"
    "if $s3 != 2 goto $r8 = new java.lang.StringBuilder"
    "$i4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: int i()>()"
    "if $i4 != 3 goto $r8 = new java.lang.StringBuilder"
    "$l5 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: long l()>()"
    "$b6 = $l5 cmp 4L"
    "if $b6 != 0 goto $r8 = new java.lang.StringBuilder"
    "$c7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: char c()>()"
    "if $c7 != 53 goto $r8 = new java.lang.StringBuilder"
    "$f0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: float f()>()"
    "$b8 = $f0 cmpl 6.0F"
    "if $b8 != 0 goto $r8 = new java.lang.StringBuilder"
    "$d0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: double d()>()"
    "$b9 = $d0 cmpl 7.0"
    "if $b9 != 0 goto $r8 = new java.lang.StringBuilder"
    "$z0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: boolean bool()>()"
    "if $z0 != 1 goto $r8 = new java.lang.StringBuilder"
    "$r2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.String str()>()"
    "$z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"custom\")"
    "if $z1 == 0 goto $r8 = new java.lang.StringBuilder"
    "$r3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.Class 'cls'()>()"
    "if $r3 != class \"Ljava/util/Map;\" goto $r8 = new java.lang.StringBuilder"
    "$r4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Stooge e()>()"
    "$r5 = <javaT.lang.'annotation'.Stooge: javaT.lang.'annotation'.Stooge MOE>"
    "if $r4 != $r5 goto $r8 = new java.lang.StringBuilder"
    "$r6 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()"
    "$i10 = interfaceinvoke $r6.<javaT.lang.'annotation'.Point: int x()>()"
    "if $i10 != 1 goto $r8 = new java.lang.StringBuilder"
    "$r7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()"
    "$i11 = interfaceinvoke $r7.<javaT.lang.'annotation'.Point: int y()>()"
    "if $i11 == 2 goto return"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ScalarTypes\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r11)"
    "return"
    "r0 := @parameter0: javaT.lang.annotation.ScalarTypes"->"r1 := @parameter1: java.lang.reflect.AnnotatedElement";
    "r1 := @parameter1: java.lang.reflect.AnnotatedElement"->"$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>";
    "$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"<javaT.lang.'annotation'.UnitTest: int numTests> = $i1";
    "<javaT.lang.'annotation'.UnitTest: int numTests> = $i1"->"$b2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: byte b()>()";
    "$b2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: byte b()>()"->"if $b2 != 1 goto $r8 = new java.lang.StringBuilder";
    "if $b2 != 1 goto $r8 = new java.lang.StringBuilder"->"$s3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: short s()>()";
    "if $b2 != 1 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$s3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: short s()>()"->"if $s3 != 2 goto $r8 = new java.lang.StringBuilder";
    "if $s3 != 2 goto $r8 = new java.lang.StringBuilder"->"$i4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: int i()>()";
    "if $s3 != 2 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$i4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: int i()>()"->"if $i4 != 3 goto $r8 = new java.lang.StringBuilder";
    "if $i4 != 3 goto $r8 = new java.lang.StringBuilder"->"$l5 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: long l()>()";
    "if $i4 != 3 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$l5 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: long l()>()"->"$b6 = $l5 cmp 4L";
    "$b6 = $l5 cmp 4L"->"if $b6 != 0 goto $r8 = new java.lang.StringBuilder";
    "if $b6 != 0 goto $r8 = new java.lang.StringBuilder"->"$c7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: char c()>()";
    "if $b6 != 0 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$c7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: char c()>()"->"if $c7 != 53 goto $r8 = new java.lang.StringBuilder";
    "if $c7 != 53 goto $r8 = new java.lang.StringBuilder"->"$f0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: float f()>()";
    "if $c7 != 53 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$f0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: float f()>()"->"$b8 = $f0 cmpl 6.0F";
    "$b8 = $f0 cmpl 6.0F"->"if $b8 != 0 goto $r8 = new java.lang.StringBuilder";
    "if $b8 != 0 goto $r8 = new java.lang.StringBuilder"->"$d0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: double d()>()";
    "if $b8 != 0 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$d0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: double d()>()"->"$b9 = $d0 cmpl 7.0";
    "$b9 = $d0 cmpl 7.0"->"if $b9 != 0 goto $r8 = new java.lang.StringBuilder";
    "if $b9 != 0 goto $r8 = new java.lang.StringBuilder"->"$z0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: boolean bool()>()";
    "if $b9 != 0 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$z0 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: boolean bool()>()"->"if $z0 != 1 goto $r8 = new java.lang.StringBuilder";
    "if $z0 != 1 goto $r8 = new java.lang.StringBuilder"->"$r2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.String str()>()";
    "if $z0 != 1 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$r2 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.String str()>()"->"$z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"custom\")";
    "$z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"custom\")"->"if $z1 == 0 goto $r8 = new java.lang.StringBuilder";
    "if $z1 == 0 goto $r8 = new java.lang.StringBuilder"->"$r3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.Class 'cls'()>()";
    "if $z1 == 0 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$r3 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: java.lang.Class 'cls'()>()"->"if $r3 != class \"Ljava/util/Map;\" goto $r8 = new java.lang.StringBuilder";
    "if $r3 != class \"Ljava/util/Map;\" goto $r8 = new java.lang.StringBuilder"->"$r4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Stooge e()>()";
    "if $r3 != class \"Ljava/util/Map;\" goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$r4 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Stooge e()>()"->"$r5 = <javaT.lang.'annotation'.Stooge: javaT.lang.'annotation'.Stooge MOE>";
    "$r5 = <javaT.lang.'annotation'.Stooge: javaT.lang.'annotation'.Stooge MOE>"->"if $r4 != $r5 goto $r8 = new java.lang.StringBuilder";
    "if $r4 != $r5 goto $r8 = new java.lang.StringBuilder"->"$r6 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()";
    "if $r4 != $r5 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$r6 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()"->"$i10 = interfaceinvoke $r6.<javaT.lang.'annotation'.Point: int x()>()";
    "$i10 = interfaceinvoke $r6.<javaT.lang.'annotation'.Point: int x()>()"->"if $i10 != 1 goto $r8 = new java.lang.StringBuilder";
    "if $i10 != 1 goto $r8 = new java.lang.StringBuilder"->"$r7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()";
    "if $i10 != 1 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "$r7 = interfaceinvoke r0.<javaT.lang.'annotation'.ScalarTypes: javaT.lang.'annotation'.Point a()>()"->"$i11 = interfaceinvoke $r7.<javaT.lang.'annotation'.Point: int y()>()";
    "$i11 = interfaceinvoke $r7.<javaT.lang.'annotation'.Point: int y()>()"->"if $i11 == 2 goto return";
    "if $i11 == 2 goto return"->"$r8 = new java.lang.StringBuilder";
    "if $i11 == 2 goto return"->"return";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ScalarTypes\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ScalarTypes\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r11)";
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r11)"->"return";
}
