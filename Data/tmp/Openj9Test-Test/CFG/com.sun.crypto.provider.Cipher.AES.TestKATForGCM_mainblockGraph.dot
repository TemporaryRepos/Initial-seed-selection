digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM;
specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>();
r1 = $r0;
$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>;
$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2);
if $z0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\");
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM;
specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>();
r1 = $r0;
$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>;
$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2);
if $z0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\");
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new com.sun.crypto.provider.Cipher.AES.TestKATForGCM;
specialinvoke $r0.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: void <init>()>();
r1 = $r0;
$r2 = <com.sun.crypto.provider.Cipher.AES.TestKATForGCM: com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[] testValues>;
$z0 = virtualinvoke r1.<com.sun.crypto.provider.Cipher.AES.TestKATForGCM: boolean execute(com.sun.crypto.provider.Cipher.AES.TestKATForGCM$TestVector[])>($r2);
if $z0 == 0 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\");
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
