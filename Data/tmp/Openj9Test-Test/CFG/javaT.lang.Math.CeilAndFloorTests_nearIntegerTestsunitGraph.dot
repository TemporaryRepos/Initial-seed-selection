digraph "unitGraph" {
    "i35 = 0"
    "$r0 = newarray (double)[11]"
    "$r0[0] = -0.0"
    "$r0[1] = 0.0"
    "$r0[2] = -1.0"
    "$r0[3] = 1.0"
    "$r0[4] = -4.503599627370496E15"
    "$r0[5] = 4.503599627370496E15"
    "$r0[6] = -1.7976931348623157E308"
    "$r0[7] = 1.7976931348623157E308"
    "$r0[8] = #-Infinity"
    "$r0[9] = #Infinity"
    "$r0[10] = #NaN"
    "r1 = $r0"
    "r2 = r1"
    "i36 = lengthof r2"
    "i37 = 0"
    "if i37 >= i36 goto i39 = -1022"
    "d29 = r2[i37]"
    "$i33 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d29, d29)"
    "i38 = i35 + $i33"
    "$i34 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d29, d29)"
    "i35 = i38 + $i34"
    "i37 = i37 + 1"
    "goto [?= (branch)]"
    "i39 = -1022"
    "if i39 > 1023 goto i58 = -65536"
    "d30 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i39)"
    "d31 = staticinvoke <java.lang.Math: double nextDown(double)>(d30)"
    "d32 = staticinvoke <java.lang.Math: double nextUp(double)>(d30)"
    "if i39 >= 0 goto $i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)"
    "$i25 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, 1.0)"
    "i40 = i35 + $i25"
    "$d25 = neg d30"
    "$i26 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d25, -0.0)"
    "i41 = i40 + $i26"
    "$i27 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, 0.0)"
    "i42 = i41 + $i27"
    "$d26 = neg d30"
    "$i28 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d26, -1.0)"
    "i43 = i42 + $i28"
    "$i29 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, 1.0)"
    "i44 = i43 + $i29"
    "$d27 = neg d31"
    "$i30 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d27, -0.0)"
    "i45 = i44 + $i30"
    "$i31 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, 0.0)"
    "i46 = i45 + $i31"
    "$d28 = neg d32"
    "$i32 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d28, -1.0)"
    "i35 = i46 + $i32"
    "goto [?= i39 = i39 + 1]"
    "$i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)"
    "i47 = i35 + $i9"
    "$i10 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, d30)"
    "i48 = i47 + $i10"
    "$d11 = staticinvoke <java.lang.Math: double rint(double)>(d31)"
    "$b11 = d31 cmpl $d11"
    "if $b11 != 0 goto $i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)"
    "$i21 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d31)"
    "i49 = i48 + $i21"
    "$d22 = neg d31"
    "$d21 = neg d31"
    "$i22 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d22, $d21)"
    "i50 = i49 + $i22"
    "$i23 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d31, d31)"
    "i51 = i50 + $i23"
    "$d24 = neg d31"
    "$d23 = neg d31"
    "$i24 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d24, $d23)"
    "i52 = i51 + $i24"
    "goto [?= $d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)]"
    "$i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)"
    "i53 = i48 + $i12"
    "$d13 = neg d31"
    "$d12 = neg d30"
    "$i13 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d13, $d12)"
    "i52 = i53 + $i13"
    "$d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)"
    "$b14 = d32 cmpl $d14"
    "if $b14 != 0 goto $i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)"
    "$i17 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d32, d32)"
    "i54 = i52 + $i17"
    "$d18 = neg d32"
    "$d17 = neg d32"
    "$i18 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d18, $d17)"
    "i55 = i54 + $i18"
    "$i19 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d32)"
    "i56 = i55 + $i19"
    "$d20 = neg d32"
    "$d19 = neg d32"
    "$i20 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d20, $d19)"
    "i35 = i56 + $i20"
    "$i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)"
    "i57 = i52 + $i15"
    "$d16 = neg d32"
    "$d15 = neg d30"
    "$i16 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d16, $d15)"
    "i35 = i57 + $i16"
    "i39 = i39 + 1"
    "i58 = -65536"
    "if i58 > 65536 goto return i35"
    "d33 = (double) i58"
    "d34 = staticinvoke <java.lang.Math: double nextDown(double)>(d33)"
    "d35 = staticinvoke <java.lang.Math: double nextUp(double)>(d33)"
    "$i0 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d33, d33)"
    "i59 = i35 + $i0"
    "$d1 = neg d33"
    "$d0 = neg d33"
    "$i1 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d1, $d0)"
    "i60 = i59 + $i1"
    "$i2 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d33, d33)"
    "i61 = i60 + $i2"
    "$d3 = neg d33"
    "$d2 = neg d33"
    "$i3 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d3, $d2)"
    "i35 = i61 + $i3"
    "$d4 = staticinvoke <java.lang.Math: double abs(double)>(d33)"
    "$b4 = $d4 cmpl 1.0"
    "if $b4 <= 0 goto i58 = i58 + 1"
    "$i5 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d34, d33)"
    "i62 = i35 + $i5"
    "$d7 = neg d34"
    "$d5 = neg d33"
    "$d6 = $d5 + 1.0"
    "$i6 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d7, $d6)"
    "i63 = i62 + $i6"
    "$i7 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d35, d33)"
    "i64 = i63 + $i7"
    "$d10 = neg d35"
    "$d8 = neg d33"
    "$d9 = $d8 - 1.0"
    "$i8 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d10, $d9)"
    "i35 = i64 + $i8"
    "i58 = i58 + 1"
    "return i35"
    "i35 = 0"->"$r0 = newarray (double)[11]";
    "$r0 = newarray (double)[11]"->"$r0[0] = -0.0";
    "$r0[0] = -0.0"->"$r0[1] = 0.0";
    "$r0[1] = 0.0"->"$r0[2] = -1.0";
    "$r0[2] = -1.0"->"$r0[3] = 1.0";
    "$r0[3] = 1.0"->"$r0[4] = -4.503599627370496E15";
    "$r0[4] = -4.503599627370496E15"->"$r0[5] = 4.503599627370496E15";
    "$r0[5] = 4.503599627370496E15"->"$r0[6] = -1.7976931348623157E308";
    "$r0[6] = -1.7976931348623157E308"->"$r0[7] = 1.7976931348623157E308";
    "$r0[7] = 1.7976931348623157E308"->"$r0[8] = #-Infinity";
    "$r0[8] = #-Infinity"->"$r0[9] = #Infinity";
    "$r0[9] = #Infinity"->"$r0[10] = #NaN";
    "$r0[10] = #NaN"->"r1 = $r0";
    "r1 = $r0"->"r2 = r1";
    "r2 = r1"->"i36 = lengthof r2";
    "i36 = lengthof r2"->"i37 = 0";
    "i37 = 0"->"if i37 >= i36 goto i39 = -1022";
    "if i37 >= i36 goto i39 = -1022"->"d29 = r2[i37]";
    "if i37 >= i36 goto i39 = -1022"->"i39 = -1022";
    "d29 = r2[i37]"->"$i33 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d29, d29)";
    "$i33 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d29, d29)"->"i38 = i35 + $i33";
    "i38 = i35 + $i33"->"$i34 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d29, d29)";
    "$i34 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d29, d29)"->"i35 = i38 + $i34";
    "i35 = i38 + $i34"->"i37 = i37 + 1";
    "i37 = i37 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i37 >= i36 goto i39 = -1022";
    "i39 = -1022"->"if i39 > 1023 goto i58 = -65536";
    "if i39 > 1023 goto i58 = -65536"->"d30 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i39)";
    "if i39 > 1023 goto i58 = -65536"->"i58 = -65536";
    "d30 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i39)"->"d31 = staticinvoke <java.lang.Math: double nextDown(double)>(d30)";
    "d31 = staticinvoke <java.lang.Math: double nextDown(double)>(d30)"->"d32 = staticinvoke <java.lang.Math: double nextUp(double)>(d30)";
    "d32 = staticinvoke <java.lang.Math: double nextUp(double)>(d30)"->"if i39 >= 0 goto $i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)";
    "if i39 >= 0 goto $i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)"->"$i25 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, 1.0)";
    "if i39 >= 0 goto $i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)"->"$i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)";
    "$i25 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, 1.0)"->"i40 = i35 + $i25";
    "i40 = i35 + $i25"->"$d25 = neg d30";
    "$d25 = neg d30"->"$i26 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d25, -0.0)";
    "$i26 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d25, -0.0)"->"i41 = i40 + $i26";
    "i41 = i40 + $i26"->"$i27 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, 0.0)";
    "$i27 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, 0.0)"->"i42 = i41 + $i27";
    "i42 = i41 + $i27"->"$d26 = neg d30";
    "$d26 = neg d30"->"$i28 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d26, -1.0)";
    "$i28 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d26, -1.0)"->"i43 = i42 + $i28";
    "i43 = i42 + $i28"->"$i29 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, 1.0)";
    "$i29 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, 1.0)"->"i44 = i43 + $i29";
    "i44 = i43 + $i29"->"$d27 = neg d31";
    "$d27 = neg d31"->"$i30 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d27, -0.0)";
    "$i30 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d27, -0.0)"->"i45 = i44 + $i30";
    "i45 = i44 + $i30"->"$i31 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, 0.0)";
    "$i31 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, 0.0)"->"i46 = i45 + $i31";
    "i46 = i45 + $i31"->"$d28 = neg d32";
    "$d28 = neg d32"->"$i32 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d28, -1.0)";
    "$i32 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d28, -1.0)"->"i35 = i46 + $i32";
    "i35 = i46 + $i32"->"goto [?= i39 = i39 + 1]";
    "goto [?= i39 = i39 + 1]"->"i39 = i39 + 1";
    "$i9 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d30, d30)"->"i47 = i35 + $i9";
    "i47 = i35 + $i9"->"$i10 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, d30)";
    "$i10 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d30, d30)"->"i48 = i47 + $i10";
    "i48 = i47 + $i10"->"$d11 = staticinvoke <java.lang.Math: double rint(double)>(d31)";
    "$d11 = staticinvoke <java.lang.Math: double rint(double)>(d31)"->"$b11 = d31 cmpl $d11";
    "$b11 = d31 cmpl $d11"->"if $b11 != 0 goto $i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)";
    "if $b11 != 0 goto $i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)"->"$i21 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d31)";
    "if $b11 != 0 goto $i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)"->"$i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)";
    "$i21 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d31)"->"i49 = i48 + $i21";
    "i49 = i48 + $i21"->"$d22 = neg d31";
    "$d22 = neg d31"->"$d21 = neg d31";
    "$d21 = neg d31"->"$i22 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d22, $d21)";
    "$i22 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d22, $d21)"->"i50 = i49 + $i22";
    "i50 = i49 + $i22"->"$i23 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d31, d31)";
    "$i23 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d31, d31)"->"i51 = i50 + $i23";
    "i51 = i50 + $i23"->"$d24 = neg d31";
    "$d24 = neg d31"->"$d23 = neg d31";
    "$d23 = neg d31"->"$i24 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d24, $d23)";
    "$i24 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d24, $d23)"->"i52 = i51 + $i24";
    "i52 = i51 + $i24"->"goto [?= $d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)]";
    "goto [?= $d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)]"->"$d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)";
    "$i12 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d31, d30)"->"i53 = i48 + $i12";
    "i53 = i48 + $i12"->"$d13 = neg d31";
    "$d13 = neg d31"->"$d12 = neg d30";
    "$d12 = neg d30"->"$i13 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d13, $d12)";
    "$i13 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d13, $d12)"->"i52 = i53 + $i13";
    "i52 = i53 + $i13"->"$d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)";
    "$d14 = staticinvoke <java.lang.Math: double rint(double)>(d32)"->"$b14 = d32 cmpl $d14";
    "$b14 = d32 cmpl $d14"->"if $b14 != 0 goto $i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)";
    "if $b14 != 0 goto $i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)"->"$i17 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d32, d32)";
    "if $b14 != 0 goto $i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)"->"$i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)";
    "$i17 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d32, d32)"->"i54 = i52 + $i17";
    "i54 = i52 + $i17"->"$d18 = neg d32";
    "$d18 = neg d32"->"$d17 = neg d32";
    "$d17 = neg d32"->"$i18 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d18, $d17)";
    "$i18 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d18, $d17)"->"i55 = i54 + $i18";
    "i55 = i54 + $i18"->"$i19 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d32)";
    "$i19 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d32)"->"i56 = i55 + $i19";
    "i56 = i55 + $i19"->"$d20 = neg d32";
    "$d20 = neg d32"->"$d19 = neg d32";
    "$d19 = neg d32"->"$i20 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d20, $d19)";
    "$i20 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d20, $d19)"->"i35 = i56 + $i20";
    "i35 = i56 + $i20"->"goto [?= i39 = i39 + 1]";
    "goto [?= i39 = i39 + 1]"->"i39 = i39 + 1";
    "$i15 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d32, d30)"->"i57 = i52 + $i15";
    "i57 = i52 + $i15"->"$d16 = neg d32";
    "$d16 = neg d32"->"$d15 = neg d30";
    "$d15 = neg d30"->"$i16 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d16, $d15)";
    "$i16 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d16, $d15)"->"i35 = i57 + $i16";
    "i35 = i57 + $i16"->"i39 = i39 + 1";
    "i39 = i39 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i39 > 1023 goto i58 = -65536";
    "i58 = -65536"->"if i58 > 65536 goto return i35";
    "if i58 > 65536 goto return i35"->"d33 = (double) i58";
    "if i58 > 65536 goto return i35"->"return i35";
    "d33 = (double) i58"->"d34 = staticinvoke <java.lang.Math: double nextDown(double)>(d33)";
    "d34 = staticinvoke <java.lang.Math: double nextDown(double)>(d33)"->"d35 = staticinvoke <java.lang.Math: double nextUp(double)>(d33)";
    "d35 = staticinvoke <java.lang.Math: double nextUp(double)>(d33)"->"$i0 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d33, d33)";
    "$i0 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d33, d33)"->"i59 = i35 + $i0";
    "i59 = i35 + $i0"->"$d1 = neg d33";
    "$d1 = neg d33"->"$d0 = neg d33";
    "$d0 = neg d33"->"$i1 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d1, $d0)";
    "$i1 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d1, $d0)"->"i60 = i59 + $i1";
    "i60 = i59 + $i1"->"$i2 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d33, d33)";
    "$i2 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d33, d33)"->"i61 = i60 + $i2";
    "i61 = i60 + $i2"->"$d3 = neg d33";
    "$d3 = neg d33"->"$d2 = neg d33";
    "$d2 = neg d33"->"$i3 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d3, $d2)";
    "$i3 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d3, $d2)"->"i35 = i61 + $i3";
    "i35 = i61 + $i3"->"$d4 = staticinvoke <java.lang.Math: double abs(double)>(d33)";
    "$d4 = staticinvoke <java.lang.Math: double abs(double)>(d33)"->"$b4 = $d4 cmpl 1.0";
    "$b4 = $d4 cmpl 1.0"->"if $b4 <= 0 goto i58 = i58 + 1";
    "if $b4 <= 0 goto i58 = i58 + 1"->"$i5 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d34, d33)";
    "if $b4 <= 0 goto i58 = i58 + 1"->"i58 = i58 + 1";
    "$i5 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>(d34, d33)"->"i62 = i35 + $i5";
    "i62 = i35 + $i5"->"$d7 = neg d34";
    "$d7 = neg d34"->"$d5 = neg d33";
    "$d5 = neg d33"->"$d6 = $d5 + 1.0";
    "$d6 = $d5 + 1.0"->"$i6 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d7, $d6)";
    "$i6 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testCeilCase(double,double)>($d7, $d6)"->"i63 = i62 + $i6";
    "i63 = i62 + $i6"->"$i7 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d35, d33)";
    "$i7 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>(d35, d33)"->"i64 = i63 + $i7";
    "i64 = i63 + $i7"->"$d10 = neg d35";
    "$d10 = neg d35"->"$d8 = neg d33";
    "$d8 = neg d33"->"$d9 = $d8 - 1.0";
    "$d9 = $d8 - 1.0"->"$i8 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d10, $d9)";
    "$i8 = staticinvoke <javaT.lang.Math.CeilAndFloorTests: int testFloorCase(double,double)>($d10, $d9)"->"i35 = i64 + $i8";
    "i35 = i64 + $i8"->"i58 = i58 + 1";
    "i58 = i58 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i58 > 65536 goto return i35";
}
