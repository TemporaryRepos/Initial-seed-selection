digraph "unitGraph" {
    "i2 = 0"
    "$r0 = newarray (java.math.BigDecimal)[3]"
    "$r1 = new java.math.BigDecimal"
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789\")"
    "$r0[0] = $r1"
    "$r2 = new java.math.BigDecimal"
    "specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1234567898\")"
    "$r0[1] = $r2"
    "$r3 = new java.math.BigDecimal"
    "specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12345678987\")"
    "$r0[2] = $r3"
    "r4 = $r0"
    "$r5 = newarray (java.math.BigDecimal)[3]"
    "$r6 = new java.math.BigDecimal"
    "specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(\"987654321\")"
    "$r5[0] = $r6"
    "$r7 = new java.math.BigDecimal"
    "specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"8987654321\")"
    "$r5[1] = $r7"
    "$r8 = new java.math.BigDecimal"
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>(\"78987654321\")"
    "$r5[2] = $r8"
    "r9 = $r5"
    "$r10 = newarray (java.math.BigDecimal[])[3]"
    "$r11 = newarray (java.math.BigDecimal)[3]"
    "$r12 = new java.math.BigDecimal"
    "specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(\"121932631112635269\")"
    "$r11[0] = $r12"
    "$r13 = new java.math.BigDecimal"
    "specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1109586943112635269\")"
    "$r11[1] = $r13"
    "$r14 = new java.math.BigDecimal"
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9751562173112635269\")"
    "$r11[2] = $r14"
    "$r10[0] = $r11"
    "$r15 = newarray (java.math.BigDecimal)[3]"
    "$r16 = new java.math.BigDecimal"
    "specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1219326319027587258\")"
    "$r15[0] = $r16"
    "$r17 = new java.math.BigDecimal"
    "specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"11095869503027587258\")"
    "$r15[1] = $r17"
    "$r18 = new java.math.BigDecimal"
    "specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"97515622363027587258\")"
    "$r15[2] = $r18"
    "$r10[1] = $r15"
    "$r19 = newarray (java.math.BigDecimal)[3]"
    "$r20 = new java.math.BigDecimal"
    "specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12193263197189452827\")"
    "$r19[0] = $r20"
    "$r21 = new java.math.BigDecimal"
    "specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(\"110958695093189452827\")"
    "$r19[1] = $r21"
    "$r22 = new java.math.BigDecimal"
    "specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"975156224183189452827\")"
    "$r19[2] = $r22"
    "$r10[2] = $r19"
    "r23 = $r10"
    "i3 = 0"
    "$i0 = lengthof r4"
    "if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)"
    "i4 = 0"
    "$i1 = lengthof r9"
    "if i4 >= $i1 goto i3 = i3 + 1"
    "$r25 = r4[i3]"
    "$r24 = r9[i4]"
    "$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24)"
    "$r27 = r23[i3]"
    "$r28 = $r27[i4]"
    "$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28)"
    "if $z0 != 0 goto i4 = i4 + 1"
    "i2 = i2 + 1"
    "i4 = i4 + 1"
    "goto [?= $i1 = lengthof r9]"
    "i3 = i3 + 1"
    "goto [?= $i0 = lengthof r4]"
    "r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)"
    "r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L)"
    "i5 = 0"
    "if i5 >= 100 goto (branch)"
    "r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "goto [?= return i2]"
    "$r29 := @caughtexception"
    "r32 = $r29"
    "return i2"
    "i2 = 0"->"$r0 = newarray (java.math.BigDecimal)[3]";
    "$r0 = newarray (java.math.BigDecimal)[3]"->"$r1 = new java.math.BigDecimal";
    "$r1 = new java.math.BigDecimal"->"specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789\")";
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789\")"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = new java.math.BigDecimal";
    "$r2 = new java.math.BigDecimal"->"specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1234567898\")";
    "specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1234567898\")"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = new java.math.BigDecimal";
    "$r3 = new java.math.BigDecimal"->"specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12345678987\")";
    "specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12345678987\")"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"r4 = $r0";
    "r4 = $r0"->"$r5 = newarray (java.math.BigDecimal)[3]";
    "$r5 = newarray (java.math.BigDecimal)[3]"->"$r6 = new java.math.BigDecimal";
    "$r6 = new java.math.BigDecimal"->"specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(\"987654321\")";
    "specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(\"987654321\")"->"$r5[0] = $r6";
    "$r5[0] = $r6"->"$r7 = new java.math.BigDecimal";
    "$r7 = new java.math.BigDecimal"->"specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"8987654321\")";
    "specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"8987654321\")"->"$r5[1] = $r7";
    "$r5[1] = $r7"->"$r8 = new java.math.BigDecimal";
    "$r8 = new java.math.BigDecimal"->"specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>(\"78987654321\")";
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>(\"78987654321\")"->"$r5[2] = $r8";
    "$r5[2] = $r8"->"r9 = $r5";
    "r9 = $r5"->"$r10 = newarray (java.math.BigDecimal[])[3]";
    "$r10 = newarray (java.math.BigDecimal[])[3]"->"$r11 = newarray (java.math.BigDecimal)[3]";
    "$r11 = newarray (java.math.BigDecimal)[3]"->"$r12 = new java.math.BigDecimal";
    "$r12 = new java.math.BigDecimal"->"specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(\"121932631112635269\")";
    "specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(\"121932631112635269\")"->"$r11[0] = $r12";
    "$r11[0] = $r12"->"$r13 = new java.math.BigDecimal";
    "$r13 = new java.math.BigDecimal"->"specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1109586943112635269\")";
    "specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1109586943112635269\")"->"$r11[1] = $r13";
    "$r11[1] = $r13"->"$r14 = new java.math.BigDecimal";
    "$r14 = new java.math.BigDecimal"->"specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9751562173112635269\")";
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9751562173112635269\")"->"$r11[2] = $r14";
    "$r11[2] = $r14"->"$r10[0] = $r11";
    "$r10[0] = $r11"->"$r15 = newarray (java.math.BigDecimal)[3]";
    "$r15 = newarray (java.math.BigDecimal)[3]"->"$r16 = new java.math.BigDecimal";
    "$r16 = new java.math.BigDecimal"->"specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1219326319027587258\")";
    "specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1219326319027587258\")"->"$r15[0] = $r16";
    "$r15[0] = $r16"->"$r17 = new java.math.BigDecimal";
    "$r17 = new java.math.BigDecimal"->"specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"11095869503027587258\")";
    "specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"11095869503027587258\")"->"$r15[1] = $r17";
    "$r15[1] = $r17"->"$r18 = new java.math.BigDecimal";
    "$r18 = new java.math.BigDecimal"->"specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"97515622363027587258\")";
    "specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"97515622363027587258\")"->"$r15[2] = $r18";
    "$r15[2] = $r18"->"$r10[1] = $r15";
    "$r10[1] = $r15"->"$r19 = newarray (java.math.BigDecimal)[3]";
    "$r19 = newarray (java.math.BigDecimal)[3]"->"$r20 = new java.math.BigDecimal";
    "$r20 = new java.math.BigDecimal"->"specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12193263197189452827\")";
    "specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12193263197189452827\")"->"$r19[0] = $r20";
    "$r19[0] = $r20"->"$r21 = new java.math.BigDecimal";
    "$r21 = new java.math.BigDecimal"->"specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(\"110958695093189452827\")";
    "specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(\"110958695093189452827\")"->"$r19[1] = $r21";
    "$r19[1] = $r21"->"$r22 = new java.math.BigDecimal";
    "$r22 = new java.math.BigDecimal"->"specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"975156224183189452827\")";
    "specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"975156224183189452827\")"->"$r19[2] = $r22";
    "$r19[2] = $r22"->"$r10[2] = $r19";
    "$r10[2] = $r19"->"r23 = $r10";
    "r23 = $r10"->"i3 = 0";
    "i3 = 0"->"$i0 = lengthof r4";
    "$i0 = lengthof r4"->"if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)";
    "if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)"->"i4 = 0";
    "if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)"->"r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)";
    "i4 = 0"->"$i1 = lengthof r9";
    "$i1 = lengthof r9"->"if i4 >= $i1 goto i3 = i3 + 1";
    "if i4 >= $i1 goto i3 = i3 + 1"->"$r25 = r4[i3]";
    "if i4 >= $i1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r25 = r4[i3]"->"$r24 = r9[i4]";
    "$r24 = r9[i4]"->"$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24)";
    "$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24)"->"$r27 = r23[i3]";
    "$r27 = r23[i3]"->"$r28 = $r27[i4]";
    "$r28 = $r27[i4]"->"$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28)";
    "$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28)"->"if $z0 != 0 goto i4 = i4 + 1";
    "if $z0 != 0 goto i4 = i4 + 1"->"i2 = i2 + 1";
    "if $z0 != 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "i2 = i2 + 1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i1 = lengthof r9]";
    "goto [?= $i1 = lengthof r9]"->"$i1 = lengthof r9";
    "i3 = i3 + 1"->"goto [?= $i0 = lengthof r4]";
    "goto [?= $i0 = lengthof r4]"->"$i0 = lengthof r4";
    "r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1)"->"r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L)";
    "r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L)"->"i5 = 0";
    "r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L)"->"$r29 := @caughtexception";
    "i5 = 0"->"if i5 >= 100 goto (branch)";
    "i5 = 0"->"$r29 := @caughtexception";
    "if i5 >= 100 goto (branch)"->"r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30)";
    "if i5 >= 100 goto (branch)"->"goto [?= return i2]";
    "if i5 >= 100 goto (branch)"->"$r29 := @caughtexception";
    "r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30)"->"i5 = i5 + 1";
    "r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30)"->"$r29 := @caughtexception";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "i5 = i5 + 1"->"$r29 := @caughtexception";
    "goto [?= (branch)]"->"if i5 >= 100 goto (branch)";
    "goto [?= (branch)]"->"$r29 := @caughtexception";
    "goto [?= return i2]"->"return i2";
    "$r29 := @caughtexception"->"r32 = $r29";
    "r32 = $r29"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"return i2";
}
