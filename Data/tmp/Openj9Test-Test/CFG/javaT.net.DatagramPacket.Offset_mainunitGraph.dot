digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "r0 = newarray (byte)[1024]"
    "$r1 = new java.net.DatagramPacket"
    "specialinvoke $r1.<java.net.DatagramPacket: void <init>(byte[],int,int)>(r0, 512, 512)"
    "r2 = $r1"
    "r3 = newarray (byte)[20]"
    "virtualinvoke r2.<java.net.DatagramPacket: void setData(byte[])>(r3)"
    "$i0 = virtualinvoke r2.<java.net.DatagramPacket: int getOffset()>()"
    "if $i0 == 0 goto return"
    "$r4 = new java.lang.Exception"
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"setData(byte[]) didn\'t reset offset\")"
    "throw $r4"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"r0 = newarray (byte)[1024]";
    "r0 = newarray (byte)[1024]"->"$r1 = new java.net.DatagramPacket";
    "$r1 = new java.net.DatagramPacket"->"specialinvoke $r1.<java.net.DatagramPacket: void <init>(byte[],int,int)>(r0, 512, 512)";
    "specialinvoke $r1.<java.net.DatagramPacket: void <init>(byte[],int,int)>(r0, 512, 512)"->"r2 = $r1";
    "r2 = $r1"->"r3 = newarray (byte)[20]";
    "r3 = newarray (byte)[20]"->"virtualinvoke r2.<java.net.DatagramPacket: void setData(byte[])>(r3)";
    "virtualinvoke r2.<java.net.DatagramPacket: void setData(byte[])>(r3)"->"$i0 = virtualinvoke r2.<java.net.DatagramPacket: int getOffset()>()";
    "$i0 = virtualinvoke r2.<java.net.DatagramPacket: int getOffset()>()"->"if $i0 == 0 goto return";
    "if $i0 == 0 goto return"->"$r4 = new java.lang.Exception";
    "if $i0 == 0 goto return"->"return";
    "$r4 = new java.lang.Exception"->"specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"setData(byte[]) didn\'t reset offset\")";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"setData(byte[]) didn\'t reset offset\")"->"throw $r4";
}
