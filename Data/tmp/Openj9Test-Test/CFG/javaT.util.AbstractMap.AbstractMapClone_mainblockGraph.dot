digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.AbstractMap.AbstractMapClone;
specialinvoke $r0.<javaT.util.AbstractMap.AbstractMapClone: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"1\", \"1\");
r3 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
$r4 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object clone()>();
r5 = (javaT.util.AbstractMap.AbstractMapClone) $r4;
r6 = virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"2\", \"2\");
$z0 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r6);
if $z0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.RuntimeException;
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"AbstractMap.clone() failed.\");
throw $r8;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.AbstractMap.AbstractMapClone;
specialinvoke $r0.<javaT.util.AbstractMap.AbstractMapClone: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"1\", \"1\");
r3 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
$r4 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object clone()>();
r5 = (javaT.util.AbstractMap.AbstractMapClone) $r4;
r6 = virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"2\", \"2\");
$z0 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r6);
if $z0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.RuntimeException;
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"AbstractMap.clone() failed.\");
throw $r8;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.AbstractMap.AbstractMapClone;
specialinvoke $r0.<javaT.util.AbstractMap.AbstractMapClone: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"1\", \"1\");
r3 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
$r4 = virtualinvoke r1.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object clone()>();
r5 = (javaT.util.AbstractMap.AbstractMapClone) $r4;
r6 = virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.util.Set keySet()>();
virtualinvoke r5.<javaT.util.AbstractMap.AbstractMapClone: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"2\", \"2\");
$z0 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r6);
if $z0 == 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
