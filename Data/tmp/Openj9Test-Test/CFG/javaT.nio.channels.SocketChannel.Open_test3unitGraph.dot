digraph "unitGraph" {
    "r0 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>()"
    "i0 = 0"
    "if i0 >= 11000 goto return"
    "r2 = virtualinvoke r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.Pipe openPipe()>()"
    "goto [?= i0 = i0 + 1]"
    "$r1 := @caughtexception"
    "r3 = $r1"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>()"->"i0 = 0";
    "i0 = 0"->"if i0 >= 11000 goto return";
    "if i0 >= 11000 goto return"->"r2 = virtualinvoke r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.Pipe openPipe()>()";
    "if i0 >= 11000 goto return"->"return";
    "if i0 >= 11000 goto return"->"$r1 := @caughtexception";
    "r2 = virtualinvoke r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.Pipe openPipe()>()"->"goto [?= i0 = i0 + 1]";
    "r2 = virtualinvoke r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.Pipe openPipe()>()"->"$r1 := @caughtexception";
    "goto [?= i0 = i0 + 1]"->"i0 = i0 + 1";
    "$r1 := @caughtexception"->"r3 = $r1";
    "r3 = $r1"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 11000 goto return";
}
