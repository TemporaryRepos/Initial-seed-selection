digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.DoubleBuffer;
i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>();
$i1 = i0 + 7;
r1 = newarray (double)[$i1];
virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)>(r1, 7, i0);
i6 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i6 + 7;
$d0 = r1[$i2];
$l3 = (long) $d0;
$l4 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i6);
$d1 = (double) $l4;
$l5 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l3, $l5);
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.DoubleBuffer;
i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>();
$i1 = i0 + 7;
r1 = newarray (double)[$i1];
virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)>(r1, 7, i0);
i6 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i6 + 7;
$d0 = r1[$i2];
$l3 = (long) $d0;
$l4 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i6);
$d1 = (double) $l4;
$l5 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l3, $l5);
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i6 + 7;
$d0 = r1[$i2];
$l3 = (long) $d0;
$l4 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i6);
$d1 = (double) $l4;
$l5 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l3, $l5);
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return;
";
}
