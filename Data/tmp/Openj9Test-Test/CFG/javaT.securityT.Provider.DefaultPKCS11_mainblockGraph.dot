digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r40 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.name\", \"(null)\");
r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.version\", \"(null)\");
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running on \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);
r9 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Providers: \");
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println()>();
$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"SunOS\");
if $z0 != 0 goto r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
"
    "Block 1:
[preds: 0 ] [succs: ]
$r39 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>(\"Test only applies to Solaris, skipping\");
return;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$i0 = lengthof r17;
if $i0 >= 2 goto $r18 = r17[0];
"
    "Block 3:
[preds: 2 ] [succs: ]
$r33 = new java.lang.Exception;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse Solaris version: \");
$r36 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r17);
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r33.<java.lang.Exception: void <init>(java.lang.String)>($r38);
throw $r33;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r18 = r17[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);
if $i1 == 5 goto $r19 = r17[1];
"
    "Block 5:
[preds: 4 ] [succs: ]
$r27 = new java.lang.Exception;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown Solaris major version: \");
$r30 = r17[0];
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r27;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = r17[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);
if $i2 >= 10 goto $r20 = r9[0];
"
    "Block 7:
[preds: 6 ] [succs: ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>(\"Test only applies to Solaris 10 and later, skipping\");
return;
"
    "Block 8:
[preds: 6 ] [succs: 9 11 ]
$r20 = r9[0];
$r21 = virtualinvoke $r20.<java.security.Provider: java.lang.String getName()>();
$z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z1 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r23 = r9[1];
$r24 = virtualinvoke $r23.<java.security.Provider: java.lang.String getName()>();
$z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 10:
[preds: 9 ] [succs: ]
$r25 = new java.lang.Exception;
specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String)>(\"SunPKCS11-Solaris provider not installed\");
throw $r25;
"
    "Block 11:
[preds: 8 9 ] [succs: ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"OK\");
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r40 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.name\", \"(null)\");
r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.version\", \"(null)\");
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running on \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);
r9 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Providers: \");
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println()>();
$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"SunOS\");
if $z0 != 0 goto r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
"->"Block 1:
[preds: 0 ] [succs: ]
$r39 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>(\"Test only applies to Solaris, skipping\");
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r40 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.name\", \"(null)\");
r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"os.version\", \"(null)\");
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running on \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);
r9 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Providers: \");
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println()>();
$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"SunOS\");
if $z0 != 0 goto r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$i0 = lengthof r17;
if $i0 >= 2 goto $r18 = r17[0];
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$i0 = lengthof r17;
if $i0 >= 2 goto $r18 = r17[0];
"->"Block 3:
[preds: 2 ] [succs: ]
$r33 = new java.lang.Exception;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse Solaris version: \");
$r36 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r17);
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r33.<java.lang.Exception: void <init>(java.lang.String)>($r38);
throw $r33;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r17 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$i0 = lengthof r17;
if $i0 >= 2 goto $r18 = r17[0];
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$r18 = r17[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);
if $i1 == 5 goto $r19 = r17[1];
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r18 = r17[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);
if $i1 == 5 goto $r19 = r17[1];
"->"Block 5:
[preds: 4 ] [succs: ]
$r27 = new java.lang.Exception;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown Solaris major version: \");
$r30 = r17[0];
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r27;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r18 = r17[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);
if $i1 == 5 goto $r19 = r17[1];
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = r17[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);
if $i2 >= 10 goto $r20 = r9[0];
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = r17[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);
if $i2 >= 10 goto $r20 = r9[0];
"->"Block 7:
[preds: 6 ] [succs: ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>(\"Test only applies to Solaris 10 and later, skipping\");
return;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = r17[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);
if $i2 >= 10 goto $r20 = r9[0];
"->"Block 8:
[preds: 6 ] [succs: 9 11 ]
$r20 = r9[0];
$r21 = virtualinvoke $r20.<java.security.Provider: java.lang.String getName()>();
$z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z1 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 8:
[preds: 6 ] [succs: 9 11 ]
$r20 = r9[0];
$r21 = virtualinvoke $r20.<java.security.Provider: java.lang.String getName()>();
$z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z1 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r23 = r9[1];
$r24 = virtualinvoke $r23.<java.security.Provider: java.lang.String getName()>();
$z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 8:
[preds: 6 ] [succs: 9 11 ]
$r20 = r9[0];
$r21 = virtualinvoke $r20.<java.security.Provider: java.lang.String getName()>();
$z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z1 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 8 9 ] [succs: ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"OK\");
return;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r23 = r9[1];
$r24 = virtualinvoke $r23.<java.security.Provider: java.lang.String getName()>();
$z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 10:
[preds: 9 ] [succs: ]
$r25 = new java.lang.Exception;
specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String)>(\"SunPKCS11-Solaris provider not installed\");
throw $r25;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r23 = r9[1];
$r24 = virtualinvoke $r23.<java.security.Provider: java.lang.String getName()>();
$z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"SunPKCS11-Solaris\");
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 8 9 ] [succs: ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"OK\");
return;
";
}
