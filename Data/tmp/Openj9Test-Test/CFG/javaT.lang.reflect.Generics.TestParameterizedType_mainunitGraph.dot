digraph "unitGraph" {
    "r17 := @parameter0: java.lang.String[]"
    "z4 = 0"
    "r0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()"
    "r1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()"
    "$z0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r0)"
    "z5 = z4 | $z0"
    "$z1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r1)"
    "z6 = z5 | $z1"
    "i2 = 0"
    "$i0 = interfaceinvoke r0.<java.util.List: int size()>()"
    "if i2 >= $i0 goto (branch)"
    "$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)"
    "r4 = (java.lang.reflect.Type) $r3"
    "i3 = 0"
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"
    "if i3 >= $i1 goto i2 = i2 + 1"
    "$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3)"
    "r6 = (java.lang.reflect.Type) $r5"
    "if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"
    "$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"
    "if $z3 != 0 goto i3 = i3 + 1"
    "z6 = 1"
    "$r13 = <java.lang.System: java.io.PrintStream err>"
    "$r12 = newarray (java.lang.Object)[4]"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"
    "$r12[0] = $r14"
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "$r12[1] = $r15"
    "$r12[2] = r4"
    "$r12[3] = r6"
    "virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12)"
    "goto [?= i3 = i3 + 1]"
    "$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"
    "if $z2 == 0 goto i3 = i3 + 1"
    "$r8 = <java.lang.System: java.io.PrintStream err>"
    "$r7 = newarray (java.lang.Object)[4]"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"
    "$r7[0] = $r9"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "$r7[1] = $r10"
    "$r7[2] = r4"
    "$r7[3] = r6"
    "virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7)"
    "i3 = i3 + 1"
    "goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()]"
    "i2 = i2 + 1"
    "goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()]"
    "if z6 == 0 goto return"
    "$r2 = new java.lang.RuntimeException"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bad equality on ParameterizedTypes\")"
    "throw $r2"
    "return"
    "r17 := @parameter0: java.lang.String[]"->"z4 = 0";
    "z4 = 0"->"r0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()";
    "r0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()"->"r1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()";
    "r1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>()"->"$z0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r0)";
    "$z0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r0)"->"z5 = z4 | $z0";
    "z5 = z4 | $z0"->"$z1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r1)";
    "$z1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r1)"->"z6 = z5 | $z1";
    "z6 = z5 | $z1"->"i2 = 0";
    "i2 = 0"->"$i0 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i0 = interfaceinvoke r0.<java.util.List: int size()>()"->"if i2 >= $i0 goto (branch)";
    "if i2 >= $i0 goto (branch)"->"$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)";
    "if i2 >= $i0 goto (branch)"->"if z6 == 0 goto return";
    "$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)"->"r4 = (java.lang.reflect.Type) $r3";
    "r4 = (java.lang.reflect.Type) $r3"->"i3 = 0";
    "i3 = 0"->"$i1 = interfaceinvoke r1.<java.util.List: int size()>()";
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"->"if i3 >= $i1 goto i2 = i2 + 1";
    "if i3 >= $i1 goto i2 = i2 + 1"->"$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3)";
    "if i3 >= $i1 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3)"->"r6 = (java.lang.reflect.Type) $r5";
    "r6 = (java.lang.reflect.Type) $r5"->"if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)";
    "if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"->"$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)";
    "if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"->"$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)";
    "$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"->"if $z3 != 0 goto i3 = i3 + 1";
    "if $z3 != 0 goto i3 = i3 + 1"->"z6 = 1";
    "if $z3 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "z6 = 1"->"$r13 = <java.lang.System: java.io.PrintStream err>";
    "$r13 = <java.lang.System: java.io.PrintStream err>"->"$r12 = newarray (java.lang.Object)[4]";
    "$r12 = newarray (java.lang.Object)[4]"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"->"$r12[0] = $r14";
    "$r12[0] = $r14"->"$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"$r12[1] = $r15";
    "$r12[1] = $r15"->"$r12[2] = r4";
    "$r12[2] = r4"->"$r12[3] = r6";
    "$r12[3] = r6"->"virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12)";
    "virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12)"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6)"->"if $z2 == 0 goto i3 = i3 + 1";
    "if $z2 == 0 goto i3 = i3 + 1"->"z6 = 1";
    "if $z2 == 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "z6 = 1"->"$r8 = <java.lang.System: java.io.PrintStream err>";
    "$r8 = <java.lang.System: java.io.PrintStream err>"->"$r7 = newarray (java.lang.Object)[4]";
    "$r7 = newarray (java.lang.Object)[4]"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"->"$r7[0] = $r9";
    "$r7[0] = $r9"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"$r7[1] = $r10";
    "$r7[1] = $r10"->"$r7[2] = r4";
    "$r7[2] = r4"->"$r7[3] = r6";
    "$r7[3] = r6"->"virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7)";
    "virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()]";
    "goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()]"->"$i1 = interfaceinvoke r1.<java.util.List: int size()>()";
    "i2 = i2 + 1"->"goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()]";
    "goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()]"->"$i0 = interfaceinvoke r0.<java.util.List: int size()>()";
    "if z6 == 0 goto return"->"$r2 = new java.lang.RuntimeException";
    "if z6 == 0 goto return"->"return";
    "$r2 = new java.lang.RuntimeException"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bad equality on ParameterizedTypes\")";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bad equality on ParameterizedTypes\")"->"throw $r2";
}
