digraph "unitGraph" {
    "r0 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"
    "$r1 = new java.text.DecimalFormat"
    "specialinvoke $r1.<java.text.DecimalFormat: void <init>()>()"
    "r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df> = $r1"
    "$r2 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>"
    "virtualinvoke $r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(0)"
    "$r3 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>"
    "virtualinvoke $r3.<java.text.DecimalFormat: void setMultiplier(int)>(0)"
    "$r4 = new java.lang.Double"
    "specialinvoke $r4.<java.lang.Double: void <init>(double)>(#Infinity)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"1000.000\", $r4)"
    "$r5 = new java.lang.Double"
    "specialinvoke $r5.<java.lang.Double: void <init>(double)>(#-Infinity)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-1000.000\", $r5)"
    "$r6 = new java.lang.Double"
    "specialinvoke $r6.<java.lang.Double: void <init>(double)>(#NaN)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"0.0\", $r6)"
    "$r7 = new java.lang.Double"
    "specialinvoke $r7.<java.lang.Double: void <init>(double)>(#NaN)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-0.0\", $r7)"
    "$r8 = new java.lang.Double"
    "specialinvoke $r8.<java.lang.Double: void <init>(double)>(#NaN)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\ufffd\", $r8)"
    "$r9 = new java.lang.Double"
    "specialinvoke $r9.<java.lang.Double: void <init>(double)>(#Infinity)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\u221e\", $r9)"
    "$r10 = new java.lang.Double"
    "specialinvoke $r10.<java.lang.Double: void <init>(double)>(#-Infinity)"
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-\u221e\", $r10)"
    "return"
    "r0 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"->"$r1 = new java.text.DecimalFormat";
    "$r1 = new java.text.DecimalFormat"->"specialinvoke $r1.<java.text.DecimalFormat: void <init>()>()";
    "specialinvoke $r1.<java.text.DecimalFormat: void <init>()>()"->"r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df> = $r1";
    "r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df> = $r1"->"$r2 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>";
    "$r2 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>"->"virtualinvoke $r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(0)";
    "virtualinvoke $r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(0)"->"$r3 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>";
    "$r3 = r0.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.DecimalFormat df>"->"virtualinvoke $r3.<java.text.DecimalFormat: void setMultiplier(int)>(0)";
    "virtualinvoke $r3.<java.text.DecimalFormat: void setMultiplier(int)>(0)"->"$r4 = new java.lang.Double";
    "$r4 = new java.lang.Double"->"specialinvoke $r4.<java.lang.Double: void <init>(double)>(#Infinity)";
    "specialinvoke $r4.<java.lang.Double: void <init>(double)>(#Infinity)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"1000.000\", $r4)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"1000.000\", $r4)"->"$r5 = new java.lang.Double";
    "$r5 = new java.lang.Double"->"specialinvoke $r5.<java.lang.Double: void <init>(double)>(#-Infinity)";
    "specialinvoke $r5.<java.lang.Double: void <init>(double)>(#-Infinity)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-1000.000\", $r5)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-1000.000\", $r5)"->"$r6 = new java.lang.Double";
    "$r6 = new java.lang.Double"->"specialinvoke $r6.<java.lang.Double: void <init>(double)>(#NaN)";
    "specialinvoke $r6.<java.lang.Double: void <init>(double)>(#NaN)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"0.0\", $r6)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"0.0\", $r6)"->"$r7 = new java.lang.Double";
    "$r7 = new java.lang.Double"->"specialinvoke $r7.<java.lang.Double: void <init>(double)>(#NaN)";
    "specialinvoke $r7.<java.lang.Double: void <init>(double)>(#NaN)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-0.0\", $r7)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-0.0\", $r7)"->"$r8 = new java.lang.Double";
    "$r8 = new java.lang.Double"->"specialinvoke $r8.<java.lang.Double: void <init>(double)>(#NaN)";
    "specialinvoke $r8.<java.lang.Double: void <init>(double)>(#NaN)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\ufffd\", $r8)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\ufffd\", $r8)"->"$r9 = new java.lang.Double";
    "$r9 = new java.lang.Double"->"specialinvoke $r9.<java.lang.Double: void <init>(double)>(#Infinity)";
    "specialinvoke $r9.<java.lang.Double: void <init>(double)>(#Infinity)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\u221e\", $r9)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"\u221e\", $r9)"->"$r10 = new java.lang.Double";
    "$r10 = new java.lang.Double"->"specialinvoke $r10.<java.lang.Double: void <init>(double)>(#-Infinity)";
    "specialinvoke $r10.<java.lang.Double: void <init>(double)>(#-Infinity)"->"virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-\u221e\", $r10)";
    "virtualinvoke r0.<javaT.text.Format.NumberFormat.BigDecimalParse: void check(java.lang.String,java.lang.Number)>(\"-\u221e\", $r10)"->"return";
}
