digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\")"
    "$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\")"
    "$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"
    "r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\")"
    "$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"
    "r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\")"
    "$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"
    "r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\")"
    "r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"
    "$z12 = r9 instanceof java.lang.reflect.TypeVariable"
    "if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"
    "$r36 = new java.lang.AssertionError"
    "specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.ft is a type variable\")"
    "throw $r36"
    "r10 = (java.lang.reflect.TypeVariable) r9"
    "$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"
    "if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$r30 = new java.lang.AssertionError"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type of ft is T1, not \")"
    "$r33 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35)"
    "throw $r30"
    "r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$i1 = lengthof r11"
    "if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r28 = new java.lang.AssertionError"
    "specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of ft should have one bound\")"
    "throw $r28"
    "r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"
    "$z10 = r12 instanceof java.lang.reflect.ParameterizedType"
    "if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"
    "$r27 = new java.lang.AssertionError"
    "specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.fc1t is a parameterized type\")"
    "throw $r27"
    "r13 = (java.lang.reflect.ParameterizedType) r12"
    "$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"
    "if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r26 = new java.lang.AssertionError"
    "specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is an instantiation of C0\")"
    "throw $r26"
    "$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>()"
    "if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r24 = new java.lang.AssertionError"
    "specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is has null owner\")"
    "throw $r24"
    "r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z6 != 0 goto r15 = r14[0]"
    "$i0 = lengthof r14"
    "if $i0 == 1 goto r15 = r14[0]"
    "$r22 = new java.lang.AssertionError"
    "specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of fc1t has one type argument\")"
    "throw $r22"
    "r15 = r14[0]"
    "$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r21 = new java.lang.AssertionError"
    "specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<String> is String\")"
    "throw $r21"
    "r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r20 = new java.lang.AssertionError"
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fc1 should be C0\")"
    "throw $r20"
    "r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z9 != 0 goto return"
    "$r18 = <java.lang.Integer: java.lang.Class TYPE>"
    "if r17 == $r18 goto return"
    "$r19 = new java.lang.AssertionError"
    "specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fi should be int\")"
    "throw $r19"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\")"->"$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>";
    "$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"->"r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\")";
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\")"->"$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>";
    "$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"->"r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\")";
    "r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\")"->"$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>";
    "$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"->"r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\")";
    "r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\")"->"$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>";
    "$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"->"r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\")";
    "r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\")"->"r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9";
    "if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"->"$z12 = r9 instanceof java.lang.reflect.TypeVariable";
    "if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"->"r10 = (java.lang.reflect.TypeVariable) r9";
    "$z12 = r9 instanceof java.lang.reflect.TypeVariable"->"if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9";
    "if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"->"$r36 = new java.lang.AssertionError";
    "if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9"->"r10 = (java.lang.reflect.TypeVariable) r9";
    "$r36 = new java.lang.AssertionError"->"specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.ft is a type variable\")";
    "specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.ft is a type variable\")"->"throw $r36";
    "r10 = (java.lang.reflect.TypeVariable) r9"->"$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")";
    "$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"->"if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$r30 = new java.lang.AssertionError";
    "if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "$r30 = new java.lang.AssertionError"->"$r31 = new java.lang.StringBuilder";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type of ft is T1, not \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type of ft is T1, not \")"->"$r33 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "$r33 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)";
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35)";
    "specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35)"->"throw $r30";
    "r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$i1 = lengthof r11";
    "if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$i1 = lengthof r11"->"if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r28 = new java.lang.AssertionError";
    "if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r28 = new java.lang.AssertionError"->"specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of ft should have one bound\")";
    "specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of ft should have one bound\")"->"throw $r28";
    "r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12";
    "if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"->"$z10 = r12 instanceof java.lang.reflect.ParameterizedType";
    "if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"->"r13 = (java.lang.reflect.ParameterizedType) r12";
    "$z10 = r12 instanceof java.lang.reflect.ParameterizedType"->"if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12";
    "if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"->"$r27 = new java.lang.AssertionError";
    "if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12"->"r13 = (java.lang.reflect.ParameterizedType) r12";
    "$r27 = new java.lang.AssertionError"->"specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.fc1t is a parameterized type\")";
    "specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.fc1t is a parameterized type\")"->"throw $r27";
    "r13 = (java.lang.reflect.ParameterizedType) r12"->"$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()";
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"->"if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r26 = new java.lang.AssertionError";
    "if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r26 = new java.lang.AssertionError"->"specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is an instantiation of C0\")";
    "specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is an instantiation of C0\")"->"throw $r26";
    "$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>()";
    "if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>()"->"if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r24 = new java.lang.AssertionError";
    "if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r24 = new java.lang.AssertionError"->"specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is has null owner\")";
    "specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is has null owner\")"->"throw $r24";
    "r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z6 != 0 goto r15 = r14[0]";
    "if $z6 != 0 goto r15 = r14[0]"->"$i0 = lengthof r14";
    "if $z6 != 0 goto r15 = r14[0]"->"r15 = r14[0]";
    "$i0 = lengthof r14"->"if $i0 == 1 goto r15 = r14[0]";
    "if $i0 == 1 goto r15 = r14[0]"->"$r22 = new java.lang.AssertionError";
    "if $i0 == 1 goto r15 = r14[0]"->"r15 = r14[0]";
    "$r22 = new java.lang.AssertionError"->"specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of fc1t has one type argument\")";
    "specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of fc1t has one type argument\")"->"throw $r22";
    "r15 = r14[0]"->"$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r21 = new java.lang.AssertionError";
    "if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r21 = new java.lang.AssertionError"->"specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<String> is String\")";
    "specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<String> is String\")"->"throw $r21";
    "r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r20 = new java.lang.AssertionError";
    "if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r20 = new java.lang.AssertionError"->"specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fc1 should be C0\")";
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fc1 should be C0\")"->"throw $r20";
    "r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z9 != 0 goto return";
    "if $z9 != 0 goto return"->"$r18 = <java.lang.Integer: java.lang.Class TYPE>";
    "if $z9 != 0 goto return"->"return";
    "$r18 = <java.lang.Integer: java.lang.Class TYPE>"->"if r17 == $r18 goto return";
    "if r17 == $r18 goto return"->"$r19 = new java.lang.AssertionError";
    "if r17 == $r18 goto return"->"return";
    "$r19 = new java.lang.AssertionError"->"specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fi should be int\")";
    "specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fi should be int\")"->"throw $r19";
}
