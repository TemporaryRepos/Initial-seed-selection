digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r1 := @parameter1: java.lang.String[]"
    "$i1 = lengthof r0"
    "$i0 = lengthof r1"
    "if $i1 == $i0 goto i3 = 0"
    "$r5 = new java.lang.Exception"
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r5"
    "i3 = 0"
    "$i2 = lengthof r0"
    "if i3 >= $i2 goto return"
    "$r3 = r0[i3]"
    "$r2 = r1[i3]"
    "$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2)"
    "if $z0 != 0 goto i3 = i3 + 1"
    "$r4 = new java.lang.Exception"
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r4"
    "i3 = i3 + 1"
    "goto [?= $i2 = lengthof r0]"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"r1 := @parameter1: java.lang.String[]";
    "r1 := @parameter1: java.lang.String[]"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if $i1 == $i0 goto i3 = 0";
    "if $i1 == $i0 goto i3 = 0"->"$r5 = new java.lang.Exception";
    "if $i1 == $i0 goto i3 = 0"->"i3 = 0";
    "$r5 = new java.lang.Exception"->"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r5";
    "i3 = 0"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if i3 >= $i2 goto return";
    "if i3 >= $i2 goto return"->"$r3 = r0[i3]";
    "if i3 >= $i2 goto return"->"return";
    "$r3 = r0[i3]"->"$r2 = r1[i3]";
    "$r2 = r1[i3]"->"$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2)";
    "$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2)"->"if $z0 != 0 goto i3 = i3 + 1";
    "if $z0 != 0 goto i3 = i3 + 1"->"$r4 = new java.lang.Exception";
    "if $z0 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r4 = new java.lang.Exception"->"specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r4";
    "i3 = i3 + 1"->"goto [?= $i2 = lengthof r0]";
    "goto [?= $i2 = lengthof r0]"->"$i2 = lengthof r0";
}
