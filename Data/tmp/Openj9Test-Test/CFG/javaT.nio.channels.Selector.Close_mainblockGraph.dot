digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r1 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r2 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>();
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r0, 1);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r1, 1);
$r6 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>(r0);
virtualinvoke $r6.<java.nio.channels.SelectionKey: void cancel()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r2.<java.nio.channels.SocketChannel: void close()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r1.<java.nio.channels.Selector: int select(long)>(1L);
$r7 = virtualinvoke r0.<java.nio.channels.Selector: java.util.Set keys()>();
$i3 = interfaceinvoke $r7.<java.util.Set: int size()>();
if $i3 <= 0 goto $r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
"
    "Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Keys remain in selector a\");
throw $r10;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
$i4 = interfaceinvoke $r8.<java.util.Set: int size()>();
if $i4 <= 0 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$r9 = new java.lang.RuntimeException;
specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Keys remain in selector b\");
throw $r9;
"
    "Block 4:
[preds: 2 ] [succs: ]
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
virtualinvoke r1.<java.nio.channels.Selector: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r1 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r2 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>();
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r0, 1);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r1, 1);
$r6 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>(r0);
virtualinvoke $r6.<java.nio.channels.SelectionKey: void cancel()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r2.<java.nio.channels.SocketChannel: void close()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r1.<java.nio.channels.Selector: int select(long)>(1L);
$r7 = virtualinvoke r0.<java.nio.channels.Selector: java.util.Set keys()>();
$i3 = interfaceinvoke $r7.<java.util.Set: int size()>();
if $i3 <= 0 goto $r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
"->"Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Keys remain in selector a\");
throw $r10;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r1 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
r2 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>();
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r0, 1);
virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>(r1, 1);
$r6 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>(r0);
virtualinvoke $r6.<java.nio.channels.SelectionKey: void cancel()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r2.<java.nio.channels.SocketChannel: void close()>();
virtualinvoke r0.<java.nio.channels.Selector: int select(long)>(1L);
virtualinvoke r1.<java.nio.channels.Selector: int select(long)>(1L);
$r7 = virtualinvoke r0.<java.nio.channels.Selector: java.util.Set keys()>();
$i3 = interfaceinvoke $r7.<java.util.Set: int size()>();
if $i3 <= 0 goto $r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
$i4 = interfaceinvoke $r8.<java.util.Set: int size()>();
if $i4 <= 0 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
$i4 = interfaceinvoke $r8.<java.util.Set: int size()>();
if $i4 <= 0 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$r9 = new java.lang.RuntimeException;
specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Keys remain in selector b\");
throw $r9;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r8 = virtualinvoke r1.<java.nio.channels.Selector: java.util.Set keys()>();
$i4 = interfaceinvoke $r8.<java.util.Set: int size()>();
if $i4 <= 0 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"->"Block 4:
[preds: 2 ] [succs: ]
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
virtualinvoke r1.<java.nio.channels.Selector: void close()>();
return;
";
}
