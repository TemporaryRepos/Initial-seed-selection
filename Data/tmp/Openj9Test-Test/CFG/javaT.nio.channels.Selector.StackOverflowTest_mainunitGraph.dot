digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "r8 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"
    "r9 = null"
    "staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)"
    "if r8 == null goto (branch)"
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"
    "goto [?= (branch)]"
    "$r6 := @caughtexception"
    "r10 = $r6"
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"
    "$r5 := @caughtexception"
    "r11 = $r5"
    "r9 = r11"
    "throw r11"
    "$r4 := @caughtexception"
    "r3 = $r4"
    "if r8 == null goto throw r3"
    "goto [?= throw r3]"
    "$r1 := @caughtexception"
    "r2 = $r1"
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2)"
    "throw r3"
    "goto [?= return]"
    "$r0 := @caughtexception"
    "r12 = $r0"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"r8 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()";
    "r7 := @parameter0: java.lang.String[]"->"$r0 := @caughtexception";
    "r8 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"->"r9 = null";
    "r8 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"->"$r0 := @caughtexception";
    "r9 = null"->"$r5 := @caughtexception";
    "r9 = null"->"$r0 := @caughtexception";
    "r9 = null"->"$r4 := @caughtexception";
    "r9 = null"->"staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)";
    "staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)"->"$r5 := @caughtexception";
    "staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)"->"$r0 := @caughtexception";
    "staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)"->"$r4 := @caughtexception";
    "staticinvoke <javaT.nio.channels.Selector.StackOverflowTest: void recursiveSelect(java.nio.channels.Selector)>(r8)"->"if r8 == null goto (branch)";
    "if r8 == null goto (branch)"->"if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r8 == null goto (branch)"->"goto [?= return]";
    "if r8 == null goto (branch)"->"$r0 := @caughtexception";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r6 := @caughtexception";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r6 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r0 := @caughtexception";
    "$r6 := @caughtexception"->"r10 = $r6";
    "$r6 := @caughtexception"->"$r0 := @caughtexception";
    "r10 = $r6"->"virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)";
    "r10 = $r6"->"$r0 := @caughtexception";
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"->"goto [?= (branch)]";
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"->"$r0 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"goto [?= (branch)]";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r0 := @caughtexception";
    "$r5 := @caughtexception"->"r11 = $r5";
    "$r5 := @caughtexception"->"$r4 := @caughtexception";
    "r11 = $r5"->"r9 = r11";
    "r11 = $r5"->"$r4 := @caughtexception";
    "r9 = r11"->"throw r11";
    "r9 = r11"->"$r4 := @caughtexception";
    "throw r11"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"r3 = $r4";
    "$r4 := @caughtexception"->"$r4 := @caughtexception";
    "r3 = $r4"->"$r4 := @caughtexception";
    "r3 = $r4"->"$r0 := @caughtexception";
    "r3 = $r4"->"if r8 == null goto throw r3";
    "if r8 == null goto throw r3"->"if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r8 == null goto throw r3"->"throw r3";
    "if r8 == null goto throw r3"->"$r0 := @caughtexception";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r8.<java.nio.channels.Selector: void close()>()";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r1 := @caughtexception";
    "if r9 == null goto virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r1 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"goto [?= throw r3]";
    "goto [?= throw r3]"->"throw r3";
    "goto [?= throw r3]"->"$r0 := @caughtexception";
    "$r1 := @caughtexception"->"r2 = $r1";
    "$r1 := @caughtexception"->"$r0 := @caughtexception";
    "r2 = $r1"->"virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2)";
    "r2 = $r1"->"$r0 := @caughtexception";
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2)"->"goto [?= throw r3]";
    "virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2)"->"$r0 := @caughtexception";
    "goto [?= throw r3]"->"throw r3";
    "goto [?= throw r3]"->"$r0 := @caughtexception";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"throw r3";
    "virtualinvoke r8.<java.nio.channels.Selector: void close()>()"->"$r0 := @caughtexception";
    "throw r3"->"$r0 := @caughtexception";
    "goto [?= return]"->"return";
    "$r0 := @caughtexception"->"r12 = $r0";
    "r12 = $r0"->"return";
}
