digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = new javaT.util.LinkedHashMap.Cache$1;
specialinvoke $r0.<javaT.util.LinkedHashMap.Cache$1: void <init>()>();
r1 = $r0;
i3 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= 100 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = new java.lang.Integer;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\");
$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();
$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
$r7 = (java.lang.Integer) $r6;
i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i1 = i3 - 9;
$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);
if i0 == $i2 goto i3 = i3 + 1;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"i = \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", eldest = \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);
throw $r8;
"
    "Block 4:
[preds: 2 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = new javaT.util.LinkedHashMap.Cache$1;
specialinvoke $r0.<javaT.util.LinkedHashMap.Cache$1: void <init>()>();
r1 = $r0;
i3 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= 100 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= 100 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = new java.lang.Integer;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\");
$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();
$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
$r7 = (java.lang.Integer) $r6;
i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i1 = i3 - 9;
$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);
if i0 == $i2 goto i3 = i3 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= 100 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = new java.lang.Integer;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\");
$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();
$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
$r7 = (java.lang.Integer) $r6;
i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i1 = i3 - 9;
$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);
if i0 == $i2 goto i3 = i3 + 1;
"->"Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"i = \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", eldest = \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);
throw $r8;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = new java.lang.Integer;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\");
$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();
$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
$r7 = (java.lang.Integer) $r6;
i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i1 = i3 - 9;
$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);
if i0 == $i2 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i3 >= 100 goto return;
";
}
