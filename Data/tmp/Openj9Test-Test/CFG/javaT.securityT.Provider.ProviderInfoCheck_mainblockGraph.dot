digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r13 := @parameter0: java.lang.String[];
$r0 = new javaT.securityT.Provider.ProviderInfoCheck$SampleProvider;
specialinvoke $r0.<javaT.securityT.Provider.ProviderInfoCheck$SampleProvider: void <init>()>();
r1 = $r0;
$r2 = new java.io.ByteArrayOutputStream;
specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();
r3 = $r2;
$r4 = new java.io.ObjectOutputStream;
specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r3);
r5 = $r4;
virtualinvoke r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);
virtualinvoke r5.<java.io.ObjectOutputStream: void close()>();
$r6 = new java.io.ByteArrayInputStream;
$r7 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);
r8 = $r6;
$r9 = new java.io.ObjectInputStream;
specialinvoke $r9.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r8);
r10 = $r9;
$r11 = virtualinvoke r10.<java.io.ObjectInputStream: java.lang.Object readObject()>();
r12 = (java.security.Provider) $r11;
virtualinvoke r10.<java.io.ObjectInputStream: void close()>();
staticinvoke <javaT.securityT.Provider.ProviderInfoCheck: void checkProviderInfoEntries(java.security.Provider)>(r12);
return;
"
}
