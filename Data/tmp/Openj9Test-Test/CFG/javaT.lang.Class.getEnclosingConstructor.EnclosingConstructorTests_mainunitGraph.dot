digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "b4 = 0"
    "$r0 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests"
    "specialinvoke $r0.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>()>()"
    "r7 = $r0"
    "$r1 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests"
    "specialinvoke $r1.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>(int)>(5)"
    "r8 = $r1"
    "$i0 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>(class \"LjavaT/lang/Class/getEnclosingConstructor/EnclosingConstructorTests$1StaticLocal;\", null)"
    "i5 = b4 + $i0"
    "$r2 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class localClass>"
    "$i1 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r2, \"EnclosingConstructorTests()\")"
    "i6 = i5 + $i1"
    "$r3 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anotherLocalClass>"
    "$i2 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r3, \"private EnclosingConstructorTests(int)\")"
    "i7 = i6 + $i2"
    "$r4 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anonymousClass>"
    "$i3 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r4, null)"
    "i8 = i7 + $i3"
    "if i8 <= 0 goto return"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed.\")"
    "throw $r5"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"b4 = 0";
    "b4 = 0"->"$r0 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests";
    "$r0 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests"->"specialinvoke $r0.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>()>()";
    "specialinvoke $r0.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>()>()"->"r7 = $r0";
    "r7 = $r0"->"$r1 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests";
    "$r1 = new javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests"->"specialinvoke $r1.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>(int)>(5)";
    "specialinvoke $r1.<javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: void <init>(int)>(5)"->"r8 = $r1";
    "r8 = $r1"->"$i0 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>(class \"LjavaT/lang/Class/getEnclosingConstructor/EnclosingConstructorTests$1StaticLocal;\", null)";
    "$i0 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>(class \"LjavaT/lang/Class/getEnclosingConstructor/EnclosingConstructorTests$1StaticLocal;\", null)"->"i5 = b4 + $i0";
    "i5 = b4 + $i0"->"$r2 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class localClass>";
    "$r2 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class localClass>"->"$i1 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r2, \"EnclosingConstructorTests()\")";
    "$i1 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r2, \"EnclosingConstructorTests()\")"->"i6 = i5 + $i1";
    "i6 = i5 + $i1"->"$r3 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anotherLocalClass>";
    "$r3 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anotherLocalClass>"->"$i2 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r3, \"private EnclosingConstructorTests(int)\")";
    "$i2 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r3, \"private EnclosingConstructorTests(int)\")"->"i7 = i6 + $i2";
    "i7 = i6 + $i2"->"$r4 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anonymousClass>";
    "$r4 = <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: java.lang.Class anonymousClass>"->"$i3 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r4, null)";
    "$i3 = staticinvoke <javaT.lang.Class.getEnclosingConstructor.EnclosingConstructorTests: int examine(java.lang.Class,java.lang.String)>($r4, null)"->"i8 = i7 + $i3";
    "i8 = i7 + $i3"->"if i8 <= 0 goto return";
    "if i8 <= 0 goto return"->"$r5 = new java.lang.RuntimeException";
    "if i8 <= 0 goto return"->"return";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed.\")";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed.\")"->"throw $r5";
}
