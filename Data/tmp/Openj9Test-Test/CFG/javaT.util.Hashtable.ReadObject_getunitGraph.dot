digraph "unitGraph" {
    "r0 := @this: javaT.util.Hashtable.ReadObject"
    "r1 := @parameter0: java.lang.Object"
    "$r2 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1)"
    "r3 = (javaT.util.Hashtable.ReadObject$ValueWrapper) $r2"
    "r4 = virtualinvoke r3.<javaT.util.Hashtable.ReadObject$ValueWrapper: java.lang.Object getValue()>()"
    "$z0 = r4 instanceof javaT.util.Hashtable.ReadObject$ValueWrapper"
    "if $z0 == 0 goto return r4"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Hashtable.get bug\")"
    "throw $r5"
    "return r4"
    "r0 := @this: javaT.util.Hashtable.ReadObject"->"r1 := @parameter0: java.lang.Object";
    "r1 := @parameter0: java.lang.Object"->"$r2 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1)";
    "$r2 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1)"->"r3 = (javaT.util.Hashtable.ReadObject$ValueWrapper) $r2";
    "r3 = (javaT.util.Hashtable.ReadObject$ValueWrapper) $r2"->"r4 = virtualinvoke r3.<javaT.util.Hashtable.ReadObject$ValueWrapper: java.lang.Object getValue()>()";
    "r4 = virtualinvoke r3.<javaT.util.Hashtable.ReadObject$ValueWrapper: java.lang.Object getValue()>()"->"$z0 = r4 instanceof javaT.util.Hashtable.ReadObject$ValueWrapper";
    "$z0 = r4 instanceof javaT.util.Hashtable.ReadObject$ValueWrapper"->"if $z0 == 0 goto return r4";
    "if $z0 == 0 goto return r4"->"$r5 = new java.lang.RuntimeException";
    "if $z0 == 0 goto return r4"->"return r4";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Hashtable.get bug\")";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Hashtable.get bug\")"->"throw $r5";
}
