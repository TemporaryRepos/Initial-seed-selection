digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"===== TESTING MODE \");
$r4 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r5 = $r4[i2];
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" =====\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r11 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r12 = $r11[i2];
$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/PKCS5Padding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
r27 = null;
r28 = null;
r29 = null;
r17 = newarray (byte)[8];
i3 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= 2 goto i2 = i2 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 7 ]
lookupswitch(i3) {     case 0: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 1: goto $r18 = <java.lang.System: java.io.PrintStream out>;     default: goto $i4 = i2 * 5; };
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.ENCRYPT_MODE\");
$r23 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r34 = (java.security.Key) $r23;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r34);
$r24 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
r29 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
$r32 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r32.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r32;
$r26 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>($r26, r29);
r28 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
goto [?= $i4 = i2 * 5];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.DECRYPT_MODE\");
$r19 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r35 = (java.security.Key) $r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r35, r28);
$r33 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r33.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r33;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>(r29, $r21);
"
    "Block 7:
[preds: 4 5 6 ] [succs: 3 ]
$i4 = i2 * 5;
i1 = 2 + $i4;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdate()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdateWithUpdate(int)>(i1);
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinal()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinalWithUpdate(int)>(i1);
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>];
"
    "Block 9:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"===== TESTING MODE \");
$r4 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r5 = $r4[i2];
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" =====\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r11 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r12 = $r11[i2];
$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/PKCS5Padding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
r27 = null;
r28 = null;
r29 = null;
r17 = newarray (byte)[8];
i3 = 0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"->"Block 9:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"===== TESTING MODE \");
$r4 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r5 = $r4[i2];
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" =====\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r11 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$r12 = $r11[i2];
$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/PKCS5Padding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
r27 = null;
r28 = null;
r29 = null;
r17 = newarray (byte)[8];
i3 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= 2 goto i2 = i2 + 1;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= 2 goto i2 = i2 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 7 ]
lookupswitch(i3) {     case 0: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 1: goto $r18 = <java.lang.System: java.io.PrintStream out>;     default: goto $i4 = i2 * 5; };
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= 2 goto i2 = i2 + 1;
"->"Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 7 ]
lookupswitch(i3) {     case 0: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 1: goto $r18 = <java.lang.System: java.io.PrintStream out>;     default: goto $i4 = i2 * 5; };
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.ENCRYPT_MODE\");
$r23 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r34 = (java.security.Key) $r23;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r34);
$r24 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
r29 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
$r32 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r32.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r32;
$r26 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>($r26, r29);
r28 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
goto [?= $i4 = i2 * 5];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 7 ]
lookupswitch(i3) {     case 0: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 1: goto $r18 = <java.lang.System: java.io.PrintStream out>;     default: goto $i4 = i2 * 5; };
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.DECRYPT_MODE\");
$r19 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r35 = (java.security.Key) $r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r35, r28);
$r33 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r33.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r33;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>(r29, $r21);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 7 ]
lookupswitch(i3) {     case 0: goto $r22 = <java.lang.System: java.io.PrintStream out>;     case 1: goto $r18 = <java.lang.System: java.io.PrintStream out>;     default: goto $i4 = i2 * 5; };
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
$i4 = i2 * 5;
i1 = 2 + $i4;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdate()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdateWithUpdate(int)>(i1);
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinal()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinalWithUpdate(int)>(i1);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.ENCRYPT_MODE\");
$r23 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r34 = (java.security.Key) $r23;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r34);
$r24 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
r29 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
$r32 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r32.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r32;
$r26 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>($r26, r29);
r28 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
goto [?= $i4 = i2 * 5];
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
$i4 = i2 * 5;
i1 = 2 + $i4;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdate()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdateWithUpdate(int)>(i1);
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinal()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinalWithUpdate(int)>(i1);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Testing with Cipher.DECRYPT_MODE\");
$r19 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.SecretKey KEY>;
$r35 = (java.security.Key) $r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r35, r28);
$r33 = new com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
specialinvoke $r33.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void <init>(javax.crypto.Cipher)>(r16);
r27 = $r33;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] PLAINTEXT>;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void init(byte[],byte[])>(r29, $r21);
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
$i4 = i2 * 5;
i1 = 2 + $i4;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdate()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdateWithUpdate(int)>(i1);
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinal()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinalWithUpdate(int)>(i1);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 4 5 6 ] [succs: 3 ]
$i4 = i2 * 5;
i1 = 2 + $i4;
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdate()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testUpdateWithUpdate(int)>(i1);
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinal()>();
specialinvoke r27.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void testDoFinalWithUpdate(int)>(i1);
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= 2 goto i2 = i2 + 1;
";
    "Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: java.lang.String[] MODES>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
";
}
