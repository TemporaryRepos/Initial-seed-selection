digraph "unitGraph" {
    "r1 := @this: com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT"
    "r0 := @parameter0: byte[]"
    "$i0 = lengthof r0"
    "i1 = $i0 - 16"
    "$i2 = lengthof r0"
    "if $i2 != 0 goto $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"
    "return 0"
    "$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"
    "r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher> = $r2"
    "$r5 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"
    "$r4 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.SecretKey key>"
    "$r3 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.spec.GCMParameterSpec spec>"
    "$r35 = (java.security.Key) $r4"
    "$r36 = (java.security.spec.AlgorithmParameterSpec) $r3"
    "virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r35, $r36)"
    "$r6 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"
    "r30 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)"
    "goto [?= $i3 = lengthof r30]"
    "$r21 := @caughtexception"
    "r31 = $r21"
    "$r23 = <java.lang.System: java.io.PrintStream err>"
    "$r32 = new java.lang.StringBuilder"
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : \")"
    "$r27 = virtualinvoke r31.<java.lang.Exception: java.lang.String getMessage()>()"
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29)"
    "virtualinvoke r31.<java.lang.Exception: void printStackTrace()>()"
    "$i3 = lengthof r30"
    "if $i3 == i1 goto i7 = 0"
    "$r15 = <java.lang.System: java.io.PrintStream err>"
    "$r33 = new java.lang.StringBuilder"
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext length invalid = \")"
    "$i6 = lengthof r30"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20)"
    "i7 = 0"
    "$i8 = lengthof r30"
    "if $i8 <= i7 goto return 1"
    "$i4 = i7"
    "i7 = i7 + 1"
    "$b5 = r30[$i4]"
    "if $b5 == 0 goto $i8 = lengthof r30"
    "$r8 = <java.lang.System: java.io.PrintStream err>"
    "$r34 = new java.lang.StringBuilder"
    "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext invalid, char index \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13)"
    "return 1"
    "r1 := @this: com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT"->"r0 := @parameter0: byte[]";
    "r0 := @parameter0: byte[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"i1 = $i0 - 16";
    "i1 = $i0 - 16"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if $i2 != 0 goto $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")";
    "if $i2 != 0 goto $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"->"return 0";
    "if $i2 != 0 goto $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"->"$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")";
    "if $i2 != 0 goto $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"->"$r21 := @caughtexception";
    "$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"->"r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher> = $r2";
    "$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"AES/GCM/NoPadding\", \"SunJCE\")"->"$r21 := @caughtexception";
    "r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher> = $r2"->"$r5 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>";
    "r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher> = $r2"->"$r21 := @caughtexception";
    "$r5 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"->"$r4 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.SecretKey key>";
    "$r5 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"->"$r21 := @caughtexception";
    "$r4 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.SecretKey key>"->"$r3 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.spec.GCMParameterSpec spec>";
    "$r4 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.SecretKey key>"->"$r21 := @caughtexception";
    "$r3 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.spec.GCMParameterSpec spec>"->"$r35 = (java.security.Key) $r4";
    "$r3 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.spec.GCMParameterSpec spec>"->"$r21 := @caughtexception";
    "$r35 = (java.security.Key) $r4"->"$r36 = (java.security.spec.AlgorithmParameterSpec) $r3";
    "$r35 = (java.security.Key) $r4"->"$r21 := @caughtexception";
    "$r36 = (java.security.spec.AlgorithmParameterSpec) $r3"->"virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r35, $r36)";
    "$r36 = (java.security.spec.AlgorithmParameterSpec) $r3"->"$r21 := @caughtexception";
    "virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r35, $r36)"->"$r6 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>";
    "virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r35, $r36)"->"$r21 := @caughtexception";
    "$r6 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"->"r30 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)";
    "$r6 = r1.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: javax.crypto.Cipher cipher>"->"$r21 := @caughtexception";
    "r30 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)"->"goto [?= $i3 = lengthof r30]";
    "r30 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)"->"$r21 := @caughtexception";
    "goto [?= $i3 = lengthof r30]"->"$i3 = lengthof r30";
    "$r21 := @caughtexception"->"r31 = $r21";
    "r31 = $r21"->"$r23 = <java.lang.System: java.io.PrintStream err>";
    "$r23 = <java.lang.System: java.io.PrintStream err>"->"$r32 = new java.lang.StringBuilder";
    "$r32 = new java.lang.StringBuilder"->"specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")";
    "$r24 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : \")"->"$r27 = virtualinvoke r31.<java.lang.Exception: java.lang.String getMessage()>()";
    "$r27 = virtualinvoke r31.<java.lang.Exception: java.lang.String getMessage()>()"->"$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)";
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29)";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29)"->"virtualinvoke r31.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r31.<java.lang.Exception: void printStackTrace()>()"->"return 0";
    "$i3 = lengthof r30"->"if $i3 == i1 goto i7 = 0";
    "if $i3 == i1 goto i7 = 0"->"$r15 = <java.lang.System: java.io.PrintStream err>";
    "if $i3 == i1 goto i7 = 0"->"i7 = 0";
    "$r15 = <java.lang.System: java.io.PrintStream err>"->"$r33 = new java.lang.StringBuilder";
    "$r33 = new java.lang.StringBuilder"->"specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")";
    "$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext length invalid = \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext length invalid = \")"->"$i6 = lengthof r30";
    "$i6 = lengthof r30"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20)";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20)"->"i7 = 0";
    "i7 = 0"->"$i8 = lengthof r30";
    "$i8 = lengthof r30"->"if $i8 <= i7 goto return 1";
    "if $i8 <= i7 goto return 1"->"$i4 = i7";
    "if $i8 <= i7 goto return 1"->"return 1";
    "$i4 = i7"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"$b5 = r30[$i4]";
    "$b5 = r30[$i4]"->"if $b5 == 0 goto $i8 = lengthof r30";
    "if $b5 == 0 goto $i8 = lengthof r30"->"$r8 = <java.lang.System: java.io.PrintStream err>";
    "if $b5 == 0 goto $i8 = lengthof r30"->"$i8 = lengthof r30";
    "$r8 = <java.lang.System: java.io.PrintStream err>"->"$r34 = new java.lang.StringBuilder";
    "$r34 = new java.lang.StringBuilder"->"specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")";
    "$r9 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt Failure (length = \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext invalid, char index \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") : plaintext invalid, char index \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13)"->"return 0";
}
