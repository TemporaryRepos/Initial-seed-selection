digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i28 = 3;
"
    "Block 1:
[preds: 0 28 ] [succs: 2 29 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
$i0 = lengthof $r0;
if i28 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r4 = <java.lang.System: java.io.PrintStream out>;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test3_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
i1 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r12 = interfaceinvoke $r11.<javax.crypto.SecretKey: byte[] getEncoded()>();
$i2 = lengthof $r12;
if $i2 <= i1 goto $r120 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 28 ]
goto [?= i28 = i28 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 12 ]
$r120 = new java.lang.StringBuilder;
specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r16, \"SunJCE\");
$r18 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r19 = $r18[i28];
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] CIPHER1>;
r21 = $r20[i28];
$i3 = lengthof r19;
r22 = newarray (byte)[$i3];
$r24 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r23 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r142 = (java.security.Key) $r24;
$r143 = (java.security.spec.AlgorithmParameterSpec) $r23;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r142, $r143);
$i4 = lengthof r19;
i5 = $i4 / 2;
i29 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r19, 0, i5, r22, 0);
"
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i6 = lengthof r19;
"
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i7 = $i6 - i5;
"
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r25 = newarray (byte)[1];
"
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i7, $r25, 0);
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
"
    "Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
"
    "Block 13:
[preds: 12 ] [succs: ]
$r101 = <java.lang.System: java.io.PrintStream out>;
$r122 = new java.lang.StringBuilder;
specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();
$r102 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r104);
$r106 = <java.lang.System: java.io.PrintStream out>;
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r107 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);
$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>($r109);
$r111 = <java.lang.System: java.io.PrintStream out>;
$r124 = new java.lang.StringBuilder;
specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();
$r112 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i27 = lengthof r22;
$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);
$r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>($r114);
$r125 = new java.lang.RuntimeException;
specialinvoke $r125.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Encryption length check failed\");
throw $r125;
"
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
if $z1 != 0 goto $r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
"
    "Block 15:
[preds: 14 ] [succs: ]
$r78 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();
$r79 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r80 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r19);
$r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r82);
$r84 = <java.lang.System: java.io.PrintStream out>;
$r127 = new java.lang.StringBuilder;
specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();
$r85 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"cipher: \");
$r86 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r88);
$r90 = <java.lang.System: java.io.PrintStream out>;
$r128 = new java.lang.StringBuilder;
specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();
$r91 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"actual: \");
$r92 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r22);
$r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>($r94);
$r130 = new java.lang.RuntimeException;
$r129 = new java.lang.StringBuilder;
specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encryption failure for test \");
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r130.<java.lang.RuntimeException: void <init>(java.lang.String)>($r99);
throw $r130;
"
    "Block 16:
[preds: 14 ] [succs: 17 24 ]
$r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r73 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r144 = (java.security.Key) $r74;
$r145 = (java.security.spec.AlgorithmParameterSpec) $r73;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r144, $r145);
$i22 = lengthof r21;
$i23 = virtualinvoke r17.<javax.crypto.Cipher: int getOutputSize(int)>($i22);
r117 = newarray (byte)[$i23];
i31 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r117, 0);
"
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
$i24 = lengthof r21;
"
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$i25 = $i24 - i5;
"
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r75 = newarray (byte)[1];
"
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i25, $r75, 0);
"
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r131 = new java.lang.RuntimeException;
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r131.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"
    "Block 23:
[preds: 22 ] [succs: 24 ]
throw $r131;
"
    "Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
"
    "Block 25:
[preds: 24 ] [succs: ]
$r52 = <java.lang.System: java.io.PrintStream out>;
$r132 = new java.lang.StringBuilder;
specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r55);
$r57 = <java.lang.System: java.io.PrintStream out>;
$r133 = new java.lang.StringBuilder;
specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();
$r58 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r60);
$r62 = <java.lang.System: java.io.PrintStream out>;
$r134 = new java.lang.StringBuilder;
specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();
$r63 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed3 = \");
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r65);
$r67 = <java.lang.System: java.io.PrintStream out>;
$r135 = new java.lang.StringBuilder;
specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();
$r68 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i17 = lengthof r117;
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);
$r136 = new java.lang.RuntimeException;
specialinvoke $r136.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Decryption length check failed\");
throw $r136;
"
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
if $z0 != 0 goto i28 = i28 + 1;
"
    "Block 27:
[preds: 26 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
$r137 = new java.lang.StringBuilder;
specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"cipher: \");
$r31 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r35 = <java.lang.System: java.io.PrintStream out>;
$r138 = new java.lang.StringBuilder;
specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r37 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r19);
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);
$r41 = <java.lang.System: java.io.PrintStream out>;
$r139 = new java.lang.StringBuilder;
specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"actualD: \");
$r43 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r117);
$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r141 = new java.lang.RuntimeException;
$r140 = new java.lang.StringBuilder;
specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r141.<java.lang.RuntimeException: void <init>(java.lang.String)>($r50);
throw $r141;
"
    "Block 28:
[preds: 3 26 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>];
"
    "Block 29:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i28 = 3;
"->"Block 1:
[preds: 0 28 ] [succs: 2 29 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
$i0 = lengthof $r0;
if i28 >= $i0 goto return;
";
    "Block 1:
[preds: 0 28 ] [succs: 2 29 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
$i0 = lengthof $r0;
if i28 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r4 = <java.lang.System: java.io.PrintStream out>;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test3_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
i1 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r12 = interfaceinvoke $r11.<javax.crypto.SecretKey: byte[] getEncoded()>();
$i2 = lengthof $r12;
if $i2 <= i1 goto $r120 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 28 ] [succs: 2 29 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
$i0 = lengthof $r0;
if i28 >= $i0 goto return;
"->"Block 29:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r4 = <java.lang.System: java.io.PrintStream out>;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test3_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
i1 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r12 = interfaceinvoke $r11.<javax.crypto.SecretKey: byte[] getEncoded()>();
$i2 = lengthof $r12;
if $i2 <= i1 goto $r120 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 28 ]
goto [?= i28 = i28 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r4 = <java.lang.System: java.io.PrintStream out>;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test3_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
i1 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r12 = interfaceinvoke $r11.<javax.crypto.SecretKey: byte[] getEncoded()>();
$i2 = lengthof $r12;
if $i2 <= i1 goto $r120 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 ] [succs: 5 12 ]
$r120 = new java.lang.StringBuilder;
specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r16, \"SunJCE\");
$r18 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r19 = $r18[i28];
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] CIPHER1>;
r21 = $r20[i28];
$i3 = lengthof r19;
r22 = newarray (byte)[$i3];
$r24 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r23 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r142 = (java.security.Key) $r24;
$r143 = (java.security.spec.AlgorithmParameterSpec) $r23;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r142, $r143);
$i4 = lengthof r19;
i5 = $i4 / 2;
i29 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r19, 0, i5, r22, 0);
";
    "Block 3:
[preds: 2 ] [succs: 28 ]
goto [?= i28 = i28 + 1];
"->"Block 28:
[preds: 3 26 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>];
";
    "Block 4:
[preds: 2 ] [succs: 5 12 ]
$r120 = new java.lang.StringBuilder;
specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r16, \"SunJCE\");
$r18 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r19 = $r18[i28];
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] CIPHER1>;
r21 = $r20[i28];
$i3 = lengthof r19;
r22 = newarray (byte)[$i3];
$r24 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r23 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r142 = (java.security.Key) $r24;
$r143 = (java.security.spec.AlgorithmParameterSpec) $r23;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r142, $r143);
$i4 = lengthof r19;
i5 = $i4 / 2;
i29 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r19, 0, i5, r22, 0);
"->"Block 5:
[preds: 4 ] [succs: 6 12 ]
$i6 = lengthof r19;
";
    "Block 4:
[preds: 2 ] [succs: 5 12 ]
$r120 = new java.lang.StringBuilder;
specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r16, \"SunJCE\");
$r18 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r19 = $r18[i28];
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] CIPHER1>;
r21 = $r20[i28];
$i3 = lengthof r19;
r22 = newarray (byte)[$i3];
$r24 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r23 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r142 = (java.security.Key) $r24;
$r143 = (java.security.spec.AlgorithmParameterSpec) $r23;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r142, $r143);
$i4 = lengthof r19;
i5 = $i4 / 2;
i29 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r19, 0, i5, r22, 0);
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i6 = lengthof r19;
"->"Block 6:
[preds: 5 ] [succs: 7 12 ]
$i7 = $i6 - i5;
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i6 = lengthof r19;
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i7 = $i6 - i5;
"->"Block 7:
[preds: 6 ] [succs: 8 12 ]
$r25 = newarray (byte)[1];
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i7 = $i6 - i5;
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r25 = newarray (byte)[1];
"->"Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i7, $r25, 0);
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r25 = newarray (byte)[1];
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i7, $r25, 0);
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i7, $r25, 0);
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"->"Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
"->"Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
";
    "Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
"->"Block 13:
[preds: 12 ] [succs: ]
$r101 = <java.lang.System: java.io.PrintStream out>;
$r122 = new java.lang.StringBuilder;
specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();
$r102 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r104);
$r106 = <java.lang.System: java.io.PrintStream out>;
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r107 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);
$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>($r109);
$r111 = <java.lang.System: java.io.PrintStream out>;
$r124 = new java.lang.StringBuilder;
specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();
$r112 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i27 = lengthof r22;
$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);
$r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>($r114);
$r125 = new java.lang.RuntimeException;
specialinvoke $r125.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Encryption length check failed\");
throw $r125;
";
    "Block 12:
[preds: 4 5 6 7 8 9 10 11 ] [succs: 13 14 ]
$r72 := @caughtexception;
r116 = $r72;
$i18 = lengthof r19;
$i19 = $i18 - i5;
i30 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r19, i5, $i19, r22, i29);
$i21 = i29 + i30;
$i20 = lengthof r22;
if $i21 == $i20 goto $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
"->"Block 14:
[preds: 12 ] [succs: 15 16 ]
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
if $z1 != 0 goto $r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
if $z1 != 0 goto $r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
"->"Block 15:
[preds: 14 ] [succs: ]
$r78 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();
$r79 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r80 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r19);
$r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r82);
$r84 = <java.lang.System: java.io.PrintStream out>;
$r127 = new java.lang.StringBuilder;
specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();
$r85 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"cipher: \");
$r86 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r88);
$r90 = <java.lang.System: java.io.PrintStream out>;
$r128 = new java.lang.StringBuilder;
specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();
$r91 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"actual: \");
$r92 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r22);
$r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>($r94);
$r130 = new java.lang.RuntimeException;
$r129 = new java.lang.StringBuilder;
specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encryption failure for test \");
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r130.<java.lang.RuntimeException: void <init>(java.lang.String)>($r99);
throw $r130;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r22);
if $z1 != 0 goto $r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
"->"Block 16:
[preds: 14 ] [succs: 17 24 ]
$r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r73 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r144 = (java.security.Key) $r74;
$r145 = (java.security.spec.AlgorithmParameterSpec) $r73;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r144, $r145);
$i22 = lengthof r21;
$i23 = virtualinvoke r17.<javax.crypto.Cipher: int getOutputSize(int)>($i22);
r117 = newarray (byte)[$i23];
i31 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r117, 0);
";
    "Block 16:
[preds: 14 ] [succs: 17 24 ]
$r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r73 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r144 = (java.security.Key) $r74;
$r145 = (java.security.spec.AlgorithmParameterSpec) $r73;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r144, $r145);
$i22 = lengthof r21;
$i23 = virtualinvoke r17.<javax.crypto.Cipher: int getOutputSize(int)>($i22);
r117 = newarray (byte)[$i23];
i31 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r117, 0);
"->"Block 17:
[preds: 16 ] [succs: 18 24 ]
$i24 = lengthof r21;
";
    "Block 16:
[preds: 14 ] [succs: 17 24 ]
$r74 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.SecretKey KEY1>;
$r73 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: javax.crypto.spec.IvParameterSpec IV1>;
$r144 = (java.security.Key) $r74;
$r145 = (java.security.spec.AlgorithmParameterSpec) $r73;
virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r144, $r145);
$i22 = lengthof r21;
$i23 = virtualinvoke r17.<javax.crypto.Cipher: int getOutputSize(int)>($i22);
r117 = newarray (byte)[$i23];
i31 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r117, 0);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
$i24 = lengthof r21;
"->"Block 18:
[preds: 17 ] [succs: 19 24 ]
$i25 = $i24 - i5;
";
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
$i24 = lengthof r21;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$i25 = $i24 - i5;
"->"Block 19:
[preds: 18 ] [succs: 20 24 ]
$r75 = newarray (byte)[1];
";
    "Block 18:
[preds: 17 ] [succs: 19 24 ]
$i25 = $i24 - i5;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r75 = newarray (byte)[1];
"->"Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i25, $r75, 0);
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r75 = newarray (byte)[1];
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i25, $r75, 0);
"->"Block 21:
[preds: 20 ] [succs: 22 24 ]
$r131 = new java.lang.RuntimeException;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i25, $r75, 0);
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r131 = new java.lang.RuntimeException;
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r131.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r131 = new java.lang.RuntimeException;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r131.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"->"Block 23:
[preds: 22 ] [succs: 24 ]
throw $r131;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r131.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected Exception is not thrown\");
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 23:
[preds: 22 ] [succs: 24 ]
throw $r131;
"->"Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
";
    "Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
"->"Block 25:
[preds: 24 ] [succs: ]
$r52 = <java.lang.System: java.io.PrintStream out>;
$r132 = new java.lang.StringBuilder;
specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r55);
$r57 = <java.lang.System: java.io.PrintStream out>;
$r133 = new java.lang.StringBuilder;
specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();
$r58 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r60);
$r62 = <java.lang.System: java.io.PrintStream out>;
$r134 = new java.lang.StringBuilder;
specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();
$r63 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed3 = \");
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r65);
$r67 = <java.lang.System: java.io.PrintStream out>;
$r135 = new java.lang.StringBuilder;
specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();
$r68 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i17 = lengthof r117;
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);
$r136 = new java.lang.RuntimeException;
specialinvoke $r136.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Decryption length check failed\");
throw $r136;
";
    "Block 24:
[preds: 16 17 18 19 20 21 22 23 ] [succs: 25 26 ]
$r27 := @caughtexception;
r118 = $r27;
$i9 = lengthof r21;
$i10 = $i9 - i5;
i11 = virtualinvoke r17.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, i5, $i10, r117, i31);
$i12 = i31 + i11;
i13 = virtualinvoke r17.<javax.crypto.Cipher: int doFinal(byte[],int)>(r117, $i12);
$i14 = i31 + i11;
$i16 = $i14 + i13;
$i15 = lengthof r117;
if $i16 == $i15 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
"->"Block 26:
[preds: 24 ] [succs: 27 28 ]
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
if $z0 != 0 goto i28 = i28 + 1;
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
if $z0 != 0 goto i28 = i28 + 1;
"->"Block 27:
[preds: 26 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
$r137 = new java.lang.StringBuilder;
specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"cipher: \");
$r31 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r35 = <java.lang.System: java.io.PrintStream out>;
$r138 = new java.lang.StringBuilder;
specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r37 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r19);
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);
$r41 = <java.lang.System: java.io.PrintStream out>;
$r139 = new java.lang.StringBuilder;
specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"actualD: \");
$r43 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r117);
$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r141 = new java.lang.RuntimeException;
$r140 = new java.lang.StringBuilder;
specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r141.<java.lang.RuntimeException: void <init>(java.lang.String)>($r50);
throw $r141;
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r19, r117);
if $z0 != 0 goto i28 = i28 + 1;
"->"Block 28:
[preds: 3 26 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>];
";
    "Block 28:
[preds: 3 26 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>];
"->"Block 1:
[preds: 0 28 ] [succs: 2 29 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
$i0 = lengthof $r0;
if i28 >= $i0 goto return;
";
}
