digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory;
r1 := @parameter1: java.util.Locale;
$r3 = <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT>;
$r2 = newarray (java.lang.String)[2];
$r2[0] = \"java.class\";
$r2[1] = \"java.properties\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r3, $r2);
$r5 = <java.util.ResourceBundle$Control: java.util.List FORMAT_CLASS>;
$r4 = newarray (java.lang.String)[1];
$r4[0] = \"java.class\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r5, $r4);
$r7 = <java.util.ResourceBundle$Control: java.util.List FORMAT_PROPERTIES>;
$r6 = newarray (java.lang.String)[1];
$r6[0] = \"java.properties\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r7, $r6);
$r8 = newarray (java.lang.String[])[6];
$r9 = newarray (java.lang.String)[3];
$r9[0] = \"java.class\";
$r9[1] = \"java.properties\";
$r9[2] = \"java.xml\";
$r8[0] = $r9;
$r10 = newarray (java.lang.String)[2];
$r10[0] = \"java.class\";
$r10[1] = \"java.props\";
$r8[1] = $r10;
$r11 = newarray (java.lang.String)[2];
$r11[0] = \"java.properties\";
$r11[1] = \"java.class\";
$r8[2] = $r11;
$r12 = newarray (java.lang.String)[2];
$r12[0] = \"java.foo\";
$r12[1] = \"java.properties\";
$r8[3] = $r12;
$r13 = newarray (java.lang.String)[1];
$r13[0] = \"java.foo\";
$r8[4] = $r13;
$r14 = newarray (java.lang.String)[1];
$r14[0] = null;
$r8[5] = $r14;
r15 = $r8;
r23 = r15;
i0 = lengthof r23;
i1 = 0;
"
    "Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
r18 = r23[i1];
"
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r18);
"
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(r24);
"
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r20 = newarray (java.lang.Object)[1];
"
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r20[0] = r24;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"getControl: %s%n\", $r20);
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= i1 = i1 + 1];
"
    "Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
"
    "Block 10:
[preds: 8 9 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 1 ] [succs: 12 17 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r16 = newarray (java.lang.Object)[1];
"
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$r17 = interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.lang.String name()>();
"
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r16[0] = $r17;
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"%s: doesn\'t throw NPE.%n\", $r16);
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= return];
"
    "Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
"
    "Block 18:
[preds: 16 17 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory;
r1 := @parameter1: java.util.Locale;
$r3 = <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT>;
$r2 = newarray (java.lang.String)[2];
$r2[0] = \"java.class\";
$r2[1] = \"java.properties\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r3, $r2);
$r5 = <java.util.ResourceBundle$Control: java.util.List FORMAT_CLASS>;
$r4 = newarray (java.lang.String)[1];
$r4[0] = \"java.class\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r5, $r4);
$r7 = <java.util.ResourceBundle$Control: java.util.List FORMAT_PROPERTIES>;
$r6 = newarray (java.lang.String)[1];
$r6[0] = \"java.properties\";
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testGetControl(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale,java.util.List,java.lang.String[])>(r0, r1, $r7, $r6);
$r8 = newarray (java.lang.String[])[6];
$r9 = newarray (java.lang.String)[3];
$r9[0] = \"java.class\";
$r9[1] = \"java.properties\";
$r9[2] = \"java.xml\";
$r8[0] = $r9;
$r10 = newarray (java.lang.String)[2];
$r10[0] = \"java.class\";
$r10[1] = \"java.props\";
$r8[1] = $r10;
$r11 = newarray (java.lang.String)[2];
$r11[0] = \"java.properties\";
$r11[1] = \"java.class\";
$r8[2] = $r11;
$r12 = newarray (java.lang.String)[2];
$r12[0] = \"java.foo\";
$r12[1] = \"java.properties\";
$r8[3] = $r12;
$r13 = newarray (java.lang.String)[1];
$r13[0] = \"java.foo\";
$r8[4] = $r13;
$r14 = newarray (java.lang.String)[1];
$r14[0] = null;
$r8[5] = $r14;
r15 = $r8;
r23 = r15;
i0 = lengthof r23;
i1 = 0;
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"->"Block 2:
[preds: 1 ] [succs: 3 9 ]
r18 = r23[i1];
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"->"Block 11:
[preds: 1 ] [succs: 12 17 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
r18 = r23[i1];
"->"Block 3:
[preds: 2 ] [succs: 4 9 ]
r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r18);
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
r18 = r23[i1];
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r18);
"->"Block 4:
[preds: 3 ] [succs: 5 9 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(r24);
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r18);
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(r24);
"->"Block 5:
[preds: 4 ] [succs: 6 9 ]
$r20 = newarray (java.lang.Object)[1];
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(r24);
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r20 = newarray (java.lang.Object)[1];
"->"Block 6:
[preds: 5 ] [succs: 7 9 ]
$r20[0] = r24;
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r20 = newarray (java.lang.Object)[1];
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r20[0] = r24;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"getControl: %s%n\", $r20);
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r20[0] = r24;
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"getControl: %s%n\", $r20);
"->"Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= i1 = i1 + 1];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"getControl: %s%n\", $r20);
"->"Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= i1 = i1 + 1];
"->"Block 10:
[preds: 8 9 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 2 3 4 5 6 7 ] [succs: 10 ]
$r22 := @caughtexception;
r25 = $r22;
"->"Block 10:
[preds: 8 9 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 9 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 17 ]
if i1 >= i0 goto interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
";
    "Block 11:
[preds: 1 ] [succs: 12 17 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"->"Block 12:
[preds: 11 ] [succs: 13 17 ]
$r16 = newarray (java.lang.Object)[1];
";
    "Block 11:
[preds: 1 ] [succs: 12 17 ]
interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.util.ResourceBundle$Control getControl(java.util.List)>(null);
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r16 = newarray (java.lang.Object)[1];
"->"Block 13:
[preds: 12 ] [succs: 14 17 ]
$r17 = interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.lang.String name()>();
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r16 = newarray (java.lang.Object)[1];
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$r17 = interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.lang.String name()>();
"->"Block 14:
[preds: 13 ] [succs: 15 17 ]
$r16[0] = $r17;
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$r17 = interfaceinvoke r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory: java.lang.String name()>();
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r16[0] = $r17;
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"%s: doesn\'t throw NPE.%n\", $r16);
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r16[0] = $r17;
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"%s: doesn\'t throw NPE.%n\", $r16);
"->"Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= return];
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void error(java.lang.String,java.lang.Object[])>(\"%s: doesn\'t throw NPE.%n\", $r16);
"->"Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= return];
"->"Block 18:
[preds: 16 17 ] [succs: ]
return;
";
    "Block 17:
[preds: 1 11 12 13 14 15 ] [succs: 18 ]
$r21 := @caughtexception;
r27 = $r21;
"->"Block 18:
[preds: 16 17 ] [succs: ]
return;
";
}
