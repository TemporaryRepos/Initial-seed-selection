digraph "unitGraph" {
    "r6 := @this: javaT.lang.StringBuilder.BuilderForwarding"
    "r0 = \"012345\""
    "r1 = \"aString\""
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\")"
    "r3 = $r2"
    "$r4 = new java.lang.StringBuffer"
    "specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\")"
    "r5 = $r4"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\")"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\")"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\")"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"
    "virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1)"
    "$r18 = new java.lang.RuntimeException"
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\")"
    "throw $r18"
    "$r26 := @caughtexception"
    "r27 = $r26"
    "goto [?= return]"
    "$r19 := @caughtexception"
    "r28 = $r19"
    "$r20 = new java.lang.RuntimeException"
    "$r21 = new java.lang.StringBuilder"
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \")"
    "$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>()"
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25)"
    "throw $r20"
    "return"
    "r6 := @this: javaT.lang.StringBuilder.BuilderForwarding"->"r0 = \"012345\"";
    "r0 = \"012345\""->"r1 = \"aString\"";
    "r1 = \"aString\""->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\")"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.lang.StringBuffer";
    "$r4 = new java.lang.StringBuffer"->"specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\")";
    "specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\")"->"r5 = $r4";
    "r5 = $r4"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\")";
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\")"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\")";
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\")"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\")";
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\")"->"$r26 := @caughtexception";
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\")"->"$r19 := @caughtexception";
    "virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\")"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"$r26 := @caughtexception";
    "$r16 = new java.lang.StringBuilder"->"$r19 := @caughtexception";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"$r26 := @caughtexception";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"$r19 := @caughtexception";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\")"->"virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1)";
    "virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1)"->"$r26 := @caughtexception";
    "virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1)"->"$r19 := @caughtexception";
    "virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1)"->"$r18 = new java.lang.RuntimeException";
    "$r18 = new java.lang.RuntimeException"->"$r26 := @caughtexception";
    "$r18 = new java.lang.RuntimeException"->"$r19 := @caughtexception";
    "$r18 = new java.lang.RuntimeException"->"specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\")";
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\")"->"$r26 := @caughtexception";
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\")"->"$r19 := @caughtexception";
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\")"->"throw $r18";
    "throw $r18"->"$r26 := @caughtexception";
    "throw $r18"->"$r19 := @caughtexception";
    "$r26 := @caughtexception"->"r27 = $r26";
    "r27 = $r26"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r19 := @caughtexception"->"r28 = $r19";
    "r28 = $r19"->"$r20 = new java.lang.RuntimeException";
    "$r20 = new java.lang.RuntimeException"->"$r21 = new java.lang.StringBuilder";
    "$r21 = new java.lang.StringBuilder"->"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \")"->"$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>()";
    "$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>()"->"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25)";
    "specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25)"->"throw $r20";
}
