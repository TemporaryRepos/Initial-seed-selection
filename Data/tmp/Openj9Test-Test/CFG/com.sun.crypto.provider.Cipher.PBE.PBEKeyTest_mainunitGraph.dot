digraph "unitGraph" {
    "r16 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\")"
    "$r1 = newarray (char)[8]"
    "$r1[0] = 112"
    "$r1[1] = 97"
    "$r1[2] = 115"
    "$r1[3] = 115"
    "$r1[4] = 119"
    "$r1[5] = 111"
    "$r1[6] = 114"
    "$r1[7] = 100"
    "r17 = $r1"
    "$r23 = new javax.crypto.spec.PBEKeySpec"
    "specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17)"
    "r18 = $r23"
    "$r28 = (java.security.spec.KeySpec) r18"
    "r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28)"
    "r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\")"
    "r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)"
    "$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4)"
    "if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"
    "$r24 = new java.lang.Exception"
    "specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"Equal keys not equal\")"
    "throw $r24"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "$r25 = new java.lang.String"
    "$r6 = (javax.crypto.spec.PBEKeySpec) r3"
    "$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>()"
    "specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8)"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25)"
    "$r9 = newarray (char)[8]"
    "$r9[0] = 112"
    "$r9[1] = 97"
    "$r9[2] = 115"
    "$r9[3] = 115"
    "$r9[4] = 119"
    "$r9[5] = 111"
    "$r9[6] = 114"
    "$r9[7] = 25"
    "r20 = $r9"
    "$r26 = new javax.crypto.spec.PBEKeySpec"
    "specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20)"
    "r21 = $r26"
    "$r29 = (java.security.spec.KeySpec) r21"
    "virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29)"
    "$r27 = new java.lang.Exception"
    "specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\")"
    "throw $r27"
    "$r13 := @caughtexception"
    "r14 = $r13"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\")"
    "return"
    "r16 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\")";
    "r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\")"->"$r1 = newarray (char)[8]";
    "$r1 = newarray (char)[8]"->"$r1[0] = 112";
    "$r1[0] = 112"->"$r1[1] = 97";
    "$r1[1] = 97"->"$r1[2] = 115";
    "$r1[2] = 115"->"$r1[3] = 115";
    "$r1[3] = 115"->"$r1[4] = 119";
    "$r1[4] = 119"->"$r1[5] = 111";
    "$r1[5] = 111"->"$r1[6] = 114";
    "$r1[6] = 114"->"$r1[7] = 100";
    "$r1[7] = 100"->"r17 = $r1";
    "r17 = $r1"->"$r23 = new javax.crypto.spec.PBEKeySpec";
    "$r23 = new javax.crypto.spec.PBEKeySpec"->"specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17)";
    "specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17)"->"r18 = $r23";
    "r18 = $r23"->"$r28 = (java.security.spec.KeySpec) r18";
    "$r28 = (java.security.spec.KeySpec) r18"->"r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28)";
    "r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28)"->"r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\")";
    "r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\")"->"r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)";
    "r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)"->"$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4)";
    "$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4)"->"if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"$r24 = new java.lang.Exception";
    "if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r24 = new java.lang.Exception"->"specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"Equal keys not equal\")";
    "specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"Equal keys not equal\")"->"throw $r24";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"$r25 = new java.lang.String";
    "$r25 = new java.lang.String"->"$r6 = (javax.crypto.spec.PBEKeySpec) r3";
    "$r6 = (javax.crypto.spec.PBEKeySpec) r3"->"$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>()";
    "$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>()"->"specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8)";
    "specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8)"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25)";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25)"->"$r9 = newarray (char)[8]";
    "$r9 = newarray (char)[8]"->"$r9[0] = 112";
    "$r9[0] = 112"->"$r9[1] = 97";
    "$r9[1] = 97"->"$r9[2] = 115";
    "$r9[2] = 115"->"$r9[3] = 115";
    "$r9[3] = 115"->"$r9[4] = 119";
    "$r9[4] = 119"->"$r9[5] = 111";
    "$r9[5] = 111"->"$r9[6] = 114";
    "$r9[6] = 114"->"$r9[7] = 25";
    "$r9[7] = 25"->"r20 = $r9";
    "r20 = $r9"->"$r26 = new javax.crypto.spec.PBEKeySpec";
    "$r26 = new javax.crypto.spec.PBEKeySpec"->"specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20)";
    "specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20)"->"r21 = $r26";
    "r21 = $r26"->"$r29 = (java.security.spec.KeySpec) r21";
    "r21 = $r26"->"$r13 := @caughtexception";
    "$r29 = (java.security.spec.KeySpec) r21"->"virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29)";
    "$r29 = (java.security.spec.KeySpec) r21"->"$r13 := @caughtexception";
    "virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29)"->"$r27 = new java.lang.Exception";
    "virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29)"->"$r13 := @caughtexception";
    "$r27 = new java.lang.Exception"->"specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\")";
    "$r27 = new java.lang.Exception"->"$r13 := @caughtexception";
    "specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\")"->"throw $r27";
    "specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\")"->"$r13 := @caughtexception";
    "throw $r27"->"$r13 := @caughtexception";
    "$r13 := @caughtexception"->"r14 = $r13";
    "r14 = $r13"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\")";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\")"->"return";
}
