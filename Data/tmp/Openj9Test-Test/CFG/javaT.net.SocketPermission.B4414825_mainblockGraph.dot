digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @parameter0: java.lang.String[];
$r0 = new java.net.SocketPermission;
specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1);
if $z0 != 0 goto $r2 = new java.net.SocketPermission;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.RuntimeException;
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: SocketPermission instance should imply itself.\");
throw $r5;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = new java.net.SocketPermission;
specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r3 = $r2;
$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3);
if $z1 != 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: Equaled SocketPermission instances should imply each other.\");
throw $r4;
"
    "Block 4:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @parameter0: java.lang.String[];
$r0 = new java.net.SocketPermission;
specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1);
if $z0 != 0 goto $r2 = new java.net.SocketPermission;
"->"Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.RuntimeException;
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: SocketPermission instance should imply itself.\");
throw $r5;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @parameter0: java.lang.String[];
$r0 = new java.net.SocketPermission;
specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r1 = $r0;
$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1);
if $z0 != 0 goto $r2 = new java.net.SocketPermission;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = new java.net.SocketPermission;
specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r3 = $r2;
$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3);
if $z1 != 0 goto return;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = new java.net.SocketPermission;
specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r3 = $r2;
$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3);
if $z1 != 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: Equaled SocketPermission instances should imply each other.\");
throw $r4;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = new java.net.SocketPermission;
specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\");
r3 = $r2;
$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3);
if $z1 != 0 goto return;
"->"Block 4:
[preds: 2 ] [succs: ]
return;
";
}
