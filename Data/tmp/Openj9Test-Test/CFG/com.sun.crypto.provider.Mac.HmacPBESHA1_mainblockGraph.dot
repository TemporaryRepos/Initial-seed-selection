digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @parameter0: java.lang.String[];
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$i0 = lengthof $r0;
if i2 >= $i0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r2 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$r4 = $r2[i2];
$r3 = <com.sun.crypto.provider.Mac.HmacPBESHA1: int[] MAC_LENGTHS>;
$i1 = $r3[i2];
staticinvoke <com.sun.crypto.provider.Mac.HmacPBESHA1: void runtest(java.lang.String,int)>($r4, $i1);
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"\nTest Passed\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @parameter0: java.lang.String[];
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$i0 = lengthof $r0;
if i2 >= $i0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$i0 = lengthof $r0;
if i2 >= $i0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r2 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$r4 = $r2[i2];
$r3 = <com.sun.crypto.provider.Mac.HmacPBESHA1: int[] MAC_LENGTHS>;
$i1 = $r3[i2];
staticinvoke <com.sun.crypto.provider.Mac.HmacPBESHA1: void runtest(java.lang.String,int)>($r4, $i1);
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$i0 = lengthof $r0;
if i2 >= $i0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"\nTest Passed\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r2 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$r4 = $r2[i2];
$r3 = <com.sun.crypto.provider.Mac.HmacPBESHA1: int[] MAC_LENGTHS>;
$i1 = $r3[i2];
staticinvoke <com.sun.crypto.provider.Mac.HmacPBESHA1: void runtest(java.lang.String,int)>($r4, $i1);
i2 = i2 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$r0 = <com.sun.crypto.provider.Mac.HmacPBESHA1: java.lang.String[] MAC_ALGOS>;
$i0 = lengthof $r0;
if i2 >= $i0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
";
}
