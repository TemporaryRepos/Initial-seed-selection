digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r18 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10);
$r1 = virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();
$r2 = <javaT.nio.Buffer.Order: java.nio.ByteOrder be>;
staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r1, $r2);
$r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(10);
$r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();
$r5 = <javaT.nio.Buffer.Order: java.nio.ByteOrder be>;
staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r4, $r5);
$r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10);
$r7 = <javaT.nio.Buffer.Order: java.nio.ByteOrder be>;
$r8 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);
$r9 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();
$r10 = <javaT.nio.Buffer.Order: java.nio.ByteOrder be>;
staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r9, $r10);
$r11 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10);
$r12 = <javaT.nio.Buffer.Order: java.nio.ByteOrder le>;
$r13 = virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r12);
$r14 = virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();
$r15 = <javaT.nio.Buffer.Order: java.nio.ByteOrder le>;
staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r14, $r15);
$r16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(10);
staticinvoke <javaT.nio.Buffer.Order: void ckByteBuffer(java.nio.ByteBuffer)>($r16);
$r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(10);
staticinvoke <javaT.nio.Buffer.Order: void ckByteBuffer(java.nio.ByteBuffer)>($r17);
return;
"
}
