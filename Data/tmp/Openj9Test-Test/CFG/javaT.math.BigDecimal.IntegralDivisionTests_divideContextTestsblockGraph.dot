digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r2 := @parameter2: java.math.BigDecimal;
r3 := @parameter3: java.math.MathContext;
b4 = 0;
$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, r1, r2, r3);
i5 = b4 + $i0;
$r4 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i1 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r4, $r5, r2, r3);
i6 = i5 + $i1;
if r2 == null goto return i6;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r7 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i2 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r6, r1, $r7, r3);
i7 = i6 + $i2;
$r8 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r9 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, $r8, $r9, r3);
i6 = i7 + $i3;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return i6;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r2 := @parameter2: java.math.BigDecimal;
r3 := @parameter3: java.math.MathContext;
b4 = 0;
$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, r1, r2, r3);
i5 = b4 + $i0;
$r4 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i1 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r4, $r5, r2, r3);
i6 = i5 + $i1;
if r2 == null goto return i6;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r7 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i2 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r6, r1, $r7, r3);
i7 = i6 + $i2;
$r8 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r9 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, $r8, $r9, r3);
i6 = i7 + $i3;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r2 := @parameter2: java.math.BigDecimal;
r3 := @parameter3: java.math.MathContext;
b4 = 0;
$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, r1, r2, r3);
i5 = b4 + $i0;
$r4 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i1 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r4, $r5, r2, r3);
i6 = i5 + $i1;
if r2 == null goto return i6;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return i6;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r7 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i2 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>($r6, r1, $r7, r3);
i7 = i6 + $i2;
$r8 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r9 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTest(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r0, $r8, $r9, r3);
i6 = i7 + $i3;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return i6;
";
}
