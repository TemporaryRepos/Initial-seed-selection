digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"us-ascii\");
r1 = newarray (javaT.nio.charset.coders.BashCache$Basher)[10];
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto i1 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new javaT.nio.charset.coders.BashCache$Basher;
specialinvoke $r4.<javaT.nio.charset.coders.BashCache$Basher: void <init>(javaT.nio.charset.coders.BashCache$1)>(null);
r1[i0] = $r4;
$r5 = r1[i0];
virtualinvoke $r5.<javaT.nio.charset.coders.BashCache$Basher: void start()>();
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i1 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 >= 10 goto $z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r3 = r1[i1];
virtualinvoke $r3.<javaT.nio.charset.coders.BashCache$Basher: void join()>();
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
if $z0 == 0 goto return;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r2 = new java.lang.Exception;
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\");
throw $r2;
"
    "Block 8:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"us-ascii\");
r1 = newarray (javaT.nio.charset.coders.BashCache$Basher)[10];
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto i1 = 0;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto i1 = 0;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new javaT.nio.charset.coders.BashCache$Basher;
specialinvoke $r4.<javaT.nio.charset.coders.BashCache$Basher: void <init>(javaT.nio.charset.coders.BashCache$1)>(null);
r1[i0] = $r4;
$r5 = r1[i0];
virtualinvoke $r5.<javaT.nio.charset.coders.BashCache$Basher: void start()>();
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto i1 = 0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i1 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new javaT.nio.charset.coders.BashCache$Basher;
specialinvoke $r4.<javaT.nio.charset.coders.BashCache$Basher: void <init>(javaT.nio.charset.coders.BashCache$1)>(null);
r1[i0] = $r4;
$r5 = r1[i0];
virtualinvoke $r5.<javaT.nio.charset.coders.BashCache$Basher: void start()>();
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto i1 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i1 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 >= 10 goto $z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 >= 10 goto $z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r3 = r1[i1];
virtualinvoke $r3.<javaT.nio.charset.coders.BashCache$Basher: void join()>();
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 >= 10 goto $z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
if $z0 == 0 goto return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r3 = r1[i1];
virtualinvoke $r3.<javaT.nio.charset.coders.BashCache$Basher: void join()>();
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 >= 10 goto $z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
if $z0 == 0 goto return;
"->"Block 7:
[preds: 6 ] [succs: ]
$r2 = new java.lang.Exception;
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\");
throw $r2;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$z0 = <javaT.nio.charset.coders.BashCache: boolean failed>;
if $z0 == 0 goto return;
"->"Block 8:
[preds: 6 ] [succs: ]
return;
";
}
