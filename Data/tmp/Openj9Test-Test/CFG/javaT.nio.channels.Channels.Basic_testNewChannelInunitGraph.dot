digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "$r0 = new javaT.nio.channels.Channels.ExtendedFileInputStream"
    "specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileInputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2)"
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$i0 = virtualinvoke $r4.<java.lang.String: int length()>()"
    "$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "$i2 = $i0 * $i1"
    "i3 = $i2 * 3"
    "$i4 = i3 + 1"
    "r5 = newarray (byte)[$i4]"
    "r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5)"
    "i9 = 0"
    "i10 = 0"
    "if i9 == -1 goto $r7 = new java.lang.String"
    "i10 = i10 + i9"
    "i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6)"
    "goto [?= (branch)]"
    "$r7 = new java.lang.String"
    "$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"
    "specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8)"
    "r9 = $r7"
    "$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "i5 = virtualinvoke $r10.<java.lang.String: int length()>()"
    "i11 = 0"
    "$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()"
    "i12 = i11 + 1"
    "$i8 = i11 * i5"
    "$i7 = i12 * i5"
    "r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)"
    "$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)"
    "if $z0 != 0 goto i11 = i12 + 1"
    "$r13 = new java.lang.RuntimeException"
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r13"
    "i11 = i12 + 1"
    "goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"
    "interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()"
    "virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileInputStream: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"$r0 = new javaT.nio.channels.Channels.ExtendedFileInputStream";
    "$r0 = new javaT.nio.channels.Channels.ExtendedFileInputStream"->"specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileInputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileInputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2)";
    "r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2)"->"$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$i0 = virtualinvoke $r4.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke $r4.<java.lang.String: int length()>()"->"$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"$i2 = $i0 * $i1";
    "$i2 = $i0 * $i1"->"i3 = $i2 * 3";
    "i3 = $i2 * 3"->"$i4 = i3 + 1";
    "$i4 = i3 + 1"->"r5 = newarray (byte)[$i4]";
    "r5 = newarray (byte)[$i4]"->"r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5)";
    "r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5)"->"i9 = 0";
    "i9 = 0"->"i10 = 0";
    "i10 = 0"->"if i9 == -1 goto $r7 = new java.lang.String";
    "if i9 == -1 goto $r7 = new java.lang.String"->"i10 = i10 + i9";
    "if i9 == -1 goto $r7 = new java.lang.String"->"$r7 = new java.lang.String";
    "i10 = i10 + i9"->"i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6)";
    "i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 == -1 goto $r7 = new java.lang.String";
    "$r7 = new java.lang.String"->"$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>";
    "$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"->"specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8)";
    "specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8)"->"r9 = $r7";
    "r9 = $r7"->"$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"i5 = virtualinvoke $r10.<java.lang.String: int length()>()";
    "i5 = virtualinvoke $r10.<java.lang.String: int length()>()"->"i11 = 0";
    "i11 = 0"->"$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()";
    "if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()"->"i12 = i11 + 1";
    "if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()"->"interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()";
    "i12 = i11 + 1"->"$i8 = i11 * i5";
    "$i8 = i11 * i5"->"$i7 = i12 * i5";
    "$i7 = i12 * i5"->"r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)";
    "r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)"->"$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)";
    "$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)"->"if $z0 != 0 goto i11 = i12 + 1";
    "if $z0 != 0 goto i11 = i12 + 1"->"$r13 = new java.lang.RuntimeException";
    "if $z0 != 0 goto i11 = i12 + 1"->"i11 = i12 + 1";
    "$r13 = new java.lang.RuntimeException"->"specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r13";
    "i11 = i12 + 1"->"goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]";
    "goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"->"$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>()"->"virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileInputStream: void close()>()";
    "virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileInputStream: void close()>()"->"return";
}
