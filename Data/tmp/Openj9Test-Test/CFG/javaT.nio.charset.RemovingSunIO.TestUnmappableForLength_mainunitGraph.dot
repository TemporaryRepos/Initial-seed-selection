digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "$r0 = newarray (byte)[2]"
    "$r0[0] = -94"
    "$r0[1] = -1"
    "r1 = $r0"
    "staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_TW\", r1, 2)"
    "staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_CN\", r1, 2)"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"$r0 = newarray (byte)[2]";
    "$r0 = newarray (byte)[2]"->"$r0[0] = -94";
    "$r0[0] = -94"->"$r0[1] = -1";
    "$r0[1] = -1"->"r1 = $r0";
    "r1 = $r0"->"staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_TW\", r1, 2)";
    "staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_TW\", r1, 2)"->"staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_CN\", r1, 2)";
    "staticinvoke <javaT.nio.charset.RemovingSunIO.TestUnmappableForLength: void testDecode(java.lang.String,byte[],int)>(\"EUC_CN\", r1, 2)"->"return";
}
