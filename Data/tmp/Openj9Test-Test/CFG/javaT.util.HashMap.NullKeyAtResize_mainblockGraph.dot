digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.HashMap;
specialinvoke $r2.<java.util.HashMap: void <init>(int)>(16);
r3 = $r2;
i1 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= 100000 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);
interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);
i1 = i1 + 100;
r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, null);
$r9 = new java.util.ArrayList;
specialinvoke $r9.<java.util.ArrayList: void <init>()>();
r10 = $r9;
$r11 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r10.<java.util.List: boolean addAll(java.util.Collection)>($r11);
interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r7);
$z2 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r10);
if $z2 != 0 goto interfaceinvoke r1.<java.util.List: void clear()>();
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encountered resize after \");
$i0 = i1 / 100;
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= (branch)];
"
    "Block 4:
[preds: 2 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: void clear()>();
$r12 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r12);
goto [?= (branch)];
"
    "Block 5:
[preds: 1 3 ] [succs: 6 7 ]
if i1 != 100000 goto return;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"Resize never occurred\");
throw $r4;
"
    "Block 7:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.HashMap;
specialinvoke $r2.<java.util.HashMap: void <init>(int)>(16);
r3 = $r2;
i1 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= 100000 goto (branch);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= 100000 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);
interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);
i1 = i1 + 100;
r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, null);
$r9 = new java.util.ArrayList;
specialinvoke $r9.<java.util.ArrayList: void <init>()>();
r10 = $r9;
$r11 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r10.<java.util.List: boolean addAll(java.util.Collection)>($r11);
interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r7);
$z2 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r10);
if $z2 != 0 goto interfaceinvoke r1.<java.util.List: void clear()>();
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= 100000 goto (branch);
"->"Block 5:
[preds: 1 3 ] [succs: 6 7 ]
if i1 != 100000 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);
interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);
i1 = i1 + 100;
r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, null);
$r9 = new java.util.ArrayList;
specialinvoke $r9.<java.util.ArrayList: void <init>()>();
r10 = $r9;
$r11 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r10.<java.util.List: boolean addAll(java.util.Collection)>($r11);
interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r7);
$z2 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r10);
if $z2 != 0 goto interfaceinvoke r1.<java.util.List: void clear()>();
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encountered resize after \");
$i0 = i1 / 100;
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= (branch)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null);
interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(null);
i1 = i1 + 100;
r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, null);
$r9 = new java.util.ArrayList;
specialinvoke $r9.<java.util.ArrayList: void <init>()>();
r10 = $r9;
$r11 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r10.<java.util.List: boolean addAll(java.util.Collection)>($r11);
interfaceinvoke r10.<java.util.List: boolean remove(java.lang.Object)>(r7);
$z2 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r10);
if $z2 != 0 goto interfaceinvoke r1.<java.util.List: void clear()>();
"->"Block 4:
[preds: 2 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: void clear()>();
$r12 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r12);
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encountered resize after \");
$i0 = i1 / 100;
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= (branch)];
"->"Block 5:
[preds: 1 3 ] [succs: 6 7 ]
if i1 != 100000 goto return;
";
    "Block 4:
[preds: 2 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: void clear()>();
$r12 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r12);
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= 100000 goto (branch);
";
    "Block 5:
[preds: 1 3 ] [succs: 6 7 ]
if i1 != 100000 goto return;
"->"Block 6:
[preds: 5 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"Resize never occurred\");
throw $r4;
";
    "Block 5:
[preds: 1 3 ] [succs: 6 7 ]
if i1 != 100000 goto return;
"->"Block 7:
[preds: 5 ] [succs: ]
return;
";
}
