digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.io.InputStream;
virtualinvoke r0.<java.io.InputStream: void close()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r0.<java.io.InputStream: int read()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r1 = new java.lang.Exception;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"read allowed after stream is closed\");
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r1;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.io.InputStream;
virtualinvoke r0.<java.io.InputStream: void close()>();
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r0.<java.io.InputStream: int read()>();
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.io.InputStream;
virtualinvoke r0.<java.io.InputStream: void close()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r0.<java.io.InputStream: int read()>();
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r1 = new java.lang.Exception;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r0.<java.io.InputStream: int read()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r1 = new java.lang.Exception;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"read allowed after stream is closed\");
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r1 = new java.lang.Exception;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"read allowed after stream is closed\");
"->"Block 4:
[preds: 3 ] [succs: 5 ]
throw $r1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"read allowed after stream is closed\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r1;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
return;
";
}
