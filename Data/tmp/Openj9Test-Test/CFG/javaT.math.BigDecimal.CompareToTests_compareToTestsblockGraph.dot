digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i5 = 0;
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r1 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r2 = newarray (java.math.BigDecimal[])[26];
$r3 = newarray (java.math.BigDecimal)[3];
$r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r3[0] = $r4;
$r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r3[1] = $r5;
$r6 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r3[2] = $r6;
$r2[0] = $r3;
$r7 = newarray (java.math.BigDecimal)[3];
$r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r7[0] = $r8;
$r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r7[1] = $r9;
$r7[2] = r1;
$r2[1] = $r7;
$r10 = newarray (java.math.BigDecimal)[3];
$r11 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r10[0] = $r11;
$r12 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r10[1] = $r12;
$r10[2] = r1;
$r2[2] = $r10;
$r13 = newarray (java.math.BigDecimal)[3];
$r14 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r13[0] = $r14;
$r15 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r13[1] = $r15;
$r16 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r13[2] = $r16;
$r2[3] = $r13;
$r17 = newarray (java.math.BigDecimal)[3];
$r18 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(10L);
$r17[0] = $r18;
$r19 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(10L);
$r17[1] = $r19;
$r20 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r17[2] = $r20;
$r2[4] = $r17;
$r21 = newarray (java.math.BigDecimal)[3];
$r22 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(2L, 1);
$r21[0] = $r22;
$r23 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r21[1] = $r23;
$r21[2] = r1;
$r2[5] = $r21;
$r24 = newarray (java.math.BigDecimal)[3];
$r25 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(2L, -1);
$r24[0] = $r25;
$r26 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r24[1] = $r26;
$r27 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r24[2] = $r27;
$r2[6] = $r24;
$r28 = newarray (java.math.BigDecimal)[3];
$r29 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, 1);
$r28[0] = $r29;
$r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r28[1] = $r30;
$r28[2] = r1;
$r2[7] = $r28;
$r31 = newarray (java.math.BigDecimal)[3];
$r32 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, -1);
$r31[0] = $r32;
$r33 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r31[1] = $r33;
$r34 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r31[2] = $r34;
$r2[8] = $r31;
$r35 = newarray (java.math.BigDecimal)[3];
$r36 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(5L, -1);
$r35[0] = $r36;
$r37 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r35[1] = $r37;
$r38 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r35[2] = $r38;
$r2[9] = $r35;
$r39 = newarray (java.math.BigDecimal)[3];
$r40 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r39[0] = $r40;
$r41 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r39[1] = $r41;
$r42 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r39[2] = $r42;
$r2[10] = $r39;
$r43 = newarray (java.math.BigDecimal)[3];
$r44 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r45 = virtualinvoke $r44.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r43[0] = $r45;
$r46 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r43[1] = $r46;
$r43[2] = r1;
$r2[11] = $r43;
$r47 = newarray (java.math.BigDecimal)[3];
$r48 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r47[0] = $r48;
$r49 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r47[1] = $r49;
$r47[2] = r1;
$r2[12] = $r47;
$r50 = newarray (java.math.BigDecimal)[3];
$r51 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r52 = virtualinvoke $r51.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r50[0] = $r52;
$r53 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r50[1] = $r53;
$r50[2] = r1;
$r2[13] = $r50;
$r54 = newarray (java.math.BigDecimal)[3];
$r55 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r54[0] = $r55;
$r56 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r54[1] = $r56;
$r54[2] = r1;
$r2[14] = $r54;
$r57 = newarray (java.math.BigDecimal)[3];
$r58 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r59 = virtualinvoke $r58.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r57[0] = $r59;
$r60 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r57[1] = $r60;
$r61 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r57[2] = $r61;
$r2[15] = $r57;
$r62 = newarray (java.math.BigDecimal)[3];
$r63 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r62[0] = $r63;
$r64 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r62[1] = $r64;
$r62[2] = r1;
$r2[16] = $r62;
$r65 = newarray (java.math.BigDecimal)[3];
$r66 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r67 = virtualinvoke $r66.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r65[0] = $r67;
$r68 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r65[1] = $r68;
$r69 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r65[2] = $r69;
$r2[17] = $r65;
$r70 = newarray (java.math.BigDecimal)[3];
$r71 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r70[0] = $r71;
$r72 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r70[1] = $r72;
$r73 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r70[2] = $r73;
$r2[18] = $r70;
$r74 = newarray (java.math.BigDecimal)[3];
$r75 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r76 = virtualinvoke $r75.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r74[0] = $r76;
$r77 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r74[1] = $r77;
$r78 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r74[2] = $r78;
$r2[19] = $r74;
$r79 = newarray (java.math.BigDecimal)[3];
$r80 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r79[0] = $r80;
$r81 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r79[1] = $r81;
$r82 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r79[2] = $r82;
$r2[20] = $r79;
$r83 = newarray (java.math.BigDecimal)[3];
$r84 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r85 = virtualinvoke $r84.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r83[0] = $r85;
$r86 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r83[1] = $r86;
$r87 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r83[2] = $r87;
$r2[21] = $r83;
$r88 = newarray (java.math.BigDecimal)[3];
$r89 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r88[0] = $r89;
$r90 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r88[1] = $r90;
$r91 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r88[2] = $r91;
$r2[22] = $r88;
$r92 = newarray (java.math.BigDecimal)[3];
$r93 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r94 = virtualinvoke $r93.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r92[0] = $r94;
$r95 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r92[1] = $r95;
$r96 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r92[2] = $r96;
$r2[23] = $r92;
$r97 = newarray (java.math.BigDecimal)[3];
$r98 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r97[0] = $r98;
$r99 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r97[1] = $r99;
$r100 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r97[2] = $r100;
$r2[24] = $r97;
$r101 = newarray (java.math.BigDecimal)[3];
$r102 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r103 = virtualinvoke $r102.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r101[0] = $r103;
$r104 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r101[1] = $r104;
$r105 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r101[2] = $r105;
$r2[25] = $r101;
r106 = $r2;
r107 = r106;
i0 = lengthof r107;
i6 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return i5;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r108 = r107[i6];
r109 = r108[0];
r110 = virtualinvoke r109.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r111 = r108[1];
r112 = virtualinvoke r111.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r113 = r108[2];
i1 = virtualinvoke $r113.<java.math.BigDecimal: int intValue()>();
$i2 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r109, r111, i1);
i7 = i5 + $i2;
$i3 = neg i1;
$i4 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r110, r112, $i3);
i5 = i7 + $i4;
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return i5;
"
    "Block 0:
[preds: ] [succs: 1 ]
i5 = 0;
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r1 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r2 = newarray (java.math.BigDecimal[])[26];
$r3 = newarray (java.math.BigDecimal)[3];
$r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r3[0] = $r4;
$r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r3[1] = $r5;
$r6 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r3[2] = $r6;
$r2[0] = $r3;
$r7 = newarray (java.math.BigDecimal)[3];
$r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);
$r7[0] = $r8;
$r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r7[1] = $r9;
$r7[2] = r1;
$r2[1] = $r7;
$r10 = newarray (java.math.BigDecimal)[3];
$r11 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r10[0] = $r11;
$r12 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r10[1] = $r12;
$r10[2] = r1;
$r2[2] = $r10;
$r13 = newarray (java.math.BigDecimal)[3];
$r14 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r13[0] = $r14;
$r15 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);
$r13[1] = $r15;
$r16 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r13[2] = $r16;
$r2[3] = $r13;
$r17 = newarray (java.math.BigDecimal)[3];
$r18 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(10L);
$r17[0] = $r18;
$r19 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(10L);
$r17[1] = $r19;
$r20 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r17[2] = $r20;
$r2[4] = $r17;
$r21 = newarray (java.math.BigDecimal)[3];
$r22 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(2L, 1);
$r21[0] = $r22;
$r23 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r21[1] = $r23;
$r21[2] = r1;
$r2[5] = $r21;
$r24 = newarray (java.math.BigDecimal)[3];
$r25 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(2L, -1);
$r24[0] = $r25;
$r26 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r24[1] = $r26;
$r27 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r24[2] = $r27;
$r2[6] = $r24;
$r28 = newarray (java.math.BigDecimal)[3];
$r29 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, 1);
$r28[0] = $r29;
$r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r28[1] = $r30;
$r28[2] = r1;
$r2[7] = $r28;
$r31 = newarray (java.math.BigDecimal)[3];
$r32 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, -1);
$r31[0] = $r32;
$r33 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r31[1] = $r33;
$r34 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r31[2] = $r34;
$r2[8] = $r31;
$r35 = newarray (java.math.BigDecimal)[3];
$r36 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(5L, -1);
$r35[0] = $r36;
$r37 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r35[1] = $r37;
$r38 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r35[2] = $r38;
$r2[9] = $r35;
$r39 = newarray (java.math.BigDecimal)[3];
$r40 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r39[0] = $r40;
$r41 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r39[1] = $r41;
$r42 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r39[2] = $r42;
$r2[10] = $r39;
$r43 = newarray (java.math.BigDecimal)[3];
$r44 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r45 = virtualinvoke $r44.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r43[0] = $r45;
$r46 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r43[1] = $r46;
$r43[2] = r1;
$r2[11] = $r43;
$r47 = newarray (java.math.BigDecimal)[3];
$r48 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r47[0] = $r48;
$r49 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r47[1] = $r49;
$r47[2] = r1;
$r2[12] = $r47;
$r50 = newarray (java.math.BigDecimal)[3];
$r51 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r52 = virtualinvoke $r51.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r50[0] = $r52;
$r53 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r50[1] = $r53;
$r50[2] = r1;
$r2[13] = $r50;
$r54 = newarray (java.math.BigDecimal)[3];
$r55 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r54[0] = $r55;
$r56 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r54[1] = $r56;
$r54[2] = r1;
$r2[14] = $r54;
$r57 = newarray (java.math.BigDecimal)[3];
$r58 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r59 = virtualinvoke $r58.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r57[0] = $r59;
$r60 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r57[1] = $r60;
$r61 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r57[2] = $r61;
$r2[15] = $r57;
$r62 = newarray (java.math.BigDecimal)[3];
$r63 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r62[0] = $r63;
$r64 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r62[1] = $r64;
$r62[2] = r1;
$r2[16] = $r62;
$r65 = newarray (java.math.BigDecimal)[3];
$r66 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r67 = virtualinvoke $r66.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r65[0] = $r67;
$r68 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r65[1] = $r68;
$r69 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r65[2] = $r69;
$r2[17] = $r65;
$r70 = newarray (java.math.BigDecimal)[3];
$r71 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r70[0] = $r71;
$r72 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r70[1] = $r72;
$r73 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r70[2] = $r73;
$r2[18] = $r70;
$r74 = newarray (java.math.BigDecimal)[3];
$r75 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r76 = virtualinvoke $r75.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r74[0] = $r76;
$r77 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r74[1] = $r77;
$r78 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r74[2] = $r78;
$r2[19] = $r74;
$r79 = newarray (java.math.BigDecimal)[3];
$r80 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r79[0] = $r80;
$r81 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r79[1] = $r81;
$r82 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r79[2] = $r82;
$r2[20] = $r79;
$r83 = newarray (java.math.BigDecimal)[3];
$r84 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775806L);
$r85 = virtualinvoke $r84.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r83[0] = $r85;
$r86 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r83[1] = $r86;
$r87 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r83[2] = $r87;
$r2[21] = $r83;
$r88 = newarray (java.math.BigDecimal)[3];
$r89 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r88[0] = $r89;
$r90 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r88[1] = $r90;
$r91 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r88[2] = $r91;
$r2[22] = $r88;
$r92 = newarray (java.math.BigDecimal)[3];
$r93 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r94 = virtualinvoke $r93.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r92[0] = $r94;
$r95 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r92[1] = $r95;
$r96 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r92[2] = $r96;
$r2[23] = $r92;
$r97 = newarray (java.math.BigDecimal)[3];
$r98 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r97[0] = $r98;
$r99 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r97[1] = $r99;
$r100 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r97[2] = $r100;
$r2[24] = $r97;
$r101 = newarray (java.math.BigDecimal)[3];
$r102 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r103 = virtualinvoke $r102.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r101[0] = $r103;
$r104 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r101[1] = $r104;
$r105 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r101[2] = $r105;
$r2[25] = $r101;
r106 = $r2;
r107 = r106;
i0 = lengthof r107;
i6 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return i5;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return i5;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r108 = r107[i6];
r109 = r108[0];
r110 = virtualinvoke r109.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r111 = r108[1];
r112 = virtualinvoke r111.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r113 = r108[2];
i1 = virtualinvoke $r113.<java.math.BigDecimal: int intValue()>();
$i2 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r109, r111, i1);
i7 = i5 + $i2;
$i3 = neg i1;
$i4 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r110, r112, $i3);
i5 = i7 + $i4;
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return i5;
"->"Block 3:
[preds: 1 ] [succs: ]
return i5;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r108 = r107[i6];
r109 = r108[0];
r110 = virtualinvoke r109.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r111 = r108[1];
r112 = virtualinvoke r111.<java.math.BigDecimal: java.math.BigDecimal negate()>();
$r113 = r108[2];
i1 = virtualinvoke $r113.<java.math.BigDecimal: int intValue()>();
$i2 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r109, r111, i1);
i7 = i5 + $i2;
$i3 = neg i1;
$i4 = staticinvoke <javaT.math.BigDecimal.CompareToTests: int compareToTest(java.math.BigDecimal,java.math.BigDecimal,int)>(r110, r112, $i3);
i5 = i7 + $i4;
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i6 >= i0 goto return i5;
";
}
