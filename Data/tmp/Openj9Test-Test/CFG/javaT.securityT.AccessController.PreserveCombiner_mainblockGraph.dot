digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javax.security.auth.Subject;
specialinvoke $r0.<javax.security.auth.Subject: void <init>()>();
r1 = $r0;
$r2 = virtualinvoke r1.<javax.security.auth.Subject: java.util.Set getPrincipals()>();
$r3 = new javax.security.auth.x500.X500Principal;
specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(\"cn=duke\");
interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);
$r4 = new javaT.securityT.AccessController.PreserveCombiner$1;
specialinvoke $r4.<javaT.securityT.AccessController.PreserveCombiner$1: void <init>()>();
$r5 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedAction)>(r1, $r4);
r6 = (java.lang.String) $r5;
$i0 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(\"passed\");
if $i0 > 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r7 = new java.lang.SecurityException;
specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>(\"overall test failed\");
throw $r7;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javax.security.auth.Subject;
specialinvoke $r0.<javax.security.auth.Subject: void <init>()>();
r1 = $r0;
$r2 = virtualinvoke r1.<javax.security.auth.Subject: java.util.Set getPrincipals()>();
$r3 = new javax.security.auth.x500.X500Principal;
specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(\"cn=duke\");
interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);
$r4 = new javaT.securityT.AccessController.PreserveCombiner$1;
specialinvoke $r4.<javaT.securityT.AccessController.PreserveCombiner$1: void <init>()>();
$r5 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedAction)>(r1, $r4);
r6 = (java.lang.String) $r5;
$i0 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(\"passed\");
if $i0 > 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r7 = new java.lang.SecurityException;
specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>(\"overall test failed\");
throw $r7;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javax.security.auth.Subject;
specialinvoke $r0.<javax.security.auth.Subject: void <init>()>();
r1 = $r0;
$r2 = virtualinvoke r1.<javax.security.auth.Subject: java.util.Set getPrincipals()>();
$r3 = new javax.security.auth.x500.X500Principal;
specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(\"cn=duke\");
interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);
$r4 = new javaT.securityT.AccessController.PreserveCombiner$1;
specialinvoke $r4.<javaT.securityT.AccessController.PreserveCombiner$1: void <init>()>();
$r5 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedAction)>(r1, $r4);
r6 = (java.lang.String) $r5;
$i0 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(\"passed\");
if $i0 > 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
