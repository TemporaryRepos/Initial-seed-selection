digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "r0 = \"abc\""
    "r1 = \"def\""
    "$z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r1, 0, -2147483648)"
    "if $z0 != 0 goto return"
    "$r2 = new java.lang.RuntimeException"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer overflow in RegionMatches\")"
    "throw $r2"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"r0 = \"abc\"";
    "r0 = \"abc\""->"r1 = \"def\"";
    "r1 = \"def\""->"$z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r1, 0, -2147483648)";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r1, 0, -2147483648)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r2 = new java.lang.RuntimeException";
    "if $z0 != 0 goto return"->"return";
    "$r2 = new java.lang.RuntimeException"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer overflow in RegionMatches\")";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer overflow in RegionMatches\")"->"throw $r2";
}
