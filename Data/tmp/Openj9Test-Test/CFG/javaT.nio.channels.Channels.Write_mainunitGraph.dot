digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "r0 = newarray (byte)[3]"
    "r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"test1\", null)"
    "virtualinvoke r1.<java.io.File: void deleteOnExit()>()"
    "$r2 = new java.io.FileOutputStream"
    "specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"
    "r3 = $r2"
    "r4 = virtualinvoke r3.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"
    "r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)"
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, 1)"
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 2, 1)"
    "virtualinvoke r5.<java.io.OutputStream: void close()>()"
    "virtualinvoke r4.<java.nio.channels.FileChannel: void close()>()"
    "virtualinvoke r3.<java.io.FileOutputStream: void close()>()"
    "virtualinvoke r1.<java.io.File: boolean delete()>()"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"r0 = newarray (byte)[3]";
    "r0 = newarray (byte)[3]"->"r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"test1\", null)";
    "r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"test1\", null)"->"virtualinvoke r1.<java.io.File: void deleteOnExit()>()";
    "virtualinvoke r1.<java.io.File: void deleteOnExit()>()"->"$r2 = new java.io.FileOutputStream";
    "$r2 = new java.io.FileOutputStream"->"specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"->"r3 = $r2";
    "r3 = $r2"->"r4 = virtualinvoke r3.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()";
    "r4 = virtualinvoke r3.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"->"r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)";
    "r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)"->"virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, 1)";
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, 1)"->"virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 2, 1)";
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r0, 2, 1)"->"virtualinvoke r5.<java.io.OutputStream: void close()>()";
    "virtualinvoke r5.<java.io.OutputStream: void close()>()"->"virtualinvoke r4.<java.nio.channels.FileChannel: void close()>()";
    "virtualinvoke r4.<java.nio.channels.FileChannel: void close()>()"->"virtualinvoke r3.<java.io.FileOutputStream: void close()>()";
    "virtualinvoke r3.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r1.<java.io.File: boolean delete()>()";
    "virtualinvoke r1.<java.io.File: boolean delete()>()"->"return";
}
