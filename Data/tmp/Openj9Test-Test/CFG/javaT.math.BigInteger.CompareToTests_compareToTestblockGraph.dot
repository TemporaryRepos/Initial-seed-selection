digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigInteger;
r1 := @parameter1: java.math.BigInteger;
i1 := @parameter2: int;
i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);
if i0 != i1 goto $b3 = 1;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$b3 = 0;
goto [?= b2 = $b3];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$b3 = 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b2 = $b3;
if b2 != 1 goto return b2;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\").compareTo(\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r12);
"
    "Block 5:
[preds: 3 4 ] [succs: ]
return b2;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigInteger;
r1 := @parameter1: java.math.BigInteger;
i1 := @parameter2: int;
i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);
if i0 != i1 goto $b3 = 1;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$b3 = 0;
goto [?= b2 = $b3];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigInteger;
r1 := @parameter1: java.math.BigInteger;
i1 := @parameter2: int;
i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);
if i0 != i1 goto $b3 = 1;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$b3 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$b3 = 0;
goto [?= b2 = $b3];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b2 = $b3;
if b2 != 1 goto return b2;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$b3 = 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b2 = $b3;
if b2 != 1 goto return b2;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b2 = $b3;
if b2 != 1 goto return b2;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\").compareTo(\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r12);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b2 = $b3;
if b2 != 1 goto return b2;
"->"Block 5:
[preds: 3 4 ] [succs: ]
return b2;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\").compareTo(\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r12);
"->"Block 5:
[preds: 3 4 ] [succs: ]
return b2;
";
}
