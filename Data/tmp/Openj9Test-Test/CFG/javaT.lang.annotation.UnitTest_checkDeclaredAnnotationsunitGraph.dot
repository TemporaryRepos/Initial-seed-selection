digraph "unitGraph" {
    "r0 := @parameter0: java.lang.reflect.AnnotatedElement"
    "z0 := @parameter1: boolean"
    "z1 := @parameter2: boolean"
    "$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>"
    "$i1 = $i0 + 1"
    "<javaT.lang.'annotation'.UnitTest: int numTests> = $i1"
    "z4 = 0"
    "z5 = 0"
    "r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"
    "r2 = r1"
    "i2 = lengthof r2"
    "i3 = 0"
    "if i3 >= i2 goto (branch)"
    "r11 = r2[i3]"
    "$z2 = r11 instanceof javaT.lang.annotation.Foo"
    "if $z2 == 0 goto $z3 = r11 instanceof javaT.lang.annotation.Bar"
    "z4 = 1"
    "goto [?= i3 = i3 + 1]"
    "$z3 = r11 instanceof javaT.lang.annotation.Bar"
    "if $z3 == 0 goto i3 = i3 + 1"
    "z5 = 1"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "if z4 != z0 goto $r3 = new java.lang.StringBuilder"
    "if z5 == z1 goto (branch)"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - Foo: \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Bar: \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r10)"
    "goto [?= return]"
    "$r12 := @caughtexception"
    "r19 = $r12"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r18)"
    "return"
    "r0 := @parameter0: java.lang.reflect.AnnotatedElement"->"z0 := @parameter1: boolean";
    "z0 := @parameter1: boolean"->"z1 := @parameter2: boolean";
    "z1 := @parameter2: boolean"->"$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>";
    "$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"<javaT.lang.'annotation'.UnitTest: int numTests> = $i1";
    "<javaT.lang.'annotation'.UnitTest: int numTests> = $i1"->"z4 = 0";
    "<javaT.lang.'annotation'.UnitTest: int numTests> = $i1"->"$r12 := @caughtexception";
    "z4 = 0"->"z5 = 0";
    "z4 = 0"->"$r12 := @caughtexception";
    "z5 = 0"->"r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()";
    "z5 = 0"->"$r12 := @caughtexception";
    "r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"->"r2 = r1";
    "r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"->"$r12 := @caughtexception";
    "r2 = r1"->"i2 = lengthof r2";
    "r2 = r1"->"$r12 := @caughtexception";
    "i2 = lengthof r2"->"i3 = 0";
    "i2 = lengthof r2"->"$r12 := @caughtexception";
    "i3 = 0"->"if i3 >= i2 goto (branch)";
    "i3 = 0"->"$r12 := @caughtexception";
    "if i3 >= i2 goto (branch)"->"r11 = r2[i3]";
    "if i3 >= i2 goto (branch)"->"if z4 != z0 goto $r3 = new java.lang.StringBuilder";
    "if i3 >= i2 goto (branch)"->"$r12 := @caughtexception";
    "r11 = r2[i3]"->"$z2 = r11 instanceof javaT.lang.annotation.Foo";
    "r11 = r2[i3]"->"$r12 := @caughtexception";
    "$z2 = r11 instanceof javaT.lang.annotation.Foo"->"if $z2 == 0 goto $z3 = r11 instanceof javaT.lang.annotation.Bar";
    "$z2 = r11 instanceof javaT.lang.annotation.Foo"->"$r12 := @caughtexception";
    "if $z2 == 0 goto $z3 = r11 instanceof javaT.lang.annotation.Bar"->"z4 = 1";
    "if $z2 == 0 goto $z3 = r11 instanceof javaT.lang.annotation.Bar"->"$z3 = r11 instanceof javaT.lang.annotation.Bar";
    "if $z2 == 0 goto $z3 = r11 instanceof javaT.lang.annotation.Bar"->"$r12 := @caughtexception";
    "z4 = 1"->"goto [?= i3 = i3 + 1]";
    "z4 = 1"->"$r12 := @caughtexception";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "goto [?= i3 = i3 + 1]"->"$r12 := @caughtexception";
    "$z3 = r11 instanceof javaT.lang.annotation.Bar"->"if $z3 == 0 goto i3 = i3 + 1";
    "$z3 = r11 instanceof javaT.lang.annotation.Bar"->"$r12 := @caughtexception";
    "if $z3 == 0 goto i3 = i3 + 1"->"z5 = 1";
    "if $z3 == 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "if $z3 == 0 goto i3 = i3 + 1"->"$r12 := @caughtexception";
    "z5 = 1"->"i3 = i3 + 1";
    "z5 = 1"->"$r12 := @caughtexception";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "i3 = i3 + 1"->"$r12 := @caughtexception";
    "goto [?= (branch)]"->"if i3 >= i2 goto (branch)";
    "goto [?= (branch)]"->"$r12 := @caughtexception";
    "if z4 != z0 goto $r3 = new java.lang.StringBuilder"->"if z5 == z1 goto (branch)";
    "if z4 != z0 goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "if z4 != z0 goto $r3 = new java.lang.StringBuilder"->"$r12 := @caughtexception";
    "if z5 == z1 goto (branch)"->"$r3 = new java.lang.StringBuilder";
    "if z5 == z1 goto (branch)"->"goto [?= return]";
    "if z5 == z1 goto (branch)"->"$r12 := @caughtexception";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "$r3 = new java.lang.StringBuilder"->"$r12 := @caughtexception";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r12 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")"->"$r12 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - Foo: \")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r12 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - Foo: \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - Foo: \")"->"$r12 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Bar: \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4)"->"$r12 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Bar: \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Bar: \")"->"$r12 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5)"->"$r12 := @caughtexception";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r10)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r12 := @caughtexception";
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r10)"->"goto [?= return]";
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r10)"->"$r12 := @caughtexception";
    "goto [?= return]"->"return";
    "$r12 := @caughtexception"->"r19 = $r12";
    "r19 = $r12"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Declared annotations: \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r18)";
    "staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r18)"->"return";
}
