digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.text.DecimalFormat;
specialinvoke $r0.<java.text.DecimalFormat: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1);
virtualinvoke r1.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>(2147483647);
i5 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i0 = lengthof $r2;
if i5 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i1 = lengthof $r3;
if i6 >= $i1 goto i5 = i5 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r6 = $r5[i5];
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r9 = $r8[i6];
$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
i7 = 0;
"
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i2 = lengthof $r12;
if i7 >= $i2 goto i6 = i6 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 5 ]
$r13 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i3 = $r13[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r11, $i3);
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i4 = $r18[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r17, $i4);
i7 = i7 + 1;
goto [?= $r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>];
"
    "Block 7:
[preds: 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
"
    "Block 8:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
"
    "Block 9:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.text.DecimalFormat;
specialinvoke $r0.<java.text.DecimalFormat: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1);
virtualinvoke r1.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>(2147483647);
i5 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i0 = lengthof $r2;
if i5 >= $i0 goto return;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i0 = lengthof $r2;
if i5 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i0 = lengthof $r2;
if i5 >= $i0 goto return;
"->"Block 9:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i1 = lengthof $r3;
if i6 >= $i1 goto i5 = i5 + 1;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i1 = lengthof $r3;
if i6 >= $i1 goto i5 = i5 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r6 = $r5[i5];
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r9 = $r8[i6];
$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
i7 = 0;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i1 = lengthof $r3;
if i6 >= $i1 goto i5 = i5 + 1;
"->"Block 8:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r6 = $r5[i5];
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$r9 = $r8[i6];
$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
i7 = 0;
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i2 = lengthof $r12;
if i7 >= $i2 goto i6 = i6 + 1;
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i2 = lengthof $r12;
if i7 >= $i2 goto i6 = i6 + 1;
"->"Block 6:
[preds: 5 ] [succs: 5 ]
$r13 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i3 = $r13[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r11, $i3);
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i4 = $r18[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r17, $i4);
i7 = i7 + 1;
goto [?= $r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>];
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i2 = lengthof $r12;
if i7 >= $i2 goto i6 = i6 + 1;
"->"Block 7:
[preds: 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
";
    "Block 6:
[preds: 5 ] [succs: 5 ]
$r13 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i3 = $r13[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r11, $i3);
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i4 = $r18[i7];
staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r17, $i4);
i7 = i7 + 1;
goto [?= $r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>];
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$r12 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>;
$i2 = lengthof $r12;
if i7 >= $i2 goto i6 = i6 + 1;
";
    "Block 7:
[preds: 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i1 = lengthof $r3;
if i6 >= $i1 goto i5 = i5 + 1;
";
    "Block 8:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>;
$i0 = lengthof $r2;
if i5 >= $i0 goto return;
";
}
