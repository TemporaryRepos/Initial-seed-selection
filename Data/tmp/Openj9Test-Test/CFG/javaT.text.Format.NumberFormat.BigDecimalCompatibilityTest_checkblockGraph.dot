digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Number;
r1 := @parameter1: java.math.BigDecimal;
i0 := @parameter2: int;
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
<javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: boolean err> = 1;
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed: got:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", multiplier=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Number;
r1 := @parameter1: java.math.BigDecimal;
i0 := @parameter2: int;
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
<javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: boolean err> = 1;
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed: got:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", multiplier=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Number;
r1 := @parameter1: java.math.BigDecimal;
i0 := @parameter2: int;
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
<javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: boolean err> = 1;
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed: got:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", multiplier=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
