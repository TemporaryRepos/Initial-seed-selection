digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.IdentityHashMap;
specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"One\", \"Un\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Two\", \"Deux\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Three\", \"Trois\");
$r5 = virtualinvoke r1.<java.util.IdentityHashMap: java.util.Set entrySet()>();
r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.util.Map$Entry) $r7;
interfaceinvoke r6.<java.util.Iterator: void remove()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r10 = new java.lang.RuntimeException;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test FAILED: Entry not invalidated by removal.\");
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r10;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.IdentityHashMap;
specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"One\", \"Un\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Two\", \"Deux\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Three\", \"Trois\");
$r5 = virtualinvoke r1.<java.util.IdentityHashMap: java.util.Set entrySet()>();
r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.util.Map$Entry) $r7;
interfaceinvoke r6.<java.util.Iterator: void remove()>();
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.IdentityHashMap;
specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"One\", \"Un\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Two\", \"Deux\");
virtualinvoke r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Three\", \"Trois\");
$r5 = virtualinvoke r1.<java.util.IdentityHashMap: java.util.Set entrySet()>();
r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.util.Map$Entry) $r7;
interfaceinvoke r6.<java.util.Iterator: void remove()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r10 = new java.lang.RuntimeException;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r10 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test FAILED: Entry not invalidated by removal.\");
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r10 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test FAILED: Entry not invalidated by removal.\");
"->"Block 4:
[preds: 3 ] [succs: 5 ]
throw $r10;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test FAILED: Entry not invalidated by removal.\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r10;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
$r11 := @caughtexception;
r12 = $r11;
return;
";
}
