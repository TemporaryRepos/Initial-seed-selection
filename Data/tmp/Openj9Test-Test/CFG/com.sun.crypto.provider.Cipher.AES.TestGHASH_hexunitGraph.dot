digraph "unitGraph" {
    "r1 := @parameter0: byte[]"
    "$r0 = new java.lang.StringBuilder"
    "$i0 = lengthof r1"
    "$i1 = 2 * $i0"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1)"
    "r2 = $r0"
    "r3 = r1"
    "i2 = lengthof r3"
    "i9 = 0"
    "if i9 >= i2 goto $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "b3 = r3[i9]"
    "$r5 = \"0123456789abcdef\""
    "$i4 = b3 >> 4"
    "$i5 = $i4 & 15"
    "$c6 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i5)"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)"
    "$r7 = \"0123456789abcdef\""
    "$i7 = b3 & 15"
    "$c8 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i7)"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8)"
    "i9 = i9 + 1"
    "goto [?= (branch)]"
    "$r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r4"
    "r1 := @parameter0: byte[]"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"$i1 = 2 * $i0";
    "$i1 = 2 * $i0"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1)";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = r1";
    "r3 = r1"->"i2 = lengthof r3";
    "i2 = lengthof r3"->"i9 = 0";
    "i9 = 0"->"if i9 >= i2 goto $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if i9 >= i2 goto $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"b3 = r3[i9]";
    "if i9 >= i2 goto $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "b3 = r3[i9]"->"$r5 = \"0123456789abcdef\"";
    "$r5 = \"0123456789abcdef\""->"$i4 = b3 >> 4";
    "$i4 = b3 >> 4"->"$i5 = $i4 & 15";
    "$i5 = $i4 & 15"->"$c6 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i5)";
    "$c6 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i5)"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)"->"$r7 = \"0123456789abcdef\"";
    "$r7 = \"0123456789abcdef\""->"$i7 = b3 & 15";
    "$i7 = b3 & 15"->"$c8 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i7)";
    "$c8 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i7)"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8)"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= i2 goto $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r4";
}
