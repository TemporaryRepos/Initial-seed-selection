digraph "unitGraph" {
    "i2 = 0"
    "$r0 = newarray (double[])[1]"
    "$r1 = newarray (double)[3]"
    "$r1[0] = -3.0"
    "$r1[1] = #Infinity"
    "$r1[2] = -0.0"
    "$r0[0] = $r1"
    "r2 = $r0"
    "r3 = r2"
    "i0 = lengthof r3"
    "i3 = 0"
    "if i3 >= i0 goto return i2"
    "r4 = r3[i3]"
    "$d2 = r4[0]"
    "$d1 = r4[1]"
    "$d0 = r4[2]"
    "$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0)"
    "i2 = i2 + $i1"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return i2"
    "i2 = 0"->"$r0 = newarray (double[])[1]";
    "$r0 = newarray (double[])[1]"->"$r1 = newarray (double)[3]";
    "$r1 = newarray (double)[3]"->"$r1[0] = -3.0";
    "$r1[0] = -3.0"->"$r1[1] = #Infinity";
    "$r1[1] = #Infinity"->"$r1[2] = -0.0";
    "$r1[2] = -0.0"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"r2 = $r0";
    "r2 = $r0"->"r3 = r2";
    "r3 = r2"->"i0 = lengthof r3";
    "i0 = lengthof r3"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto return i2";
    "if i3 >= i0 goto return i2"->"r4 = r3[i3]";
    "if i3 >= i0 goto return i2"->"return i2";
    "r4 = r3[i3]"->"$d2 = r4[0]";
    "$d2 = r4[0]"->"$d1 = r4[1]";
    "$d1 = r4[1]"->"$d0 = r4[2]";
    "$d0 = r4[2]"->"$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0)";
    "$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0)"->"i2 = i2 + $i1";
    "i2 = i2 + $i1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return i2";
}
