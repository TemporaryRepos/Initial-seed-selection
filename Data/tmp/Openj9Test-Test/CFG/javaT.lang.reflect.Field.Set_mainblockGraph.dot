digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
z10 = 0;
$r0 = new javaT.lang.reflect.Field.Test;
specialinvoke $r0.<javaT.lang.reflect.Field.Test: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testPrimitive()>();
if $z0 != 0 goto $z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
z10 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testPrimitive()\");
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
if $z1 != 0 goto $z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
z10 = 1;
$r11 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessiblePrimitive()\");
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
if $z2 != 0 goto $z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
z10 = 1;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatilePrimitive()\");
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
if $z3 != 0 goto $z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
z10 = 1;
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticPrimitive()\");
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
if $z4 != 0 goto $z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
z10 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticPrimitive()\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
z10 = 1;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testObject()\");
"
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
if $z6 != 0 goto $z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
z10 = 1;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleObject()\");
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
if $z7 != 0 goto $z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
"
    "Block 15:
[preds: 14 ] [succs: 16 ]
z10 = 1;
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatileObject()\");
"
    "Block 16:
[preds: 14 15 ] [succs: 17 18 ]
$z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
if $z8 != 0 goto $z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
z10 = 1;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticObject()\");
"
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
$z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
if $z9 != 0 goto (branch);
"
    "Block 19:
[preds: 18 ] [succs: 20 ]
z10 = 1;
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticObject()\");
"
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z10 == 0 goto return;
"
    "Block 21:
[preds: 20 ] [succs: ]
$r2 = new java.lang.Throwable;
specialinvoke $r2.<java.lang.Throwable: void <init>(java.lang.String)>(\"Test for Field.set FAILED\");
throw $r2;
"
    "Block 22:
[preds: 20 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
z10 = 0;
$r0 = new javaT.lang.reflect.Field.Test;
specialinvoke $r0.<javaT.lang.reflect.Field.Test: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testPrimitive()>();
if $z0 != 0 goto $z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
"->"Block 1:
[preds: 0 ] [succs: 2 ]
z10 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testPrimitive()\");
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
z10 = 0;
$r0 = new javaT.lang.reflect.Field.Test;
specialinvoke $r0.<javaT.lang.reflect.Field.Test: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testPrimitive()>();
if $z0 != 0 goto $z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
if $z1 != 0 goto $z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
z10 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testPrimitive()\");
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
if $z1 != 0 goto $z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
if $z1 != 0 goto $z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
"->"Block 3:
[preds: 2 ] [succs: 4 ]
z10 = 1;
$r11 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessiblePrimitive()\");
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessiblePrimitive()>();
if $z1 != 0 goto $z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
if $z2 != 0 goto $z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
z10 = 1;
$r11 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessiblePrimitive()\");
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
if $z2 != 0 goto $z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
if $z2 != 0 goto $z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
"->"Block 5:
[preds: 4 ] [succs: 6 ]
z10 = 1;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatilePrimitive()\");
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z2 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatilePrimitive()>();
if $z2 != 0 goto $z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
if $z3 != 0 goto $z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
z10 = 1;
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatilePrimitive()\");
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
if $z3 != 0 goto $z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
if $z3 != 0 goto $z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
"->"Block 7:
[preds: 6 ] [succs: 8 ]
z10 = 1;
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticPrimitive()\");
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z3 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticPrimitive()>();
if $z3 != 0 goto $z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
if $z4 != 0 goto $z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
z10 = 1;
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticPrimitive()\");
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
if $z4 != 0 goto $z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
if $z4 != 0 goto $z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
"->"Block 9:
[preds: 8 ] [succs: 10 ]
z10 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticPrimitive()\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z4 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticPrimitive()>();
if $z4 != 0 goto $z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
z10 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticPrimitive()\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
"->"Block 11:
[preds: 10 ] [succs: 12 ]
z10 = 1;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testObject()\");
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z5 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testObject()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
if $z6 != 0 goto $z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
z10 = 1;
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testObject()\");
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
if $z6 != 0 goto $z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
if $z6 != 0 goto $z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
"->"Block 13:
[preds: 12 ] [succs: 14 ]
z10 = 1;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleObject()\");
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z6 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleObject()>();
if $z6 != 0 goto $z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
if $z7 != 0 goto $z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
z10 = 1;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleObject()\");
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
if $z7 != 0 goto $z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
if $z7 != 0 goto $z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
"->"Block 15:
[preds: 14 ] [succs: 16 ]
z10 = 1;
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatileObject()\");
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$z7 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testVolatileObject()>();
if $z7 != 0 goto $z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
"->"Block 16:
[preds: 14 15 ] [succs: 17 18 ]
$z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
if $z8 != 0 goto $z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
";
    "Block 15:
[preds: 14 ] [succs: 16 ]
z10 = 1;
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testVolatileObject()\");
"->"Block 16:
[preds: 14 15 ] [succs: 17 18 ]
$z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
if $z8 != 0 goto $z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
";
    "Block 16:
[preds: 14 15 ] [succs: 17 18 ]
$z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
if $z8 != 0 goto $z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
"->"Block 17:
[preds: 16 ] [succs: 18 ]
z10 = 1;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticObject()\");
";
    "Block 16:
[preds: 14 15 ] [succs: 17 18 ]
$z8 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testStaticObject()>();
if $z8 != 0 goto $z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
$z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
if $z9 != 0 goto (branch);
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
z10 = 1;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testStaticObject()\");
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
$z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
if $z9 != 0 goto (branch);
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
$z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
if $z9 != 0 goto (branch);
"->"Block 19:
[preds: 18 ] [succs: 20 ]
z10 = 1;
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticObject()\");
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
$z9 = virtualinvoke r1.<javaT.lang.reflect.Field.Test: boolean testAccessibleStaticObject()>();
if $z9 != 0 goto (branch);
"->"Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z10 == 0 goto return;
";
    "Block 19:
[preds: 18 ] [succs: 20 ]
z10 = 1;
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED: testAccessibleStaticObject()\");
"->"Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z10 == 0 goto return;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z10 == 0 goto return;
"->"Block 21:
[preds: 20 ] [succs: ]
$r2 = new java.lang.Throwable;
specialinvoke $r2.<java.lang.Throwable: void <init>(java.lang.String)>(\"Test for Field.set FAILED\");
throw $r2;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z10 == 0 goto return;
"->"Block 22:
[preds: 20 ] [succs: ]
return;
";
}
