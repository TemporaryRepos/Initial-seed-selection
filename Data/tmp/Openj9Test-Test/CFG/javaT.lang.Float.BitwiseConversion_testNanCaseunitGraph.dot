digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i6 = 0"
    "i1 = i0 & 8388607"
    "$r0 = newarray (float)[2]"
    "$i2 = 2139095040 | i1"
    "$f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i2)"
    "$r0[0] = $f0"
    "$i3 = -8388608 | i1"
    "$f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i3)"
    "$r0[1] = $f1"
    "r1 = $r0"
    "r2 = r1"
    "i4 = lengthof r2"
    "i7 = 0"
    "if i7 >= i4 goto return i6"
    "f2 = r2[i7]"
    "$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2)"
    "if $z0 != 0 goto i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)"
    "$r7 = new java.lang.RuntimeException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid input \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"yielded non-NaN\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"
    "throw $r7"
    "i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)"
    "if i5 == 2143289344 goto i7 = i7 + 1"
    "i6 = i6 + 1"
    "$r4 = <java.lang.System: java.io.PrintStream err>"
    "$r3 = newarray (java.lang.Object)[1]"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"
    "$r3[0] = $r5"
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"Non-canoncial NaN bits returned: %x%n\", $r3)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "return i6"
    "i0 := @parameter0: int"->"i6 = 0";
    "i6 = 0"->"i1 = i0 & 8388607";
    "i1 = i0 & 8388607"->"$r0 = newarray (float)[2]";
    "$r0 = newarray (float)[2]"->"$i2 = 2139095040 | i1";
    "$i2 = 2139095040 | i1"->"$f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i2)";
    "$f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i2)"->"$r0[0] = $f0";
    "$r0[0] = $f0"->"$i3 = -8388608 | i1";
    "$i3 = -8388608 | i1"->"$f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i3)";
    "$f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i3)"->"$r0[1] = $f1";
    "$r0[1] = $f1"->"r1 = $r0";
    "r1 = $r0"->"r2 = r1";
    "r2 = r1"->"i4 = lengthof r2";
    "i4 = lengthof r2"->"i7 = 0";
    "i7 = 0"->"if i7 >= i4 goto return i6";
    "if i7 >= i4 goto return i6"->"f2 = r2[i7]";
    "if i7 >= i4 goto return i6"->"return i6";
    "f2 = r2[i7]"->"$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2)";
    "$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2)"->"if $z0 != 0 goto i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)";
    "if $z0 != 0 goto i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)"->"$r7 = new java.lang.RuntimeException";
    "if $z0 != 0 goto i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)"->"i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)";
    "$r7 = new java.lang.RuntimeException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid input \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid input \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"yielded non-NaN\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"yielded non-NaN\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"->"throw $r7";
    "i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2)"->"if i5 == 2143289344 goto i7 = i7 + 1";
    "if i5 == 2143289344 goto i7 = i7 + 1"->"i6 = i6 + 1";
    "if i5 == 2143289344 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "i6 = i6 + 1"->"$r4 = <java.lang.System: java.io.PrintStream err>";
    "$r4 = <java.lang.System: java.io.PrintStream err>"->"$r3 = newarray (java.lang.Object)[1]";
    "$r3 = newarray (java.lang.Object)[1]"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"->"$r3[0] = $r5";
    "$r3[0] = $r5"->"virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"Non-canoncial NaN bits returned: %x%n\", $r3)";
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"Non-canoncial NaN bits returned: %x%n\", $r3)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i4 goto return i6";
}
