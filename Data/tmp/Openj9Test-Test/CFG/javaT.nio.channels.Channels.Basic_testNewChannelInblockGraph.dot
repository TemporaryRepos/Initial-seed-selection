digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.File;
$r0 = new javaT.nio.channels.Channels.ExtendedFileInputStream;
specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileInputStream: void <init>(java.io.File)>(r1);
r2 = $r0;
r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2);
$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$i0 = virtualinvoke $r4.<java.lang.String: int length()>();
$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
$i2 = $i0 * $i1;
i3 = $i2 * 3;
$i4 = i3 + 1;
r5 = newarray (byte)[$i4];
r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5);
i9 = 0;
i10 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 == -1 goto $r7 = new java.lang.String;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
i10 = i10 + i9;
i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6);
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r7 = new java.lang.String;
$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>;
specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8);
r9 = $r7;
$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
i5 = virtualinvoke $r10.<java.lang.String: int length()>();
i11 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i12 = i11 + 1;
$i8 = i11 * i5;
$i7 = i12 * i5;
r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);
$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
if $z0 != 0 goto i11 = i12 + 1;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r13 = new java.lang.RuntimeException;
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r13;
"
    "Block 7:
[preds: 5 ] [succs: 4 ]
i11 = i12 + 1;
goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>];
"
    "Block 8:
[preds: 4 ] [succs: ]
interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileInputStream: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.File;
$r0 = new javaT.nio.channels.Channels.ExtendedFileInputStream;
specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileInputStream: void <init>(java.io.File)>(r1);
r2 = $r0;
r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>(r2);
$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$i0 = virtualinvoke $r4.<java.lang.String: int length()>();
$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
$i2 = $i0 * $i1;
i3 = $i2 * 3;
$i4 = i3 + 1;
r5 = newarray (byte)[$i4];
r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5);
i9 = 0;
i10 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 == -1 goto $r7 = new java.lang.String;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 == -1 goto $r7 = new java.lang.String;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
i10 = i10 + i9;
i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6);
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 == -1 goto $r7 = new java.lang.String;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r7 = new java.lang.String;
$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>;
specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8);
r9 = $r7;
$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
i5 = virtualinvoke $r10.<java.lang.String: int length()>();
i11 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
i10 = i10 + i9;
i9 = interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(r6);
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 == -1 goto $r7 = new java.lang.String;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r7 = new java.lang.String;
$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>;
specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i10, $r8);
r9 = $r7;
$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
i5 = virtualinvoke $r10.<java.lang.String: int length()>();
i11 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
i12 = i11 + 1;
$i8 = i11 * i5;
$i7 = i12 * i5;
r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);
$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
if $z0 != 0 goto i11 = i12 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
"->"Block 8:
[preds: 4 ] [succs: ]
interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileInputStream: void close()>();
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i12 = i11 + 1;
$i8 = i11 * i5;
$i7 = i12 * i5;
r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);
$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
if $z0 != 0 goto i11 = i12 + 1;
"->"Block 6:
[preds: 5 ] [succs: ]
$r13 = new java.lang.RuntimeException;
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r13;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i12 = i11 + 1;
$i8 = i11 * i5;
$i7 = i12 * i5;
r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);
$r12 = <javaT.nio.channels.Channels.Basic: java.lang.String message>;
$z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
if $z0 != 0 goto i11 = i12 + 1;
"->"Block 7:
[preds: 5 ] [succs: 4 ]
i11 = i12 + 1;
goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>];
";
    "Block 7:
[preds: 5 ] [succs: 4 ]
i11 = i12 + 1;
goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>;
if i11 >= $i6 goto interfaceinvoke r3.<java.nio.channels.ReadableByteChannel: void close()>();
";
}
