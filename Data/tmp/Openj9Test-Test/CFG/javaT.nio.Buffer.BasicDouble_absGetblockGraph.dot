digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.DoubleBuffer;
i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>();
i4 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>();
$l1 = (long) $d0;
$l2 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4);
$d1 = (double) $l2;
$l3 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3);
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.DoubleBuffer;
i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>();
i4 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>();
$l1 = (long) $d0;
$l2 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4);
$d1 = (double) $l2;
$l3 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3);
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>();
$l1 = (long) $d0;
$l2 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4);
$d1 = (double) $l2;
$l3 = (long) $d1;
staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3);
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>();
";
}
