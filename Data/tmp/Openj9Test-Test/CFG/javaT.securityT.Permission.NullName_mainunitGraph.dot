digraph "unitGraph" {
    "r13 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "$r0 = new java.util.PropertyPermission"
    "specialinvoke $r0.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"
    "r14 = $r0"
    "goto [?= $r1 = new java.io.FilePermission]"
    "$r12 := @caughtexception"
    "r15 = $r12"
    "i0 = i0 + 1"
    "$r1 = new java.io.FilePermission"
    "specialinvoke $r1.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"
    "r16 = $r1"
    "goto [?= $r2 = new java.net.SocketPermission]"
    "$r11 := @caughtexception"
    "r17 = $r11"
    "$r2 = new java.net.SocketPermission"
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(null, \"connect\")"
    "r18 = $r2"
    "goto [?= $r3 = new java.lang.RuntimePermission]"
    "$r10 := @caughtexception"
    "r19 = $r10"
    "$r3 = new java.lang.RuntimePermission"
    "specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>(null)"
    "r20 = $r3"
    "goto [?= $r4 = new java.security.UnresolvedPermission]"
    "$r9 := @caughtexception"
    "r21 = $r9"
    "$r4 = new java.security.UnresolvedPermission"
    "specialinvoke $r4.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>(null, \"blah\", \"read\", null)"
    "r22 = $r4"
    "goto [?= (branch)]"
    "$r8 := @caughtexception"
    "r23 = $r8"
    "$r6 := @caughtexception"
    "r24 = $r6"
    "$r7 = new java.lang.Exception"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: Wrong exception thrown\")"
    "throw $r7"
    "if i0 == 5 goto return"
    "$r5 = new java.lang.Exception"
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: didn\'t catch enough NullPointerExceptions\")"
    "throw $r5"
    "return"
    "r13 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"$r12 := @caughtexception";
    "i0 = 0"->"$r6 := @caughtexception";
    "i0 = 0"->"$r0 = new java.util.PropertyPermission";
    "$r0 = new java.util.PropertyPermission"->"$r12 := @caughtexception";
    "$r0 = new java.util.PropertyPermission"->"$r6 := @caughtexception";
    "$r0 = new java.util.PropertyPermission"->"specialinvoke $r0.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")";
    "specialinvoke $r0.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"$r12 := @caughtexception";
    "specialinvoke $r0.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"$r6 := @caughtexception";
    "specialinvoke $r0.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"r14 = $r0";
    "r14 = $r0"->"$r12 := @caughtexception";
    "r14 = $r0"->"$r6 := @caughtexception";
    "r14 = $r0"->"goto [?= $r1 = new java.io.FilePermission]";
    "goto [?= $r1 = new java.io.FilePermission]"->"$r11 := @caughtexception";
    "goto [?= $r1 = new java.io.FilePermission]"->"$r6 := @caughtexception";
    "goto [?= $r1 = new java.io.FilePermission]"->"$r1 = new java.io.FilePermission";
    "$r12 := @caughtexception"->"r15 = $r12";
    "$r12 := @caughtexception"->"$r6 := @caughtexception";
    "r15 = $r12"->"i0 = i0 + 1";
    "r15 = $r12"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r11 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r1 = new java.io.FilePermission";
    "$r1 = new java.io.FilePermission"->"$r11 := @caughtexception";
    "$r1 = new java.io.FilePermission"->"$r6 := @caughtexception";
    "$r1 = new java.io.FilePermission"->"specialinvoke $r1.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")";
    "specialinvoke $r1.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"$r11 := @caughtexception";
    "specialinvoke $r1.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"$r6 := @caughtexception";
    "specialinvoke $r1.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(null, \"read\")"->"r16 = $r1";
    "r16 = $r1"->"$r11 := @caughtexception";
    "r16 = $r1"->"$r6 := @caughtexception";
    "r16 = $r1"->"goto [?= $r2 = new java.net.SocketPermission]";
    "goto [?= $r2 = new java.net.SocketPermission]"->"$r10 := @caughtexception";
    "goto [?= $r2 = new java.net.SocketPermission]"->"$r6 := @caughtexception";
    "goto [?= $r2 = new java.net.SocketPermission]"->"$r2 = new java.net.SocketPermission";
    "$r11 := @caughtexception"->"r17 = $r11";
    "$r11 := @caughtexception"->"$r6 := @caughtexception";
    "r17 = $r11"->"i0 = i0 + 1";
    "r17 = $r11"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r10 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r2 = new java.net.SocketPermission";
    "$r2 = new java.net.SocketPermission"->"$r10 := @caughtexception";
    "$r2 = new java.net.SocketPermission"->"$r6 := @caughtexception";
    "$r2 = new java.net.SocketPermission"->"specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(null, \"connect\")";
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(null, \"connect\")"->"$r10 := @caughtexception";
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(null, \"connect\")"->"$r6 := @caughtexception";
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(null, \"connect\")"->"r18 = $r2";
    "r18 = $r2"->"$r10 := @caughtexception";
    "r18 = $r2"->"$r6 := @caughtexception";
    "r18 = $r2"->"goto [?= $r3 = new java.lang.RuntimePermission]";
    "goto [?= $r3 = new java.lang.RuntimePermission]"->"$r9 := @caughtexception";
    "goto [?= $r3 = new java.lang.RuntimePermission]"->"$r6 := @caughtexception";
    "goto [?= $r3 = new java.lang.RuntimePermission]"->"$r3 = new java.lang.RuntimePermission";
    "$r10 := @caughtexception"->"r19 = $r10";
    "$r10 := @caughtexception"->"$r6 := @caughtexception";
    "r19 = $r10"->"i0 = i0 + 1";
    "r19 = $r10"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r9 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r3 = new java.lang.RuntimePermission";
    "$r3 = new java.lang.RuntimePermission"->"$r9 := @caughtexception";
    "$r3 = new java.lang.RuntimePermission"->"$r6 := @caughtexception";
    "$r3 = new java.lang.RuntimePermission"->"specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>(null)";
    "specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>(null)"->"$r9 := @caughtexception";
    "specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>(null)"->"$r6 := @caughtexception";
    "specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>(null)"->"r20 = $r3";
    "r20 = $r3"->"$r9 := @caughtexception";
    "r20 = $r3"->"$r6 := @caughtexception";
    "r20 = $r3"->"goto [?= $r4 = new java.security.UnresolvedPermission]";
    "goto [?= $r4 = new java.security.UnresolvedPermission]"->"$r8 := @caughtexception";
    "goto [?= $r4 = new java.security.UnresolvedPermission]"->"$r6 := @caughtexception";
    "goto [?= $r4 = new java.security.UnresolvedPermission]"->"$r4 = new java.security.UnresolvedPermission";
    "$r9 := @caughtexception"->"r21 = $r9";
    "$r9 := @caughtexception"->"$r6 := @caughtexception";
    "r21 = $r9"->"i0 = i0 + 1";
    "r21 = $r9"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r8 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r4 = new java.security.UnresolvedPermission";
    "$r4 = new java.security.UnresolvedPermission"->"$r8 := @caughtexception";
    "$r4 = new java.security.UnresolvedPermission"->"$r6 := @caughtexception";
    "$r4 = new java.security.UnresolvedPermission"->"specialinvoke $r4.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>(null, \"blah\", \"read\", null)";
    "specialinvoke $r4.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>(null, \"blah\", \"read\", null)"->"$r8 := @caughtexception";
    "specialinvoke $r4.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>(null, \"blah\", \"read\", null)"->"$r6 := @caughtexception";
    "specialinvoke $r4.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>(null, \"blah\", \"read\", null)"->"r22 = $r4";
    "r22 = $r4"->"$r8 := @caughtexception";
    "r22 = $r4"->"$r6 := @caughtexception";
    "r22 = $r4"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"$r6 := @caughtexception";
    "$r8 := @caughtexception"->"r23 = $r8";
    "$r8 := @caughtexception"->"$r6 := @caughtexception";
    "r23 = $r8"->"i0 = i0 + 1";
    "r23 = $r8"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "goto [?= (branch)]"->"if i0 == 5 goto return";
    "$r6 := @caughtexception"->"r24 = $r6";
    "r24 = $r6"->"$r7 = new java.lang.Exception";
    "$r7 = new java.lang.Exception"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: Wrong exception thrown\")";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: Wrong exception thrown\")"->"throw $r7";
    "if i0 == 5 goto return"->"$r5 = new java.lang.Exception";
    "if i0 == 5 goto return"->"return";
    "$r5 = new java.lang.Exception"->"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: didn\'t catch enough NullPointerExceptions\")";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed: didn\'t catch enough NullPointerExceptions\")"->"throw $r5";
}
