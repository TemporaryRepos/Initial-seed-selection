digraph "unitGraph" {
    "$r0 = new java.util.ArrayDeque"
    "specialinvoke $r0.<java.util.ArrayDeque: void <init>()>()"
    "r1 = $r0"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)"
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r2)"
    "i7 = 20"
    "$i0 = i7 + 16"
    "i8 = $i0 + 1"
    "i9 = 0"
    "if i9 >= 8 goto $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"
    "i10 = staticinvoke <javaT.util.Arrays.TimSortStackSize: int build(int,int,java.util.ArrayDeque)>(i8, i7, r1)"
    "$i5 = i7 + i8"
    "i7 = $i5 + 1"
    "$i6 = i7 + i10"
    "i8 = $i6 + 1"
    "i9 = i9 + 1"
    "goto [?= (branch)]"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r3)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r4)"
    "i11 = 0"
    "r17 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto i12 = 16"
    "$r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()"
    "r18 = (java.lang.Integer) $r16"
    "$i4 = virtualinvoke r18.<java.lang.Integer: int intValue()>()"
    "i11 = i11 + $i4"
    "goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]"
    "i12 = 16"
    "if i12 >= i11 goto $i1 = i12 - i11"
    "i12 = i12 + i12"
    "$i1 = i12 - i11"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "virtualinvoke r1.<java.util.ArrayDeque: void addLast(java.lang.Object)>($r5)"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Total: \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "r19 = newarray (java.lang.Integer)[i12]"
    "i13 = 0"
    "i14 = 0"
    "r11 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return r19"
    "$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"
    "r13 = (java.lang.Integer) $r12"
    "i15 = 0"
    "$i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()"
    "if i15 >= $i2 goto i13 = i13 + 1"
    "$i3 = i14"
    "i14 = i14 + 1"
    "if i15 != 0 goto $b16 = 1"
    "$b16 = 0"
    "goto [?= $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)]"
    "$b16 = 1"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)"
    "r19[$i3] = $r14"
    "i15 = i15 + 1"
    "goto [?= $i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()]"
    "i13 = i13 + 1"
    "goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"
    "return r19"
    "$r0 = new java.util.ArrayDeque"->"specialinvoke $r0.<java.util.ArrayDeque: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayDeque: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)"->"virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r2)";
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r2)"->"i7 = 20";
    "i7 = 20"->"$i0 = i7 + 16";
    "$i0 = i7 + 16"->"i8 = $i0 + 1";
    "i8 = $i0 + 1"->"i9 = 0";
    "i9 = 0"->"if i9 >= 8 goto $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)";
    "if i9 >= 8 goto $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"->"i10 = staticinvoke <javaT.util.Arrays.TimSortStackSize: int build(int,int,java.util.ArrayDeque)>(i8, i7, r1)";
    "if i9 >= 8 goto $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)";
    "i10 = staticinvoke <javaT.util.Arrays.TimSortStackSize: int build(int,int,java.util.ArrayDeque)>(i8, i7, r1)"->"$i5 = i7 + i8";
    "$i5 = i7 + i8"->"i7 = $i5 + 1";
    "i7 = $i5 + 1"->"$i6 = i7 + i10";
    "$i6 = i7 + i10"->"i8 = $i6 + 1";
    "i8 = $i6 + 1"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= 8 goto $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"->"virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r3)";
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r3)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r4)";
    "virtualinvoke r1.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r4)"->"i11 = 0";
    "i11 = 0"->"r17 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()";
    "r17 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto i12 = 16";
    "if $z0 == 0 goto i12 = 16"->"$r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto i12 = 16"->"i12 = 16";
    "$r16 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()"->"r18 = (java.lang.Integer) $r16";
    "r18 = (java.lang.Integer) $r16"->"$i4 = virtualinvoke r18.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke r18.<java.lang.Integer: int intValue()>()"->"i11 = i11 + $i4";
    "i11 = i11 + $i4"->"goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()";
    "i12 = 16"->"if i12 >= i11 goto $i1 = i12 - i11";
    "if i12 >= i11 goto $i1 = i12 - i11"->"i12 = i12 + i12";
    "if i12 >= i11 goto $i1 = i12 - i11"->"$i1 = i12 - i11";
    "i12 = i12 + i12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i11 goto $i1 = i12 - i11";
    "$i1 = i12 - i11"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"virtualinvoke r1.<java.util.ArrayDeque: void addLast(java.lang.Object)>($r5)";
    "virtualinvoke r1.<java.util.ArrayDeque: void addLast(java.lang.Object)>($r5)"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Total: \")";
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Total: \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"r19 = newarray (java.lang.Integer)[i12]";
    "r19 = newarray (java.lang.Integer)[i12]"->"i13 = 0";
    "i13 = 0"->"i14 = 0";
    "i14 = 0"->"r11 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()";
    "r11 = virtualinvoke r1.<java.util.ArrayDeque: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return r19";
    "if $z1 == 0 goto return r19"->"$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return r19"->"return r19";
    "$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"->"r13 = (java.lang.Integer) $r12";
    "r13 = (java.lang.Integer) $r12"->"i15 = 0";
    "i15 = 0"->"$i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()"->"if i15 >= $i2 goto i13 = i13 + 1";
    "if i15 >= $i2 goto i13 = i13 + 1"->"$i3 = i14";
    "if i15 >= $i2 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$i3 = i14"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"if i15 != 0 goto $b16 = 1";
    "if i15 != 0 goto $b16 = 1"->"$b16 = 0";
    "if i15 != 0 goto $b16 = 1"->"$b16 = 1";
    "$b16 = 0"->"goto [?= $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)]";
    "goto [?= $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)]"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)";
    "$b16 = 1"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b16)"->"r19[$i3] = $r14";
    "r19[$i3] = $r14"->"i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= $i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()]";
    "goto [?= $i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()]"->"$i2 = virtualinvoke r13.<java.lang.Integer: int intValue()>()";
    "i13 = i13 + 1"->"goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
}
