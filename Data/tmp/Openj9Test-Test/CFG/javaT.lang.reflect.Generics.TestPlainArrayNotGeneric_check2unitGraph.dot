digraph "unitGraph" {
    "r0 := @parameter0: java.lang.reflect.Type"
    "r12 := @parameter1: java.lang.String"
    "$z0 = r0 instanceof java.lang.reflect.ParameterizedType"
    "if $z0 == 0 goto $z1 = r0 instanceof java.lang.reflect.TypeVariable"
    "r47 = (java.lang.reflect.ParameterizedType) r0"
    "$r46 = interfaceinvoke r47.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r46, \"type argument\", r12)"
    "goto [?= return]"
    "$z1 = r0 instanceof java.lang.reflect.TypeVariable"
    "if $z1 == 0 goto $z2 = r0 instanceof java.lang.reflect.WildcardType"
    "r48 = (java.lang.reflect.TypeVariable) r0"
    "$r40 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r40, \"bound\", r12)"
    "r49 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>()"
    "$z6 = r49 instanceof java.lang.reflect.Type"
    "if $z6 == 0 goto (branch)"
    "$r42 = (java.lang.reflect.Type) r49"
    "$r41 = new java.lang.StringBuilder"
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"declaration containing \")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r42, $r45)"
    "$z2 = r0 instanceof java.lang.reflect.WildcardType"
    "if $z2 == 0 goto $z3 = r0 instanceof java.lang.Class"
    "r50 = (java.lang.reflect.WildcardType) r0"
    "$r30 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>()"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r30, \"lower bound\", $r34)"
    "$r35 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>()"
    "$r36 = new java.lang.StringBuilder"
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r35, \"upper bound\", $r39)"
    "$z3 = r0 instanceof java.lang.Class"
    "if $z3 == 0 goto $z4 = r0 instanceof java.lang.reflect.GenericArrayType"
    "r51 = (java.lang.Class) r0"
    "$r21 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>()"
    "$r22 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r21, \"superinterface\", $r22)"
    "$r23 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()"
    "$r24 = new java.lang.StringBuilder"
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"superclass of \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r23, $r27)"
    "$r28 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"
    "$r29 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r28, \"type parameter\", $r29)"
    "$z4 = r0 instanceof java.lang.reflect.GenericArrayType"
    "if $z4 == 0 goto $r1 = new java.lang.StringBuilder"
    "r52 = (java.lang.reflect.GenericArrayType) r0"
    "r53 = interfaceinvoke r52.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>()"
    "$z5 = r53 instanceof java.lang.Class"
    "if $z5 == 0 goto $r10 = new java.lang.StringBuilder"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Type \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" uses GenericArrayType when plain array would do, in \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r20)"
    "goto [?= (branch)]"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"component type of \")"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>(r53, $r14)"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TEST BUG: mutant Type \")"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (a \")"
    "$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()"
    "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r9)"
    "return"
    "r0 := @parameter0: java.lang.reflect.Type"->"r12 := @parameter1: java.lang.String";
    "r12 := @parameter1: java.lang.String"->"$z0 = r0 instanceof java.lang.reflect.ParameterizedType";
    "$z0 = r0 instanceof java.lang.reflect.ParameterizedType"->"if $z0 == 0 goto $z1 = r0 instanceof java.lang.reflect.TypeVariable";
    "if $z0 == 0 goto $z1 = r0 instanceof java.lang.reflect.TypeVariable"->"r47 = (java.lang.reflect.ParameterizedType) r0";
    "if $z0 == 0 goto $z1 = r0 instanceof java.lang.reflect.TypeVariable"->"$z1 = r0 instanceof java.lang.reflect.TypeVariable";
    "r47 = (java.lang.reflect.ParameterizedType) r0"->"$r46 = interfaceinvoke r47.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r46 = interfaceinvoke r47.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r46, \"type argument\", r12)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r46, \"type argument\", r12)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$z1 = r0 instanceof java.lang.reflect.TypeVariable"->"if $z1 == 0 goto $z2 = r0 instanceof java.lang.reflect.WildcardType";
    "if $z1 == 0 goto $z2 = r0 instanceof java.lang.reflect.WildcardType"->"r48 = (java.lang.reflect.TypeVariable) r0";
    "if $z1 == 0 goto $z2 = r0 instanceof java.lang.reflect.WildcardType"->"$z2 = r0 instanceof java.lang.reflect.WildcardType";
    "r48 = (java.lang.reflect.TypeVariable) r0"->"$r40 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "$r40 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r40, \"bound\", r12)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r40, \"bound\", r12)"->"r49 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>()";
    "r49 = interfaceinvoke r48.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>()"->"$z6 = r49 instanceof java.lang.reflect.Type";
    "$z6 = r49 instanceof java.lang.reflect.Type"->"if $z6 == 0 goto (branch)";
    "if $z6 == 0 goto (branch)"->"$r42 = (java.lang.reflect.Type) r49";
    "if $z6 == 0 goto (branch)"->"goto [?= return]";
    "$r42 = (java.lang.reflect.Type) r49"->"$r41 = new java.lang.StringBuilder";
    "$r41 = new java.lang.StringBuilder"->"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"->"$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"declaration containing \")";
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"declaration containing \")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r42, $r45)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r42, $r45)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$z2 = r0 instanceof java.lang.reflect.WildcardType"->"if $z2 == 0 goto $z3 = r0 instanceof java.lang.Class";
    "if $z2 == 0 goto $z3 = r0 instanceof java.lang.Class"->"r50 = (java.lang.reflect.WildcardType) r0";
    "if $z2 == 0 goto $z3 = r0 instanceof java.lang.Class"->"$z3 = r0 instanceof java.lang.Class";
    "r50 = (java.lang.reflect.WildcardType) r0"->"$r30 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>()";
    "$r30 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>()"->"$r31 = new java.lang.StringBuilder";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r30, \"lower bound\", $r34)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r30, \"lower bound\", $r34)"->"$r35 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>()";
    "$r35 = interfaceinvoke r50.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>()"->"$r36 = new java.lang.StringBuilder";
    "$r36 = new java.lang.StringBuilder"->"specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wildcard type in \")"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r35, \"upper bound\", $r39)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r35, \"upper bound\", $r39)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$z3 = r0 instanceof java.lang.Class"->"if $z3 == 0 goto $z4 = r0 instanceof java.lang.reflect.GenericArrayType";
    "if $z3 == 0 goto $z4 = r0 instanceof java.lang.reflect.GenericArrayType"->"r51 = (java.lang.Class) r0";
    "if $z3 == 0 goto $z4 = r0 instanceof java.lang.reflect.GenericArrayType"->"$z4 = r0 instanceof java.lang.reflect.GenericArrayType";
    "r51 = (java.lang.Class) r0"->"$r21 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>()";
    "$r21 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>()"->"$r22 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()";
    "$r22 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r21, \"superinterface\", $r22)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r21, \"superinterface\", $r22)"->"$r23 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()";
    "$r23 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()"->"$r24 = new java.lang.StringBuilder";
    "$r24 = new java.lang.StringBuilder"->"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"superclass of \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"superclass of \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r23, $r27)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>($r23, $r27)"->"$r28 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()";
    "$r28 = virtualinvoke r51.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"->"$r29 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()";
    "$r29 = virtualinvoke r51.<java.lang.Class: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r28, \"type parameter\", $r29)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type[],java.lang.String,java.lang.String)>($r28, \"type parameter\", $r29)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$z4 = r0 instanceof java.lang.reflect.GenericArrayType"->"if $z4 == 0 goto $r1 = new java.lang.StringBuilder";
    "if $z4 == 0 goto $r1 = new java.lang.StringBuilder"->"r52 = (java.lang.reflect.GenericArrayType) r0";
    "if $z4 == 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "r52 = (java.lang.reflect.GenericArrayType) r0"->"r53 = interfaceinvoke r52.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>()";
    "r53 = interfaceinvoke r52.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>()"->"$z5 = r53 instanceof java.lang.Class";
    "$z5 = r53 instanceof java.lang.Class"->"if $z5 == 0 goto $r10 = new java.lang.StringBuilder";
    "if $z5 == 0 goto $r10 = new java.lang.StringBuilder"->"$r15 = new java.lang.StringBuilder";
    "if $z5 == 0 goto $r10 = new java.lang.StringBuilder"->"$r10 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Type \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Type \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" uses GenericArrayType when plain array would do, in \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" uses GenericArrayType when plain array would do, in \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r20)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r20)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= return]";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"component type of \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"component type of \")"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>(r53, $r14)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check(java.lang.reflect.Type,java.lang.String)>(r53, $r14)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TEST BUG: mutant Type \")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TEST BUG: mutant Type \")"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (a \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (a \")"->"$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()";
    "$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()";
    "$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()"->"$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)";
    "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r9)";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void fail(java.lang.String)>($r9)"->"return";
}
