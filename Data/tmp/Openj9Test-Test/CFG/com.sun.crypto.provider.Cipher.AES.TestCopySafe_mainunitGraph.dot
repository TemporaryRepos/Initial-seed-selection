digraph "unitGraph" {
    "r24 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(\"SunJCE\")"
    "r25 = null"
    "z1 = 1"
    "r1 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: java.lang.String[] MODES>"
    "i0 = lengthof r1"
    "i3 = 0"
    "if i3 >= i0 goto (branch)"
    "r3 = r1[i3]"
    "$r32 = new java.lang.StringBuilder"
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\")"
    "r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "if r3 != \"GCM\" goto $z2 = 0"
    "$z2 = 1"
    "goto [?= z0 = $z2]"
    "$z2 = 0"
    "z0 = $z2"
    "if z0 == 0 goto (branch)"
    "$r33 = new javax.crypto.spec.GCMParameterSpec"
    "$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>"
    "specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21)"
    "r25 = $r33"
    "goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)]"
    "if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)"
    "$r34 = new javax.crypto.spec.IvParameterSpec"
    "$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>"
    "specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19)"
    "r25 = $r34"
    "r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)"
    "$r26 = <java.lang.System: java.io.PrintStream out>"
    "$r35 = new java.lang.StringBuilder"
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"
    "$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \")"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31)"
    "r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>"
    "i1 = lengthof r10"
    "i4 = 0"
    "if i4 >= i1 goto i3 = i3 + 1"
    "i2 = r10[i4]"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r36 = new java.lang.StringBuilder"
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16)"
    "$r38 = (java.security.spec.AlgorithmParameterSpec) r25"
    "staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0)"
    "$r17 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\")"
    "goto [?= i4 = i4 + 1]"
    "$r22 := @caughtexception"
    "r23 = $r22"
    "virtualinvoke r23.<java.lang.Exception: void printStackTrace()>()"
    "z1 = 0"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "i3 = i3 + 1"
    "if z1 != 0 goto return"
    "$r37 = new java.lang.Exception"
    "specialinvoke $r37.<java.lang.Exception: void <init>(java.lang.String)>(\"One or more test failed\")"
    "throw $r37"
    "return"
    "r24 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(\"SunJCE\")";
    "r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(\"SunJCE\")"->"r25 = null";
    "r25 = null"->"z1 = 1";
    "z1 = 1"->"r1 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: java.lang.String[] MODES>";
    "r1 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: java.lang.String[] MODES>"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto (branch)";
    "if i3 >= i0 goto (branch)"->"r3 = r1[i3]";
    "if i3 >= i0 goto (branch)"->"if z1 != 0 goto return";
    "r3 = r1[i3]"->"$r32 = new java.lang.StringBuilder";
    "$r32 = new java.lang.StringBuilder"->"specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")";
    "$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\")"->"r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"if r3 != \"GCM\" goto $z2 = 0";
    "if r3 != \"GCM\" goto $z2 = 0"->"$z2 = 1";
    "if r3 != \"GCM\" goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= z0 = $z2]";
    "goto [?= z0 = $z2]"->"z0 = $z2";
    "$z2 = 0"->"z0 = $z2";
    "z0 = $z2"->"if z0 == 0 goto (branch)";
    "if z0 == 0 goto (branch)"->"$r33 = new javax.crypto.spec.GCMParameterSpec";
    "if z0 == 0 goto (branch)"->"if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)";
    "$r33 = new javax.crypto.spec.GCMParameterSpec"->"$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>";
    "$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>"->"specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21)";
    "specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21)"->"r25 = $r33";
    "r25 = $r33"->"goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)]";
    "goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)]"->"r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)";
    "if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)"->"$r34 = new javax.crypto.spec.IvParameterSpec";
    "if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)"->"r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)";
    "$r34 = new javax.crypto.spec.IvParameterSpec"->"$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>";
    "$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>"->"specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19)";
    "specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19)"->"r25 = $r34";
    "r25 = $r34"->"r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)";
    "r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)"->"$r26 = <java.lang.System: java.io.PrintStream out>";
    "$r26 = <java.lang.System: java.io.PrintStream out>"->"$r35 = new java.lang.StringBuilder";
    "$r35 = new java.lang.StringBuilder"->"specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"->"$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \")";
    "$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \")"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31)";
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31)"->"r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>";
    "r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>"->"i1 = lengthof r10";
    "i1 = lengthof r10"->"i4 = 0";
    "i4 = 0"->"if i4 >= i1 goto i3 = i3 + 1";
    "if i4 >= i1 goto i3 = i3 + 1"->"i2 = r10[i4]";
    "if i4 >= i1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i2 = r10[i4]"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r36 = new java.lang.StringBuilder";
    "$r36 = new java.lang.StringBuilder"->"specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \")";
    "$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16)";
    "virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16)"->"$r38 = (java.security.spec.AlgorithmParameterSpec) r25";
    "virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16)"->"$r22 := @caughtexception";
    "$r38 = (java.security.spec.AlgorithmParameterSpec) r25"->"staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0)";
    "$r38 = (java.security.spec.AlgorithmParameterSpec) r25"->"$r22 := @caughtexception";
    "staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0)"->"$r17 = <java.lang.System: java.io.PrintStream out>";
    "staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0)"->"$r22 := @caughtexception";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\")";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"$r22 := @caughtexception";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\")"->"goto [?= i4 = i4 + 1]";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\")"->"$r22 := @caughtexception";
    "goto [?= i4 = i4 + 1]"->"i4 = i4 + 1";
    "$r22 := @caughtexception"->"r23 = $r22";
    "r23 = $r22"->"virtualinvoke r23.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r23.<java.lang.Exception: void printStackTrace()>()"->"z1 = 0";
    "z1 = 0"->"goto [?= i4 = i4 + 1]";
    "goto [?= i4 = i4 + 1]"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i1 goto i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto (branch)";
    "if z1 != 0 goto return"->"$r37 = new java.lang.Exception";
    "if z1 != 0 goto return"->"return";
    "$r37 = new java.lang.Exception"->"specialinvoke $r37.<java.lang.Exception: void <init>(java.lang.String)>(\"One or more test failed\")";
    "specialinvoke $r37.<java.lang.Exception: void <init>(java.lang.String)>(\"One or more test failed\")"->"throw $r37";
}
