digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
z0 = 0;
r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r2 = $r1;
i6 = -1073;
"
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i6 > -1022 goto $r3 = new java.math.BigDecimal;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
d4 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i6);
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(double)>(d4);
r30 = $r29;
$r31 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r32 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r31);
$r33 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r34 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r33);
$r35 = virtualinvoke r32.<java.math.BigDecimal: java.lang.String toString()>();
d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r35);
$r36 = virtualinvoke r34.<java.math.BigDecimal: java.lang.String toString()>();
d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);
$b4 = d5 cmpl d4;
if $b4 == 0 goto $b5 = d6 cmpl d4;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r43 = <java.lang.System: java.io.PrintStream out>;
$r42 = newarray (java.lang.Object)[3];
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r42[0] = $r44;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);
$r42[1] = $r45;
$r42[2] = r32;
virtualinvoke $r43.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d lowerBound converts as %a %s%n\", $r42);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$b5 = d6 cmpl d4;
if $b5 == 0 goto i6 = i6 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
z0 = 1;
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = newarray (java.lang.Object)[3];
$r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r37[0] = $r39;
$r40 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);
$r37[1] = $r40;
$r37[2] = r34;
virtualinvoke $r38.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d upperBound converts as %a %s%n\", $r37);
"
    "Block 6:
[preds: 4 5 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 1 ] [succs: 8 9 ]
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r47 = $r3;
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(double)>(0.5);
$r5 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r4);
$r6 = virtualinvoke $r5.<java.math.BigDecimal: java.lang.String toString()>();
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);
$b0 = $d0 cmpl 0.0;
if $b0 == 0 goto $r7 = new java.math.BigDecimal;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r26 = newarray (java.lang.Object)[0];
virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.5*MIN_VALUE doesn\'t convert 0%n\", $r26);
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(double)>(0.50000000001);
$r8 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
$r9 = virtualinvoke $r8.<java.math.BigDecimal: java.lang.String toString()>();
$d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);
$b1 = $d1 cmpl 4.9E-324;
if $b1 == 0 goto $r10 = new java.math.BigDecimal;
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
z0 = 1;
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = newarray (java.lang.Object)[0];
virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.50000000001*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r23);
"
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(double)>(1.49999999999);
$r11 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r10);
$r12 = virtualinvoke $r11.<java.math.BigDecimal: java.lang.String toString()>();
$d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);
$b2 = $d2 cmpl 4.9E-324;
if $b2 == 0 goto $r13 = new java.math.BigDecimal;
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
z0 = 1;
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = newarray (java.lang.Object)[0];
virtualinvoke $r21.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.49999999999*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r20);
"
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(double)>(1.5);
$r14 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
$r15 = virtualinvoke $r14.<java.math.BigDecimal: java.lang.String toString()>();
$d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);
$b3 = $d3 cmpl 1.0E-323;
if $b3 == 0 goto (branch);
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
z0 = 1;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[0];
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.5*MIN_VALUE doesn\'t convert to 2*MIN_VALUE%n\", $r17);
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto return;
"
    "Block 16:
[preds: 15 ] [succs: ]
$r16 = new java.lang.RuntimeException;
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Inconsistent conversion\");
throw $r16;
"
    "Block 17:
[preds: 15 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
z0 = 0;
r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r2 = $r1;
i6 = -1073;
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i6 > -1022 goto $r3 = new java.math.BigDecimal;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i6 > -1022 goto $r3 = new java.math.BigDecimal;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
d4 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i6);
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(double)>(d4);
r30 = $r29;
$r31 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r32 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r31);
$r33 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r34 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r33);
$r35 = virtualinvoke r32.<java.math.BigDecimal: java.lang.String toString()>();
d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r35);
$r36 = virtualinvoke r34.<java.math.BigDecimal: java.lang.String toString()>();
d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);
$b4 = d5 cmpl d4;
if $b4 == 0 goto $b5 = d6 cmpl d4;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i6 > -1022 goto $r3 = new java.math.BigDecimal;
"->"Block 7:
[preds: 1 ] [succs: 8 9 ]
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r47 = $r3;
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(double)>(0.5);
$r5 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r4);
$r6 = virtualinvoke $r5.<java.math.BigDecimal: java.lang.String toString()>();
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);
$b0 = $d0 cmpl 0.0;
if $b0 == 0 goto $r7 = new java.math.BigDecimal;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
d4 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i6);
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(double)>(d4);
r30 = $r29;
$r31 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r32 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r31);
$r33 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r34 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r33);
$r35 = virtualinvoke r32.<java.math.BigDecimal: java.lang.String toString()>();
d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r35);
$r36 = virtualinvoke r34.<java.math.BigDecimal: java.lang.String toString()>();
d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);
$b4 = d5 cmpl d4;
if $b4 == 0 goto $b5 = d6 cmpl d4;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r43 = <java.lang.System: java.io.PrintStream out>;
$r42 = newarray (java.lang.Object)[3];
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r42[0] = $r44;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);
$r42[1] = $r45;
$r42[2] = r32;
virtualinvoke $r43.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d lowerBound converts as %a %s%n\", $r42);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
d4 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i6);
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(double)>(d4);
r30 = $r29;
$r31 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r32 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r31);
$r33 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>(r0);
r34 = virtualinvoke r30.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r33);
$r35 = virtualinvoke r32.<java.math.BigDecimal: java.lang.String toString()>();
d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r35);
$r36 = virtualinvoke r34.<java.math.BigDecimal: java.lang.String toString()>();
d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);
$b4 = d5 cmpl d4;
if $b4 == 0 goto $b5 = d6 cmpl d4;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$b5 = d6 cmpl d4;
if $b5 == 0 goto i6 = i6 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r43 = <java.lang.System: java.io.PrintStream out>;
$r42 = newarray (java.lang.Object)[3];
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r42[0] = $r44;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);
$r42[1] = $r45;
$r42[2] = r32;
virtualinvoke $r43.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d lowerBound converts as %a %s%n\", $r42);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$b5 = d6 cmpl d4;
if $b5 == 0 goto i6 = i6 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$b5 = d6 cmpl d4;
if $b5 == 0 goto i6 = i6 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
z0 = 1;
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = newarray (java.lang.Object)[3];
$r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r37[0] = $r39;
$r40 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);
$r37[1] = $r40;
$r37[2] = r34;
virtualinvoke $r38.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d upperBound converts as %a %s%n\", $r37);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$b5 = d6 cmpl d4;
if $b5 == 0 goto i6 = i6 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
z0 = 1;
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = newarray (java.lang.Object)[3];
$r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r37[0] = $r39;
$r40 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);
$r37[1] = $r40;
$r37[2] = r34;
virtualinvoke $r38.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"2^%d upperBound converts as %a %s%n\", $r37);
"->"Block 6:
[preds: 4 5 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i6 > -1022 goto $r3 = new java.math.BigDecimal;
";
    "Block 7:
[preds: 1 ] [succs: 8 9 ]
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r47 = $r3;
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(double)>(0.5);
$r5 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r4);
$r6 = virtualinvoke $r5.<java.math.BigDecimal: java.lang.String toString()>();
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);
$b0 = $d0 cmpl 0.0;
if $b0 == 0 goto $r7 = new java.math.BigDecimal;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r26 = newarray (java.lang.Object)[0];
virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.5*MIN_VALUE doesn\'t convert 0%n\", $r26);
";
    "Block 7:
[preds: 1 ] [succs: 8 9 ]
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(4.9E-324);
r47 = $r3;
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(double)>(0.5);
$r5 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r4);
$r6 = virtualinvoke $r5.<java.math.BigDecimal: java.lang.String toString()>();
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);
$b0 = $d0 cmpl 0.0;
if $b0 == 0 goto $r7 = new java.math.BigDecimal;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(double)>(0.50000000001);
$r8 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
$r9 = virtualinvoke $r8.<java.math.BigDecimal: java.lang.String toString()>();
$d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);
$b1 = $d1 cmpl 4.9E-324;
if $b1 == 0 goto $r10 = new java.math.BigDecimal;
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r26 = newarray (java.lang.Object)[0];
virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.5*MIN_VALUE doesn\'t convert 0%n\", $r26);
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(double)>(0.50000000001);
$r8 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
$r9 = virtualinvoke $r8.<java.math.BigDecimal: java.lang.String toString()>();
$d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);
$b1 = $d1 cmpl 4.9E-324;
if $b1 == 0 goto $r10 = new java.math.BigDecimal;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(double)>(0.50000000001);
$r8 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
$r9 = virtualinvoke $r8.<java.math.BigDecimal: java.lang.String toString()>();
$d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);
$b1 = $d1 cmpl 4.9E-324;
if $b1 == 0 goto $r10 = new java.math.BigDecimal;
"->"Block 10:
[preds: 9 ] [succs: 11 ]
z0 = 1;
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = newarray (java.lang.Object)[0];
virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.50000000001*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r23);
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(double)>(0.50000000001);
$r8 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
$r9 = virtualinvoke $r8.<java.math.BigDecimal: java.lang.String toString()>();
$d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);
$b1 = $d1 cmpl 4.9E-324;
if $b1 == 0 goto $r10 = new java.math.BigDecimal;
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(double)>(1.49999999999);
$r11 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r10);
$r12 = virtualinvoke $r11.<java.math.BigDecimal: java.lang.String toString()>();
$d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);
$b2 = $d2 cmpl 4.9E-324;
if $b2 == 0 goto $r13 = new java.math.BigDecimal;
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
z0 = 1;
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = newarray (java.lang.Object)[0];
virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"0.50000000001*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r23);
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(double)>(1.49999999999);
$r11 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r10);
$r12 = virtualinvoke $r11.<java.math.BigDecimal: java.lang.String toString()>();
$d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);
$b2 = $d2 cmpl 4.9E-324;
if $b2 == 0 goto $r13 = new java.math.BigDecimal;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(double)>(1.49999999999);
$r11 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r10);
$r12 = virtualinvoke $r11.<java.math.BigDecimal: java.lang.String toString()>();
$d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);
$b2 = $d2 cmpl 4.9E-324;
if $b2 == 0 goto $r13 = new java.math.BigDecimal;
"->"Block 12:
[preds: 11 ] [succs: 13 ]
z0 = 1;
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = newarray (java.lang.Object)[0];
virtualinvoke $r21.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.49999999999*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r20);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(double)>(1.49999999999);
$r11 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r10);
$r12 = virtualinvoke $r11.<java.math.BigDecimal: java.lang.String toString()>();
$d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);
$b2 = $d2 cmpl 4.9E-324;
if $b2 == 0 goto $r13 = new java.math.BigDecimal;
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(double)>(1.5);
$r14 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
$r15 = virtualinvoke $r14.<java.math.BigDecimal: java.lang.String toString()>();
$d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);
$b3 = $d3 cmpl 1.0E-323;
if $b3 == 0 goto (branch);
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
z0 = 1;
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = newarray (java.lang.Object)[0];
virtualinvoke $r21.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.49999999999*MIN_VALUE doesn\'t convert to MIN_VALUE%n\", $r20);
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(double)>(1.5);
$r14 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
$r15 = virtualinvoke $r14.<java.math.BigDecimal: java.lang.String toString()>();
$d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);
$b3 = $d3 cmpl 1.0E-323;
if $b3 == 0 goto (branch);
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(double)>(1.5);
$r14 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
$r15 = virtualinvoke $r14.<java.math.BigDecimal: java.lang.String toString()>();
$d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);
$b3 = $d3 cmpl 1.0E-323;
if $b3 == 0 goto (branch);
"->"Block 14:
[preds: 13 ] [succs: 15 ]
z0 = 1;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[0];
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.5*MIN_VALUE doesn\'t convert to 2*MIN_VALUE%n\", $r17);
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(double)>(1.5);
$r14 = virtualinvoke r47.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
$r15 = virtualinvoke $r14.<java.math.BigDecimal: java.lang.String toString()>();
$d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);
$b3 = $d3 cmpl 1.0E-323;
if $b3 == 0 goto (branch);
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto return;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
z0 = 1;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[0];
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"1.5*MIN_VALUE doesn\'t convert to 2*MIN_VALUE%n\", $r17);
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto return;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto return;
"->"Block 16:
[preds: 15 ] [succs: ]
$r16 = new java.lang.RuntimeException;
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Inconsistent conversion\");
throw $r16;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto return;
"->"Block 17:
[preds: 15 ] [succs: ]
return;
";
}
