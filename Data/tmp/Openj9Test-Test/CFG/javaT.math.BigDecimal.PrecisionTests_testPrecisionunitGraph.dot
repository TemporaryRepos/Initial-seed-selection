digraph "unitGraph" {
    "r0 := @parameter0: java.math.BigDecimal"
    "i1 := @parameter1: int"
    "i0 = virtualinvoke r0.<java.math.BigDecimal: int precision()>()"
    "if i0 == i1 goto return 0"
    "$r2 = <java.lang.System: java.io.PrintStream err>"
    "$r1 = newarray (java.lang.Object)[3]"
    "$r1[0] = r0"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r1[1] = $r3"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$r1[2] = $r4"
    "virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"For (%s).precision expected %d, got %d%n\", $r1)"
    "return 1"
    "return 0"
    "r0 := @parameter0: java.math.BigDecimal"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 = virtualinvoke r0.<java.math.BigDecimal: int precision()>()";
    "i0 = virtualinvoke r0.<java.math.BigDecimal: int precision()>()"->"if i0 == i1 goto return 0";
    "if i0 == i1 goto return 0"->"$r2 = <java.lang.System: java.io.PrintStream err>";
    "if i0 == i1 goto return 0"->"return 0";
    "$r2 = <java.lang.System: java.io.PrintStream err>"->"$r1 = newarray (java.lang.Object)[3]";
    "$r1 = newarray (java.lang.Object)[3]"->"$r1[0] = r0";
    "$r1[0] = r0"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r1[1] = $r3";
    "$r1[1] = $r3"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r1[2] = $r4";
    "$r1[2] = $r4"->"virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"For (%s).precision expected %d, got %d%n\", $r1)";
    "virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"For (%s).precision expected %d, got %d%n\", $r1)"->"return 1";
}
