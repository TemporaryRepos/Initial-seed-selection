digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.File;
$r0 = new java.io.FileOutputStream;
specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);
r2 = $r0;
$r3 = new java.io.BufferedWriter;
$r4 = new java.io.OutputStreamWriter;
specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, \"8859_1\");
specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);
r5 = $r3;
i2 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r6 = new java.lang.Integer;
specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);
r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>();
i3 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i0 = virtualinvoke r7.<java.lang.String: int length()>();
$i1 = 4 - $i0;
if i3 >= $i1 goto $r8 = new java.lang.StringBuilder;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\");
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11);
virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
virtualinvoke r5.<java.io.BufferedWriter: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.File;
$r0 = new java.io.FileOutputStream;
specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);
r2 = $r0;
$r3 = new java.io.BufferedWriter;
$r4 = new java.io.OutputStreamWriter;
specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, \"8859_1\");
specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);
r5 = $r3;
i2 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r6 = new java.lang.Integer;
specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);
r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>();
i3 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
"->"Block 6:
[preds: 1 ] [succs: ]
virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
virtualinvoke r5.<java.io.BufferedWriter: void close()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r6 = new java.lang.Integer;
specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);
r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>();
i3 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i0 = virtualinvoke r7.<java.lang.String: int length()>();
$i1 = 4 - $i0;
if i3 >= $i1 goto $r8 = new java.lang.StringBuilder;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i0 = virtualinvoke r7.<java.lang.String: int length()>();
$i1 = 4 - $i0;
if i3 >= $i1 goto $r8 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\");
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i0 = virtualinvoke r7.<java.lang.String: int length()>();
$i1 = 4 - $i0;
if i3 >= $i1 goto $r8 = new java.lang.StringBuilder;
"->"Block 5:
[preds: 3 ] [succs: 1 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11);
virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\");
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i0 = virtualinvoke r7.<java.lang.String: int length()>();
$i1 = 4 - $i0;
if i3 >= $i1 goto $r8 = new java.lang.StringBuilder;
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11);
virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>();
";
}
