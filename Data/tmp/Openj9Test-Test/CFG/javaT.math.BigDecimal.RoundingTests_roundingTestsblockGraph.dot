digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 12 ]
i1 = 0;
r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(11L, -2147483648);
$r1 = new java.math.MathContext;
specialinvoke $r1.<java.math.MathContext: void <init>(int)>(1);
r2 = $r1;
"
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
r7 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>(r2);
"
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
i1 = 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
"
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r3 = newarray (java.lang.Object)[3];
"
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$r3[0] = r0;
"
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i0 = virtualinvoke r2.<java.math.MathContext: int getPrecision()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
"
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
$r3[1] = $r5;
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r3[2] = r7;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Did not get expected overflow rounding %s to %d digits, got %s%n\", $r3);
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return i1];
"
    "Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
"
    "Block 13:
[preds: 11 12 ] [succs: ]
return i1;
"
    "Block 0:
[preds: ] [succs: 1 12 ]
i1 = 0;
r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(11L, -2147483648);
$r1 = new java.math.MathContext;
specialinvoke $r1.<java.math.MathContext: void <init>(int)>(1);
r2 = $r1;
"->"Block 1:
[preds: 0 ] [succs: 2 12 ]
r7 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>(r2);
";
    "Block 0:
[preds: ] [succs: 1 12 ]
i1 = 0;
r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(11L, -2147483648);
$r1 = new java.math.MathContext;
specialinvoke $r1.<java.math.MathContext: void <init>(int)>(1);
r2 = $r1;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
r7 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>(r2);
"->"Block 2:
[preds: 1 ] [succs: 3 12 ]
i1 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
r7 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>(r2);
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
i1 = 1;
"->"Block 3:
[preds: 2 ] [succs: 4 12 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
i1 = 1;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
"->"Block 4:
[preds: 3 ] [succs: 5 12 ]
$r3 = newarray (java.lang.Object)[3];
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r3 = newarray (java.lang.Object)[3];
"->"Block 5:
[preds: 4 ] [succs: 6 12 ]
$r3[0] = r0;
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r3 = newarray (java.lang.Object)[3];
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$r3[0] = r0;
"->"Block 6:
[preds: 5 ] [succs: 7 12 ]
$i0 = virtualinvoke r2.<java.math.MathContext: int getPrecision()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$r3[0] = r0;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i0 = virtualinvoke r2.<java.math.MathContext: int getPrecision()>();
"->"Block 7:
[preds: 6 ] [succs: 8 12 ]
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$i0 = virtualinvoke r2.<java.math.MathContext: int getPrecision()>();
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
"->"Block 8:
[preds: 7 ] [succs: 9 12 ]
$r3[1] = $r5;
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
$r3[1] = $r5;
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r3[2] = r7;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
$r3[1] = $r5;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r3[2] = r7;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Did not get expected overflow rounding %s to %d digits, got %s%n\", $r3);
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r3[2] = r7;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Did not get expected overflow rounding %s to %d digits, got %s%n\", $r3);
"->"Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return i1];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Did not get expected overflow rounding %s to %d digits, got %s%n\", $r3);
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return i1];
"->"Block 13:
[preds: 11 12 ] [succs: ]
return i1;
";
    "Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r6 := @caughtexception;
"->"Block 13:
[preds: 11 12 ] [succs: ]
return i1;
";
}
