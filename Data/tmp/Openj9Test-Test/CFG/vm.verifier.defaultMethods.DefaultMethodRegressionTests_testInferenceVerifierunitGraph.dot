digraph "unitGraph" {
    "r5 := @this: vm.verifier.defaultMethods.DefaultMethodRegressionTests"
    "$r0 = newarray (byte)[101]"
    "$r0[0] = -54"
    "$r0[1] = -2"
    "$r0[2] = -70"
    "$r0[3] = -66"
    "$r0[4] = 0"
    "$r0[5] = 0"
    "$r0[6] = 0"
    "$r0[7] = 52"
    "$r0[8] = 0"
    "$r0[9] = 8"
    "$r0[10] = 7"
    "$r0[11] = 0"
    "$r0[12] = 6"
    "$r0[13] = 7"
    "$r0[14] = 0"
    "$r0[15] = 7"
    "$r0[16] = 1"
    "$r0[17] = 0"
    "$r0[18] = 3"
    "$r0[19] = 102"
    "$r0[20] = 111"
    "$r0[21] = 111"
    "$r0[22] = 1"
    "$r0[23] = 0"
    "$r0[24] = 3"
    "$r0[25] = 40"
    "$r0[26] = 41"
    "$r0[27] = 73"
    "$r0[28] = 1"
    "$r0[29] = 0"
    "$r0[30] = 4"
    "$r0[31] = 67"
    "$r0[32] = 111"
    "$r0[33] = 100"
    "$r0[34] = 101"
    "$r0[35] = 1"
    "$r0[36] = 0"
    "$r0[37] = 1"
    "$r0[38] = 73"
    "$r0[39] = 1"
    "$r0[40] = 0"
    "$r0[41] = 16"
    "$r0[42] = 106"
    "$r0[43] = 97"
    "$r0[44] = 118"
    "$r0[45] = 97"
    "$r0[46] = 47"
    "$r0[47] = 108"
    "$r0[48] = 97"
    "$r0[49] = 110"
    "$r0[50] = 103"
    "$r0[51] = 47"
    "$r0[52] = 79"
    "$r0[53] = 98"
    "$r0[54] = 106"
    "$r0[55] = 101"
    "$r0[56] = 99"
    "$r0[57] = 116"
    "$r0[58] = 6"
    "$r0[59] = 0"
    "$r0[60] = 0"
    "$r0[61] = 1"
    "$r0[62] = 0"
    "$r0[63] = 2"
    "$r0[64] = 0"
    "$r0[65] = 0"
    "$r0[66] = 0"
    "$r0[67] = 0"
    "$r0[68] = 0"
    "$r0[69] = 1"
    "$r0[70] = 2"
    "$r0[71] = 1"
    "$r0[72] = 0"
    "$r0[73] = 3"
    "$r0[74] = 0"
    "$r0[75] = 4"
    "$r0[76] = 0"
    "$r0[77] = 1"
    "$r0[78] = 0"
    "$r0[79] = 5"
    "$r0[80] = 0"
    "$r0[81] = 0"
    "$r0[82] = 0"
    "$r0[83] = 15"
    "$r0[84] = 0"
    "$r0[85] = 1"
    "$r0[86] = 0"
    "$r0[87] = 1"
    "$r0[88] = 0"
    "$r0[89] = 0"
    "$r0[90] = 0"
    "$r0[91] = 3"
    "$r0[92] = 16"
    "$r0[93] = 99"
    "$r0[94] = -84"
    "$r0[95] = 0"
    "$r0[96] = 0"
    "$r0[97] = 0"
    "$r0[98] = 0"
    "$r0[99] = 0"
    "$r0[100] = 0"
    "r1 = $r0"
    "$r2 = newarray (byte)[125]"
    "$r2[0] = -54"
    "$r2[1] = -2"
    "$r2[2] = -70"
    "$r2[3] = -66"
    "$r2[4] = 0"
    "$r2[5] = 0"
    "$r2[6] = 0"
    "$r2[7] = 49"
    "$r2[8] = 0"
    "$r2[9] = 12"
    "$r2[10] = 10"
    "$r2[11] = 0"
    "$r2[12] = 3"
    "$r2[13] = 0"
    "$r2[14] = 8"
    "$r2[15] = 7"
    "$r2[16] = 0"
    "$r2[17] = 9"
    "$r2[18] = 7"
    "$r2[19] = 0"
    "$r2[20] = 10"
    "$r2[21] = 7"
    "$r2[22] = 0"
    "$r2[23] = 11"
    "$r2[24] = 1"
    "$r2[25] = 0"
    "$r2[26] = 6"
    "$r2[27] = 60"
    "$r2[28] = 105"
    "$r2[29] = 110"
    "$r2[30] = 105"
    "$r2[31] = 116"
    "$r2[32] = 62"
    "$r2[33] = 1"
    "$r2[34] = 0"
    "$r2[35] = 3"
    "$r2[36] = 40"
    "$r2[37] = 41"
    "$r2[38] = 86"
    "$r2[39] = 1"
    "$r2[40] = 0"
    "$r2[41] = 4"
    "$r2[42] = 67"
    "$r2[43] = 111"
    "$r2[44] = 100"
    "$r2[45] = 101"
    "$r2[46] = 12"
    "$r2[47] = 0"
    "$r2[48] = 5"
    "$r2[49] = 0"
    "$r2[50] = 6"
    "$r2[51] = 1"
    "$r2[52] = 0"
    "$r2[53] = 1"
    "$r2[54] = 67"
    "$r2[55] = 1"
    "$r2[56] = 0"
    "$r2[57] = 16"
    "$r2[58] = 106"
    "$r2[59] = 97"
    "$r2[60] = 118"
    "$r2[61] = 97"
    "$r2[62] = 47"
    "$r2[63] = 108"
    "$r2[64] = 97"
    "$r2[65] = 110"
    "$r2[66] = 103"
    "$r2[67] = 47"
    "$r2[68] = 79"
    "$r2[69] = 98"
    "$r2[70] = 106"
    "$r2[71] = 101"
    "$r2[72] = 99"
    "$r2[73] = 116"
    "$r2[74] = 1"
    "$r2[75] = 0"
    "$r2[76] = 1"
    "$r2[77] = 73"
    "$r2[78] = 0"
    "$r2[79] = 33"
    "$r2[80] = 0"
    "$r2[81] = 2"
    "$r2[82] = 0"
    "$r2[83] = 3"
    "$r2[84] = 0"
    "$r2[85] = 1"
    "$r2[86] = 0"
    "$r2[87] = 4"
    "$r2[88] = 0"
    "$r2[89] = 0"
    "$r2[90] = 0"
    "$r2[91] = 1"
    "$r2[92] = 0"
    "$r2[93] = 1"
    "$r2[94] = 0"
    "$r2[95] = 5"
    "$r2[96] = 0"
    "$r2[97] = 6"
    "$r2[98] = 0"
    "$r2[99] = 1"
    "$r2[100] = 0"
    "$r2[101] = 7"
    "$r2[102] = 0"
    "$r2[103] = 0"
    "$r2[104] = 0"
    "$r2[105] = 17"
    "$r2[106] = 0"
    "$r2[107] = 1"
    "$r2[108] = 0"
    "$r2[109] = 1"
    "$r2[110] = 0"
    "$r2[111] = 0"
    "$r2[112] = 0"
    "$r2[113] = 5"
    "$r2[114] = 42"
    "$r2[115] = -73"
    "$r2[116] = 0"
    "$r2[117] = 1"
    "$r2[118] = -79"
    "$r2[119] = 0"
    "$r2[120] = 0"
    "$r2[121] = 0"
    "$r2[122] = 0"
    "$r2[123] = 0"
    "$r2[124] = 0"
    "r3 = $r2"
    "$r4 = new vm.verifier.defaultMethods.DefaultMethodRegressionTests$1"
    "specialinvoke $r4.<vm.verifier.defaultMethods.DefaultMethodRegressionTests$1: void <init>(vm.verifier.defaultMethods.DefaultMethodRegressionTests,byte[],byte[])>(r5, r1, r3)"
    "r6 = $r4"
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(\"C\", 1, r6)"
    "goto [?= return]"
    "$r8 := @caughtexception"
    "r9 = $r8"
    "$r10 = new java.lang.RuntimeException"
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9)"
    "throw $r10"
    "return"
    "r5 := @this: vm.verifier.defaultMethods.DefaultMethodRegressionTests"->"$r0 = newarray (byte)[101]";
    "$r0 = newarray (byte)[101]"->"$r0[0] = -54";
    "$r0[0] = -54"->"$r0[1] = -2";
    "$r0[1] = -2"->"$r0[2] = -70";
    "$r0[2] = -70"->"$r0[3] = -66";
    "$r0[3] = -66"->"$r0[4] = 0";
    "$r0[4] = 0"->"$r0[5] = 0";
    "$r0[5] = 0"->"$r0[6] = 0";
    "$r0[6] = 0"->"$r0[7] = 52";
    "$r0[7] = 52"->"$r0[8] = 0";
    "$r0[8] = 0"->"$r0[9] = 8";
    "$r0[9] = 8"->"$r0[10] = 7";
    "$r0[10] = 7"->"$r0[11] = 0";
    "$r0[11] = 0"->"$r0[12] = 6";
    "$r0[12] = 6"->"$r0[13] = 7";
    "$r0[13] = 7"->"$r0[14] = 0";
    "$r0[14] = 0"->"$r0[15] = 7";
    "$r0[15] = 7"->"$r0[16] = 1";
    "$r0[16] = 1"->"$r0[17] = 0";
    "$r0[17] = 0"->"$r0[18] = 3";
    "$r0[18] = 3"->"$r0[19] = 102";
    "$r0[19] = 102"->"$r0[20] = 111";
    "$r0[20] = 111"->"$r0[21] = 111";
    "$r0[21] = 111"->"$r0[22] = 1";
    "$r0[22] = 1"->"$r0[23] = 0";
    "$r0[23] = 0"->"$r0[24] = 3";
    "$r0[24] = 3"->"$r0[25] = 40";
    "$r0[25] = 40"->"$r0[26] = 41";
    "$r0[26] = 41"->"$r0[27] = 73";
    "$r0[27] = 73"->"$r0[28] = 1";
    "$r0[28] = 1"->"$r0[29] = 0";
    "$r0[29] = 0"->"$r0[30] = 4";
    "$r0[30] = 4"->"$r0[31] = 67";
    "$r0[31] = 67"->"$r0[32] = 111";
    "$r0[32] = 111"->"$r0[33] = 100";
    "$r0[33] = 100"->"$r0[34] = 101";
    "$r0[34] = 101"->"$r0[35] = 1";
    "$r0[35] = 1"->"$r0[36] = 0";
    "$r0[36] = 0"->"$r0[37] = 1";
    "$r0[37] = 1"->"$r0[38] = 73";
    "$r0[38] = 73"->"$r0[39] = 1";
    "$r0[39] = 1"->"$r0[40] = 0";
    "$r0[40] = 0"->"$r0[41] = 16";
    "$r0[41] = 16"->"$r0[42] = 106";
    "$r0[42] = 106"->"$r0[43] = 97";
    "$r0[43] = 97"->"$r0[44] = 118";
    "$r0[44] = 118"->"$r0[45] = 97";
    "$r0[45] = 97"->"$r0[46] = 47";
    "$r0[46] = 47"->"$r0[47] = 108";
    "$r0[47] = 108"->"$r0[48] = 97";
    "$r0[48] = 97"->"$r0[49] = 110";
    "$r0[49] = 110"->"$r0[50] = 103";
    "$r0[50] = 103"->"$r0[51] = 47";
    "$r0[51] = 47"->"$r0[52] = 79";
    "$r0[52] = 79"->"$r0[53] = 98";
    "$r0[53] = 98"->"$r0[54] = 106";
    "$r0[54] = 106"->"$r0[55] = 101";
    "$r0[55] = 101"->"$r0[56] = 99";
    "$r0[56] = 99"->"$r0[57] = 116";
    "$r0[57] = 116"->"$r0[58] = 6";
    "$r0[58] = 6"->"$r0[59] = 0";
    "$r0[59] = 0"->"$r0[60] = 0";
    "$r0[60] = 0"->"$r0[61] = 1";
    "$r0[61] = 1"->"$r0[62] = 0";
    "$r0[62] = 0"->"$r0[63] = 2";
    "$r0[63] = 2"->"$r0[64] = 0";
    "$r0[64] = 0"->"$r0[65] = 0";
    "$r0[65] = 0"->"$r0[66] = 0";
    "$r0[66] = 0"->"$r0[67] = 0";
    "$r0[67] = 0"->"$r0[68] = 0";
    "$r0[68] = 0"->"$r0[69] = 1";
    "$r0[69] = 1"->"$r0[70] = 2";
    "$r0[70] = 2"->"$r0[71] = 1";
    "$r0[71] = 1"->"$r0[72] = 0";
    "$r0[72] = 0"->"$r0[73] = 3";
    "$r0[73] = 3"->"$r0[74] = 0";
    "$r0[74] = 0"->"$r0[75] = 4";
    "$r0[75] = 4"->"$r0[76] = 0";
    "$r0[76] = 0"->"$r0[77] = 1";
    "$r0[77] = 1"->"$r0[78] = 0";
    "$r0[78] = 0"->"$r0[79] = 5";
    "$r0[79] = 5"->"$r0[80] = 0";
    "$r0[80] = 0"->"$r0[81] = 0";
    "$r0[81] = 0"->"$r0[82] = 0";
    "$r0[82] = 0"->"$r0[83] = 15";
    "$r0[83] = 15"->"$r0[84] = 0";
    "$r0[84] = 0"->"$r0[85] = 1";
    "$r0[85] = 1"->"$r0[86] = 0";
    "$r0[86] = 0"->"$r0[87] = 1";
    "$r0[87] = 1"->"$r0[88] = 0";
    "$r0[88] = 0"->"$r0[89] = 0";
    "$r0[89] = 0"->"$r0[90] = 0";
    "$r0[90] = 0"->"$r0[91] = 3";
    "$r0[91] = 3"->"$r0[92] = 16";
    "$r0[92] = 16"->"$r0[93] = 99";
    "$r0[93] = 99"->"$r0[94] = -84";
    "$r0[94] = -84"->"$r0[95] = 0";
    "$r0[95] = 0"->"$r0[96] = 0";
    "$r0[96] = 0"->"$r0[97] = 0";
    "$r0[97] = 0"->"$r0[98] = 0";
    "$r0[98] = 0"->"$r0[99] = 0";
    "$r0[99] = 0"->"$r0[100] = 0";
    "$r0[100] = 0"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (byte)[125]";
    "$r2 = newarray (byte)[125]"->"$r2[0] = -54";
    "$r2[0] = -54"->"$r2[1] = -2";
    "$r2[1] = -2"->"$r2[2] = -70";
    "$r2[2] = -70"->"$r2[3] = -66";
    "$r2[3] = -66"->"$r2[4] = 0";
    "$r2[4] = 0"->"$r2[5] = 0";
    "$r2[5] = 0"->"$r2[6] = 0";
    "$r2[6] = 0"->"$r2[7] = 49";
    "$r2[7] = 49"->"$r2[8] = 0";
    "$r2[8] = 0"->"$r2[9] = 12";
    "$r2[9] = 12"->"$r2[10] = 10";
    "$r2[10] = 10"->"$r2[11] = 0";
    "$r2[11] = 0"->"$r2[12] = 3";
    "$r2[12] = 3"->"$r2[13] = 0";
    "$r2[13] = 0"->"$r2[14] = 8";
    "$r2[14] = 8"->"$r2[15] = 7";
    "$r2[15] = 7"->"$r2[16] = 0";
    "$r2[16] = 0"->"$r2[17] = 9";
    "$r2[17] = 9"->"$r2[18] = 7";
    "$r2[18] = 7"->"$r2[19] = 0";
    "$r2[19] = 0"->"$r2[20] = 10";
    "$r2[20] = 10"->"$r2[21] = 7";
    "$r2[21] = 7"->"$r2[22] = 0";
    "$r2[22] = 0"->"$r2[23] = 11";
    "$r2[23] = 11"->"$r2[24] = 1";
    "$r2[24] = 1"->"$r2[25] = 0";
    "$r2[25] = 0"->"$r2[26] = 6";
    "$r2[26] = 6"->"$r2[27] = 60";
    "$r2[27] = 60"->"$r2[28] = 105";
    "$r2[28] = 105"->"$r2[29] = 110";
    "$r2[29] = 110"->"$r2[30] = 105";
    "$r2[30] = 105"->"$r2[31] = 116";
    "$r2[31] = 116"->"$r2[32] = 62";
    "$r2[32] = 62"->"$r2[33] = 1";
    "$r2[33] = 1"->"$r2[34] = 0";
    "$r2[34] = 0"->"$r2[35] = 3";
    "$r2[35] = 3"->"$r2[36] = 40";
    "$r2[36] = 40"->"$r2[37] = 41";
    "$r2[37] = 41"->"$r2[38] = 86";
    "$r2[38] = 86"->"$r2[39] = 1";
    "$r2[39] = 1"->"$r2[40] = 0";
    "$r2[40] = 0"->"$r2[41] = 4";
    "$r2[41] = 4"->"$r2[42] = 67";
    "$r2[42] = 67"->"$r2[43] = 111";
    "$r2[43] = 111"->"$r2[44] = 100";
    "$r2[44] = 100"->"$r2[45] = 101";
    "$r2[45] = 101"->"$r2[46] = 12";
    "$r2[46] = 12"->"$r2[47] = 0";
    "$r2[47] = 0"->"$r2[48] = 5";
    "$r2[48] = 5"->"$r2[49] = 0";
    "$r2[49] = 0"->"$r2[50] = 6";
    "$r2[50] = 6"->"$r2[51] = 1";
    "$r2[51] = 1"->"$r2[52] = 0";
    "$r2[52] = 0"->"$r2[53] = 1";
    "$r2[53] = 1"->"$r2[54] = 67";
    "$r2[54] = 67"->"$r2[55] = 1";
    "$r2[55] = 1"->"$r2[56] = 0";
    "$r2[56] = 0"->"$r2[57] = 16";
    "$r2[57] = 16"->"$r2[58] = 106";
    "$r2[58] = 106"->"$r2[59] = 97";
    "$r2[59] = 97"->"$r2[60] = 118";
    "$r2[60] = 118"->"$r2[61] = 97";
    "$r2[61] = 97"->"$r2[62] = 47";
    "$r2[62] = 47"->"$r2[63] = 108";
    "$r2[63] = 108"->"$r2[64] = 97";
    "$r2[64] = 97"->"$r2[65] = 110";
    "$r2[65] = 110"->"$r2[66] = 103";
    "$r2[66] = 103"->"$r2[67] = 47";
    "$r2[67] = 47"->"$r2[68] = 79";
    "$r2[68] = 79"->"$r2[69] = 98";
    "$r2[69] = 98"->"$r2[70] = 106";
    "$r2[70] = 106"->"$r2[71] = 101";
    "$r2[71] = 101"->"$r2[72] = 99";
    "$r2[72] = 99"->"$r2[73] = 116";
    "$r2[73] = 116"->"$r2[74] = 1";
    "$r2[74] = 1"->"$r2[75] = 0";
    "$r2[75] = 0"->"$r2[76] = 1";
    "$r2[76] = 1"->"$r2[77] = 73";
    "$r2[77] = 73"->"$r2[78] = 0";
    "$r2[78] = 0"->"$r2[79] = 33";
    "$r2[79] = 33"->"$r2[80] = 0";
    "$r2[80] = 0"->"$r2[81] = 2";
    "$r2[81] = 2"->"$r2[82] = 0";
    "$r2[82] = 0"->"$r2[83] = 3";
    "$r2[83] = 3"->"$r2[84] = 0";
    "$r2[84] = 0"->"$r2[85] = 1";
    "$r2[85] = 1"->"$r2[86] = 0";
    "$r2[86] = 0"->"$r2[87] = 4";
    "$r2[87] = 4"->"$r2[88] = 0";
    "$r2[88] = 0"->"$r2[89] = 0";
    "$r2[89] = 0"->"$r2[90] = 0";
    "$r2[90] = 0"->"$r2[91] = 1";
    "$r2[91] = 1"->"$r2[92] = 0";
    "$r2[92] = 0"->"$r2[93] = 1";
    "$r2[93] = 1"->"$r2[94] = 0";
    "$r2[94] = 0"->"$r2[95] = 5";
    "$r2[95] = 5"->"$r2[96] = 0";
    "$r2[96] = 0"->"$r2[97] = 6";
    "$r2[97] = 6"->"$r2[98] = 0";
    "$r2[98] = 0"->"$r2[99] = 1";
    "$r2[99] = 1"->"$r2[100] = 0";
    "$r2[100] = 0"->"$r2[101] = 7";
    "$r2[101] = 7"->"$r2[102] = 0";
    "$r2[102] = 0"->"$r2[103] = 0";
    "$r2[103] = 0"->"$r2[104] = 0";
    "$r2[104] = 0"->"$r2[105] = 17";
    "$r2[105] = 17"->"$r2[106] = 0";
    "$r2[106] = 0"->"$r2[107] = 1";
    "$r2[107] = 1"->"$r2[108] = 0";
    "$r2[108] = 0"->"$r2[109] = 1";
    "$r2[109] = 1"->"$r2[110] = 0";
    "$r2[110] = 0"->"$r2[111] = 0";
    "$r2[111] = 0"->"$r2[112] = 0";
    "$r2[112] = 0"->"$r2[113] = 5";
    "$r2[113] = 5"->"$r2[114] = 42";
    "$r2[114] = 42"->"$r2[115] = -73";
    "$r2[115] = -73"->"$r2[116] = 0";
    "$r2[116] = 0"->"$r2[117] = 1";
    "$r2[117] = 1"->"$r2[118] = -79";
    "$r2[118] = -79"->"$r2[119] = 0";
    "$r2[119] = 0"->"$r2[120] = 0";
    "$r2[120] = 0"->"$r2[121] = 0";
    "$r2[121] = 0"->"$r2[122] = 0";
    "$r2[122] = 0"->"$r2[123] = 0";
    "$r2[123] = 0"->"$r2[124] = 0";
    "$r2[124] = 0"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new vm.verifier.defaultMethods.DefaultMethodRegressionTests$1";
    "$r4 = new vm.verifier.defaultMethods.DefaultMethodRegressionTests$1"->"specialinvoke $r4.<vm.verifier.defaultMethods.DefaultMethodRegressionTests$1: void <init>(vm.verifier.defaultMethods.DefaultMethodRegressionTests,byte[],byte[])>(r5, r1, r3)";
    "specialinvoke $r4.<vm.verifier.defaultMethods.DefaultMethodRegressionTests$1: void <init>(vm.verifier.defaultMethods.DefaultMethodRegressionTests,byte[],byte[])>(r5, r1, r3)"->"r6 = $r4";
    "r6 = $r4"->"staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(\"C\", 1, r6)";
    "r6 = $r4"->"$r8 := @caughtexception";
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(\"C\", 1, r6)"->"goto [?= return]";
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(\"C\", 1, r6)"->"$r8 := @caughtexception";
    "goto [?= return]"->"return";
    "$r8 := @caughtexception"->"r9 = $r8";
    "r9 = $r8"->"$r10 = new java.lang.RuntimeException";
    "$r10 = new java.lang.RuntimeException"->"specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9)";
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9)"->"throw $r10";
}
