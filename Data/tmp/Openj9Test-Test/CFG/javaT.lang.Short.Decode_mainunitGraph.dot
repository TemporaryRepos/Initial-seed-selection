digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = new java.lang.String"
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-32768\")"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r0, -32768)"
    "$r1 = new java.lang.String"
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"32767\")"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r1, 32767)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"10\", 10)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0x10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0X10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"010\", 8)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"#10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+10\", 10)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0x10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0X10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+010\", 8)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+#10\", 16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-10\", -10)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0x10\", -16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0X10\", -16)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-010\", -8)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-#10\", -16)"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32768)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r2, -32768)"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32767)"
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r3, 32767)"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Short.decode allows negative sign in wrong position.\")"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Short.decode allows positive sign in wrong position.\")"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32769)"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32768)"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")"
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = new java.lang.String";
    "$r0 = new java.lang.String"->"specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-32768\")";
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-32768\")"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r0, -32768)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r0, -32768)"->"$r1 = new java.lang.String";
    "$r1 = new java.lang.String"->"specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"32767\")";
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"32767\")"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r1, 32767)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r1, 32767)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"10\", 10)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"10\", 10)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0x10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0x10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0X10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"0X10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"010\", 8)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"010\", 8)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"#10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"#10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+10\", 10)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+10\", 10)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0x10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0x10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0X10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+0X10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+010\", 8)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+010\", 8)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+#10\", 16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"+#10\", 16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-10\", -10)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-10\", -10)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0x10\", -16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0x10\", -16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0X10\", -16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-0X10\", -16)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-010\", -8)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-010\", -8)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-#10\", -16)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>(\"-#10\", -16)"->"$r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32768)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32768)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r2, -32768)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r2, -32768)"->"$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32767)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32767)"->"staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r3, 32767)";
    "staticinvoke <javaT.lang.Short.Decode: void check(java.lang.String,short)>($r3, 32767)"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Short.decode allows negative sign in wrong position.\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Short.decode allows negative sign in wrong position.\")"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Short.decode allows positive sign in wrong position.\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Short.decode allows positive sign in wrong position.\")"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")"->"$r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32769)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-32769)"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")"->"$r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32768)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(32768)"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")"->"staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")";
    "staticinvoke <javaT.lang.Short.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")"->"return";
}
