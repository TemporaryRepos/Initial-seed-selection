digraph "unitGraph" {
    "r20 := @parameter0: java.lang.String[]"
    "$r0 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"
    "r21 = $r0"
    "$r1 = new javaT.rmi.testlibrary.JavaVM"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "specialinvoke $r1.<javaT.rmi.testlibrary.JavaVM: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream,java.io.OutputStream)>(\"sun.rmi.registry.RegistryImpl\", \"\", \"foo\", $r2, r21)"
    "r3 = $r1"
    "$r4 = <java.lang.System: java.io.PrintStream err>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"starting registry\")"
    "$r6 = <java.lang.System: java.io.PrintStream err>"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" registry exited with status: \")"
    "$i0 = virtualinvoke r3.<javaT.rmi.testlibrary.JavaVM: int execute()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "$r10 = new java.lang.String"
    "$r11 = virtualinvoke r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r11)"
    "r12 = $r10"
    "$r14 = <java.lang.System: java.io.PrintStream err>"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"rmiregistry usage: \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "$i1 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(\"-J\")"
    "if $i1 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream err>"
    "staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.String)>(\"rmiregistry has incorrect usage statement\")"
    "goto [?= (branch)]"
    "$r18 = <java.lang.System: java.io.PrintStream err>"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"test passed\")"
    "goto [?= return]"
    "$r19 := @caughtexception"
    "r22 = $r19"
    "staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.Exception)>(r22)"
    "return"
    "r20 := @parameter0: java.lang.String[]"->"$r0 = new java.io.ByteArrayOutputStream";
    "r20 := @parameter0: java.lang.String[]"->"$r19 := @caughtexception";
    "$r0 = new java.io.ByteArrayOutputStream"->"specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()";
    "$r0 = new java.io.ByteArrayOutputStream"->"$r19 := @caughtexception";
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"->"r21 = $r0";
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"->"$r19 := @caughtexception";
    "r21 = $r0"->"$r1 = new javaT.rmi.testlibrary.JavaVM";
    "r21 = $r0"->"$r19 := @caughtexception";
    "$r1 = new javaT.rmi.testlibrary.JavaVM"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = new javaT.rmi.testlibrary.JavaVM"->"$r19 := @caughtexception";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"specialinvoke $r1.<javaT.rmi.testlibrary.JavaVM: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream,java.io.OutputStream)>(\"sun.rmi.registry.RegistryImpl\", \"\", \"foo\", $r2, r21)";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r19 := @caughtexception";
    "specialinvoke $r1.<javaT.rmi.testlibrary.JavaVM: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream,java.io.OutputStream)>(\"sun.rmi.registry.RegistryImpl\", \"\", \"foo\", $r2, r21)"->"r3 = $r1";
    "specialinvoke $r1.<javaT.rmi.testlibrary.JavaVM: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream,java.io.OutputStream)>(\"sun.rmi.registry.RegistryImpl\", \"\", \"foo\", $r2, r21)"->"$r19 := @caughtexception";
    "r3 = $r1"->"$r4 = <java.lang.System: java.io.PrintStream err>";
    "r3 = $r1"->"$r19 := @caughtexception";
    "$r4 = <java.lang.System: java.io.PrintStream err>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"starting registry\")";
    "$r4 = <java.lang.System: java.io.PrintStream err>"->"$r19 := @caughtexception";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"starting registry\")"->"$r6 = <java.lang.System: java.io.PrintStream err>";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"starting registry\")"->"$r19 := @caughtexception";
    "$r6 = <java.lang.System: java.io.PrintStream err>"->"$r5 = new java.lang.StringBuilder";
    "$r6 = <java.lang.System: java.io.PrintStream err>"->"$r19 := @caughtexception";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "$r5 = new java.lang.StringBuilder"->"$r19 := @caughtexception";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" registry exited with status: \")";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r19 := @caughtexception";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" registry exited with status: \")"->"$i0 = virtualinvoke r3.<javaT.rmi.testlibrary.JavaVM: int execute()>()";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" registry exited with status: \")"->"$r19 := @caughtexception";
    "$i0 = virtualinvoke r3.<javaT.rmi.testlibrary.JavaVM: int execute()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)";
    "$i0 = virtualinvoke r3.<javaT.rmi.testlibrary.JavaVM: int execute()>()"->"$r19 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"$r19 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r19 := @caughtexception";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"$r10 = new java.lang.String";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"$r19 := @caughtexception";
    "$r10 = new java.lang.String"->"$r11 = virtualinvoke r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "$r10 = new java.lang.String"->"$r19 := @caughtexception";
    "$r11 = virtualinvoke r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r11)";
    "$r11 = virtualinvoke r21.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$r19 := @caughtexception";
    "specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r11)"->"r12 = $r10";
    "specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r11)"->"$r19 := @caughtexception";
    "r12 = $r10"->"$r14 = <java.lang.System: java.io.PrintStream err>";
    "r12 = $r10"->"$r19 := @caughtexception";
    "$r14 = <java.lang.System: java.io.PrintStream err>"->"$r13 = new java.lang.StringBuilder";
    "$r14 = <java.lang.System: java.io.PrintStream err>"->"$r19 := @caughtexception";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "$r13 = new java.lang.StringBuilder"->"$r19 := @caughtexception";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"rmiregistry usage: \")";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r19 := @caughtexception";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"rmiregistry usage: \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"rmiregistry usage: \")"->"$r19 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r19 := @caughtexception";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r19 := @caughtexception";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"$i1 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(\"-J\")";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"$r19 := @caughtexception";
    "$i1 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(\"-J\")"->"if $i1 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream err>";
    "$i1 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(\"-J\")"->"$r19 := @caughtexception";
    "if $i1 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream err>"->"staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.String)>(\"rmiregistry has incorrect usage statement\")";
    "if $i1 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream err>"->"$r18 = <java.lang.System: java.io.PrintStream err>";
    "if $i1 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream err>"->"$r19 := @caughtexception";
    "staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.String)>(\"rmiregistry has incorrect usage statement\")"->"goto [?= (branch)]";
    "staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.String)>(\"rmiregistry has incorrect usage statement\")"->"$r19 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r19 := @caughtexception";
    "$r18 = <java.lang.System: java.io.PrintStream err>"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"test passed\")";
    "$r18 = <java.lang.System: java.io.PrintStream err>"->"$r19 := @caughtexception";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"test passed\")"->"goto [?= return]";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"test passed\")"->"$r19 := @caughtexception";
    "goto [?= return]"->"return";
    "$r19 := @caughtexception"->"r22 = $r19";
    "r22 = $r19"->"staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.Exception)>(r22)";
    "staticinvoke <javaT.rmi.testlibrary.TestLibrary: void bomb(java.lang.Exception)>(r22)"->"return";
}
