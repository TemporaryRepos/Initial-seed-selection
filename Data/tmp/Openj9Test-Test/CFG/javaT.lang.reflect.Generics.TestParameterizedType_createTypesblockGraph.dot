digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(3);
r1 = $r0;
$r2 = newarray (java.lang.String)[10];
$r2[0] = \"genericMethod0\";
$r2[1] = \"genericMethod1\";
$r2[2] = \"genericMethod2\";
$r2[3] = \"genericMethod3\";
$r2[4] = \"genericMethod4\";
$r2[5] = \"genericMethod5\";
$r2[6] = \"genericMethod6\";
$r2[7] = \"genericMethod7\";
$r2[8] = \"genericMethod8\";
$r2[9] = \"genericMethod9\";
r3 = $r2;
r4 = r3;
i0 = lengthof r4;
i1 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r5 = r4[i1];
$r7 = class \"LjavaT/lang/reflect/Generics/TestParameterizedType;\";
$r6 = newarray (java.lang.Class)[0];
$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r5, $r6);
r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(3);
r1 = $r0;
$r2 = newarray (java.lang.String)[10];
$r2[0] = \"genericMethod0\";
$r2[1] = \"genericMethod1\";
$r2[2] = \"genericMethod2\";
$r2[3] = \"genericMethod3\";
$r2[4] = \"genericMethod4\";
$r2[5] = \"genericMethod5\";
$r2[6] = \"genericMethod6\";
$r2[7] = \"genericMethod7\";
$r2[8] = \"genericMethod8\";
$r2[9] = \"genericMethod9\";
r3 = $r2;
r4 = r3;
i0 = lengthof r4;
i1 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto return r1;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r5 = r4[i1];
$r7 = class \"LjavaT/lang/reflect/Generics/TestParameterizedType;\";
$r6 = newarray (java.lang.Class)[0];
$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r5, $r6);
r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto return r1;
"->"Block 3:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r5 = r4[i1];
$r7 = class \"LjavaT/lang/reflect/Generics/TestParameterizedType;\";
$r6 = newarray (java.lang.Class)[0];
$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r5, $r6);
r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto return r1;
";
}
