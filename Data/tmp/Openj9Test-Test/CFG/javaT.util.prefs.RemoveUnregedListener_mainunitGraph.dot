digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.util.prefs.NodeChangeListenerTestAdd"
    "specialinvoke $r0.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"
    "r1 = $r0"
    "$r2 = new javaT.util.prefs.NodeChangeListenerTestAdd"
    "specialinvoke $r2.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"
    "r3 = $r2"
    "$r4 = new javaT.util.prefs.NodeChangeListenerTestAdd"
    "specialinvoke $r4.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"
    "r5 = $r4"
    "r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>()"
    "r13 = virtualinvoke r12.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>(\"N1\")"
    "virtualinvoke r12.<java.util.prefs.Preferences: void flush()>()"
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r1)"
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r3)"
    "virtualinvoke r13.<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>(r5)"
    "$r6 = new java.lang.RuntimeException"
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>()>()"
    "throw $r6"
    "$r9 := @caughtexception"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "r14 = $r7"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Test Failed\")"
    "throw r14"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"$r0 = new javaT.util.prefs.NodeChangeListenerTestAdd";
    "$r0 = new javaT.util.prefs.NodeChangeListenerTestAdd"->"specialinvoke $r0.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()";
    "specialinvoke $r0.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new javaT.util.prefs.NodeChangeListenerTestAdd";
    "$r2 = new javaT.util.prefs.NodeChangeListenerTestAdd"->"specialinvoke $r2.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()";
    "specialinvoke $r2.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new javaT.util.prefs.NodeChangeListenerTestAdd";
    "$r4 = new javaT.util.prefs.NodeChangeListenerTestAdd"->"specialinvoke $r4.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()";
    "specialinvoke $r4.<javaT.util.prefs.NodeChangeListenerTestAdd: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"$r9 := @caughtexception";
    "r5 = $r4"->"$r7 := @caughtexception";
    "r5 = $r4"->"r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>()";
    "r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>()"->"$r9 := @caughtexception";
    "r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>()"->"$r7 := @caughtexception";
    "r12 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userRoot()>()"->"r13 = virtualinvoke r12.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>(\"N1\")";
    "r13 = virtualinvoke r12.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>(\"N1\")"->"$r9 := @caughtexception";
    "r13 = virtualinvoke r12.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>(\"N1\")"->"$r7 := @caughtexception";
    "r13 = virtualinvoke r12.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>(\"N1\")"->"virtualinvoke r12.<java.util.prefs.Preferences: void flush()>()";
    "virtualinvoke r12.<java.util.prefs.Preferences: void flush()>()"->"$r9 := @caughtexception";
    "virtualinvoke r12.<java.util.prefs.Preferences: void flush()>()"->"$r7 := @caughtexception";
    "virtualinvoke r12.<java.util.prefs.Preferences: void flush()>()"->"virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r1)";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r1)"->"$r9 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r1)"->"$r7 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r1)"->"virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r3)";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r3)"->"$r9 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r3)"->"$r7 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)>(r3)"->"virtualinvoke r13.<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>(r5)";
    "virtualinvoke r13.<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>(r5)"->"$r9 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>(r5)"->"$r7 := @caughtexception";
    "virtualinvoke r13.<java.util.prefs.Preferences: void removeNodeChangeListener(java.util.prefs.NodeChangeListener)>(r5)"->"$r6 = new java.lang.RuntimeException";
    "$r6 = new java.lang.RuntimeException"->"$r9 := @caughtexception";
    "$r6 = new java.lang.RuntimeException"->"$r7 := @caughtexception";
    "$r6 = new java.lang.RuntimeException"->"specialinvoke $r6.<java.lang.RuntimeException: void <init>()>()";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>()>()"->"$r9 := @caughtexception";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>()>()"->"$r7 := @caughtexception";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>()>()"->"throw $r6";
    "throw $r6"->"$r9 := @caughtexception";
    "throw $r6"->"$r7 := @caughtexception";
    "$r9 := @caughtexception"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed!\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"r14 = $r7";
    "r14 = $r7"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Test Failed\")";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Test Failed\")"->"throw r14";
}
