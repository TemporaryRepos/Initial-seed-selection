digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
i0 := @parameter0: int;
$r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
r1 = virtualinvoke $r0.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(\"/bin/cat\");
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": line 1\n\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": line 2\n\");
r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = new java.io.StringBufferInputStream;
specialinvoke $r8.<java.io.StringBufferInputStream: void <init>(java.lang.String)>(r7);
r9 = $r8;
$r10 = new javaT.lang.Runtime.exec.ExecWithInput$IO;
$r11 = virtualinvoke r1.<java.lang.Process: java.io.OutputStream getOutputStream()>();
specialinvoke $r10.<javaT.lang.Runtime.exec.ExecWithInput$IO: void <init>(java.lang.String,java.io.InputStream,java.io.OutputStream)>(\"stdin\", r9, $r11);
r12 = $r10;
$r13 = new javaT.lang.Runtime.exec.ExecWithInput$IO;
$r14 = virtualinvoke r1.<java.lang.Process: java.io.InputStream getInputStream()>();
$r15 = <java.lang.System: java.io.PrintStream out>;
specialinvoke $r13.<javaT.lang.Runtime.exec.ExecWithInput$IO: void <init>(java.lang.String,java.io.InputStream,java.io.OutputStream)>(\"stdout\", $r14, $r15);
r16 = $r13;
$r17 = new javaT.lang.Runtime.exec.ExecWithInput$IO;
$r18 = virtualinvoke r1.<java.lang.Process: java.io.InputStream getErrorStream()>();
$r19 = <java.lang.System: java.io.PrintStream err>;
specialinvoke $r17.<javaT.lang.Runtime.exec.ExecWithInput$IO: void <init>(java.lang.String,java.io.InputStream,java.io.OutputStream)>(\"stderr\", $r18, $r19);
r20 = $r17;
$i1 = virtualinvoke r1.<java.lang.Process: int waitFor()>();
return $i1;
"
}
