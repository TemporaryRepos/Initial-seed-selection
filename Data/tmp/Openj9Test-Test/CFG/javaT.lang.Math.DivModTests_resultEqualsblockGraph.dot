digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r2 := @parameter1: java.lang.Object;
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
if $r1 == $r3 goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
"
    "Block 1:
[preds: 0 ] [succs: ]
$r4 = newarray (java.lang.Object)[2];
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
$r4[0] = $r6;
$r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();
$r4[1] = $r8;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Result type mismatch, %s; expected: %s%n\", $r4);
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $z1 = r0 instanceof java.lang.ArithmeticException;
"
    "Block 3:
[preds: 2 ] [succs: ]
return 1;
"
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$z1 = r0 instanceof java.lang.ArithmeticException;
if $z1 == 0 goto return 0;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z2 = r2 instanceof java.lang.ArithmeticException;
if $z2 == 0 goto return 0;
"
    "Block 6:
[preds: 5 ] [succs: ]
return 1;
"
    "Block 7:
[preds: 4 5 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r2 := @parameter1: java.lang.Object;
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
if $r1 == $r3 goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
"->"Block 1:
[preds: 0 ] [succs: ]
$r4 = newarray (java.lang.Object)[2];
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
$r4[0] = $r6;
$r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();
$r4[1] = $r8;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Result type mismatch, %s; expected: %s%n\", $r4);
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r2 := @parameter1: java.lang.Object;
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
if $r1 == $r3 goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $z1 = r0 instanceof java.lang.ArithmeticException;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $z1 = r0 instanceof java.lang.ArithmeticException;
"->"Block 3:
[preds: 2 ] [succs: ]
return 1;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $z1 = r0 instanceof java.lang.ArithmeticException;
"->"Block 4:
[preds: 2 ] [succs: 5 7 ]
$z1 = r0 instanceof java.lang.ArithmeticException;
if $z1 == 0 goto return 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$z1 = r0 instanceof java.lang.ArithmeticException;
if $z1 == 0 goto return 0;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$z2 = r2 instanceof java.lang.ArithmeticException;
if $z2 == 0 goto return 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$z1 = r0 instanceof java.lang.ArithmeticException;
if $z1 == 0 goto return 0;
"->"Block 7:
[preds: 4 5 ] [succs: ]
return 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z2 = r2 instanceof java.lang.ArithmeticException;
if $z2 == 0 goto return 0;
"->"Block 6:
[preds: 5 ] [succs: ]
return 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z2 = r2 instanceof java.lang.ArithmeticException;
if $z2 == 0 goto return 0;
"->"Block 7:
[preds: 4 5 ] [succs: ]
return 0;
";
}
