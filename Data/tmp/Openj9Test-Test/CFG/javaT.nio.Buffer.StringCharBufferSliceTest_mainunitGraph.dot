digraph "unitGraph" {
    "r47 := @parameter0: java.lang.String[]"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing the slice method...\")"
    "r1 = \"for testing\""
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with the position 0.\")"
    "r48 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(\"for testing\")"
    "$r3 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r3)"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with new position.\")"
    "virtualinvoke r48.<java.nio.CharBuffer: java.nio.Buffer position(int)>(2)"
    "$r6 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r6)"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with non zero initial position.\")"
    "$r8 = \"for testing\""
    "$i0 = virtualinvoke $r8.<java.lang.String: int length()>()"
    "r49 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>(\"for testing\", 3, $i0)"
    "$r9 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r49, $r9)"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get()\")"
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)"
    "r50 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "i14 = 0"
    "if i14 >= 3 goto $r13 = <java.lang.System: java.io.PrintStream out>"
    "$c12 = virtualinvoke r50.<java.nio.CharBuffer: char get()>()"
    "$c13 = virtualinvoke r49.<java.nio.CharBuffer: char get()>()"
    "if $c12 == $c13 goto i14 = i14 + 1"
    "$r46 = new java.lang.RuntimeException"
    "specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")"
    "throw $r46"
    "i14 = i14 + 1"
    "goto [?= (branch)]"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get(int)\")"
    "r51 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "i15 = 0"
    "if i15 >= 3 goto $r16 = <java.lang.System: java.io.PrintStream out>"
    "$c9 = virtualinvoke r51.<java.nio.CharBuffer: char get(int)>(i15)"
    "$i10 = 4 + i15"
    "$c11 = virtualinvoke r49.<java.nio.CharBuffer: char get(int)>($i10)"
    "if $c9 == $c11 goto i15 = i15 + 1"
    "$r45 = new java.lang.RuntimeException"
    "specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")"
    "throw $r45"
    "i15 = i15 + 1"
    "$r16 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice with result of slice\")"
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0)"
    "$i1 = virtualinvoke r49.<java.nio.CharBuffer: int capacity()>()"
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>($i1)"
    "r52 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "i16 = 0"
    "if i16 >= 4 goto $r19 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke r52.<java.nio.CharBuffer: java.nio.Buffer position(int)>(i16)"
    "r53 = virtualinvoke r52.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "$i8 = virtualinvoke r53.<java.nio.CharBuffer: int position()>()"
    "if $i8 == 0 goto $z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)"
    "$r44 = new java.lang.RuntimeException"
    "specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer\'s position should be zero\")"
    "throw $r44"
    "$z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)"
    "if $z1 != 0 goto r52 = r53"
    "$r43 = new java.lang.RuntimeException"
    "specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer should be equal\")"
    "throw $r43"
    "r52 = r53"
    "i16 = i16 + 1"
    "$r19 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing toString.\")"
    "r54 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "$r22 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()"
    "$z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"tes\")"
    "if $z0 != 0 goto $r23 = <java.lang.System: java.io.PrintStream out>"
    "$r36 = new java.lang.RuntimeException"
    "$r37 = new java.lang.StringBuilder"
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad toString() after slice(): \")"
    "$r39 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()"
    "$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41)"
    "throw $r36"
    "$r23 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing subSequence.\")"
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(8)"
    "r55 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "r56 = virtualinvoke r55.<java.nio.CharBuffer: java.nio.CharBuffer subSequence(int,int)>(1, 3)"
    "$c2 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(0)"
    "if $c2 != 101 goto $r26 = new java.lang.RuntimeException"
    "$c3 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(1)"
    "if $c3 == 115 goto $r32 = <java.lang.System: java.io.PrintStream out>"
    "$r26 = new java.lang.RuntimeException"
    "$r27 = new java.lang.StringBuilder"
    "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad subSequence() after slice(): \'\")"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56)"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31)"
    "throw $r26"
    "$r32 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing duplicate.\")"
    "r57 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"
    "r58 = virtualinvoke r57.<java.nio.CharBuffer: java.nio.CharBuffer duplicate()>()"
    "$c4 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(0)"
    "if $c4 != 116 goto $r59 = new java.lang.RuntimeException"
    "$c5 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(1)"
    "if $c5 != 101 goto $r59 = new java.lang.RuntimeException"
    "$c6 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(2)"
    "if $c6 != 115 goto $r59 = new java.lang.RuntimeException"
    "$c7 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(3)"
    "if $c7 == 116 goto $r35 = <java.lang.System: java.io.PrintStream out>"
    "$r59 = new java.lang.RuntimeException"
    "$r60 = new java.lang.StringBuilder"
    "specialinvoke $r60.<java.lang.StringBuilder: void <init>()>()"
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad duplicate() after slice(): \'\")"
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58)"
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r59.<java.lang.RuntimeException: void <init>(java.lang.String)>($r64)"
    "throw $r59"
    "$r35 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: done!\")"
    "return"
    "r47 := @parameter0: java.lang.String[]"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing the slice method...\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing the slice method...\")"->"r1 = \"for testing\"";
    "r1 = \"for testing\""->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with the position 0.\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with the position 0.\")"->"r48 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(\"for testing\")";
    "r48 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(\"for testing\")"->"$r3 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "$r3 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r3)";
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r3)"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with new position.\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with new position.\")"->"virtualinvoke r48.<java.nio.CharBuffer: java.nio.Buffer position(int)>(2)";
    "virtualinvoke r48.<java.nio.CharBuffer: java.nio.Buffer position(int)>(2)"->"$r6 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "$r6 = virtualinvoke r48.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r6)";
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r48, $r6)"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with non zero initial position.\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing with non zero initial position.\")"->"$r8 = \"for testing\"";
    "$r8 = \"for testing\""->"$i0 = virtualinvoke $r8.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke $r8.<java.lang.String: int length()>()"->"r49 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>(\"for testing\", 3, $i0)";
    "r49 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>(\"for testing\", 3, $i0)"->"$r9 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "$r9 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r49, $r9)";
    "staticinvoke <javaT.nio.Buffer.StringCharBufferSliceTest: void test(java.nio.CharBuffer,java.nio.CharBuffer)>(r49, $r9)"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get()\")";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get()\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)"->"r50 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r50 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"i14 = 0";
    "i14 = 0"->"if i14 >= 3 goto $r13 = <java.lang.System: java.io.PrintStream out>";
    "if i14 >= 3 goto $r13 = <java.lang.System: java.io.PrintStream out>"->"$c12 = virtualinvoke r50.<java.nio.CharBuffer: char get()>()";
    "if i14 >= 3 goto $r13 = <java.lang.System: java.io.PrintStream out>"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "$c12 = virtualinvoke r50.<java.nio.CharBuffer: char get()>()"->"$c13 = virtualinvoke r49.<java.nio.CharBuffer: char get()>()";
    "$c13 = virtualinvoke r49.<java.nio.CharBuffer: char get()>()"->"if $c12 == $c13 goto i14 = i14 + 1";
    "if $c12 == $c13 goto i14 = i14 + 1"->"$r46 = new java.lang.RuntimeException";
    "if $c12 == $c13 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "$r46 = new java.lang.RuntimeException"->"specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")";
    "specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")"->"throw $r46";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= 3 goto $r13 = <java.lang.System: java.io.PrintStream out>";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get(int)\")";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice result with get(int)\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)"->"r51 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r51 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"i15 = 0";
    "i15 = 0"->"if i15 >= 3 goto $r16 = <java.lang.System: java.io.PrintStream out>";
    "if i15 >= 3 goto $r16 = <java.lang.System: java.io.PrintStream out>"->"$c9 = virtualinvoke r51.<java.nio.CharBuffer: char get(int)>(i15)";
    "if i15 >= 3 goto $r16 = <java.lang.System: java.io.PrintStream out>"->"$r16 = <java.lang.System: java.io.PrintStream out>";
    "$c9 = virtualinvoke r51.<java.nio.CharBuffer: char get(int)>(i15)"->"$i10 = 4 + i15";
    "$i10 = 4 + i15"->"$c11 = virtualinvoke r49.<java.nio.CharBuffer: char get(int)>($i10)";
    "$c11 = virtualinvoke r49.<java.nio.CharBuffer: char get(int)>($i10)"->"if $c9 == $c11 goto i15 = i15 + 1";
    "if $c9 == $c11 goto i15 = i15 + 1"->"$r45 = new java.lang.RuntimeException";
    "if $c9 == $c11 goto i15 = i15 + 1"->"i15 = i15 + 1";
    "$r45 = new java.lang.RuntimeException"->"specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")";
    "specialinvoke $r45.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong characters in slice result.\")"->"throw $r45";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 >= 3 goto $r16 = <java.lang.System: java.io.PrintStream out>";
    "$r16 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice with result of slice\")";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing slice with result of slice\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0)"->"$i1 = virtualinvoke r49.<java.nio.CharBuffer: int capacity()>()";
    "$i1 = virtualinvoke r49.<java.nio.CharBuffer: int capacity()>()"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>($i1)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>($i1)"->"r52 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r52 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"i16 = 0";
    "i16 = 0"->"if i16 >= 4 goto $r19 = <java.lang.System: java.io.PrintStream out>";
    "if i16 >= 4 goto $r19 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke r52.<java.nio.CharBuffer: java.nio.Buffer position(int)>(i16)";
    "if i16 >= 4 goto $r19 = <java.lang.System: java.io.PrintStream out>"->"$r19 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke r52.<java.nio.CharBuffer: java.nio.Buffer position(int)>(i16)"->"r53 = virtualinvoke r52.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r53 = virtualinvoke r52.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"$i8 = virtualinvoke r53.<java.nio.CharBuffer: int position()>()";
    "$i8 = virtualinvoke r53.<java.nio.CharBuffer: int position()>()"->"if $i8 == 0 goto $z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)";
    "if $i8 == 0 goto $z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)"->"$r44 = new java.lang.RuntimeException";
    "if $i8 == 0 goto $z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)"->"$z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)";
    "$r44 = new java.lang.RuntimeException"->"specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer\'s position should be zero\")";
    "specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer\'s position should be zero\")"->"throw $r44";
    "$z1 = virtualinvoke r53.<java.nio.CharBuffer: boolean equals(java.lang.Object)>(r52)"->"if $z1 != 0 goto r52 = r53";
    "if $z1 != 0 goto r52 = r53"->"$r43 = new java.lang.RuntimeException";
    "if $z1 != 0 goto r52 = r53"->"r52 = r53";
    "$r43 = new java.lang.RuntimeException"->"specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer should be equal\")";
    "specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"New buffer should be equal\")"->"throw $r43";
    "r52 = r53"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 >= 4 goto $r19 = <java.lang.System: java.io.PrintStream out>";
    "$r19 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing toString.\")";
    "virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing toString.\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(7)"->"r54 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r54 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"$r22 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()";
    "$r22 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()"->"$z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"tes\")";
    "$z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"tes\")"->"if $z0 != 0 goto $r23 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r23 = <java.lang.System: java.io.PrintStream out>"->"$r36 = new java.lang.RuntimeException";
    "if $z0 != 0 goto $r23 = <java.lang.System: java.io.PrintStream out>"->"$r23 = <java.lang.System: java.io.PrintStream out>";
    "$r36 = new java.lang.RuntimeException"->"$r37 = new java.lang.StringBuilder";
    "$r37 = new java.lang.StringBuilder"->"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad toString() after slice(): \")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad toString() after slice(): \")"->"$r39 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()";
    "$r39 = virtualinvoke r54.<java.nio.CharBuffer: java.lang.String toString()>()"->"$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)";
    "$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41)";
    "specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41)"->"throw $r36";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing subSequence.\")";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing subSequence.\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(8)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(8)"->"r55 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r55 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"r56 = virtualinvoke r55.<java.nio.CharBuffer: java.nio.CharBuffer subSequence(int,int)>(1, 3)";
    "r56 = virtualinvoke r55.<java.nio.CharBuffer: java.nio.CharBuffer subSequence(int,int)>(1, 3)"->"$c2 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(0)";
    "$c2 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(0)"->"if $c2 != 101 goto $r26 = new java.lang.RuntimeException";
    "if $c2 != 101 goto $r26 = new java.lang.RuntimeException"->"$c3 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(1)";
    "if $c2 != 101 goto $r26 = new java.lang.RuntimeException"->"$r26 = new java.lang.RuntimeException";
    "$c3 = interfaceinvoke r56.<java.lang.CharSequence: char charAt(int)>(1)"->"if $c3 == 115 goto $r32 = <java.lang.System: java.io.PrintStream out>";
    "if $c3 == 115 goto $r32 = <java.lang.System: java.io.PrintStream out>"->"$r26 = new java.lang.RuntimeException";
    "if $c3 == 115 goto $r32 = <java.lang.System: java.io.PrintStream out>"->"$r32 = <java.lang.System: java.io.PrintStream out>";
    "$r26 = new java.lang.RuntimeException"->"$r27 = new java.lang.StringBuilder";
    "$r27 = new java.lang.StringBuilder"->"specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad subSequence() after slice(): \'\")";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad subSequence() after slice(): \'\")"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56)";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56)"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31)";
    "specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31)"->"throw $r26";
    "$r32 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing duplicate.\")";
    "virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: testing duplicate.\")"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer position(int)>(4)"->"virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(8)";
    "virtualinvoke r49.<java.nio.CharBuffer: java.nio.Buffer limit(int)>(8)"->"r57 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()";
    "r57 = virtualinvoke r49.<java.nio.CharBuffer: java.nio.CharBuffer slice()>()"->"r58 = virtualinvoke r57.<java.nio.CharBuffer: java.nio.CharBuffer duplicate()>()";
    "r58 = virtualinvoke r57.<java.nio.CharBuffer: java.nio.CharBuffer duplicate()>()"->"$c4 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(0)";
    "$c4 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(0)"->"if $c4 != 116 goto $r59 = new java.lang.RuntimeException";
    "if $c4 != 116 goto $r59 = new java.lang.RuntimeException"->"$c5 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(1)";
    "if $c4 != 116 goto $r59 = new java.lang.RuntimeException"->"$r59 = new java.lang.RuntimeException";
    "$c5 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(1)"->"if $c5 != 101 goto $r59 = new java.lang.RuntimeException";
    "if $c5 != 101 goto $r59 = new java.lang.RuntimeException"->"$c6 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(2)";
    "if $c5 != 101 goto $r59 = new java.lang.RuntimeException"->"$r59 = new java.lang.RuntimeException";
    "$c6 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(2)"->"if $c6 != 115 goto $r59 = new java.lang.RuntimeException";
    "if $c6 != 115 goto $r59 = new java.lang.RuntimeException"->"$c7 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(3)";
    "if $c6 != 115 goto $r59 = new java.lang.RuntimeException"->"$r59 = new java.lang.RuntimeException";
    "$c7 = virtualinvoke r58.<java.nio.CharBuffer: char charAt(int)>(3)"->"if $c7 == 116 goto $r35 = <java.lang.System: java.io.PrintStream out>";
    "if $c7 == 116 goto $r35 = <java.lang.System: java.io.PrintStream out>"->"$r59 = new java.lang.RuntimeException";
    "if $c7 == 116 goto $r35 = <java.lang.System: java.io.PrintStream out>"->"$r35 = <java.lang.System: java.io.PrintStream out>";
    "$r59 = new java.lang.RuntimeException"->"$r60 = new java.lang.StringBuilder";
    "$r60 = new java.lang.StringBuilder"->"specialinvoke $r60.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r60.<java.lang.StringBuilder: void <init>()>()"->"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad duplicate() after slice(): \'\")";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bad duplicate() after slice(): \'\")"->"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58)";
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58)"->"$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")";
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"->"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r59.<java.lang.RuntimeException: void <init>(java.lang.String)>($r64)";
    "specialinvoke $r59.<java.lang.RuntimeException: void <init>(java.lang.String)>($r64)"->"throw $r59";
    "$r35 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: done!\")";
    "virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>(\">>> StringCharBufferSliceTest-main: done!\")"->"return";
}
