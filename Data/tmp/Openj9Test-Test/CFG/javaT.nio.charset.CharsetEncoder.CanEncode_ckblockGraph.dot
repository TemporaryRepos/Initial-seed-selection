digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.CharsetEncoder;
r1 := @parameter1: java.lang.String;
z1 := @parameter2: boolean;
$r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
$r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r2);
$z0 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r3);
if $z0 == z1 goto $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"array \\\"\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r14);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
$z2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r4);
if $z2 == z1 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"buffer  \\\"\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r9);
"
    "Block 4:
[preds: 2 3 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.CharsetEncoder;
r1 := @parameter1: java.lang.String;
z1 := @parameter2: boolean;
$r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
$r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r2);
$z0 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r3);
if $z0 == z1 goto $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"array \\\"\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r14);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.CharsetEncoder;
r1 := @parameter1: java.lang.String;
z1 := @parameter2: boolean;
$r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
$r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r2);
$z0 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r3);
if $z0 == z1 goto $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
$z2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r4);
if $z2 == z1 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"array \\\"\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r14);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
$z2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r4);
if $z2 == z1 goto return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
$z2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r4);
if $z2 == z1 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"buffer  \\\"\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r9);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);
$z2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)>($r4);
if $z2 == z1 goto return;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"buffer  \\\"\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void wrong(java.nio.charset.CharsetEncoder,boolean,java.lang.String)>(r0, z1, $r9);
"->"Block 4:
[preds: 2 3 ] [succs: ]
return;
";
}
