digraph "unitGraph" {
    "i4 = 0"
    "$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"
    "$i0 = lengthof $r0"
    "if i4 >= $i0 goto return"
    "$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"
    "r2 = $r1[i4]"
    "$r3 = new java.lang.StringBuffer"
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2)"
    "r4 = $r3"
    "i1 = virtualinvoke r4.<java.lang.StringBuffer: int length()>()"
    "i5 = 0"
    "if i5 > i1 goto i8 = i1"
    "i6 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(i5, i1)"
    "i7 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, i5, i1)"
    "if i6 == i7 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= $r12 = new java.lang.StringBuilder]"
    "$z0 = 0"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z0, $r20, i6, i7)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "i8 = i1"
    "if i8 < 0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")"
    "i9 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(0, i8)"
    "i10 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, 0, i8)"
    "if i9 == i10 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= $r5 = new java.lang.StringBuilder]"
    "$z1 = 0"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], 0, \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z1, $r11, i9, i10)"
    "i8 = i8 + -1"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, -1, i1, class \"Ljava/lang/IndexOutOfBoundsException;\")"
    "$i2 = i1 + 1"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, 0, $i2, class \"Ljava/lang/IndexOutOfBoundsException;\")"
    "$i3 = i1 - 1"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, i1, $i3, class \"Ljava/lang/IndexOutOfBoundsException;\")"
    "i4 = i4 + 1"
    "goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]"
    "return"
    "i4 = 0"->"$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
    "$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i4 >= $i0 goto return";
    "if i4 >= $i0 goto return"->"$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
    "if i4 >= $i0 goto return"->"return";
    "$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"->"r2 = $r1[i4]";
    "r2 = $r1[i4]"->"$r3 = new java.lang.StringBuffer";
    "$r3 = new java.lang.StringBuffer"->"specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2)";
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2)"->"r4 = $r3";
    "r4 = $r3"->"i1 = virtualinvoke r4.<java.lang.StringBuffer: int length()>()";
    "i1 = virtualinvoke r4.<java.lang.StringBuffer: int length()>()"->"i5 = 0";
    "i5 = 0"->"if i5 > i1 goto i8 = i1";
    "if i5 > i1 goto i8 = i1"->"i6 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(i5, i1)";
    "if i5 > i1 goto i8 = i1"->"i8 = i1";
    "i6 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(i5, i1)"->"i7 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, i5, i1)";
    "i7 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, i5, i1)"->"if i6 == i7 goto $z0 = 0";
    "if i6 == i7 goto $z0 = 0"->"$z0 = 1";
    "if i6 == i7 goto $z0 = 0"->"$z0 = 0";
    "$z0 = 1"->"goto [?= $r12 = new java.lang.StringBuilder]";
    "goto [?= $r12 = new java.lang.StringBuilder]"->"$r12 = new java.lang.StringBuilder";
    "$z0 = 0"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], \")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z0, $r20, i6, i7)";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z0, $r20, i6, i7)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 > i1 goto i8 = i1";
    "i8 = i1"->"if i8 < 0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")";
    "if i8 < 0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")"->"i9 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(0, i8)";
    "if i8 < 0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")";
    "i9 = virtualinvoke r4.<java.lang.StringBuffer: int codePointCount(int,int)>(0, i8)"->"i10 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, 0, i8)";
    "i10 = staticinvoke <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>(r4, 0, i8)"->"if i9 == i10 goto $z1 = 0";
    "if i9 == i10 goto $z1 = 0"->"$z1 = 1";
    "if i9 == i10 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= $r5 = new java.lang.StringBuilder]";
    "goto [?= $r5 = new java.lang.StringBuilder]"->"$r5 = new java.lang.StringBuilder";
    "$z1 = 0"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePointCount(input[\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], 0, \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], 0, \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z1, $r11, i9, i10)";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z1, $r11, i9, i10)"->"i8 = i8 + -1";
    "i8 = i8 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(null, 0, 0, class \"Ljava/lang/NullPointerException;\")"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, -1, i1, class \"Ljava/lang/IndexOutOfBoundsException;\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, -1, i1, class \"Ljava/lang/IndexOutOfBoundsException;\")"->"$i2 = i1 + 1";
    "$i2 = i1 + 1"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, 0, $i2, class \"Ljava/lang/IndexOutOfBoundsException;\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, 0, $i2, class \"Ljava/lang/IndexOutOfBoundsException;\")"->"$i3 = i1 - 1";
    "$i3 = i1 - 1"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, i1, $i3, class \"Ljava/lang/IndexOutOfBoundsException;\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testCodePointCount(java.lang.StringBuffer,int,int,java.lang.Class)>(r4, i1, $i3, class \"Ljava/lang/IndexOutOfBoundsException;\")"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]";
    "goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]"->"$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
}
