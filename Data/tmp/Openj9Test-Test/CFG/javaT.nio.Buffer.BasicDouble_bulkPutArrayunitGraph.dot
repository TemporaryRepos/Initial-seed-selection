digraph "unitGraph" {
    "r0 := @parameter0: java.nio.DoubleBuffer"
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()"
    "$i1 = i0 + 7"
    "r2 = newarray (double)[$i1]"
    "i4 = 0"
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)"
    "$i2 = i4 + 7"
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4)"
    "$d0 = (double) $l3"
    "r2[$i2] = $d0"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer flip()>()"
    "return"
    "r0 := @parameter0: java.nio.DoubleBuffer"->"i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()"->"$i1 = i0 + 7";
    "$i1 = i0 + 7"->"r2 = newarray (double)[$i1]";
    "r2 = newarray (double)[$i1]"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)";
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)"->"$i2 = i4 + 7";
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)";
    "$i2 = i4 + 7"->"$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4)";
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i4)"->"$d0 = (double) $l3";
    "$d0 = (double) $l3"->"r2[$i2] = $d0";
    "r2[$i2] = $d0"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>(r2, 7, i0)"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer flip()>()"->"return";
}
