digraph "unitGraph" {
    "r5 := @this: javaT.text.Collator.Test4401726"
    "$r0 = newarray (int)[3]"
    "$r0[0] = 0"
    "$r0[1] = -1"
    "$r0[2] = 65536"
    "r1 = $r0"
    "$i0 = lengthof r1"
    "r2 = newarray (int)[$i0]"
    "r11 = \"< a, A < d; D\""
    "$r3 = new java.text.RuleBasedCollator"
    "specialinvoke $r3.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r11)"
    "r4 = $r3"
    "r12 = \"aD\""
    "r13 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r12)"
    "virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)"
    "$i1 = virtualinvoke r13.<java.text.CollationElementIterator: int getOffset()>()"
    "r2[0] = $i1"
    "$i2 = virtualinvoke r13.<java.text.CollationElementIterator: int previous()>()"
    "r2[1] = $i2"
    "$i3 = virtualinvoke r13.<java.text.CollationElementIterator: int next()>()"
    "r2[2] = $i3"
    "$z0 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"
    "if $z0 != 0 goto r14 = \"a\""
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")"
    "r14 = \"a\""
    "r15 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r14)"
    "virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)"
    "$i4 = virtualinvoke r15.<java.text.CollationElementIterator: int getOffset()>()"
    "r2[0] = $i4"
    "$i5 = virtualinvoke r15.<java.text.CollationElementIterator: int previous()>()"
    "r2[1] = $i5"
    "$i6 = virtualinvoke r15.<java.text.CollationElementIterator: int next()>()"
    "r2[2] = $i6"
    "$z1 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"
    "if $z1 != 0 goto (branch)"
    "goto [?= return]"
    "$r6 := @caughtexception"
    "r16 = $r6"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected ParseException: \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>($r10)"
    "return"
    "r5 := @this: javaT.text.Collator.Test4401726"->"$r0 = newarray (int)[3]";
    "$r0 = newarray (int)[3]"->"$r0[0] = 0";
    "$r0[0] = 0"->"$r0[1] = -1";
    "$r0[1] = -1"->"$r0[2] = 65536";
    "$r0[2] = 65536"->"r1 = $r0";
    "r1 = $r0"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"r2 = newarray (int)[$i0]";
    "r2 = newarray (int)[$i0]"->"r11 = \"< a, A < d; D\"";
    "r2 = newarray (int)[$i0]"->"$r6 := @caughtexception";
    "r11 = \"< a, A < d; D\""->"$r3 = new java.text.RuleBasedCollator";
    "r11 = \"< a, A < d; D\""->"$r6 := @caughtexception";
    "$r3 = new java.text.RuleBasedCollator"->"specialinvoke $r3.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r11)";
    "$r3 = new java.text.RuleBasedCollator"->"$r6 := @caughtexception";
    "specialinvoke $r3.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r11)"->"r4 = $r3";
    "specialinvoke $r3.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r11)"->"$r6 := @caughtexception";
    "r4 = $r3"->"r12 = \"aD\"";
    "r4 = $r3"->"$r6 := @caughtexception";
    "r12 = \"aD\""->"r13 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r12)";
    "r12 = \"aD\""->"$r6 := @caughtexception";
    "r13 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r12)"->"virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)";
    "r13 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r12)"->"$r6 := @caughtexception";
    "virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$i1 = virtualinvoke r13.<java.text.CollationElementIterator: int getOffset()>()";
    "virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$r6 := @caughtexception";
    "$i1 = virtualinvoke r13.<java.text.CollationElementIterator: int getOffset()>()"->"r2[0] = $i1";
    "$i1 = virtualinvoke r13.<java.text.CollationElementIterator: int getOffset()>()"->"$r6 := @caughtexception";
    "r2[0] = $i1"->"$i2 = virtualinvoke r13.<java.text.CollationElementIterator: int previous()>()";
    "r2[0] = $i1"->"$r6 := @caughtexception";
    "$i2 = virtualinvoke r13.<java.text.CollationElementIterator: int previous()>()"->"r2[1] = $i2";
    "$i2 = virtualinvoke r13.<java.text.CollationElementIterator: int previous()>()"->"$r6 := @caughtexception";
    "r2[1] = $i2"->"virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)";
    "r2[1] = $i2"->"$r6 := @caughtexception";
    "virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$i3 = virtualinvoke r13.<java.text.CollationElementIterator: int next()>()";
    "virtualinvoke r13.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$r6 := @caughtexception";
    "$i3 = virtualinvoke r13.<java.text.CollationElementIterator: int next()>()"->"r2[2] = $i3";
    "$i3 = virtualinvoke r13.<java.text.CollationElementIterator: int next()>()"->"$r6 := @caughtexception";
    "r2[2] = $i3"->"$z0 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)";
    "r2[2] = $i3"->"$r6 := @caughtexception";
    "$z0 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"->"if $z0 != 0 goto r14 = \"a\"";
    "$z0 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"->"$r6 := @caughtexception";
    "if $z0 != 0 goto r14 = \"a\""->"virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")";
    "if $z0 != 0 goto r14 = \"a\""->"r14 = \"a\"";
    "if $z0 != 0 goto r14 = \"a\""->"$r6 := @caughtexception";
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")"->"r14 = \"a\"";
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")"->"$r6 := @caughtexception";
    "r14 = \"a\""->"r15 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r14)";
    "r14 = \"a\""->"$r6 := @caughtexception";
    "r15 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r14)"->"virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)";
    "r15 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r14)"->"$r6 := @caughtexception";
    "virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$i4 = virtualinvoke r15.<java.text.CollationElementIterator: int getOffset()>()";
    "virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$r6 := @caughtexception";
    "$i4 = virtualinvoke r15.<java.text.CollationElementIterator: int getOffset()>()"->"r2[0] = $i4";
    "$i4 = virtualinvoke r15.<java.text.CollationElementIterator: int getOffset()>()"->"$r6 := @caughtexception";
    "r2[0] = $i4"->"$i5 = virtualinvoke r15.<java.text.CollationElementIterator: int previous()>()";
    "r2[0] = $i4"->"$r6 := @caughtexception";
    "$i5 = virtualinvoke r15.<java.text.CollationElementIterator: int previous()>()"->"r2[1] = $i5";
    "$i5 = virtualinvoke r15.<java.text.CollationElementIterator: int previous()>()"->"$r6 := @caughtexception";
    "r2[1] = $i5"->"virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)";
    "r2[1] = $i5"->"$r6 := @caughtexception";
    "virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$i6 = virtualinvoke r15.<java.text.CollationElementIterator: int next()>()";
    "virtualinvoke r15.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"$r6 := @caughtexception";
    "$i6 = virtualinvoke r15.<java.text.CollationElementIterator: int next()>()"->"r2[2] = $i6";
    "$i6 = virtualinvoke r15.<java.text.CollationElementIterator: int next()>()"->"$r6 := @caughtexception";
    "r2[2] = $i6"->"$z1 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)";
    "r2[2] = $i6"->"$r6 := @caughtexception";
    "$z1 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"->"if $z1 != 0 goto (branch)";
    "$z1 = virtualinvoke r5.<javaT.text.Collator.Test4401726: boolean compareArray(int[],int[])>(r1, r2)"->"$r6 := @caughtexception";
    "if $z1 != 0 goto (branch)"->"virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")";
    "if $z1 != 0 goto (branch)"->"goto [?= return]";
    "if $z1 != 0 goto (branch)"->"$r6 := @caughtexception";
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")"->"goto [?= return]";
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>(\"Failed.\")"->"$r6 := @caughtexception";
    "goto [?= return]"->"return";
    "$r6 := @caughtexception"->"r16 = $r6";
    "r16 = $r6"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected ParseException: \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected ParseException: \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>($r10)";
    "virtualinvoke r5.<javaT.text.Collator.Test4401726: void errln(java.lang.String)>($r10)"->"return";
}
