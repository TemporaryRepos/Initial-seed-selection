digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r48 := @parameter0: java.lang.String[];
$r0 = new java.util.EnumMap;
specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\");
r1 = $r0;
$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\");
$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\");
$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>();
$r8 = <java.lang.System: java.io.PrintStream out>;
$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7);
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);
$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError;
"
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$i0 = lengthof r7;
if $i0 != 2 goto $r49 = new java.lang.AssertionError;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r11 = r7[0];
$r12 = (java.util.Map$Entry) $r11;
$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();
$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r13 != $r14 goto $r49 = new java.lang.AssertionError;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r15 = r7[1];
$r16 = (java.util.Map$Entry) $r15;
$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();
$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3];
"
    "Block 4:
[preds: 0 1 2 3 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>()>();
throw $r49;
"
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
r19 = newarray (java.util.Map$Entry)[3];
$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();
$r23 = (java.util.Map$Entry) $r22;
r19[2] = $r23;
$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19);
r26 = (java.util.Map$Entry[]) $r25;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26);
virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28);
if r19 != r26 goto $r50 = new java.lang.AssertionError;
"
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r29 = r26[0];
$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>();
$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r30 != $r31 goto $r50 = new java.lang.AssertionError;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r32 = r26[1];
$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>();
$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r33 != $r34 goto $r50 = new java.lang.AssertionError;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r35 = r26[2];
if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1];
"
    "Block 9:
[preds: 5 6 7 8 ] [succs: ]
$r50 = new java.lang.AssertionError;
specialinvoke $r50.<java.lang.AssertionError: void <init>()>();
throw $r50;
"
    "Block 10:
[preds: 8 ] [succs: 11 14 ]
r36 = newarray (java.util.Map$Entry)[1];
$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36);
r39 = (java.util.Map$Entry[]) $r38;
$r40 = <java.lang.System: java.io.PrintStream out>;
$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39);
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);
if r36 == r39 goto $r51 = new java.lang.AssertionError;
"
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$i1 = lengthof r39;
if $i1 != 2 goto $r51 = new java.lang.AssertionError;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r42 = r39[0];
$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>();
$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r43 != $r44 goto $r51 = new java.lang.AssertionError;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r45 = r39[1];
$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>();
$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r46 == $r47 goto return;
"
    "Block 14:
[preds: 10 11 12 13 ] [succs: ]
$r51 = new java.lang.AssertionError;
specialinvoke $r51.<java.lang.AssertionError: void <init>()>();
throw $r51;
"
    "Block 15:
[preds: 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r48 := @parameter0: java.lang.String[];
$r0 = new java.util.EnumMap;
specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\");
r1 = $r0;
$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\");
$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\");
$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>();
$r8 = <java.lang.System: java.io.PrintStream out>;
$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7);
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);
$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError;
"->"Block 1:
[preds: 0 ] [succs: 2 4 ]
$i0 = lengthof r7;
if $i0 != 2 goto $r49 = new java.lang.AssertionError;
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r48 := @parameter0: java.lang.String[];
$r0 = new java.util.EnumMap;
specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\");
r1 = $r0;
$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\");
$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\");
$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>();
$r8 = <java.lang.System: java.io.PrintStream out>;
$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7);
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);
$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError;
"->"Block 4:
[preds: 0 1 2 3 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>()>();
throw $r49;
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$i0 = lengthof r7;
if $i0 != 2 goto $r49 = new java.lang.AssertionError;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r11 = r7[0];
$r12 = (java.util.Map$Entry) $r11;
$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();
$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r13 != $r14 goto $r49 = new java.lang.AssertionError;
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$i0 = lengthof r7;
if $i0 != 2 goto $r49 = new java.lang.AssertionError;
"->"Block 4:
[preds: 0 1 2 3 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>()>();
throw $r49;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r11 = r7[0];
$r12 = (java.util.Map$Entry) $r11;
$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();
$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r13 != $r14 goto $r49 = new java.lang.AssertionError;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r15 = r7[1];
$r16 = (java.util.Map$Entry) $r15;
$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();
$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r11 = r7[0];
$r12 = (java.util.Map$Entry) $r11;
$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();
$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r13 != $r14 goto $r49 = new java.lang.AssertionError;
"->"Block 4:
[preds: 0 1 2 3 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>()>();
throw $r49;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r15 = r7[1];
$r16 = (java.util.Map$Entry) $r15;
$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();
$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3];
"->"Block 4:
[preds: 0 1 2 3 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>()>();
throw $r49;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r15 = r7[1];
$r16 = (java.util.Map$Entry) $r15;
$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();
$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3];
"->"Block 5:
[preds: 3 ] [succs: 6 9 ]
r19 = newarray (java.util.Map$Entry)[3];
$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();
$r23 = (java.util.Map$Entry) $r22;
r19[2] = $r23;
$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19);
r26 = (java.util.Map$Entry[]) $r25;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26);
virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28);
if r19 != r26 goto $r50 = new java.lang.AssertionError;
";
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
r19 = newarray (java.util.Map$Entry)[3];
$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();
$r23 = (java.util.Map$Entry) $r22;
r19[2] = $r23;
$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19);
r26 = (java.util.Map$Entry[]) $r25;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26);
virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28);
if r19 != r26 goto $r50 = new java.lang.AssertionError;
"->"Block 6:
[preds: 5 ] [succs: 7 9 ]
$r29 = r26[0];
$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>();
$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r30 != $r31 goto $r50 = new java.lang.AssertionError;
";
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
r19 = newarray (java.util.Map$Entry)[3];
$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();
$r23 = (java.util.Map$Entry) $r22;
r19[2] = $r23;
$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19);
r26 = (java.util.Map$Entry[]) $r25;
$r27 = <java.lang.System: java.io.PrintStream out>;
$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26);
virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28);
if r19 != r26 goto $r50 = new java.lang.AssertionError;
"->"Block 9:
[preds: 5 6 7 8 ] [succs: ]
$r50 = new java.lang.AssertionError;
specialinvoke $r50.<java.lang.AssertionError: void <init>()>();
throw $r50;
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r29 = r26[0];
$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>();
$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r30 != $r31 goto $r50 = new java.lang.AssertionError;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r32 = r26[1];
$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>();
$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r33 != $r34 goto $r50 = new java.lang.AssertionError;
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r29 = r26[0];
$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>();
$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r30 != $r31 goto $r50 = new java.lang.AssertionError;
"->"Block 9:
[preds: 5 6 7 8 ] [succs: ]
$r50 = new java.lang.AssertionError;
specialinvoke $r50.<java.lang.AssertionError: void <init>()>();
throw $r50;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r32 = r26[1];
$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>();
$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r33 != $r34 goto $r50 = new java.lang.AssertionError;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r35 = r26[2];
if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r32 = r26[1];
$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>();
$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r33 != $r34 goto $r50 = new java.lang.AssertionError;
"->"Block 9:
[preds: 5 6 7 8 ] [succs: ]
$r50 = new java.lang.AssertionError;
specialinvoke $r50.<java.lang.AssertionError: void <init>()>();
throw $r50;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r35 = r26[2];
if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1];
"->"Block 9:
[preds: 5 6 7 8 ] [succs: ]
$r50 = new java.lang.AssertionError;
specialinvoke $r50.<java.lang.AssertionError: void <init>()>();
throw $r50;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r35 = r26[2];
if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1];
"->"Block 10:
[preds: 8 ] [succs: 11 14 ]
r36 = newarray (java.util.Map$Entry)[1];
$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36);
r39 = (java.util.Map$Entry[]) $r38;
$r40 = <java.lang.System: java.io.PrintStream out>;
$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39);
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);
if r36 == r39 goto $r51 = new java.lang.AssertionError;
";
    "Block 10:
[preds: 8 ] [succs: 11 14 ]
r36 = newarray (java.util.Map$Entry)[1];
$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36);
r39 = (java.util.Map$Entry[]) $r38;
$r40 = <java.lang.System: java.io.PrintStream out>;
$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39);
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);
if r36 == r39 goto $r51 = new java.lang.AssertionError;
"->"Block 11:
[preds: 10 ] [succs: 12 14 ]
$i1 = lengthof r39;
if $i1 != 2 goto $r51 = new java.lang.AssertionError;
";
    "Block 10:
[preds: 8 ] [succs: 11 14 ]
r36 = newarray (java.util.Map$Entry)[1];
$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36);
r39 = (java.util.Map$Entry[]) $r38;
$r40 = <java.lang.System: java.io.PrintStream out>;
$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39);
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);
if r36 == r39 goto $r51 = new java.lang.AssertionError;
"->"Block 14:
[preds: 10 11 12 13 ] [succs: ]
$r51 = new java.lang.AssertionError;
specialinvoke $r51.<java.lang.AssertionError: void <init>()>();
throw $r51;
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$i1 = lengthof r39;
if $i1 != 2 goto $r51 = new java.lang.AssertionError;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
$r42 = r39[0];
$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>();
$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r43 != $r44 goto $r51 = new java.lang.AssertionError;
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$i1 = lengthof r39;
if $i1 != 2 goto $r51 = new java.lang.AssertionError;
"->"Block 14:
[preds: 10 11 12 13 ] [succs: ]
$r51 = new java.lang.AssertionError;
specialinvoke $r51.<java.lang.AssertionError: void <init>()>();
throw $r51;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r42 = r39[0];
$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>();
$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r43 != $r44 goto $r51 = new java.lang.AssertionError;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r45 = r39[1];
$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>();
$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r46 == $r47 goto return;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r42 = r39[0];
$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>();
$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>;
if $r43 != $r44 goto $r51 = new java.lang.AssertionError;
"->"Block 14:
[preds: 10 11 12 13 ] [succs: ]
$r51 = new java.lang.AssertionError;
specialinvoke $r51.<java.lang.AssertionError: void <init>()>();
throw $r51;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r45 = r39[1];
$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>();
$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r46 == $r47 goto return;
"->"Block 14:
[preds: 10 11 12 13 ] [succs: ]
$r51 = new java.lang.AssertionError;
specialinvoke $r51.<java.lang.AssertionError: void <init>()>();
throw $r51;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r45 = r39[1];
$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>();
$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>;
if $r46 == $r47 goto return;
"->"Block 15:
[preds: 13 ] [succs: ]
return;
";
}
