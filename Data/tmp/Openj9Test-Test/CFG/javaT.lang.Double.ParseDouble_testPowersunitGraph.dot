digraph "unitGraph" {
    "i0 = -1074"
    "if i0 > 1023 goto $r0 = new java.math.BigDecimal"
    "d1 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i0)"
    "$r6 = new java.math.BigDecimal"
    "specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>(d1)"
    "r7 = $r6"
    "$r8 = new java.math.BigDecimal"
    "$d2 = neg d1"
    "$d3 = staticinvoke <java.lang.Math: double nextUp(double)>($d2)"
    "$d4 = staticinvoke <java.lang.Math: double ulp(double)>($d3)"
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d4)"
    "$r9 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"
    "$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9)"
    "r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10)"
    "$r12 = new java.math.BigDecimal"
    "$d5 = staticinvoke <java.lang.Math: double ulp(double)>(d1)"
    "specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d5)"
    "$r13 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"
    "$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13)"
    "r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14)"
    "$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r16)"
    "$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r17)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "$r0 = new java.math.BigDecimal"
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(1.7976931348623157E308)"
    "$r1 = new java.math.BigDecimal"
    "$d0 = staticinvoke <java.lang.Math: double ulp(double)>(1.7976931348623157E308)"
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0)"
    "$r2 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"
    "$r3 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2)"
    "$r4 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r3)"
    "$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r5)"
    "return"
    "i0 = -1074"->"if i0 > 1023 goto $r0 = new java.math.BigDecimal";
    "if i0 > 1023 goto $r0 = new java.math.BigDecimal"->"d1 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i0)";
    "if i0 > 1023 goto $r0 = new java.math.BigDecimal"->"$r0 = new java.math.BigDecimal";
    "d1 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, i0)"->"$r6 = new java.math.BigDecimal";
    "$r6 = new java.math.BigDecimal"->"specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>(d1)";
    "specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>(d1)"->"r7 = $r6";
    "r7 = $r6"->"$r8 = new java.math.BigDecimal";
    "$r8 = new java.math.BigDecimal"->"$d2 = neg d1";
    "$d2 = neg d1"->"$d3 = staticinvoke <java.lang.Math: double nextUp(double)>($d2)";
    "$d3 = staticinvoke <java.lang.Math: double nextUp(double)>($d2)"->"$d4 = staticinvoke <java.lang.Math: double ulp(double)>($d3)";
    "$d4 = staticinvoke <java.lang.Math: double ulp(double)>($d3)"->"specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d4)";
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d4)"->"$r9 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>";
    "$r9 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"->"$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9)";
    "$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9)"->"r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10)";
    "r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10)"->"$r12 = new java.math.BigDecimal";
    "$r12 = new java.math.BigDecimal"->"$d5 = staticinvoke <java.lang.Math: double ulp(double)>(d1)";
    "$d5 = staticinvoke <java.lang.Math: double ulp(double)>(d1)"->"specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d5)";
    "specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d5)"->"$r13 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>";
    "$r13 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"->"$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13)";
    "$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13)"->"r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14)";
    "r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14)"->"$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>()";
    "$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r16)";
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r16)"->"$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>()";
    "$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r17)";
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r17)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 > 1023 goto $r0 = new java.math.BigDecimal";
    "$r0 = new java.math.BigDecimal"->"specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(1.7976931348623157E308)";
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(1.7976931348623157E308)"->"$r1 = new java.math.BigDecimal";
    "$r1 = new java.math.BigDecimal"->"$d0 = staticinvoke <java.lang.Math: double ulp(double)>(1.7976931348623157E308)";
    "$d0 = staticinvoke <java.lang.Math: double ulp(double)>(1.7976931348623157E308)"->"specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0)";
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0)"->"$r2 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>";
    "$r2 = <javaT.lang.Double.ParseDouble: java.math.BigDecimal HALF>"->"$r3 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2)";
    "$r3 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2)"->"$r4 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r3)";
    "$r4 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r3)"->"$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r5)";
    "staticinvoke <javaT.lang.Double.ParseDouble: void check(java.lang.String)>($r5)"->"return";
}
