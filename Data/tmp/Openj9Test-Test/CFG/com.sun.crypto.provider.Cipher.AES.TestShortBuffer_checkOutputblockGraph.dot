digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] expected>;
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"got: \");
$r6 = new java.math.BigInteger;
$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
specialinvoke $r6.<java.math.BigInteger: void <init>(byte[])>($r7);
$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expect: \");
$r13 = new java.math.BigInteger;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] expected>;
specialinvoke $r13.<java.math.BigInteger: void <init>(byte[])>($r14);
$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r17 = new java.lang.Exception;
specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>(\"Generated different outputs\");
throw $r17;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] expected>;
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"got: \");
$r6 = new java.math.BigInteger;
$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
specialinvoke $r6.<java.math.BigInteger: void <init>(byte[])>($r7);
$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expect: \");
$r13 = new java.math.BigInteger;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] expected>;
specialinvoke $r13.<java.math.BigInteger: void <init>(byte[])>($r14);
$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r17 = new java.lang.Exception;
specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>(\"Generated different outputs\");
throw $r17;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] expected>;
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
