digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
z1 := @parameter2: boolean;
z0 = virtualinvoke r0.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r1);
if z0 != z1 goto $b1 = 1;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$b1 = 0;
goto [?= b0 = $b1];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$b1 = 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b0 = $b1;
if b0 != 1 goto return b0;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" .equals(\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r11);
"
    "Block 5:
[preds: 3 4 ] [succs: ]
return b0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
z1 := @parameter2: boolean;
z0 = virtualinvoke r0.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r1);
if z0 != z1 goto $b1 = 1;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$b1 = 0;
goto [?= b0 = $b1];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
z1 := @parameter2: boolean;
z0 = virtualinvoke r0.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r1);
if z0 != z1 goto $b1 = 1;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$b1 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$b1 = 0;
goto [?= b0 = $b1];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b0 = $b1;
if b0 != 1 goto return b0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$b1 = 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b0 = $b1;
if b0 != 1 goto return b0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b0 = $b1;
if b0 != 1 goto return b0;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" .equals(\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r11);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
b0 = $b1;
if b0 != 1 goto return b0;
"->"Block 5:
[preds: 3 4 ] [succs: ]
return b0;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" .equals(\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") => \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r11);
"->"Block 5:
[preds: 3 4 ] [succs: ]
return b0;
";
}
