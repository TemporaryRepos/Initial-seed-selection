digraph "unitGraph" {
    "r9 := @this: javaT.text.Format.MessageFormat.MessageTest"
    "$r0 = newarray (java.lang.Object)[4]"
    "$r1 = new java.lang.Double"
    "specialinvoke $r1.<java.lang.Double: void <init>(double)>(1.0)"
    "$r0[0] = $r1"
    "$r2 = new java.lang.Double"
    "specialinvoke $r2.<java.lang.Double: void <init>(double)>(3456.0)"
    "$r0[1] = $r2"
    "$r0[2] = \"Disk\""
    "$r3 = new java.util.Date"
    "specialinvoke $r3.<java.util.Date: void <init>(long)>(10000000000L)"
    "$r0[3] = $r3"
    "r4 = $r0"
    "$r5 = newarray (java.lang.String)[9]"
    "$r5[0] = \"Quotes \'\', \'{\', \'a\' {0} \'{0}\'\""
    "$r5[1] = \"Quotes \'\', \'{\', \'a\' {0,number} \'{0}\'\""
    "$r5[2] = \"\'{\'1,number,\'#\',##} {1,number,\'#\',##}\""
    "$r5[3] = \"There are {1} files on {2} at {3}\""
    "$r5[4] = \"On {2}, there are {1} files, with {0,number,currency}.\""
    "$r5[5] = \"\'{1,number,percent}\', {1,number,percent}, \""
    "$r5[6] = \"\'{1,date,full}\', {1,date,full}, \""
    "$r5[7] = \"\'{3,date,full}\', {3,date,full}, \""
    "$r5[8] = \"\'{1,number,#,##}\' {1,number,#,##}\""
    "r6 = $r5"
    "i3 = 0"
    "$i0 = lengthof r6"
    "if i3 >= $i0 goto return"
    "r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"
    "$r8 = <java.util.Locale: java.util.Locale US>"
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r8)"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>(\"\")"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat in:  \")"
    "$r13 = r6[i3]"
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r15)"
    "$r16 = new java.text.MessageFormat"
    "$r17 = r6[i3]"
    "specialinvoke $r16.<java.text.MessageFormat: void <init>(java.lang.String)>($r17)"
    "r50 = $r16"
    "$r18 = new java.lang.StringBuilder"
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat out: \")"
    "$r21 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String toPattern()>()"
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r23)"
    "r24 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r4)"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Result:  \")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r29)"
    "r30 = virtualinvoke r50.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>(r24)"
    "i4 = 0"
    "$i1 = lengthof r4"
    "if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"
    "r31 = r4[i4]"
    "r51 = null"
    "$i2 = lengthof r30"
    "if i4 >= $i2 goto (branch)"
    "r51 = r30[i4]"
    "if r31 != null goto (branch)"
    "if r51 != null goto $r32 = new java.lang.StringBuilder"
    "if r31 == null goto i4 = i4 + 1"
    "$z0 = virtualinvoke r31.<java.lang.Object: boolean equals(java.lang.Object)>(r51)"
    "if $z0 != 0 goto i4 = i4 + 1"
    "$r32 = new java.lang.StringBuilder"
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" old: \")"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r38)"
    "$r39 = new java.lang.StringBuilder"
    "specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" new: \")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r45)"
    "i4 = i4 + 1"
    "goto [?= $i1 = lengthof r4]"
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"
    "goto [?= i3 = i3 + 1]"
    "$r48 := @caughtexception"
    "r52 = $r48"
    "$r49 = new java.lang.RuntimeException"
    "specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error: MessageFormat.parse throws ParseException\")"
    "throw $r49"
    "$r46 := @caughtexception"
    "r47 = $r46"
    "throw r47"
    "i3 = i3 + 1"
    "goto [?= $i0 = lengthof r6]"
    "return"
    "r9 := @this: javaT.text.Format.MessageFormat.MessageTest"->"$r0 = newarray (java.lang.Object)[4]";
    "$r0 = newarray (java.lang.Object)[4]"->"$r1 = new java.lang.Double";
    "$r1 = new java.lang.Double"->"specialinvoke $r1.<java.lang.Double: void <init>(double)>(1.0)";
    "specialinvoke $r1.<java.lang.Double: void <init>(double)>(1.0)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = new java.lang.Double";
    "$r2 = new java.lang.Double"->"specialinvoke $r2.<java.lang.Double: void <init>(double)>(3456.0)";
    "specialinvoke $r2.<java.lang.Double: void <init>(double)>(3456.0)"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r0[2] = \"Disk\"";
    "$r0[2] = \"Disk\""->"$r3 = new java.util.Date";
    "$r3 = new java.util.Date"->"specialinvoke $r3.<java.util.Date: void <init>(long)>(10000000000L)";
    "specialinvoke $r3.<java.util.Date: void <init>(long)>(10000000000L)"->"$r0[3] = $r3";
    "$r0[3] = $r3"->"r4 = $r0";
    "r4 = $r0"->"$r5 = newarray (java.lang.String)[9]";
    "$r5 = newarray (java.lang.String)[9]"->"$r5[0] = \"Quotes \'\', \'{\', \'a\' {0} \'{0}\'\"";
    "$r5[0] = \"Quotes \'\', \'{\', \'a\' {0} \'{0}\'\""->"$r5[1] = \"Quotes \'\', \'{\', \'a\' {0,number} \'{0}\'\"";
    "$r5[1] = \"Quotes \'\', \'{\', \'a\' {0,number} \'{0}\'\""->"$r5[2] = \"\'{\'1,number,\'#\',##} {1,number,\'#\',##}\"";
    "$r5[2] = \"\'{\'1,number,\'#\',##} {1,number,\'#\',##}\""->"$r5[3] = \"There are {1} files on {2} at {3}\"";
    "$r5[3] = \"There are {1} files on {2} at {3}\""->"$r5[4] = \"On {2}, there are {1} files, with {0,number,currency}.\"";
    "$r5[4] = \"On {2}, there are {1} files, with {0,number,currency}.\""->"$r5[5] = \"\'{1,number,percent}\', {1,number,percent}, \"";
    "$r5[5] = \"\'{1,number,percent}\', {1,number,percent}, \""->"$r5[6] = \"\'{1,date,full}\', {1,date,full}, \"";
    "$r5[6] = \"\'{1,date,full}\', {1,date,full}, \""->"$r5[7] = \"\'{3,date,full}\', {3,date,full}, \"";
    "$r5[7] = \"\'{3,date,full}\', {3,date,full}, \""->"$r5[8] = \"\'{1,number,#,##}\' {1,number,#,##}\"";
    "$r5[8] = \"\'{1,number,#,##}\' {1,number,#,##}\""->"r6 = $r5";
    "r6 = $r5"->"i3 = 0";
    "i3 = 0"->"$i0 = lengthof r6";
    "$i0 = lengthof r6"->"if i3 >= $i0 goto return";
    "if i3 >= $i0 goto return"->"r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()";
    "if i3 >= $i0 goto return"->"return";
    "r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"->"$r48 := @caughtexception";
    "r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"->"$r46 := @caughtexception";
    "r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"->"$r8 = <java.util.Locale: java.util.Locale US>";
    "$r8 = <java.util.Locale: java.util.Locale US>"->"$r48 := @caughtexception";
    "$r8 = <java.util.Locale: java.util.Locale US>"->"$r46 := @caughtexception";
    "$r8 = <java.util.Locale: java.util.Locale US>"->"staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r8)";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r8)"->"$r48 := @caughtexception";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r8)"->"$r46 := @caughtexception";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r8)"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>(\"\")";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>(\"\")"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>(\"\")"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>(\"\")"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "$r10 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r48 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r46 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat in:  \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat in:  \")"->"$r48 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat in:  \")"->"$r46 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat in:  \")"->"$r13 = r6[i3]";
    "$r13 = r6[i3]"->"$r48 := @caughtexception";
    "$r13 = r6[i3]"->"$r46 := @caughtexception";
    "$r13 = r6[i3]"->"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)";
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"->"$r48 := @caughtexception";
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"->"$r46 := @caughtexception";
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r15)";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r15)"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r15)"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r15)"->"$r16 = new java.text.MessageFormat";
    "$r16 = new java.text.MessageFormat"->"$r48 := @caughtexception";
    "$r16 = new java.text.MessageFormat"->"$r46 := @caughtexception";
    "$r16 = new java.text.MessageFormat"->"$r17 = r6[i3]";
    "$r17 = r6[i3]"->"$r48 := @caughtexception";
    "$r17 = r6[i3]"->"$r46 := @caughtexception";
    "$r17 = r6[i3]"->"specialinvoke $r16.<java.text.MessageFormat: void <init>(java.lang.String)>($r17)";
    "specialinvoke $r16.<java.text.MessageFormat: void <init>(java.lang.String)>($r17)"->"$r48 := @caughtexception";
    "specialinvoke $r16.<java.text.MessageFormat: void <init>(java.lang.String)>($r17)"->"$r46 := @caughtexception";
    "specialinvoke $r16.<java.text.MessageFormat: void <init>(java.lang.String)>($r17)"->"r50 = $r16";
    "r50 = $r16"->"$r48 := @caughtexception";
    "r50 = $r16"->"$r46 := @caughtexception";
    "r50 = $r16"->"$r18 = new java.lang.StringBuilder";
    "$r18 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "$r18 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "$r18 = new java.lang.StringBuilder"->"specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r48 := @caughtexception";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r46 := @caughtexception";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat out: \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat out: \")"->"$r48 := @caughtexception";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat out: \")"->"$r46 := @caughtexception";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Pat out: \")"->"$r21 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String toPattern()>()";
    "$r21 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String toPattern()>()"->"$r48 := @caughtexception";
    "$r21 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String toPattern()>()"->"$r46 := @caughtexception";
    "$r21 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String toPattern()>()"->"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r48 := @caughtexception";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r46 := @caughtexception";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r23)";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r23)"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r23)"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r23)"->"r24 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r4)";
    "r24 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r4)"->"$r48 := @caughtexception";
    "r24 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r4)"->"$r46 := @caughtexception";
    "r24 = virtualinvoke r50.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r4)"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "$r25 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r48 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r46 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Result:  \")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Result:  \")"->"$r48 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Result:  \")"->"$r46 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Result:  \")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"->"$r48 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"->"$r46 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r29)";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r29)"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r29)"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r29)"->"r30 = virtualinvoke r50.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>(r24)";
    "r30 = virtualinvoke r50.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>(r24)"->"$r48 := @caughtexception";
    "r30 = virtualinvoke r50.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>(r24)"->"$r46 := @caughtexception";
    "r30 = virtualinvoke r50.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>(r24)"->"i4 = 0";
    "i4 = 0"->"$r48 := @caughtexception";
    "i4 = 0"->"$r46 := @caughtexception";
    "i4 = 0"->"$i1 = lengthof r4";
    "$i1 = lengthof r4"->"$r48 := @caughtexception";
    "$i1 = lengthof r4"->"$r46 := @caughtexception";
    "$i1 = lengthof r4"->"if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)";
    "if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"r31 = r4[i4]";
    "if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)";
    "if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"$r48 := @caughtexception";
    "if i4 >= $i1 goto staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"$r46 := @caughtexception";
    "r31 = r4[i4]"->"$r48 := @caughtexception";
    "r31 = r4[i4]"->"$r46 := @caughtexception";
    "r31 = r4[i4]"->"r51 = null";
    "r51 = null"->"$r48 := @caughtexception";
    "r51 = null"->"$r46 := @caughtexception";
    "r51 = null"->"$i2 = lengthof r30";
    "$i2 = lengthof r30"->"$r48 := @caughtexception";
    "$i2 = lengthof r30"->"$r46 := @caughtexception";
    "$i2 = lengthof r30"->"if i4 >= $i2 goto (branch)";
    "if i4 >= $i2 goto (branch)"->"r51 = r30[i4]";
    "if i4 >= $i2 goto (branch)"->"if r31 != null goto (branch)";
    "if i4 >= $i2 goto (branch)"->"$r48 := @caughtexception";
    "if i4 >= $i2 goto (branch)"->"$r46 := @caughtexception";
    "r51 = r30[i4]"->"$r48 := @caughtexception";
    "r51 = r30[i4]"->"$r46 := @caughtexception";
    "r51 = r30[i4]"->"if r31 != null goto (branch)";
    "if r31 != null goto (branch)"->"if r51 != null goto $r32 = new java.lang.StringBuilder";
    "if r31 != null goto (branch)"->"if r31 == null goto i4 = i4 + 1";
    "if r31 != null goto (branch)"->"$r48 := @caughtexception";
    "if r31 != null goto (branch)"->"$r46 := @caughtexception";
    "if r51 != null goto $r32 = new java.lang.StringBuilder"->"if r31 == null goto i4 = i4 + 1";
    "if r51 != null goto $r32 = new java.lang.StringBuilder"->"$r32 = new java.lang.StringBuilder";
    "if r51 != null goto $r32 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "if r51 != null goto $r32 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "if r31 == null goto i4 = i4 + 1"->"$z0 = virtualinvoke r31.<java.lang.Object: boolean equals(java.lang.Object)>(r51)";
    "if r31 == null goto i4 = i4 + 1"->"i4 = i4 + 1";
    "if r31 == null goto i4 = i4 + 1"->"$r48 := @caughtexception";
    "if r31 == null goto i4 = i4 + 1"->"$r46 := @caughtexception";
    "$z0 = virtualinvoke r31.<java.lang.Object: boolean equals(java.lang.Object)>(r51)"->"$r48 := @caughtexception";
    "$z0 = virtualinvoke r31.<java.lang.Object: boolean equals(java.lang.Object)>(r51)"->"$r46 := @caughtexception";
    "$z0 = virtualinvoke r31.<java.lang.Object: boolean equals(java.lang.Object)>(r51)"->"if $z0 != 0 goto i4 = i4 + 1";
    "if $z0 != 0 goto i4 = i4 + 1"->"$r32 = new java.lang.StringBuilder";
    "if $z0 != 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "if $z0 != 0 goto i4 = i4 + 1"->"$r48 := @caughtexception";
    "if $z0 != 0 goto i4 = i4 + 1"->"$r46 := @caughtexception";
    "$r32 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "$r32 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "$r32 = new java.lang.StringBuilder"->"specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r48 := @caughtexception";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r46 := @caughtexception";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r48 := @caughtexception";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r46 := @caughtexception";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r48 := @caughtexception";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r46 := @caughtexception";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" old: \")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" old: \")"->"$r48 := @caughtexception";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" old: \")"->"$r46 := @caughtexception";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" old: \")"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"->"$r48 := @caughtexception";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"->"$r46 := @caughtexception";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r38)";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r38)"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r38)"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r38)"->"$r39 = new java.lang.StringBuilder";
    "$r39 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "$r39 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "$r39 = new java.lang.StringBuilder"->"specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r48 := @caughtexception";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r46 := @caughtexception";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r48 := @caughtexception";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r46 := @caughtexception";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r48 := @caughtexception";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r46 := @caughtexception";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" new: \")";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" new: \")"->"$r48 := @caughtexception";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" new: \")"->"$r46 := @caughtexception";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" new: \")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r48 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r46 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r45)";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r45)"->"$r48 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r45)"->"$r46 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Format.MessageFormat.MessageTest: void logln(java.lang.String)>($r45)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"$r48 := @caughtexception";
    "i4 = i4 + 1"->"$r46 := @caughtexception";
    "i4 = i4 + 1"->"goto [?= $i1 = lengthof r4]";
    "goto [?= $i1 = lengthof r4]"->"$r48 := @caughtexception";
    "goto [?= $i1 = lengthof r4]"->"$r46 := @caughtexception";
    "goto [?= $i1 = lengthof r4]"->"$i1 = lengthof r4";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$r48 := @caughtexception"->"r52 = $r48";
    "$r48 := @caughtexception"->"$r46 := @caughtexception";
    "r52 = $r48"->"$r49 = new java.lang.RuntimeException";
    "r52 = $r48"->"$r46 := @caughtexception";
    "$r49 = new java.lang.RuntimeException"->"specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error: MessageFormat.parse throws ParseException\")";
    "$r49 = new java.lang.RuntimeException"->"$r46 := @caughtexception";
    "specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error: MessageFormat.parse throws ParseException\")"->"throw $r49";
    "specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error: MessageFormat.parse throws ParseException\")"->"$r46 := @caughtexception";
    "throw $r49"->"$r46 := @caughtexception";
    "$r46 := @caughtexception"->"r47 = $r46";
    "$r46 := @caughtexception"->"$r46 := @caughtexception";
    "r47 = $r46"->"staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)";
    "r47 = $r46"->"$r46 := @caughtexception";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r7)"->"throw r47";
    "i3 = i3 + 1"->"goto [?= $i0 = lengthof r6]";
    "goto [?= $i0 = lengthof r6]"->"$i0 = lengthof r6";
}
