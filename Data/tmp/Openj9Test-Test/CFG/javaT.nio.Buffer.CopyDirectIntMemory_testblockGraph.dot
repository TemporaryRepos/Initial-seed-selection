digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
$i0 = virtualinvoke r1.<java.nio.IntBuffer: int capacity()>();
r2 = newarray (int)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2);
virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>(r2);
i13 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13);
$l9 = (long) $i7;
$i8 = i13 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$l12 = (long) $i11;
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12);
i13 = i13 + 1;
goto [?= $i1 = lengthof r2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2);
virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2);
i14 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i14 >= $i2 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r2[i14];
$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
if $i3 == $i4 goto i14 = i14 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$i5 = r2[i14];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13);
"
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i14 = i14 + 1;
goto [?= $i2 = lengthof r2];
"
    "Block 8:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
$i0 = virtualinvoke r1.<java.nio.IntBuffer: int capacity()>();
r2 = newarray (int)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2);
virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>(r2);
i13 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13);
$l9 = (long) $i7;
$i8 = i13 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$l12 = (long) $i11;
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12);
i13 = i13 + 1;
goto [?= $i1 = lengthof r2];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2);
virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2);
i14 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13);
$l9 = (long) $i7;
$i8 = i13 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$l12 = (long) $i11;
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12);
i13 = i13 + 1;
goto [?= $i1 = lengthof r2];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2);
virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2);
i14 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i14 >= $i2 goto return;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i14 >= $i2 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r2[i14];
$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
if $i3 == $i4 goto i14 = i14 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i14 >= $i2 goto return;
"->"Block 8:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r2[i14];
$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
if $i3 == $i4 goto i14 = i14 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$i5 = r2[i14];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13);
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r2[i14];
$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
if $i3 == $i4 goto i14 = i14 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i14 = i14 + 1;
goto [?= $i2 = lengthof r2];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$i5 = r2[i14];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13);
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i14 = i14 + 1;
goto [?= $i2 = lengthof r2];
";
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i14 = i14 + 1;
goto [?= $i2 = lengthof r2];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i14 >= $i2 goto return;
";
}
