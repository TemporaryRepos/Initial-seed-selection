digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.Format[];
i0 := @parameter1: int;
r2 := @parameter2: java.text.Format;
r1 = r0[i0];
if r1 != r2 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: ]
return;
"
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
if r1 == null goto $r3 = new java.lang.RuntimeException;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $r3 = new java.lang.RuntimeException;
"
    "Block 4:
[preds: 3 ] [succs: ]
return;
"
    "Block 5:
[preds: 2 3 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"found unexpected subformat for argument \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\n expected: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   actual: \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
throw $r3;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.Format[];
i0 := @parameter1: int;
r2 := @parameter2: java.text.Format;
r1 = r0[i0];
if r1 != r2 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: ]
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.Format[];
i0 := @parameter1: int;
r2 := @parameter2: java.text.Format;
r1 = r0[i0];
if r1 != r2 goto (branch);
"->"Block 2:
[preds: 0 ] [succs: 3 5 ]
if r1 == null goto $r3 = new java.lang.RuntimeException;
";
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
if r1 == null goto $r3 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $r3 = new java.lang.RuntimeException;
";
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
if r1 == null goto $r3 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 2 3 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"found unexpected subformat for argument \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\n expected: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   actual: \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
throw $r3;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $r3 = new java.lang.RuntimeException;
"->"Block 4:
[preds: 3 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);
if $z0 == 0 goto $r3 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 2 3 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"found unexpected subformat for argument \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\n expected: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n   actual: \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
throw $r3;
";
}
