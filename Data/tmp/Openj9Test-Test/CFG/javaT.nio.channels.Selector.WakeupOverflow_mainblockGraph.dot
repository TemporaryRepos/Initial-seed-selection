digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
r4 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"
    "Block 6:
[preds: 2 ] [succs: 8 ]
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
goto [?= return];
"
    "Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
"
    "Block 8:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
r4 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
";
    "Block 0:
[preds: ] [succs: 1 7 ]
r4 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"->"Block 6:
[preds: 2 ] [succs: 8 ]
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
goto [?= return];
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>();
";
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
throw r3;
";
    "Block 6:
[preds: 2 ] [succs: 8 ]
virtualinvoke r0.<java.nio.channels.Selector: void close()>();
goto [?= return];
"->"Block 8:
[preds: 6 ] [succs: ]
return;
";
}
