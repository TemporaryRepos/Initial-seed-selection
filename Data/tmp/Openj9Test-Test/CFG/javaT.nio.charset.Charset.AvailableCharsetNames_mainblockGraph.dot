digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>();
$r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Set keySet()>();
r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.lang.String) $r3;
r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);
$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);
if $z1 != 0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: ]
$r7 = new java.lang.Exception;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Charset name mismatch - expected \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \");
$r12 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r14);
throw $r7;
"
    "Block 4:
[preds: 2 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>();
$r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Set keySet()>();
r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.lang.String) $r3;
r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);
$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);
if $z1 != 0 goto (branch);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.lang.String) $r3;
r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);
$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);
if $z1 != 0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: ]
$r7 = new java.lang.Exception;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Charset name mismatch - expected \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \");
$r12 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r14);
throw $r7;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.lang.String) $r3;
r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4);
$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>();
$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);
if $z1 != 0 goto (branch);
"->"Block 4:
[preds: 2 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 2 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
}
