digraph "unitGraph" {
    "r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600)"
    "r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()"
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"
    "$i0 = virtualinvoke r1.<java.nio.IntBuffer: int capacity()>()"
    "r2 = newarray (int)[$i0]"
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2)"
    "virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>(r2)"
    "i13 = 0"
    "$i1 = lengthof r2"
    "if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"
    "$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13)"
    "$l9 = (long) $i7"
    "$i8 = i13 + 1"
    "$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8)"
    "$i11 = (int) $l10"
    "$l12 = (long) $i11"
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12)"
    "i13 = i13 + 1"
    "goto [?= $i1 = lengthof r2]"
    "virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2)"
    "i14 = 0"
    "$i2 = lengthof r2"
    "if i14 >= $i2 goto return"
    "$i3 = r2[i14]"
    "$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)"
    "if $i3 == $i4 goto i14 = i14 + 1"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\")"
    "$i5 = r2[i14]"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\")"
    "$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13)"
    "i14 = i14 + 1"
    "goto [?= $i2 = lengthof r2]"
    "return"
    "r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600)"->"r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()";
    "r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"->"$i0 = virtualinvoke r1.<java.nio.IntBuffer: int capacity()>()";
    "$i0 = virtualinvoke r1.<java.nio.IntBuffer: int capacity()>()"->"r2 = newarray (int)[$i0]";
    "r2 = newarray (int)[$i0]"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2)";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2)"->"virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>(r2)";
    "virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>(r2)"->"i13 = 0";
    "i13 = 0"->"$i1 = lengthof r2";
    "$i1 = lengthof r2"->"if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)";
    "if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"->"$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13)";
    "if i13 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)";
    "$i7 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i13)"->"$l9 = (long) $i7";
    "$l9 = (long) $i7"->"$i8 = i13 + 1";
    "$i8 = i13 + 1"->"$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8)";
    "$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: long ic(int)>($i8)"->"$i11 = (int) $l10";
    "$i11 = (int) $l10"->"$l12 = (long) $i11";
    "$l12 = (long) $i11"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12)";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void ck(java.nio.Buffer,long,long)>(r1, $l9, $l12)"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= $i1 = lengthof r2]";
    "goto [?= $i1 = lengthof r2]"->"$i1 = lengthof r2";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(java.nio.IntBuffer)>(r1)"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2)";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void init(int[])>(r2)"->"virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2)";
    "virtualinvoke r1.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r2)"->"i14 = 0";
    "i14 = 0"->"$i2 = lengthof r2";
    "$i2 = lengthof r2"->"if i14 >= $i2 goto return";
    "if i14 >= $i2 goto return"->"$i3 = r2[i14]";
    "if i14 >= $i2 goto return"->"return";
    "$i3 = r2[i14]"->"$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)";
    "$i4 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)"->"if $i3 == $i4 goto i14 = i14 + 1";
    "if $i3 == $i4 goto i14 = i14 + 1"->"$r5 = new java.lang.StringBuilder";
    "if $i3 == $i4 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\")"->"$i5 = r2[i14]";
    "$i5 = r2[i14]"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\")"->"$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)";
    "$i6 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i14)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13)";
    "staticinvoke <javaT.nio.Buffer.CopyDirectIntMemory: void fail(java.lang.String)>($r13)"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= $i2 = lengthof r2]";
    "goto [?= $i2 = lengthof r2]"->"$i2 = lengthof r2";
}
