digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$r0 = new java.lang.String"
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-2147483648\")"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r0, -2147483648)"
    "$r1 = new java.lang.String"
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"2147483647\")"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r1, 2147483647)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"10\", 10)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0x10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0X10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"010\", 8)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"#10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+10\", 10)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0x10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0X10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+010\", 8)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+#10\", 16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-10\", -10)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0x10\", -16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0X10\", -16)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-010\", -8)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-#10\", -16)"
    "$r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483648L)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r2, -2147483648)"
    "$r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483647L)"
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r3, 2147483647)"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Integer.decode allows negative sign in wrong position.\")"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Integer.decode allows positive sign in wrong position.\")"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")"
    "$r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483649L)"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")"
    "$r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483648L)"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")"
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")"
    "staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(null)"
    "$r7 = new java.lang.RuntimeException"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer.decode(null) expected to throw NPE\")"
    "throw $r7"
    "$r8 := @caughtexception"
    "r9 = $r8"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$r0 = new java.lang.String";
    "$r0 = new java.lang.String"->"specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-2147483648\")";
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"-2147483648\")"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r0, -2147483648)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r0, -2147483648)"->"$r1 = new java.lang.String";
    "$r1 = new java.lang.String"->"specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"2147483647\")";
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"2147483647\")"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r1, 2147483647)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r1, 2147483647)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"10\", 10)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"10\", 10)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0x10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0x10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0X10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"0X10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"010\", 8)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"010\", 8)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"#10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"#10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+10\", 10)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+10\", 10)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0x10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0x10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0X10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+0X10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+010\", 8)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+010\", 8)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+#10\", 16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"+#10\", 16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-10\", -10)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-10\", -10)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0x10\", -16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0x10\", -16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0X10\", -16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-0X10\", -16)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-010\", -8)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-010\", -8)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-#10\", -16)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>(\"-#10\", -16)"->"$r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483648L)";
    "$r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483648L)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r2, -2147483648)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r2, -2147483648)"->"$r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483647L)";
    "$r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483647L)"->"staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r3, 2147483647)";
    "staticinvoke <javaT.lang.Integer.Decode: void check(java.lang.String,int)>($r3, 2147483647)"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Integer.decode allows negative sign in wrong position.\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x-10\", \"Integer.decode allows negative sign in wrong position.\")"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Integer.decode allows positive sign in wrong position.\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"0x+10\", \"Integer.decode allows positive sign in wrong position.\")"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"+\", \"Raw plus sign allowed.\")"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"-\", \"Raw minus sign allowed.\")"->"$r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483649L)";
    "$r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-2147483649L)"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r4, \"Out of range\")"->"$r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483648L)";
    "$r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(2147483648L)"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>($r5, \"Out of range\")"->"staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")"->"staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(null)";
    "staticinvoke <javaT.lang.Integer.Decode: void checkFailure(java.lang.String,java.lang.String)>(\"\", \"Empty String\")"->"$r8 := @caughtexception";
    "staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(null)"->"$r7 = new java.lang.RuntimeException";
    "staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(null)"->"$r8 := @caughtexception";
    "$r7 = new java.lang.RuntimeException"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer.decode(null) expected to throw NPE\")";
    "$r7 = new java.lang.RuntimeException"->"$r8 := @caughtexception";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer.decode(null) expected to throw NPE\")"->"throw $r7";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Integer.decode(null) expected to throw NPE\")"->"$r8 := @caughtexception";
    "throw $r7"->"$r8 := @caughtexception";
    "$r8 := @caughtexception"->"r9 = $r8";
    "r9 = $r8"->"return";
}
