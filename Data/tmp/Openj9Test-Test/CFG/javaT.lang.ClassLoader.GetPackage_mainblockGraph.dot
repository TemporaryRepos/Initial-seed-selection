digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r0.<javaT.lang.ClassLoader.TestClassLoader: void <init>()>();
r1 = $r0;
$r2 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r2.<javaT.lang.ClassLoader.TestClassLoader: void <init>(java.lang.ClassLoader)>(r1);
r3 = $r2;
virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
virtualinvoke r1.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
$z0 = virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: boolean testPackageView(java.lang.String)>(\"foo\");
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Inconsistent packages view\");
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r0.<javaT.lang.ClassLoader.TestClassLoader: void <init>()>();
r1 = $r0;
$r2 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r2.<javaT.lang.ClassLoader.TestClassLoader: void <init>(java.lang.ClassLoader)>(r1);
r3 = $r2;
virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
virtualinvoke r1.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
$z0 = virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: boolean testPackageView(java.lang.String)>(\"foo\");
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Inconsistent packages view\");
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r0.<javaT.lang.ClassLoader.TestClassLoader: void <init>()>();
r1 = $r0;
$r2 = new javaT.lang.ClassLoader.TestClassLoader;
specialinvoke $r2.<javaT.lang.ClassLoader.TestClassLoader: void <init>(java.lang.ClassLoader)>(r1);
r3 = $r2;
virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
virtualinvoke r1.<javaT.lang.ClassLoader.TestClassLoader: java.lang.Package defineEmptyPackage(java.lang.String)>(\"foo\");
$z0 = virtualinvoke r3.<javaT.lang.ClassLoader.TestClassLoader: boolean testPackageView(java.lang.String)>(\"foo\");
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
