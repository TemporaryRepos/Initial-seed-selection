digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.jar.Attributes$Name"
    "specialinvoke $r0.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"\")"
    "r4 = $r0"
    "$r1 = new java.lang.Exception"
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"empty string should be rejected\")"
    "throw $r1"
    "$r2 := @caughtexception"
    "r5 = $r2"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"$r0 = new java.util.jar.Attributes$Name";
    "r3 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "$r0 = new java.util.jar.Attributes$Name"->"specialinvoke $r0.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"\")";
    "$r0 = new java.util.jar.Attributes$Name"->"$r2 := @caughtexception";
    "specialinvoke $r0.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"\")"->"r4 = $r0";
    "specialinvoke $r0.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"\")"->"$r2 := @caughtexception";
    "r4 = $r0"->"$r1 = new java.lang.Exception";
    "r4 = $r0"->"$r2 := @caughtexception";
    "$r1 = new java.lang.Exception"->"specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"empty string should be rejected\")";
    "$r1 = new java.lang.Exception"->"$r2 := @caughtexception";
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"empty string should be rejected\")"->"throw $r1";
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"empty string should be rejected\")"->"$r2 := @caughtexception";
    "throw $r1"->"$r2 := @caughtexception";
    "$r2 := @caughtexception"->"r5 = $r2";
    "r5 = $r2"->"return";
}
