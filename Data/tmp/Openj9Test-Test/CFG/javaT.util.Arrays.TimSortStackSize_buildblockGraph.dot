digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
r0 := @parameter2: java.util.ArrayDeque;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r0.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r1);
if i1 >= 33 goto $i2 = i1 + 2;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
virtualinvoke r0.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r11);
return i1;
"
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
$i2 = i1 + 2;
i5 = $i2 / 2;
if i1 < 51 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i5 >= 33 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 14 ]
i5 = 33;
goto [?= $i6 = i1 - i5];
"
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
if i1 < 85 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if i5 >= 51 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 14 ]
i5 = 51;
goto [?= $i6 = i1 - i5];
"
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i1 < 137 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i5 >= 85 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 14 ]
i5 = 85;
goto [?= $i6 = i1 - i5];
"
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i1 < 223 goto $i6 = i1 - i5;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i5 >= 137 goto $i6 = i1 - i5;
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
i5 = 137;
"
    "Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
"
    "Block 15:
[preds: 14 ] [succs: ]
$r2 = new java.lang.AssertionError;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);
throw $r2;
"
    "Block 16:
[preds: 14 ] [succs: ]
$i3 = i1 - i5;
$i4 = staticinvoke <javaT.util.Arrays.TimSortStackSize: int build(int,int,java.util.ArrayDeque)>(i5, $i3, r0);
return $i4;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
r0 := @parameter2: java.util.ArrayDeque;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r0.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r1);
if i1 >= 33 goto $i2 = i1 + 2;
"->"Block 1:
[preds: 0 ] [succs: ]
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
virtualinvoke r0.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r11);
return i1;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
r0 := @parameter2: java.util.ArrayDeque;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r0.<java.util.ArrayDeque: void addFirst(java.lang.Object)>($r1);
if i1 >= 33 goto $i2 = i1 + 2;
"->"Block 2:
[preds: 0 ] [succs: 3 5 ]
$i2 = i1 + 2;
i5 = $i2 / 2;
if i1 < 51 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
$i2 = i1 + 2;
i5 = $i2 / 2;
if i1 < 51 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
if i5 >= 33 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 5 ]
$i2 = i1 + 2;
i5 = $i2 / 2;
if i1 < 51 goto (branch);
"->"Block 5:
[preds: 2 3 ] [succs: 6 8 ]
if i1 < 85 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i5 >= 33 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 14 ]
i5 = 33;
goto [?= $i6 = i1 - i5];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i5 >= 33 goto (branch);
"->"Block 5:
[preds: 2 3 ] [succs: 6 8 ]
if i1 < 85 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 14 ]
i5 = 33;
goto [?= $i6 = i1 - i5];
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
if i1 < 85 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
if i5 >= 51 goto (branch);
";
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
if i1 < 85 goto (branch);
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i1 < 137 goto (branch);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if i5 >= 51 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 14 ]
i5 = 51;
goto [?= $i6 = i1 - i5];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if i5 >= 51 goto (branch);
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i1 < 137 goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 14 ]
i5 = 51;
goto [?= $i6 = i1 - i5];
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i1 < 137 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
if i5 >= 85 goto (branch);
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i1 < 137 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i1 < 223 goto $i6 = i1 - i5;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i5 >= 85 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 14 ]
i5 = 85;
goto [?= $i6 = i1 - i5];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i5 >= 85 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i1 < 223 goto $i6 = i1 - i5;
";
    "Block 10:
[preds: 9 ] [succs: 14 ]
i5 = 85;
goto [?= $i6 = i1 - i5];
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i1 < 223 goto $i6 = i1 - i5;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
if i5 >= 137 goto $i6 = i1 - i5;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i1 < 223 goto $i6 = i1 - i5;
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i5 >= 137 goto $i6 = i1 - i5;
"->"Block 13:
[preds: 12 ] [succs: 14 ]
i5 = 137;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i5 >= 137 goto $i6 = i1 - i5;
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
i5 = 137;
"->"Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
";
    "Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
"->"Block 15:
[preds: 14 ] [succs: ]
$r2 = new java.lang.AssertionError;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);
throw $r2;
";
    "Block 14:
[preds: 4 7 10 11 12 13 ] [succs: 15 16 ]
$i6 = i1 - i5;
if $i6 < i0 goto $i3 = i1 - i5;
"->"Block 16:
[preds: 14 ] [succs: ]
$i3 = i1 - i5;
$i4 = staticinvoke <javaT.util.Arrays.TimSortStackSize: int build(int,int,java.util.ArrayDeque)>(i5, $i3, r0);
return $i4;
";
}
