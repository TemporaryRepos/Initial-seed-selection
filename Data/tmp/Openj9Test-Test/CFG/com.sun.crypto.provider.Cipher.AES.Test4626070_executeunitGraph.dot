digraph "unitGraph" {
    "r19 := @this: com.sun.crypto.provider.Cipher.AES.Test4626070"
    "r2 := @parameter0: java.lang.String"
    "r5 := @parameter1: java.lang.String"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"
    "r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\")"
    "r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")"
    "virtualinvoke r9.<javax.crypto.KeyGenerator: void init(int)>(128)"
    "r10 = virtualinvoke r9.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()"
    "r20 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"
    "$r25 = (java.security.Key) r10"
    "virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(3, $r25, r20)"
    "$r26 = (java.security.Key) r10"
    "r11 = virtualinvoke r8.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26)"
    "r21 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"
    "$r27 = (java.security.Key) r10"
    "virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(4, $r27, r21)"
    "r12 = virtualinvoke r8.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r11, \"AES\", 3)"
    "$z0 = virtualinvoke r10.<java.lang.Object: boolean equals(java.lang.Object)>(r12)"
    "if $z0 != 0 goto $r14 = <java.lang.System: java.io.PrintStream out>"
    "$r23 = new java.lang.Exception"
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"key after wrap/unwrap is different from the original!\")"
    "throw $r23"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "$r24 = new java.lang.StringBuilder"
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"
    "$r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "return"
    "r19 := @this: com.sun.crypto.provider.Cipher.AES.Test4626070"->"r2 := @parameter0: java.lang.String";
    "r2 := @parameter0: java.lang.String"->"r5 := @parameter1: java.lang.String";
    "r5 := @parameter1: java.lang.String"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")";
    "$r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"->"r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\")";
    "r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\")"->"r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")";
    "r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")"->"virtualinvoke r9.<javax.crypto.KeyGenerator: void init(int)>(128)";
    "virtualinvoke r9.<javax.crypto.KeyGenerator: void init(int)>(128)"->"r10 = virtualinvoke r9.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()";
    "r10 = virtualinvoke r9.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()"->"r20 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()";
    "r20 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"->"$r25 = (java.security.Key) r10";
    "$r25 = (java.security.Key) r10"->"virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(3, $r25, r20)";
    "virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(3, $r25, r20)"->"$r26 = (java.security.Key) r10";
    "$r26 = (java.security.Key) r10"->"r11 = virtualinvoke r8.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26)";
    "r11 = virtualinvoke r8.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26)"->"r21 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()";
    "r21 = virtualinvoke r8.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"->"$r27 = (java.security.Key) r10";
    "$r27 = (java.security.Key) r10"->"virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(4, $r27, r21)";
    "virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(4, $r27, r21)"->"r12 = virtualinvoke r8.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r11, \"AES\", 3)";
    "r12 = virtualinvoke r8.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r11, \"AES\", 3)"->"$z0 = virtualinvoke r10.<java.lang.Object: boolean equals(java.lang.Object)>(r12)";
    "$z0 = virtualinvoke r10.<java.lang.Object: boolean equals(java.lang.Object)>(r12)"->"if $z0 != 0 goto $r14 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r14 = <java.lang.System: java.io.PrintStream out>"->"$r23 = new java.lang.Exception";
    "if $z0 != 0 goto $r14 = <java.lang.System: java.io.PrintStream out>"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "$r23 = new java.lang.Exception"->"specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"key after wrap/unwrap is different from the original!\")";
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"key after wrap/unwrap is different from the original!\")"->"throw $r23";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"$r24 = new java.lang.StringBuilder";
    "$r24 = new java.lang.StringBuilder"->"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"->"$r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)";
    "$r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"return";
}
