digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "<javaT.lang.Math.DivModTests: int errors> = 0"
    "staticinvoke <javaT.lang.Math.DivModTests: void testIntFloorDivMod()>()"
    "staticinvoke <javaT.lang.Math.DivModTests: void testLongFloorDivMod()>()"
    "$i0 = <javaT.lang.Math.DivModTests: int errors>"
    "if $i0 <= 0 goto return"
    "$r0 = new java.lang.RuntimeException"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$i1 = <javaT.lang.Math.DivModTests: int errors>"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" errors found in DivMod methods.\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)"
    "throw $r0"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"<javaT.lang.Math.DivModTests: int errors> = 0";
    "<javaT.lang.Math.DivModTests: int errors> = 0"->"staticinvoke <javaT.lang.Math.DivModTests: void testIntFloorDivMod()>()";
    "staticinvoke <javaT.lang.Math.DivModTests: void testIntFloorDivMod()>()"->"staticinvoke <javaT.lang.Math.DivModTests: void testLongFloorDivMod()>()";
    "staticinvoke <javaT.lang.Math.DivModTests: void testLongFloorDivMod()>()"->"$i0 = <javaT.lang.Math.DivModTests: int errors>";
    "$i0 = <javaT.lang.Math.DivModTests: int errors>"->"if $i0 <= 0 goto return";
    "if $i0 <= 0 goto return"->"$r0 = new java.lang.RuntimeException";
    "if $i0 <= 0 goto return"->"return";
    "$r0 = new java.lang.RuntimeException"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$i1 = <javaT.lang.Math.DivModTests: int errors>";
    "$i1 = <javaT.lang.Math.DivModTests: int errors>"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" errors found in DivMod methods.\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" errors found in DivMod methods.\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)"->"throw $r0";
}
