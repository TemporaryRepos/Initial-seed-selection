digraph "unitGraph" {
    "r29 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.TreeMap"
    "specialinvoke $r0.<java.util.TreeMap: void <init>()>()"
    "r1 = $r0"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"one\", $r2)"
    "virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"
    "$r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object clone()>()"
    "r6 = (java.util.TreeMap) $r5"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"two\", $r7)"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"
    "virtualinvoke r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"three\", $r9)"
    "$r11 = virtualinvoke r6.<java.util.TreeMap: java.util.Set keySet()>()"
    "r30 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"
    "$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"
    "r31 = (java.lang.String) $r21"
    "$r22 = \"one\""
    "$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31)"
    "if $z4 != 0 goto (branch)"
    "$r23 = \"three\""
    "$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31)"
    "if $z5 != 0 goto (branch)"
    "$r24 = new java.lang.IllegalStateException"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28)"
    "throw $r24"
    "goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"
    "$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"
    "r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return"
    "$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"
    "r33 = (java.lang.String) $r13"
    "$r14 = \"one\""
    "$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33)"
    "if $z2 != 0 goto (branch)"
    "$r15 = \"two\""
    "$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33)"
    "if $z3 != 0 goto (branch)"
    "$r16 = new java.lang.IllegalStateException"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20)"
    "throw $r16"
    "goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r29 := @parameter0: java.lang.String[]"->"$r0 = new java.util.TreeMap";
    "$r0 = new java.util.TreeMap"->"specialinvoke $r0.<java.util.TreeMap: void <init>()>()";
    "specialinvoke $r0.<java.util.TreeMap: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"one\", $r2)";
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"one\", $r2)"->"virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()";
    "virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"->"$r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object clone()>()";
    "$r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object clone()>()"->"r6 = (java.util.TreeMap) $r5";
    "r6 = (java.util.TreeMap) $r5"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"two\", $r7)";
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"two\", $r7)"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"->"virtualinvoke r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"three\", $r9)";
    "virtualinvoke r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"three\", $r9)"->"$r11 = virtualinvoke r6.<java.util.TreeMap: java.util.Set keySet()>()";
    "$r11 = virtualinvoke r6.<java.util.TreeMap: java.util.Set keySet()>()"->"r30 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()";
    "r30 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()";
    "if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"->"$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"->"$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()";
    "$r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"->"r31 = (java.lang.String) $r21";
    "r31 = (java.lang.String) $r21"->"$r22 = \"one\"";
    "$r22 = \"one\""->"$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31)";
    "$z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r31)"->"if $z4 != 0 goto (branch)";
    "if $z4 != 0 goto (branch)"->"$r23 = \"three\"";
    "if $z4 != 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "$r23 = \"three\""->"$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31)";
    "$z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r31)"->"if $z5 != 0 goto (branch)";
    "if $z5 != 0 goto (branch)"->"$r24 = new java.lang.IllegalStateException";
    "if $z5 != 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "$r24 = new java.lang.IllegalStateException"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28)";
    "specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28)"->"throw $r24";
    "goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$r12 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>()"->"r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()";
    "r32 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return";
    "if $z1 == 0 goto return"->"$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return"->"return";
    "$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"->"r33 = (java.lang.String) $r13";
    "r33 = (java.lang.String) $r13"->"$r14 = \"one\"";
    "$r14 = \"one\""->"$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33)";
    "$z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r33)"->"if $z2 != 0 goto (branch)";
    "if $z2 != 0 goto (branch)"->"$r15 = \"two\"";
    "if $z2 != 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]";
    "$r15 = \"two\""->"$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33)";
    "$z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r33)"->"if $z3 != 0 goto (branch)";
    "if $z3 != 0 goto (branch)"->"$r16 = new java.lang.IllegalStateException";
    "if $z3 != 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]";
    "$r16 = new java.lang.IllegalStateException"->"$r17 = new java.lang.StringBuilder";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected key: \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20)"->"throw $r16";
    "goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
}
