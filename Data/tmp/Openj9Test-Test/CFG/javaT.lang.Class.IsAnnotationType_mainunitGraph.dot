digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "b8 = 0"
    "$i0 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)"
    "i9 = b8 + $i0"
    "$i1 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/Enum;\", 0)"
    "i10 = i9 + $i1"
    "$i2 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/math/RoundingMode;\", 0)"
    "i11 = i10 + $i2"
    "$i3 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Annotation;\", 0)"
    "i12 = i11 + $i3"
    "$i4 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Retention;\", 1)"
    "i13 = i12 + $i4"
    "$i5 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/RetentionPolicy;\", 0)"
    "i14 = i13 + $i5"
    "$i6 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Target;\", 1)"
    "i15 = i14 + $i6"
    "$i7 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsAnnotationType$AnnotationPoseur;\", 0)"
    "i16 = i15 + $i7"
    "if i16 <= 0 goto return"
    "$r0 = new java.lang.RuntimeException"
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexepcted annotation status detected.\")"
    "throw $r0"
    "return"
    "r1 := @parameter0: java.lang.String[]"->"b8 = 0";
    "b8 = 0"->"$i0 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)";
    "$i0 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/String;\", 0)"->"i9 = b8 + $i0";
    "i9 = b8 + $i0"->"$i1 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/Enum;\", 0)";
    "$i1 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/Enum;\", 0)"->"i10 = i9 + $i1";
    "i10 = i9 + $i1"->"$i2 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/math/RoundingMode;\", 0)";
    "$i2 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/math/RoundingMode;\", 0)"->"i11 = i10 + $i2";
    "i11 = i10 + $i2"->"$i3 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Annotation;\", 0)";
    "$i3 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Annotation;\", 0)"->"i12 = i11 + $i3";
    "i12 = i11 + $i3"->"$i4 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Retention;\", 1)";
    "$i4 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Retention;\", 1)"->"i13 = i12 + $i4";
    "i13 = i12 + $i4"->"$i5 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/RetentionPolicy;\", 0)";
    "$i5 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/RetentionPolicy;\", 0)"->"i14 = i13 + $i5";
    "i14 = i13 + $i5"->"$i6 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Target;\", 1)";
    "$i6 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"Ljava/lang/annotation/Target;\", 1)"->"i15 = i14 + $i6";
    "i15 = i14 + $i6"->"$i7 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsAnnotationType$AnnotationPoseur;\", 0)";
    "$i7 = staticinvoke <javaT.lang.Class.IsAnnotationType: int test(java.lang.Class,boolean)>(class \"LjavaT/lang/Class/IsAnnotationType$AnnotationPoseur;\", 0)"->"i16 = i15 + $i7";
    "i16 = i15 + $i7"->"if i16 <= 0 goto return";
    "if i16 <= 0 goto return"->"$r0 = new java.lang.RuntimeException";
    "if i16 <= 0 goto return"->"return";
    "$r0 = new java.lang.RuntimeException"->"specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexepcted annotation status detected.\")";
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexepcted annotation status detected.\")"->"throw $r0";
}
