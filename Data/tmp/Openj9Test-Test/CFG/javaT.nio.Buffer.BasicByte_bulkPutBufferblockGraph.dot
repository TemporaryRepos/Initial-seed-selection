digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.ByteBuffer;
i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
$i1 = i0 + 7;
r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(7);
i5 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l2 = staticinvoke <javaT.nio.Buffer.BasicByte: long ic(int)>(i5);
$i3 = (int) $l2;
$b4 = (byte) $i3;
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(7);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r2);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.ByteBuffer;
i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
$i1 = i0 + 7;
r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(7);
i5 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$l2 = staticinvoke <javaT.nio.Buffer.BasicByte: long ic(int)>(i5);
$i3 = (int) $l2;
$b4 = (byte) $i3;
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(7);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r2);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l2 = staticinvoke <javaT.nio.Buffer.BasicByte: long ic(int)>(i5);
$i3 = (int) $l2;
$b4 = (byte) $i3;
virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
";
}
