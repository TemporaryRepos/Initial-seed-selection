digraph "unitGraph" {
    "r25 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.String)[4]"
    "$r0[0] = \"com..net\""
    "$r0[1] = \"com..\""
    "$r0[2] = \".com\""
    "$r0[3] = \".com.\""
    "r1 = $r0"
    "$r2 = newarray (java.lang.String)[4]"
    "$r2[0] = \"example.com\""
    "$r2[1] = \"com\u3002\""
    "$r2[2] = \"com.\""
    "$r2[3] = \".\""
    "r3 = $r2"
    "r26 = r1"
    "i0 = lengthof r26"
    "i1 = 0"
    "if i1 >= i0 goto r30 = r3"
    "r27 = r26[i1]"
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r27, 2)"
    "$r12 = new java.lang.Exception"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>($r16)"
    "throw $r12"
    "$r18 := @caughtexception"
    "r28 = $r18"
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(r27)"
    "$r20 = new java.lang.Exception"
    "$r21 = new java.lang.StringBuilder"
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>($r24)"
    "throw $r20"
    "$r17 := @caughtexception"
    "r29 = $r17"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "r30 = r3"
    "i2 = lengthof r30"
    "i3 = 0"
    "if i3 >= i2 goto return"
    "r31 = r30[i3]"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Convering \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8)"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r10 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r31, 2)"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "i3 = i3 + 1"
    "return"
    "r25 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.String)[4]";
    "$r0 = newarray (java.lang.String)[4]"->"$r0[0] = \"com..net\"";
    "$r0[0] = \"com..net\""->"$r0[1] = \"com..\"";
    "$r0[1] = \"com..\""->"$r0[2] = \".com\"";
    "$r0[2] = \".com\""->"$r0[3] = \".com.\"";
    "$r0[3] = \".com.\""->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (java.lang.String)[4]";
    "$r2 = newarray (java.lang.String)[4]"->"$r2[0] = \"example.com\"";
    "$r2[0] = \"example.com\""->"$r2[1] = \"com\u3002\"";
    "$r2[1] = \"com\u3002\""->"$r2[2] = \"com.\"";
    "$r2[2] = \"com.\""->"$r2[3] = \".\"";
    "$r2[3] = \".\""->"r3 = $r2";
    "r3 = $r2"->"r26 = r1";
    "r26 = r1"->"i0 = lengthof r26";
    "i0 = lengthof r26"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto r30 = r3";
    "if i1 >= i0 goto r30 = r3"->"r27 = r26[i1]";
    "if i1 >= i0 goto r30 = r3"->"r30 = r3";
    "r27 = r26[i1]"->"staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r27, 2)";
    "r27 = r26[i1]"->"$r18 := @caughtexception";
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r27, 2)"->"$r12 = new java.lang.Exception";
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r27, 2)"->"$r18 := @caughtexception";
    "$r12 = new java.lang.Exception"->"$r13 = new java.lang.StringBuilder";
    "$r12 = new java.lang.Exception"->"$r18 := @caughtexception";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "$r13 = new java.lang.StringBuilder"->"$r18 := @caughtexception";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r18 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"->"$r18 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"->"$r18 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>($r16)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r18 := @caughtexception";
    "specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>($r16)"->"throw $r12";
    "specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>($r16)"->"$r18 := @caughtexception";
    "throw $r12"->"$r18 := @caughtexception";
    "$r18 := @caughtexception"->"r28 = $r18";
    "r28 = $r18"->"staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(r27)";
    "r28 = $r18"->"$r17 := @caughtexception";
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(r27)"->"$r20 = new java.lang.Exception";
    "staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(r27)"->"$r17 := @caughtexception";
    "$r20 = new java.lang.Exception"->"$r21 = new java.lang.StringBuilder";
    "$r20 = new java.lang.Exception"->"$r17 := @caughtexception";
    "$r21 = new java.lang.StringBuilder"->"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()";
    "$r21 = new java.lang.StringBuilder"->"$r17 := @caughtexception";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r17 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected to get IllegalArgumentException for \")"->"$r17 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)"->"$r17 := @caughtexception";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>($r24)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r17 := @caughtexception";
    "specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>($r24)"->"throw $r20";
    "specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>($r24)"->"$r17 := @caughtexception";
    "throw $r20"->"$r17 := @caughtexception";
    "$r17 := @caughtexception"->"r29 = $r17";
    "r29 = $r17"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto r30 = r3";
    "r30 = r3"->"i2 = lengthof r30";
    "i2 = lengthof r30"->"i3 = 0";
    "i3 = 0"->"if i3 >= i2 goto return";
    "if i3 >= i2 goto return"->"r31 = r30[i3]";
    "if i3 >= i2 goto return"->"return";
    "r31 = r30[i3]"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Convering \")";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Convering \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8)"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r10 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r31, 2)";
    "$r10 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String,int)>(r31, 2)"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i2 goto return";
}
