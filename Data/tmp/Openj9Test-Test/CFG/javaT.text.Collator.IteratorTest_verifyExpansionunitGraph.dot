digraph "unitGraph" {
    "r8 := @this: javaT.text.Collator.IteratorTest"
    "r1 := @parameter0: java.lang.String[][]"
    "$r0 = new java.text.RuleBasedCollator"
    "$r2 = r1[0]"
    "$r3 = $r2[0]"
    "specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>($r3)"
    "r4 = $r0"
    "r5 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")"
    "i5 = 1"
    "$i0 = lengthof r1"
    "if i5 >= $i0 goto return"
    "$r6 = r1[i5]"
    "$r7 = $r6[0]"
    "virtualinvoke r5.<java.text.CollationElementIterator: void setText(java.lang.String)>($r7)"
    "i1 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()"
    "if i1 == -1 goto virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()"
    "$i4 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()"
    "if $i4 == -1 goto i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)"
    "virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"verifyExpansion: \'\")"
    "$r11 = r1[i5]"
    "$r12 = $r11[0]"
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' has multiple orders:\")"
    "$r15 = specialinvoke r8.<javaT.text.Collator.IteratorTest: java.lang.String orderString(java.text.CollationElementIterator)>(r5)"
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r17)"
    "i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)"
    "$r28 = new java.lang.Integer"
    "$r29 = r1[i5]"
    "$r30 = $r29[1]"
    "specialinvoke $r28.<java.lang.Integer: void <init>(java.lang.String)>($r30)"
    "i3 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()"
    "if i2 == i3 goto i5 = i5 + 1"
    "$r18 = new java.lang.StringBuilder"
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expansion for \'\")"
    "$r20 = r1[i5]"
    "$r21 = $r20[0]"
    "$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is wrong: expected \")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r27)"
    "i5 = i5 + 1"
    "goto [?= $i0 = lengthof r1]"
    "return"
    "r8 := @this: javaT.text.Collator.IteratorTest"->"r1 := @parameter0: java.lang.String[][]";
    "r1 := @parameter0: java.lang.String[][]"->"$r0 = new java.text.RuleBasedCollator";
    "$r0 = new java.text.RuleBasedCollator"->"$r2 = r1[0]";
    "$r2 = r1[0]"->"$r3 = $r2[0]";
    "$r3 = $r2[0]"->"specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>($r3)";
    "specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>($r3)"->"r4 = $r0";
    "r4 = $r0"->"r5 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")";
    "r5 = virtualinvoke r4.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")"->"i5 = 1";
    "i5 = 1"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if i5 >= $i0 goto return";
    "if i5 >= $i0 goto return"->"$r6 = r1[i5]";
    "if i5 >= $i0 goto return"->"return";
    "$r6 = r1[i5]"->"$r7 = $r6[0]";
    "$r7 = $r6[0]"->"virtualinvoke r5.<java.text.CollationElementIterator: void setText(java.lang.String)>($r7)";
    "virtualinvoke r5.<java.text.CollationElementIterator: void setText(java.lang.String)>($r7)"->"i1 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()";
    "i1 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()"->"if i1 == -1 goto virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()";
    "if i1 == -1 goto virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()"->"$i4 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()";
    "if i1 == -1 goto virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()"->"virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()";
    "$i4 = virtualinvoke r5.<java.text.CollationElementIterator: int next()>()"->"if $i4 == -1 goto i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)";
    "if $i4 == -1 goto i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)"->"virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()";
    "if $i4 == -1 goto i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)"->"i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)";
    "virtualinvoke r5.<java.text.CollationElementIterator: void reset()>()"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"verifyExpansion: \'\")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"verifyExpansion: \'\")"->"$r11 = r1[i5]";
    "$r11 = r1[i5]"->"$r12 = $r11[0]";
    "$r12 = $r11[0]"->"$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)";
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' has multiple orders:\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' has multiple orders:\")"->"$r15 = specialinvoke r8.<javaT.text.Collator.IteratorTest: java.lang.String orderString(java.text.CollationElementIterator)>(r5)";
    "$r15 = specialinvoke r8.<javaT.text.Collator.IteratorTest: java.lang.String orderString(java.text.CollationElementIterator)>(r5)"->"$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)";
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r17)";
    "virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r17)"->"i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)";
    "i2 = virtualinvoke r5.<java.text.CollationElementIterator: int getMaxExpansion(int)>(i1)"->"$r28 = new java.lang.Integer";
    "$r28 = new java.lang.Integer"->"$r29 = r1[i5]";
    "$r29 = r1[i5]"->"$r30 = $r29[1]";
    "$r30 = $r29[1]"->"specialinvoke $r28.<java.lang.Integer: void <init>(java.lang.String)>($r30)";
    "specialinvoke $r28.<java.lang.Integer: void <init>(java.lang.String)>($r30)"->"i3 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()";
    "i3 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()"->"if i2 == i3 goto i5 = i5 + 1";
    "if i2 == i3 goto i5 = i5 + 1"->"$r18 = new java.lang.StringBuilder";
    "if i2 == i3 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r18 = new java.lang.StringBuilder"->"specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expansion for \'\")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expansion for \'\")"->"$r20 = r1[i5]";
    "$r20 = r1[i5]"->"$r21 = $r20[0]";
    "$r21 = $r20[0]"->"$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)";
    "$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is wrong: expected \")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is wrong: expected \")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r27)";
    "virtualinvoke r8.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r27)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= $i0 = lengthof r1]";
    "goto [?= $i0 = lengthof r1]"->"$i0 = lengthof r1";
}
