digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorMod(int,int)>(i0, i1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r12 = newarray (java.lang.Object)[4];
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12[0] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r12[1] = $r14;
$r12[2] = r0;
$r12[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s; expected %s%n\", $r12);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
"
    "Block 3:
[preds: 2 ] [succs: 4 34 ]
$r9 = newarray (java.lang.Object)[4];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r9[0] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r9[1] = $r11;
$r9[2] = r2;
$r9[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorMod(%d, %d) = %s; expected %s%n\", $r9);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 34 ]
i4 = i0 / i1;
"
    "Block 5:
[preds: 4 ] [succs: 6 34 ]
$d3 = (double) i0;
"
    "Block 6:
[preds: 5 ] [succs: 7 34 ]
$d1 = (double) i0;
"
    "Block 7:
[preds: 6 ] [succs: 8 34 ]
$d0 = (double) i1;
"
    "Block 8:
[preds: 7 ] [succs: 9 34 ]
$d2 = $d1 / $d0;
"
    "Block 9:
[preds: 8 ] [succs: 10 34 ]
$d4 = staticinvoke <java.lang.Math: double floor(double)>($d2);
"
    "Block 10:
[preds: 9 ] [succs: 11 34 ]
$d5 = (double) i1;
"
    "Block 11:
[preds: 10 ] [succs: 12 34 ]
$d6 = $d4 * $d5;
"
    "Block 12:
[preds: 11 ] [succs: 13 34 ]
d7 = $d3 - $d6;
"
    "Block 13:
[preds: 12 ] [succs: 14 34 ]
i2 = (int) d7;
"
    "Block 14:
[preds: 13 ] [succs: 15 34 ]
$r3 = (java.lang.Integer) r0;
"
    "Block 15:
[preds: 14 ] [succs: 16 34 ]
$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 19 34 ]
if i2 != $i3 goto $z4 = 0;
"
    "Block 17:
[preds: 16 ] [succs: 18 34 ]
$z4 = 1;
"
    "Block 18:
[preds: 17 ] [succs: 20 34 ]
goto [?= z2 = $z4];
"
    "Block 19:
[preds: 16 ] [succs: 20 34 ]
$z4 = 0;
"
    "Block 20:
[preds: 18 19 ] [succs: 21 34 ]
z2 = $z4;
"
    "Block 21:
[preds: 20 ] [succs: 22 34 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"
    "Block 22:
[preds: 21 ] [succs: 23 34 ]
$z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
"
    "Block 23:
[preds: 22 ] [succs: 24 33 34 ]
if $z3 != 0 goto (branch);
"
    "Block 24:
[preds: 23 ] [succs: 25 34 ]
$r5 = newarray (java.lang.Object)[4];
"
    "Block 25:
[preds: 24 ] [succs: 26 34 ]
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"
    "Block 26:
[preds: 25 ] [succs: 27 34 ]
$r5[0] = $r6;
"
    "Block 27:
[preds: 26 ] [succs: 28 34 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
"
    "Block 28:
[preds: 27 ] [succs: 29 34 ]
$r5[1] = $r7;
"
    "Block 29:
[preds: 28 ] [succs: 30 34 ]
$r5[2] = r0;
"
    "Block 30:
[preds: 29 ] [succs: 31 34 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r5[3] = $r8;
"
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s differs from Math.floor(x, y): %d%n\", $r5);
"
    "Block 33:
[preds: 23 32 ] [succs: 36 ]
goto [?= return];
"
    "Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
"
    "Block 35:
[preds: 34 ] [succs: 36 ]
$r16 = newarray (java.lang.Object)[3];
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r16[0] = $r17;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r16[1] = $r18;
$r16[2] = r19;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d); unexpected %s%n\", $r16);
"
    "Block 36:
[preds: 33 34 35 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorMod(int,int)>(i0, i1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r12 = newarray (java.lang.Object)[4];
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12[0] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r12[1] = $r14;
$r12[2] = r0;
$r12[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s; expected %s%n\", $r12);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorMod(int,int)>(i0, i1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r12 = newarray (java.lang.Object)[4];
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12[0] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r12[1] = $r14;
$r12[2] = r0;
$r12[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s; expected %s%n\", $r12);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
"->"Block 3:
[preds: 2 ] [succs: 4 34 ]
$r9 = newarray (java.lang.Object)[4];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r9[0] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r9[1] = $r11;
$r9[2] = r2;
$r9[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorMod(%d, %d) = %s; expected %s%n\", $r9);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 34 ]
i4 = i0 / i1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 34 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorMod(int,int)>(i0, i1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto i4 = i0 / i1;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 3:
[preds: 2 ] [succs: 4 34 ]
$r9 = newarray (java.lang.Object)[4];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r9[0] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r9[1] = $r11;
$r9[2] = r2;
$r9[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorMod(%d, %d) = %s; expected %s%n\", $r9);
"->"Block 4:
[preds: 2 3 ] [succs: 5 34 ]
i4 = i0 / i1;
";
    "Block 3:
[preds: 2 ] [succs: 4 34 ]
$r9 = newarray (java.lang.Object)[4];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r9[0] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r9[1] = $r11;
$r9[2] = r2;
$r9[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorMod(%d, %d) = %s; expected %s%n\", $r9);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 34 ]
i4 = i0 / i1;
"->"Block 5:
[preds: 4 ] [succs: 6 34 ]
$d3 = (double) i0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 34 ]
i4 = i0 / i1;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 5:
[preds: 4 ] [succs: 6 34 ]
$d3 = (double) i0;
"->"Block 6:
[preds: 5 ] [succs: 7 34 ]
$d1 = (double) i0;
";
    "Block 5:
[preds: 4 ] [succs: 6 34 ]
$d3 = (double) i0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 6:
[preds: 5 ] [succs: 7 34 ]
$d1 = (double) i0;
"->"Block 7:
[preds: 6 ] [succs: 8 34 ]
$d0 = (double) i1;
";
    "Block 6:
[preds: 5 ] [succs: 7 34 ]
$d1 = (double) i0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 7:
[preds: 6 ] [succs: 8 34 ]
$d0 = (double) i1;
"->"Block 8:
[preds: 7 ] [succs: 9 34 ]
$d2 = $d1 / $d0;
";
    "Block 7:
[preds: 6 ] [succs: 8 34 ]
$d0 = (double) i1;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 8:
[preds: 7 ] [succs: 9 34 ]
$d2 = $d1 / $d0;
"->"Block 9:
[preds: 8 ] [succs: 10 34 ]
$d4 = staticinvoke <java.lang.Math: double floor(double)>($d2);
";
    "Block 8:
[preds: 7 ] [succs: 9 34 ]
$d2 = $d1 / $d0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 9:
[preds: 8 ] [succs: 10 34 ]
$d4 = staticinvoke <java.lang.Math: double floor(double)>($d2);
"->"Block 10:
[preds: 9 ] [succs: 11 34 ]
$d5 = (double) i1;
";
    "Block 9:
[preds: 8 ] [succs: 10 34 ]
$d4 = staticinvoke <java.lang.Math: double floor(double)>($d2);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 10:
[preds: 9 ] [succs: 11 34 ]
$d5 = (double) i1;
"->"Block 11:
[preds: 10 ] [succs: 12 34 ]
$d6 = $d4 * $d5;
";
    "Block 10:
[preds: 9 ] [succs: 11 34 ]
$d5 = (double) i1;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 11:
[preds: 10 ] [succs: 12 34 ]
$d6 = $d4 * $d5;
"->"Block 12:
[preds: 11 ] [succs: 13 34 ]
d7 = $d3 - $d6;
";
    "Block 11:
[preds: 10 ] [succs: 12 34 ]
$d6 = $d4 * $d5;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 12:
[preds: 11 ] [succs: 13 34 ]
d7 = $d3 - $d6;
"->"Block 13:
[preds: 12 ] [succs: 14 34 ]
i2 = (int) d7;
";
    "Block 12:
[preds: 11 ] [succs: 13 34 ]
d7 = $d3 - $d6;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 13:
[preds: 12 ] [succs: 14 34 ]
i2 = (int) d7;
"->"Block 14:
[preds: 13 ] [succs: 15 34 ]
$r3 = (java.lang.Integer) r0;
";
    "Block 13:
[preds: 12 ] [succs: 14 34 ]
i2 = (int) d7;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 14:
[preds: 13 ] [succs: 15 34 ]
$r3 = (java.lang.Integer) r0;
"->"Block 15:
[preds: 14 ] [succs: 16 34 ]
$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
";
    "Block 14:
[preds: 13 ] [succs: 15 34 ]
$r3 = (java.lang.Integer) r0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 15:
[preds: 14 ] [succs: 16 34 ]
$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
"->"Block 16:
[preds: 15 ] [succs: 17 19 34 ]
if i2 != $i3 goto $z4 = 0;
";
    "Block 15:
[preds: 14 ] [succs: 16 34 ]
$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 16:
[preds: 15 ] [succs: 17 19 34 ]
if i2 != $i3 goto $z4 = 0;
"->"Block 17:
[preds: 16 ] [succs: 18 34 ]
$z4 = 1;
";
    "Block 16:
[preds: 15 ] [succs: 17 19 34 ]
if i2 != $i3 goto $z4 = 0;
"->"Block 19:
[preds: 16 ] [succs: 20 34 ]
$z4 = 0;
";
    "Block 16:
[preds: 15 ] [succs: 17 19 34 ]
if i2 != $i3 goto $z4 = 0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 17:
[preds: 16 ] [succs: 18 34 ]
$z4 = 1;
"->"Block 18:
[preds: 17 ] [succs: 20 34 ]
goto [?= z2 = $z4];
";
    "Block 17:
[preds: 16 ] [succs: 18 34 ]
$z4 = 1;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 18:
[preds: 17 ] [succs: 20 34 ]
goto [?= z2 = $z4];
"->"Block 20:
[preds: 18 19 ] [succs: 21 34 ]
z2 = $z4;
";
    "Block 18:
[preds: 17 ] [succs: 20 34 ]
goto [?= z2 = $z4];
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 19:
[preds: 16 ] [succs: 20 34 ]
$z4 = 0;
"->"Block 20:
[preds: 18 19 ] [succs: 21 34 ]
z2 = $z4;
";
    "Block 19:
[preds: 16 ] [succs: 20 34 ]
$z4 = 0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 34 ]
z2 = $z4;
"->"Block 21:
[preds: 20 ] [succs: 22 34 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
";
    "Block 20:
[preds: 18 19 ] [succs: 21 34 ]
z2 = $z4;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 21:
[preds: 20 ] [succs: 22 34 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"->"Block 22:
[preds: 21 ] [succs: 23 34 ]
$z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
";
    "Block 21:
[preds: 20 ] [succs: 22 34 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 22:
[preds: 21 ] [succs: 23 34 ]
$z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
"->"Block 23:
[preds: 22 ] [succs: 24 33 34 ]
if $z3 != 0 goto (branch);
";
    "Block 22:
[preds: 21 ] [succs: 23 34 ]
$z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 23:
[preds: 22 ] [succs: 24 33 34 ]
if $z3 != 0 goto (branch);
"->"Block 24:
[preds: 23 ] [succs: 25 34 ]
$r5 = newarray (java.lang.Object)[4];
";
    "Block 23:
[preds: 22 ] [succs: 24 33 34 ]
if $z3 != 0 goto (branch);
"->"Block 33:
[preds: 23 32 ] [succs: 36 ]
goto [?= return];
";
    "Block 23:
[preds: 22 ] [succs: 24 33 34 ]
if $z3 != 0 goto (branch);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 24:
[preds: 23 ] [succs: 25 34 ]
$r5 = newarray (java.lang.Object)[4];
"->"Block 25:
[preds: 24 ] [succs: 26 34 ]
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
";
    "Block 24:
[preds: 23 ] [succs: 25 34 ]
$r5 = newarray (java.lang.Object)[4];
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 25:
[preds: 24 ] [succs: 26 34 ]
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"->"Block 26:
[preds: 25 ] [succs: 27 34 ]
$r5[0] = $r6;
";
    "Block 25:
[preds: 24 ] [succs: 26 34 ]
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 26:
[preds: 25 ] [succs: 27 34 ]
$r5[0] = $r6;
"->"Block 27:
[preds: 26 ] [succs: 28 34 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
";
    "Block 26:
[preds: 25 ] [succs: 27 34 ]
$r5[0] = $r6;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 27:
[preds: 26 ] [succs: 28 34 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
"->"Block 28:
[preds: 27 ] [succs: 29 34 ]
$r5[1] = $r7;
";
    "Block 27:
[preds: 26 ] [succs: 28 34 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 28:
[preds: 27 ] [succs: 29 34 ]
$r5[1] = $r7;
"->"Block 29:
[preds: 28 ] [succs: 30 34 ]
$r5[2] = r0;
";
    "Block 28:
[preds: 27 ] [succs: 29 34 ]
$r5[1] = $r7;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 29:
[preds: 28 ] [succs: 30 34 ]
$r5[2] = r0;
"->"Block 30:
[preds: 29 ] [succs: 31 34 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
";
    "Block 29:
[preds: 28 ] [succs: 30 34 ]
$r5[2] = r0;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 30:
[preds: 29 ] [succs: 31 34 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"->"Block 31:
[preds: 30 ] [succs: 32 34 ]
$r5[3] = $r8;
";
    "Block 30:
[preds: 29 ] [succs: 31 34 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r5[3] = $r8;
"->"Block 32:
[preds: 31 ] [succs: 33 34 ]
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s differs from Math.floor(x, y): %d%n\", $r5);
";
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r5[3] = $r8;
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s differs from Math.floor(x, y): %d%n\", $r5);
"->"Block 33:
[preds: 23 32 ] [succs: 36 ]
goto [?= return];
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d) = %s differs from Math.floor(x, y): %d%n\", $r5);
"->"Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
";
    "Block 33:
[preds: 23 32 ] [succs: 36 ]
goto [?= return];
"->"Block 36:
[preds: 33 34 35 ] [succs: ]
return;
";
    "Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
"->"Block 35:
[preds: 34 ] [succs: 36 ]
$r16 = newarray (java.lang.Object)[3];
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r16[0] = $r17;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r16[1] = $r18;
$r16[2] = r19;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d); unexpected %s%n\", $r16);
";
    "Block 34:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ] [succs: 35 36 ]
$r15 := @caughtexception;
r19 = $r15;
if i1 == 0 goto return;
"->"Block 36:
[preds: 33 34 35 ] [succs: ]
return;
";
    "Block 35:
[preds: 34 ] [succs: 36 ]
$r16 = newarray (java.lang.Object)[3];
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r16[0] = $r17;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r16[1] = $r18;
$r16[2] = r19;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorMod(%d, %d); unexpected %s%n\", $r16);
"->"Block 36:
[preds: 33 34 35 ] [succs: ]
return;
";
}
