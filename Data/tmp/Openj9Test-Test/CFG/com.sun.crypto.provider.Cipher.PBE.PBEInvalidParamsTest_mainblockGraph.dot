digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @parameter0: java.lang.String[];
$r24 = new javax.crypto.spec.PBEKeySpec;
$r1 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: char[] PASSWORD>;
specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1);
r2 = $r24;
i1 = 0;
"
    "Block 1:
[preds: 0 16 ] [succs: 2 17 ]
$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
$i0 = lengthof $r3;
if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 15 ]
$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
r6 = $r5[i1];
$r8 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=>testing \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
r12 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6);
$r28 = (java.security.spec.KeySpec) r2;
r13 = virtualinvoke r12.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\");
"
    "Block 3:
[preds: 2 ] [succs: 4 15 ]
$r15 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: javax.crypto.spec.IvParameterSpec INVALID_PARAMS>;
"
    "Block 4:
[preds: 3 ] [succs: 5 15 ]
$r29 = (java.security.Key) r13;
"
    "Block 5:
[preds: 4 ] [succs: 6 15 ]
$r30 = (java.security.spec.AlgorithmParameterSpec) $r15;
"
    "Block 6:
[preds: 5 ] [succs: 7 15 ]
virtualinvoke r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r29, $r30);
"
    "Block 7:
[preds: 6 ] [succs: 8 15 ]
$r27 = new java.lang.Exception;
"
    "Block 8:
[preds: 7 ] [succs: 9 15 ]
$r26 = new java.lang.StringBuilder;
"
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
"
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
$r18 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test Failed: expected IAPE is not thrown for \");
"
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
"
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r20);
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
throw $r27;
"
    "Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
"
    "Block 16:
[preds: 15 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>];
"
    "Block 17:
[preds: 1 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @parameter0: java.lang.String[];
$r24 = new javax.crypto.spec.PBEKeySpec;
$r1 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: char[] PASSWORD>;
specialinvoke $r24.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1);
r2 = $r24;
i1 = 0;
"->"Block 1:
[preds: 0 16 ] [succs: 2 17 ]
$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
$i0 = lengthof $r3;
if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 16 ] [succs: 2 17 ]
$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
$i0 = lengthof $r3;
if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 15 ]
$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
r6 = $r5[i1];
$r8 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=>testing \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
r12 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6);
$r28 = (java.security.spec.KeySpec) r2;
r13 = virtualinvoke r12.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\");
";
    "Block 1:
[preds: 0 16 ] [succs: 2 17 ]
$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
$i0 = lengthof $r3;
if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 17:
[preds: 1 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 15 ]
$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
r6 = $r5[i1];
$r8 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=>testing \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
r12 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6);
$r28 = (java.security.spec.KeySpec) r2;
r13 = virtualinvoke r12.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\");
"->"Block 3:
[preds: 2 ] [succs: 4 15 ]
$r15 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: javax.crypto.spec.IvParameterSpec INVALID_PARAMS>;
";
    "Block 2:
[preds: 1 ] [succs: 3 15 ]
$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
r6 = $r5[i1];
$r8 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=>testing \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
r12 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6);
$r28 = (java.security.spec.KeySpec) r2;
r13 = virtualinvoke r12.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\");
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 3:
[preds: 2 ] [succs: 4 15 ]
$r15 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: javax.crypto.spec.IvParameterSpec INVALID_PARAMS>;
"->"Block 4:
[preds: 3 ] [succs: 5 15 ]
$r29 = (java.security.Key) r13;
";
    "Block 3:
[preds: 2 ] [succs: 4 15 ]
$r15 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: javax.crypto.spec.IvParameterSpec INVALID_PARAMS>;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 4:
[preds: 3 ] [succs: 5 15 ]
$r29 = (java.security.Key) r13;
"->"Block 5:
[preds: 4 ] [succs: 6 15 ]
$r30 = (java.security.spec.AlgorithmParameterSpec) $r15;
";
    "Block 4:
[preds: 3 ] [succs: 5 15 ]
$r29 = (java.security.Key) r13;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 5:
[preds: 4 ] [succs: 6 15 ]
$r30 = (java.security.spec.AlgorithmParameterSpec) $r15;
"->"Block 6:
[preds: 5 ] [succs: 7 15 ]
virtualinvoke r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r29, $r30);
";
    "Block 5:
[preds: 4 ] [succs: 6 15 ]
$r30 = (java.security.spec.AlgorithmParameterSpec) $r15;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 6:
[preds: 5 ] [succs: 7 15 ]
virtualinvoke r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r29, $r30);
"->"Block 7:
[preds: 6 ] [succs: 8 15 ]
$r27 = new java.lang.Exception;
";
    "Block 6:
[preds: 5 ] [succs: 7 15 ]
virtualinvoke r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r29, $r30);
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 7:
[preds: 6 ] [succs: 8 15 ]
$r27 = new java.lang.Exception;
"->"Block 8:
[preds: 7 ] [succs: 9 15 ]
$r26 = new java.lang.StringBuilder;
";
    "Block 7:
[preds: 6 ] [succs: 8 15 ]
$r27 = new java.lang.Exception;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 8:
[preds: 7 ] [succs: 9 15 ]
$r26 = new java.lang.StringBuilder;
"->"Block 9:
[preds: 8 ] [succs: 10 15 ]
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
";
    "Block 8:
[preds: 7 ] [succs: 9 15 ]
$r26 = new java.lang.StringBuilder;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
"->"Block 10:
[preds: 9 ] [succs: 11 15 ]
$r18 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test Failed: expected IAPE is not thrown for \");
";
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
$r18 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test Failed: expected IAPE is not thrown for \");
"->"Block 11:
[preds: 10 ] [succs: 12 15 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
";
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
$r18 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test Failed: expected IAPE is not thrown for \");
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
"->"Block 12:
[preds: 11 ] [succs: 13 15 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r20);
";
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r20);
"->"Block 14:
[preds: 13 ] [succs: 15 ]
throw $r27;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>($r20);
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
throw $r27;
"->"Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
";
    "Block 15:
[preds: 2 3 4 5 6 7 8 9 10 11 12 13 14 ] [succs: 16 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= i1 = i1 + 1];
"->"Block 16:
[preds: 15 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>];
";
    "Block 16:
[preds: 15 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>];
"->"Block 1:
[preds: 0 16 ] [succs: 2 17 ]
$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEInvalidParamsTest: java.lang.String[] PBE_ALGOS>;
$i0 = lengthof $r3;
if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
}
