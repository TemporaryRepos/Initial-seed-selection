digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r1 = class \"LjavaT/lang/reflect/Parameter/GetAnnotatedTypeTest;\";
$r0 = newarray (java.lang.Class)[1];
$r0[0] = class \"Ljava/lang/Object;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"meth\", $r0);
$r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Parameter[] getParameters()>();
$r4 = $r3[0];
$r5 = virtualinvoke $r4.<java.lang.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>();
$r6 = interfaceinvoke $r5.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
if $r6 == class \"Ljava/lang/Object;\" goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r7 = new java.lang.RuntimeException;
specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Parameter did not have the expected annotated type\");
throw $r7;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r1 = class \"LjavaT/lang/reflect/Parameter/GetAnnotatedTypeTest;\";
$r0 = newarray (java.lang.Class)[1];
$r0[0] = class \"Ljava/lang/Object;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"meth\", $r0);
$r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Parameter[] getParameters()>();
$r4 = $r3[0];
$r5 = virtualinvoke $r4.<java.lang.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>();
$r6 = interfaceinvoke $r5.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
if $r6 == class \"Ljava/lang/Object;\" goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r7 = new java.lang.RuntimeException;
specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Parameter did not have the expected annotated type\");
throw $r7;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r1 = class \"LjavaT/lang/reflect/Parameter/GetAnnotatedTypeTest;\";
$r0 = newarray (java.lang.Class)[1];
$r0[0] = class \"Ljava/lang/Object;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"meth\", $r0);
$r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Parameter[] getParameters()>();
$r4 = $r3[0];
$r5 = virtualinvoke $r4.<java.lang.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>();
$r6 = interfaceinvoke $r5.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
if $r6 == class \"Ljava/lang/Object;\" goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
