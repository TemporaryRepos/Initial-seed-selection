digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r4 := @parameter0: java.lang.String[];
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"0\", 0L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"000000000000000000\", 0L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"1\", 1L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"-1\", -1L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"+1\", 1L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"123456789123456789\", 123456789123456789L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"+123456789123456789\", 123456789123456789L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>(\"-123456789123456789\", -123456789123456789L);
$r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-2147483648);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>($r0, -2147483648L);
$r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2147483647);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>($r1, 2147483647L);
$r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-9223372036854775808L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>($r2, -9223372036854775808L);
$r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(9223372036854775807L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithoutError(java.lang.String,long)>($r3, 9223372036854775807L);
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"-\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"+\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"--\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"++\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"-000-0\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"+000+0\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"+000-0\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"--1234567890\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"++1234567890\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"-0-12345678\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"+0+12345678\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"--12345678-12345678-12345678\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"++12345678+12345678+12345678\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"12345-\");
staticinvoke <javaT.math.BigInteger.StringConstructor: void constructWithError(java.lang.String)>(\"12345+\");
return;
"
}
