digraph "unitGraph" {
    "l0 := @parameter0: long"
    "l1 := @parameter1: long"
    "r43 = null"
    "r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"
    "l3 = staticinvoke <java.lang.StrictMath: long addExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.addExact\", l0, l1, l3, r43)"
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"
    "$r34 := @caughtexception"
    "r44 = $r34"
    "$z2 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"
    "if $z2 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"
    "$r35 = new java.lang.StringBuilder"
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44)"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r42)"
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"
    "l4 = staticinvoke <java.lang.StrictMath: long subtractExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.subtractExact\", l0, l1, l4, r43)"
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"
    "$r25 := @caughtexception"
    "r45 = $r25"
    "$z1 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"
    "if $z1 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"
    "$r26 = new java.lang.StringBuilder"
    "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.subtractExact(\")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45)"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r33)"
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"
    "l5 = staticinvoke <java.lang.StrictMath: long multiplyExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.multiplyExact\", l0, l1, l5, r43)"
    "goto [?= i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)]"
    "$r16 := @caughtexception"
    "r46 = $r16"
    "$z0 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"
    "if $z0 == 0 goto i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.multiplyExact(\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46)"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r24)"
    "i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"
    "$l7 = (long) i6"
    "$b8 = $l7 cmp l0"
    "if $b8 == 0 goto (branch)"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r8)"
    "goto [?= return]"
    "$r9 := @caughtexception"
    "r47 = $r9"
    "$i2 = virtualinvoke r43.<java.math.BigInteger: int bitLength()>()"
    "if $i2 > 32 goto return"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r15)"
    "return"
    "l0 := @parameter0: long"->"l1 := @parameter1: long";
    "l1 := @parameter1: long"->"r43 = null";
    "r43 = null"->"r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)";
    "r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"->"r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)";
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)";
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"->"$r34 := @caughtexception";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"->"l3 = staticinvoke <java.lang.StrictMath: long addExact(long,long)>(l0, l1)";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"->"$r34 := @caughtexception";
    "l3 = staticinvoke <java.lang.StrictMath: long addExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.addExact\", l0, l1, l3, r43)";
    "l3 = staticinvoke <java.lang.StrictMath: long addExact(long,long)>(l0, l1)"->"$r34 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.addExact\", l0, l1, l3, r43)"->"goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.addExact\", l0, l1, l3, r43)"->"$r34 := @caughtexception";
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"->"$r25 := @caughtexception";
    "$r34 := @caughtexception"->"r44 = $r34";
    "r44 = $r34"->"$z2 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)";
    "$z2 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"->"if $z2 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "if $z2 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r35 = new java.lang.StringBuilder";
    "if $z2 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "if $z2 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r25 := @caughtexception";
    "$r35 = new java.lang.StringBuilder"->"specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44)";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44)"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r42)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r42)"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r42)"->"$r25 := @caughtexception";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"l4 = staticinvoke <java.lang.StrictMath: long subtractExact(long,long)>(l0, l1)";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r25 := @caughtexception";
    "l4 = staticinvoke <java.lang.StrictMath: long subtractExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.subtractExact\", l0, l1, l4, r43)";
    "l4 = staticinvoke <java.lang.StrictMath: long subtractExact(long,long)>(l0, l1)"->"$r25 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.subtractExact\", l0, l1, l4, r43)"->"goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.subtractExact\", l0, l1, l4, r43)"->"$r25 := @caughtexception";
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "goto [?= r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"->"$r16 := @caughtexception";
    "$r25 := @caughtexception"->"r45 = $r25";
    "r45 = $r25"->"$z1 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)";
    "$z1 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"->"if $z1 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "if $z1 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r26 = new java.lang.StringBuilder";
    "if $z1 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "if $z1 == 0 goto r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r16 := @caughtexception";
    "$r26 = new java.lang.StringBuilder"->"specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.subtractExact(\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.subtractExact(\")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45)";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45)"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r33)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r33)"->"r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r33)"->"$r16 := @caughtexception";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"l5 = staticinvoke <java.lang.StrictMath: long multiplyExact(long,long)>(l0, l1)";
    "r43 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r16 := @caughtexception";
    "l5 = staticinvoke <java.lang.StrictMath: long multiplyExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.multiplyExact\", l0, l1, l5, r43)";
    "l5 = staticinvoke <java.lang.StrictMath: long multiplyExact(long,long)>(l0, l1)"->"$r16 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.multiplyExact\", l0, l1, l5, r43)"->"goto [?= i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long StrictMath.multiplyExact\", l0, l1, l5, r43)"->"$r16 := @caughtexception";
    "goto [?= i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)]"->"i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)";
    "goto [?= i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)]"->"$r9 := @caughtexception";
    "$r16 := @caughtexception"->"r46 = $r16";
    "r46 = $r16"->"$z0 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)";
    "$z0 = staticinvoke <javaT.lang.StrictMath.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r43)"->"if $z0 == 0 goto i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)";
    "if $z0 == 0 goto i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"->"$r17 = new java.lang.StringBuilder";
    "if $z0 == 0 goto i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"->"i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)";
    "if $z0 == 0 goto i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"->"$r9 := @caughtexception";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.multiplyExact(\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.multiplyExact(\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46)";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46)"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r24)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r24)"->"i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r24)"->"$r9 := @caughtexception";
    "i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"->"$l7 = (long) i6";
    "i6 = staticinvoke <java.lang.StrictMath: int toIntExact(long)>(l0)"->"$r9 := @caughtexception";
    "$l7 = (long) i6"->"$b8 = $l7 cmp l0";
    "$l7 = (long) i6"->"$r9 := @caughtexception";
    "$b8 = $l7 cmp l0"->"if $b8 == 0 goto (branch)";
    "$b8 = $l7 cmp l0"->"$r9 := @caughtexception";
    "if $b8 == 0 goto (branch)"->"$r2 = new java.lang.StringBuilder";
    "if $b8 == 0 goto (branch)"->"goto [?= return]";
    "if $b8 == 0 goto (branch)"->"$r9 := @caughtexception";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "$r2 = new java.lang.StringBuilder"->"$r9 := @caughtexception";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r9 := @caughtexception";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")"->"$r9 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r9 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r9 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r9 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"->"$r9 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r8)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r9 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r8)"->"goto [?= return]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r8)"->"$r9 := @caughtexception";
    "goto [?= return]"->"return";
    "$r9 := @caughtexception"->"r47 = $r9";
    "r47 = $r9"->"$i2 = virtualinvoke r43.<java.math.BigInteger: int bitLength()>()";
    "$i2 = virtualinvoke r43.<java.math.BigInteger: int bitLength()>()"->"if $i2 > 32 goto return";
    "if $i2 > 32 goto return"->"$r10 = new java.lang.StringBuilder";
    "if $i2 > 32 goto return"->"return";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.toIntExact(\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r15)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r15)"->"return";
}
