digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();
r1 = newarray (byte)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(byte[])>(r1);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r1);
i14 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r1;
if i14 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$b7 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i14);
$l9 = (long) $b7;
$i8 = i14 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$b12 = (byte) $i11;
$l13 = (long) $b12;
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void ck(java.nio.Buffer,long,long)>(r0, $l9, $l13);
i14 = i14 + 1;
goto [?= $i1 = lengthof r1];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(byte[])>(r1);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);
i15 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r1;
if i15 >= $i2 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$b3 = r1[i15];
$b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
if $b3 == $b4 goto i15 = i15 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$b5 = r1[i15];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$b6 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void fail(java.lang.String)>($r12);
"
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i15 = i15 + 1;
goto [?= $i2 = lengthof r1];
"
    "Block 8:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();
r1 = newarray (byte)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(byte[])>(r1);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r1);
i14 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r1;
if i14 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r1;
if i14 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$b7 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i14);
$l9 = (long) $b7;
$i8 = i14 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$b12 = (byte) $i11;
$l13 = (long) $b12;
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void ck(java.nio.Buffer,long,long)>(r0, $l9, $l13);
i14 = i14 + 1;
goto [?= $i1 = lengthof r1];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r1;
if i14 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(byte[])>(r1);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);
i15 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$b7 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i14);
$l9 = (long) $b7;
$i8 = i14 + 1;
$l10 = staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: long ic(int)>($i8);
$i11 = (int) $l10;
$b12 = (byte) $i11;
$l13 = (long) $b12;
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void ck(java.nio.Buffer,long,long)>(r0, $l9, $l13);
i14 = i14 + 1;
goto [?= $i1 = lengthof r1];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r1;
if i14 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(java.nio.ByteBuffer)>(r0);
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void init(byte[])>(r1);
virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);
i15 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r1;
if i15 >= $i2 goto return;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r1;
if i15 >= $i2 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$b3 = r1[i15];
$b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
if $b3 == $b4 goto i15 = i15 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r1;
if i15 >= $i2 goto return;
"->"Block 8:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$b3 = r1[i15];
$b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
if $b3 == $b4 goto i15 = i15 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$b5 = r1[i15];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$b6 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void fail(java.lang.String)>($r12);
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$b3 = r1[i15];
$b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
if $b3 == $b4 goto i15 = i15 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i15 = i15 + 1;
goto [?= $i2 = lengthof r1];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$b5 = r1[i15];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$b6 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i15);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectByteMemory: void fail(java.lang.String)>($r12);
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i15 = i15 + 1;
goto [?= $i2 = lengthof r1];
";
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i15 = i15 + 1;
goto [?= $i2 = lengthof r1];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r1;
if i15 >= $i2 goto return;
";
}
