digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r33 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader;
specialinvoke $r0.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: void <init>()>();
r1 = $r0;
r2 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Interface\");
r3 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Class\");
r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
$i0 = lengthof r5;
if $i0 == 1 goto r6 = r5[0];
"
    "Block 1:
[preds: 0 ] [succs: ]
$r28 = new java.lang.Exception;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected one method in PrivateInterfaceMethodReflectTest_Interface instead \");
$i4 = lengthof r5;
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r28.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r28;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r6 = r5[0];
i1 = virtualinvoke r6.<java.lang.reflect.Method: int getModifiers()>();
$i2 = i1 & 2;
if $i2 != 0 goto $i3 = i1 & 8;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r22 = new java.lang.Exception;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to be private\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.String)>($r27);
throw $r22;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i3 = i1 & 8;
if $i3 == 0 goto virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r16 = new java.lang.Exception;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to be instance method\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>($r21);
throw $r16;
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
i5 = 1;
"
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i5 >= 200 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r8 = newarray (java.lang.Object)[0];
$r9 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r8);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1234);
$z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
if $z0 != 0 goto i5 = i5 + 1;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r11 = new java.lang.Exception;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected 1234 from \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r15);
throw $r11;
"
    "Block 10:
[preds: 8 ] [succs: 7 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 7 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r33 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader;
specialinvoke $r0.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: void <init>()>();
r1 = $r0;
r2 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Interface\");
r3 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Class\");
r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
$i0 = lengthof r5;
if $i0 == 1 goto r6 = r5[0];
"->"Block 1:
[preds: 0 ] [succs: ]
$r28 = new java.lang.Exception;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected one method in PrivateInterfaceMethodReflectTest_Interface instead \");
$i4 = lengthof r5;
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r28.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r28;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r33 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader;
specialinvoke $r0.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: void <init>()>();
r1 = $r0;
r2 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Interface\");
r3 = virtualinvoke r1.<javaT.lang.reflect.Method.invoke.TestPrivateInterfaceMethodReflect$TestClassLoader: java.lang.Class loadClass(java.lang.String)>(\"PrivateInterfaceMethodReflectTest_Class\");
r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
$i0 = lengthof r5;
if $i0 == 1 goto r6 = r5[0];
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
r6 = r5[0];
i1 = virtualinvoke r6.<java.lang.reflect.Method: int getModifiers()>();
$i2 = i1 & 2;
if $i2 != 0 goto $i3 = i1 & 8;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r6 = r5[0];
i1 = virtualinvoke r6.<java.lang.reflect.Method: int getModifiers()>();
$i2 = i1 & 2;
if $i2 != 0 goto $i3 = i1 & 8;
"->"Block 3:
[preds: 2 ] [succs: ]
$r22 = new java.lang.Exception;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to be private\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.String)>($r27);
throw $r22;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
r6 = r5[0];
i1 = virtualinvoke r6.<java.lang.reflect.Method: int getModifiers()>();
$i2 = i1 & 2;
if $i2 != 0 goto $i3 = i1 & 8;
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$i3 = i1 & 8;
if $i3 == 0 goto virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i3 = i1 & 8;
if $i3 == 0 goto virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
"->"Block 5:
[preds: 4 ] [succs: ]
$r16 = new java.lang.Exception;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to be instance method\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>($r21);
throw $r16;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i3 = i1 & 8;
if $i3 == 0 goto virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
"->"Block 6:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
i5 = 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
i5 = 1;
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i5 >= 200 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i5 >= 200 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r8 = newarray (java.lang.Object)[0];
$r9 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r8);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1234);
$z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
if $z0 != 0 goto i5 = i5 + 1;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i5 >= 200 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 7 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r8 = newarray (java.lang.Object)[0];
$r9 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r8);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1234);
$z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
if $z0 != 0 goto i5 = i5 + 1;
"->"Block 9:
[preds: 8 ] [succs: ]
$r11 = new java.lang.Exception;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected 1234 from \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r15);
throw $r11;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r8 = newarray (java.lang.Object)[0];
$r9 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r8);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1234);
$z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
if $z0 != 0 goto i5 = i5 + 1;
"->"Block 10:
[preds: 8 ] [succs: 7 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 ] [succs: 7 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i5 >= 200 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
}
