digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(long,long)>(l0, l1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = newarray (java.lang.Object)[4];
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r6[0] = $r7;
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r6[1] = $r8;
$r6[2] = r0;
$r6[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = newarray (java.lang.Object)[4];
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r3[0] = $r4;
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r3[1] = $r5;
$r3[2] = r2;
$r3[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3);
"
    "Block 4:
[preds: 2 3 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(long,long)>(l0, l1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = newarray (java.lang.Object)[4];
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r6[0] = $r7;
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r6[1] = $r8;
$r6[2] = r0;
$r6[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
l0 := @parameter0: long;
l1 := @parameter1: long;
r1 := @parameter2: java.lang.Object;
r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(long,long)>(l0, l1);
$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r6 = newarray (java.lang.Object)[4];
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r6[0] = $r7;
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r6[1] = $r8;
$r6[2] = r0;
$r6[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = newarray (java.lang.Object)[4];
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r3[0] = $r4;
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r3[1] = $r5;
$r3[2] = r2;
$r3[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(long,long)>(l0, l1);
$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1);
if $z1 != 0 goto return;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = newarray (java.lang.Object)[4];
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
$r3[0] = $r4;
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
$r3[1] = $r5;
$r3[2] = r2;
$r3[3] = r1;
staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: long StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3);
"->"Block 4:
[preds: 2 3 ] [succs: ]
return;
";
}
