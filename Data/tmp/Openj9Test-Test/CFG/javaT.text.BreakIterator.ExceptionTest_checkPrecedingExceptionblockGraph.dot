digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.text.BreakIterator;
i0 := @parameter1: int;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0);
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r1 = new java.lang.RuntimeException];
"
    "Block 3:
[preds: 0 1 ] [succs: ]
$r7 := @caughtexception;
r8 = $r7;
return;
"
    "Block 4:
[preds: 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": preceding() doesn\'t throw an IAE with offset \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
throw $r1;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.text.BreakIterator;
i0 := @parameter1: int;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.text.BreakIterator;
i0 := @parameter1: int;
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r7 := @caughtexception;
r8 = $r7;
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0);
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r1 = new java.lang.RuntimeException];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0);
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r7 := @caughtexception;
r8 = $r7;
return;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r1 = new java.lang.RuntimeException];
"->"Block 4:
[preds: 2 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": preceding() doesn\'t throw an IAE with offset \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
throw $r1;
";
}
