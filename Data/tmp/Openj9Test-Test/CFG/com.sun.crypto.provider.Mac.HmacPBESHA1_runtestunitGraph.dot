digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String"
    "i0 := @parameter1: int"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r30 = new java.lang.StringBuilder"
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \")"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)"
    "$r6 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>"
    "if $r6 != null goto r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")"
    "$r21 = newarray (char)[4]"
    "$r21[0] = 116"
    "$r21[1] = 101"
    "$r21[2] = 115"
    "$r21[3] = 116"
    "r24 = $r21"
    "$r31 = new javax.crypto.spec.PBEKeySpec"
    "specialinvoke $r31.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r24)"
    "r25 = $r31"
    "r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBE\", \"SunJCE\")"
    "$r36 = (java.security.spec.KeySpec) r25"
    "$r23 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r36)"
    "<com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key> = $r23"
    "r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")"
    "r28 = newarray (byte)[30]"
    "$r32 = new javax.crypto.spec.PBEParameterSpec"
    "$r8 = \"saltValue\""
    "$r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>()"
    "specialinvoke $r32.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r9, 250)"
    "r29 = $r32"
    "$r10 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>"
    "$r37 = (java.security.Key) $r10"
    "$r38 = (java.security.spec.AlgorithmParameterSpec) r29"
    "virtualinvoke r27.<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r37, $r38)"
    "virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"
    "r11 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()"
    "$i1 = lengthof r11"
    "if $i1 == i0 goto virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"
    "$r34 = new java.lang.Exception"
    "$r33 = new java.lang.StringBuilder"
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"incorrect MAC output length, expected \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"
    "$i2 = lengthof r11"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r20)"
    "throw $r34"
    "r12 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()"
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r11, r12)"
    "if $z0 != 0 goto return"
    "$r35 = new java.lang.Exception"
    "specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"generated different MAC outputs\")"
    "throw $r35"
    "return"
    "r3 := @parameter0: java.lang.String"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r30 = new java.lang.StringBuilder";
    "$r30 = new java.lang.StringBuilder"->"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \")";
    "$r2 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing: \")"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)"->"$r6 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>";
    "$r6 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>"->"if $r6 != null goto r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")";
    "if $r6 != null goto r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")"->"$r21 = newarray (char)[4]";
    "if $r6 != null goto r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")"->"r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")";
    "$r21 = newarray (char)[4]"->"$r21[0] = 116";
    "$r21[0] = 116"->"$r21[1] = 101";
    "$r21[1] = 101"->"$r21[2] = 115";
    "$r21[2] = 115"->"$r21[3] = 116";
    "$r21[3] = 116"->"r24 = $r21";
    "r24 = $r21"->"$r31 = new javax.crypto.spec.PBEKeySpec";
    "$r31 = new javax.crypto.spec.PBEKeySpec"->"specialinvoke $r31.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r24)";
    "specialinvoke $r31.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r24)"->"r25 = $r31";
    "r25 = $r31"->"r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBE\", \"SunJCE\")";
    "r26 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBE\", \"SunJCE\")"->"$r36 = (java.security.spec.KeySpec) r25";
    "$r36 = (java.security.spec.KeySpec) r25"->"$r23 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r36)";
    "$r23 = virtualinvoke r26.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r36)"->"<com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key> = $r23";
    "<com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key> = $r23"->"r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")";
    "r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(r3, \"SunJCE\")"->"r28 = newarray (byte)[30]";
    "r28 = newarray (byte)[30]"->"$r32 = new javax.crypto.spec.PBEParameterSpec";
    "$r32 = new javax.crypto.spec.PBEParameterSpec"->"$r8 = \"saltValue\"";
    "$r8 = \"saltValue\""->"$r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>()";
    "$r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>()"->"specialinvoke $r32.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r9, 250)";
    "specialinvoke $r32.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r9, 250)"->"r29 = $r32";
    "r29 = $r32"->"$r10 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>";
    "$r10 = <com.sun.crypto.provider.Mac.HmacPBESHA1: javax.crypto.SecretKey key>"->"$r37 = (java.security.Key) $r10";
    "$r37 = (java.security.Key) $r10"->"$r38 = (java.security.spec.AlgorithmParameterSpec) r29";
    "$r38 = (java.security.spec.AlgorithmParameterSpec) r29"->"virtualinvoke r27.<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r37, $r38)";
    "virtualinvoke r27.<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r37, $r38)"->"virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)";
    "virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"->"r11 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()";
    "r11 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()"->"$i1 = lengthof r11";
    "$i1 = lengthof r11"->"if $i1 == i0 goto virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)";
    "if $i1 == i0 goto virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"->"$r34 = new java.lang.Exception";
    "if $i1 == i0 goto virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"->"virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)";
    "$r34 = new java.lang.Exception"->"$r33 = new java.lang.StringBuilder";
    "$r33 = new java.lang.StringBuilder"->"specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"incorrect MAC output length, expected \")";
    "$r16 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"incorrect MAC output length, expected \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"->"$i2 = lengthof r11";
    "$i2 = lengthof r11"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r20)"->"throw $r34";
    "virtualinvoke r27.<javax.crypto.Mac: void update(byte[])>(r28)"->"r12 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()";
    "r12 = virtualinvoke r27.<javax.crypto.Mac: byte[] doFinal()>()"->"$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r11, r12)";
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r11, r12)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r35 = new java.lang.Exception";
    "if $z0 != 0 goto return"->"return";
    "$r35 = new java.lang.Exception"->"specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"generated different MAC outputs\")";
    "specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"generated different MAC outputs\")"->"throw $r35";
}
