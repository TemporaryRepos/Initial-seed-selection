digraph "unitGraph" {
    "r19 := @this: com.sun.crypto.provider.TLS.TestLeadingZeroes"
    "r0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(\"DH\")"
    "$r1 = new java.security.spec.X509EncodedKeySpec"
    "$r2 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePubKeyEnc>"
    "specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)"
    "virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)"
    "$r4 = new java.security.spec.X509EncodedKeySpec"
    "$r5 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPubKeyEnc>"
    "specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)"
    "r6 = virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)"
    "$r7 = new java.security.spec.PKCS8EncodedKeySpec"
    "$r8 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePrivKeyEnc>"
    "specialinvoke $r7.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r8)"
    "r9 = virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)"
    "$r10 = new java.security.spec.PKCS8EncodedKeySpec"
    "$r11 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPrivKeyEnc>"
    "specialinvoke $r10.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r11)"
    "virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r10)"
    "r13 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(\"DH\", \"SunJCE\")"
    "virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"
    "virtualinvoke r13.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r6, 1)"
    "r15 = virtualinvoke r13.<javax.crypto.KeyAgreement: byte[] generateSecret()>()"
    "$r17 = <java.lang.System: java.io.PrintStream out>"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"shared secret:\n\")"
    "$r20 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r15)"
    "$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22)"
    "$i0 = lengthof r15"
    "if $i0 == 128 goto $b1 = r15[0]"
    "$r36 = new java.lang.Exception"
    "specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected shared secret length\")"
    "throw $r36"
    "$b1 = r15[0]"
    "if $b1 == 0 goto virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"
    "$r35 = new java.lang.Exception"
    "specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is not zero as expected\")"
    "throw $r35"
    "$r24 = virtualinvoke r13.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(\"TlsPremasterSecret\")"
    "r25 = interfaceinvoke $r24.<javax.crypto.SecretKey: byte[] getEncoded()>()"
    "$r27 = <java.lang.System: java.io.PrintStream out>"
    "$r26 = new java.lang.StringBuilder"
    "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()"
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"tls premaster secret:\n\")"
    "$r29 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r25)"
    "$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31)"
    "$i2 = lengthof r25"
    "if $i2 == 127 goto $b3 = r25[0]"
    "$r34 = new java.lang.Exception"
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected TLS premaster secret length\")"
    "throw $r34"
    "$b3 = r25[0]"
    "if $b3 != 0 goto i8 = 0"
    "$r33 = new java.lang.Exception"
    "specialinvoke $r33.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is zero\")"
    "throw $r33"
    "i8 = 0"
    "$i4 = lengthof r25"
    "if i8 >= $i4 goto return"
    "$b7 = r25[i8]"
    "$i5 = i8 + 1"
    "$b6 = r15[$i5]"
    "if $b7 == $b6 goto i8 = i8 + 1"
    "$r32 = new java.lang.Exception"
    "specialinvoke $r32.<java.lang.Exception: void <init>(java.lang.String)>(\"Shared secrets differ\")"
    "throw $r32"
    "i8 = i8 + 1"
    "goto [?= $i4 = lengthof r25]"
    "return"
    "r19 := @this: com.sun.crypto.provider.TLS.TestLeadingZeroes"->"r0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(\"DH\")";
    "r0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(\"DH\")"->"$r1 = new java.security.spec.X509EncodedKeySpec";
    "$r1 = new java.security.spec.X509EncodedKeySpec"->"$r2 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePubKeyEnc>";
    "$r2 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePubKeyEnc>"->"specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)";
    "specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)"->"virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)";
    "virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)"->"$r4 = new java.security.spec.X509EncodedKeySpec";
    "$r4 = new java.security.spec.X509EncodedKeySpec"->"$r5 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPubKeyEnc>";
    "$r5 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPubKeyEnc>"->"specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)";
    "specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)"->"r6 = virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)";
    "r6 = virtualinvoke r0.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)"->"$r7 = new java.security.spec.PKCS8EncodedKeySpec";
    "$r7 = new java.security.spec.PKCS8EncodedKeySpec"->"$r8 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePrivKeyEnc>";
    "$r8 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] alicePrivKeyEnc>"->"specialinvoke $r7.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r8)";
    "specialinvoke $r7.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r8)"->"r9 = virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)";
    "r9 = virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)"->"$r10 = new java.security.spec.PKCS8EncodedKeySpec";
    "$r10 = new java.security.spec.PKCS8EncodedKeySpec"->"$r11 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPrivKeyEnc>";
    "$r11 = <com.sun.crypto.provider.TLS.TestLeadingZeroes: byte[] bobPrivKeyEnc>"->"specialinvoke $r10.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r11)";
    "specialinvoke $r10.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r11)"->"virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r10)";
    "virtualinvoke r0.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r10)"->"r13 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(\"DH\", \"SunJCE\")";
    "r13 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(\"DH\", \"SunJCE\")"->"virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)";
    "virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"->"virtualinvoke r13.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r6, 1)";
    "virtualinvoke r13.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r6, 1)"->"r15 = virtualinvoke r13.<javax.crypto.KeyAgreement: byte[] generateSecret()>()";
    "r15 = virtualinvoke r13.<javax.crypto.KeyAgreement: byte[] generateSecret()>()"->"$r17 = <java.lang.System: java.io.PrintStream out>";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"shared secret:\n\")";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"shared secret:\n\")"->"$r20 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r15)";
    "$r20 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r15)"->"$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)";
    "$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22)";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22)"->"$i0 = lengthof r15";
    "$i0 = lengthof r15"->"if $i0 == 128 goto $b1 = r15[0]";
    "if $i0 == 128 goto $b1 = r15[0]"->"$r36 = new java.lang.Exception";
    "if $i0 == 128 goto $b1 = r15[0]"->"$b1 = r15[0]";
    "$r36 = new java.lang.Exception"->"specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected shared secret length\")";
    "specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected shared secret length\")"->"throw $r36";
    "$b1 = r15[0]"->"if $b1 == 0 goto virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)";
    "if $b1 == 0 goto virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"->"$r35 = new java.lang.Exception";
    "if $b1 == 0 goto virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"->"virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)";
    "$r35 = new java.lang.Exception"->"specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is not zero as expected\")";
    "specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is not zero as expected\")"->"throw $r35";
    "virtualinvoke r13.<javax.crypto.KeyAgreement: void init(java.security.Key)>(r9)"->"virtualinvoke r13.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r6, 1)";
    "virtualinvoke r13.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r6, 1)"->"$r24 = virtualinvoke r13.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(\"TlsPremasterSecret\")";
    "$r24 = virtualinvoke r13.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(\"TlsPremasterSecret\")"->"r25 = interfaceinvoke $r24.<javax.crypto.SecretKey: byte[] getEncoded()>()";
    "r25 = interfaceinvoke $r24.<javax.crypto.SecretKey: byte[] getEncoded()>()"->"$r27 = <java.lang.System: java.io.PrintStream out>";
    "$r27 = <java.lang.System: java.io.PrintStream out>"->"$r26 = new java.lang.StringBuilder";
    "$r26 = new java.lang.StringBuilder"->"specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()"->"$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"tls premaster secret:\n\")";
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"tls premaster secret:\n\")"->"$r29 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r25)";
    "$r29 = specialinvoke r19.<com.sun.crypto.provider.TLS.TestLeadingZeroes: java.lang.String toHexString(byte[])>(r25)"->"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)";
    "$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31)";
    "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31)"->"$i2 = lengthof r25";
    "$i2 = lengthof r25"->"if $i2 == 127 goto $b3 = r25[0]";
    "if $i2 == 127 goto $b3 = r25[0]"->"$r34 = new java.lang.Exception";
    "if $i2 == 127 goto $b3 = r25[0]"->"$b3 = r25[0]";
    "$r34 = new java.lang.Exception"->"specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected TLS premaster secret length\")";
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>(\"Unexpected TLS premaster secret length\")"->"throw $r34";
    "$b3 = r25[0]"->"if $b3 != 0 goto i8 = 0";
    "if $b3 != 0 goto i8 = 0"->"$r33 = new java.lang.Exception";
    "if $b3 != 0 goto i8 = 0"->"i8 = 0";
    "$r33 = new java.lang.Exception"->"specialinvoke $r33.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is zero\")";
    "specialinvoke $r33.<java.lang.Exception: void <init>(java.lang.String)>(\"First byte is zero\")"->"throw $r33";
    "i8 = 0"->"$i4 = lengthof r25";
    "$i4 = lengthof r25"->"if i8 >= $i4 goto return";
    "if i8 >= $i4 goto return"->"$b7 = r25[i8]";
    "if i8 >= $i4 goto return"->"return";
    "$b7 = r25[i8]"->"$i5 = i8 + 1";
    "$i5 = i8 + 1"->"$b6 = r15[$i5]";
    "$b6 = r15[$i5]"->"if $b7 == $b6 goto i8 = i8 + 1";
    "if $b7 == $b6 goto i8 = i8 + 1"->"$r32 = new java.lang.Exception";
    "if $b7 == $b6 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$r32 = new java.lang.Exception"->"specialinvoke $r32.<java.lang.Exception: void <init>(java.lang.String)>(\"Shared secrets differ\")";
    "specialinvoke $r32.<java.lang.Exception: void <init>(java.lang.String)>(\"Shared secrets differ\")"->"throw $r32";
    "i8 = i8 + 1"->"goto [?= $i4 = lengthof r25]";
    "goto [?= $i4 = lengthof r25]"->"$i4 = lengthof r25";
}
