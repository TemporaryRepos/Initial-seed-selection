digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap"
    "specialinvoke $r0.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.lang.Object"
    "specialinvoke $r2.<java.lang.Object: void <init>()>()"
    "r3 = $r2"
    "$r4 = new java.lang.Object"
    "specialinvoke $r4.<java.lang.Object: void <init>()>()"
    "r5 = $r4"
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object get(java.lang.Object)>(r3)"
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object remove(java.lang.Object)>(r3)"
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>(r3, r5, null)"
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>(r3, r5)"
    "$r9 = new javaT.util.HashMap.OverrideIsEmpty$1"
    "specialinvoke $r9.<javaT.util.HashMap.OverrideIsEmpty$1: void <init>()>()"
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>(r3, $r9)"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"$r0 = new javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap";
    "$r0 = new javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap"->"specialinvoke $r0.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: void <init>()>()";
    "specialinvoke $r0.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.lang.Object";
    "$r2 = new java.lang.Object"->"specialinvoke $r2.<java.lang.Object: void <init>()>()";
    "specialinvoke $r2.<java.lang.Object: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.lang.Object";
    "$r4 = new java.lang.Object"->"specialinvoke $r4.<java.lang.Object: void <init>()>()";
    "specialinvoke $r4.<java.lang.Object: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object get(java.lang.Object)>(r3)";
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object get(java.lang.Object)>(r3)"->"virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object remove(java.lang.Object)>(r3)";
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object remove(java.lang.Object)>(r3)"->"virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>(r3, r5, null)";
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>(r3, r5, null)"->"virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>(r3, r5)";
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>(r3, r5)"->"$r9 = new javaT.util.HashMap.OverrideIsEmpty$1";
    "$r9 = new javaT.util.HashMap.OverrideIsEmpty$1"->"specialinvoke $r9.<javaT.util.HashMap.OverrideIsEmpty$1: void <init>()>()";
    "specialinvoke $r9.<javaT.util.HashMap.OverrideIsEmpty$1: void <init>()>()"->"virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>(r3, $r9)";
    "virtualinvoke r1.<javaT.util.HashMap.OverrideIsEmpty$NotEmptyHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>(r3, $r9)"->"return";
}
