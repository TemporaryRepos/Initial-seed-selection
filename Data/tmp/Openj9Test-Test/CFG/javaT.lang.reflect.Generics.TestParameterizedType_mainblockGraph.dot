digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r17 := @parameter0: java.lang.String[];
z4 = 0;
r0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>();
r1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>();
$z0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r0);
z5 = z4 | $z0;
$z1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r1);
z6 = z5 | $z1;
i2 = 0;
"
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
$i0 = interfaceinvoke r0.<java.util.List: int size()>();
if i2 >= $i0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);
r4 = (java.lang.reflect.Type) $r3;
i3 = 0;
"
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if i3 >= $i1 goto i2 = i2 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);
r6 = (java.lang.reflect.Type) $r5;
if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
"
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z3 != 0 goto i3 = i3 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 9 ]
z6 = 1;
$r13 = <java.lang.System: java.io.PrintStream err>;
$r12 = newarray (java.lang.Object)[4];
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r12[0] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r12[1] = $r15;
$r12[2] = r4;
$r12[3] = r6;
virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12);
goto [?= i3 = i3 + 1];
"
    "Block 7:
[preds: 4 ] [succs: 8 9 ]
$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z2 == 0 goto i3 = i3 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
z6 = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = newarray (java.lang.Object)[4];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r7[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r7[1] = $r10;
$r7[2] = r4;
$r7[3] = r6;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7);
"
    "Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
"
    "Block 10:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()];
"
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
if z6 == 0 goto return;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bad equality on ParameterizedTypes\");
throw $r2;
"
    "Block 13:
[preds: 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r17 := @parameter0: java.lang.String[];
z4 = 0;
r0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>();
r1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: java.util.List createTypes()>();
$z0 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r0);
z5 = z4 | $z0;
$z1 = staticinvoke <javaT.lang.reflect.Generics.TestParameterizedType: boolean testReflexes(java.util.List)>(r1);
z6 = z5 | $z1;
i2 = 0;
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
$i0 = interfaceinvoke r0.<java.util.List: int size()>();
if i2 >= $i0 goto (branch);
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
$i0 = interfaceinvoke r0.<java.util.List: int size()>();
if i2 >= $i0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);
r4 = (java.lang.reflect.Type) $r3;
i3 = 0;
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
$i0 = interfaceinvoke r0.<java.util.List: int size()>();
if i2 >= $i0 goto (branch);
"->"Block 11:
[preds: 1 ] [succs: 12 13 ]
if z6 == 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);
r4 = (java.lang.reflect.Type) $r3;
i3 = 0;
"->"Block 3:
[preds: 2 9 ] [succs: 4 10 ]
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);
r6 = (java.lang.reflect.Type) $r5;
if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
";
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 10:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()];
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);
r6 = (java.lang.reflect.Type) $r5;
if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
"->"Block 5:
[preds: 4 ] [succs: 6 9 ]
$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z3 != 0 goto i3 = i3 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);
r6 = (java.lang.reflect.Type) $r5;
if i2 != i3 goto $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
"->"Block 7:
[preds: 4 ] [succs: 8 9 ]
$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z2 == 0 goto i3 = i3 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z3 != 0 goto i3 = i3 + 1;
"->"Block 6:
[preds: 5 ] [succs: 9 ]
z6 = 1;
$r13 = <java.lang.System: java.io.PrintStream err>;
$r12 = newarray (java.lang.Object)[4];
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r12[0] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r12[1] = $r15;
$r12[2] = r4;
$r12[3] = r6;
virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12);
goto [?= i3 = i3 + 1];
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z3 != 0 goto i3 = i3 + 1;
"->"Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 6:
[preds: 5 ] [succs: 9 ]
z6 = 1;
$r13 = <java.lang.System: java.io.PrintStream err>;
$r12 = newarray (java.lang.Object)[4];
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r12[0] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r12[1] = $r15;
$r12[2] = r4;
$r12[3] = r6;
virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected inequality: [%d, %d] %n\t%s%n\t%s%n\", $r12);
goto [?= i3 = i3 + 1];
"->"Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 7:
[preds: 4 ] [succs: 8 9 ]
$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z2 == 0 goto i3 = i3 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
z6 = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = newarray (java.lang.Object)[4];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r7[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r7[1] = $r10;
$r7[2] = r4;
$r7[3] = r6;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7);
";
    "Block 7:
[preds: 4 ] [succs: 8 9 ]
$z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
if $z2 == 0 goto i3 = i3 + 1;
"->"Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
z6 = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = newarray (java.lang.Object)[4];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
$r7[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$r7[1] = $r10;
$r7[2] = r4;
$r7[3] = r6;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected equality: [%d, %d] %n\t%s%n\t%s%n\", $r7);
"->"Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 9:
[preds: 5 6 7 8 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $i1 = interfaceinvoke r1.<java.util.List: int size()>()];
"->"Block 3:
[preds: 2 9 ] [succs: 4 10 ]
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 10:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $i0 = interfaceinvoke r0.<java.util.List: int size()>()];
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
$i0 = interfaceinvoke r0.<java.util.List: int size()>();
if i2 >= $i0 goto (branch);
";
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
if z6 == 0 goto return;
"->"Block 12:
[preds: 11 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bad equality on ParameterizedTypes\");
throw $r2;
";
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
if z6 == 0 goto return;
"->"Block 13:
[preds: 11 ] [succs: ]
return;
";
}
