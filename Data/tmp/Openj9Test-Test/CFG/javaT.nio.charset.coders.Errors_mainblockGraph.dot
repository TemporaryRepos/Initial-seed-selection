digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
$r0 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0);
$r1 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1);
$r2 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2);
$r3 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3);
$r4 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4);
$r5 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5);
$r6 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6);
$r7 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7);
$i0 = <javaT.nio.charset.coders.Errors: int failures>;
if $i0 <= 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r8 = <javaT.nio.charset.coders.Errors: java.io.PrintStream log>;
virtualinvoke $r8.<java.io.PrintStream: void println()>();
$r9 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tests failed: \");
$i1 = <javaT.nio.charset.coders.Errors: int failures>;
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r13);
throw $r9;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
$r0 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0);
$r1 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1);
$r2 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2);
$r3 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3);
$r4 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4);
$r5 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5);
$r6 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6);
$r7 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7);
$i0 = <javaT.nio.charset.coders.Errors: int failures>;
if $i0 <= 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r8 = <javaT.nio.charset.coders.Errors: java.io.PrintStream log>;
virtualinvoke $r8.<java.io.PrintStream: void println()>();
$r9 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tests failed: \");
$i1 = <javaT.nio.charset.coders.Errors: int failures>;
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r13);
throw $r9;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
$r0 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0);
$r1 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1);
$r2 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2);
$r3 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3);
$r4 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4);
$r5 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5);
$r6 = new javaT.nio.charset.coders.Errors$TestString;
specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6);
$r7 = new javaT.nio.charset.coders.Errors$TestStream;
specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\");
staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7);
$i0 = <javaT.nio.charset.coders.Errors: int failures>;
if $i0 <= 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
