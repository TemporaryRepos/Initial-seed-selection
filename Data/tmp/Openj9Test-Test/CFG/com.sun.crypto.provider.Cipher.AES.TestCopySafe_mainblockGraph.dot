digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r24 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(\"SunJCE\");
r25 = null;
z1 = 1;
r1 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: java.lang.String[] MODES>;
i0 = lengthof r1;
i3 = 0;
"
    "Block 1:
[preds: 0 19 ] [succs: 2 20 ]
if i3 >= i0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i3];
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\");
r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
if r3 != \"GCM\" goto $z2 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z0 = $z2];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z0 = $z2;
if z0 == 0 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 9 ]
$r33 = new javax.crypto.spec.GCMParameterSpec;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21);
r25 = $r33;
goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)];
"
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r34 = new javax.crypto.spec.IvParameterSpec;
$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19);
r25 = $r34;
"
    "Block 9:
[preds: 6 7 8 ] [succs: 10 ]
r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);
r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>;
i1 = lengthof r10;
i4 = 0;
"
    "Block 10:
[preds: 9 18 ] [succs: 11 19 ]
if i4 >= i1 goto i3 = i3 + 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
i2 = r10[i4];
$r12 = <java.lang.System: java.io.PrintStream out>;
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16);
"
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r38 = (java.security.spec.AlgorithmParameterSpec) r25;
"
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0);
"
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\");
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= i4 = i4 + 1];
"
    "Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
"
    "Block 18:
[preds: 16 17 ] [succs: 10 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 10 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 20:
[preds: 1 ] [succs: 21 22 ]
if z1 != 0 goto return;
"
    "Block 21:
[preds: 20 ] [succs: ]
$r37 = new java.lang.Exception;
specialinvoke $r37.<java.lang.Exception: void <init>(java.lang.String)>(\"One or more test failed\");
throw $r37;
"
    "Block 22:
[preds: 20 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r24 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(\"SunJCE\");
r25 = null;
z1 = 1;
r1 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: java.lang.String[] MODES>;
i0 = lengthof r1;
i3 = 0;
"->"Block 1:
[preds: 0 19 ] [succs: 2 20 ]
if i3 >= i0 goto (branch);
";
    "Block 1:
[preds: 0 19 ] [succs: 2 20 ]
if i3 >= i0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i3];
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\");
r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
if r3 != \"GCM\" goto $z2 = 0;
";
    "Block 1:
[preds: 0 19 ] [succs: 2 20 ]
if i3 >= i0 goto (branch);
"->"Block 20:
[preds: 1 ] [succs: 21 22 ]
if z1 != 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i3];
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\");
r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
if r3 != \"GCM\" goto $z2 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z0 = $z2];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i3];
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/NoPadding\");
r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
if r3 != \"GCM\" goto $z2 = 0;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z0 = $z2];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z0 = $z2;
if z0 == 0 goto (branch);
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z0 = $z2;
if z0 == 0 goto (branch);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z0 = $z2;
if z0 == 0 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 9 ]
$r33 = new javax.crypto.spec.GCMParameterSpec;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21);
r25 = $r33;
goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z0 = $z2;
if z0 == 0 goto (branch);
"->"Block 7:
[preds: 5 ] [succs: 8 9 ]
if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
";
    "Block 6:
[preds: 5 ] [succs: 9 ]
$r33 = new javax.crypto.spec.GCMParameterSpec;
$r21 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r33.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(128, $r21);
r25 = $r33;
goto [?= r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0)];
"->"Block 9:
[preds: 6 7 8 ] [succs: 10 ]
r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);
r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>;
i1 = lengthof r10;
i4 = 0;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
"->"Block 8:
[preds: 7 ] [succs: 9 ]
$r34 = new javax.crypto.spec.IvParameterSpec;
$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19);
r25 = $r34;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
if r3 == \"ECB\" goto r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
"->"Block 9:
[preds: 6 7 8 ] [succs: 10 ]
r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);
r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>;
i1 = lengthof r10;
i4 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r34 = new javax.crypto.spec.IvParameterSpec;
$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] IV>;
specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r19);
r25 = $r34;
"->"Block 9:
[preds: 6 7 8 ] [succs: 10 ]
r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);
r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>;
i1 = lengthof r10;
i4 = 0;
";
    "Block 9:
[preds: 6 7 8 ] [succs: 10 ]
r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r0);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r28 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);
r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: int[] OFFSETS>;
i1 = lengthof r10;
i4 = 0;
"->"Block 10:
[preds: 9 18 ] [succs: 11 19 ]
if i4 >= i1 goto i3 = i3 + 1;
";
    "Block 10:
[preds: 9 18 ] [succs: 11 19 ]
if i4 >= i1 goto i3 = i3 + 1;
"->"Block 11:
[preds: 10 ] [succs: 12 17 ]
i2 = r10[i4];
$r12 = <java.lang.System: java.io.PrintStream out>;
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16);
";
    "Block 10:
[preds: 9 18 ] [succs: 11 19 ]
if i4 >= i1 goto i3 = i3 + 1;
"->"Block 19:
[preds: 10 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
i2 = r10[i4];
$r12 = <java.lang.System: java.io.PrintStream out>;
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16);
"->"Block 12:
[preds: 11 ] [succs: 13 17 ]
$r38 = (java.security.spec.AlgorithmParameterSpec) r25;
";
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
i2 = r10[i4];
$r12 = <java.lang.System: java.io.PrintStream out>;
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=> offset \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r16);
"->"Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r38 = (java.security.spec.AlgorithmParameterSpec) r25;
"->"Block 13:
[preds: 12 ] [succs: 14 17 ]
staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0);
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r38 = (java.security.spec.AlgorithmParameterSpec) r25;
"->"Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0);
"->"Block 14:
[preds: 13 ] [succs: 15 17 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: void test(javax.crypto.Cipher,java.security.spec.AlgorithmParameterSpec,int,boolean)>(r9, $r38, i2, z0);
"->"Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\");
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
"->"Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\");
"->"Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= i4 = i4 + 1];
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"Passed\");
"->"Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
goto [?= i4 = i4 + 1];
"->"Block 18:
[preds: 16 17 ] [succs: 10 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 17:
[preds: 11 12 13 14 15 ] [succs: 18 ]
$r22 := @caughtexception;
r23 = $r22;
virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
z1 = 0;
goto [?= i4 = i4 + 1];
"->"Block 18:
[preds: 16 17 ] [succs: 10 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 18:
[preds: 16 17 ] [succs: 10 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 18 ] [succs: 11 19 ]
if i4 >= i1 goto i3 = i3 + 1;
";
    "Block 19:
[preds: 10 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 19 ] [succs: 2 20 ]
if i3 >= i0 goto (branch);
";
    "Block 20:
[preds: 1 ] [succs: 21 22 ]
if z1 != 0 goto return;
"->"Block 21:
[preds: 20 ] [succs: ]
$r37 = new java.lang.Exception;
specialinvoke $r37.<java.lang.Exception: void <init>(java.lang.String)>(\"One or more test failed\");
throw $r37;
";
    "Block 20:
[preds: 1 ] [succs: 21 22 ]
if z1 != 0 goto return;
"->"Block 22:
[preds: 20 ] [succs: ]
return;
";
}
