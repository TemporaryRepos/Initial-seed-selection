digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "i5 = 0"
    "if i5 >= 1024 goto return"
    "r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1024)"
    "virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)"
    "$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"
    "$i1 = virtualinvoke r0.<java.nio.ByteBuffer: int limit()>()"
    "if $i0 >= $i1 goto i5 = i5 + 1"
    "$b2 = virtualinvoke r0.<java.nio.ByteBuffer: byte get()>()"
    "$i3 = $b2 & 255"
    "if $i3 == 0 goto $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"
    "$r2 = new java.lang.RuntimeException"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"uninitialized buffer, position = \")"
    "$i4 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"
    "throw $r2"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"i5 = 0";
    "i5 = 0"->"if i5 >= 1024 goto return";
    "if i5 >= 1024 goto return"->"r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1024)";
    "if i5 >= 1024 goto return"->"return";
    "r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1024)"->"virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)";
    "virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0)"->"$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()";
    "$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"->"$i1 = virtualinvoke r0.<java.nio.ByteBuffer: int limit()>()";
    "$i1 = virtualinvoke r0.<java.nio.ByteBuffer: int limit()>()"->"if $i0 >= $i1 goto i5 = i5 + 1";
    "if $i0 >= $i1 goto i5 = i5 + 1"->"$b2 = virtualinvoke r0.<java.nio.ByteBuffer: byte get()>()";
    "if $i0 >= $i1 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$b2 = virtualinvoke r0.<java.nio.ByteBuffer: byte get()>()"->"$i3 = $b2 & 255";
    "$i3 = $b2 & 255"->"if $i3 == 0 goto $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()";
    "if $i3 == 0 goto $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"->"$r2 = new java.lang.RuntimeException";
    "if $i3 == 0 goto $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"->"$i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()";
    "$r2 = new java.lang.RuntimeException"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"uninitialized buffer, position = \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"uninitialized buffer, position = \")"->"$i4 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()";
    "$i4 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"->"throw $r2";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= 1024 goto return";
}
