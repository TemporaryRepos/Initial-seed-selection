digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
z0 = 0;
$r0 = newarray (byte)[8];
$r0[0] = 90;
$r0[1] = 91;
$r0[2] = 92;
$r0[3] = 93;
$r0[4] = 94;
$r0[5] = 95;
$r0[6] = 96;
$r0[7] = 97;
r1 = $r0;
$r2 = new java.util.zip.InflaterInputStream;
$r3 = new java.io.ByteArrayInputStream;
specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r3);
r4 = $r2;
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(-5);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(6);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(2147483647);
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r5 = new java.lang.RuntimeException;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r5;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r8 = new java.lang.RuntimeException;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r8;
"
    "Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
z0 = 0;
$r0 = newarray (byte)[8];
$r0[0] = 90;
$r0[1] = 91;
$r0[2] = 92;
$r0[3] = 93;
$r0[4] = 94;
$r0[5] = 95;
$r0[6] = 96;
$r0[7] = 97;
r1 = $r0;
$r2 = new java.util.zip.InflaterInputStream;
$r3 = new java.io.ByteArrayInputStream;
specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r3);
r4 = $r2;
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(-5);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(6);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(2147483647);
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
";
    "Block 0:
[preds: ] [succs: 1 5 ]
z0 = 0;
$r0 = newarray (byte)[8];
$r0[0] = 90;
$r0[1] = 91;
$r0[2] = 92;
$r0[3] = 93;
$r0[4] = 94;
$r0[5] = 95;
$r0[6] = 96;
$r0[7] = 97;
r1 = $r0;
$r2 = new java.util.zip.InflaterInputStream;
$r3 = new java.io.ByteArrayInputStream;
specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r3);
r4 = $r2;
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(-5);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(6);
virtualinvoke r4.<java.util.zip.InflaterInputStream: void mark(int)>(2147483647);
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r5 = new java.lang.RuntimeException;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r5 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r5 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 4:
[preds: 3 ] [succs: 5 ]
throw $r5;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r5;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r7 := @caughtexception;
r9 = $r7;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
$r8 = new java.lang.RuntimeException;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r4.<java.util.zip.InflaterInputStream: void reset()>();
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r8 = new java.lang.RuntimeException;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r8 = new java.lang.RuntimeException;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 9:
[preds: 8 ] [succs: 10 ]
throw $r8;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r8;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r6 := @caughtexception;
r10 = $r6;
return;
";
}
