digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing non-generic inner class\")"
    "r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner1;\""
    "r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"
    "$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z0 != 0 goto return"
    "$i0 = lengthof r2"
    "if $i0 == 0 goto return"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have no type parameters\")"
    "throw $r3"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing non-generic inner class\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing non-generic inner class\")"->"r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner1;\"";
    "r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner1;\""->"r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()";
    "r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"->"$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$i0 = lengthof r2";
    "if $z0 != 0 goto return"->"return";
    "$i0 = lengthof r2"->"if $i0 == 0 goto return";
    "if $i0 == 0 goto return"->"$r3 = new java.lang.AssertionError";
    "if $i0 == 0 goto return"->"return";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have no type parameters\")";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have no type parameters\")"->"throw $r3";
}
