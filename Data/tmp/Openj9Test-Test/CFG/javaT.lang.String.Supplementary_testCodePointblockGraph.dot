digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
z0 := @parameter0: boolean;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
z2 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 4 7 ]
if z0 == 0 goto $i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i0);
"
    "Block 3:
[preds: 2 ] [succs: 5 7 ]
goto [?= i2 = $i1];
"
    "Block 4:
[preds: 1 ] [succs: 5 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
i2 = $i1;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= (branch)];
"
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if z2 != 0 goto $z4 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z4 = 1;
goto [?= $r1 = new java.lang.StringBuilder];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z4 = 0;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePoint\");
if z0 == 0 goto $r5 = \"Before\";
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$r5 = \"At\";
goto [?= $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r5 = \"Before\";
"
    "Block 14:
[preds: 12 13 ] [succs: ]
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> should throw StringIndexOutOfBoundsPointerException.\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r12);
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
z0 := @parameter0: boolean;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
z2 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 4 7 ]
if z0 == 0 goto $i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
";
    "Block 0:
[preds: ] [succs: 1 7 ]
z0 := @parameter0: boolean;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
z2 = 0;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 2 4 7 ]
if z0 == 0 goto $i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i0);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 7 ]
if z0 == 0 goto $i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"->"Block 4:
[preds: 1 ] [succs: 5 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 7 ]
if z0 == 0 goto $i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i0);
"->"Block 3:
[preds: 2 ] [succs: 5 7 ]
goto [?= i2 = $i1];
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i0);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 7 ]
goto [?= i2 = $i1];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
i2 = $i1;
";
    "Block 3:
[preds: 2 ] [succs: 5 7 ]
goto [?= i2 = $i1];
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 4:
[preds: 1 ] [succs: 5 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
i2 = $i1;
";
    "Block 4:
[preds: 1 ] [succs: 5 7 ]
$i1 = virtualinvoke r0.<java.lang.String: int codePointBefore(int)>(i0);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
i2 = $i1;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
i2 = $i1;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if z2 != 0 goto $z4 = 0;
";
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
z2 = 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if z2 != 0 goto $z4 = 0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if z2 != 0 goto $z4 = 0;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
$z4 = 1;
goto [?= $r1 = new java.lang.StringBuilder];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if z2 != 0 goto $z4 = 0;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
$z4 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z4 = 1;
goto [?= $r1 = new java.lang.StringBuilder];
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePoint\");
if z0 == 0 goto $r5 = \"Before\";
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z4 = 0;
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePoint\");
if z0 == 0 goto $r5 = \"Before\";
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePoint\");
if z0 == 0 goto $r5 = \"Before\";
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$r5 = \"At\";
goto [?= $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"codePoint\");
if z0 == 0 goto $r5 = \"Before\";
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$r5 = \"Before\";
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$r5 = \"At\";
goto [?= $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)];
"->"Block 14:
[preds: 12 13 ] [succs: ]
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> should throw StringIndexOutOfBoundsPointerException.\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r12);
return;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r5 = \"Before\";
"->"Block 14:
[preds: 12 13 ] [succs: ]
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"> should throw StringIndexOutOfBoundsPointerException.\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r12);
return;
";
}
