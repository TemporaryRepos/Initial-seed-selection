digraph "unitGraph" {
    "b11 = 0"
    "$r0 = new java.math.BigDecimal"
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789000\")"
    "r43 = $r0"
    "r44 = <java.math.BigDecimal: java.math.BigDecimal ONE>"
    "$r1 = new java.math.BigDecimal"
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789e3\")"
    "r45 = $r1"
    "$r2 = new java.math.MathContext"
    "$r3 = <java.math.RoundingMode: java.math.RoundingMode DOWN>"
    "specialinvoke $r2.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(9, $r3)"
    "r4 = $r2"
    "$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r43, r44, r45, r4)"
    "i12 = b11 + $i0"
    "$r5 = newarray (int)[4]"
    "$r5[0] = 0"
    "$r5[1] = 2"
    "$r5[2] = 3"
    "$r5[3] = 4"
    "r6 = $r5"
    "$r7 = new java.math.BigDecimal"
    "specialinvoke $r7.<java.math.BigDecimal: void <init>(int)>(100)"
    "r46 = $r7"
    "$r8 = new java.math.BigDecimal"
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(int)>(3)"
    "r47 = $r8"
    "$r9 = new java.math.BigDecimal"
    "specialinvoke $r9.<java.math.BigDecimal: void <init>(int)>(33)"
    "r48 = $r9"
    "r49 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"
    "i13 = lengthof r49"
    "i14 = 0"
    "if i14 >= i13 goto $r10 = new java.math.BigDecimal"
    "r50 = r49[i14]"
    "r51 = r6"
    "i15 = lengthof r51"
    "i16 = 0"
    "if i16 >= i15 goto i14 = i14 + 1"
    "i17 = r51[i16]"
    "$r42 = new java.math.MathContext"
    "specialinvoke $r42.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i17, r50)"
    "$i10 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r46, r47, r48, $r42)"
    "i12 = i12 + $i10"
    "i16 = i16 + 1"
    "goto [?= (branch)]"
    "i14 = i14 + 1"
    "$r10 = new java.math.BigDecimal"
    "specialinvoke $r10.<java.math.BigDecimal: void <init>(int)>(123000)"
    "r52 = $r10"
    "$r11 = new java.math.BigDecimal"
    "specialinvoke $r11.<java.math.BigDecimal: void <init>(int)>(10)"
    "r53 = $r11"
    "$r12 = newarray (int)[6]"
    "$r12[0] = 0"
    "$r12[1] = 1"
    "$r12[2] = 2"
    "$r12[3] = 3"
    "$r12[4] = 4"
    "$r12[5] = 5"
    "r54 = $r12"
    "$r13 = newarray (java.math.BigDecimal)[6]"
    "$r14 = new java.math.BigDecimal"
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"
    "$r13[0] = $r14"
    "$r13[1] = null"
    "$r13[2] = null"
    "$r15 = new java.math.BigDecimal"
    "specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r13[3] = $r15"
    "$r16 = new java.math.BigDecimal"
    "specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")"
    "$r13[4] = $r16"
    "$r17 = new java.math.BigDecimal"
    "specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"
    "$r13[5] = $r17"
    "r55 = $r13"
    "r56 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"
    "i18 = lengthof r56"
    "i19 = 0"
    "if i19 >= i18 goto $r18 = new java.math.BigDecimal"
    "r57 = r56[i19]"
    "i20 = 0"
    "$i7 = lengthof r54"
    "if i20 >= $i7 goto i19 = i19 + 1"
    "$r41 = r55[i20]"
    "$r40 = new java.math.MathContext"
    "$i8 = r54[i20]"
    "specialinvoke $r40.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i8, r57)"
    "$i9 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r52, r53, $r41, $r40)"
    "i12 = i12 + $i9"
    "i20 = i20 + 1"
    "goto [?= $i7 = lengthof r54]"
    "i19 = i19 + 1"
    "$r18 = new java.math.BigDecimal"
    "specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e3\")"
    "r58 = $r18"
    "$r19 = new java.math.BigDecimal"
    "specialinvoke $r19.<java.math.BigDecimal: void <init>(int)>(10)"
    "r59 = $r19"
    "$r20 = newarray (int)[6]"
    "$r20[0] = 0"
    "$r20[1] = 1"
    "$r20[2] = 2"
    "$r20[3] = 3"
    "$r20[4] = 4"
    "$r20[5] = 5"
    "r60 = $r20"
    "$r21 = newarray (java.math.BigDecimal)[6]"
    "$r22 = new java.math.BigDecimal"
    "specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r21[0] = $r22"
    "$r21[1] = null"
    "$r21[2] = null"
    "$r23 = new java.math.BigDecimal"
    "specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r21[3] = $r23"
    "$r24 = new java.math.BigDecimal"
    "specialinvoke $r24.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r21[4] = $r24"
    "$r25 = new java.math.BigDecimal"
    "specialinvoke $r25.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r21[5] = $r25"
    "r61 = $r21"
    "r62 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"
    "i21 = lengthof r62"
    "i22 = 0"
    "if i22 >= i21 goto $r26 = new java.math.BigDecimal"
    "r63 = r62[i22]"
    "i23 = 0"
    "$i4 = lengthof r60"
    "if i23 >= $i4 goto i22 = i22 + 1"
    "$r39 = r61[i23]"
    "$r38 = new java.math.MathContext"
    "$i5 = r60[i23]"
    "specialinvoke $r38.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i5, r63)"
    "$i6 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r58, r59, $r39, $r38)"
    "i12 = i12 + $i6"
    "i23 = i23 + 1"
    "goto [?= $i4 = lengthof r60]"
    "i22 = i22 + 1"
    "$r26 = new java.math.BigDecimal"
    "specialinvoke $r26.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123000\")"
    "r64 = $r26"
    "$r27 = new java.math.BigDecimal"
    "specialinvoke $r27.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1e1\")"
    "r65 = $r27"
    "$r28 = newarray (int)[7]"
    "$r28[0] = 0"
    "$r28[1] = 1"
    "$r28[2] = 2"
    "$r28[3] = 3"
    "$r28[4] = 4"
    "$r28[5] = 5"
    "$r28[6] = 6"
    "r66 = $r28"
    "$r29 = newarray (java.math.BigDecimal)[7]"
    "$r30 = new java.math.BigDecimal"
    "specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")"
    "$r29[0] = $r30"
    "$r29[1] = null"
    "$r29[2] = null"
    "$r31 = new java.math.BigDecimal"
    "specialinvoke $r31.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"
    "$r29[3] = $r31"
    "$r32 = new java.math.BigDecimal"
    "specialinvoke $r32.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")"
    "$r29[4] = $r32"
    "$r33 = new java.math.BigDecimal"
    "specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"
    "$r29[5] = $r33"
    "$r34 = new java.math.BigDecimal"
    "specialinvoke $r34.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")"
    "$r29[6] = $r34"
    "r67 = $r29"
    "r68 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"
    "i24 = lengthof r68"
    "i25 = 0"
    "if i25 >= i24 goto return i12"
    "r35 = r68[i25]"
    "i26 = 0"
    "$i1 = lengthof r66"
    "if i26 >= $i1 goto i25 = i25 + 1"
    "$r37 = r67[i26]"
    "$r36 = new java.math.MathContext"
    "$i2 = r66[i26]"
    "specialinvoke $r36.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i2, r35)"
    "$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r64, r65, $r37, $r36)"
    "i12 = i12 + $i3"
    "i26 = i26 + 1"
    "goto [?= $i1 = lengthof r66]"
    "i25 = i25 + 1"
    "return i12"
    "b11 = 0"->"$r0 = new java.math.BigDecimal";
    "$r0 = new java.math.BigDecimal"->"specialinvoke $r0.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789000\")";
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789000\")"->"r43 = $r0";
    "r43 = $r0"->"r44 = <java.math.BigDecimal: java.math.BigDecimal ONE>";
    "r44 = <java.math.BigDecimal: java.math.BigDecimal ONE>"->"$r1 = new java.math.BigDecimal";
    "$r1 = new java.math.BigDecimal"->"specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789e3\")";
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789e3\")"->"r45 = $r1";
    "r45 = $r1"->"$r2 = new java.math.MathContext";
    "$r2 = new java.math.MathContext"->"$r3 = <java.math.RoundingMode: java.math.RoundingMode DOWN>";
    "$r3 = <java.math.RoundingMode: java.math.RoundingMode DOWN>"->"specialinvoke $r2.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(9, $r3)";
    "specialinvoke $r2.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(9, $r3)"->"r4 = $r2";
    "r4 = $r2"->"$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r43, r44, r45, r4)";
    "$i0 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r43, r44, r45, r4)"->"i12 = b11 + $i0";
    "i12 = b11 + $i0"->"$r5 = newarray (int)[4]";
    "$r5 = newarray (int)[4]"->"$r5[0] = 0";
    "$r5[0] = 0"->"$r5[1] = 2";
    "$r5[1] = 2"->"$r5[2] = 3";
    "$r5[2] = 3"->"$r5[3] = 4";
    "$r5[3] = 4"->"r6 = $r5";
    "r6 = $r5"->"$r7 = new java.math.BigDecimal";
    "$r7 = new java.math.BigDecimal"->"specialinvoke $r7.<java.math.BigDecimal: void <init>(int)>(100)";
    "specialinvoke $r7.<java.math.BigDecimal: void <init>(int)>(100)"->"r46 = $r7";
    "r46 = $r7"->"$r8 = new java.math.BigDecimal";
    "$r8 = new java.math.BigDecimal"->"specialinvoke $r8.<java.math.BigDecimal: void <init>(int)>(3)";
    "specialinvoke $r8.<java.math.BigDecimal: void <init>(int)>(3)"->"r47 = $r8";
    "r47 = $r8"->"$r9 = new java.math.BigDecimal";
    "$r9 = new java.math.BigDecimal"->"specialinvoke $r9.<java.math.BigDecimal: void <init>(int)>(33)";
    "specialinvoke $r9.<java.math.BigDecimal: void <init>(int)>(33)"->"r48 = $r9";
    "r48 = $r9"->"r49 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()";
    "r49 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"->"i13 = lengthof r49";
    "i13 = lengthof r49"->"i14 = 0";
    "i14 = 0"->"if i14 >= i13 goto $r10 = new java.math.BigDecimal";
    "if i14 >= i13 goto $r10 = new java.math.BigDecimal"->"r50 = r49[i14]";
    "if i14 >= i13 goto $r10 = new java.math.BigDecimal"->"$r10 = new java.math.BigDecimal";
    "r50 = r49[i14]"->"r51 = r6";
    "r51 = r6"->"i15 = lengthof r51";
    "i15 = lengthof r51"->"i16 = 0";
    "i16 = 0"->"if i16 >= i15 goto i14 = i14 + 1";
    "if i16 >= i15 goto i14 = i14 + 1"->"i17 = r51[i16]";
    "if i16 >= i15 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "i17 = r51[i16]"->"$r42 = new java.math.MathContext";
    "$r42 = new java.math.MathContext"->"specialinvoke $r42.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i17, r50)";
    "specialinvoke $r42.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i17, r50)"->"$i10 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r46, r47, r48, $r42)";
    "$i10 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r46, r47, r48, $r42)"->"i12 = i12 + $i10";
    "i12 = i12 + $i10"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 >= i15 goto i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= i13 goto $r10 = new java.math.BigDecimal";
    "$r10 = new java.math.BigDecimal"->"specialinvoke $r10.<java.math.BigDecimal: void <init>(int)>(123000)";
    "specialinvoke $r10.<java.math.BigDecimal: void <init>(int)>(123000)"->"r52 = $r10";
    "r52 = $r10"->"$r11 = new java.math.BigDecimal";
    "$r11 = new java.math.BigDecimal"->"specialinvoke $r11.<java.math.BigDecimal: void <init>(int)>(10)";
    "specialinvoke $r11.<java.math.BigDecimal: void <init>(int)>(10)"->"r53 = $r11";
    "r53 = $r11"->"$r12 = newarray (int)[6]";
    "$r12 = newarray (int)[6]"->"$r12[0] = 0";
    "$r12[0] = 0"->"$r12[1] = 1";
    "$r12[1] = 1"->"$r12[2] = 2";
    "$r12[2] = 2"->"$r12[3] = 3";
    "$r12[3] = 3"->"$r12[4] = 4";
    "$r12[4] = 4"->"$r12[5] = 5";
    "$r12[5] = 5"->"r54 = $r12";
    "r54 = $r12"->"$r13 = newarray (java.math.BigDecimal)[6]";
    "$r13 = newarray (java.math.BigDecimal)[6]"->"$r14 = new java.math.BigDecimal";
    "$r14 = new java.math.BigDecimal"->"specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")";
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"->"$r13[0] = $r14";
    "$r13[0] = $r14"->"$r13[1] = null";
    "$r13[1] = null"->"$r13[2] = null";
    "$r13[2] = null"->"$r15 = new java.math.BigDecimal";
    "$r15 = new java.math.BigDecimal"->"specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r13[3] = $r15";
    "$r13[3] = $r15"->"$r16 = new java.math.BigDecimal";
    "$r16 = new java.math.BigDecimal"->"specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")";
    "specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")"->"$r13[4] = $r16";
    "$r13[4] = $r16"->"$r17 = new java.math.BigDecimal";
    "$r17 = new java.math.BigDecimal"->"specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")";
    "specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"->"$r13[5] = $r17";
    "$r13[5] = $r17"->"r55 = $r13";
    "r55 = $r13"->"r56 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()";
    "r56 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"->"i18 = lengthof r56";
    "i18 = lengthof r56"->"i19 = 0";
    "i19 = 0"->"if i19 >= i18 goto $r18 = new java.math.BigDecimal";
    "if i19 >= i18 goto $r18 = new java.math.BigDecimal"->"r57 = r56[i19]";
    "if i19 >= i18 goto $r18 = new java.math.BigDecimal"->"$r18 = new java.math.BigDecimal";
    "r57 = r56[i19]"->"i20 = 0";
    "i20 = 0"->"$i7 = lengthof r54";
    "$i7 = lengthof r54"->"if i20 >= $i7 goto i19 = i19 + 1";
    "if i20 >= $i7 goto i19 = i19 + 1"->"$r41 = r55[i20]";
    "if i20 >= $i7 goto i19 = i19 + 1"->"i19 = i19 + 1";
    "$r41 = r55[i20]"->"$r40 = new java.math.MathContext";
    "$r40 = new java.math.MathContext"->"$i8 = r54[i20]";
    "$i8 = r54[i20]"->"specialinvoke $r40.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i8, r57)";
    "specialinvoke $r40.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i8, r57)"->"$i9 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r52, r53, $r41, $r40)";
    "$i9 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r52, r53, $r41, $r40)"->"i12 = i12 + $i9";
    "i12 = i12 + $i9"->"i20 = i20 + 1";
    "i20 = i20 + 1"->"goto [?= $i7 = lengthof r54]";
    "goto [?= $i7 = lengthof r54]"->"$i7 = lengthof r54";
    "i19 = i19 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i19 >= i18 goto $r18 = new java.math.BigDecimal";
    "$r18 = new java.math.BigDecimal"->"specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e3\")";
    "specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e3\")"->"r58 = $r18";
    "r58 = $r18"->"$r19 = new java.math.BigDecimal";
    "$r19 = new java.math.BigDecimal"->"specialinvoke $r19.<java.math.BigDecimal: void <init>(int)>(10)";
    "specialinvoke $r19.<java.math.BigDecimal: void <init>(int)>(10)"->"r59 = $r19";
    "r59 = $r19"->"$r20 = newarray (int)[6]";
    "$r20 = newarray (int)[6]"->"$r20[0] = 0";
    "$r20[0] = 0"->"$r20[1] = 1";
    "$r20[1] = 1"->"$r20[2] = 2";
    "$r20[2] = 2"->"$r20[3] = 3";
    "$r20[3] = 3"->"$r20[4] = 4";
    "$r20[4] = 4"->"$r20[5] = 5";
    "$r20[5] = 5"->"r60 = $r20";
    "r60 = $r20"->"$r21 = newarray (java.math.BigDecimal)[6]";
    "$r21 = newarray (java.math.BigDecimal)[6]"->"$r22 = new java.math.BigDecimal";
    "$r22 = new java.math.BigDecimal"->"specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r21[0] = $r22";
    "$r21[0] = $r22"->"$r21[1] = null";
    "$r21[1] = null"->"$r21[2] = null";
    "$r21[2] = null"->"$r23 = new java.math.BigDecimal";
    "$r23 = new java.math.BigDecimal"->"specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r21[3] = $r23";
    "$r21[3] = $r23"->"$r24 = new java.math.BigDecimal";
    "$r24 = new java.math.BigDecimal"->"specialinvoke $r24.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r24.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r21[4] = $r24";
    "$r21[4] = $r24"->"$r25 = new java.math.BigDecimal";
    "$r25 = new java.math.BigDecimal"->"specialinvoke $r25.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r25.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r21[5] = $r25";
    "$r21[5] = $r25"->"r61 = $r21";
    "r61 = $r21"->"r62 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()";
    "r62 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"->"i21 = lengthof r62";
    "i21 = lengthof r62"->"i22 = 0";
    "i22 = 0"->"if i22 >= i21 goto $r26 = new java.math.BigDecimal";
    "if i22 >= i21 goto $r26 = new java.math.BigDecimal"->"r63 = r62[i22]";
    "if i22 >= i21 goto $r26 = new java.math.BigDecimal"->"$r26 = new java.math.BigDecimal";
    "r63 = r62[i22]"->"i23 = 0";
    "i23 = 0"->"$i4 = lengthof r60";
    "$i4 = lengthof r60"->"if i23 >= $i4 goto i22 = i22 + 1";
    "if i23 >= $i4 goto i22 = i22 + 1"->"$r39 = r61[i23]";
    "if i23 >= $i4 goto i22 = i22 + 1"->"i22 = i22 + 1";
    "$r39 = r61[i23]"->"$r38 = new java.math.MathContext";
    "$r38 = new java.math.MathContext"->"$i5 = r60[i23]";
    "$i5 = r60[i23]"->"specialinvoke $r38.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i5, r63)";
    "specialinvoke $r38.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i5, r63)"->"$i6 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r58, r59, $r39, $r38)";
    "$i6 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r58, r59, $r39, $r38)"->"i12 = i12 + $i6";
    "i12 = i12 + $i6"->"i23 = i23 + 1";
    "i23 = i23 + 1"->"goto [?= $i4 = lengthof r60]";
    "goto [?= $i4 = lengthof r60]"->"$i4 = lengthof r60";
    "i22 = i22 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i22 >= i21 goto $r26 = new java.math.BigDecimal";
    "$r26 = new java.math.BigDecimal"->"specialinvoke $r26.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123000\")";
    "specialinvoke $r26.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123000\")"->"r64 = $r26";
    "r64 = $r26"->"$r27 = new java.math.BigDecimal";
    "$r27 = new java.math.BigDecimal"->"specialinvoke $r27.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1e1\")";
    "specialinvoke $r27.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1e1\")"->"r65 = $r27";
    "r65 = $r27"->"$r28 = newarray (int)[7]";
    "$r28 = newarray (int)[7]"->"$r28[0] = 0";
    "$r28[0] = 0"->"$r28[1] = 1";
    "$r28[1] = 1"->"$r28[2] = 2";
    "$r28[2] = 2"->"$r28[3] = 3";
    "$r28[3] = 3"->"$r28[4] = 4";
    "$r28[4] = 4"->"$r28[5] = 5";
    "$r28[5] = 5"->"$r28[6] = 6";
    "$r28[6] = 6"->"r66 = $r28";
    "r66 = $r28"->"$r29 = newarray (java.math.BigDecimal)[7]";
    "$r29 = newarray (java.math.BigDecimal)[7]"->"$r30 = new java.math.BigDecimal";
    "$r30 = new java.math.BigDecimal"->"specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")";
    "specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")"->"$r29[0] = $r30";
    "$r29[0] = $r30"->"$r29[1] = null";
    "$r29[1] = null"->"$r29[2] = null";
    "$r29[2] = null"->"$r31 = new java.math.BigDecimal";
    "$r31 = new java.math.BigDecimal"->"specialinvoke $r31.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")";
    "specialinvoke $r31.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123e2\")"->"$r29[3] = $r31";
    "$r29[3] = $r31"->"$r32 = new java.math.BigDecimal";
    "$r32 = new java.math.BigDecimal"->"specialinvoke $r32.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")";
    "specialinvoke $r32.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1230e1\")"->"$r29[4] = $r32";
    "$r29[4] = $r32"->"$r33 = new java.math.BigDecimal";
    "$r33 = new java.math.BigDecimal"->"specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")";
    "specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300\")"->"$r29[5] = $r33";
    "$r29[5] = $r33"->"$r34 = new java.math.BigDecimal";
    "$r34 = new java.math.BigDecimal"->"specialinvoke $r34.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")";
    "specialinvoke $r34.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12300.0\")"->"$r29[6] = $r34";
    "$r29[6] = $r34"->"r67 = $r29";
    "r67 = $r29"->"r68 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()";
    "r68 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>()"->"i24 = lengthof r68";
    "i24 = lengthof r68"->"i25 = 0";
    "i25 = 0"->"if i25 >= i24 goto return i12";
    "if i25 >= i24 goto return i12"->"r35 = r68[i25]";
    "if i25 >= i24 goto return i12"->"return i12";
    "r35 = r68[i25]"->"i26 = 0";
    "i26 = 0"->"$i1 = lengthof r66";
    "$i1 = lengthof r66"->"if i26 >= $i1 goto i25 = i25 + 1";
    "if i26 >= $i1 goto i25 = i25 + 1"->"$r37 = r67[i26]";
    "if i26 >= $i1 goto i25 = i25 + 1"->"i25 = i25 + 1";
    "$r37 = r67[i26]"->"$r36 = new java.math.MathContext";
    "$r36 = new java.math.MathContext"->"$i2 = r66[i26]";
    "$i2 = r66[i26]"->"specialinvoke $r36.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i2, r35)";
    "specialinvoke $r36.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>($i2, r35)"->"$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r64, r65, $r37, $r36)";
    "$i3 = staticinvoke <javaT.math.BigDecimal.IntegralDivisionTests: int divideContextTests(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.MathContext)>(r64, r65, $r37, $r36)"->"i12 = i12 + $i3";
    "i12 = i12 + $i3"->"i26 = i26 + 1";
    "i26 = i26 + 1"->"goto [?= $i1 = lengthof r66]";
    "goto [?= $i1 = lengthof r66]"->"$i1 = lengthof r66";
    "i25 = i25 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i25 >= i24 goto return i12";
}
