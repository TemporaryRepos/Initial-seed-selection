digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i6 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
virtualinvoke r0.<java.util.Calendar: void add(int,int)>(1, 1);
i7 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
$i0 = i6 + 1;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i7, $i0, \"add(+YEAR)\");
r1 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
virtualinvoke r1.<java.util.Calendar: void add(int,int)>(1, -3);
i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
$i1 = i8 - 3;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i9, $i1, \"add(-YEAR)\");
r2 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i10 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);
virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 11);
virtualinvoke r2.<java.util.Calendar: void add(int,int)>(2, 2);
i11 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);
$i2 = i10 + 1;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i11, $i2, \"add(+MONTH)\");
r3 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i12 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1);
virtualinvoke r3.<java.util.Calendar: void set(int,int)>(2, 1);
virtualinvoke r3.<java.util.Calendar: void add(int,int)>(2, -4);
i13 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1);
$i3 = i12 - 1;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i13, $i3, \"add(-MONTH)\");
r4 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i14 = virtualinvoke r4.<java.util.Calendar: int get(int)>(1);
virtualinvoke r4.<java.util.Calendar: void roll(int,int)>(1, 2);
i15 = virtualinvoke r4.<java.util.Calendar: int get(int)>(1);
$i4 = i14 + 2;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i15, $i4, \"roll(+YEAR)\");
r5 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i16 = virtualinvoke r5.<java.util.Calendar: int get(int)>(1);
virtualinvoke r5.<java.util.Calendar: void roll(int,int)>(1, -4);
i17 = virtualinvoke r5.<java.util.Calendar: int get(int)>(1);
$i5 = i16 - 4;
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i17, $i5, \"roll(-YEAR)\");
r6 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
virtualinvoke r6.<java.util.Calendar: void set(int,int)>(1, 2543);
virtualinvoke r6.<java.util.Calendar: void set(int,int)>(2, 11);
virtualinvoke r6.<java.util.Calendar: void set(int,int)>(5, 31);
i18 = virtualinvoke r6.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i18, 2543, \"roll(+WEEK_OF_YEAR)\");
virtualinvoke r6.<java.util.Calendar: void roll(int,int)>(3, 10);
i19 = virtualinvoke r6.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i19, i18, \"roll(+WEEK_OF_YEAR)\");
r7 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
virtualinvoke r7.<java.util.Calendar: void set(int,int)>(1, 2543);
virtualinvoke r7.<java.util.Calendar: void set(int,int)>(2, 0);
virtualinvoke r7.<java.util.Calendar: void set(int,int)>(5, 1);
i20 = virtualinvoke r7.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i20, 2543, \"roll(+WEEK_OF_YEAR)\");
virtualinvoke r7.<java.util.Calendar: void roll(int,int)>(3, -10);
i21 = virtualinvoke r7.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i21, i20, \"roll(-WEEK_OF_YEAR)\");
r8 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i22 = virtualinvoke r8.<java.util.Calendar: int get(int)>(1);
virtualinvoke r8.<java.util.Calendar: void set(int,int,int)>(3001, 3, 10);
i23 = virtualinvoke r8.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i23, 3001, \"set(year, month, date)\");
r9 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i24 = virtualinvoke r9.<java.util.Calendar: int get(int)>(1);
virtualinvoke r9.<java.util.Calendar: void set(int,int,int,int,int)>(3020, 4, 20, 9, 10);
i25 = virtualinvoke r9.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i25, 3020, \"set(year, month, date, hour, minute)\");
r10 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i26 = virtualinvoke r10.<java.util.Calendar: int get(int)>(1);
virtualinvoke r10.<java.util.Calendar: void set(int,int,int,int,int,int)>(3120, 4, 20, 9, 10, 52);
i27 = virtualinvoke r10.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i27, 3120, \"set(year, month, date, hour, minute, second)\");
r11 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i28 = virtualinvoke r11.<java.util.Calendar: int get(int)>(1);
i29 = virtualinvoke r11.<java.util.Calendar: int getActualMaximum(int)>(1);
i30 = virtualinvoke r11.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i30, i28, \"BuddhistCalendar.getActualMaximum(YEAR)\");
r12 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i31 = virtualinvoke r12.<java.util.Calendar: int get(int)>(1);
i32 = virtualinvoke r12.<java.util.Calendar: int getActualMinimum(int)>(1);
i33 = virtualinvoke r12.<java.util.Calendar: int get(int)>(1);
staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: void check(int,int,java.lang.String)>(i33, i31, \"BuddhistCalendar.getActualMinimum(YEAR)\");
return;
"
}
