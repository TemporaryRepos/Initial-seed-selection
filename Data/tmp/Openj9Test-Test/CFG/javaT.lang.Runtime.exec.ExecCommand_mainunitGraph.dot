digraph "unitGraph" {
    "r59 := @parameter0: java.lang.String[]"
    "$r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"
    "$z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"Windows\")"
    "if $z0 != 0 goto $r1 = new java.io.File"
    "return"
    "$r1 = new java.io.File"
    "specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(\".\\Program Files\")"
    "virtualinvoke $r1.<java.io.File: boolean mkdirs()>()"
    "i2 = 0"
    "$r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"
    "$i0 = lengthof $r2"
    "if i2 >= $i0 goto (branch)"
    "$r31 = new java.io.BufferedWriter"
    "$r32 = new java.io.FileWriter"
    "$r33 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"
    "$r34 = $r33[i2]"
    "specialinvoke $r32.<java.io.FileWriter: void <init>(java.lang.String)>($r34)"
    "specialinvoke $r31.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r32)"
    "r60 = $r31"
    "r61 = null"
    "virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")"
    "if r60 == null goto i2 = i2 + 1"
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"
    "goto [?= i2 = i2 + 1]"
    "$r58 := @caughtexception"
    "r62 = $r58"
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r62)"
    "$r57 := @caughtexception"
    "r63 = $r57"
    "r61 = r63"
    "throw r63"
    "$r56 := @caughtexception"
    "r55 = $r56"
    "if r60 == null goto throw r55"
    "goto [?= throw r55]"
    "$r53 := @caughtexception"
    "r54 = $r53"
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r54)"
    "throw r55"
    "i2 = i2 + 1"
    "goto [?= $r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>]"
    "goto [?= i3 = 0]"
    "$r50 := @caughtexception"
    "r64 = $r50"
    "$r51 = new java.lang.Error"
    "$r52 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>()"
    "specialinvoke $r51.<java.lang.Error: void <init>(java.lang.String)>($r52)"
    "throw $r51"
    "i3 = 0"
    "if i3 >= 4 goto return"
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"
    "goto [?= i4 = 0]"
    "staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\")"
    "staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\")"
    "$r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan"
    "specialinvoke $r3.<javaT.lang.Runtime.exec.ExecCommand$SecurityMan: void <init>()>()"
    "staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r3)"
    "i4 = 0"
    "$r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"
    "$i5 = lengthof $r65"
    "if i4 >= $i5 goto i3 = i3 + 1"
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")"
    "goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]"
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"
    "$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"
    "$r68 = $r67[i4]"
    "r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)"
    "virtualinvoke r69.<java.lang.Process: int waitFor()>()"
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")"
    "goto [?= r70 = \"Success\"]"
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"
    "r70 = \"Success\""
    "goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]"
    "$r45 := @caughtexception"
    "r71 = $r45"
    "$r46 = new java.lang.StringBuilder"
    "specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IOException: \")"
    "$r48 = virtualinvoke r71.<java.io.IOException: java.lang.String getMessage()>()"
    "$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)"
    "r70 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r40 := @caughtexception"
    "r72 = $r40"
    "$r41 = new java.lang.StringBuilder"
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException: \")"
    "$r43 = virtualinvoke r72.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()"
    "$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)"
    "r70 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r35 := @caughtexception"
    "r73 = $r35"
    "$r36 = new java.lang.StringBuilder"
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AccessControlException: \")"
    "$r38 = virtualinvoke r73.<java.security.AccessControlException: java.lang.String getMessage()>()"
    "$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)"
    "r70 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>"
    "$r75 = $r74[i4]"
    "$r76 = $r75[i3]"
    "$z2 = virtualinvoke r70.<java.lang.String: boolean startsWith(java.lang.String)>($r76)"
    "if $z2 != 0 goto $r5 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.Error"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected output! Step\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nArgument: \")"
    "$r18 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"
    "$r19 = $r18[i4]"
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nExpected: \")"
    "$r22 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>"
    "$r23 = $r22[i4]"
    "$r24 = $r23[i3]"
    "$r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n  Output: \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r28)"
    "throw $r11"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"RTE OK:\")"
    "$r7 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"
    "$r8 = $r7[i4]"
    "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "i4 = i4 + 1"
    "goto [?= $r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>]"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "r59 := @parameter0: java.lang.String[]"->"$r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")";
    "$r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"->"$z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"Windows\")";
    "$z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"Windows\")"->"if $z0 != 0 goto $r1 = new java.io.File";
    "if $z0 != 0 goto $r1 = new java.io.File"->"return";
    "if $z0 != 0 goto $r1 = new java.io.File"->"$r1 = new java.io.File";
    "if $z0 != 0 goto $r1 = new java.io.File"->"$r50 := @caughtexception";
    "$r1 = new java.io.File"->"specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(\".\\Program Files\")";
    "$r1 = new java.io.File"->"$r50 := @caughtexception";
    "specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(\".\\Program Files\")"->"virtualinvoke $r1.<java.io.File: boolean mkdirs()>()";
    "specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(\".\\Program Files\")"->"$r50 := @caughtexception";
    "virtualinvoke $r1.<java.io.File: boolean mkdirs()>()"->"i2 = 0";
    "virtualinvoke $r1.<java.io.File: boolean mkdirs()>()"->"$r50 := @caughtexception";
    "i2 = 0"->"$r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>";
    "i2 = 0"->"$r50 := @caughtexception";
    "$r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"->"$i0 = lengthof $r2";
    "$r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"->"$r50 := @caughtexception";
    "$i0 = lengthof $r2"->"if i2 >= $i0 goto (branch)";
    "$i0 = lengthof $r2"->"$r50 := @caughtexception";
    "if i2 >= $i0 goto (branch)"->"$r31 = new java.io.BufferedWriter";
    "if i2 >= $i0 goto (branch)"->"goto [?= i3 = 0]";
    "if i2 >= $i0 goto (branch)"->"$r50 := @caughtexception";
    "$r31 = new java.io.BufferedWriter"->"$r32 = new java.io.FileWriter";
    "$r31 = new java.io.BufferedWriter"->"$r50 := @caughtexception";
    "$r32 = new java.io.FileWriter"->"$r33 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>";
    "$r32 = new java.io.FileWriter"->"$r50 := @caughtexception";
    "$r33 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"->"$r34 = $r33[i2]";
    "$r33 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>"->"$r50 := @caughtexception";
    "$r34 = $r33[i2]"->"specialinvoke $r32.<java.io.FileWriter: void <init>(java.lang.String)>($r34)";
    "$r34 = $r33[i2]"->"$r50 := @caughtexception";
    "specialinvoke $r32.<java.io.FileWriter: void <init>(java.lang.String)>($r34)"->"specialinvoke $r31.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r32)";
    "specialinvoke $r32.<java.io.FileWriter: void <init>(java.lang.String)>($r34)"->"$r50 := @caughtexception";
    "specialinvoke $r31.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r32)"->"r60 = $r31";
    "specialinvoke $r31.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r32)"->"$r50 := @caughtexception";
    "r60 = $r31"->"r61 = null";
    "r60 = $r31"->"$r50 := @caughtexception";
    "r61 = null"->"$r57 := @caughtexception";
    "r61 = null"->"$r50 := @caughtexception";
    "r61 = null"->"$r56 := @caughtexception";
    "r61 = null"->"virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")";
    "virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")"->"$r57 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")"->"$r56 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void write(java.lang.String)>(\"@echo %1\")"->"if r60 == null goto i2 = i2 + 1";
    "if r60 == null goto i2 = i2 + 1"->"if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r60 == null goto i2 = i2 + 1"->"i2 = i2 + 1";
    "if r60 == null goto i2 = i2 + 1"->"$r50 := @caughtexception";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r58 := @caughtexception";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r58 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"goto [?= i2 = i2 + 1]";
    "goto [?= i2 = i2 + 1]"->"i2 = i2 + 1";
    "goto [?= i2 = i2 + 1]"->"$r50 := @caughtexception";
    "$r58 := @caughtexception"->"r62 = $r58";
    "$r58 := @caughtexception"->"$r50 := @caughtexception";
    "r62 = $r58"->"virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r62)";
    "r62 = $r58"->"$r50 := @caughtexception";
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r62)"->"goto [?= i2 = i2 + 1]";
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r62)"->"$r50 := @caughtexception";
    "goto [?= i2 = i2 + 1]"->"i2 = i2 + 1";
    "goto [?= i2 = i2 + 1]"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"goto [?= i2 = i2 + 1]";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "goto [?= i2 = i2 + 1]"->"i2 = i2 + 1";
    "goto [?= i2 = i2 + 1]"->"$r50 := @caughtexception";
    "$r57 := @caughtexception"->"r63 = $r57";
    "$r57 := @caughtexception"->"$r56 := @caughtexception";
    "r63 = $r57"->"r61 = r63";
    "r63 = $r57"->"$r56 := @caughtexception";
    "r61 = r63"->"throw r63";
    "r61 = r63"->"$r56 := @caughtexception";
    "throw r63"->"$r56 := @caughtexception";
    "$r56 := @caughtexception"->"r55 = $r56";
    "$r56 := @caughtexception"->"$r56 := @caughtexception";
    "r55 = $r56"->"$r56 := @caughtexception";
    "r55 = $r56"->"$r50 := @caughtexception";
    "r55 = $r56"->"if r60 == null goto throw r55";
    "if r60 == null goto throw r55"->"if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r60 == null goto throw r55"->"throw r55";
    "if r60 == null goto throw r55"->"$r50 := @caughtexception";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"virtualinvoke r60.<java.io.BufferedWriter: void close()>()";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r53 := @caughtexception";
    "if r61 == null goto virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r53 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"goto [?= throw r55]";
    "goto [?= throw r55]"->"throw r55";
    "goto [?= throw r55]"->"$r50 := @caughtexception";
    "$r53 := @caughtexception"->"r54 = $r53";
    "$r53 := @caughtexception"->"$r50 := @caughtexception";
    "r54 = $r53"->"virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r54)";
    "r54 = $r53"->"$r50 := @caughtexception";
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r54)"->"goto [?= throw r55]";
    "virtualinvoke r61.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r54)"->"$r50 := @caughtexception";
    "goto [?= throw r55]"->"throw r55";
    "goto [?= throw r55]"->"$r50 := @caughtexception";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"throw r55";
    "virtualinvoke r60.<java.io.BufferedWriter: void close()>()"->"$r50 := @caughtexception";
    "throw r55"->"$r50 := @caughtexception";
    "i2 = i2 + 1"->"goto [?= $r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>]";
    "i2 = i2 + 1"->"$r50 := @caughtexception";
    "goto [?= $r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>]"->"$r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>";
    "goto [?= $r2 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] doCmdCopy>]"->"$r50 := @caughtexception";
    "goto [?= i3 = 0]"->"i3 = 0";
    "$r50 := @caughtexception"->"r64 = $r50";
    "r64 = $r50"->"$r51 = new java.lang.Error";
    "$r51 = new java.lang.Error"->"$r52 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>()";
    "$r52 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>()"->"specialinvoke $r51.<java.lang.Error: void <init>(java.lang.String)>($r52)";
    "specialinvoke $r51.<java.lang.Error: void <init>(java.lang.String)>($r52)"->"throw $r51";
    "i3 = 0"->"if i3 >= 4 goto return";
    "if i3 >= 4 goto return"->"tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }";
    "if i3 >= 4 goto return"->"return";
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"->"goto [?= i4 = 0]";
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"->"staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\")";
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"->"staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\")";
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"->"$r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan";
    "tableswitch(i3) {     case 0: goto goto [?= i4 = 0];     case 1: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\");     case 2: goto staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\");     case 3: goto $r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan;     default: goto i4 = 0; }"->"i4 = 0";
    "goto [?= i4 = 0]"->"i4 = 0";
    "staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"false\")"->"goto [?= i4 = 0]";
    "goto [?= i4 = 0]"->"i4 = 0";
    "staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"jdk.lang.Process.allowAmbiguousCommands\", \"\")"->"goto [?= i4 = 0]";
    "goto [?= i4 = 0]"->"i4 = 0";
    "$r3 = new javaT.lang.Runtime.exec.ExecCommand$SecurityMan"->"specialinvoke $r3.<javaT.lang.Runtime.exec.ExecCommand$SecurityMan: void <init>()>()";
    "specialinvoke $r3.<javaT.lang.Runtime.exec.ExecCommand$SecurityMan: void <init>()>()"->"staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r3)";
    "staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>($r3)"->"i4 = 0";
    "i4 = 0"->"$r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>";
    "$r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$i5 = lengthof $r65";
    "$i5 = lengthof $r65"->"if i4 >= $i5 goto i3 = i3 + 1";
    "if i4 >= $i5 goto i3 = i3 + 1"->"$r45 := @caughtexception";
    "if i4 >= $i5 goto i3 = i3 + 1"->"$r40 := @caughtexception";
    "if i4 >= $i5 goto i3 = i3 + 1"->"$r35 := @caughtexception";
    "if i4 >= $i5 goto i3 = i3 + 1"->"lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }";
    "if i4 >= $i5 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"$r45 := @caughtexception";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"$r40 := @caughtexception";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>(); }"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r45 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r40 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\dirOut.txt\")"->"goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]";
    "goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]"->"$r45 := @caughtexception";
    "goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]"->"$r40 := @caughtexception";
    "goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]"->"$r35 := @caughtexception";
    "goto [?= $r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()]"->"$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r45 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r40 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void deleteOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r45 := @caughtexception";
    "$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r40 := @caughtexception";
    "$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r35 := @caughtexception";
    "$r66 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>";
    "$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r45 := @caughtexception";
    "$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r40 := @caughtexception";
    "$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r35 := @caughtexception";
    "$r67 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r68 = $r67[i4]";
    "$r68 = $r67[i4]"->"$r45 := @caughtexception";
    "$r68 = $r67[i4]"->"$r40 := @caughtexception";
    "$r68 = $r67[i4]"->"$r35 := @caughtexception";
    "$r68 = $r67[i4]"->"r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)";
    "r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)"->"$r45 := @caughtexception";
    "r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)"->"$r40 := @caughtexception";
    "r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)"->"$r35 := @caughtexception";
    "r69 = virtualinvoke $r66.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r68)"->"virtualinvoke r69.<java.lang.Process: int waitFor()>()";
    "virtualinvoke r69.<java.lang.Process: int waitFor()>()"->"$r45 := @caughtexception";
    "virtualinvoke r69.<java.lang.Process: int waitFor()>()"->"$r40 := @caughtexception";
    "virtualinvoke r69.<java.lang.Process: int waitFor()>()"->"$r35 := @caughtexception";
    "virtualinvoke r69.<java.lang.Process: int waitFor()>()"->"lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"r70 = \"Success\"";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"$r45 := @caughtexception";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"$r40 := @caughtexception";
    "lookupswitch(i4) {     case 0: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\");     case 1: goto staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\");     default: goto r70 = \"Success\"; }"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r45 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r40 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\dirOut.txt\")"->"goto [?= r70 = \"Success\"]";
    "goto [?= r70 = \"Success\"]"->"$r45 := @caughtexception";
    "goto [?= r70 = \"Success\"]"->"$r40 := @caughtexception";
    "goto [?= r70 = \"Success\"]"->"$r35 := @caughtexception";
    "goto [?= r70 = \"Success\"]"->"r70 = \"Success\"";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r45 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r40 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"$r35 := @caughtexception";
    "staticinvoke <javaT.lang.Runtime.exec.ExecCommand: void checkOut(java.lang.String)>(\".\\Program Files\\dirOut.txt\")"->"r70 = \"Success\"";
    "r70 = \"Success\""->"$r45 := @caughtexception";
    "r70 = \"Success\""->"$r40 := @caughtexception";
    "r70 = \"Success\""->"$r35 := @caughtexception";
    "r70 = \"Success\""->"goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]";
    "goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]"->"$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>";
    "$r45 := @caughtexception"->"r71 = $r45";
    "r71 = $r45"->"$r46 = new java.lang.StringBuilder";
    "$r46 = new java.lang.StringBuilder"->"specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IOException: \")";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IOException: \")"->"$r48 = virtualinvoke r71.<java.io.IOException: java.lang.String getMessage()>()";
    "$r48 = virtualinvoke r71.<java.io.IOException: java.lang.String getMessage()>()"->"$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)";
    "$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)"->"r70 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r70 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()"->"goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]";
    "goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]"->"$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>";
    "$r40 := @caughtexception"->"r72 = $r40";
    "r72 = $r40"->"$r41 = new java.lang.StringBuilder";
    "$r41 = new java.lang.StringBuilder"->"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException: \")";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException: \")"->"$r43 = virtualinvoke r72.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()";
    "$r43 = virtualinvoke r72.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()"->"$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)";
    "$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)"->"r70 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r70 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]";
    "goto [?= $r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>]"->"$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>";
    "$r35 := @caughtexception"->"r73 = $r35";
    "r73 = $r35"->"$r36 = new java.lang.StringBuilder";
    "$r36 = new java.lang.StringBuilder"->"specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AccessControlException: \")";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AccessControlException: \")"->"$r38 = virtualinvoke r73.<java.security.AccessControlException: java.lang.String getMessage()>()";
    "$r38 = virtualinvoke r73.<java.security.AccessControlException: java.lang.String getMessage()>()"->"$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)";
    "$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)"->"r70 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r70 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>";
    "$r74 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>"->"$r75 = $r74[i4]";
    "$r75 = $r74[i4]"->"$r76 = $r75[i3]";
    "$r76 = $r75[i3]"->"$z2 = virtualinvoke r70.<java.lang.String: boolean startsWith(java.lang.String)>($r76)";
    "$z2 = virtualinvoke r70.<java.lang.String: boolean startsWith(java.lang.String)>($r76)"->"if $z2 != 0 goto $r5 = <java.lang.System: java.io.PrintStream out>";
    "if $z2 != 0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.Error";
    "if $z2 != 0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r11 = new java.lang.Error"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected output! Step\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected output! Step\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nArgument: \")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nArgument: \")"->"$r18 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>";
    "$r18 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r19 = $r18[i4]";
    "$r19 = $r18[i4]"->"$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)";
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nExpected: \")";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nExpected: \")"->"$r22 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>";
    "$r22 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[][] TEST_RTE_GI>"->"$r23 = $r22[i4]";
    "$r23 = $r22[i4]"->"$r24 = $r23[i3]";
    "$r24 = $r23[i3]"->"$r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)";
    "$r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n  Output: \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n  Output: \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r28)";
    "specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r28)"->"throw $r11";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"RTE OK:\")";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"RTE OK:\")"->"$r7 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>";
    "$r7 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>"->"$r8 = $r7[i4]";
    "$r8 = $r7[i4]"->"$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)";
    "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>]";
    "goto [?= $r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>]"->"$r65 = <javaT.lang.Runtime.exec.ExecCommand: java.lang.String[] TEST_RTE_ARG>";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 4 goto return";
}
