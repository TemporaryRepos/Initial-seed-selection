digraph "unitGraph" {
    "r27 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()"
    "i6 = 0"
    "$r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"
    "$i0 = lengthof $r1"
    "if i6 >= $i0 goto i7 = 0"
    "$r15 = new java.lang.Integer"
    "$r16 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"
    "$i4 = $r16[i6]"
    "specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i4)"
    "r28 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r15)"
    "$r17 = new java.util.concurrent.atomic.AtomicInteger"
    "$r18 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"
    "$i5 = $r18[i6]"
    "specialinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i5)"
    "r29 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r17)"
    "$z1 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r29)"
    "if $z1 != 0 goto i6 = i6 + 1"
    "$r19 = new java.lang.RuntimeException"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicInteger \")"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Integer \")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26)"
    "throw $r19"
    "i6 = i6 + 1"
    "goto [?= $r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>]"
    "i7 = 0"
    "$r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"
    "$i1 = lengthof $r2"
    "if i7 >= $i1 goto return"
    "$r3 = new java.lang.Long"
    "$r4 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"
    "$l2 = $r4[i7]"
    "specialinvoke $r3.<java.lang.Long: void <init>(long)>($l2)"
    "r30 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r3)"
    "$r5 = new java.util.concurrent.atomic.AtomicLong"
    "$r6 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"
    "$l3 = $r6[i7]"
    "specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>($l3)"
    "r31 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r5)"
    "$z0 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>(r31)"
    "if $z0 != 0 goto i7 = i7 + 1"
    "$r7 = new java.lang.RuntimeException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicLong \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Long \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"
    "throw $r7"
    "i7 = i7 + 1"
    "goto [?= $r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>]"
    "return"
    "r27 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()";
    "r0 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()"->"i6 = 0";
    "i6 = 0"->"$r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>";
    "$r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"->"$i0 = lengthof $r1";
    "$i0 = lengthof $r1"->"if i6 >= $i0 goto i7 = 0";
    "if i6 >= $i0 goto i7 = 0"->"$r15 = new java.lang.Integer";
    "if i6 >= $i0 goto i7 = 0"->"i7 = 0";
    "$r15 = new java.lang.Integer"->"$r16 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>";
    "$r16 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"->"$i4 = $r16[i6]";
    "$i4 = $r16[i6]"->"specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i4)";
    "specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i4)"->"r28 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r15)";
    "r28 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r15)"->"$r17 = new java.util.concurrent.atomic.AtomicInteger";
    "$r17 = new java.util.concurrent.atomic.AtomicInteger"->"$r18 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>";
    "$r18 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>"->"$i5 = $r18[i6]";
    "$i5 = $r18[i6]"->"specialinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i5)";
    "specialinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i5)"->"r29 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r17)";
    "r29 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r17)"->"$z1 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r29)";
    "$z1 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>(r29)"->"if $z1 != 0 goto i6 = i6 + 1";
    "if $z1 != 0 goto i6 = i6 + 1"->"$r19 = new java.lang.RuntimeException";
    "if $z1 != 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r19 = new java.lang.RuntimeException"->"$r20 = new java.lang.StringBuilder";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicInteger \")";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicInteger \")"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29)";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Integer \")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Integer \")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26)";
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26)"->"throw $r19";
    "i6 = i6 + 1"->"goto [?= $r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>]";
    "goto [?= $r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>]"->"$r1 = <javaT.text.Format.NumberFormat.Bug6278616: int[] ints>";
    "i7 = 0"->"$r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>";
    "$r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"->"$i1 = lengthof $r2";
    "$i1 = lengthof $r2"->"if i7 >= $i1 goto return";
    "if i7 >= $i1 goto return"->"$r3 = new java.lang.Long";
    "if i7 >= $i1 goto return"->"return";
    "$r3 = new java.lang.Long"->"$r4 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>";
    "$r4 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"->"$l2 = $r4[i7]";
    "$l2 = $r4[i7]"->"specialinvoke $r3.<java.lang.Long: void <init>(long)>($l2)";
    "specialinvoke $r3.<java.lang.Long: void <init>(long)>($l2)"->"r30 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r3)";
    "r30 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r3)"->"$r5 = new java.util.concurrent.atomic.AtomicLong";
    "$r5 = new java.util.concurrent.atomic.AtomicLong"->"$r6 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>";
    "$r6 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>"->"$l3 = $r6[i7]";
    "$l3 = $r6[i7]"->"specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>($l3)";
    "specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>($l3)"->"r31 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r5)";
    "r31 = virtualinvoke r0.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r5)"->"$z0 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>(r31)";
    "$z0 = virtualinvoke r30.<java.lang.String: boolean equals(java.lang.Object)>(r31)"->"if $z0 != 0 goto i7 = i7 + 1";
    "if $z0 != 0 goto i7 = i7 + 1"->"$r7 = new java.lang.RuntimeException";
    "if $z0 != 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r7 = new java.lang.RuntimeException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicLong \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"format(AtomicLong \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Long \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") doesn\'t equal format(Long \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"->"throw $r7";
    "i7 = i7 + 1"->"goto [?= $r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>]";
    "goto [?= $r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>]"->"$r2 = <javaT.text.Format.NumberFormat.Bug6278616: long[] longs>";
}
