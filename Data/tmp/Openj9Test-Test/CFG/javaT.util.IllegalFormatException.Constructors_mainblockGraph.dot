digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
staticinvoke <javaT.util.IllegalFormatException.Constructors: void nullTests()>();
$i0 = <javaT.util.IllegalFormatException.Constructors: int fail>;
if $i0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$i5 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$i4 = <javaT.util.IllegalFormatException.Constructors: int pass>;
$i6 = $i5 + $i4;
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests: \");
$i7 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failure(s), first\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
$r13 = <javaT.util.IllegalFormatException.Constructors: java.lang.Throwable first>;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r13);
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"all \");
$i2 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$i1 = <javaT.util.IllegalFormatException.Constructors: int pass>;
$i3 = $i2 + $i1;
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests passed\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
staticinvoke <javaT.util.IllegalFormatException.Constructors: void nullTests()>();
$i0 = <javaT.util.IllegalFormatException.Constructors: int fail>;
if $i0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$i5 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$i4 = <javaT.util.IllegalFormatException.Constructors: int pass>;
$i6 = $i5 + $i4;
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests: \");
$i7 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failure(s), first\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
$r13 = <javaT.util.IllegalFormatException.Constructors: java.lang.Throwable first>;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r13);
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r14 := @parameter0: java.lang.String[];
staticinvoke <javaT.util.IllegalFormatException.Constructors: void nullTests()>();
$i0 = <javaT.util.IllegalFormatException.Constructors: int fail>;
if $i0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 0 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"all \");
$i2 = <javaT.util.IllegalFormatException.Constructors: int fail>;
$i1 = <javaT.util.IllegalFormatException.Constructors: int pass>;
$i3 = $i2 + $i1;
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests passed\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
return;
";
}
