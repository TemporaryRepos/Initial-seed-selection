digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r22 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"DES\", \"SunJCE\");
r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(\"DES\");
r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(\"DES\");
virtualinvoke r2.<javax.crypto.KeyGenerator: void init(int)>(56);
r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
r4 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r25 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r25);
$r26 = (java.security.Key) r4;
r5 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26);
$r27 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r27);
$r6 = virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r5, \"DES\", 3);
r7 = (javax.crypto.SecretKey) $r6;
$r28 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r28);
r8 = \"Hello\";
$r9 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();
r10 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);
$r29 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r29);
r11 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r10);
$r23 = new java.lang.String;
specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r11);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r23);
if $z0 != 0 goto r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(\"DSA\");
"
    "Block 1:
[preds: 0 ] [succs: ]
$r24 = new java.lang.Exception;
specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"The unwrapped session key is corrupted.\");
throw $r24;
"
    "Block 2:
[preds: 0 ] [succs: ]
r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(\"DSA\");
virtualinvoke r13.<java.security.KeyPairGenerator: void initialize(int)>(1024);
r14 = virtualinvoke r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>();
r15 = virtualinvoke r14.<java.security.KeyPair: java.security.PublicKey getPublic()>();
r16 = virtualinvoke r14.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();
$r30 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r30);
r17 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r15);
r18 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r16);
$r31 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r31);
virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r17, \"DSA\", 1);
virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r18, \"DSA\", 2);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r22 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"DES\", \"SunJCE\");
r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(\"DES\");
r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(\"DES\");
virtualinvoke r2.<javax.crypto.KeyGenerator: void init(int)>(56);
r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
r4 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r25 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r25);
$r26 = (java.security.Key) r4;
r5 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26);
$r27 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r27);
$r6 = virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r5, \"DES\", 3);
r7 = (javax.crypto.SecretKey) $r6;
$r28 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r28);
r8 = \"Hello\";
$r9 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();
r10 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);
$r29 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r29);
r11 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r10);
$r23 = new java.lang.String;
specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r11);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r23);
if $z0 != 0 goto r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(\"DSA\");
"->"Block 1:
[preds: 0 ] [succs: ]
$r24 = new java.lang.Exception;
specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"The unwrapped session key is corrupted.\");
throw $r24;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r22 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(\"DES\", \"SunJCE\");
r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(\"DES\");
r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(\"DES\");
virtualinvoke r2.<javax.crypto.KeyGenerator: void init(int)>(56);
r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
r4 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r25 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r25);
$r26 = (java.security.Key) r4;
r5 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r26);
$r27 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r27);
$r6 = virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r5, \"DES\", 3);
r7 = (javax.crypto.SecretKey) $r6;
$r28 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r28);
r8 = \"Hello\";
$r9 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();
r10 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);
$r29 = (java.security.Key) r7;
virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r29);
r11 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r10);
$r23 = new java.lang.String;
specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r11);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r23);
if $z0 != 0 goto r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(\"DSA\");
"->"Block 2:
[preds: 0 ] [succs: ]
r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(\"DSA\");
virtualinvoke r13.<java.security.KeyPairGenerator: void initialize(int)>(1024);
r14 = virtualinvoke r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>();
r15 = virtualinvoke r14.<java.security.KeyPair: java.security.PublicKey getPublic()>();
r16 = virtualinvoke r14.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();
$r30 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r30);
r17 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r15);
r18 = virtualinvoke r0.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r16);
$r31 = (java.security.Key) r3;
virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r31);
virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r17, \"DSA\", 1);
virtualinvoke r0.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r18, \"DSA\", 2);
return;
";
}
