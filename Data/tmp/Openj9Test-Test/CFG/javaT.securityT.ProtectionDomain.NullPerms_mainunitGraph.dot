digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new java.security.CodeSource"
    "$r1 = (java.security.cert.Certificate[]) null"
    "specialinvoke $r0.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(null, $r1)"
    "r9 = $r0"
    "$r2 = new java.security.ProtectionDomain"
    "specialinvoke $r2.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>(r9, null)"
    "r3 = $r2"
    "$r4 = new java.security.SecurityPermission"
    "specialinvoke $r4.<java.security.SecurityPermission: void <init>(java.lang.String)>(\"foo\")"
    "$z0 = virtualinvoke r3.<java.security.ProtectionDomain: boolean implies(java.security.Permission)>($r4)"
    "if $z0 == 0 goto (branch)"
    "$r5 = new java.lang.Exception"
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"implies should return false\")"
    "throw $r5"
    "goto [?= return]"
    "$r6 := @caughtexception"
    "r10 = $r6"
    "$r7 = new java.lang.Exception"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"should not have caught an exception\")"
    "throw $r7"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new java.security.CodeSource";
    "r8 := @parameter0: java.lang.String[]"->"$r6 := @caughtexception";
    "$r0 = new java.security.CodeSource"->"$r1 = (java.security.cert.Certificate[]) null";
    "$r0 = new java.security.CodeSource"->"$r6 := @caughtexception";
    "$r1 = (java.security.cert.Certificate[]) null"->"specialinvoke $r0.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(null, $r1)";
    "$r1 = (java.security.cert.Certificate[]) null"->"$r6 := @caughtexception";
    "specialinvoke $r0.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(null, $r1)"->"r9 = $r0";
    "specialinvoke $r0.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(null, $r1)"->"$r6 := @caughtexception";
    "r9 = $r0"->"$r2 = new java.security.ProtectionDomain";
    "r9 = $r0"->"$r6 := @caughtexception";
    "$r2 = new java.security.ProtectionDomain"->"specialinvoke $r2.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>(r9, null)";
    "$r2 = new java.security.ProtectionDomain"->"$r6 := @caughtexception";
    "specialinvoke $r2.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>(r9, null)"->"r3 = $r2";
    "specialinvoke $r2.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>(r9, null)"->"$r6 := @caughtexception";
    "r3 = $r2"->"$r4 = new java.security.SecurityPermission";
    "r3 = $r2"->"$r6 := @caughtexception";
    "$r4 = new java.security.SecurityPermission"->"specialinvoke $r4.<java.security.SecurityPermission: void <init>(java.lang.String)>(\"foo\")";
    "$r4 = new java.security.SecurityPermission"->"$r6 := @caughtexception";
    "specialinvoke $r4.<java.security.SecurityPermission: void <init>(java.lang.String)>(\"foo\")"->"$z0 = virtualinvoke r3.<java.security.ProtectionDomain: boolean implies(java.security.Permission)>($r4)";
    "specialinvoke $r4.<java.security.SecurityPermission: void <init>(java.lang.String)>(\"foo\")"->"$r6 := @caughtexception";
    "$z0 = virtualinvoke r3.<java.security.ProtectionDomain: boolean implies(java.security.Permission)>($r4)"->"if $z0 == 0 goto (branch)";
    "$z0 = virtualinvoke r3.<java.security.ProtectionDomain: boolean implies(java.security.Permission)>($r4)"->"$r6 := @caughtexception";
    "if $z0 == 0 goto (branch)"->"$r5 = new java.lang.Exception";
    "if $z0 == 0 goto (branch)"->"goto [?= return]";
    "if $z0 == 0 goto (branch)"->"$r6 := @caughtexception";
    "$r5 = new java.lang.Exception"->"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"implies should return false\")";
    "$r5 = new java.lang.Exception"->"$r6 := @caughtexception";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"implies should return false\")"->"throw $r5";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"implies should return false\")"->"$r6 := @caughtexception";
    "throw $r5"->"$r6 := @caughtexception";
    "goto [?= return]"->"return";
    "$r6 := @caughtexception"->"r10 = $r6";
    "r10 = $r6"->"$r7 = new java.lang.Exception";
    "$r7 = new java.lang.Exception"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"should not have caught an exception\")";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"should not have caught an exception\")"->"throw $r7";
}
