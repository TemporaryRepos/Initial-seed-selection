digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "r8 := @parameter1: java.lang.String"
    "r9 := @parameter2: java.lang.String"
    "$r0 = \"This is the content of the zipfile\""
    "r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")"
    "r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r2)"
    "$r4 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()"
    "r5 = $r4"
    "$r6 = new java.util.zip.ZipOutputStream"
    "specialinvoke $r6.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r5, r3)"
    "r26 = $r6"
    "r27 = null"
    "$r7 = new java.util.zip.ZipEntry"
    "specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r8)"
    "r28 = $r7"
    "virtualinvoke r28.<java.util.zip.ZipEntry: void setComment(java.lang.String)>(r9)"
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r28)"
    "$i0 = lengthof r1"
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r1, 0, $i0)"
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void closeEntry()>()"
    "if r26 == null goto $r33 = new java.io.ByteArrayInputStream"
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"
    "goto [?= $r33 = new java.io.ByteArrayInputStream]"
    "$r25 := @caughtexception"
    "r29 = $r25"
    "virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r29)"
    "$r24 := @caughtexception"
    "r30 = $r24"
    "r27 = r30"
    "throw r30"
    "$r23 := @caughtexception"
    "r31 = $r23"
    "if r26 == null goto throw r31"
    "goto [?= throw r31]"
    "$r22 := @caughtexception"
    "r32 = $r22"
    "virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r32)"
    "throw r31"
    "$r33 = new java.io.ByteArrayInputStream"
    "$r34 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "specialinvoke $r33.<java.io.ByteArrayInputStream: void <init>(byte[])>($r34)"
    "r35 = $r33"
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, r3, r8, r9, r1)"
    "$r36 = \"utf-8\""
    "$z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2)"
    "if $z1 == 0 goto $r10 = new java.io.File"
    "virtualinvoke r35.<java.io.ByteArrayInputStream: void reset()>()"
    "$r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")"
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, $r15, r8, r9, r1)"
    "$r10 = new java.io.File"
    "$r11 = new java.io.File"
    "$r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.dir\", \".\")"
    "specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12)"
    "specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, \"zfcoding.zip\")"
    "r37 = $r10"
    "$r13 = new java.io.FileOutputStream"
    "specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r37)"
    "r38 = $r13"
    "r39 = null"
    "virtualinvoke r5.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r38)"
    "if r38 == null goto staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)"
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"
    "goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]"
    "$r21 := @caughtexception"
    "r40 = $r21"
    "virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r40)"
    "$r20 := @caughtexception"
    "r41 = $r20"
    "r39 = r41"
    "throw r41"
    "$r19 := @caughtexception"
    "r18 = $r19"
    "if r38 == null goto throw r18"
    "goto [?= throw r18]"
    "$r16 := @caughtexception"
    "r17 = $r16"
    "virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)"
    "throw r18"
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)"
    "$r42 = \"utf-8\""
    "$z2 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r2)"
    "if $z2 == 0 goto virtualinvoke r37.<java.io.File: boolean delete()>()"
    "$r14 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")"
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, $r14, r8, r9, r1)"
    "virtualinvoke r37.<java.io.File: boolean delete()>()"
    "return"
    "r2 := @parameter0: java.lang.String"->"r8 := @parameter1: java.lang.String";
    "r8 := @parameter1: java.lang.String"->"r9 := @parameter2: java.lang.String";
    "r9 := @parameter2: java.lang.String"->"$r0 = \"This is the content of the zipfile\"";
    "$r0 = \"This is the content of the zipfile\""->"r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")";
    "r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(\"ISO-8859-1\")"->"r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r2)";
    "r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r2)"->"$r4 = new java.io.ByteArrayOutputStream";
    "$r4 = new java.io.ByteArrayOutputStream"->"specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()";
    "specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"$r6 = new java.util.zip.ZipOutputStream";
    "$r6 = new java.util.zip.ZipOutputStream"->"specialinvoke $r6.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r5, r3)";
    "specialinvoke $r6.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r5, r3)"->"r26 = $r6";
    "r26 = $r6"->"r27 = null";
    "r27 = null"->"$r24 := @caughtexception";
    "r27 = null"->"$r23 := @caughtexception";
    "r27 = null"->"$r7 = new java.util.zip.ZipEntry";
    "$r7 = new java.util.zip.ZipEntry"->"$r24 := @caughtexception";
    "$r7 = new java.util.zip.ZipEntry"->"$r23 := @caughtexception";
    "$r7 = new java.util.zip.ZipEntry"->"specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r8)";
    "specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r8)"->"$r24 := @caughtexception";
    "specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r8)"->"$r23 := @caughtexception";
    "specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r8)"->"r28 = $r7";
    "r28 = $r7"->"$r24 := @caughtexception";
    "r28 = $r7"->"$r23 := @caughtexception";
    "r28 = $r7"->"virtualinvoke r28.<java.util.zip.ZipEntry: void setComment(java.lang.String)>(r9)";
    "virtualinvoke r28.<java.util.zip.ZipEntry: void setComment(java.lang.String)>(r9)"->"$r24 := @caughtexception";
    "virtualinvoke r28.<java.util.zip.ZipEntry: void setComment(java.lang.String)>(r9)"->"$r23 := @caughtexception";
    "virtualinvoke r28.<java.util.zip.ZipEntry: void setComment(java.lang.String)>(r9)"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r28)";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r28)"->"$r24 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r28)"->"$r23 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r28)"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"$r24 := @caughtexception";
    "$i0 = lengthof r1"->"$r23 := @caughtexception";
    "$i0 = lengthof r1"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r1, 0, $i0)";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r1, 0, $i0)"->"$r24 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r1, 0, $i0)"->"$r23 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r1, 0, $i0)"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void closeEntry()>()";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void closeEntry()>()"->"$r24 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void closeEntry()>()"->"$r23 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void closeEntry()>()"->"if r26 == null goto $r33 = new java.io.ByteArrayInputStream";
    "if r26 == null goto $r33 = new java.io.ByteArrayInputStream"->"if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r26 == null goto $r33 = new java.io.ByteArrayInputStream"->"$r33 = new java.io.ByteArrayInputStream";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"$r25 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"goto [?= $r33 = new java.io.ByteArrayInputStream]";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"$r25 := @caughtexception";
    "goto [?= $r33 = new java.io.ByteArrayInputStream]"->"$r33 = new java.io.ByteArrayInputStream";
    "$r25 := @caughtexception"->"r29 = $r25";
    "r29 = $r25"->"virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r29)";
    "virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r29)"->"goto [?= $r33 = new java.io.ByteArrayInputStream]";
    "goto [?= $r33 = new java.io.ByteArrayInputStream]"->"$r33 = new java.io.ByteArrayInputStream";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"goto [?= $r33 = new java.io.ByteArrayInputStream]";
    "goto [?= $r33 = new java.io.ByteArrayInputStream]"->"$r33 = new java.io.ByteArrayInputStream";
    "$r24 := @caughtexception"->"r30 = $r24";
    "$r24 := @caughtexception"->"$r23 := @caughtexception";
    "r30 = $r24"->"r27 = r30";
    "r30 = $r24"->"$r23 := @caughtexception";
    "r27 = r30"->"throw r30";
    "r27 = r30"->"$r23 := @caughtexception";
    "throw r30"->"$r23 := @caughtexception";
    "$r23 := @caughtexception"->"r31 = $r23";
    "$r23 := @caughtexception"->"$r23 := @caughtexception";
    "r31 = $r23"->"if r26 == null goto throw r31";
    "r31 = $r23"->"$r23 := @caughtexception";
    "if r26 == null goto throw r31"->"if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r26 == null goto throw r31"->"throw r31";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()";
    "if r27 == null goto virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"$r22 := @caughtexception";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"goto [?= throw r31]";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"$r22 := @caughtexception";
    "goto [?= throw r31]"->"throw r31";
    "$r22 := @caughtexception"->"r32 = $r22";
    "r32 = $r22"->"virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r32)";
    "virtualinvoke r27.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r32)"->"goto [?= throw r31]";
    "goto [?= throw r31]"->"throw r31";
    "virtualinvoke r26.<java.util.zip.ZipOutputStream: void close()>()"->"throw r31";
    "$r33 = new java.io.ByteArrayInputStream"->"$r34 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "$r34 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"specialinvoke $r33.<java.io.ByteArrayInputStream: void <init>(byte[])>($r34)";
    "specialinvoke $r33.<java.io.ByteArrayInputStream: void <init>(byte[])>($r34)"->"r35 = $r33";
    "r35 = $r33"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, r3, r8, r9, r1)";
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, r3, r8, r9, r1)"->"$r36 = \"utf-8\"";
    "$r36 = \"utf-8\""->"$z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2)";
    "$z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2)"->"if $z1 == 0 goto $r10 = new java.io.File";
    "if $z1 == 0 goto $r10 = new java.io.File"->"virtualinvoke r35.<java.io.ByteArrayInputStream: void reset()>()";
    "if $z1 == 0 goto $r10 = new java.io.File"->"$r10 = new java.io.File";
    "virtualinvoke r35.<java.io.ByteArrayInputStream: void reset()>()"->"$r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")";
    "$r15 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, $r15, r8, r9, r1)";
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r35, $r15, r8, r9, r1)"->"$r10 = new java.io.File";
    "$r10 = new java.io.File"->"$r11 = new java.io.File";
    "$r11 = new java.io.File"->"$r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.dir\", \".\")";
    "$r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.dir\", \".\")"->"specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12)"->"specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, \"zfcoding.zip\")";
    "specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, \"zfcoding.zip\")"->"r37 = $r10";
    "r37 = $r10"->"$r13 = new java.io.FileOutputStream";
    "$r13 = new java.io.FileOutputStream"->"specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r37)";
    "specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r37)"->"r38 = $r13";
    "r38 = $r13"->"r39 = null";
    "r39 = null"->"$r20 := @caughtexception";
    "r39 = null"->"$r19 := @caughtexception";
    "r39 = null"->"virtualinvoke r5.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r38)";
    "virtualinvoke r5.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r38)"->"$r20 := @caughtexception";
    "virtualinvoke r5.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r38)"->"$r19 := @caughtexception";
    "virtualinvoke r5.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r38)"->"if r38 == null goto staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)";
    "if r38 == null goto staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)"->"if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r38 == null goto staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"$r21 := @caughtexception";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"$r21 := @caughtexception";
    "goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)";
    "$r21 := @caughtexception"->"r40 = $r21";
    "r40 = $r21"->"virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r40)";
    "virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r40)"->"goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]";
    "goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]";
    "goto [?= staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)]"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)";
    "$r20 := @caughtexception"->"r41 = $r20";
    "$r20 := @caughtexception"->"$r19 := @caughtexception";
    "r41 = $r20"->"r39 = r41";
    "r41 = $r20"->"$r19 := @caughtexception";
    "r39 = r41"->"throw r41";
    "r39 = r41"->"$r19 := @caughtexception";
    "throw r41"->"$r19 := @caughtexception";
    "$r19 := @caughtexception"->"r18 = $r19";
    "$r19 := @caughtexception"->"$r19 := @caughtexception";
    "r18 = $r19"->"if r38 == null goto throw r18";
    "r18 = $r19"->"$r19 := @caughtexception";
    "if r38 == null goto throw r18"->"if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r38 == null goto throw r18"->"throw r18";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r38.<java.io.FileOutputStream: void close()>()";
    "if r39 == null goto virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"$r16 := @caughtexception";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"goto [?= throw r18]";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"$r16 := @caughtexception";
    "goto [?= throw r18]"->"throw r18";
    "$r16 := @caughtexception"->"r17 = $r16";
    "r17 = $r16"->"virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)";
    "virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)"->"goto [?= throw r18]";
    "goto [?= throw r18]"->"throw r18";
    "virtualinvoke r38.<java.io.FileOutputStream: void close()>()"->"throw r18";
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, r3, r8, r9, r1)"->"$r42 = \"utf-8\"";
    "$r42 = \"utf-8\""->"$z2 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r2)";
    "$z2 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r2)"->"if $z2 == 0 goto virtualinvoke r37.<java.io.File: boolean delete()>()";
    "if $z2 == 0 goto virtualinvoke r37.<java.io.File: boolean delete()>()"->"$r14 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")";
    "if $z2 == 0 goto virtualinvoke r37.<java.io.File: boolean delete()>()"->"virtualinvoke r37.<java.io.File: boolean delete()>()";
    "$r14 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"MS932\")"->"staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, $r14, r8, r9, r1)";
    "staticinvoke <javaT.util.zip.ZipCoding: void testZipFile(java.io.File,java.nio.charset.Charset,java.lang.String,java.lang.String,byte[])>(r37, $r14, r8, r9, r1)"->"virtualinvoke r37.<java.io.File: boolean delete()>()";
    "virtualinvoke r37.<java.io.File: boolean delete()>()"->"return";
}
