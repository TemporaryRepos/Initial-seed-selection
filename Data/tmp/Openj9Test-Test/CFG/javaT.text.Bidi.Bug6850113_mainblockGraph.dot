digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r21 := @parameter0: java.lang.String[];
z0 = 0;
i4 = 65313;
i5 = 10;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i4 > 65338 goto i6 = 65345;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
if $i2 == i5 goto i4 = i4 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i4);
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i3 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r20);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: 6 ]
i6 = 65345;
i7 = 10;
"
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i6 > 65370 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i0 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
if $i0 == i7 goto i6 = i6 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i6);
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i1 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
"
    "Block 9:
[preds: 7 8 ] [succs: 6 ]
i6 = i6 + 1;
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
if z0 == 0 goto return;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"UCharacter.digit():  Wrong return value\");
throw $r0;
"
    "Block 12:
[preds: 10 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r21 := @parameter0: java.lang.String[];
z0 = 0;
i4 = 65313;
i5 = 10;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i4 > 65338 goto i6 = 65345;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i4 > 65338 goto i6 = 65345;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
if $i2 == i5 goto i4 = i4 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i4 > 65338 goto i6 = 65345;
"->"Block 5:
[preds: 1 ] [succs: 6 ]
i6 = 65345;
i7 = 10;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
if $i2 == i5 goto i4 = i4 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i4);
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i3 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r20);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
if $i2 == i5 goto i4 = i4 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
z0 = 1;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i4);
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i3 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i4, 36);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r20);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i4 > 65338 goto i6 = 65345;
";
    "Block 5:
[preds: 1 ] [succs: 6 ]
i6 = 65345;
i7 = 10;
"->"Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i6 > 65370 goto (branch);
";
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i6 > 65370 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i0 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
if $i0 == i7 goto i6 = i6 + 1;
";
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i6 > 65370 goto (branch);
"->"Block 10:
[preds: 6 ] [succs: 11 12 ]
if z0 == 0 goto return;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i0 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
if $i0 == i7 goto i6 = i6 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i6);
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i1 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i0 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
if $i0 == i7 goto i6 = i6 + 1;
"->"Block 9:
[preds: 7 8 ] [succs: 6 ]
i6 = i6 + 1;
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
z0 = 1;
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: UCharacter.digit(0x\");
$r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i6);
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 36) returned \");
$i1 = staticinvoke <sun.text.normalizer.UCharacter: int digit(int,int)>(i6, 36);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected=\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
"->"Block 9:
[preds: 7 8 ] [succs: 6 ]
i6 = i6 + 1;
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 8 ] [succs: 6 ]
i6 = i6 + 1;
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i6 > 65370 goto (branch);
";
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
if z0 == 0 goto return;
"->"Block 11:
[preds: 10 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"UCharacter.digit():  Wrong return value\");
throw $r0;
";
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
if z0 == 0 goto return;
"->"Block 12:
[preds: 10 ] [succs: ]
return;
";
}
