digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.FloatBuffer;
i0 = virtualinvoke r0.<java.nio.FloatBuffer: int capacity()>();
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer clear()>();
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i2);
$f0 = (float) $l1;
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>(i2, $f0);
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.FloatBuffer;
i0 = virtualinvoke r0.<java.nio.FloatBuffer: int capacity()>();
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer clear()>();
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i2);
$f0 = (float) $l1;
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>(i2, $f0);
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i2);
$f0 = (float) $l1;
virtualinvoke r0.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>(i2, $f0);
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer limit(int)>(i0);
";
}
