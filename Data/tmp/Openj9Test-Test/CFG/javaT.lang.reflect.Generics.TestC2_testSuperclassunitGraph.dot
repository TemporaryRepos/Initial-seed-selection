digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\")"
    "$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()"
    "$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"
    "$z24 = r2 instanceof java.lang.reflect.ParameterizedType"
    "if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"
    "$r36 = new java.lang.AssertionError"
    "specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should be a parameterized type\")"
    "throw $r36"
    "r3 = (java.lang.reflect.ParameterizedType) r2"
    "$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"
    "if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r35 = new java.lang.AssertionError"
    "specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw generic superclass of C2 should be C0\")"
    "throw $r35"
    "r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z2 != 0 goto r38 = r37[0]"
    "$i2 = lengthof r37"
    "if $i2 == 1 goto r38 = r37[0]"
    "$r33 = new java.lang.AssertionError"
    "specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should have one type argument\")"
    "throw $r33"
    "r38 = r37[0]"
    "$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"
    "$z23 = r38 instanceof java.lang.reflect.TypeVariable"
    "if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"
    "$r32 = new java.lang.AssertionError"
    "specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument to superclass of C2 should be a type variable\")"
    "throw $r32"
    "r4 = (java.lang.reflect.TypeVariable) r38"
    "$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"
    "if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$r31 = new java.lang.AssertionError"
    "specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Name of type argument to superclass of C2 should be T1\")"
    "throw $r31"
    "r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"
    "$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z5 != 0 goto r39 = r5[0]"
    "$i1 = lengthof r5"
    "if $i1 == 1 goto r39 = r5[0]"
    "$r29 = new java.lang.AssertionError"
    "specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 has one bound (superclass)\")"
    "throw $r29"
    "r39 = r5[0]"
    "$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"
    "$z21 = r39 instanceof java.lang.reflect.ParameterizedType"
    "if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"
    "$r28 = new java.lang.AssertionError"
    "specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of C0 should be a parameterized type\")"
    "throw $r28"
    "r6 = (java.lang.reflect.ParameterizedType) r39"
    "$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"
    "if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$r27 = new java.lang.AssertionError"
    "specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw bound of T1 should be C2\")"
    "throw $r27"
    "r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"
    "$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$i0 = lengthof r40"
    "if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r25 = new java.lang.AssertionError"
    "specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of T1 should have three type arguments\")"
    "throw $r25"
    "$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r23 = r40[0]"
    "$z20 = $r23 instanceof java.lang.reflect.TypeVariable"
    "if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r24 = new java.lang.AssertionError"
    "specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First argument to bound of T1 is a type variable\")"
    "throw $r24"
    "$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r21 = r40[1]"
    "$z19 = $r21 instanceof java.lang.reflect.TypeVariable"
    "if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r22 = new java.lang.AssertionError"
    "specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Second argument to bound of T1 is a type variable\")"
    "throw $r22"
    "$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z11 != 0 goto $r7 = r40[0]"
    "$r19 = r40[2]"
    "$z18 = $r19 instanceof java.lang.reflect.TypeVariable"
    "if $z18 != 0 goto $r7 = r40[0]"
    "$r20 = new java.lang.AssertionError"
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third argument to bound of T1 is a type variable\")"
    "throw $r20"
    "$r7 = r40[0]"
    "r8 = (java.lang.reflect.TypeVariable) $r7"
    "$r9 = r40[1]"
    "r10 = (java.lang.reflect.TypeVariable) $r9"
    "$r11 = r40[2]"
    "r12 = (java.lang.reflect.TypeVariable) $r11"
    "$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"
    "if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r18 = new java.lang.AssertionError"
    "specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First type arg to bound of T1 is T1\")"
    "throw $r18"
    "$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\")"
    "if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "$r16 = new java.lang.AssertionError"
    "specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Seconmd type arg to bound of T1 is T2\")"
    "throw $r16"
    "$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"
    "if $z14 != 0 goto return"
    "$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"
    "$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\")"
    "if $z15 != 0 goto return"
    "$r14 = new java.lang.AssertionError"
    "specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third type arg to bound of T1 is T3\")"
    "throw $r14"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\")"->"$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>";
    "$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>"->"r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()";
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>()"->"$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2";
    "if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"->"$z24 = r2 instanceof java.lang.reflect.ParameterizedType";
    "if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"->"r3 = (java.lang.reflect.ParameterizedType) r2";
    "$z24 = r2 instanceof java.lang.reflect.ParameterizedType"->"if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2";
    "if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"->"$r36 = new java.lang.AssertionError";
    "if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2"->"r3 = (java.lang.reflect.ParameterizedType) r2";
    "$r36 = new java.lang.AssertionError"->"specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should be a parameterized type\")";
    "specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should be a parameterized type\")"->"throw $r36";
    "r3 = (java.lang.reflect.ParameterizedType) r2"->"$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()";
    "if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"->"if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r35 = new java.lang.AssertionError";
    "if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r35 = new java.lang.AssertionError"->"specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw generic superclass of C2 should be C0\")";
    "specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw generic superclass of C2 should be C0\")"->"throw $r35";
    "r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z2 != 0 goto r38 = r37[0]";
    "if $z2 != 0 goto r38 = r37[0]"->"$i2 = lengthof r37";
    "if $z2 != 0 goto r38 = r37[0]"->"r38 = r37[0]";
    "$i2 = lengthof r37"->"if $i2 == 1 goto r38 = r37[0]";
    "if $i2 == 1 goto r38 = r37[0]"->"$r33 = new java.lang.AssertionError";
    "if $i2 == 1 goto r38 = r37[0]"->"r38 = r37[0]";
    "$r33 = new java.lang.AssertionError"->"specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should have one type argument\")";
    "specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should have one type argument\")"->"throw $r33";
    "r38 = r37[0]"->"$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38";
    "if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"->"$z23 = r38 instanceof java.lang.reflect.TypeVariable";
    "if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"->"r4 = (java.lang.reflect.TypeVariable) r38";
    "$z23 = r38 instanceof java.lang.reflect.TypeVariable"->"if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38";
    "if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"->"$r32 = new java.lang.AssertionError";
    "if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38"->"r4 = (java.lang.reflect.TypeVariable) r38";
    "$r32 = new java.lang.AssertionError"->"specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument to superclass of C2 should be a type variable\")";
    "specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument to superclass of C2 should be a type variable\")"->"throw $r32";
    "r4 = (java.lang.reflect.TypeVariable) r38"->"$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")";
    "$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"->"if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$r31 = new java.lang.AssertionError";
    "if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()";
    "$r31 = new java.lang.AssertionError"->"specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Name of type argument to superclass of C2 should be T1\")";
    "specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Name of type argument to superclass of C2 should be T1\")"->"throw $r31";
    "r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()"->"$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z5 != 0 goto r39 = r5[0]";
    "if $z5 != 0 goto r39 = r5[0]"->"$i1 = lengthof r5";
    "if $z5 != 0 goto r39 = r5[0]"->"r39 = r5[0]";
    "$i1 = lengthof r5"->"if $i1 == 1 goto r39 = r5[0]";
    "if $i1 == 1 goto r39 = r5[0]"->"$r29 = new java.lang.AssertionError";
    "if $i1 == 1 goto r39 = r5[0]"->"r39 = r5[0]";
    "$r29 = new java.lang.AssertionError"->"specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 has one bound (superclass)\")";
    "specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 has one bound (superclass)\")"->"throw $r29";
    "r39 = r5[0]"->"$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39";
    "if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"->"$z21 = r39 instanceof java.lang.reflect.ParameterizedType";
    "if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"->"r6 = (java.lang.reflect.ParameterizedType) r39";
    "$z21 = r39 instanceof java.lang.reflect.ParameterizedType"->"if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39";
    "if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"->"$r28 = new java.lang.AssertionError";
    "if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39"->"r6 = (java.lang.reflect.ParameterizedType) r39";
    "$r28 = new java.lang.AssertionError"->"specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of C0 should be a parameterized type\")";
    "specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of C0 should be a parameterized type\")"->"throw $r28";
    "r6 = (java.lang.reflect.ParameterizedType) r39"->"$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()";
    "if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()"->"if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$r27 = new java.lang.AssertionError";
    "if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()";
    "$r27 = new java.lang.AssertionError"->"specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw bound of T1 should be C2\")";
    "specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw bound of T1 should be C2\")"->"throw $r27";
    "r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()"->"$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$i0 = lengthof r40";
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$i0 = lengthof r40"->"if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r25 = new java.lang.AssertionError";
    "if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r25 = new java.lang.AssertionError"->"specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of T1 should have three type arguments\")";
    "specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of T1 should have three type arguments\")"->"throw $r25";
    "$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r23 = r40[0]";
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r23 = r40[0]"->"$z20 = $r23 instanceof java.lang.reflect.TypeVariable";
    "$z20 = $r23 instanceof java.lang.reflect.TypeVariable"->"if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r24 = new java.lang.AssertionError";
    "if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r24 = new java.lang.AssertionError"->"specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First argument to bound of T1 is a type variable\")";
    "specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First argument to bound of T1 is a type variable\")"->"throw $r24";
    "$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r21 = r40[1]";
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r21 = r40[1]"->"$z19 = $r21 instanceof java.lang.reflect.TypeVariable";
    "$z19 = $r21 instanceof java.lang.reflect.TypeVariable"->"if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r22 = new java.lang.AssertionError";
    "if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r22 = new java.lang.AssertionError"->"specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Second argument to bound of T1 is a type variable\")";
    "specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Second argument to bound of T1 is a type variable\")"->"throw $r22";
    "$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z11 != 0 goto $r7 = r40[0]";
    "if $z11 != 0 goto $r7 = r40[0]"->"$r19 = r40[2]";
    "if $z11 != 0 goto $r7 = r40[0]"->"$r7 = r40[0]";
    "$r19 = r40[2]"->"$z18 = $r19 instanceof java.lang.reflect.TypeVariable";
    "$z18 = $r19 instanceof java.lang.reflect.TypeVariable"->"if $z18 != 0 goto $r7 = r40[0]";
    "if $z18 != 0 goto $r7 = r40[0]"->"$r20 = new java.lang.AssertionError";
    "if $z18 != 0 goto $r7 = r40[0]"->"$r7 = r40[0]";
    "$r20 = new java.lang.AssertionError"->"specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third argument to bound of T1 is a type variable\")";
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third argument to bound of T1 is a type variable\")"->"throw $r20";
    "$r7 = r40[0]"->"r8 = (java.lang.reflect.TypeVariable) $r7";
    "r8 = (java.lang.reflect.TypeVariable) $r7"->"$r9 = r40[1]";
    "$r9 = r40[1]"->"r10 = (java.lang.reflect.TypeVariable) $r9";
    "r10 = (java.lang.reflect.TypeVariable) $r9"->"$r11 = r40[2]";
    "$r11 = r40[2]"->"r12 = (java.lang.reflect.TypeVariable) $r11";
    "r12 = (java.lang.reflect.TypeVariable) $r11"->"$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")";
    "$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\")"->"if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r18 = new java.lang.AssertionError";
    "if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r18 = new java.lang.AssertionError"->"specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First type arg to bound of T1 is T1\")";
    "specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First type arg to bound of T1 is T1\")"->"throw $r18";
    "$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\")";
    "$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\")"->"if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$r16 = new java.lang.AssertionError";
    "if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>";
    "$r16 = new java.lang.AssertionError"->"specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Seconmd type arg to bound of T1 is T2\")";
    "specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Seconmd type arg to bound of T1 is T2\")"->"throw $r16";
    "$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>"->"if $z14 != 0 goto return";
    "if $z14 != 0 goto return"->"$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>()";
    "if $z14 != 0 goto return"->"return";
    "$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>()"->"$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\")";
    "$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\")"->"if $z15 != 0 goto return";
    "if $z15 != 0 goto return"->"$r14 = new java.lang.AssertionError";
    "if $z15 != 0 goto return"->"return";
    "$r14 = new java.lang.AssertionError"->"specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third type arg to bound of T1 is T3\")";
    "specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third type arg to bound of T1 is T3\")"->"throw $r14";
}
