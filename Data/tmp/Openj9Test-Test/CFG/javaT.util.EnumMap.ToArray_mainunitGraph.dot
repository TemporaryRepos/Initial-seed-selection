digraph "unitGraph" {
    "r48 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.EnumMap"
    "specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\")"
    "r1 = $r0"
    "$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\")"
    "$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\")"
    "$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>()"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7)"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>()"
    "if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError"
    "$i0 = lengthof r7"
    "if $i0 != 2 goto $r49 = new java.lang.AssertionError"
    "$r11 = r7[0]"
    "$r12 = (java.util.Map$Entry) $r11"
    "$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"
    "if $r13 != $r14 goto $r49 = new java.lang.AssertionError"
    "$r15 = r7[1]"
    "$r16 = (java.util.Map$Entry) $r15"
    "$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"
    "if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3]"
    "$r49 = new java.lang.AssertionError"
    "specialinvoke $r49.<java.lang.AssertionError: void <init>()>()"
    "throw $r49"
    "r19 = newarray (java.util.Map$Entry)[3]"
    "$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()"
    "$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>()"
    "$r23 = (java.util.Map$Entry) $r22"
    "r19[2] = $r23"
    "$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19)"
    "r26 = (java.util.Map$Entry[]) $r25"
    "$r27 = <java.lang.System: java.io.PrintStream out>"
    "$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26)"
    "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28)"
    "if r19 != r26 goto $r50 = new java.lang.AssertionError"
    "$r29 = r26[0]"
    "$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"
    "if $r30 != $r31 goto $r50 = new java.lang.AssertionError"
    "$r32 = r26[1]"
    "$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"
    "if $r33 != $r34 goto $r50 = new java.lang.AssertionError"
    "$r35 = r26[2]"
    "if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1]"
    "$r50 = new java.lang.AssertionError"
    "specialinvoke $r50.<java.lang.AssertionError: void <init>()>()"
    "throw $r50"
    "r36 = newarray (java.util.Map$Entry)[1]"
    "$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36)"
    "r39 = (java.util.Map$Entry[]) $r38"
    "$r40 = <java.lang.System: java.io.PrintStream out>"
    "$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39)"
    "virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41)"
    "if r36 == r39 goto $r51 = new java.lang.AssertionError"
    "$i1 = lengthof r39"
    "if $i1 != 2 goto $r51 = new java.lang.AssertionError"
    "$r42 = r39[0]"
    "$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"
    "if $r43 != $r44 goto $r51 = new java.lang.AssertionError"
    "$r45 = r39[1]"
    "$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"
    "if $r46 == $r47 goto return"
    "$r51 = new java.lang.AssertionError"
    "specialinvoke $r51.<java.lang.AssertionError: void <init>()>()"
    "throw $r51"
    "return"
    "r48 := @parameter0: java.lang.String[]"->"$r0 = new java.util.EnumMap";
    "$r0 = new java.util.EnumMap"->"specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\")";
    "specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class \"LjavaT/util/EnumMap/ToArray$Country;\")"->"r1 = $r0";
    "r1 = $r0"->"$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>";
    "$r2 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"->"interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\")";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"connection\")"->"$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>";
    "$r4 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"->"interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\")";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, \"sausage\")"->"$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>()";
    "r7 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray()>()"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7)";
    "$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r7)"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>()";
    "$r10 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>()"->"if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError";
    "if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError"->"$i0 = lengthof r7";
    "if $r10 != class \"[Ljava/lang/Object;\" goto $r49 = new java.lang.AssertionError"->"$r49 = new java.lang.AssertionError";
    "$i0 = lengthof r7"->"if $i0 != 2 goto $r49 = new java.lang.AssertionError";
    "if $i0 != 2 goto $r49 = new java.lang.AssertionError"->"$r11 = r7[0]";
    "if $i0 != 2 goto $r49 = new java.lang.AssertionError"->"$r49 = new java.lang.AssertionError";
    "$r11 = r7[0]"->"$r12 = (java.util.Map$Entry) $r11";
    "$r12 = (java.util.Map$Entry) $r11"->"$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r13 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>";
    "$r14 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"->"if $r13 != $r14 goto $r49 = new java.lang.AssertionError";
    "if $r13 != $r14 goto $r49 = new java.lang.AssertionError"->"$r15 = r7[1]";
    "if $r13 != $r14 goto $r49 = new java.lang.AssertionError"->"$r49 = new java.lang.AssertionError";
    "$r15 = r7[1]"->"$r16 = (java.util.Map$Entry) $r15";
    "$r16 = (java.util.Map$Entry) $r15"->"$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>";
    "$r18 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"->"if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3]";
    "if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3]"->"$r49 = new java.lang.AssertionError";
    "if $r17 == $r18 goto r19 = newarray (java.util.Map$Entry)[3]"->"r19 = newarray (java.util.Map$Entry)[3]";
    "$r49 = new java.lang.AssertionError"->"specialinvoke $r49.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r49.<java.lang.AssertionError: void <init>()>()"->"throw $r49";
    "r19 = newarray (java.util.Map$Entry)[3]"->"$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()";
    "$r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()"->"$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>()";
    "$r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>()"->"$r23 = (java.util.Map$Entry) $r22";
    "$r23 = (java.util.Map$Entry) $r22"->"r19[2] = $r23";
    "r19[2] = $r23"->"$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "$r24 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19)";
    "$r25 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r19)"->"r26 = (java.util.Map$Entry[]) $r25";
    "r26 = (java.util.Map$Entry[]) $r25"->"$r27 = <java.lang.System: java.io.PrintStream out>";
    "$r27 = <java.lang.System: java.io.PrintStream out>"->"$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26)";
    "$r28 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r26)"->"virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28)";
    "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28)"->"if r19 != r26 goto $r50 = new java.lang.AssertionError";
    "if r19 != r26 goto $r50 = new java.lang.AssertionError"->"$r29 = r26[0]";
    "if r19 != r26 goto $r50 = new java.lang.AssertionError"->"$r50 = new java.lang.AssertionError";
    "$r29 = r26[0]"->"$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r30 = interfaceinvoke $r29.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>";
    "$r31 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"->"if $r30 != $r31 goto $r50 = new java.lang.AssertionError";
    "if $r30 != $r31 goto $r50 = new java.lang.AssertionError"->"$r32 = r26[1]";
    "if $r30 != $r31 goto $r50 = new java.lang.AssertionError"->"$r50 = new java.lang.AssertionError";
    "$r32 = r26[1]"->"$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r33 = interfaceinvoke $r32.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>";
    "$r34 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"->"if $r33 != $r34 goto $r50 = new java.lang.AssertionError";
    "if $r33 != $r34 goto $r50 = new java.lang.AssertionError"->"$r35 = r26[2]";
    "if $r33 != $r34 goto $r50 = new java.lang.AssertionError"->"$r50 = new java.lang.AssertionError";
    "$r35 = r26[2]"->"if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1]";
    "if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1]"->"$r50 = new java.lang.AssertionError";
    "if $r35 == null goto r36 = newarray (java.util.Map$Entry)[1]"->"r36 = newarray (java.util.Map$Entry)[1]";
    "$r50 = new java.lang.AssertionError"->"specialinvoke $r50.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r50.<java.lang.AssertionError: void <init>()>()"->"throw $r50";
    "r36 = newarray (java.util.Map$Entry)[1]"->"$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "$r37 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36)";
    "$r38 = interfaceinvoke $r37.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r36)"->"r39 = (java.util.Map$Entry[]) $r38";
    "r39 = (java.util.Map$Entry[]) $r38"->"$r40 = <java.lang.System: java.io.PrintStream out>";
    "$r40 = <java.lang.System: java.io.PrintStream out>"->"$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39)";
    "$r41 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r39)"->"virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41)";
    "virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41)"->"if r36 == r39 goto $r51 = new java.lang.AssertionError";
    "if r36 == r39 goto $r51 = new java.lang.AssertionError"->"$i1 = lengthof r39";
    "if r36 == r39 goto $r51 = new java.lang.AssertionError"->"$r51 = new java.lang.AssertionError";
    "$i1 = lengthof r39"->"if $i1 != 2 goto $r51 = new java.lang.AssertionError";
    "if $i1 != 2 goto $r51 = new java.lang.AssertionError"->"$r42 = r39[0]";
    "if $i1 != 2 goto $r51 = new java.lang.AssertionError"->"$r51 = new java.lang.AssertionError";
    "$r42 = r39[0]"->"$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r43 = interfaceinvoke $r42.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>";
    "$r44 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country FRENCH>"->"if $r43 != $r44 goto $r51 = new java.lang.AssertionError";
    "if $r43 != $r44 goto $r51 = new java.lang.AssertionError"->"$r45 = r39[1]";
    "if $r43 != $r44 goto $r51 = new java.lang.AssertionError"->"$r51 = new java.lang.AssertionError";
    "$r45 = r39[1]"->"$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r46 = interfaceinvoke $r45.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>";
    "$r47 = <javaT.util.EnumMap.ToArray$Country: javaT.util.EnumMap.ToArray$Country POLISH>"->"if $r46 == $r47 goto return";
    "if $r46 == $r47 goto return"->"$r51 = new java.lang.AssertionError";
    "if $r46 == $r47 goto return"->"return";
    "$r51 = new java.lang.AssertionError"->"specialinvoke $r51.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r51.<java.lang.AssertionError: void <init>()>()"->"throw $r51";
}
