digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z24 = r2 instanceof java.lang.reflect.ParameterizedType;
if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should be a parameterized type\");
throw $r36;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = (java.lang.reflect.ParameterizedType) r2;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw generic superclass of C2 should be C0\");
throw $r35;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r38 = r37[0];
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = lengthof r37;
if $i2 == 1 goto r38 = r37[0];
"
    "Block 8:
[preds: 7 ] [succs: ]
$r33 = new java.lang.AssertionError;
specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should have one type argument\");
throw $r33;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r38 = r37[0];
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z23 = r38 instanceof java.lang.reflect.TypeVariable;
if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r32 = new java.lang.AssertionError;
specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument to superclass of C2 should be a type variable\");
throw $r32;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r4 = (java.lang.reflect.TypeVariable) r38;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 14:
[preds: 13 ] [succs: ]
$r31 = new java.lang.AssertionError;
specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Name of type argument to superclass of C2 should be T1\");
throw $r31;
"
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r39 = r5[0];
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i1 = lengthof r5;
if $i1 == 1 goto r39 = r5[0];
"
    "Block 17:
[preds: 16 ] [succs: ]
$r29 = new java.lang.AssertionError;
specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 has one bound (superclass)\");
throw $r29;
"
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r39 = r5[0];
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$z21 = r39 instanceof java.lang.reflect.ParameterizedType;
if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"
    "Block 20:
[preds: 19 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of C0 should be a parameterized type\");
throw $r28;
"
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r6 = (java.lang.reflect.ParameterizedType) r39;
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 23:
[preds: 22 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw bound of T1 should be C2\");
throw $r27;
"
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$i0 = lengthof r40;
if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 26:
[preds: 25 ] [succs: ]
$r25 = new java.lang.AssertionError;
specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of T1 should have three type arguments\");
throw $r25;
"
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r23 = r40[0];
$z20 = $r23 instanceof java.lang.reflect.TypeVariable;
if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 29:
[preds: 28 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First argument to bound of T1 is a type variable\");
throw $r24;
"
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r40[1];
$z19 = $r21 instanceof java.lang.reflect.TypeVariable;
if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Second argument to bound of T1 is a type variable\");
throw $r22;
"
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto $r7 = r40[0];
"
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r19 = r40[2];
$z18 = $r19 instanceof java.lang.reflect.TypeVariable;
if $z18 != 0 goto $r7 = r40[0];
"
    "Block 35:
[preds: 34 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third argument to bound of T1 is a type variable\");
throw $r20;
"
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
$r7 = r40[0];
r8 = (java.lang.reflect.TypeVariable) $r7;
$r9 = r40[1];
r10 = (java.lang.reflect.TypeVariable) $r9;
$r11 = r40[2];
r12 = (java.lang.reflect.TypeVariable) $r11;
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 38:
[preds: 37 ] [succs: ]
$r18 = new java.lang.AssertionError;
specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First type arg to bound of T1 is T1\");
throw $r18;
"
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 41:
[preds: 40 ] [succs: ]
$r16 = new java.lang.AssertionError;
specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Seconmd type arg to bound of T1 is T2\");
throw $r16;
"
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto return;
"
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z15 != 0 goto return;
"
    "Block 44:
[preds: 43 ] [succs: ]
$r14 = new java.lang.AssertionError;
specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third type arg to bound of T1 is T3\");
throw $r14;
"
    "Block 45:
[preds: 42 43 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$z24 = r2 instanceof java.lang.reflect.ParameterizedType;
if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing superclass\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = (java.lang.reflect.ParameterizedType) r2;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z24 = r2 instanceof java.lang.reflect.ParameterizedType;
if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"->"Block 2:
[preds: 1 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should be a parameterized type\");
throw $r36;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z24 = r2 instanceof java.lang.reflect.ParameterizedType;
if $z24 != 0 goto r3 = (java.lang.reflect.ParameterizedType) r2;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = (java.lang.reflect.ParameterizedType) r2;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = (java.lang.reflect.ParameterizedType) r2;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = (java.lang.reflect.ParameterizedType) r2;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r38 = r37[0];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 5:
[preds: 4 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw generic superclass of C2 should be C0\");
throw $r35;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r34 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r34 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r38 = r37[0];
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r38 = r37[0];
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = lengthof r37;
if $i2 == 1 goto r38 = r37[0];
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r37 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r38 = r37[0];
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r38 = r37[0];
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = lengthof r37;
if $i2 == 1 goto r38 = r37[0];
"->"Block 8:
[preds: 7 ] [succs: ]
$r33 = new java.lang.AssertionError;
specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Superclass of C2 should have one type argument\");
throw $r33;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = lengthof r37;
if $i2 == 1 goto r38 = r37[0];
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r38 = r37[0];
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r38 = r37[0];
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$z23 = r38 instanceof java.lang.reflect.TypeVariable;
if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r38 = r37[0];
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r4 = (java.lang.reflect.TypeVariable) r38;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z23 = r38 instanceof java.lang.reflect.TypeVariable;
if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"->"Block 11:
[preds: 10 ] [succs: ]
$r32 = new java.lang.AssertionError;
specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument to superclass of C2 should be a type variable\");
throw $r32;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z23 = r38 instanceof java.lang.reflect.TypeVariable;
if $z23 != 0 goto r4 = (java.lang.reflect.TypeVariable) r38;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r4 = (java.lang.reflect.TypeVariable) r38;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r4 = (java.lang.reflect.TypeVariable) r38;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r4 = (java.lang.reflect.TypeVariable) r38;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r39 = r5[0];
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 14:
[preds: 13 ] [succs: ]
$r31 = new java.lang.AssertionError;
specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Name of type argument to superclass of C2 should be T1\");
throw $r31;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r30 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z22 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z22 != 0 goto r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r39 = r5[0];
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r39 = r5[0];
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$i1 = lengthof r5;
if $i1 == 1 goto r39 = r5[0];
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r5 = interfaceinvoke r4.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r39 = r5[0];
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r39 = r5[0];
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i1 = lengthof r5;
if $i1 == 1 goto r39 = r5[0];
"->"Block 17:
[preds: 16 ] [succs: ]
$r29 = new java.lang.AssertionError;
specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T1 has one bound (superclass)\");
throw $r29;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i1 = lengthof r5;
if $i1 == 1 goto r39 = r5[0];
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r39 = r5[0];
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r39 = r5[0];
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
$z21 = r39 instanceof java.lang.reflect.ParameterizedType;
if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r39 = r5[0];
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r6 = (java.lang.reflect.ParameterizedType) r39;
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$z21 = r39 instanceof java.lang.reflect.ParameterizedType;
if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"->"Block 20:
[preds: 19 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of C0 should be a parameterized type\");
throw $r28;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$z21 = r39 instanceof java.lang.reflect.ParameterizedType;
if $z21 != 0 goto r6 = (java.lang.reflect.ParameterizedType) r39;
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r6 = (java.lang.reflect.ParameterizedType) r39;
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r6 = (java.lang.reflect.ParameterizedType) r39;
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r6 = (java.lang.reflect.ParameterizedType) r39;
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 23:
[preds: 22 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw bound of T1 should be C2\");
throw $r27;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$r26 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r26 == class \"LjavaT/lang/reflect/Generics/C2;\" goto r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
$i0 = lengthof r40;
if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r40 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$i0 = lengthof r40;
if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 26:
[preds: 25 ] [succs: ]
$r25 = new java.lang.AssertionError;
specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Bound of T1 should have three type arguments\");
throw $r25;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$i0 = lengthof r40;
if $i0 == 3 goto $z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
$r23 = r40[0];
$z20 = $r23 instanceof java.lang.reflect.TypeVariable;
if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r23 = r40[0];
$z20 = $r23 instanceof java.lang.reflect.TypeVariable;
if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 29:
[preds: 28 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First argument to bound of T1 is a type variable\");
throw $r24;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r23 = r40[0];
$z20 = $r23 instanceof java.lang.reflect.TypeVariable;
if $z20 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r40[1];
$z19 = $r21 instanceof java.lang.reflect.TypeVariable;
if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto $r7 = r40[0];
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r40[1];
$z19 = $r21 instanceof java.lang.reflect.TypeVariable;
if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 32:
[preds: 31 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Second argument to bound of T1 is a type variable\");
throw $r22;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r40[1];
$z19 = $r21 instanceof java.lang.reflect.TypeVariable;
if $z19 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto $r7 = r40[0];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto $r7 = r40[0];
"->"Block 34:
[preds: 33 ] [succs: 35 36 ]
$r19 = r40[2];
$z18 = $r19 instanceof java.lang.reflect.TypeVariable;
if $z18 != 0 goto $r7 = r40[0];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto $r7 = r40[0];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
$r7 = r40[0];
r8 = (java.lang.reflect.TypeVariable) $r7;
$r9 = r40[1];
r10 = (java.lang.reflect.TypeVariable) $r9;
$r11 = r40[2];
r12 = (java.lang.reflect.TypeVariable) $r11;
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r19 = r40[2];
$z18 = $r19 instanceof java.lang.reflect.TypeVariable;
if $z18 != 0 goto $r7 = r40[0];
"->"Block 35:
[preds: 34 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third argument to bound of T1 is a type variable\");
throw $r20;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r19 = r40[2];
$z18 = $r19 instanceof java.lang.reflect.TypeVariable;
if $z18 != 0 goto $r7 = r40[0];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
$r7 = r40[0];
r8 = (java.lang.reflect.TypeVariable) $r7;
$r9 = r40[1];
r10 = (java.lang.reflect.TypeVariable) $r9;
$r11 = r40[2];
r12 = (java.lang.reflect.TypeVariable) $r11;
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
$r7 = r40[0];
r8 = (java.lang.reflect.TypeVariable) $r7;
$r9 = r40[1];
r10 = (java.lang.reflect.TypeVariable) $r9;
$r11 = r40[2];
r12 = (java.lang.reflect.TypeVariable) $r11;
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 37:
[preds: 36 ] [succs: 38 39 ]
$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
$r7 = r40[0];
r8 = (java.lang.reflect.TypeVariable) $r7;
$r9 = r40[1];
r10 = (java.lang.reflect.TypeVariable) $r9;
$r11 = r40[2];
r12 = (java.lang.reflect.TypeVariable) $r11;
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 38:
[preds: 37 ] [succs: ]
$r18 = new java.lang.AssertionError;
specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"First type arg to bound of T1 is T1\");
throw $r18;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r17 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z17 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z17 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 40:
[preds: 39 ] [succs: 41 42 ]
$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto return;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 41:
[preds: 40 ] [succs: ]
$r16 = new java.lang.AssertionError;
specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Seconmd type arg to bound of T1 is T2\");
throw $r16;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r15 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z16 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z16 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto return;
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto return;
"->"Block 43:
[preds: 42 ] [succs: 44 45 ]
$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z15 != 0 goto return;
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto return;
"->"Block 45:
[preds: 42 43 ] [succs: ]
return;
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z15 != 0 goto return;
"->"Block 44:
[preds: 43 ] [succs: ]
$r14 = new java.lang.AssertionError;
specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Third type arg to bound of T1 is T3\");
throw $r14;
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r13 = interfaceinvoke r12.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z15 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z15 != 0 goto return;
"->"Block 45:
[preds: 42 43 ] [succs: ]
return;
";
}
