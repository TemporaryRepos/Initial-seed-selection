digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String;
r13 := @parameter1: java.lang.String;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes of test string are: \");
$r4 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r3);
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r3, \"UTF-8\");
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URLEncoding is: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
$z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r13);
if $z0 == 0 goto $r14 = new java.lang.Exception;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"The encoding is correct!\");
goto [?= r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\")];
"
    "Block 2:
[preds: 0 ] [succs: ]
$r14 = new java.lang.Exception;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The encoding is incorrect! It should be \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>($r18);
throw $r14;
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\");
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes for URLDecoding are: \");
$r24 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r20);
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
$z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r20);
if $z1 == 0 goto $r27 = new java.lang.Exception;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"The decoding is correct\");
goto [?= $r29 = <java.lang.System: java.io.PrintStream out>];
"
    "Block 5:
[preds: 3 ] [succs: ]
$r27 = new java.lang.Exception;
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"The decoded is not equal to the original\");
throw $r27;
"
    "Block 6:
[preds: 4 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"---\");
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String;
r13 := @parameter1: java.lang.String;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes of test string are: \");
$r4 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r3);
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r3, \"UTF-8\");
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URLEncoding is: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
$z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r13);
if $z0 == 0 goto $r14 = new java.lang.Exception;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"The encoding is correct!\");
goto [?= r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\")];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String;
r13 := @parameter1: java.lang.String;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes of test string are: \");
$r4 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r3);
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r3, \"UTF-8\");
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"URLEncoding is: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
$z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r13);
if $z0 == 0 goto $r14 = new java.lang.Exception;
"->"Block 2:
[preds: 0 ] [succs: ]
$r14 = new java.lang.Exception;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The encoding is incorrect! It should be \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>($r18);
throw $r14;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"The encoding is correct!\");
goto [?= r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\")];
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\");
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes for URLDecoding are: \");
$r24 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r20);
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
$z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r20);
if $z1 == 0 goto $r27 = new java.lang.Exception;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\");
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes for URLDecoding are: \");
$r24 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r20);
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
$z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r20);
if $z1 == 0 goto $r27 = new java.lang.Exception;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"The decoding is correct\");
goto [?= $r29 = <java.lang.System: java.io.PrintStream out>];
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r7, \"UTF-8\");
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unicode bytes for URLDecoding are: \");
$r24 = staticinvoke <javaT.net.URLEncoder.SurrogatePairs: java.lang.String getHexBytes(java.lang.String)>(r20);
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
$z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r20);
if $z1 == 0 goto $r27 = new java.lang.Exception;
"->"Block 5:
[preds: 3 ] [succs: ]
$r27 = new java.lang.Exception;
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"The decoded is not equal to the original\");
throw $r27;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"The decoding is correct\");
goto [?= $r29 = <java.lang.System: java.io.PrintStream out>];
"->"Block 6:
[preds: 4 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"---\");
return;
";
}
