digraph "unitGraph" {
    "staticinvoke <javaT.nio.Buffer.BasicChar: void testAllocate()>()"
    "$r0 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(7168)"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r0, 0)"
    "$r1 = newarray (char)[7168]"
    "$r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r1, 0, 7168)"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r2, 0)"
    "$r3 = newarray (char)[1024]"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(char[])>($r3)"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void testStr()>()"
    "$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(10)"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void callReset(java.nio.CharBuffer)>($r4)"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void putBuffer()>()"
    "return"
    "staticinvoke <javaT.nio.Buffer.BasicChar: void testAllocate()>()"->"$r0 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(7168)";
    "$r0 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(7168)"->"staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r0, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r0, 0)"->"$r1 = newarray (char)[7168]";
    "$r1 = newarray (char)[7168]"->"$r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r1, 0, 7168)";
    "$r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r1, 0, 7168)"->"staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r2, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(int,java.nio.CharBuffer,boolean)>(0, $r2, 0)"->"$r3 = newarray (char)[1024]";
    "$r3 = newarray (char)[1024]"->"staticinvoke <javaT.nio.Buffer.BasicChar: void test(char[])>($r3)";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void test(char[])>($r3)"->"staticinvoke <javaT.nio.Buffer.BasicChar: void testStr()>()";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void testStr()>()"->"$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(10)";
    "$r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(10)"->"staticinvoke <javaT.nio.Buffer.BasicChar: void callReset(java.nio.CharBuffer)>($r4)";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void callReset(java.nio.CharBuffer)>($r4)"->"staticinvoke <javaT.nio.Buffer.BasicChar: void putBuffer()>()";
    "staticinvoke <javaT.nio.Buffer.BasicChar: void putBuffer()>()"->"return";
}
