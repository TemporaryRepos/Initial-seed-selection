digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 0)"
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 1)"
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 0)"
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 1)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 0)";
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 0)"->"staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 1)";
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(0, 1)"->"staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 0)";
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 0)"->"staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 1)";
    "staticinvoke <javaT.util.zip.GZIP.GZIPInZip: void doTest(boolean,boolean)>(1, 1)"->"return";
}
