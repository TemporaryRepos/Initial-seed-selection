digraph "unitGraph" {
    "r27 := @parameter0: java.lang.String[]"
    "$r28 = new javax.crypto.spec.PBEKeySpec"
    "$r1 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: char[] PASSWORD>"
    "specialinvoke $r28.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)"
    "r2 = $r28"
    "i1 = 0"
    "$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>"
    "$i0 = lengthof $r3"
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>"
    "r6 = $r5[i1]"
    "r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6)"
    "$r32 = (java.security.spec.KeySpec) r2"
    "r8 = virtualinvoke r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r32)"
    "r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")"
    "$r33 = (java.security.Key) r8"
    "virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r33)"
    "$r10 = newarray (byte)[10]"
    "virtualinvoke r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)"
    "r12 = virtualinvoke r9.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"
    "$r13 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()"
    "$z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6)"
    "if $z0 != 0 goto $r15 = <java.lang.System: java.io.PrintStream out>"
    "$r30 = new java.lang.Exception"
    "$r29 = new java.lang.StringBuilder"
    "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()"
    "$r21 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expect: \")"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got: \")"
    "$r24 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()"
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r26)"
    "throw $r30"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"...done...\")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18)"
    "i1 = i1 + 1"
    "goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>]"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")"
    "return"
    "r27 := @parameter0: java.lang.String[]"->"$r28 = new javax.crypto.spec.PBEKeySpec";
    "$r28 = new javax.crypto.spec.PBEKeySpec"->"$r1 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: char[] PASSWORD>";
    "$r1 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: char[] PASSWORD>"->"specialinvoke $r28.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)";
    "specialinvoke $r28.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)"->"r2 = $r28";
    "r2 = $r28"->"i1 = 0";
    "i1 = 0"->"$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>";
    "$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>"->"$i0 = lengthof $r3";
    "$i0 = lengthof $r3"->"if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>";
    "if i1 >= $i0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>"->"r6 = $r5[i1]";
    "r6 = $r5[i1]"->"r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6)";
    "r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r6)"->"$r32 = (java.security.spec.KeySpec) r2";
    "$r32 = (java.security.spec.KeySpec) r2"->"r8 = virtualinvoke r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r32)";
    "r8 = virtualinvoke r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r32)"->"r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")";
    "r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")"->"$r33 = (java.security.Key) r8";
    "$r33 = (java.security.Key) r8"->"virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r33)";
    "virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r33)"->"$r10 = newarray (byte)[10]";
    "$r10 = newarray (byte)[10]"->"virtualinvoke r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)";
    "virtualinvoke r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)"->"r12 = virtualinvoke r9.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()";
    "r12 = virtualinvoke r9.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>()"->"$r13 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()";
    "$r13 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()"->"$z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6)";
    "$z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6)"->"if $z0 != 0 goto $r15 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r15 = <java.lang.System: java.io.PrintStream out>"->"$r30 = new java.lang.Exception";
    "if $z0 != 0 goto $r15 = <java.lang.System: java.io.PrintStream out>"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "$r30 = new java.lang.Exception"->"$r29 = new java.lang.StringBuilder";
    "$r29 = new java.lang.StringBuilder"->"specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()"->"$r21 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expect: \")";
    "$r21 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expect: \")"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got: \")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got: \")"->"$r24 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()";
    "$r24 = virtualinvoke r12.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>()"->"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)";
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r26)";
    "specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r26)"->"throw $r30";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"$r31 = new java.lang.StringBuilder";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"...done...\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"...done...\")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18)";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>]";
    "goto [?= $r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>]"->"$r3 = <com.sun.crypto.provider.Cipher.PBE.PBEParametersTest: java.lang.String[] PBE_ALGOS>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")"->"return";
}
