digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "$r6 = new com.sun.crypto.provider.SunJCE"
    "specialinvoke $r6.<com.sun.crypto.provider.SunJCE: void <init>()>()"
    "r1 = $r6"
    "$r8 = (java.security.Provider) r1"
    "staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r8)"
    "$r7 = new com.sun.crypto.provider.TLS.TestLeadingZeroes"
    "specialinvoke $r7.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void <init>()>()"
    "r3 = $r7"
    "specialinvoke r3.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void run()>()"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"$r6 = new com.sun.crypto.provider.SunJCE";
    "$r6 = new com.sun.crypto.provider.SunJCE"->"specialinvoke $r6.<com.sun.crypto.provider.SunJCE: void <init>()>()";
    "specialinvoke $r6.<com.sun.crypto.provider.SunJCE: void <init>()>()"->"r1 = $r6";
    "r1 = $r6"->"$r8 = (java.security.Provider) r1";
    "$r8 = (java.security.Provider) r1"->"staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r8)";
    "staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r8)"->"$r7 = new com.sun.crypto.provider.TLS.TestLeadingZeroes";
    "$r7 = new com.sun.crypto.provider.TLS.TestLeadingZeroes"->"specialinvoke $r7.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void <init>()>()";
    "specialinvoke $r7.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void <init>()>()"->"r3 = $r7";
    "r3 = $r7"->"specialinvoke r3.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void run()>()";
    "specialinvoke r3.<com.sun.crypto.provider.TLS.TestLeadingZeroes: void run()>()"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\")"->"return";
}
