digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.IntBuffer;
i0 = virtualinvoke r0.<java.nio.IntBuffer: int capacity()>();
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer clear()>();
i3 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i3);
$i2 = (int) $l1;
virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>(i3, $i2);
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer position(int)>(0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.nio.IntBuffer;
i0 = virtualinvoke r0.<java.nio.IntBuffer: int capacity()>();
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer clear()>();
i3 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i3);
$i2 = (int) $l1;
virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>(i3, $i2);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer position(int)>(0);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l1 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i3);
$i2 = (int) $l1;
virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(int,int)>(i3, $i2);
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer limit(int)>(i0);
";
}
