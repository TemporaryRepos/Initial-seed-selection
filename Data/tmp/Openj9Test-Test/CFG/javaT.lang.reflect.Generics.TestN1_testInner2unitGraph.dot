digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing generic inner class 1\")"
    "r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner2;\""
    "r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"
    "$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$i0 = lengthof r2"
    "if $i0 == 1 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r59 = new java.lang.AssertionError"
    "specialinvoke $r59.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have one type parameter\")"
    "throw $r59"
    "$z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r55 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"x\")"
    "$r56 = virtualinvoke $r55.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r57 = <java.lang.Boolean: java.lang.Class TYPE>"
    "if $r56 == $r57 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r58 = new java.lang.AssertionError"
    "specialinvoke $r58.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be boolean\")"
    "throw $r58"
    "$z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r51 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"b\")"
    "$r52 = virtualinvoke $r51.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r53 = <java.lang.Byte: java.lang.Class TYPE>"
    "if $r52 == $r53 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r54 = new java.lang.AssertionError"
    "specialinvoke $r54.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.b should be byte\")"
    "throw $r54"
    "$z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r47 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"s\")"
    "$r48 = virtualinvoke $r47.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r49 = <java.lang.Short: java.lang.Class TYPE>"
    "if $r48 == $r49 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r50 = new java.lang.AssertionError"
    "specialinvoke $r50.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.s should be short\")"
    "throw $r50"
    "$z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r43 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"c\")"
    "$r44 = virtualinvoke $r43.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r45 = <java.lang.Character: java.lang.Class TYPE>"
    "if $r44 == $r45 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r46 = new java.lang.AssertionError"
    "specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be char\")"
    "throw $r46"
    "$z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r39 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"i\")"
    "$r40 = virtualinvoke $r39.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r41 = <java.lang.Integer: java.lang.Class TYPE>"
    "if $r40 == $r41 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r42 = new java.lang.AssertionError"
    "specialinvoke $r42.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.i should be int\")"
    "throw $r42"
    "$z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z6 != 0 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r35 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"l\")"
    "$r36 = virtualinvoke $r35.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r37 = <java.lang.Long: java.lang.Class TYPE>"
    "if $r36 == $r37 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r38 = new java.lang.AssertionError"
    "specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.l should be long\")"
    "throw $r38"
    "$z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r31 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"f\")"
    "$r32 = virtualinvoke $r31.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r33 = <java.lang.Float: java.lang.Class TYPE>"
    "if $r32 == $r33 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r34 = new java.lang.AssertionError"
    "specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.f should be float\")"
    "throw $r34"
    "$z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"d\")"
    "$r28 = virtualinvoke $r27.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "$r29 = <java.lang.Double: java.lang.Class TYPE>"
    "if $r28 == $r29 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r30 = new java.lang.AssertionError"
    "specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.d should be double\")"
    "throw $r30"
    "$z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r24 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"xa\")"
    "$r25 = virtualinvoke $r24.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r25 == class \"[Z\" goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r26 = new java.lang.AssertionError"
    "specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be boolean[]\")"
    "throw $r26"
    "$z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r21 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ba\")"
    "$r22 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r22 == class \"[B\" goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r23 = new java.lang.AssertionError"
    "specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ba should be byte[]\")"
    "throw $r23"
    "$z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z11 != 0 goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"sa\")"
    "$r19 = virtualinvoke $r18.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r19 == class \"[S\" goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r20 = new java.lang.AssertionError"
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.sa should be short[]\")"
    "throw $r20"
    "$z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r15 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ca\")"
    "$r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r16 == class \"[C\" goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r17 = new java.lang.AssertionError"
    "specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be char[]\")"
    "throw $r17"
    "$z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ia\")"
    "$r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r13 == class \"[I\" goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r14 = new java.lang.AssertionError"
    "specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ia should be int[]\")"
    "throw $r14"
    "$z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z14 != 0 goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r9 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"la\")"
    "$r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r10 == class \"[J\" goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r11 = new java.lang.AssertionError"
    "specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.la should be long[]\")"
    "throw $r11"
    "$z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z15 != 0 goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fa\")"
    "$r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r7 == class \"[F\" goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "$r8 = new java.lang.AssertionError"
    "specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.fa should be float[]\")"
    "throw $r8"
    "$z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"
    "if $z16 != 0 goto return"
    "$r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"da\")"
    "$r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"
    "if $r4 == class \"[D\" goto return"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.da should be double[]\")"
    "throw $r5"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing generic inner class 1\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing generic inner class 1\")"->"r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner2;\"";
    "r1 = class \"LjavaT/lang/reflect/Generics/N1$Inner2;\""->"r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()";
    "r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>()"->"$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$z0 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$i0 = lengthof r2";
    "if $z0 != 0 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$i0 = lengthof r2"->"if $i0 == 1 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $i0 == 1 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r59 = new java.lang.AssertionError";
    "if $i0 == 1 goto $z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r59 = new java.lang.AssertionError"->"specialinvoke $r59.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have one type parameter\")";
    "specialinvoke $r59.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"N1.Inner2 should have one type parameter\")"->"throw $r59";
    "$z1 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r55 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"x\")";
    "if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r55 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"x\")"->"$r56 = virtualinvoke $r55.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r56 = virtualinvoke $r55.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r57 = <java.lang.Boolean: java.lang.Class TYPE>";
    "$r57 = <java.lang.Boolean: java.lang.Class TYPE>"->"if $r56 == $r57 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r56 == $r57 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r58 = new java.lang.AssertionError";
    "if $r56 == $r57 goto $z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r58 = new java.lang.AssertionError"->"specialinvoke $r58.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be boolean\")";
    "specialinvoke $r58.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be boolean\")"->"throw $r58";
    "$z2 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r51 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"b\")";
    "if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r51 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"b\")"->"$r52 = virtualinvoke $r51.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r52 = virtualinvoke $r51.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r53 = <java.lang.Byte: java.lang.Class TYPE>";
    "$r53 = <java.lang.Byte: java.lang.Class TYPE>"->"if $r52 == $r53 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r52 == $r53 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r54 = new java.lang.AssertionError";
    "if $r52 == $r53 goto $z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r54 = new java.lang.AssertionError"->"specialinvoke $r54.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.b should be byte\")";
    "specialinvoke $r54.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.b should be byte\")"->"throw $r54";
    "$z3 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r47 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"s\")";
    "if $z3 != 0 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r47 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"s\")"->"$r48 = virtualinvoke $r47.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r48 = virtualinvoke $r47.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r49 = <java.lang.Short: java.lang.Class TYPE>";
    "$r49 = <java.lang.Short: java.lang.Class TYPE>"->"if $r48 == $r49 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r48 == $r49 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r50 = new java.lang.AssertionError";
    "if $r48 == $r49 goto $z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r50 = new java.lang.AssertionError"->"specialinvoke $r50.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.s should be short\")";
    "specialinvoke $r50.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.s should be short\")"->"throw $r50";
    "$z4 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r43 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"c\")";
    "if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r43 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"c\")"->"$r44 = virtualinvoke $r43.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r44 = virtualinvoke $r43.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r45 = <java.lang.Character: java.lang.Class TYPE>";
    "$r45 = <java.lang.Character: java.lang.Class TYPE>"->"if $r44 == $r45 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r44 == $r45 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r46 = new java.lang.AssertionError";
    "if $r44 == $r45 goto $z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r46 = new java.lang.AssertionError"->"specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be char\")";
    "specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.x should be char\")"->"throw $r46";
    "$z5 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r39 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"i\")";
    "if $z5 != 0 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r39 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"i\")"->"$r40 = virtualinvoke $r39.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r40 = virtualinvoke $r39.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r41 = <java.lang.Integer: java.lang.Class TYPE>";
    "$r41 = <java.lang.Integer: java.lang.Class TYPE>"->"if $r40 == $r41 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r40 == $r41 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r42 = new java.lang.AssertionError";
    "if $r40 == $r41 goto $z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r42 = new java.lang.AssertionError"->"specialinvoke $r42.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.i should be int\")";
    "specialinvoke $r42.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.i should be int\")"->"throw $r42";
    "$z6 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z6 != 0 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z6 != 0 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r35 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"l\")";
    "if $z6 != 0 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r35 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"l\")"->"$r36 = virtualinvoke $r35.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r36 = virtualinvoke $r35.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r37 = <java.lang.Long: java.lang.Class TYPE>";
    "$r37 = <java.lang.Long: java.lang.Class TYPE>"->"if $r36 == $r37 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r36 == $r37 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r38 = new java.lang.AssertionError";
    "if $r36 == $r37 goto $z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r38 = new java.lang.AssertionError"->"specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.l should be long\")";
    "specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.l should be long\")"->"throw $r38";
    "$z7 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r31 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"f\")";
    "if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r31 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"f\")"->"$r32 = virtualinvoke $r31.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r32 = virtualinvoke $r31.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r33 = <java.lang.Float: java.lang.Class TYPE>";
    "$r33 = <java.lang.Float: java.lang.Class TYPE>"->"if $r32 == $r33 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r32 == $r33 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r34 = new java.lang.AssertionError";
    "if $r32 == $r33 goto $z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r34 = new java.lang.AssertionError"->"specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.f should be float\")";
    "specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.f should be float\")"->"throw $r34";
    "$z8 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"d\")";
    "if $z8 != 0 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"d\")"->"$r28 = virtualinvoke $r27.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r28 = virtualinvoke $r27.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"$r29 = <java.lang.Double: java.lang.Class TYPE>";
    "$r29 = <java.lang.Double: java.lang.Class TYPE>"->"if $r28 == $r29 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r28 == $r29 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r30 = new java.lang.AssertionError";
    "if $r28 == $r29 goto $z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r30 = new java.lang.AssertionError"->"specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.d should be double\")";
    "specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.d should be double\")"->"throw $r30";
    "$z9 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r24 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"xa\")";
    "if $z9 != 0 goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r24 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"xa\")"->"$r25 = virtualinvoke $r24.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r25 = virtualinvoke $r24.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r25 == class \"[Z\" goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r25 == class \"[Z\" goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r26 = new java.lang.AssertionError";
    "if $r25 == class \"[Z\" goto $z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r26 = new java.lang.AssertionError"->"specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be boolean[]\")";
    "specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be boolean[]\")"->"throw $r26";
    "$z10 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r21 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ba\")";
    "if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r21 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ba\")"->"$r22 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r22 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r22 == class \"[B\" goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r22 == class \"[B\" goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r23 = new java.lang.AssertionError";
    "if $r22 == class \"[B\" goto $z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r23 = new java.lang.AssertionError"->"specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ba should be byte[]\")";
    "specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ba should be byte[]\")"->"throw $r23";
    "$z11 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z11 != 0 goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z11 != 0 goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"sa\")";
    "if $z11 != 0 goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"sa\")"->"$r19 = virtualinvoke $r18.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r19 = virtualinvoke $r18.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r19 == class \"[S\" goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r19 == class \"[S\" goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r20 = new java.lang.AssertionError";
    "if $r19 == class \"[S\" goto $z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r20 = new java.lang.AssertionError"->"specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.sa should be short[]\")";
    "specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.sa should be short[]\")"->"throw $r20";
    "$z12 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r15 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ca\")";
    "if $z12 != 0 goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r15 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ca\")"->"$r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r16 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r16 == class \"[C\" goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r16 == class \"[C\" goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r17 = new java.lang.AssertionError";
    "if $r16 == class \"[C\" goto $z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r17 = new java.lang.AssertionError"->"specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be char[]\")";
    "specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.xa should be char[]\")"->"throw $r17";
    "$z13 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ia\")";
    "if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ia\")"->"$r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r13 == class \"[I\" goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r13 == class \"[I\" goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r14 = new java.lang.AssertionError";
    "if $r13 == class \"[I\" goto $z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r14 = new java.lang.AssertionError"->"specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ia should be int[]\")";
    "specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.ia should be int[]\")"->"throw $r14";
    "$z14 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z14 != 0 goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z14 != 0 goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r9 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"la\")";
    "if $z14 != 0 goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r9 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"la\")"->"$r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r10 = virtualinvoke $r9.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r10 == class \"[J\" goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r10 == class \"[J\" goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r11 = new java.lang.AssertionError";
    "if $r10 == class \"[J\" goto $z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r11 = new java.lang.AssertionError"->"specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.la should be long[]\")";
    "specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.la should be long[]\")"->"throw $r11";
    "$z15 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z15 != 0 goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $z15 != 0 goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fa\")";
    "if $z15 != 0 goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fa\")"->"$r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r7 == class \"[F\" goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "if $r7 == class \"[F\" goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$r8 = new java.lang.AssertionError";
    "if $r7 == class \"[F\" goto $z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"$z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>";
    "$r8 = new java.lang.AssertionError"->"specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.fa should be float[]\")";
    "specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.fa should be float[]\")"->"throw $r8";
    "$z16 = <javaT.lang.reflect.Generics.TestN1: boolean $assertionsDisabled>"->"if $z16 != 0 goto return";
    "if $z16 != 0 goto return"->"$r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"da\")";
    "if $z16 != 0 goto return"->"return";
    "$r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"da\")"->"$r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()";
    "$r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>()"->"if $r4 == class \"[D\" goto return";
    "if $r4 == class \"[D\" goto return"->"$r5 = new java.lang.AssertionError";
    "if $r4 == class \"[D\" goto return"->"return";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.da should be double[]\")";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of Inner2.da should be double[]\")"->"throw $r5";
}
