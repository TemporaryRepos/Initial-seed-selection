digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: javaT.lang.Class.getField.Exceptions;
r2 := @parameter0: java.lang.String;
r9 := @parameter1: java.lang.Class;
r22 = null;
"
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r2);
"
    "Block 3:
[preds: 2 ] [succs: 6 ]
goto [?= (branch)];
"
    "Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
r22 = r20;
"
    "Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
if r9 == null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
<javaT.lang.Class.getField.Exceptions: boolean ok> = 0;
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected \");
$r13 = virtualinvoke r9.<java.lang.Class: java.lang.String getName()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- FAILED\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= return];
"
    "Block 9:
[preds: 6 7 ] [succs: 10 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- OK\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
"
    "Block 10:
[preds: 8 9 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: javaT.lang.Class.getField.Exceptions;
r2 := @parameter0: java.lang.String;
r9 := @parameter1: java.lang.Class;
r22 = null;
"->"Block 1:
[preds: 0 ] [succs: 2 4 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: javaT.lang.Class.getField.Exceptions;
r2 := @parameter0: java.lang.String;
r9 := @parameter1: java.lang.Class;
r22 = null;
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r2);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r2);
"->"Block 3:
[preds: 2 ] [succs: 6 ]
goto [?= (branch)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r2);
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 6 ]
goto [?= (branch)];
"->"Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: 6 ]
r22 = r20;
";
    "Block 4:
[preds: 0 1 2 ] [succs: 5 6 ]
$r19 := @caughtexception;
r20 = $r19;
$r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();
$z0 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);
if $z0 == 0 goto (branch);
"->"Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
r22 = r20;
"->"Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
if r9 == null goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 3 4 5 ] [succs: 7 9 ]
if r22 != null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- OK\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
if r9 == null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
<javaT.lang.Class.getField.Exceptions: boolean ok> = 0;
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected \");
$r13 = virtualinvoke r9.<java.lang.Class: java.lang.String getName()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- FAILED\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= return];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
if r9 == null goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- OK\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
<javaT.lang.Class.getField.Exceptions: boolean ok> = 0;
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected \");
$r13 = virtualinvoke r9.<java.lang.Class: java.lang.String getName()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- FAILED\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= return];
"->"Block 10:
[preds: 8 9 ] [succs: ]
return;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -- OK\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
"->"Block 10:
[preds: 8 9 ] [succs: ]
return;
";
}
