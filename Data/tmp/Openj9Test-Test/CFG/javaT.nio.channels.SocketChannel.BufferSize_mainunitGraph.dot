digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>()"
    "$r1 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"
    "virtualinvoke $r1.<java.net.ServerSocket: void setReceiveBufferSize(int)>(-1)"
    "$r2 = new java.lang.Exception"
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"
    "throw $r2"
    "$r4 := @caughtexception"
    "r8 = $r4"
    "$r5 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"
    "virtualinvoke $r5.<java.net.ServerSocket: void setReceiveBufferSize(int)>(0)"
    "$r6 = new java.lang.Exception"
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"
    "throw $r6"
    "$r3 := @caughtexception"
    "r9 = $r3"
    "virtualinvoke r0.<java.nio.channels.ServerSocketChannel: void close()>()"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>()";
    "r0 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>()"->"$r1 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()";
    "r0 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>()"->"$r4 := @caughtexception";
    "$r1 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"->"virtualinvoke $r1.<java.net.ServerSocket: void setReceiveBufferSize(int)>(-1)";
    "$r1 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"->"$r4 := @caughtexception";
    "virtualinvoke $r1.<java.net.ServerSocket: void setReceiveBufferSize(int)>(-1)"->"$r2 = new java.lang.Exception";
    "virtualinvoke $r1.<java.net.ServerSocket: void setReceiveBufferSize(int)>(-1)"->"$r4 := @caughtexception";
    "$r2 = new java.lang.Exception"->"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")";
    "$r2 = new java.lang.Exception"->"$r4 := @caughtexception";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"->"throw $r2";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"->"$r4 := @caughtexception";
    "throw $r2"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"r8 = $r4";
    "r8 = $r4"->"$r5 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()";
    "r8 = $r4"->"$r3 := @caughtexception";
    "$r5 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"->"virtualinvoke $r5.<java.net.ServerSocket: void setReceiveBufferSize(int)>(0)";
    "$r5 = virtualinvoke r0.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()"->"$r3 := @caughtexception";
    "virtualinvoke $r5.<java.net.ServerSocket: void setReceiveBufferSize(int)>(0)"->"$r6 = new java.lang.Exception";
    "virtualinvoke $r5.<java.net.ServerSocket: void setReceiveBufferSize(int)>(0)"->"$r3 := @caughtexception";
    "$r6 = new java.lang.Exception"->"specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")";
    "$r6 = new java.lang.Exception"->"$r3 := @caughtexception";
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"->"throw $r6";
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Illegal size accepted\")"->"$r3 := @caughtexception";
    "throw $r6"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"r9 = $r3";
    "r9 = $r3"->"virtualinvoke r0.<java.nio.channels.ServerSocketChannel: void close()>()";
    "virtualinvoke r0.<java.nio.channels.ServerSocketChannel: void close()>()"->"return";
}
