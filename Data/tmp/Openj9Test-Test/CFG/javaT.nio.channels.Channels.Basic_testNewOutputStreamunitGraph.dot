digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "$r0 = new java.io.FileOutputStream"
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"
    "r4 = r3"
    "r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)"
    "i1 = 0"
    "$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "if i1 >= $i0 goto virtualinvoke r5.<java.io.OutputStream: void close()>()"
    "$r7 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"
    "$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r6)"
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[])>($r8)"
    "i1 = i1 + 1"
    "goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"
    "virtualinvoke r5.<java.io.OutputStream: void close()>()"
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"$r0 = new java.io.FileOutputStream";
    "$r0 = new java.io.FileOutputStream"->"specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()";
    "r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"->"r4 = r3";
    "r4 = r3"->"r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)";
    "r5 = staticinvoke <java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>(r4)"->"i1 = 0";
    "i1 = 0"->"$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"if i1 >= $i0 goto virtualinvoke r5.<java.io.OutputStream: void close()>()";
    "if i1 >= $i0 goto virtualinvoke r5.<java.io.OutputStream: void close()>()"->"$r7 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "if i1 >= $i0 goto virtualinvoke r5.<java.io.OutputStream: void close()>()"->"virtualinvoke r5.<java.io.OutputStream: void close()>()";
    "$r7 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>";
    "$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"->"$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r6)";
    "$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r6)"->"virtualinvoke r5.<java.io.OutputStream: void write(byte[])>($r8)";
    "virtualinvoke r5.<java.io.OutputStream: void write(byte[])>($r8)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]";
    "goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"->"$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "virtualinvoke r5.<java.io.OutputStream: void close()>()"->"virtualinvoke r2.<java.io.FileOutputStream: void close()>()";
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"->"return";
}
