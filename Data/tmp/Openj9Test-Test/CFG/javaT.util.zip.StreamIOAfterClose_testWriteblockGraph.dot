digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
r0 := @parameter0: java.util.zip.ZipOutputStream;
virtualinvoke r0.<java.util.zip.ZipOutputStream: void close()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$r1 = new java.util.zip.ZipEntry;
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
specialinvoke $r1.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(\"\");
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r1);
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r2 = new java.lang.Exception;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"write allowed after stream is closed\");
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
throw $r2;
"
    "Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
r0 := @parameter0: java.util.zip.ZipOutputStream;
virtualinvoke r0.<java.util.zip.ZipOutputStream: void close()>();
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
$r1 = new java.util.zip.ZipEntry;
";
    "Block 0:
[preds: ] [succs: 1 7 ]
r0 := @parameter0: java.util.zip.ZipOutputStream;
virtualinvoke r0.<java.util.zip.ZipOutputStream: void close()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$r1 = new java.util.zip.ZipEntry;
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
specialinvoke $r1.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(\"\");
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$r1 = new java.util.zip.ZipEntry;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
specialinvoke $r1.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(\"\");
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r1);
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
specialinvoke $r1.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(\"\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r1);
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
$r2 = new java.lang.Exception;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
virtualinvoke r0.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r1);
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r2 = new java.lang.Exception;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"write allowed after stream is closed\");
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r2 = new java.lang.Exception;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"write allowed after stream is closed\");
"->"Block 6:
[preds: 5 ] [succs: 7 ]
throw $r2;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"write allowed after stream is closed\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
throw $r2;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r3 := @caughtexception;
r4 = $r3;
return;
";
}
