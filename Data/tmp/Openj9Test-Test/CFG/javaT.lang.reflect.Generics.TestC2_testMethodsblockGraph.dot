digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing methods\");
r1 = newarray (java.lang.Class)[3];
r1[0] = class \"Ljava/lang/Throwable;\";
r1[1] = class \"LjavaT/lang/reflect/Generics/C0;\";
r1[2] = class \"LjavaT/lang/reflect/Generics/C0;\";
r2 = newarray (java.lang.Class)[1];
r2[0] = class \"Ljava/lang/Object;\";
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1t\", r1);
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1\", r2);
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mt\", r3);
r10 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z43 = r10 instanceof java.lang.reflect.ParameterizedType;
if $z43 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r84 = new java.lang.AssertionError;
specialinvoke $r84.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The return type of mc1t should be a parameterized type\");
throw $r84;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r85 = (java.lang.reflect.ParameterizedType) r10;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r82 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r82 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
$r83 = new java.lang.AssertionError;
specialinvoke $r83.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw return type of mc1t should be C0\");
throw $r83;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i13 = lengthof r86;
if $i13 == 1 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r81 = new java.lang.AssertionError;
specialinvoke $r81.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mc1t should have one type argument\");
throw $r81;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r79 = r86[0];
$z42 = $r79 instanceof java.lang.reflect.TypeVariable;
if $z42 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"
    "Block 11:
[preds: 10 ] [succs: ]
$r80 = new java.lang.AssertionError;
specialinvoke $r80.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument of return type of mc1t is a type variable\");
throw $r80;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if r11 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"
    "Block 14:
[preds: 13 ] [succs: ]
$r78 = new java.lang.AssertionError;
specialinvoke $r78.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mc1 is C0\");
throw $r78;
"
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$z41 = r12 instanceof java.lang.reflect.TypeVariable;
if $z41 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 17:
[preds: 16 ] [succs: ]
$r77 = new java.lang.AssertionError;
specialinvoke $r77.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mt is a type variable\");
throw $r77;
"
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r14 = r13[0];
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i12 = lengthof r13;
if $i12 == 3 goto r14 = r13[0];
"
    "Block 20:
[preds: 19 ] [succs: ]
$r76 = new java.lang.AssertionError;
specialinvoke $r76.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C0.mc1t has three parameters\");
throw $r76;
"
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r14 = r13[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r14 != null goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r75 = new java.lang.AssertionError;
specialinvoke $r75.<java.lang.AssertionError: void <init>()>();
throw $r75;
"
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z40 = r14 instanceof java.lang.reflect.TypeVariable;
if $z40 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"
    "Block 26:
[preds: 25 ] [succs: ]
$r74 = new java.lang.AssertionError;
specialinvoke $r74.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Generic type of the 1st parameter of mc1t(T) is a type variable\");
throw $r74;
"
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r87 = (java.lang.reflect.TypeVariable) r14;
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r67 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z39 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z39 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 29:
[preds: 28 ] [succs: ]
$r68 = new java.lang.AssertionError;
$r69 = new java.lang.StringBuilder;
specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Name of 1st type parameter of mc1t is T3, not \");
$r71 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r68.<java.lang.AssertionError: void <init>(java.lang.Object)>($r73);
throw $r68;
"
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i11 = lengthof r88;
if $i11 == 1 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r66 = new java.lang.AssertionError;
specialinvoke $r66.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T3 should have one bound (mc1t)\");
throw $r66;
"
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r15 = r13[1];
"
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r64 = r88[0];
if $r64 == class \"Ljava/lang/Throwable;\" goto r15 = r13[1];
"
    "Block 35:
[preds: 34 ] [succs: ]
$r65 = new java.lang.AssertionError;
specialinvoke $r65.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T3 should be Throwable(mc1t)\");
throw $r65;
"
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r15 = r13[1];
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$z38 = r15 instanceof java.lang.reflect.ParameterizedType;
if $z38 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"
    "Block 38:
[preds: 37 ] [succs: ]
$r63 = new java.lang.AssertionError;
specialinvoke $r63.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of parameter 2 of mc1t is a parameterized type\");
throw $r63;
"
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r89 = (java.lang.reflect.ParameterizedType) r15;
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r61 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r61 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 41:
[preds: 40 ] [succs: ]
$r62 = new java.lang.AssertionError;
specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 2 of mc1t is instantiation of C0\");
throw $r62;
"
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r59 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r59 == null goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 44:
[preds: 43 ] [succs: ]
$r60 = new java.lang.AssertionError;
specialinvoke $r60.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 2 of mc1t is has null owner\");
throw $r60;
"
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r16 = r90[0];
"
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i10 = lengthof r90;
if $i10 == 1 goto r16 = r90[0];
"
    "Block 47:
[preds: 46 ] [succs: ]
$r58 = new java.lang.AssertionError;
specialinvoke $r58.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of parameter 2 of mc1t has one type argument\");
throw $r58;
"
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r16 = r90[0];
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$z37 = r16 instanceof java.lang.reflect.TypeVariable;
if $z37 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"
    "Block 50:
[preds: 49 ] [succs: ]
$r57 = new java.lang.AssertionError;
specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<T> is a type variable (mc1t)\");
throw $r57;
"
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r91 = (java.lang.reflect.TypeVariable) r16;
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$r50 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z36 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z36 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 53:
[preds: 52 ] [succs: ]
$r51 = new java.lang.AssertionError;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"mc1t: Name of the type arg of C0<T> is T, not \");
$r54 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r51.<java.lang.AssertionError: void <init>(java.lang.Object)>($r56);
throw $r51;
"
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i9 = lengthof r92;
if $i9 == 1 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 56:
[preds: 55 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"mc1t: The type argument of C0<T>  should have one bound\");
throw $r49;
"
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r17 = r13[2];
"
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$r47 = r92[0];
if $r47 == class \"Ljava/lang/Object;\" goto r17 = r13[2];
"
    "Block 59:
[preds: 58 ] [succs: ]
$r48 = new java.lang.AssertionError;
specialinvoke $r48.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"mc1t: The bound of the type arg of C0<T> should be Object\");
throw $r48;
"
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r17 = r13[2];
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
if r17 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 62:
[preds: 61 ] [succs: ]
$r46 = new java.lang.AssertionError;
specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 3 of mc1t is C0\");
throw $r46;
"
    "Block 63:
[preds: 60 61 ] [succs: 64 66 ]
r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z21 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z21 != 0 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 64:
[preds: 63 ] [succs: 65 66 ]
$i8 = lengthof r18;
if $i8 == 1 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"
    "Block 65:
[preds: 64 ] [succs: ]
$r45 = new java.lang.AssertionError;
specialinvoke $r45.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2.mc1 has one parameter\");
throw $r45;
"
    "Block 66:
[preds: 63 64 ] [succs: 67 69 ]
r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z22 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z22 != 0 goto r20 = r19[0];
"
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$i7 = lengthof r19;
if $i7 == 1 goto r20 = r19[0];
"
    "Block 68:
[preds: 67 ] [succs: ]
$r44 = new java.lang.AssertionError;
specialinvoke $r44.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2.mt has one parameter\");
throw $r44;
"
    "Block 69:
[preds: 66 67 ] [succs: 70 72 ]
r20 = r19[0];
$z23 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z23 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"
    "Block 70:
[preds: 69 ] [succs: 71 72 ]
$z35 = r20 instanceof java.lang.reflect.TypeVariable;
if $z35 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"
    "Block 71:
[preds: 70 ] [succs: ]
$r43 = new java.lang.AssertionError;
specialinvoke $r43.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of mt(T) is a type variable\");
throw $r43;
"
    "Block 72:
[preds: 69 70 ] [succs: 73 75 ]
r93 = (java.lang.reflect.TypeVariable) r20;
$z24 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z24 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r36 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z34 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z34 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 74:
[preds: 73 ] [succs: ]
$r37 = new java.lang.AssertionError;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of mt is T2, not \");
$r40 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r37.<java.lang.AssertionError: void <init>(java.lang.Object)>($r42);
throw $r37;
"
    "Block 75:
[preds: 72 73 ] [succs: 76 78 ]
r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z25 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z25 != 0 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 76:
[preds: 75 ] [succs: 77 78 ]
$i6 = lengthof r94;
if $i6 == 1 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 77:
[preds: 76 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T2 should have one bound\");
throw $r35;
"
    "Block 78:
[preds: 75 76 ] [succs: 79 81 ]
$z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z26 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 79:
[preds: 78 ] [succs: 80 81 ]
$r33 = r94[0];
$z33 = $r33 instanceof java.lang.reflect.ParameterizedType;
if $z33 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 80:
[preds: 79 ] [succs: ]
$r34 = new java.lang.AssertionError;
specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T2 should be parameterized type\");
throw $r34;
"
    "Block 81:
[preds: 78 79 ] [succs: 82 84 ]
r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z27 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z27 != 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 82:
[preds: 81 ] [succs: 83 84 ]
$i5 = lengthof r21;
if $i5 == 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 83:
[preds: 82 ] [succs: ]
$r32 = new java.lang.AssertionError;
specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mc1t should have no generic exception types\");
throw $r32;
"
    "Block 84:
[preds: 81 82 ] [succs: 85 87 ]
r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z28 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z28 != 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 85:
[preds: 84 ] [succs: 86 87 ]
$i4 = lengthof r22;
if $i4 == 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 86:
[preds: 85 ] [succs: ]
$r31 = new java.lang.AssertionError;
specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mc1 should have no generic exception types\");
throw $r31;
"
    "Block 87:
[preds: 84 85 ] [succs: 88 90 ]
r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z29 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z29 != 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 88:
[preds: 87 ] [succs: 89 90 ]
$i3 = lengthof r23;
if $i3 == 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 89:
[preds: 88 ] [succs: ]
$r30 = new java.lang.AssertionError;
specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mt should have no generic exception types\");
throw $r30;
"
    "Block 90:
[preds: 87 88 ] [succs: 91 93 ]
r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z30 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z30 != 0 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 91:
[preds: 90 ] [succs: 92 93 ]
$i2 = lengthof r24;
if $i2 == 1 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 92:
[preds: 91 ] [succs: ]
$r29 = new java.lang.AssertionError;
specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mc1t should have one type parameter\");
throw $r29;
"
    "Block 93:
[preds: 90 91 ] [succs: 94 96 ]
r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z31 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z31 != 0 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$i1 = lengthof r25;
if $i1 == 2 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 95:
[preds: 94 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mc1 should have two type parameters\");
throw $r28;
"
    "Block 96:
[preds: 93 94 ] [succs: 97 99 ]
r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z32 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z32 != 0 goto return;
"
    "Block 97:
[preds: 96 ] [succs: 98 99 ]
$i0 = lengthof r26;
if $i0 == 0 goto return;
"
    "Block 98:
[preds: 97 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mt should have no type parameters\");
throw $r27;
"
    "Block 99:
[preds: 96 97 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing methods\");
r1 = newarray (java.lang.Class)[3];
r1[0] = class \"Ljava/lang/Throwable;\";
r1[1] = class \"LjavaT/lang/reflect/Generics/C0;\";
r1[2] = class \"LjavaT/lang/reflect/Generics/C0;\";
r2 = newarray (java.lang.Class)[1];
r2[0] = class \"Ljava/lang/Object;\";
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1t\", r1);
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1\", r2);
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mt\", r3);
r10 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$z43 = r10 instanceof java.lang.reflect.ParameterizedType;
if $z43 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing methods\");
r1 = newarray (java.lang.Class)[3];
r1[0] = class \"Ljava/lang/Throwable;\";
r1[1] = class \"LjavaT/lang/reflect/Generics/C0;\";
r1[2] = class \"LjavaT/lang/reflect/Generics/C0;\";
r2 = newarray (java.lang.Class)[1];
r2[0] = class \"Ljava/lang/Object;\";
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1t\", r1);
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mc1\", r2);
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"mt\", r3);
r10 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r85 = (java.lang.reflect.ParameterizedType) r10;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z43 = r10 instanceof java.lang.reflect.ParameterizedType;
if $z43 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"->"Block 2:
[preds: 1 ] [succs: ]
$r84 = new java.lang.AssertionError;
specialinvoke $r84.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The return type of mc1t should be a parameterized type\");
throw $r84;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z43 = r10 instanceof java.lang.reflect.ParameterizedType;
if $z43 != 0 goto r85 = (java.lang.reflect.ParameterizedType) r10;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r85 = (java.lang.reflect.ParameterizedType) r10;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r85 = (java.lang.reflect.ParameterizedType) r10;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r82 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r82 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r85 = (java.lang.reflect.ParameterizedType) r10;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r82 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r82 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 5:
[preds: 4 ] [succs: ]
$r83 = new java.lang.AssertionError;
specialinvoke $r83.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The raw return type of mc1t should be C0\");
throw $r83;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r82 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r82 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i13 = lengthof r86;
if $i13 == 1 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r86 = interfaceinvoke r85.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i13 = lengthof r86;
if $i13 == 1 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 8:
[preds: 7 ] [succs: ]
$r81 = new java.lang.AssertionError;
specialinvoke $r81.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mc1t should have one type argument\");
throw $r81;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i13 = lengthof r86;
if $i13 == 1 goto $z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r79 = r86[0];
$z42 = $r79 instanceof java.lang.reflect.TypeVariable;
if $z42 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r79 = r86[0];
$z42 = $r79 instanceof java.lang.reflect.TypeVariable;
if $z42 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 11:
[preds: 10 ] [succs: ]
$r80 = new java.lang.AssertionError;
specialinvoke $r80.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type argument of return type of mc1t is a type variable\");
throw $r80;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r79 = r86[0];
$z42 = $r79 instanceof java.lang.reflect.TypeVariable;
if $z42 != 0 goto r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
if r11 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r11 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if r11 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 14:
[preds: 13 ] [succs: ]
$r78 = new java.lang.AssertionError;
specialinvoke $r78.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mc1 is C0\");
throw $r78;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if r11 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$z41 = r12 instanceof java.lang.reflect.TypeVariable;
if $z41 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r12 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r14 = r13[0];
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$z41 = r12 instanceof java.lang.reflect.TypeVariable;
if $z41 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 17:
[preds: 16 ] [succs: ]
$r77 = new java.lang.AssertionError;
specialinvoke $r77.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Return type of mt is a type variable\");
throw $r77;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$z41 = r12 instanceof java.lang.reflect.TypeVariable;
if $z41 != 0 goto r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r14 = r13[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r14 = r13[0];
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
$i12 = lengthof r13;
if $i12 == 3 goto r14 = r13[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r13 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r14 = r13[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r14 = r13[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i12 = lengthof r13;
if $i12 == 3 goto r14 = r13[0];
"->"Block 20:
[preds: 19 ] [succs: ]
$r76 = new java.lang.AssertionError;
specialinvoke $r76.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C0.mc1t has three parameters\");
throw $r76;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i12 = lengthof r13;
if $i12 == 3 goto r14 = r13[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r14 = r13[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r14 = r13[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
if r14 != null goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r14 = r13[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r14 != null goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 23:
[preds: 22 ] [succs: ]
$r75 = new java.lang.AssertionError;
specialinvoke $r75.<java.lang.AssertionError: void <init>()>();
throw $r75;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r14 != null goto $z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
$z40 = r14 instanceof java.lang.reflect.TypeVariable;
if $z40 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r87 = (java.lang.reflect.TypeVariable) r14;
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z40 = r14 instanceof java.lang.reflect.TypeVariable;
if $z40 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"->"Block 26:
[preds: 25 ] [succs: ]
$r74 = new java.lang.AssertionError;
specialinvoke $r74.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Generic type of the 1st parameter of mc1t(T) is a type variable\");
throw $r74;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z40 = r14 instanceof java.lang.reflect.TypeVariable;
if $z40 != 0 goto r87 = (java.lang.reflect.TypeVariable) r14;
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r87 = (java.lang.reflect.TypeVariable) r14;
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r87 = (java.lang.reflect.TypeVariable) r14;
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
$r67 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z39 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z39 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r87 = (java.lang.reflect.TypeVariable) r14;
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r67 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z39 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z39 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 29:
[preds: 28 ] [succs: ]
$r68 = new java.lang.AssertionError;
$r69 = new java.lang.StringBuilder;
specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Name of 1st type parameter of mc1t is T3, not \");
$r71 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r68.<java.lang.AssertionError: void <init>(java.lang.Object)>($r73);
throw $r68;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r67 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z39 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(\"T3\");
if $z39 != 0 goto r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
$i11 = lengthof r88;
if $i11 == 1 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r88 = interfaceinvoke r87.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r15 = r13[1];
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i11 = lengthof r88;
if $i11 == 1 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 32:
[preds: 31 ] [succs: ]
$r66 = new java.lang.AssertionError;
specialinvoke $r66.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T3 should have one bound (mc1t)\");
throw $r66;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i11 = lengthof r88;
if $i11 == 1 goto $z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r15 = r13[1];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r15 = r13[1];
"->"Block 34:
[preds: 33 ] [succs: 35 36 ]
$r64 = r88[0];
if $r64 == class \"Ljava/lang/Throwable;\" goto r15 = r13[1];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r15 = r13[1];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r15 = r13[1];
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r64 = r88[0];
if $r64 == class \"Ljava/lang/Throwable;\" goto r15 = r13[1];
"->"Block 35:
[preds: 34 ] [succs: ]
$r65 = new java.lang.AssertionError;
specialinvoke $r65.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T3 should be Throwable(mc1t)\");
throw $r65;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r64 = r88[0];
if $r64 == class \"Ljava/lang/Throwable;\" goto r15 = r13[1];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r15 = r13[1];
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r15 = r13[1];
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"->"Block 37:
[preds: 36 ] [succs: 38 39 ]
$z38 = r15 instanceof java.lang.reflect.ParameterizedType;
if $z38 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r15 = r13[1];
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r89 = (java.lang.reflect.ParameterizedType) r15;
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$z38 = r15 instanceof java.lang.reflect.ParameterizedType;
if $z38 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"->"Block 38:
[preds: 37 ] [succs: ]
$r63 = new java.lang.AssertionError;
specialinvoke $r63.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of parameter 2 of mc1t is a parameterized type\");
throw $r63;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$z38 = r15 instanceof java.lang.reflect.ParameterizedType;
if $z38 != 0 goto r89 = (java.lang.reflect.ParameterizedType) r15;
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r89 = (java.lang.reflect.ParameterizedType) r15;
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r89 = (java.lang.reflect.ParameterizedType) r15;
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 40:
[preds: 39 ] [succs: 41 42 ]
$r61 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r61 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r89 = (java.lang.reflect.ParameterizedType) r15;
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r61 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r61 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 41:
[preds: 40 ] [succs: ]
$r62 = new java.lang.AssertionError;
specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 2 of mc1t is instantiation of C0\");
throw $r62;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r61 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r61 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 43:
[preds: 42 ] [succs: 44 45 ]
$r59 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r59 == null goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r16 = r90[0];
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r59 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r59 == null goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 44:
[preds: 43 ] [succs: ]
$r60 = new java.lang.AssertionError;
specialinvoke $r60.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 2 of mc1t is has null owner\");
throw $r60;
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r59 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r59 == null goto r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r16 = r90[0];
";
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r16 = r90[0];
"->"Block 46:
[preds: 45 ] [succs: 47 48 ]
$i10 = lengthof r90;
if $i10 == 1 goto r16 = r90[0];
";
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r90 = interfaceinvoke r89.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r16 = r90[0];
"->"Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r16 = r90[0];
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
";
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i10 = lengthof r90;
if $i10 == 1 goto r16 = r90[0];
"->"Block 47:
[preds: 46 ] [succs: ]
$r58 = new java.lang.AssertionError;
specialinvoke $r58.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of parameter 2 of mc1t has one type argument\");
throw $r58;
";
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i10 = lengthof r90;
if $i10 == 1 goto r16 = r90[0];
"->"Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r16 = r90[0];
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
";
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r16 = r90[0];
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"->"Block 49:
[preds: 48 ] [succs: 50 51 ]
$z37 = r16 instanceof java.lang.reflect.TypeVariable;
if $z37 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
";
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r16 = r90[0];
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"->"Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r91 = (java.lang.reflect.TypeVariable) r16;
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$z37 = r16 instanceof java.lang.reflect.TypeVariable;
if $z37 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"->"Block 50:
[preds: 49 ] [succs: ]
$r57 = new java.lang.AssertionError;
specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<T> is a type variable (mc1t)\");
throw $r57;
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$z37 = r16 instanceof java.lang.reflect.TypeVariable;
if $z37 != 0 goto r91 = (java.lang.reflect.TypeVariable) r16;
"->"Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r91 = (java.lang.reflect.TypeVariable) r16;
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r91 = (java.lang.reflect.TypeVariable) r16;
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 52:
[preds: 51 ] [succs: 53 54 ]
$r50 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z36 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z36 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r91 = (java.lang.reflect.TypeVariable) r16;
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$r50 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z36 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z36 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 53:
[preds: 52 ] [succs: ]
$r51 = new java.lang.AssertionError;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"mc1t: Name of the type arg of C0<T> is T, not \");
$r54 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r51.<java.lang.AssertionError: void <init>(java.lang.Object)>($r56);
throw $r51;
";
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$r50 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z36 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z36 != 0 goto r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 55:
[preds: 54 ] [succs: 56 57 ]
$i9 = lengthof r92;
if $i9 == 1 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r92 = interfaceinvoke r91.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 57:
[preds: 54 55 ] [succs: 58 60 ]
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r17 = r13[2];
";
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i9 = lengthof r92;
if $i9 == 1 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 56:
[preds: 55 ] [succs: ]
$r49 = new java.lang.AssertionError;
specialinvoke $r49.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"mc1t: The type argument of C0<T>  should have one bound\");
throw $r49;
";
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i9 = lengthof r92;
if $i9 == 1 goto $z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 57:
[preds: 54 55 ] [succs: 58 60 ]
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r17 = r13[2];
";
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r17 = r13[2];
"->"Block 58:
[preds: 57 ] [succs: 59 60 ]
$r47 = r92[0];
if $r47 == class \"Ljava/lang/Object;\" goto r17 = r13[2];
";
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r17 = r13[2];
"->"Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r17 = r13[2];
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$r47 = r92[0];
if $r47 == class \"Ljava/lang/Object;\" goto r17 = r13[2];
"->"Block 59:
[preds: 58 ] [succs: ]
$r48 = new java.lang.AssertionError;
specialinvoke $r48.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"mc1t: The bound of the type arg of C0<T> should be Object\");
throw $r48;
";
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$r47 = r92[0];
if $r47 == class \"Ljava/lang/Object;\" goto r17 = r13[2];
"->"Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r17 = r13[2];
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r17 = r13[2];
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 61:
[preds: 60 ] [succs: 62 63 ]
if r17 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r17 = r13[2];
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 63:
[preds: 60 61 ] [succs: 64 66 ]
r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z21 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z21 != 0 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
if r17 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 62:
[preds: 61 ] [succs: ]
$r46 = new java.lang.AssertionError;
specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of parameter 3 of mc1t is C0\");
throw $r46;
";
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
if r17 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 63:
[preds: 60 61 ] [succs: 64 66 ]
r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z21 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z21 != 0 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 63:
[preds: 60 61 ] [succs: 64 66 ]
r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z21 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z21 != 0 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 64:
[preds: 63 ] [succs: 65 66 ]
$i8 = lengthof r18;
if $i8 == 1 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
";
    "Block 63:
[preds: 60 61 ] [succs: 64 66 ]
r18 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z21 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z21 != 0 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 66:
[preds: 63 64 ] [succs: 67 69 ]
r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z22 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z22 != 0 goto r20 = r19[0];
";
    "Block 64:
[preds: 63 ] [succs: 65 66 ]
$i8 = lengthof r18;
if $i8 == 1 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 65:
[preds: 64 ] [succs: ]
$r45 = new java.lang.AssertionError;
specialinvoke $r45.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2.mc1 has one parameter\");
throw $r45;
";
    "Block 64:
[preds: 63 ] [succs: 65 66 ]
$i8 = lengthof r18;
if $i8 == 1 goto r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
"->"Block 66:
[preds: 63 64 ] [succs: 67 69 ]
r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z22 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z22 != 0 goto r20 = r19[0];
";
    "Block 66:
[preds: 63 64 ] [succs: 67 69 ]
r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z22 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z22 != 0 goto r20 = r19[0];
"->"Block 67:
[preds: 66 ] [succs: 68 69 ]
$i7 = lengthof r19;
if $i7 == 1 goto r20 = r19[0];
";
    "Block 66:
[preds: 63 64 ] [succs: 67 69 ]
r19 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z22 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z22 != 0 goto r20 = r19[0];
"->"Block 69:
[preds: 66 67 ] [succs: 70 72 ]
r20 = r19[0];
$z23 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z23 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
";
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$i7 = lengthof r19;
if $i7 == 1 goto r20 = r19[0];
"->"Block 68:
[preds: 67 ] [succs: ]
$r44 = new java.lang.AssertionError;
specialinvoke $r44.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C2.mt has one parameter\");
throw $r44;
";
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$i7 = lengthof r19;
if $i7 == 1 goto r20 = r19[0];
"->"Block 69:
[preds: 66 67 ] [succs: 70 72 ]
r20 = r19[0];
$z23 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z23 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
";
    "Block 69:
[preds: 66 67 ] [succs: 70 72 ]
r20 = r19[0];
$z23 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z23 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"->"Block 70:
[preds: 69 ] [succs: 71 72 ]
$z35 = r20 instanceof java.lang.reflect.TypeVariable;
if $z35 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
";
    "Block 69:
[preds: 66 67 ] [succs: 70 72 ]
r20 = r19[0];
$z23 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z23 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"->"Block 72:
[preds: 69 70 ] [succs: 73 75 ]
r93 = (java.lang.reflect.TypeVariable) r20;
$z24 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z24 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 70:
[preds: 69 ] [succs: 71 72 ]
$z35 = r20 instanceof java.lang.reflect.TypeVariable;
if $z35 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"->"Block 71:
[preds: 70 ] [succs: ]
$r43 = new java.lang.AssertionError;
specialinvoke $r43.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of mt(T) is a type variable\");
throw $r43;
";
    "Block 70:
[preds: 69 ] [succs: 71 72 ]
$z35 = r20 instanceof java.lang.reflect.TypeVariable;
if $z35 != 0 goto r93 = (java.lang.reflect.TypeVariable) r20;
"->"Block 72:
[preds: 69 70 ] [succs: 73 75 ]
r93 = (java.lang.reflect.TypeVariable) r20;
$z24 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z24 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 72:
[preds: 69 70 ] [succs: 73 75 ]
r93 = (java.lang.reflect.TypeVariable) r20;
$z24 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z24 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 73:
[preds: 72 ] [succs: 74 75 ]
$r36 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z34 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z34 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 72:
[preds: 69 70 ] [succs: 73 75 ]
r93 = (java.lang.reflect.TypeVariable) r20;
$z24 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z24 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 75:
[preds: 72 73 ] [succs: 76 78 ]
r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z25 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z25 != 0 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r36 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z34 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z34 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 74:
[preds: 73 ] [succs: ]
$r37 = new java.lang.AssertionError;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of mt is T2, not \");
$r40 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r37.<java.lang.AssertionError: void <init>(java.lang.Object)>($r42);
throw $r37;
";
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r36 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z34 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z34 != 0 goto r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 75:
[preds: 72 73 ] [succs: 76 78 ]
r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z25 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z25 != 0 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 75:
[preds: 72 73 ] [succs: 76 78 ]
r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z25 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z25 != 0 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 76:
[preds: 75 ] [succs: 77 78 ]
$i6 = lengthof r94;
if $i6 == 1 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 75:
[preds: 72 73 ] [succs: 76 78 ]
r94 = interfaceinvoke r93.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z25 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z25 != 0 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 78:
[preds: 75 76 ] [succs: 79 81 ]
$z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z26 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 76:
[preds: 75 ] [succs: 77 78 ]
$i6 = lengthof r94;
if $i6 == 1 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 77:
[preds: 76 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T2 should have one bound\");
throw $r35;
";
    "Block 76:
[preds: 75 ] [succs: 77 78 ]
$i6 = lengthof r94;
if $i6 == 1 goto $z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 78:
[preds: 75 76 ] [succs: 79 81 ]
$z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z26 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 78:
[preds: 75 76 ] [succs: 79 81 ]
$z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z26 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 79:
[preds: 78 ] [succs: 80 81 ]
$r33 = r94[0];
$z33 = $r33 instanceof java.lang.reflect.ParameterizedType;
if $z33 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 78:
[preds: 75 76 ] [succs: 79 81 ]
$z26 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z26 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 81:
[preds: 78 79 ] [succs: 82 84 ]
r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z27 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z27 != 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 79:
[preds: 78 ] [succs: 80 81 ]
$r33 = r94[0];
$z33 = $r33 instanceof java.lang.reflect.ParameterizedType;
if $z33 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 80:
[preds: 79 ] [succs: ]
$r34 = new java.lang.AssertionError;
specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The bound of T2 should be parameterized type\");
throw $r34;
";
    "Block 79:
[preds: 78 ] [succs: 80 81 ]
$r33 = r94[0];
$z33 = $r33 instanceof java.lang.reflect.ParameterizedType;
if $z33 != 0 goto r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 81:
[preds: 78 79 ] [succs: 82 84 ]
r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z27 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z27 != 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 81:
[preds: 78 79 ] [succs: 82 84 ]
r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z27 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z27 != 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 82:
[preds: 81 ] [succs: 83 84 ]
$i5 = lengthof r21;
if $i5 == 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 81:
[preds: 78 79 ] [succs: 82 84 ]
r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z27 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z27 != 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 84:
[preds: 81 82 ] [succs: 85 87 ]
r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z28 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z28 != 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 82:
[preds: 81 ] [succs: 83 84 ]
$i5 = lengthof r21;
if $i5 == 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 83:
[preds: 82 ] [succs: ]
$r32 = new java.lang.AssertionError;
specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mc1t should have no generic exception types\");
throw $r32;
";
    "Block 82:
[preds: 81 ] [succs: 83 84 ]
$i5 = lengthof r21;
if $i5 == 0 goto r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 84:
[preds: 81 82 ] [succs: 85 87 ]
r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z28 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z28 != 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 84:
[preds: 81 82 ] [succs: 85 87 ]
r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z28 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z28 != 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 85:
[preds: 84 ] [succs: 86 87 ]
$i4 = lengthof r22;
if $i4 == 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 84:
[preds: 81 82 ] [succs: 85 87 ]
r22 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z28 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z28 != 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 87:
[preds: 84 85 ] [succs: 88 90 ]
r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z29 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z29 != 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 85:
[preds: 84 ] [succs: 86 87 ]
$i4 = lengthof r22;
if $i4 == 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 86:
[preds: 85 ] [succs: ]
$r31 = new java.lang.AssertionError;
specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mc1 should have no generic exception types\");
throw $r31;
";
    "Block 85:
[preds: 84 ] [succs: 86 87 ]
$i4 = lengthof r22;
if $i4 == 0 goto r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 87:
[preds: 84 85 ] [succs: 88 90 ]
r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z29 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z29 != 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 87:
[preds: 84 85 ] [succs: 88 90 ]
r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z29 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z29 != 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 88:
[preds: 87 ] [succs: 89 90 ]
$i3 = lengthof r23;
if $i3 == 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 87:
[preds: 84 85 ] [succs: 88 90 ]
r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z29 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z29 != 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 90:
[preds: 87 88 ] [succs: 91 93 ]
r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z30 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z30 != 0 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 88:
[preds: 87 ] [succs: 89 90 ]
$i3 = lengthof r23;
if $i3 == 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 89:
[preds: 88 ] [succs: ]
$r30 = new java.lang.AssertionError;
specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C0.mt should have no generic exception types\");
throw $r30;
";
    "Block 88:
[preds: 87 ] [succs: 89 90 ]
$i3 = lengthof r23;
if $i3 == 0 goto r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 90:
[preds: 87 88 ] [succs: 91 93 ]
r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z30 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z30 != 0 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 90:
[preds: 87 88 ] [succs: 91 93 ]
r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z30 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z30 != 0 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 91:
[preds: 90 ] [succs: 92 93 ]
$i2 = lengthof r24;
if $i2 == 1 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 90:
[preds: 87 88 ] [succs: 91 93 ]
r24 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z30 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z30 != 0 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 93:
[preds: 90 91 ] [succs: 94 96 ]
r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z31 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z31 != 0 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 91:
[preds: 90 ] [succs: 92 93 ]
$i2 = lengthof r24;
if $i2 == 1 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 92:
[preds: 91 ] [succs: ]
$r29 = new java.lang.AssertionError;
specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mc1t should have one type parameter\");
throw $r29;
";
    "Block 91:
[preds: 90 ] [succs: 92 93 ]
$i2 = lengthof r24;
if $i2 == 1 goto r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 93:
[preds: 90 91 ] [succs: 94 96 ]
r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z31 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z31 != 0 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 93:
[preds: 90 91 ] [succs: 94 96 ]
r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z31 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z31 != 0 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 94:
[preds: 93 ] [succs: 95 96 ]
$i1 = lengthof r25;
if $i1 == 2 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 93:
[preds: 90 91 ] [succs: 94 96 ]
r25 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z31 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z31 != 0 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 96:
[preds: 93 94 ] [succs: 97 99 ]
r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z32 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z32 != 0 goto return;
";
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$i1 = lengthof r25;
if $i1 == 2 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 95:
[preds: 94 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mc1 should have two type parameters\");
throw $r28;
";
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$i1 = lengthof r25;
if $i1 == 2 goto r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 96:
[preds: 93 94 ] [succs: 97 99 ]
r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z32 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z32 != 0 goto return;
";
    "Block 96:
[preds: 93 94 ] [succs: 97 99 ]
r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z32 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z32 != 0 goto return;
"->"Block 97:
[preds: 96 ] [succs: 98 99 ]
$i0 = lengthof r26;
if $i0 == 0 goto return;
";
    "Block 96:
[preds: 93 94 ] [succs: 97 99 ]
r26 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z32 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z32 != 0 goto return;
"->"Block 99:
[preds: 96 97 ] [succs: ]
return;
";
    "Block 97:
[preds: 96 ] [succs: 98 99 ]
$i0 = lengthof r26;
if $i0 == 0 goto return;
"->"Block 98:
[preds: 97 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Method C2.mt should have no type parameters\");
throw $r27;
";
    "Block 97:
[preds: 96 ] [succs: 98 99 ]
$i0 = lengthof r26;
if $i0 == 0 goto return;
"->"Block 99:
[preds: 96 97 ] [succs: ]
return;
";
}
