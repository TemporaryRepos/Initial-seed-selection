digraph "unitGraph" {
    "r0 := @parameter0: java.lang.reflect.Type"
    "r2 := @parameter1: java.lang.String"
    "if r0 == null goto return"
    "$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"
    "$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0)"
    "if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"
    "return"
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"
    "$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"
    "interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0)"
    "goto [?= return]"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"
    "interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0)"
    "throw r5"
    "r0 := @parameter0: java.lang.reflect.Type"->"r2 := @parameter1: java.lang.String";
    "r2 := @parameter1: java.lang.String"->"if r0 == null goto return";
    "if r0 == null goto return"->"$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>";
    "if r0 == null goto return"->"return";
    "$r1 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"->"$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0)";
    "$z0 = interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0)"->"if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)";
    "if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"->"return";
    "if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"->"staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)";
    "if $z0 != 0 goto staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"->"$r4 := @caughtexception";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"->"$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>";
    "staticinvoke <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: void check2(java.lang.reflect.Type,java.lang.String)>(r0, r2)"->"$r4 := @caughtexception";
    "$r3 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"->"interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0)";
    "interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r0)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"r5 = $r4";
    "r5 = $r4"->"$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>";
    "$r6 = <javaT.lang.reflect.Generics.TestPlainArrayNotGeneric: java.util.Set checking>"->"interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0)";
    "interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r0)"->"throw r5";
}
