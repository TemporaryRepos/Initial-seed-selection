digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r56 := @parameter0: java.lang.String[];
s0 = 500;
$r0 = new java.util.ArrayList;
$i1 = 3 * s0;
specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);
r1 = $r0;
$i2 = s0 + 1;
r2 = newarray (java.util.List)[$i2];
$i3 = s0 + 1;
r3 = newarray (int)[$i3];
i23 = 0;
"
    "Block 1:
[preds: 0 11 ] [succs: 2 12 ]
if i23 > s0 goto $r4 = newarray (java.util.List)[4];
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r54 = new java.util.ArrayList;
specialinvoke $r54.<java.util.ArrayList: void <init>()>();
r57 = $r54;
r58 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i23, 2);
i24 = 0;
i25 = virtualinvoke r58.<java.lang.String: int length()>();
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i24 >= i25 goto r2[i23] = r57;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$c22 = virtualinvoke r58.<java.lang.String: char charAt(int)>(i24);
if $c22 != 49 goto $r59 = \"0\";
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r59 = \"1\";
goto [?= interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r59 = \"0\";
"
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59);
i24 = i24 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 3 ] [succs: 9 10 ]
r2[i23] = r57;
if i23 != s0 goto $i21 = interfaceinvoke r1.<java.util.List: int size()>();
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
r3[i23] = -1;
goto [?= i23 = i23 + 1];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
$i21 = interfaceinvoke r1.<java.util.List: int size()>();
r3[i23] = $i21;
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>(r57);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"*\");
"
    "Block 11:
[preds: 9 10 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= (branch)];
"
    "Block 12:
[preds: 1 ] [succs: 13 ]
$r4 = newarray (java.util.List)[4];
$r4[0] = r1;
$r5 = new java.util.LinkedList;
specialinvoke $r5.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r4[1] = $r5;
$r6 = new java.util.Vector;
specialinvoke $r6.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r4[2] = $r6;
$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);
$r4[3] = $r8;
r60 = $r4;
i26 = 0;
"
    "Block 13:
[preds: 12 21 ] [succs: 14 22 ]
$i4 = lengthof r60;
if i26 >= $i4 goto staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
r61 = r60[i26];
i27 = 0;
"
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i27 > s0 goto $i16 = interfaceinvoke r61.<java.util.List: int size()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r42 = r2[i27];
i28 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r42);
$i19 = r3[i27];
if i28 == $i19 goto i27 = i27 + 1;
"
    "Block 17:
[preds: 16 ] [succs: ]
$r43 = new java.lang.Exception;
$r44 = new java.lang.StringBuilder;
specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke r61.<java.lang.Object: java.lang.Class getClass()>();
$r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" indexOfSubList: \");
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"is \");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$i20 = r3[i27];
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r43.<java.lang.Exception: void <init>(java.lang.String)>($r53);
throw $r43;
"
    "Block 18:
[preds: 16 ] [succs: 15 ]
i27 = i27 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$i16 = interfaceinvoke r61.<java.util.List: int size()>();
$i17 = 2 * $i16;
$r35 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i17, \"0\");
$i18 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r35);
if $i18 == -1 goto i26 = i26 + 1;
"
    "Block 20:
[preds: 19 ] [succs: ]
$r36 = new java.lang.Exception;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke r61.<java.lang.Object: java.lang.Class getClass()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" indexOfSubList: big target\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>($r41);
throw $r36;
"
    "Block 21:
[preds: 19 ] [succs: 13 ]
i26 = i26 + 1;
goto [?= $i4 = lengthof r60];
"
    "Block 22:
[preds: 13 ] [succs: 23 ]
staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
i29 = interfaceinvoke r1.<java.util.List: int size()>();
i30 = 0;
"
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
if i30 > s0 goto $r9 = newarray (java.util.List)[4];
"
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$r33 = r2[i30];
staticinvoke <java.util.Collections: void reverse(java.util.List)>($r33);
if i30 == s0 goto i30 = i30 + 1;
"
    "Block 25:
[preds: 24 ] [succs: 26 ]
$i12 = r3[i30];
$i13 = i29 - $i12;
$r34 = r2[i30];
$i14 = interfaceinvoke $r34.<java.util.List: int size()>();
$i15 = $i13 - $i14;
r3[i30] = $i15;
"
    "Block 26:
[preds: 24 25 ] [succs: 23 ]
i30 = i30 + 1;
goto [?= (branch)];
"
    "Block 27:
[preds: 23 ] [succs: 28 ]
$r9 = newarray (java.util.List)[4];
$r9[0] = r1;
$r10 = new java.util.LinkedList;
specialinvoke $r10.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r9[1] = $r10;
$r11 = new java.util.Vector;
specialinvoke $r11.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r9[2] = $r11;
$r12 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);
$r9[3] = $r13;
r62 = $r9;
i31 = 0;
"
    "Block 28:
[preds: 27 36 ] [succs: 29 37 ]
$i5 = lengthof r62;
if i31 >= $i5 goto return;
"
    "Block 29:
[preds: 28 ] [succs: 30 ]
r63 = r62[i31];
i32 = 0;
"
    "Block 30:
[preds: 29 33 ] [succs: 31 34 ]
if i32 > s0 goto $i6 = interfaceinvoke r63.<java.util.List: int size()>();
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r2[i32];
i9 = staticinvoke <java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)>(r63, $r21);
$i10 = r3[i32];
if i9 == $i10 goto i32 = i32 + 1;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r22 = new java.lang.Exception;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke r63.<java.lang.Object: java.lang.Class getClass()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" lastIdexOfSubList: \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"is \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$i11 = r3[i32];
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r22;
"
    "Block 33:
[preds: 31 ] [succs: 30 ]
i32 = i32 + 1;
goto [?= (branch)];
"
    "Block 34:
[preds: 30 ] [succs: 35 36 ]
$i6 = interfaceinvoke r63.<java.util.List: int size()>();
$i7 = 2 * $i6;
$r14 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i7, \"0\");
$i8 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r63, $r14);
if $i8 == -1 goto i31 = i31 + 1;
"
    "Block 35:
[preds: 34 ] [succs: ]
$r15 = new java.lang.Exception;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke r63.<java.lang.Object: java.lang.Class getClass()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" lastIndexOfSubList: big tgt\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r20);
throw $r15;
"
    "Block 36:
[preds: 34 ] [succs: 28 ]
i31 = i31 + 1;
goto [?= $i5 = lengthof r62];
"
    "Block 37:
[preds: 28 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r56 := @parameter0: java.lang.String[];
s0 = 500;
$r0 = new java.util.ArrayList;
$i1 = 3 * s0;
specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);
r1 = $r0;
$i2 = s0 + 1;
r2 = newarray (java.util.List)[$i2];
$i3 = s0 + 1;
r3 = newarray (int)[$i3];
i23 = 0;
"->"Block 1:
[preds: 0 11 ] [succs: 2 12 ]
if i23 > s0 goto $r4 = newarray (java.util.List)[4];
";
    "Block 1:
[preds: 0 11 ] [succs: 2 12 ]
if i23 > s0 goto $r4 = newarray (java.util.List)[4];
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r54 = new java.util.ArrayList;
specialinvoke $r54.<java.util.ArrayList: void <init>()>();
r57 = $r54;
r58 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i23, 2);
i24 = 0;
i25 = virtualinvoke r58.<java.lang.String: int length()>();
";
    "Block 1:
[preds: 0 11 ] [succs: 2 12 ]
if i23 > s0 goto $r4 = newarray (java.util.List)[4];
"->"Block 12:
[preds: 1 ] [succs: 13 ]
$r4 = newarray (java.util.List)[4];
$r4[0] = r1;
$r5 = new java.util.LinkedList;
specialinvoke $r5.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r4[1] = $r5;
$r6 = new java.util.Vector;
specialinvoke $r6.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r4[2] = $r6;
$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);
$r4[3] = $r8;
r60 = $r4;
i26 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r54 = new java.util.ArrayList;
specialinvoke $r54.<java.util.ArrayList: void <init>()>();
r57 = $r54;
r58 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i23, 2);
i24 = 0;
i25 = virtualinvoke r58.<java.lang.String: int length()>();
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i24 >= i25 goto r2[i23] = r57;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i24 >= i25 goto r2[i23] = r57;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$c22 = virtualinvoke r58.<java.lang.String: char charAt(int)>(i24);
if $c22 != 49 goto $r59 = \"0\";
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i24 >= i25 goto r2[i23] = r57;
"->"Block 8:
[preds: 3 ] [succs: 9 10 ]
r2[i23] = r57;
if i23 != s0 goto $i21 = interfaceinvoke r1.<java.util.List: int size()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$c22 = virtualinvoke r58.<java.lang.String: char charAt(int)>(i24);
if $c22 != 49 goto $r59 = \"0\";
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$r59 = \"1\";
goto [?= interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$c22 = virtualinvoke r58.<java.lang.String: char charAt(int)>(i24);
if $c22 != 49 goto $r59 = \"0\";
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r59 = \"0\";
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r59 = \"1\";
goto [?= interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59)];
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59);
i24 = i24 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r59 = \"0\";
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59);
i24 = i24 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>($r59);
i24 = i24 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i24 >= i25 goto r2[i23] = r57;
";
    "Block 8:
[preds: 3 ] [succs: 9 10 ]
r2[i23] = r57;
if i23 != s0 goto $i21 = interfaceinvoke r1.<java.util.List: int size()>();
"->"Block 9:
[preds: 8 ] [succs: 11 ]
r3[i23] = -1;
goto [?= i23 = i23 + 1];
";
    "Block 8:
[preds: 3 ] [succs: 9 10 ]
r2[i23] = r57;
if i23 != s0 goto $i21 = interfaceinvoke r1.<java.util.List: int size()>();
"->"Block 10:
[preds: 8 ] [succs: 11 ]
$i21 = interfaceinvoke r1.<java.util.List: int size()>();
r3[i23] = $i21;
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>(r57);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"*\");
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
r3[i23] = -1;
goto [?= i23 = i23 + 1];
"->"Block 11:
[preds: 9 10 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
$i21 = interfaceinvoke r1.<java.util.List: int size()>();
r3[i23] = $i21;
interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>(r57);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"*\");
"->"Block 11:
[preds: 9 10 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 11 ] [succs: 2 12 ]
if i23 > s0 goto $r4 = newarray (java.util.List)[4];
";
    "Block 12:
[preds: 1 ] [succs: 13 ]
$r4 = newarray (java.util.List)[4];
$r4[0] = r1;
$r5 = new java.util.LinkedList;
specialinvoke $r5.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r4[1] = $r5;
$r6 = new java.util.Vector;
specialinvoke $r6.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r4[2] = $r6;
$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);
$r4[3] = $r8;
r60 = $r4;
i26 = 0;
"->"Block 13:
[preds: 12 21 ] [succs: 14 22 ]
$i4 = lengthof r60;
if i26 >= $i4 goto staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
";
    "Block 13:
[preds: 12 21 ] [succs: 14 22 ]
$i4 = lengthof r60;
if i26 >= $i4 goto staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
"->"Block 14:
[preds: 13 ] [succs: 15 ]
r61 = r60[i26];
i27 = 0;
";
    "Block 13:
[preds: 12 21 ] [succs: 14 22 ]
$i4 = lengthof r60;
if i26 >= $i4 goto staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
"->"Block 22:
[preds: 13 ] [succs: 23 ]
staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
i29 = interfaceinvoke r1.<java.util.List: int size()>();
i30 = 0;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
r61 = r60[i26];
i27 = 0;
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i27 > s0 goto $i16 = interfaceinvoke r61.<java.util.List: int size()>();
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i27 > s0 goto $i16 = interfaceinvoke r61.<java.util.List: int size()>();
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$r42 = r2[i27];
i28 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r42);
$i19 = r3[i27];
if i28 == $i19 goto i27 = i27 + 1;
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i27 > s0 goto $i16 = interfaceinvoke r61.<java.util.List: int size()>();
"->"Block 19:
[preds: 15 ] [succs: 20 21 ]
$i16 = interfaceinvoke r61.<java.util.List: int size()>();
$i17 = 2 * $i16;
$r35 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i17, \"0\");
$i18 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r35);
if $i18 == -1 goto i26 = i26 + 1;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r42 = r2[i27];
i28 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r42);
$i19 = r3[i27];
if i28 == $i19 goto i27 = i27 + 1;
"->"Block 17:
[preds: 16 ] [succs: ]
$r43 = new java.lang.Exception;
$r44 = new java.lang.StringBuilder;
specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke r61.<java.lang.Object: java.lang.Class getClass()>();
$r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" indexOfSubList: \");
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"is \");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$i20 = r3[i27];
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r43.<java.lang.Exception: void <init>(java.lang.String)>($r53);
throw $r43;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r42 = r2[i27];
i28 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r42);
$i19 = r3[i27];
if i28 == $i19 goto i27 = i27 + 1;
"->"Block 18:
[preds: 16 ] [succs: 15 ]
i27 = i27 + 1;
goto [?= (branch)];
";
    "Block 18:
[preds: 16 ] [succs: 15 ]
i27 = i27 + 1;
goto [?= (branch)];
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i27 > s0 goto $i16 = interfaceinvoke r61.<java.util.List: int size()>();
";
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$i16 = interfaceinvoke r61.<java.util.List: int size()>();
$i17 = 2 * $i16;
$r35 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i17, \"0\");
$i18 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r35);
if $i18 == -1 goto i26 = i26 + 1;
"->"Block 20:
[preds: 19 ] [succs: ]
$r36 = new java.lang.Exception;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke r61.<java.lang.Object: java.lang.Class getClass()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" indexOfSubList: big target\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>($r41);
throw $r36;
";
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$i16 = interfaceinvoke r61.<java.util.List: int size()>();
$i17 = 2 * $i16;
$r35 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i17, \"0\");
$i18 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r61, $r35);
if $i18 == -1 goto i26 = i26 + 1;
"->"Block 21:
[preds: 19 ] [succs: 13 ]
i26 = i26 + 1;
goto [?= $i4 = lengthof r60];
";
    "Block 21:
[preds: 19 ] [succs: 13 ]
i26 = i26 + 1;
goto [?= $i4 = lengthof r60];
"->"Block 13:
[preds: 12 21 ] [succs: 14 22 ]
$i4 = lengthof r60;
if i26 >= $i4 goto staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
";
    "Block 22:
[preds: 13 ] [succs: 23 ]
staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);
i29 = interfaceinvoke r1.<java.util.List: int size()>();
i30 = 0;
"->"Block 23:
[preds: 22 26 ] [succs: 24 27 ]
if i30 > s0 goto $r9 = newarray (java.util.List)[4];
";
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
if i30 > s0 goto $r9 = newarray (java.util.List)[4];
"->"Block 24:
[preds: 23 ] [succs: 25 26 ]
$r33 = r2[i30];
staticinvoke <java.util.Collections: void reverse(java.util.List)>($r33);
if i30 == s0 goto i30 = i30 + 1;
";
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
if i30 > s0 goto $r9 = newarray (java.util.List)[4];
"->"Block 27:
[preds: 23 ] [succs: 28 ]
$r9 = newarray (java.util.List)[4];
$r9[0] = r1;
$r10 = new java.util.LinkedList;
specialinvoke $r10.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r9[1] = $r10;
$r11 = new java.util.Vector;
specialinvoke $r11.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r9[2] = $r11;
$r12 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);
$r9[3] = $r13;
r62 = $r9;
i31 = 0;
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$r33 = r2[i30];
staticinvoke <java.util.Collections: void reverse(java.util.List)>($r33);
if i30 == s0 goto i30 = i30 + 1;
"->"Block 25:
[preds: 24 ] [succs: 26 ]
$i12 = r3[i30];
$i13 = i29 - $i12;
$r34 = r2[i30];
$i14 = interfaceinvoke $r34.<java.util.List: int size()>();
$i15 = $i13 - $i14;
r3[i30] = $i15;
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$r33 = r2[i30];
staticinvoke <java.util.Collections: void reverse(java.util.List)>($r33);
if i30 == s0 goto i30 = i30 + 1;
"->"Block 26:
[preds: 24 25 ] [succs: 23 ]
i30 = i30 + 1;
goto [?= (branch)];
";
    "Block 25:
[preds: 24 ] [succs: 26 ]
$i12 = r3[i30];
$i13 = i29 - $i12;
$r34 = r2[i30];
$i14 = interfaceinvoke $r34.<java.util.List: int size()>();
$i15 = $i13 - $i14;
r3[i30] = $i15;
"->"Block 26:
[preds: 24 25 ] [succs: 23 ]
i30 = i30 + 1;
goto [?= (branch)];
";
    "Block 26:
[preds: 24 25 ] [succs: 23 ]
i30 = i30 + 1;
goto [?= (branch)];
"->"Block 23:
[preds: 22 26 ] [succs: 24 27 ]
if i30 > s0 goto $r9 = newarray (java.util.List)[4];
";
    "Block 27:
[preds: 23 ] [succs: 28 ]
$r9 = newarray (java.util.List)[4];
$r9[0] = r1;
$r10 = new java.util.LinkedList;
specialinvoke $r10.<java.util.LinkedList: void <init>(java.util.Collection)>(r1);
$r9[1] = $r10;
$r11 = new java.util.Vector;
specialinvoke $r11.<java.util.Vector: void <init>(java.util.Collection)>(r1);
$r9[2] = $r11;
$r12 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();
$r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);
$r9[3] = $r13;
r62 = $r9;
i31 = 0;
"->"Block 28:
[preds: 27 36 ] [succs: 29 37 ]
$i5 = lengthof r62;
if i31 >= $i5 goto return;
";
    "Block 28:
[preds: 27 36 ] [succs: 29 37 ]
$i5 = lengthof r62;
if i31 >= $i5 goto return;
"->"Block 29:
[preds: 28 ] [succs: 30 ]
r63 = r62[i31];
i32 = 0;
";
    "Block 28:
[preds: 27 36 ] [succs: 29 37 ]
$i5 = lengthof r62;
if i31 >= $i5 goto return;
"->"Block 37:
[preds: 28 ] [succs: ]
return;
";
    "Block 29:
[preds: 28 ] [succs: 30 ]
r63 = r62[i31];
i32 = 0;
"->"Block 30:
[preds: 29 33 ] [succs: 31 34 ]
if i32 > s0 goto $i6 = interfaceinvoke r63.<java.util.List: int size()>();
";
    "Block 30:
[preds: 29 33 ] [succs: 31 34 ]
if i32 > s0 goto $i6 = interfaceinvoke r63.<java.util.List: int size()>();
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r2[i32];
i9 = staticinvoke <java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)>(r63, $r21);
$i10 = r3[i32];
if i9 == $i10 goto i32 = i32 + 1;
";
    "Block 30:
[preds: 29 33 ] [succs: 31 34 ]
if i32 > s0 goto $i6 = interfaceinvoke r63.<java.util.List: int size()>();
"->"Block 34:
[preds: 30 ] [succs: 35 36 ]
$i6 = interfaceinvoke r63.<java.util.List: int size()>();
$i7 = 2 * $i6;
$r14 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i7, \"0\");
$i8 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r63, $r14);
if $i8 == -1 goto i31 = i31 + 1;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r2[i32];
i9 = staticinvoke <java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)>(r63, $r21);
$i10 = r3[i32];
if i9 == $i10 goto i32 = i32 + 1;
"->"Block 32:
[preds: 31 ] [succs: ]
$r22 = new java.lang.Exception;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke r63.<java.lang.Object: java.lang.Class getClass()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" lastIdexOfSubList: \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"is \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$i11 = r3[i32];
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.String)>($r32);
throw $r22;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$r21 = r2[i32];
i9 = staticinvoke <java.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)>(r63, $r21);
$i10 = r3[i32];
if i9 == $i10 goto i32 = i32 + 1;
"->"Block 33:
[preds: 31 ] [succs: 30 ]
i32 = i32 + 1;
goto [?= (branch)];
";
    "Block 33:
[preds: 31 ] [succs: 30 ]
i32 = i32 + 1;
goto [?= (branch)];
"->"Block 30:
[preds: 29 33 ] [succs: 31 34 ]
if i32 > s0 goto $i6 = interfaceinvoke r63.<java.util.List: int size()>();
";
    "Block 34:
[preds: 30 ] [succs: 35 36 ]
$i6 = interfaceinvoke r63.<java.util.List: int size()>();
$i7 = 2 * $i6;
$r14 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i7, \"0\");
$i8 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r63, $r14);
if $i8 == -1 goto i31 = i31 + 1;
"->"Block 35:
[preds: 34 ] [succs: ]
$r15 = new java.lang.Exception;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke r63.<java.lang.Object: java.lang.Class getClass()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" lastIndexOfSubList: big tgt\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r20);
throw $r15;
";
    "Block 34:
[preds: 30 ] [succs: 35 36 ]
$i6 = interfaceinvoke r63.<java.util.List: int size()>();
$i7 = 2 * $i6;
$r14 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i7, \"0\");
$i8 = staticinvoke <java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>(r63, $r14);
if $i8 == -1 goto i31 = i31 + 1;
"->"Block 36:
[preds: 34 ] [succs: 28 ]
i31 = i31 + 1;
goto [?= $i5 = lengthof r62];
";
    "Block 36:
[preds: 34 ] [succs: 28 ]
i31 = i31 + 1;
goto [?= $i5 = lengthof r62];
"->"Block 28:
[preds: 27 36 ] [succs: 29 37 ]
$i5 = lengthof r62;
if i31 >= $i5 goto return;
";
}
