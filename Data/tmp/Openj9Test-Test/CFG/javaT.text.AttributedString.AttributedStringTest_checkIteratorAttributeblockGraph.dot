digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.AttributedCharacterIterator;
i0 := @parameter1: int;
r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute;
r2 := @parameter3: java.lang.Object;
interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);
r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1);
if r2 != null goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15);
if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8);
"
    "Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
if r17 == null goto return;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if r2 == null goto $r9 = new java.lang.StringBuilder;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto return;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14);
"
    "Block 10:
[preds: 6 8 9 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.AttributedCharacterIterator;
i0 := @parameter1: int;
r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute;
r2 := @parameter3: java.lang.Object;
interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);
r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1);
if r2 != null goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.text.AttributedCharacterIterator;
i0 := @parameter1: int;
r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute;
r2 := @parameter3: java.lang.Object;
interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);
r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1);
if r2 != null goto (branch);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"->"Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15);
if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15);
if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15);
if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
"->"Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8);
"->"Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
";
    "Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
if r17 == null goto return;
";
    "Block 5:
[preds: 1 3 4 ] [succs: 6 7 ]
$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();
r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
if r2 != null goto (branch);
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if r2 == null goto $r9 = new java.lang.StringBuilder;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
if r17 == null goto return;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if r2 == null goto $r9 = new java.lang.StringBuilder;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
if r17 == null goto return;
"->"Block 10:
[preds: 6 8 9 ] [succs: ]
return;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if r2 == null goto $r9 = new java.lang.StringBuilder;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto return;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if r2 == null goto $r9 = new java.lang.StringBuilder;
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14);
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto return;
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14);
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto return;
"->"Block 10:
[preds: 6 8 9 ] [succs: ]
return;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14);
"->"Block 10:
[preds: 6 8 9 ] [succs: ]
return;
";
}
