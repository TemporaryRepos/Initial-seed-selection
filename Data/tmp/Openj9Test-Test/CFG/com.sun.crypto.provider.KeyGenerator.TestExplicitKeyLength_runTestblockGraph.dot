digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, \"SunJCE\");
virtualinvoke r1.<javax.crypto.KeyGenerator: void init(int)>(i0);
r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r12 = (java.security.Key) r2;
$r3 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>();
$i1 = lengthof $r3;
i2 = $i1 * 8;
if i2 == i0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r11 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"generated key has wrong length: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" bits\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r9);
throw $r11;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, \"SunJCE\");
virtualinvoke r1.<javax.crypto.KeyGenerator: void init(int)>(i0);
r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r12 = (java.security.Key) r2;
$r3 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>();
$i1 = lengthof $r3;
i2 = $i1 * 8;
if i2 == i0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r11 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"generated key has wrong length: \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" bits\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r9);
throw $r11;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, \"SunJCE\");
virtualinvoke r1.<javax.crypto.KeyGenerator: void init(int)>(i0);
r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();
$r12 = (java.security.Key) r2;
$r3 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>();
$i1 = lengthof $r3;
i2 = $i1 * 8;
if i2 == i0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
