digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$1;
specialinvoke $r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$1: void <init>()>();
$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r0, $r1);
$r2 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$2;
specialinvoke $r2.<javaT.util.ResourceBundle.Control.ControlFactoryTest$2: void <init>()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r2, null);
$i0 = <javaT.util.ResourceBundle.Control.ControlFactoryTest: int errors>;
if $i0 <= 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAILED: \");
$i1 = <javaT.util.ResourceBundle.Control.ControlFactoryTest: int errors>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" error(s)\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r3;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$1;
specialinvoke $r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$1: void <init>()>();
$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r0, $r1);
$r2 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$2;
specialinvoke $r2.<javaT.util.ResourceBundle.Control.ControlFactoryTest$2: void <init>()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r2, null);
$i0 = <javaT.util.ResourceBundle.Control.ControlFactoryTest: int errors>;
if $i0 <= 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAILED: \");
$i1 = <javaT.util.ResourceBundle.Control.ControlFactoryTest: int errors>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" error(s)\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r3;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$1;
specialinvoke $r0.<javaT.util.ResourceBundle.Control.ControlFactoryTest$1: void <init>()>();
$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r0, $r1);
$r2 = new javaT.util.ResourceBundle.Control.ControlFactoryTest$2;
specialinvoke $r2.<javaT.util.ResourceBundle.Control.ControlFactoryTest$2: void <init>()>();
staticinvoke <javaT.util.ResourceBundle.Control.ControlFactoryTest: void testControlFactory(javaT.util.ResourceBundle.Control.ControlFactoryTest$Factory,java.util.Locale)>($r2, null);
$i0 = <javaT.util.ResourceBundle.Control.ControlFactoryTest: int errors>;
if $i0 <= 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
