digraph "unitGraph" {
    "r0 := @parameter0: java.nio.DoubleBuffer"
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()"
    "i2 = 0"
    "if i2 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)"
    "$l1 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i2)"
    "$d0 = (double) $l1"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(int,double)>(i2, $d0)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer position(int)>(0)"
    "return"
    "r0 := @parameter0: java.nio.DoubleBuffer"->"i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int capacity()>()"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer clear()>()"->"i2 = 0";
    "i2 = 0"->"if i2 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)";
    "if i2 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)"->"$l1 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i2)";
    "if i2 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)";
    "$l1 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i2)"->"$d0 = (double) $l1";
    "$d0 = (double) $l1"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(int,double)>(i2, $d0)";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(int,double)>(i2, $d0)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer limit(int)>(i0)"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer position(int)>(0)";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer position(int)>(0)"->"return";
}
