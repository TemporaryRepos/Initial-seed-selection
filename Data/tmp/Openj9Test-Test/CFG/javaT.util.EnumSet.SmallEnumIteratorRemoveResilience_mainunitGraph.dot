digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class \"LjavaT/util/EnumSet/SmallEnumIteratorRemoveResilience$SmallEnum;\")"
    "$r1 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e0>"
    "interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r1)"
    "$r2 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e1>"
    "interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2)"
    "r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"
    "i0 = interfaceinvoke r0.<java.util.Set: int size()>()"
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "r7 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r4"
    "interfaceinvoke r3.<java.util.Iterator: void remove()>()"
    "staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i0, r7)"
    "i1 = interfaceinvoke r0.<java.util.Set: int size()>()"
    "$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "r8 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r5"
    "interfaceinvoke r0.<java.util.Set: boolean remove(java.lang.Object)>(r8)"
    "staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i1, r8)"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class \"LjavaT/util/EnumSet/SmallEnumIteratorRemoveResilience$SmallEnum;\")";
    "r0 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class \"LjavaT/util/EnumSet/SmallEnumIteratorRemoveResilience$SmallEnum;\")"->"$r1 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e0>";
    "$r1 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e0>"->"interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r1)";
    "interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r1)"->"$r2 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e1>";
    "$r2 = <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum: javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum e1>"->"interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2)";
    "interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2)"->"r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()";
    "r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"i0 = interfaceinvoke r0.<java.util.Set: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.Set: int size()>()"->"$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"r7 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r4";
    "r7 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r4"->"interfaceinvoke r3.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r3.<java.util.Iterator: void remove()>()"->"staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i0, r7)";
    "staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i0, r7)"->"i1 = interfaceinvoke r0.<java.util.Set: int size()>()";
    "i1 = interfaceinvoke r0.<java.util.Set: int size()>()"->"$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"r8 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r5";
    "r8 = (javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum) $r5"->"interfaceinvoke r0.<java.util.Set: boolean remove(java.lang.Object)>(r8)";
    "interfaceinvoke r0.<java.util.Set: boolean remove(java.lang.Object)>(r8)"->"staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i1, r8)";
    "staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i1, r8)"->"interfaceinvoke r3.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r3.<java.util.Iterator: void remove()>()"->"staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i1, r8)";
    "staticinvoke <javaT.util.EnumSet.SmallEnumIteratorRemoveResilience: void checkSetAfterRemoval(java.util.Set,int,javaT.util.EnumSet.SmallEnumIteratorRemoveResilience$SmallEnum)>(r0, i1, r8)"->"return";
}
