digraph "unitGraph" {
    "r2 := @this: javaT.util.Formattable.StockName"
    "r3 := @parameter0: java.util.Formatter"
    "i0 := @parameter1: int"
    "i4 := @parameter2: int"
    "i2 := @parameter3: int"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "r16 = r2.<javaT.util.Formattable.StockName: java.lang.String companyName>"
    "$r4 = virtualinvoke r3.<java.util.Formatter: java.util.Locale locale()>()"
    "$r5 = <java.util.Locale: java.util.Locale FRANCE>"
    "$z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r5)"
    "if $z0 == 0 goto $i1 = i0 & 4"
    "r16 = r2.<javaT.util.Formattable.StockName: java.lang.String frenchCompanyName>"
    "$i1 = i0 & 4"
    "if $i1 != 4 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= z1 = $z3]"
    "$z3 = 0"
    "z1 = $z3"
    "if z1 != 0 goto $z4 = 1"
    "if i2 == -1 goto $z4 = 0"
    "if i2 >= 10 goto $z4 = 0"
    "$z4 = 1"
    "goto [?= z2 = $z4]"
    "$z4 = 0"
    "z2 = $z4"
    "if z2 == 0 goto $r17 = r16"
    "$r17 = r2.<javaT.util.Formattable.StockName: java.lang.String symbol>"
    "goto [?= r6 = $r17]"
    "$r17 = r16"
    "r6 = $r17"
    "if i2 == -1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$i7 = virtualinvoke r6.<java.lang.String: int length()>()"
    "if $i7 >= i2 goto $i8 = i2 - 1"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "goto [?= i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()]"
    "$i8 = i2 - 1"
    "$r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i8)"
    "$r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"
    "virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42)"
    "i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"
    "if i3 >= i4 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i9 = 0"
    "$i5 = i4 - i3"
    "if i9 >= $i5 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$i6 = i0 & 1"
    "if $i6 != 1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"
    "goto [?= i9 = i9 + 1]"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)"
    "i9 = i9 + 1"
    "goto [?= $i5 = i4 - i3]"
    "$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r9 = newarray (java.lang.Object)[0]"
    "virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r8, $r9)"
    "return"
    "r2 := @this: javaT.util.Formattable.StockName"->"r3 := @parameter0: java.util.Formatter";
    "r3 := @parameter0: java.util.Formatter"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i4 := @parameter2: int";
    "i4 := @parameter2: int"->"i2 := @parameter3: int";
    "i2 := @parameter3: int"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r16 = r2.<javaT.util.Formattable.StockName: java.lang.String companyName>";
    "r16 = r2.<javaT.util.Formattable.StockName: java.lang.String companyName>"->"$r4 = virtualinvoke r3.<java.util.Formatter: java.util.Locale locale()>()";
    "$r4 = virtualinvoke r3.<java.util.Formatter: java.util.Locale locale()>()"->"$r5 = <java.util.Locale: java.util.Locale FRANCE>";
    "$r5 = <java.util.Locale: java.util.Locale FRANCE>"->"$z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r5)";
    "$z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r5)"->"if $z0 == 0 goto $i1 = i0 & 4";
    "if $z0 == 0 goto $i1 = i0 & 4"->"r16 = r2.<javaT.util.Formattable.StockName: java.lang.String frenchCompanyName>";
    "if $z0 == 0 goto $i1 = i0 & 4"->"$i1 = i0 & 4";
    "r16 = r2.<javaT.util.Formattable.StockName: java.lang.String frenchCompanyName>"->"$i1 = i0 & 4";
    "$i1 = i0 & 4"->"if $i1 != 4 goto $z3 = 0";
    "if $i1 != 4 goto $z3 = 0"->"$z3 = 1";
    "if $i1 != 4 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= z1 = $z3]";
    "goto [?= z1 = $z3]"->"z1 = $z3";
    "$z3 = 0"->"z1 = $z3";
    "z1 = $z3"->"if z1 != 0 goto $z4 = 1";
    "if z1 != 0 goto $z4 = 1"->"if i2 == -1 goto $z4 = 0";
    "if z1 != 0 goto $z4 = 1"->"$z4 = 1";
    "if i2 == -1 goto $z4 = 0"->"if i2 >= 10 goto $z4 = 0";
    "if i2 == -1 goto $z4 = 0"->"$z4 = 0";
    "if i2 >= 10 goto $z4 = 0"->"$z4 = 1";
    "if i2 >= 10 goto $z4 = 0"->"$z4 = 0";
    "$z4 = 1"->"goto [?= z2 = $z4]";
    "goto [?= z2 = $z4]"->"z2 = $z4";
    "$z4 = 0"->"z2 = $z4";
    "z2 = $z4"->"if z2 == 0 goto $r17 = r16";
    "if z2 == 0 goto $r17 = r16"->"$r17 = r2.<javaT.util.Formattable.StockName: java.lang.String symbol>";
    "if z2 == 0 goto $r17 = r16"->"$r17 = r16";
    "$r17 = r2.<javaT.util.Formattable.StockName: java.lang.String symbol>"->"goto [?= r6 = $r17]";
    "goto [?= r6 = $r17]"->"r6 = $r17";
    "$r17 = r16"->"r6 = $r17";
    "r6 = $r17"->"if i2 == -1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "if i2 == -1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$i7 = virtualinvoke r6.<java.lang.String: int length()>()";
    "if i2 == -1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$i7 = virtualinvoke r6.<java.lang.String: int length()>()"->"if $i7 >= i2 goto $i8 = i2 - 1";
    "if $i7 >= i2 goto $i8 = i2 - 1"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "if $i7 >= i2 goto $i8 = i2 - 1"->"$i8 = i2 - 1";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"goto [?= i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()]";
    "goto [?= i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()]"->"i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()";
    "$i8 = i2 - 1"->"$r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i8)";
    "$r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i8)"->"$r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)";
    "$r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)"->"virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42)";
    "virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42)"->"i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()";
    "i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"->"if i3 >= i4 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if i3 >= i4 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"i9 = 0";
    "if i3 >= i4 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "i9 = 0"->"$i5 = i4 - i3";
    "$i5 = i4 - i3"->"if i9 >= $i5 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if i9 >= $i5 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$i6 = i0 & 1";
    "if i9 >= $i5 goto $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$i6 = i0 & 1"->"if $i6 != 1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)";
    "if $i6 != 1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)";
    "if $i6 != 1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"->"goto [?= i9 = i9 + 1]";
    "goto [?= i9 = i9 + 1]"->"i9 = i9 + 1";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 32)"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i5 = i4 - i3]";
    "goto [?= $i5 = i4 - i3]"->"$i5 = i4 - i3";
    "$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r9 = newarray (java.lang.Object)[0]";
    "$r9 = newarray (java.lang.Object)[0]"->"virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r8, $r9)";
    "virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r8, $r9)"->"return";
}
