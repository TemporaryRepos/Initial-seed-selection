digraph "unitGraph" {
    "$r0 = new java.lang.StringBuffer"
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"
    "r1 = $r0"
    "i0 = 0"
    "if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"
    "i1 = 65537"
    "$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1)"
    "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>()"
    "<javaT.nio.charset.coders.Surrogates: char[] input> = $r3"
    "$r4 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()"
    "r11 = $r4"
    "$r5 = new java.io.OutputStreamWriter"
    "$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\")"
    "specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r11, $r6)"
    "r12 = $r5"
    "$r7 = <javaT.nio.charset.coders.Surrogates: char[] input>"
    "virtualinvoke r12.<java.io.OutputStreamWriter: void write(char[])>($r7)"
    "virtualinvoke r12.<java.io.OutputStreamWriter: void close()>()"
    "$r8 = virtualinvoke r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "<javaT.nio.charset.coders.Surrogates: byte[] output> = $r8"
    "return"
    "$r0 = new java.lang.StringBuffer"->"specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i0 = 0";
    "i0 = 0"->"if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"i1 = 65537";
    "if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "i1 = 65537"->"$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1)";
    "$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1)"->"virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9)";
    "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>()";
    "$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>()"->"<javaT.nio.charset.coders.Surrogates: char[] input> = $r3";
    "<javaT.nio.charset.coders.Surrogates: char[] input> = $r3"->"$r4 = new java.io.ByteArrayOutputStream";
    "$r4 = new java.io.ByteArrayOutputStream"->"specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()";
    "specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()"->"r11 = $r4";
    "r11 = $r4"->"$r5 = new java.io.OutputStreamWriter";
    "$r5 = new java.io.OutputStreamWriter"->"$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\")";
    "$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\")"->"specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r11, $r6)";
    "specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r11, $r6)"->"r12 = $r5";
    "r12 = $r5"->"$r7 = <javaT.nio.charset.coders.Surrogates: char[] input>";
    "$r7 = <javaT.nio.charset.coders.Surrogates: char[] input>"->"virtualinvoke r12.<java.io.OutputStreamWriter: void write(char[])>($r7)";
    "virtualinvoke r12.<java.io.OutputStreamWriter: void write(char[])>($r7)"->"virtualinvoke r12.<java.io.OutputStreamWriter: void close()>()";
    "virtualinvoke r12.<java.io.OutputStreamWriter: void close()>()"->"$r8 = virtualinvoke r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "$r8 = virtualinvoke r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"<javaT.nio.charset.coders.Surrogates: byte[] output> = $r8";
    "<javaT.nio.charset.coders.Surrogates: byte[] output> = $r8"->"return";
}
