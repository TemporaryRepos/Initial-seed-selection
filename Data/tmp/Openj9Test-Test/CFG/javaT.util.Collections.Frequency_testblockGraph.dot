digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.List;
i1 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i2 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i2 >= i1 goto i1 = i1 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
i3 = 0;
"
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i3 >= 100 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1);
if $i0 == i3 goto i3 = i3 + 1;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r2;
"
    "Block 10:
[preds: 8 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.List;
i1 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i2 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
"->"Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
i3 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i2 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i2 >= i1 goto i1 = i1 + 1;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i2 >= i1 goto i1 = i1 + 1;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i2 >= i1 goto i1 = i1 + 1;
"->"Block 5:
[preds: 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i2 >= i1 goto i1 = i1 + 1;
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0);
i3 = 0;
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i3 >= 100 goto return;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i3 >= 100 goto return;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1);
if $i0 == i3 goto i3 = i3 + 1;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i3 >= 100 goto return;
"->"Block 11:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1);
if $i0 == i3 goto i3 = i3 + 1;
"->"Block 9:
[preds: 8 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r2;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1);
if $i0 == i3 goto i3 = i3 + 1;
"->"Block 10:
[preds: 8 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i3 >= 100 goto return;
";
}
