digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.text.AttributedCharacterIterator;
r2 := @parameter1: java.util.Set;
r1 := @parameter2: int[];
i6 = 0;
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char first()>();
i8 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r1;
if i8 >= $i0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
if $i1 != i6 goto $r3 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$i5 = r1[i8];
if $i4 == $i5 goto i6 = r1[i8];
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run boundaries are not as expected: \");
$i2 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$i3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for keys \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r10);
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i6 = r1[i8];
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i6);
i8 = i8 + 1;
goto [?= $i0 = lengthof r1];
"
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if c7 == 65535 goto return;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, \"iterator\'s run sequence doesn\'t end with DONE\");
"
    "Block 8:
[preds: 6 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.text.AttributedCharacterIterator;
r2 := @parameter1: java.util.Set;
r1 := @parameter2: int[];
i6 = 0;
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char first()>();
i8 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r1;
if i8 >= $i0 goto (branch);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r1;
if i8 >= $i0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
if $i1 != i6 goto $r3 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r1;
if i8 >= $i0 goto (branch);
"->"Block 6:
[preds: 1 ] [succs: 7 8 ]
if c7 == 65535 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
if $i1 != i6 goto $r3 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$i5 = r1[i8];
if $i4 == $i5 goto i6 = r1[i8];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
if $i1 != i6 goto $r3 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run boundaries are not as expected: \");
$i2 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$i3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for keys \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r10);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$i5 = r1[i8];
if $i4 == $i5 goto i6 = r1[i8];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run boundaries are not as expected: \");
$i2 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$i3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for keys \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r10);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$i5 = r1[i8];
if $i4 == $i5 goto i6 = r1[i8];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i6 = r1[i8];
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i6);
i8 = i8 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run boundaries are not as expected: \");
$i2 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$i3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for keys \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r10);
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i6 = r1[i8];
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i6);
i8 = i8 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i6 = r1[i8];
c7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i6);
i8 = i8 + 1;
goto [?= $i0 = lengthof r1];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r1;
if i8 >= $i0 goto (branch);
";
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if c7 == 65535 goto return;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, \"iterator\'s run sequence doesn\'t end with DONE\");
";
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if c7 == 65535 goto return;
"->"Block 8:
[preds: 6 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, \"iterator\'s run sequence doesn\'t end with DONE\");
"->"Block 8:
[preds: 6 7 ] [succs: ]
return;
";
}
