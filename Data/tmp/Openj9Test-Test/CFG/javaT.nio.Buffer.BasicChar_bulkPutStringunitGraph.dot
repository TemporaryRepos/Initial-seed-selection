digraph "unitGraph" {
    "r0 := @parameter0: java.nio.CharBuffer"
    "i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()"
    "$r2 = new java.lang.StringBuffer"
    "$i1 = i0 + 7"
    "specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i1)"
    "r3 = $r2"
    "virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"1234567\")"
    "i6 = 0"
    "if i6 >= i0 goto $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i6)"
    "$i4 = (int) $l3"
    "$c5 = (char) $i4"
    "virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5)"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "$r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$i2 = 7 + i0"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>($r5, 7, $i2)"
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()"
    "return"
    "r0 := @parameter0: java.nio.CharBuffer"->"i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.CharBuffer: int capacity()>()"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer clear()>()"->"$r2 = new java.lang.StringBuffer";
    "$r2 = new java.lang.StringBuffer"->"$i1 = i0 + 7";
    "$i1 = i0 + 7"->"specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i1)";
    "specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i1)"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"1234567\")";
    "virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"1234567\")"->"i6 = 0";
    "i6 = 0"->"if i6 >= i0 goto $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()";
    "if i6 >= i0 goto $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()"->"$l3 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i6)";
    "if i6 >= i0 goto $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicChar: long ic(int)>(i6)"->"$i4 = (int) $l3";
    "$i4 = (int) $l3"->"$c5 = (char) $i4";
    "$c5 = (char) $i4"->"virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5)";
    "virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i0 goto $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()"->"$i2 = 7 + i0";
    "$i2 = 7 + i0"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>($r5, 7, $i2)";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>($r5, 7, $i2)"->"virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r0.<java.nio.CharBuffer: java.nio.Buffer flip()>()"->"return";
}
