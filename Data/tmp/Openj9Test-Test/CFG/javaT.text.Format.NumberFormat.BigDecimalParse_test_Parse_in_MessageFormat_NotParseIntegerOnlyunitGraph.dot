digraph "unitGraph" {
    "r1 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"
    "i10 = 0"
    "$r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>"
    "$i0 = lengthof $r0"
    "if i10 >= $i0 goto return"
    "$r2 = new java.text.ParsePosition"
    "specialinvoke $r2.<java.text.ParsePosition: void <init>(int)>(0)"
    "r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp> = $r2"
    "r62 = null"
    "$r3 = new java.text.MessageFormat"
    "$r4 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>"
    "$r5 = $r4[i10]"
    "specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>($r5)"
    "r63 = $r3"
    "r6 = virtualinvoke r63.<java.text.MessageFormat: java.text.Format[] getFormats()>()"
    "i11 = 0"
    "$i1 = lengthof r6"
    "if i11 >= $i1 goto $r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r54 = r6[i11]"
    "$r55 = (java.text.DecimalFormat) $r54"
    "virtualinvoke $r55.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)"
    "i11 = i11 + 1"
    "goto [?= $i1 = lengthof r6]"
    "$r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r9 = $r7[i10]"
    "$r8 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "r62 = virtualinvoke r63.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>($r9, $r8)"
    "$r10 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "$i2 = virtualinvoke $r10.<java.text.ParsePosition: int getErrorIndex()>()"
    "if $i2 == -1 goto $r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "$r43 = new java.lang.StringBuilder"
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"
    "$i8 = i10 + 1"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getErrorIndex() returns wrong value. expected:-1, got:\")"
    "$r47 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "$i9 = virtualinvoke $r47.<java.text.ParsePosition: int getErrorIndex()>()"
    "$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"
    "$r50 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r51 = $r50[i10]"
    "$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)"
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r53)"
    "$r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "$i3 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>()"
    "$r12 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"
    "$i4 = $r12[i10]"
    "if $i3 == $i4 goto (branch)"
    "$r29 = new java.lang.StringBuilder"
    "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"
    "$i5 = i10 + 1"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getIndex() returns wrong value. expected:\")"
    "$r33 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"
    "$i6 = $r33[i10]"
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got:\")"
    "$r36 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"
    "$i7 = virtualinvoke $r36.<java.text.ParsePosition: int getIndex()>()"
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"
    "$r39 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r40 = $r39[i10]"
    "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r42)"
    "goto [?= $r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>]"
    "$r56 := @caughtexception"
    "r64 = $r56"
    "$r57 = new java.lang.StringBuilder"
    "specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()"
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected exception: \")"
    "$r59 = virtualinvoke r64.<java.lang.Exception: java.lang.String getMessage()>()"
    "$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)"
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r61)"
    "$r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r17 = $r13[i10]"
    "$r14 = new java.math.BigDecimal"
    "$r15 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>"
    "$r16 = $r15[i10]"
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>($r16)"
    "$r18 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r14)"
    "$r19 = r62[0]"
    "$r20 = (java.lang.Number) $r19"
    "$r21 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r20)"
    "specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkType(java.lang.String,java.lang.String,java.lang.String)>($r17, $r18, $r21)"
    "$r22 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"
    "$r26 = $r22[i10]"
    "$r23 = new java.math.BigDecimal"
    "$r24 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>"
    "$r25 = $r24[i10]"
    "specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>($r25)"
    "$r27 = r62[0]"
    "$r28 = (java.lang.Number) $r27"
    "specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkParse(java.lang.String,java.lang.Number,java.lang.Number)>($r26, $r23, $r28)"
    "i10 = i10 + 1"
    "goto [?= $r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>]"
    "return"
    "r1 := @this: javaT.text.Format.NumberFormat.BigDecimalParse"->"i10 = 0";
    "i10 = 0"->"$r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>";
    "$r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i10 >= $i0 goto return";
    "if i10 >= $i0 goto return"->"$r2 = new java.text.ParsePosition";
    "if i10 >= $i0 goto return"->"return";
    "$r2 = new java.text.ParsePosition"->"specialinvoke $r2.<java.text.ParsePosition: void <init>(int)>(0)";
    "specialinvoke $r2.<java.text.ParsePosition: void <init>(int)>(0)"->"r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp> = $r2";
    "r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp> = $r2"->"r62 = null";
    "r62 = null"->"$r3 = new java.text.MessageFormat";
    "r62 = null"->"$r56 := @caughtexception";
    "$r3 = new java.text.MessageFormat"->"$r4 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>";
    "$r3 = new java.text.MessageFormat"->"$r56 := @caughtexception";
    "$r4 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>"->"$r5 = $r4[i10]";
    "$r4 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>"->"$r56 := @caughtexception";
    "$r5 = $r4[i10]"->"specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>($r5)";
    "$r5 = $r4[i10]"->"$r56 := @caughtexception";
    "specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>($r5)"->"r63 = $r3";
    "specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>($r5)"->"$r56 := @caughtexception";
    "r63 = $r3"->"r6 = virtualinvoke r63.<java.text.MessageFormat: java.text.Format[] getFormats()>()";
    "r63 = $r3"->"$r56 := @caughtexception";
    "r6 = virtualinvoke r63.<java.text.MessageFormat: java.text.Format[] getFormats()>()"->"i11 = 0";
    "r6 = virtualinvoke r63.<java.text.MessageFormat: java.text.Format[] getFormats()>()"->"$r56 := @caughtexception";
    "i11 = 0"->"$i1 = lengthof r6";
    "i11 = 0"->"$r56 := @caughtexception";
    "$i1 = lengthof r6"->"if i11 >= $i1 goto $r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$i1 = lengthof r6"->"$r56 := @caughtexception";
    "if i11 >= $i1 goto $r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r54 = r6[i11]";
    "if i11 >= $i1 goto $r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "if i11 >= $i1 goto $r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r56 := @caughtexception";
    "$r54 = r6[i11]"->"$r55 = (java.text.DecimalFormat) $r54";
    "$r54 = r6[i11]"->"$r56 := @caughtexception";
    "$r55 = (java.text.DecimalFormat) $r54"->"virtualinvoke $r55.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)";
    "$r55 = (java.text.DecimalFormat) $r54"->"$r56 := @caughtexception";
    "virtualinvoke $r55.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)"->"i11 = i11 + 1";
    "virtualinvoke $r55.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)"->"$r56 := @caughtexception";
    "i11 = i11 + 1"->"goto [?= $i1 = lengthof r6]";
    "i11 = i11 + 1"->"$r56 := @caughtexception";
    "goto [?= $i1 = lengthof r6]"->"$i1 = lengthof r6";
    "goto [?= $i1 = lengthof r6]"->"$r56 := @caughtexception";
    "$r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r9 = $r7[i10]";
    "$r7 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r56 := @caughtexception";
    "$r9 = $r7[i10]"->"$r8 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "$r9 = $r7[i10]"->"$r56 := @caughtexception";
    "$r8 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"r62 = virtualinvoke r63.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>($r9, $r8)";
    "$r8 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "r62 = virtualinvoke r63.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>($r9, $r8)"->"$r10 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "r62 = virtualinvoke r63.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>($r9, $r8)"->"$r56 := @caughtexception";
    "$r10 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$i2 = virtualinvoke $r10.<java.text.ParsePosition: int getErrorIndex()>()";
    "$r10 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "$i2 = virtualinvoke $r10.<java.text.ParsePosition: int getErrorIndex()>()"->"if $i2 == -1 goto $r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "$i2 = virtualinvoke $r10.<java.text.ParsePosition: int getErrorIndex()>()"->"$r56 := @caughtexception";
    "if $i2 == -1 goto $r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r43 = new java.lang.StringBuilder";
    "if $i2 == -1 goto $r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "if $i2 == -1 goto $r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "$r43 = new java.lang.StringBuilder"->"specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()";
    "$r43 = new java.lang.StringBuilder"->"$r56 := @caughtexception";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r56 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"->"$i8 = i10 + 1";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"->"$r56 := @caughtexception";
    "$i8 = i10 + 1"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)";
    "$i8 = i10 + 1"->"$r56 := @caughtexception";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getErrorIndex() returns wrong value. expected:-1, got:\")";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"->"$r56 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getErrorIndex() returns wrong value. expected:-1, got:\")"->"$r47 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getErrorIndex() returns wrong value. expected:-1, got:\")"->"$r56 := @caughtexception";
    "$r47 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$i9 = virtualinvoke $r47.<java.text.ParsePosition: int getErrorIndex()>()";
    "$r47 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "$i9 = virtualinvoke $r47.<java.text.ParsePosition: int getErrorIndex()>()"->"$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)";
    "$i9 = virtualinvoke $r47.<java.text.ParsePosition: int getErrorIndex()>()"->"$r56 := @caughtexception";
    "$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"->"$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")";
    "$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"->"$r56 := @caughtexception";
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"->"$r50 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"->"$r56 := @caughtexception";
    "$r50 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r51 = $r50[i10]";
    "$r50 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r56 := @caughtexception";
    "$r51 = $r50[i10]"->"$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)";
    "$r51 = $r50[i10]"->"$r56 := @caughtexception";
    "$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)"->"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)"->"$r56 := @caughtexception";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r53)";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r56 := @caughtexception";
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r53)"->"$r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r53)"->"$r56 := @caughtexception";
    "$r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$i3 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>()";
    "$r11 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "$i3 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>()"->"$r12 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>";
    "$i3 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>()"->"$r56 := @caughtexception";
    "$r12 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"->"$i4 = $r12[i10]";
    "$r12 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"->"$r56 := @caughtexception";
    "$i4 = $r12[i10]"->"if $i3 == $i4 goto (branch)";
    "$i4 = $r12[i10]"->"$r56 := @caughtexception";
    "if $i3 == $i4 goto (branch)"->"$r29 = new java.lang.StringBuilder";
    "if $i3 == $i4 goto (branch)"->"goto [?= $r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>]";
    "if $i3 == $i4 goto (branch)"->"$r56 := @caughtexception";
    "$r29 = new java.lang.StringBuilder"->"specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()";
    "$r29 = new java.lang.StringBuilder"->"$r56 := @caughtexception";
    "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")";
    "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()"->"$r56 := @caughtexception";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"->"$i5 = i10 + 1";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Case\")"->"$r56 := @caughtexception";
    "$i5 = i10 + 1"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$i5 = i10 + 1"->"$r56 := @caughtexception";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getIndex() returns wrong value. expected:\")";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r56 := @caughtexception";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getIndex() returns wrong value. expected:\")"->"$r33 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": getIndex() returns wrong value. expected:\")"->"$r56 := @caughtexception";
    "$r33 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"->"$i6 = $r33[i10]";
    "$r33 = <javaT.text.Format.NumberFormat.BigDecimalParse: int[] parsePosition1>"->"$r56 := @caughtexception";
    "$i6 = $r33[i10]"->"$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$i6 = $r33[i10]"->"$r56 := @caughtexception";
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got:\")";
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r56 := @caughtexception";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got:\")"->"$r36 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got:\")"->"$r56 := @caughtexception";
    "$r36 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$i7 = virtualinvoke $r36.<java.text.ParsePosition: int getIndex()>()";
    "$r36 = r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.text.ParsePosition pp>"->"$r56 := @caughtexception";
    "$i7 = virtualinvoke $r36.<java.text.ParsePosition: int getIndex()>()"->"$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)";
    "$i7 = virtualinvoke $r36.<java.text.ParsePosition: int getIndex()>()"->"$r56 := @caughtexception";
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")";
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)"->"$r56 := @caughtexception";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"->"$r39 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \")"->"$r56 := @caughtexception";
    "$r39 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r40 = $r39[i10]";
    "$r39 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r56 := @caughtexception";
    "$r40 = $r39[i10]"->"$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)";
    "$r40 = $r39[i10]"->"$r56 := @caughtexception";
    "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"->"$r56 := @caughtexception";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r42)";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r56 := @caughtexception";
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r42)"->"goto [?= $r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>]";
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r42)"->"$r56 := @caughtexception";
    "goto [?= $r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>]"->"$r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$r56 := @caughtexception"->"r64 = $r56";
    "r64 = $r56"->"$r57 = new java.lang.StringBuilder";
    "$r57 = new java.lang.StringBuilder"->"specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()"->"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected exception: \")";
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected exception: \")"->"$r59 = virtualinvoke r64.<java.lang.Exception: java.lang.String getMessage()>()";
    "$r59 = virtualinvoke r64.<java.lang.Exception: java.lang.String getMessage()>()"->"$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)";
    "$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)"->"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r61)";
    "virtualinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void errln(java.lang.String)>($r61)"->"$r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$r13 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r17 = $r13[i10]";
    "$r17 = $r13[i10]"->"$r14 = new java.math.BigDecimal";
    "$r14 = new java.math.BigDecimal"->"$r15 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>";
    "$r15 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>"->"$r16 = $r15[i10]";
    "$r16 = $r15[i10]"->"specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>($r16)";
    "specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>($r16)"->"$r18 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r14)";
    "$r18 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r14)"->"$r19 = r62[0]";
    "$r19 = r62[0]"->"$r20 = (java.lang.Number) $r19";
    "$r20 = (java.lang.Number) $r19"->"$r21 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r20)";
    "$r21 = specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String getType(java.lang.Number)>($r20)"->"specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkType(java.lang.String,java.lang.String,java.lang.String)>($r17, $r18, $r21)";
    "specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkType(java.lang.String,java.lang.String,java.lang.String)>($r17, $r18, $r21)"->"$r22 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>";
    "$r22 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] 'from'>"->"$r26 = $r22[i10]";
    "$r26 = $r22[i10]"->"$r23 = new java.math.BigDecimal";
    "$r23 = new java.math.BigDecimal"->"$r24 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>";
    "$r24 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] expected1>"->"$r25 = $r24[i10]";
    "$r25 = $r24[i10]"->"specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>($r25)";
    "specialinvoke $r23.<java.math.BigDecimal: void <init>(java.lang.String)>($r25)"->"$r27 = r62[0]";
    "$r27 = r62[0]"->"$r28 = (java.lang.Number) $r27";
    "$r28 = (java.lang.Number) $r27"->"specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkParse(java.lang.String,java.lang.Number,java.lang.Number)>($r26, $r23, $r28)";
    "specialinvoke r1.<javaT.text.Format.NumberFormat.BigDecimalParse: void checkParse(java.lang.String,java.lang.Number,java.lang.Number)>($r26, $r23, $r28)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= $r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>]";
    "goto [?= $r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>]"->"$r0 = <javaT.text.Format.NumberFormat.BigDecimalParse: java.lang.String[] patterns>";
}
