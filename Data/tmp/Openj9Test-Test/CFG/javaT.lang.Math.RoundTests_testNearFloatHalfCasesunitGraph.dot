digraph "unitGraph" {
    "i3 = 0"
    "$r0 = newarray (float[])[6]"
    "$r1 = newarray (float)[2]"
    "$r1[0] = 0.49999997F"
    "$r1[1] = 0.0F"
    "$r0[0] = $r1"
    "$r2 = newarray (float)[2]"
    "$r2[0] = 0.5F"
    "$r2[1] = 1.0F"
    "$r0[1] = $r2"
    "$r3 = newarray (float)[2]"
    "$r3[0] = 0.50000006F"
    "$r3[1] = 1.0F"
    "$r0[2] = $r3"
    "$r4 = newarray (float)[2]"
    "$r4[0] = -0.49999997F"
    "$r4[1] = 0.0F"
    "$r0[3] = $r4"
    "$r5 = newarray (float)[2]"
    "$r5[0] = -0.5F"
    "$r5[1] = 0.0F"
    "$r0[4] = $r5"
    "$r6 = newarray (float)[2]"
    "$r6[0] = -0.50000006F"
    "$r6[1] = -1.0F"
    "$r0[5] = $r6"
    "r7 = $r0"
    "r8 = r7"
    "i0 = lengthof r8"
    "i4 = 0"
    "if i4 >= i0 goto return i3"
    "r9 = r8[i4]"
    "$f2 = r9[0]"
    "$f0 = r9[1]"
    "$i1 = (int) $f0"
    "$f1 = (float) $i1"
    "$i2 = staticinvoke <javaT.lang.Math.RoundTests: int testNearHalfCases(float,float)>($f2, $f1)"
    "i3 = i3 + $i2"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return i3"
    "i3 = 0"->"$r0 = newarray (float[])[6]";
    "$r0 = newarray (float[])[6]"->"$r1 = newarray (float)[2]";
    "$r1 = newarray (float)[2]"->"$r1[0] = 0.49999997F";
    "$r1[0] = 0.49999997F"->"$r1[1] = 0.0F";
    "$r1[1] = 0.0F"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = newarray (float)[2]";
    "$r2 = newarray (float)[2]"->"$r2[0] = 0.5F";
    "$r2[0] = 0.5F"->"$r2[1] = 1.0F";
    "$r2[1] = 1.0F"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = newarray (float)[2]";
    "$r3 = newarray (float)[2]"->"$r3[0] = 0.50000006F";
    "$r3[0] = 0.50000006F"->"$r3[1] = 1.0F";
    "$r3[1] = 1.0F"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = newarray (float)[2]";
    "$r4 = newarray (float)[2]"->"$r4[0] = -0.49999997F";
    "$r4[0] = -0.49999997F"->"$r4[1] = 0.0F";
    "$r4[1] = 0.0F"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"$r5 = newarray (float)[2]";
    "$r5 = newarray (float)[2]"->"$r5[0] = -0.5F";
    "$r5[0] = -0.5F"->"$r5[1] = 0.0F";
    "$r5[1] = 0.0F"->"$r0[4] = $r5";
    "$r0[4] = $r5"->"$r6 = newarray (float)[2]";
    "$r6 = newarray (float)[2]"->"$r6[0] = -0.50000006F";
    "$r6[0] = -0.50000006F"->"$r6[1] = -1.0F";
    "$r6[1] = -1.0F"->"$r0[5] = $r6";
    "$r0[5] = $r6"->"r7 = $r0";
    "r7 = $r0"->"r8 = r7";
    "r8 = r7"->"i0 = lengthof r8";
    "i0 = lengthof r8"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto return i3";
    "if i4 >= i0 goto return i3"->"r9 = r8[i4]";
    "if i4 >= i0 goto return i3"->"return i3";
    "r9 = r8[i4]"->"$f2 = r9[0]";
    "$f2 = r9[0]"->"$f0 = r9[1]";
    "$f0 = r9[1]"->"$i1 = (int) $f0";
    "$i1 = (int) $f0"->"$f1 = (float) $i1";
    "$f1 = (float) $i1"->"$i2 = staticinvoke <javaT.lang.Math.RoundTests: int testNearHalfCases(float,float)>($f2, $f1)";
    "$i2 = staticinvoke <javaT.lang.Math.RoundTests: int testNearHalfCases(float,float)>($f2, $f1)"->"i3 = i3 + $i2";
    "i3 = i3 + $i2"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto return i3";
}
