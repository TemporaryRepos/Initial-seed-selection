digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\");
$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\");
$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\");
$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\");
r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z12 = r9 instanceof java.lang.reflect.TypeVariable;
if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.ft is a type variable\");
throw $r36;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r10 = (java.lang.reflect.TypeVariable) r9;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
$r30 = new java.lang.AssertionError;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type of ft is T1, not \");
$r33 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35);
throw $r30;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i1 = lengthof r11;
if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 8:
[preds: 7 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of ft should have one bound\");
throw $r28;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z10 = r12 instanceof java.lang.reflect.ParameterizedType;
if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.fc1t is a parameterized type\");
throw $r27;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r13 = (java.lang.reflect.ParameterizedType) r12;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"
    "Block 14:
[preds: 13 ] [succs: ]
$r26 = new java.lang.AssertionError;
specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is an instantiation of C0\");
throw $r26;
"
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"
    "Block 17:
[preds: 16 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is has null owner\");
throw $r24;
"
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r15 = r14[0];
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i0 = lengthof r14;
if $i0 == 1 goto r15 = r14[0];
"
    "Block 20:
[preds: 19 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of fc1t has one type argument\");
throw $r22;
"
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r15 = r14[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 23:
[preds: 22 ] [succs: ]
$r21 = new java.lang.AssertionError;
specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<String> is String\");
throw $r21;
"
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"
    "Block 26:
[preds: 25 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fc1 should be C0\");
throw $r20;
"
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto return;
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r18 = <java.lang.Integer: java.lang.Class TYPE>;
if r17 == $r18 goto return;
"
    "Block 29:
[preds: 28 ] [succs: ]
$r19 = new java.lang.AssertionError;
specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fi should be int\");
throw $r19;
"
    "Block 30:
[preds: 27 28 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\");
$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\");
$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\");
$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\");
r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$z12 = r9 instanceof java.lang.reflect.TypeVariable;
if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing fields\");
$r1 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"ft\");
$r3 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1t\");
$r5 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fc1\");
$r7 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(\"fi\");
r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r10 = (java.lang.reflect.TypeVariable) r9;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z12 = r9 instanceof java.lang.reflect.TypeVariable;
if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"->"Block 2:
[preds: 1 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.ft is a type variable\");
throw $r36;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z12 = r9 instanceof java.lang.reflect.TypeVariable;
if $z12 != 0 goto r10 = (java.lang.reflect.TypeVariable) r9;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r10 = (java.lang.reflect.TypeVariable) r9;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r10 = (java.lang.reflect.TypeVariable) r9;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r10 = (java.lang.reflect.TypeVariable) r9;
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 5:
[preds: 4 ] [succs: ]
$r30 = new java.lang.AssertionError;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type of ft is T1, not \");
$r33 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35);
throw $r30;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r29 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z11 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z11 != 0 goto r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i1 = lengthof r11;
if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i1 = lengthof r11;
if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 8:
[preds: 7 ] [succs: ]
$r28 = new java.lang.AssertionError;
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of ft should have one bound\");
throw $r28;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i1 = lengthof r11;
if $i1 == 1 goto r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$z10 = r12 instanceof java.lang.reflect.ParameterizedType;
if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r13 = (java.lang.reflect.ParameterizedType) r12;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z10 = r12 instanceof java.lang.reflect.ParameterizedType;
if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"->"Block 11:
[preds: 10 ] [succs: ]
$r27 = new java.lang.AssertionError;
specialinvoke $r27.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of C0.fc1t is a parameterized type\");
throw $r27;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$z10 = r12 instanceof java.lang.reflect.ParameterizedType;
if $z10 != 0 goto r13 = (java.lang.reflect.ParameterizedType) r12;
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r13 = (java.lang.reflect.ParameterizedType) r12;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r13 = (java.lang.reflect.ParameterizedType) r12;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r13 = (java.lang.reflect.ParameterizedType) r12;
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 14:
[preds: 13 ] [succs: ]
$r26 = new java.lang.AssertionError;
specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is an instantiation of C0\");
throw $r26;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r25 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
if $r25 == class \"LjavaT/lang/reflect/Generics/C0;\" goto $z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r15 = r14[0];
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 17:
[preds: 16 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Type of C2.fc1t is has null owner\");
throw $r24;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r23 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();
if $r23 == null goto r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r15 = r14[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r15 = r14[0];
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
$i0 = lengthof r14;
if $i0 == 1 goto r15 = r14[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r14 = interfaceinvoke r13.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r15 = r14[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r15 = r14[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i0 = lengthof r14;
if $i0 == 1 goto r15 = r14[0];
"->"Block 20:
[preds: 19 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The type of fc1t has one type argument\");
throw $r22;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i0 = lengthof r14;
if $i0 == 1 goto r15 = r14[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r15 = r14[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r15 = r14[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r15 = r14[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 23:
[preds: 22 ] [succs: ]
$r21 = new java.lang.AssertionError;
specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The actual type arg of C0<String> is String\");
throw $r21;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
if r15 == class \"Ljava/lang/String;\" goto r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto return;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 26:
[preds: 25 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fc1 should be C0\");
throw $r20;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if r16 == class \"LjavaT/lang/reflect/Generics/C0;\" goto r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto return;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto return;
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
$r18 = <java.lang.Integer: java.lang.Class TYPE>;
if r17 == $r18 goto return;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto return;
"->"Block 30:
[preds: 27 28 ] [succs: ]
return;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r18 = <java.lang.Integer: java.lang.Class TYPE>;
if r17 == $r18 goto return;
"->"Block 29:
[preds: 28 ] [succs: ]
$r19 = new java.lang.AssertionError;
specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(\" Type of C2.fi should be int\");
throw $r19;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$r18 = <java.lang.Integer: java.lang.Class TYPE>;
if r17 == $r18 goto return;
"->"Block 30:
[preds: 27 28 ] [succs: ]
return;
";
}
