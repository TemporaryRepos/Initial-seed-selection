digraph "unitGraph" {
    "r0 := @parameter0: java.nio.ByteBuffer"
    "r16 := @parameter1: java.nio.ByteOrder"
    "$r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>()"
    "$r2 = virtualinvoke $r1.<java.nio.CharBuffer: java.nio.ByteOrder order()>()"
    "$r3 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r2, $r3)"
    "$r4 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()"
    "$r5 = virtualinvoke $r4.<java.nio.IntBuffer: java.nio.ByteOrder order()>()"
    "$r6 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r5, $r6)"
    "$r7 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>()"
    "$r8 = virtualinvoke $r7.<java.nio.LongBuffer: java.nio.ByteOrder order()>()"
    "$r9 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r8, $r9)"
    "$r10 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>()"
    "$r11 = virtualinvoke $r10.<java.nio.FloatBuffer: java.nio.ByteOrder order()>()"
    "$r12 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r11, $r12)"
    "$r13 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>()"
    "$r14 = virtualinvoke $r13.<java.nio.DoubleBuffer: java.nio.ByteOrder order()>()"
    "$r15 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r14, $r15)"
    "return"
    "r0 := @parameter0: java.nio.ByteBuffer"->"r16 := @parameter1: java.nio.ByteOrder";
    "r16 := @parameter1: java.nio.ByteOrder"->"$r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>()";
    "$r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>()"->"$r2 = virtualinvoke $r1.<java.nio.CharBuffer: java.nio.ByteOrder order()>()";
    "$r2 = virtualinvoke $r1.<java.nio.CharBuffer: java.nio.ByteOrder order()>()"->"$r3 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()";
    "$r3 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"->"staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r2, $r3)";
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r2, $r3)"->"$r4 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()";
    "$r4 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>()"->"$r5 = virtualinvoke $r4.<java.nio.IntBuffer: java.nio.ByteOrder order()>()";
    "$r5 = virtualinvoke $r4.<java.nio.IntBuffer: java.nio.ByteOrder order()>()"->"$r6 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()";
    "$r6 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"->"staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r5, $r6)";
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r5, $r6)"->"$r7 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>()";
    "$r7 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>()"->"$r8 = virtualinvoke $r7.<java.nio.LongBuffer: java.nio.ByteOrder order()>()";
    "$r8 = virtualinvoke $r7.<java.nio.LongBuffer: java.nio.ByteOrder order()>()"->"$r9 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()";
    "$r9 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"->"staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r8, $r9)";
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r8, $r9)"->"$r10 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>()";
    "$r10 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>()"->"$r11 = virtualinvoke $r10.<java.nio.FloatBuffer: java.nio.ByteOrder order()>()";
    "$r11 = virtualinvoke $r10.<java.nio.FloatBuffer: java.nio.ByteOrder order()>()"->"$r12 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()";
    "$r12 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"->"staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r11, $r12)";
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r11, $r12)"->"$r13 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>()";
    "$r13 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>()"->"$r14 = virtualinvoke $r13.<java.nio.DoubleBuffer: java.nio.ByteOrder order()>()";
    "$r14 = virtualinvoke $r13.<java.nio.DoubleBuffer: java.nio.ByteOrder order()>()"->"$r15 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()";
    "$r15 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>()"->"staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r14, $r15)";
    "staticinvoke <javaT.nio.Buffer.Order: void ck(java.nio.ByteOrder,java.nio.ByteOrder)>($r14, $r15)"->"return";
}
