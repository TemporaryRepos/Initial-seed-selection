digraph "unitGraph" {
    "r0 := @parameter0: java.net.InterfaceAddress"
    "r1 = virtualinvoke r0.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>()"
    "$z0 = r1 instanceof java.net.Inet4Address"
    "if $z0 == 0 goto $s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"
    "$s1 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"
    "$z2 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv4PrefixLength(int)>($s1)"
    "return $z2"
    "$s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"
    "$z1 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv6PrefixLength(int)>($s0)"
    "return $z1"
    "r0 := @parameter0: java.net.InterfaceAddress"->"r1 = virtualinvoke r0.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>()";
    "r1 = virtualinvoke r0.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>()"->"$z0 = r1 instanceof java.net.Inet4Address";
    "$z0 = r1 instanceof java.net.Inet4Address"->"if $z0 == 0 goto $s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()";
    "if $z0 == 0 goto $s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"->"$s1 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()";
    "if $z0 == 0 goto $s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"->"$s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()";
    "$s1 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"->"$z2 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv4PrefixLength(int)>($s1)";
    "$z2 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv4PrefixLength(int)>($s1)"->"return $z2";
    "$s0 = virtualinvoke r0.<java.net.InterfaceAddress: short getNetworkPrefixLength()>()"->"$z1 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv6PrefixLength(int)>($s0)";
    "$z1 = staticinvoke <javaT.net.InterfaceAddress.NetworkPrefixLength: boolean checkIPv6PrefixLength(int)>($s0)"->"return $z1";
}
