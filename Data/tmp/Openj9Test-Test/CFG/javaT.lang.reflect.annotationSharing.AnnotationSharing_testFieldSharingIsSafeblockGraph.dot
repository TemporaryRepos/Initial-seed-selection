digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r8 := @this: javaT.lang.reflect.annotationSharing.AnnotationSharing;
$r0 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\";
r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"f\");
$r2 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\";
r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"f\");
staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateAnnotationSharingIsSafe(java.lang.reflect.AccessibleObject,java.lang.reflect.AccessibleObject)>(r1, r3);
$r4 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\");
$r5 = (javaT.lang.reflect.annotationSharing.Baz) $r4;
$r6 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\");
$r7 = (javaT.lang.reflect.annotationSharing.Baz) $r6;
staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateArrayValues(javaT.lang.reflect.annotationSharing.Baz,javaT.lang.reflect.annotationSharing.Baz)>($r5, $r7);
return;
"
}
