digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "$r0 = new javaT.nio.channels.Channels.ExtendedFileOutputStream"
    "specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>(r2)"
    "i2 = 0"
    "$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "if i2 >= $i0 goto interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()"
    "$r5 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"
    "$r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>($r4)"
    "$r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6)"
    "interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r7)"
    "i2 = i2 + 1"
    "goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"
    "interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()"
    "virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"$r0 = new javaT.nio.channels.Channels.ExtendedFileOutputStream";
    "$r0 = new javaT.nio.channels.Channels.ExtendedFileOutputStream"->"specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>(r2)";
    "r3 = staticinvoke <java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>(r2)"->"i2 = 0";
    "i2 = 0"->"$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"if i2 >= $i0 goto interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()";
    "if i2 >= $i0 goto interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()"->"$r5 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "if i2 >= $i0 goto interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()"->"interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()";
    "$r5 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>";
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"->"$r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>($r4)";
    "$r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>($r4)"->"$r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6)";
    "$r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6)"->"interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r7)";
    "interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r7)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]";
    "goto [?= $i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"->"$i0 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "interfaceinvoke r3.<java.nio.channels.WritableByteChannel: void close()>()"->"virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void close()>()";
    "virtualinvoke r2.<javaT.nio.channels.Channels.ExtendedFileOutputStream: void close()>()"->"return";
}
