digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.net.HttpURLConnection.MyHttpURLConnectionImpl"
    "specialinvoke $r0.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: void <init>(java.net.URL)>(null)"
    "r5 = $r0"
    "i0 = virtualinvoke r5.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: int getResponseCode()>()"
    "if i0 != -1 goto (branch)"
    "$r1 = new java.lang.RuntimeException"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"java.net.HttpURLConnection should provide implementation for getResponseCode()\")"
    "throw $r1"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r6 = $r2"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"PASS\")"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new javaT.net.HttpURLConnection.MyHttpURLConnectionImpl";
    "r4 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "$r0 = new javaT.net.HttpURLConnection.MyHttpURLConnectionImpl"->"specialinvoke $r0.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: void <init>(java.net.URL)>(null)";
    "$r0 = new javaT.net.HttpURLConnection.MyHttpURLConnectionImpl"->"$r2 := @caughtexception";
    "specialinvoke $r0.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: void <init>(java.net.URL)>(null)"->"r5 = $r0";
    "specialinvoke $r0.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: void <init>(java.net.URL)>(null)"->"$r2 := @caughtexception";
    "r5 = $r0"->"i0 = virtualinvoke r5.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: int getResponseCode()>()";
    "r5 = $r0"->"$r2 := @caughtexception";
    "i0 = virtualinvoke r5.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: int getResponseCode()>()"->"if i0 != -1 goto (branch)";
    "i0 = virtualinvoke r5.<javaT.net.HttpURLConnection.MyHttpURLConnectionImpl: int getResponseCode()>()"->"$r2 := @caughtexception";
    "if i0 != -1 goto (branch)"->"$r1 = new java.lang.RuntimeException";
    "if i0 != -1 goto (branch)"->"goto [?= return]";
    "if i0 != -1 goto (branch)"->"$r2 := @caughtexception";
    "$r1 = new java.lang.RuntimeException"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"java.net.HttpURLConnection should provide implementation for getResponseCode()\")";
    "$r1 = new java.lang.RuntimeException"->"$r2 := @caughtexception";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"java.net.HttpURLConnection should provide implementation for getResponseCode()\")"->"throw $r1";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"java.net.HttpURLConnection should provide implementation for getResponseCode()\")"->"$r2 := @caughtexception";
    "throw $r1"->"$r2 := @caughtexception";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r6 = $r2";
    "r6 = $r2"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"PASS\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"PASS\")"->"return";
}
