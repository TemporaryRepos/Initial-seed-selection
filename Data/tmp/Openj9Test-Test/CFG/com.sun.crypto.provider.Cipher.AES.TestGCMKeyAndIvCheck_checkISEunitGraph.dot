digraph "unitGraph" {
    "r0 := @parameter0: javax.crypto.Cipher"
    "$r1 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] AAD>"
    "virtualinvoke r0.<javax.crypto.Cipher: void updateAAD(byte[])>($r1)"
    "$r2 = new java.lang.Exception"
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for updateAAD()\")"
    "throw $r2"
    "$r8 := @caughtexception"
    "r12 = $r8"
    "$r9 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] update(byte[])>($r9)"
    "$r11 = new java.lang.Exception"
    "specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for update()\")"
    "throw $r11"
    "$r4 := @caughtexception"
    "r13 = $r4"
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)"
    "$r7 = new java.lang.Exception"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for doFinal()\")"
    "throw $r7"
    "$r3 := @caughtexception"
    "r14 = $r3"
    "return"
    "r0 := @parameter0: javax.crypto.Cipher"->"$r1 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] AAD>";
    "r0 := @parameter0: javax.crypto.Cipher"->"$r8 := @caughtexception";
    "$r1 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] AAD>"->"virtualinvoke r0.<javax.crypto.Cipher: void updateAAD(byte[])>($r1)";
    "$r1 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] AAD>"->"$r8 := @caughtexception";
    "virtualinvoke r0.<javax.crypto.Cipher: void updateAAD(byte[])>($r1)"->"$r2 = new java.lang.Exception";
    "virtualinvoke r0.<javax.crypto.Cipher: void updateAAD(byte[])>($r1)"->"$r8 := @caughtexception";
    "$r2 = new java.lang.Exception"->"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for updateAAD()\")";
    "$r2 = new java.lang.Exception"->"$r8 := @caughtexception";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for updateAAD()\")"->"throw $r2";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for updateAAD()\")"->"$r8 := @caughtexception";
    "throw $r2"->"$r8 := @caughtexception";
    "$r8 := @caughtexception"->"r12 = $r8";
    "r12 = $r8"->"$r9 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>";
    "r12 = $r8"->"$r4 := @caughtexception";
    "$r9 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"->"virtualinvoke r0.<javax.crypto.Cipher: byte[] update(byte[])>($r9)";
    "$r9 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"->"$r4 := @caughtexception";
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] update(byte[])>($r9)"->"$r11 = new java.lang.Exception";
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] update(byte[])>($r9)"->"$r4 := @caughtexception";
    "$r11 = new java.lang.Exception"->"specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for update()\")";
    "$r11 = new java.lang.Exception"->"$r4 := @caughtexception";
    "specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for update()\")"->"throw $r11";
    "specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for update()\")"->"$r4 := @caughtexception";
    "throw $r11"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"r13 = $r4";
    "r13 = $r4"->"$r5 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>";
    "r13 = $r4"->"$r3 := @caughtexception";
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"->"virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)";
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestGCMKeyAndIvCheck: byte[] PT>"->"$r3 := @caughtexception";
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)"->"$r7 = new java.lang.Exception";
    "virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)"->"$r3 := @caughtexception";
    "$r7 = new java.lang.Exception"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for doFinal()\")";
    "$r7 = new java.lang.Exception"->"$r3 := @caughtexception";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for doFinal()\")"->"throw $r7";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ISE for doFinal()\")"->"$r3 := @caughtexception";
    "throw $r7"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"r14 = $r3";
    "r14 = $r3"->"return";
}
