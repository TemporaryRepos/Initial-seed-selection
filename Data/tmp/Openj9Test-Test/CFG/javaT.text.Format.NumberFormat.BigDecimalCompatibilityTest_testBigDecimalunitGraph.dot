digraph "unitGraph" {
    "$r0 = new java.text.DecimalFormat"
    "specialinvoke $r0.<java.text.DecimalFormat: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r1.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)"
    "virtualinvoke r1.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>(2147483647)"
    "i8 = 0"
    "$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$i0 = lengthof $r2"
    "if i8 >= $i0 goto return"
    "i9 = 0"
    "$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$i1 = lengthof $r3"
    "if i9 >= $i1 goto i8 = i8 + 1"
    "i10 = 0"
    "$r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$i2 = lengthof $r4"
    "if i10 >= $i2 goto i9 = i9 + 1"
    "i11 = 0"
    "$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$i3 = lengthof $r5"
    "if i11 >= $i3 goto i10 = i10 + 1"
    "i12 = 0"
    "$r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>"
    "$i4 = lengthof $r6"
    "if i12 >= $i4 goto i11 = i11 + 1"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$r9 = $r8[i8]"
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"
    "$r11 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$r12 = $r11[i9]"
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)"
    "$r15 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$r16 = $r15[i10]"
    "$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"
    "$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"
    "$r19 = $r18[i11]"
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"
    "$r21 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>"
    "$r22 = $r21[i12]"
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"
    "r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i13 = 0"
    "$r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"
    "$i5 = lengthof $r25"
    "if i13 >= $i5 goto i12 = i12 + 1"
    "$r26 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"
    "$i6 = $r26[i13]"
    "staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r24, $i6)"
    "$r27 = new java.lang.StringBuilder"
    "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r31 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"
    "$i7 = $r31[i13]"
    "staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r30, $i7)"
    "i13 = i13 + 1"
    "goto [?= $r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>]"
    "i12 = i12 + 1"
    "goto [?= $r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>]"
    "i11 = i11 + 1"
    "goto [?= $r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"
    "i10 = i10 + 1"
    "goto [?= $r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"
    "i9 = i9 + 1"
    "goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"
    "i8 = i8 + 1"
    "goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"
    "return"
    "$r0 = new java.text.DecimalFormat"->"specialinvoke $r0.<java.text.DecimalFormat: void <init>()>()";
    "specialinvoke $r0.<java.text.DecimalFormat: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r1.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)";
    "virtualinvoke r1.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1)"->"virtualinvoke r1.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>(2147483647)";
    "virtualinvoke r1.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>(2147483647)"->"i8 = 0";
    "i8 = 0"->"$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$i0 = lengthof $r2";
    "$i0 = lengthof $r2"->"if i8 >= $i0 goto return";
    "if i8 >= $i0 goto return"->"i9 = 0";
    "if i8 >= $i0 goto return"->"return";
    "i9 = 0"->"$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$i1 = lengthof $r3";
    "$i1 = lengthof $r3"->"if i9 >= $i1 goto i8 = i8 + 1";
    "if i9 >= $i1 goto i8 = i8 + 1"->"i10 = 0";
    "if i9 >= $i1 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "i10 = 0"->"$r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$i2 = lengthof $r4";
    "$i2 = lengthof $r4"->"if i10 >= $i2 goto i9 = i9 + 1";
    "if i10 >= $i2 goto i9 = i9 + 1"->"i11 = 0";
    "if i10 >= $i2 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "i11 = 0"->"$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$i3 = lengthof $r5";
    "$i3 = lengthof $r5"->"if i11 >= $i3 goto i10 = i10 + 1";
    "if i11 >= $i3 goto i10 = i10 + 1"->"i12 = 0";
    "if i11 >= $i3 goto i10 = i10 + 1"->"i10 = i10 + 1";
    "i12 = 0"->"$r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>";
    "$r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>"->"$i4 = lengthof $r6";
    "$i4 = lengthof $r6"->"if i12 >= $i4 goto i11 = i11 + 1";
    "if i12 >= $i4 goto i11 = i11 + 1"->"$r7 = new java.lang.StringBuilder";
    "if i12 >= $i4 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r8 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$r9 = $r8[i8]";
    "$r9 = $r8[i8]"->"$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)";
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r11 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r11 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$r12 = $r11[i9]";
    "$r12 = $r11[i9]"->"$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)";
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)"->"$r15 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r15 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$r16 = $r15[i10]";
    "$r16 = $r15[i10]"->"$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)";
    "$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"->"$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "$r18 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>"->"$r19 = $r18[i11]";
    "$r19 = $r18[i11]"->"$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)";
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"->"$r21 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>";
    "$r21 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>"->"$r22 = $r21[i12]";
    "$r22 = $r21[i12]"->"$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)";
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"->"r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"i13 = 0";
    "i13 = 0"->"$r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>";
    "$r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"->"$i5 = lengthof $r25";
    "$i5 = lengthof $r25"->"if i13 >= $i5 goto i12 = i12 + 1";
    "if i13 >= $i5 goto i12 = i12 + 1"->"$r26 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>";
    "if i13 >= $i5 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$r26 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"->"$i6 = $r26[i13]";
    "$i6 = $r26[i13]"->"staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r24, $i6)";
    "staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, r24, $i6)"->"$r27 = new java.lang.StringBuilder";
    "$r27 = new java.lang.StringBuilder"->"specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r31 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>";
    "$r31 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>"->"$i7 = $r31[i13]";
    "$i7 = $r31[i13]"->"staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r30, $i7)";
    "staticinvoke <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: void test(java.text.DecimalFormat,java.lang.String,int)>(r1, $r30, $i7)"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= $r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>]";
    "goto [?= $r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>]"->"$r25 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: int[] multipliers>";
    "i12 = i12 + 1"->"goto [?= $r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>]";
    "goto [?= $r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>]"->"$r6 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] exponents>";
    "i11 = i11 + 1"->"goto [?= $r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]";
    "goto [?= $r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"->"$r5 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "i10 = i10 + 1"->"goto [?= $r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]";
    "goto [?= $r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"->"$r4 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "i9 = i9 + 1"->"goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]";
    "goto [?= $r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"->"$r3 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
    "i8 = i8 + 1"->"goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]";
    "goto [?= $r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>]"->"$r2 = <javaT.text.Format.NumberFormat.BigDecimalCompatibilityTest: java.lang.String[] input_data>";
}
