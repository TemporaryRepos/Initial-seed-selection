digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r26 := @parameter0: java.lang.String[];
i2 = -10;
"
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i2 >= 10 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r27 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r1 = new java.math.BigDecimal;
$r2 = <java.math.BigInteger: java.math.BigInteger ONE>;
$i0 = neg i2;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r2, $i0);
r28 = $r1;
$z0 = virtualinvoke r27.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r1);
if $z0 != 0 goto $r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r17 = new java.lang.RuntimeException;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result \");
$r20 = virtualinvoke r27.<java.math.BigDecimal: java.lang.String toString()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r23 = virtualinvoke r28.<java.math.BigDecimal: java.lang.String toString()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r17;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r29 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r5 = new java.math.BigDecimal;
$r6 = <java.math.BigInteger: java.math.BigInteger ONE>;
$r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger negate()>();
$i1 = neg i2;
specialinvoke $r5.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r7, $i1);
r30 = $r5;
$z1 = virtualinvoke r29.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i2 = i2 + 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result \");
$r11 = virtualinvoke r29.<java.math.BigDecimal: java.lang.String toString()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r14 = virtualinvoke r30.<java.math.BigDecimal: java.lang.String toString()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);
throw $r8;
"
    "Block 6:
[preds: 4 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r26 := @parameter0: java.lang.String[];
i2 = -10;
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i2 >= 10 goto return;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i2 >= 10 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r27 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r1 = new java.math.BigDecimal;
$r2 = <java.math.BigInteger: java.math.BigInteger ONE>;
$i0 = neg i2;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r2, $i0);
r28 = $r1;
$z0 = virtualinvoke r27.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r1);
if $z0 != 0 goto $r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i2 >= 10 goto return;
"->"Block 7:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r27 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r1 = new java.math.BigDecimal;
$r2 = <java.math.BigInteger: java.math.BigInteger ONE>;
$i0 = neg i2;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r2, $i0);
r28 = $r1;
$z0 = virtualinvoke r27.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r1);
if $z0 != 0 goto $r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
"->"Block 3:
[preds: 2 ] [succs: ]
$r17 = new java.lang.RuntimeException;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result \");
$r20 = virtualinvoke r27.<java.math.BigDecimal: java.lang.String toString()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r23 = virtualinvoke r28.<java.math.BigDecimal: java.lang.String toString()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r17;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
r27 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r1 = new java.math.BigDecimal;
$r2 = <java.math.BigInteger: java.math.BigInteger ONE>;
$i0 = neg i2;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r2, $i0);
r28 = $r1;
$z0 = virtualinvoke r27.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r1);
if $z0 != 0 goto $r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r29 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r5 = new java.math.BigDecimal;
$r6 = <java.math.BigInteger: java.math.BigInteger ONE>;
$r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger negate()>();
$i1 = neg i2;
specialinvoke $r5.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r7, $i1);
r30 = $r5;
$z1 = virtualinvoke r29.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i2 = i2 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r29 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r5 = new java.math.BigDecimal;
$r6 = <java.math.BigInteger: java.math.BigInteger ONE>;
$r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger negate()>();
$i1 = neg i2;
specialinvoke $r5.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r7, $i1);
r30 = $r5;
$z1 = virtualinvoke r29.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i2 = i2 + 1;
"->"Block 5:
[preds: 4 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result \");
$r11 = virtualinvoke r29.<java.math.BigDecimal: java.lang.String toString()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r14 = virtualinvoke r30.<java.math.BigDecimal: java.lang.String toString()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);
throw $r8;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal negate()>();
r29 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>(i2);
$r5 = new java.math.BigDecimal;
$r6 = <java.math.BigInteger: java.math.BigInteger ONE>;
$r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger negate()>();
$i1 = neg i2;
specialinvoke $r5.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r7, $i1);
r30 = $r5;
$z1 = virtualinvoke r29.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i2 = i2 + 1;
"->"Block 6:
[preds: 4 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i2 >= 10 goto return;
";
}
