digraph "unitGraph" {
    "i2 = 0"
    "$r0 = newarray (java.math.BigInteger)[5]"
    "$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32768L)"
    "$r0[0] = $r1"
    "$r2 = <java.math.BigInteger: java.math.BigInteger ZERO>"
    "$r0[1] = $r2"
    "$r3 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "$r0[2] = $r3"
    "$r4 = <java.math.BigInteger: java.math.BigInteger TEN>"
    "$r0[3] = $r4"
    "$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32767L)"
    "$r0[4] = $r5"
    "r6 = $r0"
    "$r7 = newarray (java.math.BigInteger)[6]"
    "$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483649L)"
    "$r7[0] = $r8"
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L)"
    "$r7[1] = $r9"
    "$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32769L)"
    "$r7[2] = $r10"
    "$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32768L)"
    "$r7[3] = $r11"
    "$r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)"
    "$r7[4] = $r12"
    "$r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)"
    "$r7[5] = $r13"
    "r14 = $r7"
    "r28 = r6"
    "i3 = lengthof r28"
    "i4 = 0"
    "if i4 >= i3 goto r30 = r14"
    "r29 = r28[i4]"
    "$s0 = virtualinvoke r29.<java.math.BigInteger: short shortValueExact()>()"
    "$s1 = virtualinvoke r29.<java.math.BigInteger: short shortValue()>()"
    "if $s0 == $s1 goto i4 = i4 + 1"
    "$r23 = <java.lang.System: java.io.PrintStream err>"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatching short  conversion for \")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)"
    "i2 = i2 + 1"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "r30 = r14"
    "i5 = lengthof r30"
    "i6 = 0"
    "if i6 >= i5 goto return i2"
    "r31 = r30[i6]"
    "s7 = virtualinvoke r31.<java.math.BigInteger: short shortValueExact()>()"
    "$r16 = <java.lang.System: java.io.PrintStream err>"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to get expected exception on \")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s7)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)"
    "goto [?= i6 = i6 + 1]"
    "$r27 := @caughtexception"
    "r32 = $r27"
    "i6 = i6 + 1"
    "return i2"
    "i2 = 0"->"$r0 = newarray (java.math.BigInteger)[5]";
    "$r0 = newarray (java.math.BigInteger)[5]"->"$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32768L)";
    "$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32768L)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = <java.math.BigInteger: java.math.BigInteger ZERO>";
    "$r2 = <java.math.BigInteger: java.math.BigInteger ZERO>"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "$r3 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = <java.math.BigInteger: java.math.BigInteger TEN>";
    "$r4 = <java.math.BigInteger: java.math.BigInteger TEN>"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32767L)";
    "$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32767L)"->"$r0[4] = $r5";
    "$r0[4] = $r5"->"r6 = $r0";
    "r6 = $r0"->"$r7 = newarray (java.math.BigInteger)[6]";
    "$r7 = newarray (java.math.BigInteger)[6]"->"$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483649L)";
    "$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483649L)"->"$r7[0] = $r8";
    "$r7[0] = $r8"->"$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L)";
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L)"->"$r7[1] = $r9";
    "$r7[1] = $r9"->"$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32769L)";
    "$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-32769L)"->"$r7[2] = $r10";
    "$r7[2] = $r10"->"$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32768L)";
    "$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(32768L)"->"$r7[3] = $r11";
    "$r7[3] = $r11"->"$r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)";
    "$r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)"->"$r7[4] = $r12";
    "$r7[4] = $r12"->"$r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)";
    "$r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)"->"$r7[5] = $r13";
    "$r7[5] = $r13"->"r14 = $r7";
    "r14 = $r7"->"r28 = r6";
    "r28 = r6"->"i3 = lengthof r28";
    "i3 = lengthof r28"->"i4 = 0";
    "i4 = 0"->"if i4 >= i3 goto r30 = r14";
    "if i4 >= i3 goto r30 = r14"->"r29 = r28[i4]";
    "if i4 >= i3 goto r30 = r14"->"r30 = r14";
    "r29 = r28[i4]"->"$s0 = virtualinvoke r29.<java.math.BigInteger: short shortValueExact()>()";
    "$s0 = virtualinvoke r29.<java.math.BigInteger: short shortValueExact()>()"->"$s1 = virtualinvoke r29.<java.math.BigInteger: short shortValue()>()";
    "$s1 = virtualinvoke r29.<java.math.BigInteger: short shortValue()>()"->"if $s0 == $s1 goto i4 = i4 + 1";
    "if $s0 == $s1 goto i4 = i4 + 1"->"$r23 = <java.lang.System: java.io.PrintStream err>";
    "if $s0 == $s1 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r23 = <java.lang.System: java.io.PrintStream err>"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatching short  conversion for \")";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatching short  conversion for \")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i3 goto r30 = r14";
    "r30 = r14"->"i5 = lengthof r30";
    "i5 = lengthof r30"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto return i2";
    "if i6 >= i5 goto return i2"->"r31 = r30[i6]";
    "if i6 >= i5 goto return i2"->"return i2";
    "r31 = r30[i6]"->"s7 = virtualinvoke r31.<java.math.BigInteger: short shortValueExact()>()";
    "r31 = r30[i6]"->"$r27 := @caughtexception";
    "s7 = virtualinvoke r31.<java.math.BigInteger: short shortValueExact()>()"->"$r16 = <java.lang.System: java.io.PrintStream err>";
    "s7 = virtualinvoke r31.<java.math.BigInteger: short shortValueExact()>()"->"$r27 := @caughtexception";
    "$r16 = <java.lang.System: java.io.PrintStream err>"->"$r15 = new java.lang.StringBuilder";
    "$r16 = <java.lang.System: java.io.PrintStream err>"->"$r27 := @caughtexception";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "$r15 = new java.lang.StringBuilder"->"$r27 := @caughtexception";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to get expected exception on \")";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r27 := @caughtexception";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to get expected exception on \")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to get expected exception on \")"->"$r27 := @caughtexception";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)"->"$r27 := @caughtexception";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s7)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \")"->"$r27 := @caughtexception";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s7)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s7)"->"$r27 := @caughtexception";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r27 := @caughtexception";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)"->"i2 = i2 + 1";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)"->"$r27 := @caughtexception";
    "i2 = i2 + 1"->"goto [?= i6 = i6 + 1]";
    "i2 = i2 + 1"->"$r27 := @caughtexception";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$r27 := @caughtexception"->"r32 = $r27";
    "r32 = $r27"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto return i2";
}
