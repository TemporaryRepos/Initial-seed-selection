digraph "unitGraph" {
    "i5 = 0"
    "$r0 = newarray (int)[3]"
    "$r0[0] = -1"
    "$r0[1] = 0"
    "$r0[2] = 1"
    "r1 = $r0"
    "r2 = r1"
    "i0 = lengthof r2"
    "i6 = 0"
    "if i6 >= i0 goto return i5"
    "i1 = r2[i6]"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(i1)"
    "$i2 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r3, 2)"
    "if $i2 == i1 goto $r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)"
    "i5 = i5 + 1"
    "$r17 = <java.lang.System: java.io.PrintStream err>"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad binary roundtrip conversion of \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)"
    "$i3 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r4, 8)"
    "if $i3 == i1 goto $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)"
    "$r12 = <java.lang.System: java.io.PrintStream err>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad octal roundtrip conversion of \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)"
    "$i4 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r5, 16)"
    "if $i4 == i1 goto i6 = i6 + 1"
    "$r7 = <java.lang.System: java.io.PrintStream err>"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad hex roundtrip conversion of \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "return i5"
    "i5 = 0"->"$r0 = newarray (int)[3]";
    "$r0 = newarray (int)[3]"->"$r0[0] = -1";
    "$r0[0] = -1"->"$r0[1] = 0";
    "$r0[1] = 0"->"$r0[2] = 1";
    "$r0[2] = 1"->"r1 = $r0";
    "r1 = $r0"->"r2 = r1";
    "r2 = r1"->"i0 = lengthof r2";
    "i0 = lengthof r2"->"i6 = 0";
    "i6 = 0"->"if i6 >= i0 goto return i5";
    "if i6 >= i0 goto return i5"->"i1 = r2[i6]";
    "if i6 >= i0 goto return i5"->"return i5";
    "i1 = r2[i6]"->"$r3 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(i1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(i1)"->"$i2 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r3, 2)";
    "$i2 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r3, 2)"->"if $i2 == i1 goto $r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)";
    "if $i2 == i1 goto $r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)"->"i5 = i5 + 1";
    "if $i2 == i1 goto $r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)";
    "i5 = i5 + 1"->"$r17 = <java.lang.System: java.io.PrintStream err>";
    "$r17 = <java.lang.System: java.io.PrintStream err>"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad binary roundtrip conversion of \")";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad binary roundtrip conversion of \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20)";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(i1)"->"$i3 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r4, 8)";
    "$i3 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r4, 8)"->"if $i3 == i1 goto $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)";
    "if $i3 == i1 goto $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)"->"i5 = i5 + 1";
    "if $i3 == i1 goto $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)";
    "i5 = i5 + 1"->"$r12 = <java.lang.System: java.io.PrintStream err>";
    "$r12 = <java.lang.System: java.io.PrintStream err>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad octal roundtrip conversion of \")";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad octal roundtrip conversion of \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1)"->"$i4 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r5, 16)";
    "$i4 = staticinvoke <java.lang.Integer: int parseUnsignedInt(java.lang.String,int)>($r5, 16)"->"if $i4 == i1 goto i6 = i6 + 1";
    "if $i4 == i1 goto i6 = i6 + 1"->"i5 = i5 + 1";
    "if $i4 == i1 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "i5 = i5 + 1"->"$r7 = <java.lang.System: java.io.PrintStream err>";
    "$r7 = <java.lang.System: java.io.PrintStream err>"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad hex roundtrip conversion of \")";
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad hex roundtrip conversion of \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i0 goto return i5";
}
