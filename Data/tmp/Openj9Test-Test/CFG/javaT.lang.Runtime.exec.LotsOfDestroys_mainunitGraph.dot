digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "$c0 = <java.io.File: char separatorChar>"
    "if $c0 == 92 goto return"
    "$r0 = new java.io.File"
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"/usr/bin/echo\")"
    "$z0 = virtualinvoke $r0.<java.io.File: boolean exists()>()"
    "if $z0 != 0 goto i1 = 0"
    "return"
    "i1 = 0"
    "if i1 > 400 goto return"
    "$r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "r2 = virtualinvoke $r1.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(\"/usr/bin/echo x\")"
    "virtualinvoke r2.<java.lang.Process: void destroy()>()"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "r3 := @parameter0: java.lang.String[]"->"$c0 = <java.io.File: char separatorChar>";
    "$c0 = <java.io.File: char separatorChar>"->"if $c0 == 92 goto return";
    "if $c0 == 92 goto return"->"$r0 = new java.io.File";
    "if $c0 == 92 goto return"->"return";
    "$r0 = new java.io.File"->"specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"/usr/bin/echo\")";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"/usr/bin/echo\")"->"$z0 = virtualinvoke $r0.<java.io.File: boolean exists()>()";
    "$z0 = virtualinvoke $r0.<java.io.File: boolean exists()>()"->"if $z0 != 0 goto i1 = 0";
    "if $z0 != 0 goto i1 = 0"->"return";
    "if $z0 != 0 goto i1 = 0"->"i1 = 0";
    "i1 = 0"->"if i1 > 400 goto return";
    "if i1 > 400 goto return"->"$r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "if i1 > 400 goto return"->"return";
    "$r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"r2 = virtualinvoke $r1.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(\"/usr/bin/echo x\")";
    "r2 = virtualinvoke $r1.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(\"/usr/bin/echo x\")"->"virtualinvoke r2.<java.lang.Process: void destroy()>()";
    "virtualinvoke r2.<java.lang.Process: void destroy()>()"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 > 400 goto return";
}
