digraph "unitGraph" {
    "r14 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.nio.charset.coders.Errors$TestString"
    "specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0)"
    "$r1 = new javaT.nio.charset.coders.Errors$TestStream"
    "specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1)"
    "$r2 = new javaT.nio.charset.coders.Errors$TestString"
    "specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2)"
    "$r3 = new javaT.nio.charset.coders.Errors$TestStream"
    "specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3)"
    "$r4 = new javaT.nio.charset.coders.Errors$TestString"
    "specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4)"
    "$r5 = new javaT.nio.charset.coders.Errors$TestStream"
    "specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5)"
    "$r6 = new javaT.nio.charset.coders.Errors$TestString"
    "specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6)"
    "$r7 = new javaT.nio.charset.coders.Errors$TestStream"
    "specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\")"
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7)"
    "$i0 = <javaT.nio.charset.coders.Errors: int failures>"
    "if $i0 <= 0 goto return"
    "$r8 = <javaT.nio.charset.coders.Errors: java.io.PrintStream log>"
    "virtualinvoke $r8.<java.io.PrintStream: void println()>()"
    "$r9 = new java.lang.Exception"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tests failed: \")"
    "$i1 = <javaT.nio.charset.coders.Errors: int failures>"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r13)"
    "throw $r9"
    "return"
    "r14 := @parameter0: java.lang.String[]"->"$r0 = new javaT.nio.charset.coders.Errors$TestString";
    "$r0 = new javaT.nio.charset.coders.Errors$TestString"->"specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\")";
    "specialinvoke $r0.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"US-ASCII\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r0)"->"$r1 = new javaT.nio.charset.coders.Errors$TestStream";
    "$r1 = new javaT.nio.charset.coders.Errors$TestStream"->"specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\")";
    "specialinvoke $r1.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"US-ASCII\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_US_ASCII(javaT.nio.charset.coders.Errors$Test)>($r1)"->"$r2 = new javaT.nio.charset.coders.Errors$TestString";
    "$r2 = new javaT.nio.charset.coders.Errors$TestString"->"specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\")";
    "specialinvoke $r2.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-1\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r2)"->"$r3 = new javaT.nio.charset.coders.Errors$TestStream";
    "$r3 = new javaT.nio.charset.coders.Errors$TestStream"->"specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\")";
    "specialinvoke $r3.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-1\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r3)"->"$r4 = new javaT.nio.charset.coders.Errors$TestString";
    "$r4 = new javaT.nio.charset.coders.Errors$TestString"->"specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\")";
    "specialinvoke $r4.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"ISO-8859-15\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r4)"->"$r5 = new javaT.nio.charset.coders.Errors$TestStream";
    "$r5 = new javaT.nio.charset.coders.Errors$TestStream"->"specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\")";
    "specialinvoke $r5.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"ISO-8859-15\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_ISO_8859_1(javaT.nio.charset.coders.Errors$Test)>($r5)"->"$r6 = new javaT.nio.charset.coders.Errors$TestString";
    "$r6 = new javaT.nio.charset.coders.Errors$TestString"->"specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\")";
    "specialinvoke $r6.<javaT.nio.charset.coders.Errors$TestString: void <init>(java.lang.String)>(\"UTF-8\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r6)"->"$r7 = new javaT.nio.charset.coders.Errors$TestStream";
    "$r7 = new javaT.nio.charset.coders.Errors$TestStream"->"specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\")";
    "specialinvoke $r7.<javaT.nio.charset.coders.Errors$TestStream: void <init>(java.lang.String)>(\"UTF-8\")"->"staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7)";
    "staticinvoke <javaT.nio.charset.coders.Errors: void test_UTF_8(javaT.nio.charset.coders.Errors$Test)>($r7)"->"$i0 = <javaT.nio.charset.coders.Errors: int failures>";
    "$i0 = <javaT.nio.charset.coders.Errors: int failures>"->"if $i0 <= 0 goto return";
    "if $i0 <= 0 goto return"->"$r8 = <javaT.nio.charset.coders.Errors: java.io.PrintStream log>";
    "if $i0 <= 0 goto return"->"return";
    "$r8 = <javaT.nio.charset.coders.Errors: java.io.PrintStream log>"->"virtualinvoke $r8.<java.io.PrintStream: void println()>()";
    "virtualinvoke $r8.<java.io.PrintStream: void println()>()"->"$r9 = new java.lang.Exception";
    "$r9 = new java.lang.Exception"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tests failed: \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tests failed: \")"->"$i1 = <javaT.nio.charset.coders.Errors: int failures>";
    "$i1 = <javaT.nio.charset.coders.Errors: int failures>"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r13)";
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r13)"->"throw $r9";
}
