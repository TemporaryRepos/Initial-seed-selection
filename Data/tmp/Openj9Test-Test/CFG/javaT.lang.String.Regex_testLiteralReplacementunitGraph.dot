digraph "unitGraph" {
    "r3 = \"abcdefghi\""
    "r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"abc\")"
    "$z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")"
    "if $z0 != 0 goto r5 = \"abc(def)?ghi\""
    "$r2 = new java.lang.Exception"
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r2"
    "r5 = \"abc(def)?ghi\""
    "r6 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"(def)?\", \"abc\")"
    "$z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")"
    "if $z1 != 0 goto r7 = \"abcdefghi\""
    "$r1 = new java.lang.Exception"
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r1"
    "r7 = \"abcdefghi\""
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"\\ab$c\")"
    "$z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"abc\\ab$cghi\")"
    "if $z2 != 0 goto return"
    "$r0 = new java.lang.Exception"
    "specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r0"
    "return"
    "r3 = \"abcdefghi\""->"r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"abc\")";
    "r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"abc\")"->"$z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")";
    "$z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")"->"if $z0 != 0 goto r5 = \"abc(def)?ghi\"";
    "if $z0 != 0 goto r5 = \"abc(def)?ghi\""->"$r2 = new java.lang.Exception";
    "if $z0 != 0 goto r5 = \"abc(def)?ghi\""->"r5 = \"abc(def)?ghi\"";
    "$r2 = new java.lang.Exception"->"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r2";
    "r5 = \"abc(def)?ghi\""->"r6 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"(def)?\", \"abc\")";
    "r6 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"(def)?\", \"abc\")"->"$z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")";
    "$z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"abcabcghi\")"->"if $z1 != 0 goto r7 = \"abcdefghi\"";
    "if $z1 != 0 goto r7 = \"abcdefghi\""->"$r1 = new java.lang.Exception";
    "if $z1 != 0 goto r7 = \"abcdefghi\""->"r7 = \"abcdefghi\"";
    "$r1 = new java.lang.Exception"->"specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r1";
    "r7 = \"abcdefghi\""->"r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"\\ab$c\")";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"def\", \"\\ab$c\")"->"$z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"abc\\ab$cghi\")";
    "$z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"abc\\ab$cghi\")"->"if $z2 != 0 goto return";
    "if $z2 != 0 goto return"->"$r0 = new java.lang.Exception";
    "if $z2 != 0 goto return"->"return";
    "$r0 = new java.lang.Exception"->"specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r0";
}
