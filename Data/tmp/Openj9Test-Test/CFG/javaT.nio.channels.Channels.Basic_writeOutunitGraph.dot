digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "i0 := @parameter1: int"
    "$r0 = new java.io.FileOutputStream"
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "i1 = 0"
    "if i1 >= i0 goto virtualinvoke r2.<java.io.FileOutputStream: void close()>()"
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"
    "$r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r3)"
    "virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>($r5)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$r0 = new java.io.FileOutputStream";
    "$r0 = new java.io.FileOutputStream"->"specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto virtualinvoke r2.<java.io.FileOutputStream: void close()>()";
    "if i1 >= i0 goto virtualinvoke r2.<java.io.FileOutputStream: void close()>()"->"$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "if i1 >= i0 goto virtualinvoke r2.<java.io.FileOutputStream: void close()>()"->"virtualinvoke r2.<java.io.FileOutputStream: void close()>()";
    "$r4 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>";
    "$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"->"$r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r3)";
    "$r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r3)"->"virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>($r5)";
    "virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>($r5)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto virtualinvoke r2.<java.io.FileOutputStream: void close()>()";
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"->"return";
}
