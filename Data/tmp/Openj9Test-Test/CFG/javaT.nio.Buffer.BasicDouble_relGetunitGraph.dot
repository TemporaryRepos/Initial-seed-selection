digraph "unitGraph" {
    "r0 := @parameter0: java.nio.DoubleBuffer"
    "i1 := @parameter1: int"
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int remaining()>()"
    "i5 = i1"
    "if i5 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()"
    "$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>()"
    "$l2 = (long) $d0"
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i5)"
    "$d1 = (double) $l3"
    "$l4 = (long) $d1"
    "staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l2, $l4)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()"
    "return"
    "r0 := @parameter0: java.nio.DoubleBuffer"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int remaining()>()";
    "i0 = virtualinvoke r0.<java.nio.DoubleBuffer: int remaining()>()"->"i5 = i1";
    "i5 = i1"->"if i5 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()";
    "if i5 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()"->"$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>()";
    "if i5 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()"->"virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()";
    "$d0 = virtualinvoke r0.<java.nio.DoubleBuffer: double get()>()"->"$l2 = (long) $d0";
    "$l2 = (long) $d0"->"$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i5)";
    "$l3 = staticinvoke <javaT.nio.Buffer.BasicDouble: long ic(int)>(i5)"->"$d1 = (double) $l3";
    "$d1 = (double) $l3"->"$l4 = (long) $d1";
    "$l4 = (long) $d1"->"staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l2, $l4)";
    "staticinvoke <javaT.nio.Buffer.BasicDouble: void ck(java.nio.Buffer,long,long)>(r0, $l2, $l4)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i0 goto virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()";
    "virtualinvoke r0.<java.nio.DoubleBuffer: java.nio.Buffer rewind()>()"->"return";
}
