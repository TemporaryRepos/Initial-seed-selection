digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.Charset;
r1 := @parameter1: java.nio.charset.Charset;
z1 := @parameter2: boolean;
$z0 = virtualinvoke r0.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>(r1);
if $z0 == z1 goto $r3 = <java.lang.System: java.io.PrintStream err>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong answer: \");
$r13 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" contains \");
$r16 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r18);
throw $r10;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
if z1 == 0 goto $r19 = \" does not contain \";
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r19 = \" contains \";
goto [?= $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r19 = \" does not contain \";
"
    "Block 5:
[preds: 3 4 ] [succs: ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r7 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.Charset;
r1 := @parameter1: java.nio.charset.Charset;
z1 := @parameter2: boolean;
$z0 = virtualinvoke r0.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>(r1);
if $z0 == z1 goto $r3 = <java.lang.System: java.io.PrintStream err>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong answer: \");
$r13 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" contains \");
$r16 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r18);
throw $r10;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.nio.charset.Charset;
r1 := @parameter1: java.nio.charset.Charset;
z1 := @parameter2: boolean;
$z0 = virtualinvoke r0.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>(r1);
if $z0 == z1 goto $r3 = <java.lang.System: java.io.PrintStream err>;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
if z1 == 0 goto $r19 = \" does not contain \";
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
if z1 == 0 goto $r19 = \" does not contain \";
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r19 = \" contains \";
goto [?= $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)];
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r3 = <java.lang.System: java.io.PrintStream err>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke r0.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
if z1 == 0 goto $r19 = \" does not contain \";
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r19 = \" does not contain \";
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r19 = \" contains \";
goto [?= $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)];
"->"Block 5:
[preds: 3 4 ] [succs: ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r7 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
return;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r19 = \" does not contain \";
"->"Block 5:
[preds: 3 4 ] [succs: ]
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r7 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
return;
";
}
