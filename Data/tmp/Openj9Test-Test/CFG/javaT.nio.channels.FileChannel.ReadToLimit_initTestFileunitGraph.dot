digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "$r0 = new java.io.FileOutputStream"
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "$r3 = new java.io.BufferedWriter"
    "$r4 = new java.io.OutputStreamWriter"
    "specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, \"8859_1\")"
    "specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4)"
    "r5 = $r3"
    "i2 = 0"
    "if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>()"
    "$r6 = new java.lang.Integer"
    "specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2)"
    "r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>()"
    "i3 = 0"
    "$i0 = virtualinvoke r7.<java.lang.String: int length()>()"
    "$i1 = 4 - $i0"
    "if i3 >= $i1 goto $r8 = new java.lang.StringBuilder"
    "virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\")"
    "i3 = i3 + 1"
    "goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()]"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11)"
    "virtualinvoke r5.<java.io.BufferedWriter: void newLine()>()"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r5.<java.io.BufferedWriter: void flush()>()"
    "virtualinvoke r5.<java.io.BufferedWriter: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"$r0 = new java.io.FileOutputStream";
    "$r0 = new java.io.FileOutputStream"->"specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"$r3 = new java.io.BufferedWriter";
    "$r3 = new java.io.BufferedWriter"->"$r4 = new java.io.OutputStreamWriter";
    "$r4 = new java.io.OutputStreamWriter"->"specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, \"8859_1\")";
    "specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, \"8859_1\")"->"specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4)";
    "specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4)"->"r5 = $r3";
    "r5 = $r3"->"i2 = 0";
    "i2 = 0"->"if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>()";
    "if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>()"->"$r6 = new java.lang.Integer";
    "if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>()"->"virtualinvoke r5.<java.io.BufferedWriter: void flush()>()";
    "$r6 = new java.lang.Integer"->"specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2)";
    "specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2)"->"r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>()";
    "r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>()"->"i3 = 0";
    "i3 = 0"->"$i0 = virtualinvoke r7.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r7.<java.lang.String: int length()>()"->"$i1 = 4 - $i0";
    "$i1 = 4 - $i0"->"if i3 >= $i1 goto $r8 = new java.lang.StringBuilder";
    "if i3 >= $i1 goto $r8 = new java.lang.StringBuilder"->"virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\")";
    "if i3 >= $i1 goto $r8 = new java.lang.StringBuilder"->"$r8 = new java.lang.StringBuilder";
    "virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>(\"0\")"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r7.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r7.<java.lang.String: int length()>()";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11)";
    "virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r11)"->"virtualinvoke r5.<java.io.BufferedWriter: void newLine()>()";
    "virtualinvoke r5.<java.io.BufferedWriter: void newLine()>()"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 4 goto virtualinvoke r5.<java.io.BufferedWriter: void flush()>()";
    "virtualinvoke r5.<java.io.BufferedWriter: void flush()>()"->"virtualinvoke r5.<java.io.BufferedWriter: void close()>()";
    "virtualinvoke r5.<java.io.BufferedWriter: void close()>()"->"return";
}
