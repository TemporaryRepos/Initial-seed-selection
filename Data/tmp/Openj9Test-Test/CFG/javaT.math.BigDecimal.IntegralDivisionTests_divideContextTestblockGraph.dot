digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r3 := @parameter2: java.math.BigDecimal;
r2 := @parameter3: java.math.MathContext;
i10 = 0;
r97 = null;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r97 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>(r1, r2);
"
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= (branch)];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r67 := @caughtexception;
r68 = $r67;
if r3 == null goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i10 = i10 + 1;
$r69 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r69.<java.io.PrintStream: void println()>();
$r70 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception:\");
$r72 = <java.lang.System: java.io.PrintStream err>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i7 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r77);
$r79 = <java.lang.System: java.io.PrintStream err>;
$r78 = new java.lang.StringBuilder;
specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i8 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);
$r86 = <java.lang.System: java.io.PrintStream err>;
$r85 = new java.lang.StringBuilder;
specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
$r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i9 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r91);
$r93 = <java.lang.System: java.io.PrintStream err>;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r96);
"
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$z0 = virtualinvoke r97.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r3);
if $z0 != 0 goto return i10;
"
    "Block 7:
[preds: 6 ] [succs: 10 ]
i10 = i10 + 1;
$r32 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r32.<java.io.PrintStream: void println()>();
$r33 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected result:\");
$r35 = <java.lang.System: java.io.PrintStream err>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i3 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r40);
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i4 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r49 = <java.lang.System: java.io.PrintStream err>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i5 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r54);
$r56 = <java.lang.System: java.io.PrintStream err>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result    = \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i6 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
$r63 = <java.lang.System: java.io.PrintStream err>;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);
goto [?= return i10];
"
    "Block 8:
[preds: 5 ] [succs: 9 10 ]
if r97 == null goto return i10;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
i10 = i10 + 1;
$r4 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected unexceptional result:\");
$r7 = <java.lang.System: java.io.PrintStream err>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i0 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i1 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream err>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"quotient  = \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i2 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream err>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathConext = \");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
"
    "Block 10:
[preds: 6 7 8 9 ] [succs: ]
return i10;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r3 := @parameter2: java.math.BigDecimal;
r2 := @parameter3: java.math.MathContext;
i10 = 0;
r97 = null;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
r97 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>(r1, r2);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.math.BigDecimal;
r1 := @parameter1: java.math.BigDecimal;
r3 := @parameter2: java.math.BigDecimal;
r2 := @parameter3: java.math.MathContext;
i10 = 0;
r97 = null;
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r67 := @caughtexception;
r68 = $r67;
if r3 == null goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r97 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>(r1, r2);
"->"Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= (branch)];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r97 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>(r1, r2);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r67 := @caughtexception;
r68 = $r67;
if r3 == null goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= (branch)];
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r67 := @caughtexception;
r68 = $r67;
if r3 == null goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i10 = i10 + 1;
$r69 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r69.<java.io.PrintStream: void println()>();
$r70 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception:\");
$r72 = <java.lang.System: java.io.PrintStream err>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i7 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r77);
$r79 = <java.lang.System: java.io.PrintStream err>;
$r78 = new java.lang.StringBuilder;
specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i8 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);
$r86 = <java.lang.System: java.io.PrintStream err>;
$r85 = new java.lang.StringBuilder;
specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
$r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i9 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r91);
$r93 = <java.lang.System: java.io.PrintStream err>;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r96);
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r67 := @caughtexception;
r68 = $r67;
if r3 == null goto (branch);
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i10 = i10 + 1;
$r69 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r69.<java.io.PrintStream: void println()>();
$r70 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception:\");
$r72 = <java.lang.System: java.io.PrintStream err>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i7 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r77);
$r79 = <java.lang.System: java.io.PrintStream err>;
$r78 = new java.lang.StringBuilder;
specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i8 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);
$r86 = <java.lang.System: java.io.PrintStream err>;
$r85 = new java.lang.StringBuilder;
specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
$r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i9 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r91);
$r93 = <java.lang.System: java.io.PrintStream err>;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r96);
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
";
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
$z0 = virtualinvoke r97.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r3);
if $z0 != 0 goto return i10;
";
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
if r3 == null goto (branch);
"->"Block 8:
[preds: 5 ] [succs: 9 10 ]
if r97 == null goto return i10;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$z0 = virtualinvoke r97.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r3);
if $z0 != 0 goto return i10;
"->"Block 7:
[preds: 6 ] [succs: 10 ]
i10 = i10 + 1;
$r32 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r32.<java.io.PrintStream: void println()>();
$r33 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected result:\");
$r35 = <java.lang.System: java.io.PrintStream err>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i3 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r40);
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i4 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r49 = <java.lang.System: java.io.PrintStream err>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i5 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r54);
$r56 = <java.lang.System: java.io.PrintStream err>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result    = \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i6 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
$r63 = <java.lang.System: java.io.PrintStream err>;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);
goto [?= return i10];
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$z0 = virtualinvoke r97.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r3);
if $z0 != 0 goto return i10;
"->"Block 10:
[preds: 6 7 8 9 ] [succs: ]
return i10;
";
    "Block 7:
[preds: 6 ] [succs: 10 ]
i10 = i10 + 1;
$r32 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r32.<java.io.PrintStream: void println()>();
$r33 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected result:\");
$r35 = <java.lang.System: java.io.PrintStream err>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i3 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r40);
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i4 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r47);
$r49 = <java.lang.System: java.io.PrintStream err>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"expected  = \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i5 = virtualinvoke r3.<java.math.BigDecimal: int scale()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r54);
$r56 = <java.lang.System: java.io.PrintStream err>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result    = \");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i6 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
$r63 = <java.lang.System: java.io.PrintStream err>;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
$r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathContext  = \");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);
goto [?= return i10];
"->"Block 10:
[preds: 6 7 8 9 ] [succs: ]
return i10;
";
    "Block 8:
[preds: 5 ] [succs: 9 10 ]
if r97 == null goto return i10;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
i10 = i10 + 1;
$r4 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected unexceptional result:\");
$r7 = <java.lang.System: java.io.PrintStream err>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i0 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i1 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream err>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"quotient  = \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i2 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream err>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathConext = \");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
";
    "Block 8:
[preds: 5 ] [succs: 9 10 ]
if r97 == null goto return i10;
"->"Block 10:
[preds: 6 7 8 9 ] [succs: ]
return i10;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
i10 = i10 + 1;
$r4 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected unexceptional result:\");
$r7 = <java.lang.System: java.io.PrintStream err>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"dividend  = \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i0 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"divisor   = \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i1 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream err>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"quotient  = \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" scale = \");
$i2 = virtualinvoke r97.<java.math.BigDecimal: int scale()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream err>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"MathConext = \");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
"->"Block 10:
[preds: 6 7 8 9 ] [succs: ]
return i10;
";
}
