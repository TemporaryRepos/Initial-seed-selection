digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(2, 0.75F, 1);
r1 = $r0;
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"first\", null);
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"second\", null);
$r4 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_0__308: java.util.function.Function bootstrap$()>();
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(\"first\", $r4);
$r6 = virtualinvoke r1.<java.util.LinkedHashMap: java.util.Set keySet()>();
$r7 = interfaceinvoke $r6.<java.util.Set: java.util.stream.Stream stream()>();
$r8 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.Optional findFirst()>();
$r9 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_1__309: java.util.function.Supplier bootstrap$()>();
$r10 = virtualinvoke $r8.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r9);
r11 = (java.lang.String) $r10;
$r12 = \"first\";
$z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r11);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r13 = new java.lang.RuntimeException;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"not expected value first!=\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);
throw $r13;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(2, 0.75F, 1);
r1 = $r0;
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"first\", null);
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"second\", null);
$r4 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_0__308: java.util.function.Function bootstrap$()>();
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(\"first\", $r4);
$r6 = virtualinvoke r1.<java.util.LinkedHashMap: java.util.Set keySet()>();
$r7 = interfaceinvoke $r6.<java.util.Set: java.util.stream.Stream stream()>();
$r8 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.Optional findFirst()>();
$r9 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_1__309: java.util.function.Supplier bootstrap$()>();
$r10 = virtualinvoke $r8.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r9);
r11 = (java.lang.String) $r10;
$r12 = \"first\";
$z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r11);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r13 = new java.lang.RuntimeException;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"not expected value first!=\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);
throw $r13;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(2, 0.75F, 1);
r1 = $r0;
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"first\", null);
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"second\", null);
$r4 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_0__308: java.util.function.Function bootstrap$()>();
virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(\"first\", $r4);
$r6 = virtualinvoke r1.<java.util.LinkedHashMap: java.util.Set keySet()>();
$r7 = interfaceinvoke $r6.<java.util.Set: java.util.stream.Stream stream()>();
$r8 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.Optional findFirst()>();
$r9 = staticinvoke <javaT.util.LinkedHashMap.ComputeIfAbsentAccessOrder$lambda_main_1__309: java.util.function.Supplier bootstrap$()>();
$r10 = virtualinvoke $r8.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r9);
r11 = (java.lang.String) $r10;
$r12 = \"first\";
$z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r11);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
