digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r59 := @parameter0: java.lang.String[];
i3 = 0;
$r0 = newarray (java.math.BigDecimal[])[14];
$r1 = newarray (java.math.BigDecimal)[2];
$r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r1[0] = $r2;
$r3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r1[1] = $r3;
$r0[0] = $r1;
$r4 = newarray (java.math.BigDecimal)[2];
$r5 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4[0] = $r5;
$r6 = <java.math.BigDecimal: java.math.BigDecimal TEN>;
$r4[1] = $r6;
$r0[1] = $r4;
$r7 = newarray (java.math.BigDecimal)[2];
$r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);
$r7[0] = $r8;
$r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);
$r7[1] = $r9;
$r0[2] = $r7;
$r10 = newarray (java.math.BigDecimal)[2];
$r11 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r10[0] = $r11;
$r12 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r10[1] = $r12;
$r0[3] = $r10;
$r13 = newarray (java.math.BigDecimal)[2];
$r14 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(12345678L);
$r13[0] = $r14;
$r15 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(12345678L);
$r13[1] = $r15;
$r0[4] = $r13;
$r16 = newarray (java.math.BigDecimal)[2];
$r17 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(123456789L);
$r16[0] = $r17;
$r18 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(123456788L);
$r16[1] = $r18;
$r0[5] = $r16;
$r19 = newarray (java.math.BigDecimal)[2];
$r20 = new java.math.BigDecimal;
specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789123456789123\");
$r19[0] = $r20;
$r21 = new java.math.BigDecimal;
$r22 = new java.math.BigInteger;
specialinvoke $r22.<java.math.BigInteger: void <init>(java.lang.String)>(\"123456789123456789123\");
specialinvoke $r21.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r22);
$r19[1] = $r21;
$r0[6] = $r19;
$r23 = newarray (java.math.BigDecimal)[2];
$r24 = new java.math.BigDecimal;
specialinvoke $r24.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789123456789123\");
$r23[0] = $r24;
$r25 = new java.math.BigDecimal;
$r26 = new java.math.BigInteger;
specialinvoke $r26.<java.math.BigInteger: void <init>(java.lang.String)>(\"123456789123456789124\");
specialinvoke $r25.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r26);
$r23[1] = $r25;
$r0[7] = $r23;
$r27 = newarray (java.math.BigDecimal)[2];
$r28 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r27[0] = $r28;
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(java.lang.String)>(\"-9223372036854775808\");
$r27[1] = $r29;
$r0[8] = $r27;
$r30 = newarray (java.math.BigDecimal)[2];
$r31 = new java.math.BigDecimal;
specialinvoke $r31.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9223372036854775808\");
$r30[0] = $r31;
$r32 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r30[1] = $r32;
$r0[9] = $r30;
$r33 = newarray (java.math.BigDecimal)[2];
$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 10.0);
$l0 = staticinvoke <java.lang.Math: long round(double)>($d0);
$r34 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l0);
$r33[0] = $r34;
$r35 = new java.math.BigDecimal;
specialinvoke $r35.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1024\");
$r33[1] = $r35;
$r0[10] = $r33;
$r36 = newarray (java.math.BigDecimal)[2];
$r37 = new java.math.BigDecimal;
specialinvoke $r37.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1020\");
$r36[0] = $r37;
$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 11.0);
$r38 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
$r36[1] = $r38;
$r0[11] = $r36;
$r39 = newarray (java.math.BigDecimal)[2];
$r40 = new java.math.BigDecimal;
$r41 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);
$r42 = virtualinvoke $r41.<java.math.BigInteger: java.math.BigInteger pow(int)>(65);
specialinvoke $r40.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r42);
$r39[0] = $r40;
$r43 = new java.math.BigDecimal;
specialinvoke $r43.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103232\");
$r39[1] = $r43;
$r0[12] = $r39;
$r44 = newarray (java.math.BigDecimal)[2];
$r45 = new java.math.BigDecimal;
specialinvoke $r45.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103231.81\");
$r44[0] = $r45;
$r46 = new java.math.BigDecimal;
specialinvoke $r46.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103231.811\");
$r44[1] = $r46;
$r0[13] = $r44;
r47 = $r0;
$r48 = <java.lang.Boolean: java.lang.Boolean TRUE>;
z0 = virtualinvoke $r48.<java.lang.Boolean: boolean booleanValue()>();
r49 = r47;
i1 = lengthof r49;
i4 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i4 >= i1 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r56 = r49[i4];
$r58 = r56[0];
$r57 = r56[1];
$i2 = staticinvoke <javaT.math.BigDecimal.EqualsTests: int equalsTest(java.math.BigDecimal,java.math.BigDecimal,boolean)>($r58, $r57, z0);
i3 = i3 + $i2;
if z0 != 0 goto $z1 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z1 = 1;
goto [?= z0 = $z1];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z1 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
z0 = $z1;
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if i3 <= 0 goto return;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r50 = new java.lang.RuntimeException;
$r51 = new java.lang.StringBuilder;
specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Inccured \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failures while testing equals.\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String)>($r55);
throw $r50;
"
    "Block 8:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r59 := @parameter0: java.lang.String[];
i3 = 0;
$r0 = newarray (java.math.BigDecimal[])[14];
$r1 = newarray (java.math.BigDecimal)[2];
$r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r1[0] = $r2;
$r3 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
$r1[1] = $r3;
$r0[0] = $r1;
$r4 = newarray (java.math.BigDecimal)[2];
$r5 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
$r4[0] = $r5;
$r6 = <java.math.BigDecimal: java.math.BigDecimal TEN>;
$r4[1] = $r6;
$r0[1] = $r4;
$r7 = newarray (java.math.BigDecimal)[2];
$r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);
$r7[0] = $r8;
$r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);
$r7[1] = $r9;
$r0[2] = $r7;
$r10 = newarray (java.math.BigDecimal)[2];
$r11 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r10[0] = $r11;
$r12 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775807L);
$r10[1] = $r12;
$r0[3] = $r10;
$r13 = newarray (java.math.BigDecimal)[2];
$r14 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(12345678L);
$r13[0] = $r14;
$r15 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(12345678L);
$r13[1] = $r15;
$r0[4] = $r13;
$r16 = newarray (java.math.BigDecimal)[2];
$r17 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(123456789L);
$r16[0] = $r17;
$r18 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(123456788L);
$r16[1] = $r18;
$r0[5] = $r16;
$r19 = newarray (java.math.BigDecimal)[2];
$r20 = new java.math.BigDecimal;
specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789123456789123\");
$r19[0] = $r20;
$r21 = new java.math.BigDecimal;
$r22 = new java.math.BigInteger;
specialinvoke $r22.<java.math.BigInteger: void <init>(java.lang.String)>(\"123456789123456789123\");
specialinvoke $r21.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r22);
$r19[1] = $r21;
$r0[6] = $r19;
$r23 = newarray (java.math.BigDecimal)[2];
$r24 = new java.math.BigDecimal;
specialinvoke $r24.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789123456789123\");
$r23[0] = $r24;
$r25 = new java.math.BigDecimal;
$r26 = new java.math.BigInteger;
specialinvoke $r26.<java.math.BigInteger: void <init>(java.lang.String)>(\"123456789123456789124\");
specialinvoke $r25.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r26);
$r23[1] = $r25;
$r0[7] = $r23;
$r27 = newarray (java.math.BigDecimal)[2];
$r28 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);
$r27[0] = $r28;
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(java.lang.String)>(\"-9223372036854775808\");
$r27[1] = $r29;
$r0[8] = $r27;
$r30 = newarray (java.math.BigDecimal)[2];
$r31 = new java.math.BigDecimal;
specialinvoke $r31.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9223372036854775808\");
$r30[0] = $r31;
$r32 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);
$r30[1] = $r32;
$r0[9] = $r30;
$r33 = newarray (java.math.BigDecimal)[2];
$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 10.0);
$l0 = staticinvoke <java.lang.Math: long round(double)>($d0);
$r34 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l0);
$r33[0] = $r34;
$r35 = new java.math.BigDecimal;
specialinvoke $r35.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1024\");
$r33[1] = $r35;
$r0[10] = $r33;
$r36 = newarray (java.math.BigDecimal)[2];
$r37 = new java.math.BigDecimal;
specialinvoke $r37.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1020\");
$r36[0] = $r37;
$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 11.0);
$r38 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
$r36[1] = $r38;
$r0[11] = $r36;
$r39 = newarray (java.math.BigDecimal)[2];
$r40 = new java.math.BigDecimal;
$r41 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);
$r42 = virtualinvoke $r41.<java.math.BigInteger: java.math.BigInteger pow(int)>(65);
specialinvoke $r40.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r42);
$r39[0] = $r40;
$r43 = new java.math.BigDecimal;
specialinvoke $r43.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103232\");
$r39[1] = $r43;
$r0[12] = $r39;
$r44 = newarray (java.math.BigDecimal)[2];
$r45 = new java.math.BigDecimal;
specialinvoke $r45.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103231.81\");
$r44[0] = $r45;
$r46 = new java.math.BigDecimal;
specialinvoke $r46.<java.math.BigDecimal: void <init>(java.lang.String)>(\"36893488147419103231.811\");
$r44[1] = $r46;
$r0[13] = $r44;
r47 = $r0;
$r48 = <java.lang.Boolean: java.lang.Boolean TRUE>;
z0 = virtualinvoke $r48.<java.lang.Boolean: boolean booleanValue()>();
r49 = r47;
i1 = lengthof r49;
i4 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i4 >= i1 goto (branch);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i4 >= i1 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r56 = r49[i4];
$r58 = r56[0];
$r57 = r56[1];
$i2 = staticinvoke <javaT.math.BigDecimal.EqualsTests: int equalsTest(java.math.BigDecimal,java.math.BigDecimal,boolean)>($r58, $r57, z0);
i3 = i3 + $i2;
if z0 != 0 goto $z1 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i4 >= i1 goto (branch);
"->"Block 6:
[preds: 1 ] [succs: 7 8 ]
if i3 <= 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r56 = r49[i4];
$r58 = r56[0];
$r57 = r56[1];
$i2 = staticinvoke <javaT.math.BigDecimal.EqualsTests: int equalsTest(java.math.BigDecimal,java.math.BigDecimal,boolean)>($r58, $r57, z0);
i3 = i3 + $i2;
if z0 != 0 goto $z1 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z1 = 1;
goto [?= z0 = $z1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r56 = r49[i4];
$r58 = r56[0];
$r57 = r56[1];
$i2 = staticinvoke <javaT.math.BigDecimal.EqualsTests: int equalsTest(java.math.BigDecimal,java.math.BigDecimal,boolean)>($r58, $r57, z0);
i3 = i3 + $i2;
if z0 != 0 goto $z1 = 0;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$z1 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z1 = 1;
goto [?= z0 = $z1];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
z0 = $z1;
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z1 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
z0 = $z1;
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
z0 = $z1;
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i4 >= i1 goto (branch);
";
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if i3 <= 0 goto return;
"->"Block 7:
[preds: 6 ] [succs: ]
$r50 = new java.lang.RuntimeException;
$r51 = new java.lang.StringBuilder;
specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Inccured \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failures while testing equals.\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String)>($r55);
throw $r50;
";
    "Block 6:
[preds: 1 ] [succs: 7 8 ]
if i3 <= 0 goto return;
"->"Block 8:
[preds: 6 ] [succs: ]
return;
";
}
