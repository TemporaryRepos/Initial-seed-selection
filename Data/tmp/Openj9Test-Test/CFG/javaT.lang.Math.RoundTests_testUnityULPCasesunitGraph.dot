digraph "unitGraph" {
    "i4 = 0"
    "$r0 = newarray (float)[2]"
    "$r0[0] = -1.0F"
    "$r0[1] = 1.0F"
    "r6 = $r0"
    "i5 = lengthof r6"
    "i6 = 0"
    "if i6 >= i5 goto (branch)"
    "f3 = r6[i6]"
    "$r4 = newarray (float)[2]"
    "$r4[0] = 8388608.0F"
    "$r4[1] = 1.6777216E7F"
    "r5 = $r4"
    "i7 = lengthof r5"
    "i8 = 0"
    "if i8 >= i7 goto i6 = i6 + 1"
    "f4 = r5[i8]"
    "i9 = -5"
    "if i9 > 5 goto i8 = i8 + 1"
    "$f0 = (float) i9"
    "$f1 = f4 + $f0"
    "f2 = $f1 * f3"
    "$i2 = staticinvoke <java.lang.Math: int round(float)>(f2)"
    "f5 = (float) $i2"
    "$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,float,float,float)>(\"Math.round\", f2, f5, f2)"
    "i4 = i4 + $i3"
    "i9 = i9 + 1"
    "goto [?= (branch)]"
    "i8 = i8 + 1"
    "i6 = i6 + 1"
    "if i4 == 0 goto $r1 = newarray (double)[2]"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println()>()"
    "$r1 = newarray (double)[2]"
    "$r1[0] = -1.0"
    "$r1[1] = 1.0"
    "r7 = $r1"
    "i10 = lengthof r7"
    "i11 = 0"
    "if i11 >= i10 goto return i4"
    "d4 = r7[i11]"
    "$r2 = newarray (double)[2]"
    "$r2[0] = 4.503599627370496E15"
    "$r2[1] = 9.007199254740992E15"
    "r8 = $r2"
    "i12 = lengthof r8"
    "i13 = 0"
    "if i13 >= i12 goto i11 = i11 + 1"
    "d5 = r8[i13]"
    "i14 = -5"
    "if i14 > 5 goto i13 = i13 + 1"
    "$d0 = (double) i14"
    "$d1 = d5 + $d0"
    "d2 = $d1 * d4"
    "$l0 = staticinvoke <java.lang.Math: long round(double)>(d2)"
    "d3 = (double) $l0"
    "$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.round\", d2, d3, d2)"
    "i4 = i4 + $i1"
    "i14 = i14 + 1"
    "i13 = i13 + 1"
    "i11 = i11 + 1"
    "return i4"
    "i4 = 0"->"$r0 = newarray (float)[2]";
    "$r0 = newarray (float)[2]"->"$r0[0] = -1.0F";
    "$r0[0] = -1.0F"->"$r0[1] = 1.0F";
    "$r0[1] = 1.0F"->"r6 = $r0";
    "r6 = $r0"->"i5 = lengthof r6";
    "i5 = lengthof r6"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto (branch)";
    "if i6 >= i5 goto (branch)"->"f3 = r6[i6]";
    "if i6 >= i5 goto (branch)"->"if i4 == 0 goto $r1 = newarray (double)[2]";
    "f3 = r6[i6]"->"$r4 = newarray (float)[2]";
    "$r4 = newarray (float)[2]"->"$r4[0] = 8388608.0F";
    "$r4[0] = 8388608.0F"->"$r4[1] = 1.6777216E7F";
    "$r4[1] = 1.6777216E7F"->"r5 = $r4";
    "r5 = $r4"->"i7 = lengthof r5";
    "i7 = lengthof r5"->"i8 = 0";
    "i8 = 0"->"if i8 >= i7 goto i6 = i6 + 1";
    "if i8 >= i7 goto i6 = i6 + 1"->"f4 = r5[i8]";
    "if i8 >= i7 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "f4 = r5[i8]"->"i9 = -5";
    "i9 = -5"->"if i9 > 5 goto i8 = i8 + 1";
    "if i9 > 5 goto i8 = i8 + 1"->"$f0 = (float) i9";
    "if i9 > 5 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$f0 = (float) i9"->"$f1 = f4 + $f0";
    "$f1 = f4 + $f0"->"f2 = $f1 * f3";
    "f2 = $f1 * f3"->"$i2 = staticinvoke <java.lang.Math: int round(float)>(f2)";
    "$i2 = staticinvoke <java.lang.Math: int round(float)>(f2)"->"f5 = (float) $i2";
    "f5 = (float) $i2"->"$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,float,float,float)>(\"Math.round\", f2, f5, f2)";
    "$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,float,float,float)>(\"Math.round\", f2, f5, f2)"->"i4 = i4 + $i3";
    "i4 = i4 + $i3"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 > 5 goto i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= i7 goto i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto (branch)";
    "if i4 == 0 goto $r1 = newarray (double)[2]"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if i4 == 0 goto $r1 = newarray (double)[2]"->"$r1 = newarray (double)[2]";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println()>()";
    "virtualinvoke $r3.<java.io.PrintStream: void println()>()"->"$r1 = newarray (double)[2]";
    "$r1 = newarray (double)[2]"->"$r1[0] = -1.0";
    "$r1[0] = -1.0"->"$r1[1] = 1.0";
    "$r1[1] = 1.0"->"r7 = $r1";
    "r7 = $r1"->"i10 = lengthof r7";
    "i10 = lengthof r7"->"i11 = 0";
    "i11 = 0"->"if i11 >= i10 goto return i4";
    "if i11 >= i10 goto return i4"->"d4 = r7[i11]";
    "if i11 >= i10 goto return i4"->"return i4";
    "d4 = r7[i11]"->"$r2 = newarray (double)[2]";
    "$r2 = newarray (double)[2]"->"$r2[0] = 4.503599627370496E15";
    "$r2[0] = 4.503599627370496E15"->"$r2[1] = 9.007199254740992E15";
    "$r2[1] = 9.007199254740992E15"->"r8 = $r2";
    "r8 = $r2"->"i12 = lengthof r8";
    "i12 = lengthof r8"->"i13 = 0";
    "i13 = 0"->"if i13 >= i12 goto i11 = i11 + 1";
    "if i13 >= i12 goto i11 = i11 + 1"->"d5 = r8[i13]";
    "if i13 >= i12 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "d5 = r8[i13]"->"i14 = -5";
    "i14 = -5"->"if i14 > 5 goto i13 = i13 + 1";
    "if i14 > 5 goto i13 = i13 + 1"->"$d0 = (double) i14";
    "if i14 > 5 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$d0 = (double) i14"->"$d1 = d5 + $d0";
    "$d1 = d5 + $d0"->"d2 = $d1 * d4";
    "d2 = $d1 * d4"->"$l0 = staticinvoke <java.lang.Math: long round(double)>(d2)";
    "$l0 = staticinvoke <java.lang.Math: long round(double)>(d2)"->"d3 = (double) $l0";
    "d3 = (double) $l0"->"$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.round\", d2, d3, d2)";
    "$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.round\", d2, d3, d2)"->"i4 = i4 + $i1";
    "i4 = i4 + $i1"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 > 5 goto i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= i12 goto i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= i10 goto return i4";
}
