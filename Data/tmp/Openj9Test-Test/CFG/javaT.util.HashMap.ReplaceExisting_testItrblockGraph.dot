digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.HashMap;
i0 := @parameter1: int;
$i1 = virtualinvoke r0.<java.util.HashMap: int size()>();
if i0 <= $i1 goto $r1 = new java.util.HashSet;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r28 = new java.lang.IllegalArgumentException;
specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Error in test: elemBeforePut must be <= HashMap size\");
throw $r28;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashSet;
$i2 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2);
r2 = $r1;
$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3);
$r4 = new java.util.HashSet;
$i3 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3);
r5 = $r4;
$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
i4 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r21 = (java.lang.Integer) $r20;
$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21);
if $z4 != 0 goto i4 = i4 + 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r22 = new java.lang.RuntimeException;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27);
throw $r22;
"
    "Block 6:
[preds: 4 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);
$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
"
    "Block 8:
[preds: 7 ] [succs: ]
$r19 = new java.lang.RuntimeException;
specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error in test: expected key 0 to be in the HashMap\");
throw $r19;
"
    "Block 9:
[preds: 7 12 ] [succs: 10 13 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r29 = (java.lang.Integer) $r12;
$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29);
if $z3 != 0 goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: ]
$r13 = new java.lang.RuntimeException;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);
throw $r13;
"
    "Block 12:
[preds: 10 ] [succs: 9 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 13:
[preds: 9 ] [succs: 14 15 ]
$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
if $z2 != 0 goto return;
"
    "Block 14:
[preds: 13 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Collected keys do not match original set of keys\");
throw $r11;
"
    "Block 15:
[preds: 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.HashMap;
i0 := @parameter1: int;
$i1 = virtualinvoke r0.<java.util.HashMap: int size()>();
if i0 <= $i1 goto $r1 = new java.util.HashSet;
"->"Block 1:
[preds: 0 ] [succs: ]
$r28 = new java.lang.IllegalArgumentException;
specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Error in test: elemBeforePut must be <= HashMap size\");
throw $r28;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.HashMap;
i0 := @parameter1: int;
$i1 = virtualinvoke r0.<java.util.HashMap: int size()>();
if i0 <= $i1 goto $r1 = new java.util.HashSet;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashSet;
$i2 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2);
r2 = $r1;
$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3);
$r4 = new java.util.HashSet;
$i3 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3);
r5 = $r4;
$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
i4 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashSet;
$i2 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i2);
r2 = $r1;
$r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r3);
$r4 = new java.util.HashSet;
$i3 = virtualinvoke r0.<java.util.HashMap: int size()>();
specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i3);
r5 = $r4;
$r6 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
i4 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r21 = (java.lang.Integer) $r20;
$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21);
if $z4 != 0 goto i4 = i4 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
"->"Block 7:
[preds: 3 ] [succs: 8 9 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);
$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r21 = (java.lang.Integer) $r20;
$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21);
if $z4 != 0 goto i4 = i4 + 1;
"->"Block 5:
[preds: 4 ] [succs: ]
$r22 = new java.lang.RuntimeException;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27);
throw $r22;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r21 = (java.lang.Integer) $r20;
$z4 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r21);
if $z4 != 0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 4 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i4 >= i0 goto $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);
$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
"->"Block 8:
[preds: 7 ] [succs: ]
$r19 = new java.lang.RuntimeException;
specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Error in test: expected key 0 to be in the HashMap\");
throw $r19;
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);
$r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
if null != $r10 goto $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
"->"Block 9:
[preds: 7 12 ] [succs: 10 13 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
";
    "Block 9:
[preds: 7 12 ] [succs: 10 13 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r29 = (java.lang.Integer) $r12;
$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29);
if $z3 != 0 goto (branch);
";
    "Block 9:
[preds: 7 12 ] [succs: 10 13 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
"->"Block 13:
[preds: 9 ] [succs: 14 15 ]
$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
if $z2 != 0 goto return;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r29 = (java.lang.Integer) $r12;
$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29);
if $z3 != 0 goto (branch);
"->"Block 11:
[preds: 10 ] [succs: ]
$r13 = new java.lang.RuntimeException;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Corrupt iterator: key \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already encountered\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);
throw $r13;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r29 = (java.lang.Integer) $r12;
$z3 = virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r29);
if $z3 != 0 goto (branch);
"->"Block 12:
[preds: 10 ] [succs: 9 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 12:
[preds: 10 ] [succs: 9 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 9:
[preds: 7 12 ] [succs: 10 13 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
";
    "Block 13:
[preds: 9 ] [succs: 14 15 ]
$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
if $z2 != 0 goto return;
"->"Block 14:
[preds: 13 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Collected keys do not match original set of keys\");
throw $r11;
";
    "Block 13:
[preds: 9 ] [succs: 14 15 ]
$z2 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r5);
if $z2 != 0 goto return;
"->"Block 15:
[preds: 13 ] [succs: ]
return;
";
}
