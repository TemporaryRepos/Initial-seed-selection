digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i17 = 0;
"
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i17 >= $i0 goto r28 = newarray (int)[1114111];
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
r23 = $r2[i17];
i18 = 0;
i19 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i10 = virtualinvoke r23.<java.lang.String: int length()>();
if i19 >= $i10 goto r24 = newarray (int)[i18];
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
i20 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i19);
i18 = i18 + 1;
$i16 = staticinvoke <java.lang.Character: int charCount(int)>(i20);
i19 = i19 + $i16;
goto [?= $i10 = virtualinvoke r23.<java.lang.String: int length()>()];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
r24 = newarray (int)[i18];
i21 = 0;
i22 = 0;
i23 = 0;
i24 = 0;
"
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$i11 = virtualinvoke r23.<java.lang.String: int length()>();
if i24 >= $i11 goto $r3 = new java.lang.String;
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
if i22 != 0 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i14 = virtualinvoke r23.<java.lang.String: int length()>();
$i15 = $i14 / 2;
if i24 < $i15 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
i22 = i24;
i23 = i21;
"
    "Block 10:
[preds: 7 8 9 ] [succs: 6 ]
i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
$i26 = i21;
i21 = i21 + 1;
r24[$i26] = i25;
$i27 = staticinvoke <java.lang.Character: int charCount(int)>(i25);
i24 = i24 + $i27;
goto [?= $i11 = virtualinvoke r23.<java.lang.String: int length()>()];
"
    "Block 11:
[preds: 6 ] [succs: 12 13 ]
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i21);
r25 = $r3;
$z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>(r25);
if $z0 != 0 goto $z3 = 0;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r4 = new java.lang.StringBuilder];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) with input[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z3, $r8);
$r9 = new java.lang.String;
specialinvoke $r9.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i23);
r26 = $r9;
$r10 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, i22);
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r26);
if $z1 != 0 goto $z4 = 0;
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= $r11 = new java.lang.StringBuilder];
"
    "Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
"
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"first half: new String(int[]...) with input[\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r15);
$r16 = new java.lang.String;
$i12 = i21 - i23;
specialinvoke $r16.<java.lang.String: void <init>(int[],int,int)>(r24, i23, $i12);
r27 = $r16;
$r17 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i22);
$z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);
if $z2 != 0 goto $z5 = 0;
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z5 = 1;
goto [?= $r18 = new java.lang.StringBuilder];
"
    "Block 19:
[preds: 17 ] [succs: 20 ]
$z5 = 0;
"
    "Block 20:
[preds: 18 19 ] [succs: 1 ]
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"second half: new String(int[]...) with input[\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z5, $r22);
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(null, 0, i21, class \"Ljava/lang/NullPointerException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, -1, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
$i13 = i21 + 1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, $i13, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, -1, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i21, 1, class \"Ljava/lang/IndexOutOfBoundsException;\");
r24[i23] = -1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
r24[i23] = 1114112;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
i17 = i17 + 1;
goto [?= $r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>];
"
    "Block 21:
[preds: 1 ] [succs: 22 ]
r28 = newarray (int)[1114111];
i28 = 0;
"
    "Block 22:
[preds: 21 25 ] [succs: 23 26 ]
$i1 = lengthof r28;
if i28 >= $i1 goto $r1 = new java.lang.String;
"
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i28 == 56319 goto i28 = i28 + 1;
"
    "Block 24:
[preds: 23 ] [succs: 25 ]
r28[i28] = i28;
"
    "Block 25:
[preds: 23 24 ] [succs: 22 ]
i28 = i28 + 1;
goto [?= $i1 = lengthof r28];
"
    "Block 26:
[preds: 22 ] [succs: 27 28 ]
$r1 = new java.lang.String;
$i2 = lengthof r28;
specialinvoke $r1.<java.lang.String: void <init>(int[],int,int)>(r28, 0, $i2);
r29 = $r1;
$i3 = virtualinvoke r29.<java.lang.String: int length()>();
$i4 = virtualinvoke r29.<java.lang.String: int codePointCount(int,int)>(0, $i3);
$i5 = lengthof r28;
if $i4 == $i5 goto $z6 = 0;
"
    "Block 27:
[preds: 26 ] [succs: 29 ]
$z6 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\")];
"
    "Block 28:
[preds: 26 ] [succs: 29 ]
$z6 = 0;
"
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\");
$i6 = virtualinvoke r29.<java.lang.String: int length()>();
$i7 = lengthof r28;
if $i6 > $i7 goto $z7 = 0;
"
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z7 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\")];
"
    "Block 31:
[preds: 29 ] [succs: 32 ]
$z7 = 0;
"
    "Block 32:
[preds: 30 31 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\");
i29 = 0;
i30 = 0;
"
    "Block 33:
[preds: 32 37 ] [succs: 34 38 ]
$i31 = lengthof r28;
if i29 >= $i31 goto return;
"
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
i32 = virtualinvoke r29.<java.lang.String: int codePointAt(int)>(i30);
$i8 = r28[i29];
if i32 == $i8 goto $z8 = 0;
"
    "Block 35:
[preds: 34 ] [succs: 37 ]
$z8 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\")];
"
    "Block 36:
[preds: 34 ] [succs: 37 ]
$z8 = 0;
"
    "Block 37:
[preds: 35 36 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\");
$i9 = staticinvoke <java.lang.Character: int charCount(int)>(i32);
i30 = i30 + $i9;
i29 = i29 + 1;
goto [?= $i31 = lengthof r28];
"
    "Block 38:
[preds: 33 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i17 = 0;
"->"Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i17 >= $i0 goto r28 = newarray (int)[1114111];
";
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i17 >= $i0 goto r28 = newarray (int)[1114111];
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
r23 = $r2[i17];
i18 = 0;
i19 = 0;
";
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i17 >= $i0 goto r28 = newarray (int)[1114111];
"->"Block 21:
[preds: 1 ] [succs: 22 ]
r28 = newarray (int)[1114111];
i28 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
r23 = $r2[i17];
i18 = 0;
i19 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i10 = virtualinvoke r23.<java.lang.String: int length()>();
if i19 >= $i10 goto r24 = newarray (int)[i18];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i10 = virtualinvoke r23.<java.lang.String: int length()>();
if i19 >= $i10 goto r24 = newarray (int)[i18];
"->"Block 4:
[preds: 3 ] [succs: 3 ]
i20 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i19);
i18 = i18 + 1;
$i16 = staticinvoke <java.lang.Character: int charCount(int)>(i20);
i19 = i19 + $i16;
goto [?= $i10 = virtualinvoke r23.<java.lang.String: int length()>()];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i10 = virtualinvoke r23.<java.lang.String: int length()>();
if i19 >= $i10 goto r24 = newarray (int)[i18];
"->"Block 5:
[preds: 3 ] [succs: 6 ]
r24 = newarray (int)[i18];
i21 = 0;
i22 = 0;
i23 = 0;
i24 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
i20 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i19);
i18 = i18 + 1;
$i16 = staticinvoke <java.lang.Character: int charCount(int)>(i20);
i19 = i19 + $i16;
goto [?= $i10 = virtualinvoke r23.<java.lang.String: int length()>()];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i10 = virtualinvoke r23.<java.lang.String: int length()>();
if i19 >= $i10 goto r24 = newarray (int)[i18];
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
r24 = newarray (int)[i18];
i21 = 0;
i22 = 0;
i23 = 0;
i24 = 0;
"->"Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$i11 = virtualinvoke r23.<java.lang.String: int length()>();
if i24 >= $i11 goto $r3 = new java.lang.String;
";
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$i11 = virtualinvoke r23.<java.lang.String: int length()>();
if i24 >= $i11 goto $r3 = new java.lang.String;
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
if i22 != 0 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
";
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$i11 = virtualinvoke r23.<java.lang.String: int length()>();
if i24 >= $i11 goto $r3 = new java.lang.String;
"->"Block 11:
[preds: 6 ] [succs: 12 13 ]
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i21);
r25 = $r3;
$z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>(r25);
if $z0 != 0 goto $z3 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
if i22 != 0 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$i14 = virtualinvoke r23.<java.lang.String: int length()>();
$i15 = $i14 / 2;
if i24 < $i15 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
if i22 != 0 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"->"Block 10:
[preds: 7 8 9 ] [succs: 6 ]
i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
$i26 = i21;
i21 = i21 + 1;
r24[$i26] = i25;
$i27 = staticinvoke <java.lang.Character: int charCount(int)>(i25);
i24 = i24 + $i27;
goto [?= $i11 = virtualinvoke r23.<java.lang.String: int length()>()];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i14 = virtualinvoke r23.<java.lang.String: int length()>();
$i15 = $i14 / 2;
if i24 < $i15 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"->"Block 9:
[preds: 8 ] [succs: 10 ]
i22 = i24;
i23 = i21;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i14 = virtualinvoke r23.<java.lang.String: int length()>();
$i15 = $i14 / 2;
if i24 < $i15 goto i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
"->"Block 10:
[preds: 7 8 9 ] [succs: 6 ]
i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
$i26 = i21;
i21 = i21 + 1;
r24[$i26] = i25;
$i27 = staticinvoke <java.lang.Character: int charCount(int)>(i25);
i24 = i24 + $i27;
goto [?= $i11 = virtualinvoke r23.<java.lang.String: int length()>()];
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
i22 = i24;
i23 = i21;
"->"Block 10:
[preds: 7 8 9 ] [succs: 6 ]
i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
$i26 = i21;
i21 = i21 + 1;
r24[$i26] = i25;
$i27 = staticinvoke <java.lang.Character: int charCount(int)>(i25);
i24 = i24 + $i27;
goto [?= $i11 = virtualinvoke r23.<java.lang.String: int length()>()];
";
    "Block 10:
[preds: 7 8 9 ] [succs: 6 ]
i25 = virtualinvoke r23.<java.lang.String: int codePointAt(int)>(i24);
$i26 = i21;
i21 = i21 + 1;
r24[$i26] = i25;
$i27 = staticinvoke <java.lang.Character: int charCount(int)>(i25);
i24 = i24 + $i27;
goto [?= $i11 = virtualinvoke r23.<java.lang.String: int length()>()];
"->"Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$i11 = virtualinvoke r23.<java.lang.String: int length()>();
if i24 >= $i11 goto $r3 = new java.lang.String;
";
    "Block 11:
[preds: 6 ] [succs: 12 13 ]
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i21);
r25 = $r3;
$z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>(r25);
if $z0 != 0 goto $z3 = 0;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r4 = new java.lang.StringBuilder];
";
    "Block 11:
[preds: 6 ] [succs: 12 13 ]
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i21);
r25 = $r3;
$z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>(r25);
if $z0 != 0 goto $z3 = 0;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r4 = new java.lang.StringBuilder];
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) with input[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z3, $r8);
$r9 = new java.lang.String;
specialinvoke $r9.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i23);
r26 = $r9;
$r10 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, i22);
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r26);
if $z1 != 0 goto $z4 = 0;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) with input[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z3, $r8);
$r9 = new java.lang.String;
specialinvoke $r9.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i23);
r26 = $r9;
$r10 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, i22);
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r26);
if $z1 != 0 goto $z4 = 0;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) with input[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z3, $r8);
$r9 = new java.lang.String;
specialinvoke $r9.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i23);
r26 = $r9;
$r10 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, i22);
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r26);
if $z1 != 0 goto $z4 = 0;
"->"Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= $r11 = new java.lang.StringBuilder];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new String(int[]...) with input[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z3, $r8);
$r9 = new java.lang.String;
specialinvoke $r9.<java.lang.String: void <init>(int[],int,int)>(r24, 0, i23);
r26 = $r9;
$r10 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, i22);
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r26);
if $z1 != 0 goto $z4 = 0;
"->"Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= $r11 = new java.lang.StringBuilder];
"->"Block 17:
[preds: 15 16 ] [succs: 18 19 ]
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"first half: new String(int[]...) with input[\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r15);
$r16 = new java.lang.String;
$i12 = i21 - i23;
specialinvoke $r16.<java.lang.String: void <init>(int[],int,int)>(r24, i23, $i12);
r27 = $r16;
$r17 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i22);
$z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);
if $z2 != 0 goto $z5 = 0;
";
    "Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
"->"Block 17:
[preds: 15 16 ] [succs: 18 19 ]
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"first half: new String(int[]...) with input[\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r15);
$r16 = new java.lang.String;
$i12 = i21 - i23;
specialinvoke $r16.<java.lang.String: void <init>(int[],int,int)>(r24, i23, $i12);
r27 = $r16;
$r17 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i22);
$z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);
if $z2 != 0 goto $z5 = 0;
";
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"first half: new String(int[]...) with input[\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r15);
$r16 = new java.lang.String;
$i12 = i21 - i23;
specialinvoke $r16.<java.lang.String: void <init>(int[],int,int)>(r24, i23, $i12);
r27 = $r16;
$r17 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i22);
$z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);
if $z2 != 0 goto $z5 = 0;
"->"Block 18:
[preds: 17 ] [succs: 20 ]
$z5 = 1;
goto [?= $r18 = new java.lang.StringBuilder];
";
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"first half: new String(int[]...) with input[\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z4, $r15);
$r16 = new java.lang.String;
$i12 = i21 - i23;
specialinvoke $r16.<java.lang.String: void <init>(int[],int,int)>(r24, i23, $i12);
r27 = $r16;
$r17 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(i22);
$z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r27);
if $z2 != 0 goto $z5 = 0;
"->"Block 19:
[preds: 17 ] [succs: 20 ]
$z5 = 0;
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z5 = 1;
goto [?= $r18 = new java.lang.StringBuilder];
"->"Block 20:
[preds: 18 19 ] [succs: 1 ]
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"second half: new String(int[]...) with input[\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z5, $r22);
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(null, 0, i21, class \"Ljava/lang/NullPointerException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, -1, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
$i13 = i21 + 1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, $i13, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, -1, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i21, 1, class \"Ljava/lang/IndexOutOfBoundsException;\");
r24[i23] = -1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
r24[i23] = 1114112;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
i17 = i17 + 1;
goto [?= $r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>];
";
    "Block 19:
[preds: 17 ] [succs: 20 ]
$z5 = 0;
"->"Block 20:
[preds: 18 19 ] [succs: 1 ]
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"second half: new String(int[]...) with input[\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z5, $r22);
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(null, 0, i21, class \"Ljava/lang/NullPointerException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, -1, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
$i13 = i21 + 1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, $i13, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, -1, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i21, 1, class \"Ljava/lang/IndexOutOfBoundsException;\");
r24[i23] = -1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
r24[i23] = 1114112;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
i17 = i17 + 1;
goto [?= $r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>];
";
    "Block 20:
[preds: 18 19 ] [succs: 1 ]
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"second half: new String(int[]...) with input[\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z5, $r22);
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(null, 0, i21, class \"Ljava/lang/NullPointerException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, -1, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
$i13 = i21 + 1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, $i13, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, i21, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i23, -1, class \"Ljava/lang/IndexOutOfBoundsException;\");
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, i21, 1, class \"Ljava/lang/IndexOutOfBoundsException;\");
r24[i23] = -1;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
r24[i23] = 1114112;
staticinvoke <javaT.lang.String.Supplementary: void testNewString(int[],int,int,java.lang.Class)>(r24, 0, i21, class \"Ljava/lang/IllegalArgumentException;\");
i17 = i17 + 1;
goto [?= $r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>];
"->"Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$r0 = <javaT.lang.String.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i17 >= $i0 goto r28 = newarray (int)[1114111];
";
    "Block 21:
[preds: 1 ] [succs: 22 ]
r28 = newarray (int)[1114111];
i28 = 0;
"->"Block 22:
[preds: 21 25 ] [succs: 23 26 ]
$i1 = lengthof r28;
if i28 >= $i1 goto $r1 = new java.lang.String;
";
    "Block 22:
[preds: 21 25 ] [succs: 23 26 ]
$i1 = lengthof r28;
if i28 >= $i1 goto $r1 = new java.lang.String;
"->"Block 23:
[preds: 22 ] [succs: 24 25 ]
if i28 == 56319 goto i28 = i28 + 1;
";
    "Block 22:
[preds: 21 25 ] [succs: 23 26 ]
$i1 = lengthof r28;
if i28 >= $i1 goto $r1 = new java.lang.String;
"->"Block 26:
[preds: 22 ] [succs: 27 28 ]
$r1 = new java.lang.String;
$i2 = lengthof r28;
specialinvoke $r1.<java.lang.String: void <init>(int[],int,int)>(r28, 0, $i2);
r29 = $r1;
$i3 = virtualinvoke r29.<java.lang.String: int length()>();
$i4 = virtualinvoke r29.<java.lang.String: int codePointCount(int,int)>(0, $i3);
$i5 = lengthof r28;
if $i4 == $i5 goto $z6 = 0;
";
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i28 == 56319 goto i28 = i28 + 1;
"->"Block 24:
[preds: 23 ] [succs: 25 ]
r28[i28] = i28;
";
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i28 == 56319 goto i28 = i28 + 1;
"->"Block 25:
[preds: 23 24 ] [succs: 22 ]
i28 = i28 + 1;
goto [?= $i1 = lengthof r28];
";
    "Block 24:
[preds: 23 ] [succs: 25 ]
r28[i28] = i28;
"->"Block 25:
[preds: 23 24 ] [succs: 22 ]
i28 = i28 + 1;
goto [?= $i1 = lengthof r28];
";
    "Block 25:
[preds: 23 24 ] [succs: 22 ]
i28 = i28 + 1;
goto [?= $i1 = lengthof r28];
"->"Block 22:
[preds: 21 25 ] [succs: 23 26 ]
$i1 = lengthof r28;
if i28 >= $i1 goto $r1 = new java.lang.String;
";
    "Block 26:
[preds: 22 ] [succs: 27 28 ]
$r1 = new java.lang.String;
$i2 = lengthof r28;
specialinvoke $r1.<java.lang.String: void <init>(int[],int,int)>(r28, 0, $i2);
r29 = $r1;
$i3 = virtualinvoke r29.<java.lang.String: int length()>();
$i4 = virtualinvoke r29.<java.lang.String: int codePointCount(int,int)>(0, $i3);
$i5 = lengthof r28;
if $i4 == $i5 goto $z6 = 0;
"->"Block 27:
[preds: 26 ] [succs: 29 ]
$z6 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\")];
";
    "Block 26:
[preds: 22 ] [succs: 27 28 ]
$r1 = new java.lang.String;
$i2 = lengthof r28;
specialinvoke $r1.<java.lang.String: void <init>(int[],int,int)>(r28, 0, $i2);
r29 = $r1;
$i3 = virtualinvoke r29.<java.lang.String: int length()>();
$i4 = virtualinvoke r29.<java.lang.String: int codePointCount(int,int)>(0, $i3);
$i5 = lengthof r28;
if $i4 == $i5 goto $z6 = 0;
"->"Block 28:
[preds: 26 ] [succs: 29 ]
$z6 = 0;
";
    "Block 27:
[preds: 26 ] [succs: 29 ]
$z6 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\")];
"->"Block 29:
[preds: 27 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\");
$i6 = virtualinvoke r29.<java.lang.String: int length()>();
$i7 = lengthof r28;
if $i6 > $i7 goto $z7 = 0;
";
    "Block 28:
[preds: 26 ] [succs: 29 ]
$z6 = 0;
"->"Block 29:
[preds: 27 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\");
$i6 = virtualinvoke r29.<java.lang.String: int length()>();
$i7 = lengthof r28;
if $i6 > $i7 goto $z7 = 0;
";
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\");
$i6 = virtualinvoke r29.<java.lang.String: int length()>();
$i7 = lengthof r28;
if $i6 > $i7 goto $z7 = 0;
"->"Block 30:
[preds: 29 ] [succs: 32 ]
$z7 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\")];
";
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z6, \"s.codePointCount(0, s.length()) != x.length\");
$i6 = virtualinvoke r29.<java.lang.String: int length()>();
$i7 = lengthof r28;
if $i6 > $i7 goto $z7 = 0;
"->"Block 31:
[preds: 29 ] [succs: 32 ]
$z7 = 0;
";
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z7 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\")];
"->"Block 32:
[preds: 30 31 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\");
i29 = 0;
i30 = 0;
";
    "Block 31:
[preds: 29 ] [succs: 32 ]
$z7 = 0;
"->"Block 32:
[preds: 30 31 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\");
i29 = 0;
i30 = 0;
";
    "Block 32:
[preds: 30 31 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z7, \"s.length() <= x.length\");
i29 = 0;
i30 = 0;
"->"Block 33:
[preds: 32 37 ] [succs: 34 38 ]
$i31 = lengthof r28;
if i29 >= $i31 goto return;
";
    "Block 33:
[preds: 32 37 ] [succs: 34 38 ]
$i31 = lengthof r28;
if i29 >= $i31 goto return;
"->"Block 34:
[preds: 33 ] [succs: 35 36 ]
i32 = virtualinvoke r29.<java.lang.String: int codePointAt(int)>(i30);
$i8 = r28[i29];
if i32 == $i8 goto $z8 = 0;
";
    "Block 33:
[preds: 32 37 ] [succs: 34 38 ]
$i31 = lengthof r28;
if i29 >= $i31 goto return;
"->"Block 38:
[preds: 33 ] [succs: ]
return;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
i32 = virtualinvoke r29.<java.lang.String: int codePointAt(int)>(i30);
$i8 = r28[i29];
if i32 == $i8 goto $z8 = 0;
"->"Block 35:
[preds: 34 ] [succs: 37 ]
$z8 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\")];
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
i32 = virtualinvoke r29.<java.lang.String: int codePointAt(int)>(i30);
$i8 = r28[i29];
if i32 == $i8 goto $z8 = 0;
"->"Block 36:
[preds: 34 ] [succs: 37 ]
$z8 = 0;
";
    "Block 35:
[preds: 34 ] [succs: 37 ]
$z8 = 1;
goto [?= staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\")];
"->"Block 37:
[preds: 35 36 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\");
$i9 = staticinvoke <java.lang.Character: int charCount(int)>(i32);
i30 = i30 + $i9;
i29 = i29 + 1;
goto [?= $i31 = lengthof r28];
";
    "Block 36:
[preds: 34 ] [succs: 37 ]
$z8 = 0;
"->"Block 37:
[preds: 35 36 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\");
$i9 = staticinvoke <java.lang.Character: int charCount(int)>(i32);
i30 = i30 + $i9;
i29 = i29 + 1;
goto [?= $i31 = lengthof r28];
";
    "Block 37:
[preds: 35 36 ] [succs: 33 ]
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>($z8, \"c != x[i]\");
$i9 = staticinvoke <java.lang.Character: int charCount(int)>(i32);
i30 = i30 + $i9;
i29 = i29 + 1;
goto [?= $i31 = lengthof r28];
"->"Block 33:
[preds: 32 37 ] [succs: 34 38 ]
$i31 = lengthof r28;
if i29 >= $i31 goto return;
";
}
