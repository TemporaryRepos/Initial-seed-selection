digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 9 ]
r0 := @parameter0: javaT.lang.annotation.Marker;
r3 := @parameter1: java.lang.reflect.AnnotatedElement;
$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>;
$i1 = $i0 + 1;
<javaT.lang.'annotation'.UnitTest: int numTests> = $i1;
"
    "Block 1:
[preds: 0 ] [succs: 2 8 9 ]
if r0 != null goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
$r1 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
"
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
"
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r5);
"
    "Block 8:
[preds: 1 7 ] [succs: 10 ]
goto [?= return];
"
    "Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
"
    "Block 10:
[preds: 8 9 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 9 ]
r0 := @parameter0: javaT.lang.annotation.Marker;
r3 := @parameter1: java.lang.reflect.AnnotatedElement;
$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>;
$i1 = $i0 + 1;
<javaT.lang.'annotation'.UnitTest: int numTests> = $i1;
"->"Block 1:
[preds: 0 ] [succs: 2 8 9 ]
if r0 != null goto (branch);
";
    "Block 0:
[preds: ] [succs: 1 9 ]
r0 := @parameter0: javaT.lang.annotation.Marker;
r3 := @parameter1: java.lang.reflect.AnnotatedElement;
$i0 = <javaT.lang.'annotation'.UnitTest: int numTests>;
$i1 = $i0 + 1;
<javaT.lang.'annotation'.UnitTest: int numTests> = $i1;
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 1:
[preds: 0 ] [succs: 2 8 9 ]
if r0 != null goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 9 ]
$r1 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 8 9 ]
if r0 != null goto (branch);
"->"Block 8:
[preds: 1 7 ] [succs: 10 ]
goto [?= return];
";
    "Block 1:
[preds: 0 ] [succs: 2 8 9 ]
if r0 != null goto (branch);
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
$r1 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 4 9 ]
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
$r1 = new java.lang.StringBuilder;
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
"->"Block 4:
[preds: 3 ] [succs: 5 9 ]
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
"->"Block 5:
[preds: 4 ] [succs: 6 9 ]
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
"->"Block 6:
[preds: 5 ] [succs: 7 9 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r5);
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r5);
"->"Block 8:
[preds: 1 7 ] [succs: 10 ]
goto [?= return];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r5);
"->"Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
";
    "Block 8:
[preds: 1 7 ] [succs: 10 ]
goto [?= return];
"->"Block 10:
[preds: 8 9 ] [succs: ]
return;
";
    "Block 9:
[preds: 0 1 2 3 4 5 6 7 ] [succs: 10 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Marker \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.'annotation'.UnitTest: void fail(java.lang.String)>($r13);
"->"Block 10:
[preds: 8 9 ] [succs: ]
return;
";
}
