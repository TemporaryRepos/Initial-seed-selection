digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"BACK WARDS\";
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"If this text is >\");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"< the test passed.\");
r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r0);
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
i2 = i0 + $i1;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"start: \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" limit: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
$r13 = new java.text.AttributedString;
specialinvoke $r13.<java.text.AttributedString: void <init>(java.lang.String)>(r5);
r14 = $r13;
$r16 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;
$r15 = new java.lang.Integer;
specialinvoke $r15.<java.lang.Integer: void <init>(int)>(-1);
virtualinvoke r14.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r16, $r15, i0, i2);
$r17 = new java.text.Bidi;
$r18 = virtualinvoke r14.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
specialinvoke $r17.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>($r18);
r19 = $r17;
i17 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if i17 >= $i3 goto $r20 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i14 = virtualinvoke r19.<java.text.Bidi: int getRunStart(int)>(i17);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i15 = virtualinvoke r19.<java.text.Bidi: int getRunLimit(int)>(i17);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i16 = virtualinvoke r19.<java.text.Bidi: int getRunLevel(int)>(i17);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r51);
i17 = i17 + 1;
goto [?= $i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.Object)>(r19);
$i4 = virtualinvoke r5.<java.lang.String: int length()>();
$i5 = $i4 + 3;
r52 = newarray (byte)[$i5];
i18 = i0 + 1;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$i6 = i2 + 1;
if i18 >= $i6 goto $r21 = new java.text.Bidi;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
r52[i18] = -1;
i18 = i18 + 1;
goto [?= $i6 = i2 + 1];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r21 = new java.text.Bidi;
$r22 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();
$i7 = virtualinvoke r5.<java.lang.String: int length()>();
specialinvoke $r21.<java.text.Bidi: void <init>(char[],int,byte[],int,int,int)>($r22, 0, r52, 1, $i7, -2);
r53 = $r21;
i19 = 0;
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if i19 >= $i8 goto $r24 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i11 = virtualinvoke r53.<java.text.Bidi: int getRunStart(int)>(i19);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i12 = virtualinvoke r53.<java.text.Bidi: int getRunLimit(int)>(i19);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i13 = virtualinvoke r53.<java.text.Bidi: int getRunLevel(int)>(i19);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r40);
i19 = i19 + 1;
goto [?= $i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>()];
"
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$i9 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if $i9 != 3 goto $r28 = new java.lang.Error;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i10 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if $i10 == 3 goto $r29 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 11:
[preds: 9 10 ] [succs: ]
$r28 = new java.lang.Error;
specialinvoke $r28.<java.lang.Error: void <init>(java.lang.String)>(\"Bidi run count incorrect\");
throw $r28;
"
    "Block 12:
[preds: 10 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"test1() passed.\n\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"BACK WARDS\";
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"If this text is >\");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"< the test passed.\");
r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r0);
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
i2 = i0 + $i1;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"start: \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" limit: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
$r13 = new java.text.AttributedString;
specialinvoke $r13.<java.text.AttributedString: void <init>(java.lang.String)>(r5);
r14 = $r13;
$r16 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;
$r15 = new java.lang.Integer;
specialinvoke $r15.<java.lang.Integer: void <init>(int)>(-1);
virtualinvoke r14.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r16, $r15, i0, i2);
$r17 = new java.text.Bidi;
$r18 = virtualinvoke r14.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
specialinvoke $r17.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>($r18);
r19 = $r17;
i17 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if i17 >= $i3 goto $r20 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if i17 >= $i3 goto $r20 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i14 = virtualinvoke r19.<java.text.Bidi: int getRunStart(int)>(i17);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i15 = virtualinvoke r19.<java.text.Bidi: int getRunLimit(int)>(i17);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i16 = virtualinvoke r19.<java.text.Bidi: int getRunLevel(int)>(i17);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r51);
i17 = i17 + 1;
goto [?= $i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if i17 >= $i3 goto $r20 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.Object)>(r19);
$i4 = virtualinvoke r5.<java.lang.String: int length()>();
$i5 = $i4 + 3;
r52 = newarray (byte)[$i5];
i18 = i0 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i14 = virtualinvoke r19.<java.text.Bidi: int getRunStart(int)>(i17);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i15 = virtualinvoke r19.<java.text.Bidi: int getRunLimit(int)>(i17);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i16 = virtualinvoke r19.<java.text.Bidi: int getRunLevel(int)>(i17);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r51);
i17 = i17 + 1;
goto [?= $i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if i17 >= $i3 goto $r20 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.Object)>(r19);
$i4 = virtualinvoke r5.<java.lang.String: int length()>();
$i5 = $i4 + 3;
r52 = newarray (byte)[$i5];
i18 = i0 + 1;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$i6 = i2 + 1;
if i18 >= $i6 goto $r21 = new java.text.Bidi;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$i6 = i2 + 1;
if i18 >= $i6 goto $r21 = new java.text.Bidi;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
r52[i18] = -1;
i18 = i18 + 1;
goto [?= $i6 = i2 + 1];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$i6 = i2 + 1;
if i18 >= $i6 goto $r21 = new java.text.Bidi;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r21 = new java.text.Bidi;
$r22 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();
$i7 = virtualinvoke r5.<java.lang.String: int length()>();
specialinvoke $r21.<java.text.Bidi: void <init>(char[],int,byte[],int,int,int)>($r22, 0, r52, 1, $i7, -2);
r53 = $r21;
i19 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
r52[i18] = -1;
i18 = i18 + 1;
goto [?= $i6 = i2 + 1];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$i6 = i2 + 1;
if i18 >= $i6 goto $r21 = new java.text.Bidi;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r21 = new java.text.Bidi;
$r22 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();
$i7 = virtualinvoke r5.<java.lang.String: int length()>();
specialinvoke $r21.<java.text.Bidi: void <init>(char[],int,byte[],int,int,int)>($r22, 0, r52, 1, $i7, -2);
r53 = $r21;
i19 = 0;
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if i19 >= $i8 goto $r24 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if i19 >= $i8 goto $r24 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i11 = virtualinvoke r53.<java.text.Bidi: int getRunStart(int)>(i19);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i12 = virtualinvoke r53.<java.text.Bidi: int getRunLimit(int)>(i19);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i13 = virtualinvoke r53.<java.text.Bidi: int getRunLevel(int)>(i19);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r40);
i19 = i19 + 1;
goto [?= $i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>()];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if i19 >= $i8 goto $r24 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 7 ] [succs: 10 11 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$i9 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if $i9 != 3 goto $r28 = new java.lang.Error;
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"run \");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \");
$i11 = virtualinvoke r53.<java.text.Bidi: int getRunStart(int)>(i19);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$i12 = virtualinvoke r53.<java.text.Bidi: int getRunLimit(int)>(i19);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at level \");
$i13 = virtualinvoke r53.<java.text.Bidi: int getRunLevel(int)>(i19);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r40);
i19 = i19 + 1;
goto [?= $i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>()];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$i8 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if i19 >= $i8 goto $r24 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$i9 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if $i9 != 3 goto $r28 = new java.lang.Error;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$i10 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if $i10 == 3 goto $r29 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r53);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$i9 = virtualinvoke r19.<java.text.Bidi: int getRunCount()>();
if $i9 != 3 goto $r28 = new java.lang.Error;
"->"Block 11:
[preds: 9 10 ] [succs: ]
$r28 = new java.lang.Error;
specialinvoke $r28.<java.lang.Error: void <init>(java.lang.String)>(\"Bidi run count incorrect\");
throw $r28;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i10 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if $i10 == 3 goto $r29 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 9 10 ] [succs: ]
$r28 = new java.lang.Error;
specialinvoke $r28.<java.lang.Error: void <init>(java.lang.String)>(\"Bidi run count incorrect\");
throw $r28;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i10 = virtualinvoke r53.<java.text.Bidi: int getRunCount()>();
if $i10 == 3 goto $r29 = <java.lang.System: java.io.PrintStream out>;
"->"Block 12:
[preds: 10 ] [succs: ]
$r29 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"test1() passed.\n\");
return;
";
}
