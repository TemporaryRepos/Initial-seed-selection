digraph "unitGraph" {
    "r0 := @parameter0: java.text.BreakIterator"
    "i0 := @parameter1: int"
    "virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0)"
    "goto [?= $r1 = new java.lang.RuntimeException]"
    "$r7 := @caughtexception"
    "r8 = $r7"
    "return"
    "$r1 = new java.lang.RuntimeException"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": preceding() doesn\'t throw an IAE with offset \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"
    "throw $r1"
    "r0 := @parameter0: java.text.BreakIterator"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0)";
    "i0 := @parameter1: int"->"$r7 := @caughtexception";
    "virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0)"->"goto [?= $r1 = new java.lang.RuntimeException]";
    "virtualinvoke r0.<java.text.BreakIterator: int preceding(int)>(i0)"->"$r7 := @caughtexception";
    "goto [?= $r1 = new java.lang.RuntimeException]"->"$r1 = new java.lang.RuntimeException";
    "$r7 := @caughtexception"->"r8 = $r7";
    "r8 = $r7"->"return";
    "$r1 = new java.lang.RuntimeException"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": preceding() doesn\'t throw an IAE with offset \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": preceding() doesn\'t throw an IAE with offset \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"->"throw $r1";
}
