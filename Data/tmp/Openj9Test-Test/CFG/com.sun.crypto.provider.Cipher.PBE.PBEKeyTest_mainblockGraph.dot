digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r16 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\");
$r1 = newarray (char)[8];
$r1[0] = 112;
$r1[1] = 97;
$r1[2] = 115;
$r1[3] = 115;
$r1[4] = 119;
$r1[5] = 111;
$r1[6] = 114;
$r1[7] = 100;
r17 = $r1;
$r23 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17);
r18 = $r23;
$r28 = (java.security.spec.KeySpec) r18;
r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\");
r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3);
$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4);
if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r24 = new java.lang.Exception;
specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"Equal keys not equal\");
throw $r24;
"
    "Block 2:
[preds: 0 ] [succs: 3 8 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.String;
$r6 = (javax.crypto.spec.PBEKeySpec) r3;
$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>();
specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8);
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25);
$r9 = newarray (char)[8];
$r9[0] = 112;
$r9[1] = 97;
$r9[2] = 115;
$r9[3] = 115;
$r9[4] = 119;
$r9[5] = 111;
$r9[6] = 114;
$r9[7] = 25;
r20 = $r9;
$r26 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20);
r21 = $r26;
"
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r29 = (java.security.spec.KeySpec) r21;
"
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29);
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r27 = new java.lang.Exception;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
throw $r27;
"
    "Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r16 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\");
$r1 = newarray (char)[8];
$r1[0] = 112;
$r1[1] = 97;
$r1[2] = 115;
$r1[3] = 115;
$r1[4] = 119;
$r1[5] = 111;
$r1[6] = 114;
$r1[7] = 100;
r17 = $r1;
$r23 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17);
r18 = $r23;
$r28 = (java.security.spec.KeySpec) r18;
r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\");
r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3);
$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4);
if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r24 = new java.lang.Exception;
specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String)>(\"Equal keys not equal\");
throw $r24;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r16 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(\"PBEWithMD5AndDES\");
$r1 = newarray (char)[8];
$r1[0] = 112;
$r1[1] = 97;
$r1[2] = 115;
$r1[3] = 115;
$r1[4] = 119;
$r1[5] = 111;
$r1[6] = 114;
$r1[7] = 100;
r17 = $r1;
$r23 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r23.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r17);
r18 = $r23;
$r28 = (java.security.spec.KeySpec) r18;
r19 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);
r3 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r19, class \"Ljavax/crypto/spec/PBEKeySpec;\");
r4 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3);
$z0 = virtualinvoke r19.<java.lang.Object: boolean equals(java.lang.Object)>(r4);
if $z0 != 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 0 ] [succs: 3 8 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.String;
$r6 = (javax.crypto.spec.PBEKeySpec) r3;
$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>();
specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8);
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25);
$r9 = newarray (char)[8];
$r9[0] = 112;
$r9[1] = 97;
$r9[2] = 115;
$r9[3] = 115;
$r9[4] = 119;
$r9[5] = 111;
$r9[6] = 114;
$r9[7] = 25;
r20 = $r9;
$r26 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20);
r21 = $r26;
";
    "Block 2:
[preds: 0 ] [succs: 3 8 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.String;
$r6 = (javax.crypto.spec.PBEKeySpec) r3;
$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>();
specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8);
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25);
$r9 = newarray (char)[8];
$r9[0] = 112;
$r9[1] = 97;
$r9[2] = 115;
$r9[3] = 115;
$r9[4] = 119;
$r9[5] = 111;
$r9[6] = 114;
$r9[7] = 25;
r20 = $r9;
$r26 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20);
r21 = $r26;
"->"Block 3:
[preds: 2 ] [succs: 4 8 ]
$r29 = (java.security.spec.KeySpec) r21;
";
    "Block 2:
[preds: 0 ] [succs: 3 8 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.String;
$r6 = (javax.crypto.spec.PBEKeySpec) r3;
$r8 = virtualinvoke $r6.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>();
specialinvoke $r25.<java.lang.String: void <init>(char[])>($r8);
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r25);
$r9 = newarray (char)[8];
$r9[0] = 112;
$r9[1] = 97;
$r9[2] = 115;
$r9[3] = 115;
$r9[4] = 119;
$r9[5] = 111;
$r9[6] = 114;
$r9[7] = 25;
r20 = $r9;
$r26 = new javax.crypto.spec.PBEKeySpec;
specialinvoke $r26.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r20);
r21 = $r26;
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r29 = (java.security.spec.KeySpec) r21;
"->"Block 4:
[preds: 3 ] [succs: 5 8 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29);
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r29 = (java.security.spec.KeySpec) r21;
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29);
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
$r27 = new java.lang.Exception;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r29);
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r27 = new java.lang.Exception;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\");
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r27 = new java.lang.Exception;
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 7:
[preds: 6 ] [succs: 8 ]
throw $r27;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
specialinvoke $r27.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected exception not thrown\");
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
throw $r27;
"->"Block 8:
[preds: 2 3 4 5 6 7 ] [succs: ]
$r13 := @caughtexception;
r14 = $r13;
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Expected exception thrown\");
return;
";
}
