digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.nio.channels.Channels.ReadByte$1"
    "specialinvoke $r0.<javaT.nio.channels.Channels.ReadByte$1: void <init>()>()"
    "r1 = $r0"
    "r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)"
    "i0 = virtualinvoke r2.<java.io.InputStream: int read()>()"
    "if i0 >= 0 goto return"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"InputStream.read() spec\'d to return 0-255\")"
    "throw $r3"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new javaT.nio.channels.Channels.ReadByte$1";
    "$r0 = new javaT.nio.channels.Channels.ReadByte$1"->"specialinvoke $r0.<javaT.nio.channels.Channels.ReadByte$1: void <init>()>()";
    "specialinvoke $r0.<javaT.nio.channels.Channels.ReadByte$1: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)";
    "r2 = staticinvoke <java.nio.channels.Channels: java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)>(r1)"->"i0 = virtualinvoke r2.<java.io.InputStream: int read()>()";
    "i0 = virtualinvoke r2.<java.io.InputStream: int read()>()"->"if i0 >= 0 goto return";
    "if i0 >= 0 goto return"->"$r3 = new java.lang.RuntimeException";
    "if i0 >= 0 goto return"->"return";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"InputStream.read() spec\'d to return 0-255\")";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"InputStream.read() spec\'d to return 0-255\")"->"throw $r3";
}
