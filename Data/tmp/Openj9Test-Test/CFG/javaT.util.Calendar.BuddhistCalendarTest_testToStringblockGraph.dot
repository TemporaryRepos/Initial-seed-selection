digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
r1 = virtualinvoke r0.<java.util.Calendar: java.lang.String toString()>();
r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\".+,YEAR=(\\d+),.+\", \"$1\");
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
if $i1 == i0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"toString(): wrong year value: got \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r3;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
r1 = virtualinvoke r0.<java.util.Calendar: java.lang.String toString()>();
r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\".+,YEAR=(\\d+),.+\", \"$1\");
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
if $i1 == i0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"toString(): wrong year value: got \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r3;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 = staticinvoke <javaT.util.Calendar.BuddhistCalendarTest: java.util.Calendar getBuddhistCalendar()>();
i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);
r1 = virtualinvoke r0.<java.util.Calendar: java.lang.String toString()>();
r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\".+,YEAR=(\\d+),.+\", \"$1\");
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
if $i1 == i0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
