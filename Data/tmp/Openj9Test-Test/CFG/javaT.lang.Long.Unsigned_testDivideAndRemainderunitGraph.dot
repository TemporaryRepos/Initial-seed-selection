digraph "unitGraph" {
    "i20 = 0"
    "l0 = staticinvoke <java.lang.Integer: long toUnsignedLong(int)>(-1)"
    "$r0 = newarray (java.math.BigInteger)[12]"
    "$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L)"
    "$r0[0] = $r1"
    "$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L)"
    "$r0[1] = $r2"
    "$r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L)"
    "$r0[2] = $r3"
    "$r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483646L)"
    "$r0[3] = $r4"
    "$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)"
    "$r0[4] = $r5"
    "$r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)"
    "$r0[5] = $r6"
    "$l1 = l0 - 1L"
    "$r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1)"
    "$r0[6] = $r7"
    "$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"
    "$r0[7] = $r8"
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775806L)"
    "$r0[8] = $r9"
    "$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)"
    "$r0[9] = $r10"
    "$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)"
    "$r12 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "$r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12)"
    "$r0[10] = $r13"
    "$r14 = <javaT.lang.Long.Unsigned: java.math.BigInteger TWO>"
    "$r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>(64)"
    "$r16 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "$r17 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r16)"
    "$r0[11] = $r17"
    "r18 = $r0"
    "r19 = r18"
    "i2 = lengthof r19"
    "i21 = 0"
    "if i21 >= i2 goto return i20"
    "r20 = r19[i21]"
    "r21 = r18"
    "i3 = lengthof r21"
    "i22 = 0"
    "if i22 >= i3 goto i21 = i21 + 1"
    "r22 = r21[i22]"
    "$r23 = <java.math.BigInteger: java.math.BigInteger ZERO>"
    "$z0 = virtualinvoke r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r23)"
    "if $z0 == 0 goto $l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$l16 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$l17 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l16, $l17)"
    "i20 = i20 + 1"
    "goto [?= $l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()]"
    "$r39 := @caughtexception"
    "r40 = $r39"
    "$l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$l19 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l18, $l19)"
    "goto [?= i22 = i22 + 1]"
    "$r38 := @caughtexception"
    "r41 = $r38"
    "$l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$l5 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "l25 = staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l4, $l5)"
    "r24 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r22)"
    "$l6 = virtualinvoke r24.<java.math.BigInteger: long longValue()>()"
    "$b7 = l25 cmp $l6"
    "if $b7 == 0 goto $l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$r33 = <java.lang.System: java.io.PrintStream err>"
    "$r32 = newarray (java.lang.Object)[3]"
    "$r34 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l25)"
    "$r32[0] = $r34"
    "$l14 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$r35 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l14)"
    "$r32[1] = $r35"
    "$l15 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "$r36 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l15)"
    "$r32[2] = $r36"
    "virtualinvoke $r33.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned divide result %s on %s/%s%n\", $r32)"
    "$l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$l9 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "l26 = staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l8, $l9)"
    "r25 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>(r22)"
    "$l10 = virtualinvoke r25.<java.math.BigInteger: long longValue()>()"
    "$b11 = l26 cmp $l10"
    "if $b11 == 0 goto i22 = i22 + 1"
    "$r27 = <java.lang.System: java.io.PrintStream err>"
    "$r26 = newarray (java.lang.Object)[3]"
    "$r28 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l26)"
    "$r26[0] = $r28"
    "$l12 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"
    "$r29 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l12)"
    "$r26[1] = $r29"
    "$l13 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"
    "$r30 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l13)"
    "$r26[2] = $r30"
    "virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned remainder result %s on %s%%%s%n\", $r26)"
    "i22 = i22 + 1"
    "goto [?= (branch)]"
    "i21 = i21 + 1"
    "return i20"
    "i20 = 0"->"l0 = staticinvoke <java.lang.Integer: long toUnsignedLong(int)>(-1)";
    "l0 = staticinvoke <java.lang.Integer: long toUnsignedLong(int)>(-1)"->"$r0 = newarray (java.math.BigInteger)[12]";
    "$r0 = newarray (java.math.BigInteger)[12]"->"$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L)";
    "$r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L)";
    "$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L)"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L)";
    "$r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(10L)"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483646L)";
    "$r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483646L)"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)";
    "$r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L)"->"$r0[4] = $r5";
    "$r0[4] = $r5"->"$r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)";
    "$r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L)"->"$r0[5] = $r6";
    "$r0[5] = $r6"->"$l1 = l0 - 1L";
    "$l1 = l0 - 1L"->"$r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1)";
    "$r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1)"->"$r0[6] = $r7";
    "$r0[6] = $r7"->"$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)";
    "$r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"->"$r0[7] = $r8";
    "$r0[7] = $r8"->"$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775806L)";
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775806L)"->"$r0[8] = $r9";
    "$r0[8] = $r9"->"$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)";
    "$r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)"->"$r0[9] = $r10";
    "$r0[9] = $r10"->"$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)";
    "$r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L)"->"$r12 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "$r12 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12)";
    "$r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12)"->"$r0[10] = $r13";
    "$r0[10] = $r13"->"$r14 = <javaT.lang.Long.Unsigned: java.math.BigInteger TWO>";
    "$r14 = <javaT.lang.Long.Unsigned: java.math.BigInteger TWO>"->"$r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>(64)";
    "$r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>(64)"->"$r16 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "$r16 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r17 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r16)";
    "$r17 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r16)"->"$r0[11] = $r17";
    "$r0[11] = $r17"->"r18 = $r0";
    "r18 = $r0"->"r19 = r18";
    "r19 = r18"->"i2 = lengthof r19";
    "i2 = lengthof r19"->"i21 = 0";
    "i21 = 0"->"if i21 >= i2 goto return i20";
    "if i21 >= i2 goto return i20"->"r20 = r19[i21]";
    "if i21 >= i2 goto return i20"->"return i20";
    "r20 = r19[i21]"->"r21 = r18";
    "r21 = r18"->"i3 = lengthof r21";
    "i3 = lengthof r21"->"i22 = 0";
    "i22 = 0"->"if i22 >= i3 goto i21 = i21 + 1";
    "if i22 >= i3 goto i21 = i21 + 1"->"r22 = r21[i22]";
    "if i22 >= i3 goto i21 = i21 + 1"->"i21 = i21 + 1";
    "r22 = r21[i22]"->"$r23 = <java.math.BigInteger: java.math.BigInteger ZERO>";
    "$r23 = <java.math.BigInteger: java.math.BigInteger ZERO>"->"$z0 = virtualinvoke r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r23)";
    "$z0 = virtualinvoke r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r23)"->"if $z0 == 0 goto $l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "if $z0 == 0 goto $l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l16 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "if $z0 == 0 goto $l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "if $z0 == 0 goto $l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$r39 := @caughtexception";
    "$l16 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l17 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l16 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$r39 := @caughtexception";
    "$l17 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l16, $l17)";
    "$l17 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"$r39 := @caughtexception";
    "staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l16, $l17)"->"i20 = i20 + 1";
    "staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l16, $l17)"->"$r39 := @caughtexception";
    "i20 = i20 + 1"->"goto [?= $l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()]";
    "i20 = i20 + 1"->"$r39 := @caughtexception";
    "goto [?= $l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()]"->"$l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "goto [?= $l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()]"->"$r38 := @caughtexception";
    "$r39 := @caughtexception"->"r40 = $r39";
    "r40 = $r39"->"$l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "r40 = $r39"->"$r38 := @caughtexception";
    "$l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l19 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l18 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$r38 := @caughtexception";
    "$l19 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l18, $l19)";
    "$l19 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"$r38 := @caughtexception";
    "staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l18, $l19)"->"i20 = i20 + 1";
    "staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l18, $l19)"->"$r38 := @caughtexception";
    "i20 = i20 + 1"->"goto [?= i22 = i22 + 1]";
    "i20 = i20 + 1"->"$r38 := @caughtexception";
    "goto [?= i22 = i22 + 1]"->"i22 = i22 + 1";
    "$r38 := @caughtexception"->"r41 = $r38";
    "r41 = $r38"->"goto [?= i22 = i22 + 1]";
    "goto [?= i22 = i22 + 1]"->"i22 = i22 + 1";
    "$l4 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l5 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l5 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"l25 = staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l4, $l5)";
    "l25 = staticinvoke <java.lang.Long: long divideUnsigned(long,long)>($l4, $l5)"->"r24 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r22)";
    "r24 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r22)"->"$l6 = virtualinvoke r24.<java.math.BigInteger: long longValue()>()";
    "$l6 = virtualinvoke r24.<java.math.BigInteger: long longValue()>()"->"$b7 = l25 cmp $l6";
    "$b7 = l25 cmp $l6"->"if $b7 == 0 goto $l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "if $b7 == 0 goto $l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"i20 = i20 + 1";
    "if $b7 == 0 goto $l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "i20 = i20 + 1"->"$r33 = <java.lang.System: java.io.PrintStream err>";
    "$r33 = <java.lang.System: java.io.PrintStream err>"->"$r32 = newarray (java.lang.Object)[3]";
    "$r32 = newarray (java.lang.Object)[3]"->"$r34 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l25)";
    "$r34 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l25)"->"$r32[0] = $r34";
    "$r32[0] = $r34"->"$l14 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "$l14 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$r35 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l14)";
    "$r35 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l14)"->"$r32[1] = $r35";
    "$r32[1] = $r35"->"$l15 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l15 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"$r36 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l15)";
    "$r36 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l15)"->"$r32[2] = $r36";
    "$r32[2] = $r36"->"virtualinvoke $r33.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned divide result %s on %s/%s%n\", $r32)";
    "virtualinvoke $r33.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned divide result %s on %s/%s%n\", $r32)"->"$l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "$l8 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$l9 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l9 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"l26 = staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l8, $l9)";
    "l26 = staticinvoke <java.lang.Long: long remainderUnsigned(long,long)>($l8, $l9)"->"r25 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>(r22)";
    "r25 = virtualinvoke r20.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>(r22)"->"$l10 = virtualinvoke r25.<java.math.BigInteger: long longValue()>()";
    "$l10 = virtualinvoke r25.<java.math.BigInteger: long longValue()>()"->"$b11 = l26 cmp $l10";
    "$b11 = l26 cmp $l10"->"if $b11 == 0 goto i22 = i22 + 1";
    "if $b11 == 0 goto i22 = i22 + 1"->"i20 = i20 + 1";
    "if $b11 == 0 goto i22 = i22 + 1"->"i22 = i22 + 1";
    "i20 = i20 + 1"->"$r27 = <java.lang.System: java.io.PrintStream err>";
    "$r27 = <java.lang.System: java.io.PrintStream err>"->"$r26 = newarray (java.lang.Object)[3]";
    "$r26 = newarray (java.lang.Object)[3]"->"$r28 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l26)";
    "$r28 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>(l26)"->"$r26[0] = $r28";
    "$r26[0] = $r28"->"$l12 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()";
    "$l12 = virtualinvoke r20.<java.math.BigInteger: long longValue()>()"->"$r29 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l12)";
    "$r29 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l12)"->"$r26[1] = $r29";
    "$r26[1] = $r29"->"$l13 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()";
    "$l13 = virtualinvoke r22.<java.math.BigInteger: long longValue()>()"->"$r30 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l13)";
    "$r30 = staticinvoke <java.lang.Long: java.lang.String toUnsignedString(long)>($l13)"->"$r26[2] = $r30";
    "$r26[2] = $r30"->"virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned remainder result %s on %s%%%s%n\", $r26)";
    "virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unexpected unsigned remainder result %s on %s%%%s%n\", $r26)"->"i22 = i22 + 1";
    "i22 = i22 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i22 >= i3 goto i21 = i21 + 1";
    "i21 = i21 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i21 >= i2 goto return i20";
}
