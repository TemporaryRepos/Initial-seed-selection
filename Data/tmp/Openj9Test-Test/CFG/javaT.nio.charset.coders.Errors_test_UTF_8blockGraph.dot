digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: javaT.nio.charset.coders.Errors$Test;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test run()>();
$r2 = newarray (byte)[2];
$r2[0] = -62;
$r2[1] = -128;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\u0080\", $r2);
$r4 = newarray (byte)[2];
$r4[0] = -60;
$r4[1] = -128;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\u0100\", $r4);
$r6 = newarray (byte)[4];
$r6[0] = -16;
$r6[1] = -112;
$r6[2] = -128;
$r6[3] = -128;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\ud800\udc00\", $r6);
$r8 = newarray (byte)[3];
$r8[0] = -17;
$r8[1] = -128;
$r8[2] = -128;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\uf000\", $r8);
$r10 = newarray (byte)[3];
$r10[0] = -17;
$r10[1] = -65;
$r10[2] = -66;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\ufffe\", $r10);
$r12 = newarray (byte)[3];
$r12[0] = -17;
$r12[1] = -65;
$r12[2] = -65;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(java.lang.String,byte[])>(\"\uffff\", $r12);
$r14 = newarray (byte)[3];
$r14[0] = 120;
$r14[1] = 127;
$r14[2] = 121;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(byte[],java.lang.String)>($r14, \"x\u007fy\");
$r16 = newarray (byte)[3];
$r16[0] = 120;
$r16[1] = -128;
$r16[2] = 121;
virtualinvoke r0.<javaT.nio.charset.coders.Errors$Test: javaT.nio.charset.coders.Errors$Test test(byte[],java.lang.String)>($r16, \"x\ufffdy\");
return;
"
}
