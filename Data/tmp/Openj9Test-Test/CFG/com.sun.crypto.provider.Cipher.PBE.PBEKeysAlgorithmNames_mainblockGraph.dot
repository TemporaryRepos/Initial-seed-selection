digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r52 := @parameter0: java.lang.String[];
r0 = newarray (byte)[64];
$r53 = new javax.crypto.spec.PBEKeySpec;
$r2 = \"password\";
$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();
specialinvoke $r53.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, r0, 20, 60);
r4 = $r53;
r5 = <com.sun.crypto.provider.Cipher.PBE.PBEKeysAlgorithmNames: java.lang.String[] algs>;
i0 = lengthof r5;
i1 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i1 >= i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r7 = r5[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\");
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getAlgorithm()\");
$r15 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z0 != 0 goto $r16 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r56 = new java.lang.Exception;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getAlgorithm() \n\\\"\");
$r46 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r56.<java.lang.Exception: void <init>(java.lang.String)>($r51);
throw $r56;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.generateSecret()\");
$r61 = (java.security.spec.KeySpec) r4;
r17 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r61);
$r18 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z1 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z1 != 0 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r58 = new java.lang.Exception;
$r57 = new java.lang.StringBuilder;
specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getAlgorithm() \n\\\"\");
$r37 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r58.<java.lang.Exception: void <init>(java.lang.String)>($r42);
throw $r58;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.translateKey()\");
r20 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey translateKey(javax.crypto.SecretKey)>(r17);
$r21 = interfaceinvoke r20.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z2 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r60 = new java.lang.Exception;
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    getAlgorithm() \n\\\"\");
$r28 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r60.<java.lang.Exception: void <init>(java.lang.String)>($r33);
throw $r60;
"
    "Block 8:
[preds: 6 ] [succs: 1 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getKeySpec()\");
virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r17, class \"Ljavax/crypto/spec/PBEKeySpec;\");
$r24 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"    passed.\n\");
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 1 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r52 := @parameter0: java.lang.String[];
r0 = newarray (byte)[64];
$r53 = new javax.crypto.spec.PBEKeySpec;
$r2 = \"password\";
$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();
specialinvoke $r53.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, r0, 20, 60);
r4 = $r53;
r5 = <com.sun.crypto.provider.Cipher.PBE.PBEKeysAlgorithmNames: java.lang.String[] algs>;
i0 = lengthof r5;
i1 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i1 >= i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i1 >= i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r7 = r5[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\");
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getAlgorithm()\");
$r15 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z0 != 0 goto $r16 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i1 >= i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 1 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r7 = r5[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\");
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getAlgorithm()\");
$r15 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z0 != 0 goto $r16 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 2 ] [succs: ]
$r56 = new java.lang.Exception;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r45 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getAlgorithm() \n\\\"\");
$r46 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r56.<java.lang.Exception: void <init>(java.lang.String)>($r51);
throw $r56;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r7 = r5[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Testing \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r7, \"SunJCE\");
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getAlgorithm()\");
$r15 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>();
$z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z0 != 0 goto $r16 = <java.lang.System: java.io.PrintStream out>;
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.generateSecret()\");
$r61 = (java.security.spec.KeySpec) r4;
r17 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r61);
$r18 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z1 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z1 != 0 goto $r19 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.generateSecret()\");
$r61 = (java.security.spec.KeySpec) r4;
r17 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r61);
$r18 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z1 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z1 != 0 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: ]
$r58 = new java.lang.Exception;
$r57 = new java.lang.StringBuilder;
specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getAlgorithm() \n\\\"\");
$r37 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r58.<java.lang.Exception: void <init>(java.lang.String)>($r42);
throw $r58;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.generateSecret()\");
$r61 = (java.security.spec.KeySpec) r4;
r17 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r61);
$r18 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z1 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z1 != 0 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.translateKey()\");
r20 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey translateKey(javax.crypto.SecretKey)>(r17);
$r21 = interfaceinvoke r20.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z2 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.translateKey()\");
r20 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey translateKey(javax.crypto.SecretKey)>(r17);
$r21 = interfaceinvoke r20.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z2 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 6 ] [succs: ]
$r60 = new java.lang.Exception;
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    getAlgorithm() \n\\\"\");
$r28 = interfaceinvoke r17.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" != \\\"\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r60.<java.lang.Exception: void <init>(java.lang.String)>($r33);
throw $r60;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.translateKey()\");
r20 = virtualinvoke r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey translateKey(javax.crypto.SecretKey)>(r17);
$r21 = interfaceinvoke r20.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
$z2 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
if $z2 != 0 goto $r22 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 6 ] [succs: 1 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getKeySpec()\");
virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r17, class \"Ljavax/crypto/spec/PBEKeySpec;\");
$r24 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"    passed.\n\");
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 ] [succs: 1 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"    Checking skf.getKeySpec()\");
virtualinvoke r13.<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>(r17, class \"Ljavax/crypto/spec/PBEKeySpec;\");
$r24 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"    passed.\n\");
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i1 >= i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
";
}
