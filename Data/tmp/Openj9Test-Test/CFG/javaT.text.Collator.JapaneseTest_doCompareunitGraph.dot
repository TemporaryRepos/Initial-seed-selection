digraph "unitGraph" {
    "r1 := @this: javaT.text.Collator.JapaneseTest"
    "r0 := @parameter0: java.lang.String[][]"
    "i3 := @parameter1: int"
    "i6 := @parameter2: int"
    "i7 := @parameter3: int"
    "i8 = 0"
    "$i0 = lengthof r0"
    "if i8 >= $i0 goto return"
    "$r6 = r1.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"
    "$r2 = r0[i8]"
    "$r5 = $r2[0]"
    "$r3 = r0[i8]"
    "$r4 = $r3[1]"
    "$i1 = virtualinvoke $r6.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, $r4)"
    "i2 = $i1"
    "if $i1 == i3 goto i8 = i8 + 1"
    "$i4 = r1.<javaT.text.Collator.JapaneseTest: int result>"
    "$i5 = $i4 + 1"
    "r1.<javaT.text.Collator.JapaneseTest: int result> = $i5"
    "$r8 = <java.lang.System: java.io.PrintStream err>"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = <javaT.text.Collator.JapaneseTest: java.lang.String[] strength_name>"
    "$r10 = $r9[i6]"
    "$r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": compare() returned unexpected value.(\")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") on \")"
    "$r15 = <javaT.text.Collator.JapaneseTest: java.lang.String[] decomp_name>"
    "$r16 = $r15[i7]"
    "$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Expected(\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for \")"
    "$r21 = r0[i8]"
    "$r22 = $r21[2]"
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24)"
    "i8 = i8 + 1"
    "goto [?= $i0 = lengthof r0]"
    "return"
    "r1 := @this: javaT.text.Collator.JapaneseTest"->"r0 := @parameter0: java.lang.String[][]";
    "r0 := @parameter0: java.lang.String[][]"->"i3 := @parameter1: int";
    "i3 := @parameter1: int"->"i6 := @parameter2: int";
    "i6 := @parameter2: int"->"i7 := @parameter3: int";
    "i7 := @parameter3: int"->"i8 = 0";
    "i8 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i8 >= $i0 goto return";
    "if i8 >= $i0 goto return"->"$r6 = r1.<javaT.text.Collator.JapaneseTest: java.text.Collator col>";
    "if i8 >= $i0 goto return"->"return";
    "$r6 = r1.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"->"$r2 = r0[i8]";
    "$r2 = r0[i8]"->"$r5 = $r2[0]";
    "$r5 = $r2[0]"->"$r3 = r0[i8]";
    "$r3 = r0[i8]"->"$r4 = $r3[1]";
    "$r4 = $r3[1]"->"$i1 = virtualinvoke $r6.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, $r4)";
    "$i1 = virtualinvoke $r6.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, $r4)"->"i2 = $i1";
    "i2 = $i1"->"if $i1 == i3 goto i8 = i8 + 1";
    "if $i1 == i3 goto i8 = i8 + 1"->"$i4 = r1.<javaT.text.Collator.JapaneseTest: int result>";
    "if $i1 == i3 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$i4 = r1.<javaT.text.Collator.JapaneseTest: int result>"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"r1.<javaT.text.Collator.JapaneseTest: int result> = $i5";
    "r1.<javaT.text.Collator.JapaneseTest: int result> = $i5"->"$r8 = <java.lang.System: java.io.PrintStream err>";
    "$r8 = <java.lang.System: java.io.PrintStream err>"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r9 = <javaT.text.Collator.JapaneseTest: java.lang.String[] strength_name>";
    "$r9 = <javaT.text.Collator.JapaneseTest: java.lang.String[] strength_name>"->"$r10 = $r9[i6]";
    "$r10 = $r9[i6]"->"$r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)";
    "$r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": compare() returned unexpected value.(\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": compare() returned unexpected value.(\")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") on \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") on \")"->"$r15 = <javaT.text.Collator.JapaneseTest: java.lang.String[] decomp_name>";
    "$r15 = <javaT.text.Collator.JapaneseTest: java.lang.String[] decomp_name>"->"$r16 = $r15[i7]";
    "$r16 = $r15[i7]"->"$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)";
    "$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Expected(\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Expected(\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for \")"->"$r21 = r0[i8]";
    "$r21 = r0[i8]"->"$r22 = $r21[2]";
    "$r22 = $r21[2]"->"$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)";
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
}
