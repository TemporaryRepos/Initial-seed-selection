digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
r3 := @parameter1: java.util.Map;
i0 := @parameter2: int;
if i0 != 0 goto $z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= z0 = $z1];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z1;
$r0 = new java.text.Bidi;
specialinvoke $r0.<java.text.Bidi: void <init>(java.lang.String,int)>(r1, i0);
r25 = $r0;
z2 = virtualinvoke r25.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z2 == z0 goto $r2 = new java.text.AttributedString;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r17 = <java.lang.System: java.io.PrintStream err>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong Bidi(String, int).baseIsLeftToRight() value: \n\ttext=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r2 = new java.text.AttributedString;
specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>(r1, r3);
r4 = $r2;
r5 = virtualinvoke r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char last()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char next()>();
$r6 = new java.text.Bidi;
specialinvoke $r6.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>(r5);
r26 = $r6;
z3 = virtualinvoke r26.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z3 == z0 goto return;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong Bidi(AttributedCharacterIterator).baseIsLeftToRight() value: \n\ttext=\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
r3 := @parameter1: java.util.Map;
i0 := @parameter2: int;
if i0 != 0 goto $z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= z0 = $z1];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
r3 := @parameter1: java.util.Map;
i0 := @parameter2: int;
if i0 != 0 goto $z1 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= z0 = $z1];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z1;
$r0 = new java.text.Bidi;
specialinvoke $r0.<java.text.Bidi: void <init>(java.lang.String,int)>(r1, i0);
r25 = $r0;
z2 = virtualinvoke r25.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z2 == z0 goto $r2 = new java.text.AttributedString;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z1;
$r0 = new java.text.Bidi;
specialinvoke $r0.<java.text.Bidi: void <init>(java.lang.String,int)>(r1, i0);
r25 = $r0;
z2 = virtualinvoke r25.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z2 == z0 goto $r2 = new java.text.AttributedString;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z1;
$r0 = new java.text.Bidi;
specialinvoke $r0.<java.text.Bidi: void <init>(java.lang.String,int)>(r1, i0);
r25 = $r0;
z2 = virtualinvoke r25.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z2 == z0 goto $r2 = new java.text.AttributedString;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r17 = <java.lang.System: java.io.PrintStream err>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong Bidi(String, int).baseIsLeftToRight() value: \n\ttext=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z1;
$r0 = new java.text.Bidi;
specialinvoke $r0.<java.text.Bidi: void <init>(java.lang.String,int)>(r1, i0);
r25 = $r0;
z2 = virtualinvoke r25.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z2 == z0 goto $r2 = new java.text.AttributedString;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r2 = new java.text.AttributedString;
specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>(r1, r3);
r4 = $r2;
r5 = virtualinvoke r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char last()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char next()>();
$r6 = new java.text.Bidi;
specialinvoke $r6.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>(r5);
r26 = $r6;
z3 = virtualinvoke r26.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z3 == z0 goto return;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r17 = <java.lang.System: java.io.PrintStream err>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"wrong Bidi(String, int).baseIsLeftToRight() value: \n\ttext=\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r2 = new java.text.AttributedString;
specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>(r1, r3);
r4 = $r2;
r5 = virtualinvoke r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char last()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char next()>();
$r6 = new java.text.Bidi;
specialinvoke $r6.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>(r5);
r26 = $r6;
z3 = virtualinvoke r26.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z3 == z0 goto return;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r2 = new java.text.AttributedString;
specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>(r1, r3);
r4 = $r2;
r5 = virtualinvoke r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char last()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char next()>();
$r6 = new java.text.Bidi;
specialinvoke $r6.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>(r5);
r26 = $r6;
z3 = virtualinvoke r26.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z3 == z0 goto return;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong Bidi(AttributedCharacterIterator).baseIsLeftToRight() value: \n\ttext=\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r2 = new java.text.AttributedString;
specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>(r1, r3);
r4 = $r2;
r5 = virtualinvoke r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char last()>();
interfaceinvoke r5.<java.text.AttributedCharacterIterator: char next()>();
$r6 = new java.text.Bidi;
specialinvoke $r6.<java.text.Bidi: void <init>(java.text.AttributedCharacterIterator)>(r5);
r26 = $r6;
z3 = virtualinvoke r26.<java.text.Bidi: boolean baseIsLeftToRight()>();
if z3 == z0 goto return;
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
<javaT.text.Bidi.Bug7042148: boolean err> = 1;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong Bidi(AttributedCharacterIterator).baseIsLeftToRight() value: \n\ttext=\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tExpected=\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\tGot=\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
}
