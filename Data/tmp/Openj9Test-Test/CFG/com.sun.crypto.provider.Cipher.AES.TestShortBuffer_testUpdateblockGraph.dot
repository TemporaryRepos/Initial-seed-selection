digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 10 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0;
z0 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
"
    "Block 2:
[preds: 1 ] [succs: 3 10 ]
$r3 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
$i0 = lengthof $r1;
"
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r2 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>;
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
i7 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r3, 0, $i0, $r2);
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r5 = new java.lang.Exception;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\");
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r5;
"
    "Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
"
    "Block 11:
[preds: 10 ] [succs: ]
$r16 = new java.lang.Exception;
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>(\"Wrong number of output bytes\");
throw $r16;
"
    "Block 12:
[preds: 10 ] [succs: ]
specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 10 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0;
z0 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 10 ]
$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
";
    "Block 0:
[preds: ] [succs: 1 10 ]
r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0;
z0 = 0;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
"->"Block 2:
[preds: 1 ] [succs: 3 10 ]
$r3 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
";
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 10 ]
$r3 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"->"Block 3:
[preds: 2 ] [succs: 4 10 ]
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
";
    "Block 2:
[preds: 1 ] [succs: 3 10 ]
$r3 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"->"Block 4:
[preds: 3 ] [succs: 5 10 ]
$i0 = lengthof $r1;
";
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
$i0 = lengthof $r1;
"->"Block 5:
[preds: 4 ] [succs: 6 10 ]
$r2 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>;
";
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
$i0 = lengthof $r1;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r2 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>;
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
i7 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r3, 0, $i0, $r2);
";
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r2 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
i7 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r3, 0, $i0, $r2);
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
$r5 = new java.lang.Exception;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
i7 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r3, 0, $i0, $r2);
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r5 = new java.lang.Exception;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\");
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r5 = new java.lang.Exception;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\");
"->"Block 9:
[preds: 8 ] [succs: 10 ]
throw $r5;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\");
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r5;
"->"Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
";
    "Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
"->"Block 11:
[preds: 10 ] [succs: ]
$r16 = new java.lang.Exception;
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>(\"Wrong number of output bytes\");
throw $r16;
";
    "Block 10:
[preds: 0 1 2 3 4 5 6 7 8 9 ] [succs: 11 12 ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\");
$r12 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r11 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>;
$i1 = lengthof $r9;
$r10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
i8 = virtualinvoke $r12.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r11, 0, $i1, $r10);
$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>;
$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i3 = $i2 + i8;
r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i3;
i9 = virtualinvoke $r13.<javax.crypto.Cipher: int doFinal(byte[],int)>($r14, $i3);
$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>;
$i6 = lengthof $r15;
$i4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>;
$i5 = i9 + $i4;
if $i6 == $i5 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
"->"Block 12:
[preds: 10 ] [succs: ]
specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>();
return;
";
}
