digraph "unitGraph" {
    "r15 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.util.LinkedHashMap.Cache$1"
    "specialinvoke $r0.<javaT.util.LinkedHashMap.Cache$1: void <init>()>()"
    "r1 = $r0"
    "i3 = 0"
    "if i3 >= 100 goto return"
    "$r2 = new java.lang.Integer"
    "specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3)"
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\")"
    "$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()"
    "$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()"
    "$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>()"
    "$r7 = (java.lang.Integer) $r6"
    "i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"
    "$i1 = i3 - 9"
    "$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0)"
    "if i0 == $i2 goto i3 = i3 + 1"
    "$r8 = new java.lang.RuntimeException"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"i = \")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", eldest = \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"
    "throw $r8"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return"
    "r15 := @parameter0: java.lang.String[]"->"$r0 = new javaT.util.LinkedHashMap.Cache$1";
    "$r0 = new javaT.util.LinkedHashMap.Cache$1"->"specialinvoke $r0.<javaT.util.LinkedHashMap.Cache$1: void <init>()>()";
    "specialinvoke $r0.<javaT.util.LinkedHashMap.Cache$1: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i3 = 0";
    "i3 = 0"->"if i3 >= 100 goto return";
    "if i3 >= 100 goto return"->"$r2 = new java.lang.Integer";
    "if i3 >= 100 goto return"->"return";
    "$r2 = new java.lang.Integer"->"specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3)";
    "specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i3)"->"interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\")";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, \"\")"->"$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()";
    "$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()"->"$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()";
    "$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()"->"$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>()";
    "$r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>()"->"$r7 = (java.lang.Integer) $r6";
    "$r7 = (java.lang.Integer) $r6"->"i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()";
    "i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"->"$i1 = i3 - 9";
    "$i1 = i3 - 9"->"$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0)";
    "$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0)"->"if i0 == $i2 goto i3 = i3 + 1";
    "if i0 == $i2 goto i3 = i3 + 1"->"$r8 = new java.lang.RuntimeException";
    "if i0 == $i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r8 = new java.lang.RuntimeException"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"i = \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"i = \")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", eldest = \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", eldest = \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"->"throw $r8";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 100 goto return";
}
