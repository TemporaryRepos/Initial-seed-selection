digraph "unitGraph" {
    "r6 := @this: javaT.text.Collator.Bug6271411"
    "$r0 = newarray (int)[10]"
    "$r0[0] = -2147483648"
    "$r0[1] = -2147483647"
    "$r0[2] = -10000"
    "$r0[3] = -2"
    "$r0[4] = -1"
    "$r0[5] = 100"
    "$r0[6] = 101"
    "$r0[7] = 12345"
    "$r0[8] = 2147483646"
    "$r0[9] = 2147483647"
    "r1 = $r0"
    "z0 = 0"
    "$r2 = new java.text.RuleBasedCollator"
    "specialinvoke $r2.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< c, C < d; D\")"
    "r3 = $r2"
    "r4 = virtualinvoke r3.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")"
    "i7 = 0"
    "$r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>"
    "$i0 = lengthof $r5"
    "if i7 >= $i0 goto (branch)"
    "$r7 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>"
    "r8 = $r7[i7]"
    "virtualinvoke r4.<java.text.CollationElementIterator: void setText(java.lang.String)>(r8)"
    "i1 = virtualinvoke r8.<java.lang.String: int length()>()"
    "$i2 = i1 + 1"
    "r1[5] = $i2"
    "$i3 = i1 + 2"
    "r1[6] = $i3"
    "i8 = 0"
    "$i4 = lengthof r1"
    "if i8 >= $i4 goto i7 = i7 + 1"
    "$i5 = r1[i8]"
    "virtualinvoke r4.<java.text.CollationElementIterator: void setOffset(int)>($i5)"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException should be thrown for setOffset(\")"
    "$i6 = r1[i8]"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">.\")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)"
    "z0 = 1"
    "goto [?= i8 = i8 + 1]"
    "$r17 := @caughtexception"
    "r18 = $r17"
    "i8 = i8 + 1"
    "goto [?= $i4 = lengthof r1]"
    "i7 = i7 + 1"
    "goto [?= $r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>]"
    "if z0 == 0 goto return"
    "virtualinvoke r6.<javaT.text.Collator.Bug6271411: void errln(java.lang.String)>(\"CollationElementIterator.setOffset() didn\'t throw an expected IllegalArguemntException.\")"
    "return"
    "r6 := @this: javaT.text.Collator.Bug6271411"->"$r0 = newarray (int)[10]";
    "$r0 = newarray (int)[10]"->"$r0[0] = -2147483648";
    "$r0[0] = -2147483648"->"$r0[1] = -2147483647";
    "$r0[1] = -2147483647"->"$r0[2] = -10000";
    "$r0[2] = -10000"->"$r0[3] = -2";
    "$r0[3] = -2"->"$r0[4] = -1";
    "$r0[4] = -1"->"$r0[5] = 100";
    "$r0[5] = 100"->"$r0[6] = 101";
    "$r0[6] = 101"->"$r0[7] = 12345";
    "$r0[7] = 12345"->"$r0[8] = 2147483646";
    "$r0[8] = 2147483646"->"$r0[9] = 2147483647";
    "$r0[9] = 2147483647"->"r1 = $r0";
    "r1 = $r0"->"z0 = 0";
    "z0 = 0"->"$r2 = new java.text.RuleBasedCollator";
    "$r2 = new java.text.RuleBasedCollator"->"specialinvoke $r2.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< c, C < d; D\")";
    "specialinvoke $r2.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< c, C < d; D\")"->"r3 = $r2";
    "r3 = $r2"->"r4 = virtualinvoke r3.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")";
    "r4 = virtualinvoke r3.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"\")"->"i7 = 0";
    "i7 = 0"->"$r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>";
    "$r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>"->"$i0 = lengthof $r5";
    "$i0 = lengthof $r5"->"if i7 >= $i0 goto (branch)";
    "if i7 >= $i0 goto (branch)"->"$r7 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>";
    "if i7 >= $i0 goto (branch)"->"if z0 == 0 goto return";
    "$r7 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>"->"r8 = $r7[i7]";
    "r8 = $r7[i7]"->"virtualinvoke r4.<java.text.CollationElementIterator: void setText(java.lang.String)>(r8)";
    "virtualinvoke r4.<java.text.CollationElementIterator: void setText(java.lang.String)>(r8)"->"i1 = virtualinvoke r8.<java.lang.String: int length()>()";
    "i1 = virtualinvoke r8.<java.lang.String: int length()>()"->"$i2 = i1 + 1";
    "$i2 = i1 + 1"->"r1[5] = $i2";
    "r1[5] = $i2"->"$i3 = i1 + 2";
    "$i3 = i1 + 2"->"r1[6] = $i3";
    "r1[6] = $i3"->"i8 = 0";
    "i8 = 0"->"$i4 = lengthof r1";
    "$i4 = lengthof r1"->"if i8 >= $i4 goto i7 = i7 + 1";
    "if i8 >= $i4 goto i7 = i7 + 1"->"$i5 = r1[i8]";
    "if i8 >= $i4 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "if i8 >= $i4 goto i7 = i7 + 1"->"$r17 := @caughtexception";
    "$i5 = r1[i8]"->"virtualinvoke r4.<java.text.CollationElementIterator: void setOffset(int)>($i5)";
    "$i5 = r1[i8]"->"$r17 := @caughtexception";
    "virtualinvoke r4.<java.text.CollationElementIterator: void setOffset(int)>($i5)"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke r4.<java.text.CollationElementIterator: void setOffset(int)>($i5)"->"$r17 := @caughtexception";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"$r9 = new java.lang.StringBuilder";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"$r17 := @caughtexception";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "$r9 = new java.lang.StringBuilder"->"$r17 := @caughtexception";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException should be thrown for setOffset(\")";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r17 := @caughtexception";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException should be thrown for setOffset(\")"->"$i6 = r1[i8]";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"IllegalArgumentException should be thrown for setOffset(\")"->"$r17 := @caughtexception";
    "$i6 = r1[i8]"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$i6 = r1[i8]"->"$r17 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r17 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") for <\")"->"$r17 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">.\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"->"$r17 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">.\")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">.\")"->"$r17 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r17 := @caughtexception";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)"->"z0 = 1";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)"->"$r17 := @caughtexception";
    "z0 = 1"->"goto [?= i8 = i8 + 1]";
    "z0 = 1"->"$r17 := @caughtexception";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "$r17 := @caughtexception"->"r18 = $r17";
    "r18 = $r17"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i4 = lengthof r1]";
    "goto [?= $i4 = lengthof r1]"->"$i4 = lengthof r1";
    "i7 = i7 + 1"->"goto [?= $r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>]";
    "goto [?= $r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>]"->"$r5 = <javaT.text.Collator.Bug6271411: java.lang.String[] values>";
    "if z0 == 0 goto return"->"virtualinvoke r6.<javaT.text.Collator.Bug6271411: void errln(java.lang.String)>(\"CollationElementIterator.setOffset() didn\'t throw an expected IllegalArguemntException.\")";
    "if z0 == 0 goto return"->"return";
    "virtualinvoke r6.<javaT.text.Collator.Bug6271411: void errln(java.lang.String)>(\"CollationElementIterator.setOffset() didn\'t throw an expected IllegalArguemntException.\")"->"return";
}
