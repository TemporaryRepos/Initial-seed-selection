digraph "unitGraph" {
    "r3 := @this: javaT.text.Collator.JapaneseTest"
    "$r0 = newarray (java.util.Locale)[1]"
    "$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"
    "$r0[0] = $r1"
    "r2 = $r0"
    "i8 = 0"
    "$i0 = lengthof r2"
    "if i8 >= $i0 goto $i1 = r3.<javaT.text.Collator.JapaneseTest: int result>"
    "$r5 = r2[i8]"
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r5)"
    "i9 = 0"
    "if i9 >= 3 goto i8 = i8 + 1"
    "$r6 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"
    "virtualinvoke $r6.<java.text.Collator: void setDecomposition(int)>(i9)"
    "i10 = 0"
    "if i10 >= 3 goto i9 = i9 + 1"
    "$r7 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"
    "virtualinvoke $r7.<java.text.Collator: void setStrength(int)>(i10)"
    "$r10 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData1>"
    "$r8 = <javaT.text.Collator.JapaneseTest: int[][] results1>"
    "$r9 = $r8[i10]"
    "$i2 = $r9[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r10, $i2, i10, i9)"
    "$r13 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData2>"
    "$r11 = <javaT.text.Collator.JapaneseTest: int[][] results2>"
    "$r12 = $r11[i10]"
    "$i3 = $r12[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r13, $i3, i10, i9)"
    "$r16 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData3>"
    "$r14 = <javaT.text.Collator.JapaneseTest: int[][] results3>"
    "$r15 = $r14[i10]"
    "$i4 = $r15[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r16, $i4, i10, i9)"
    "$r19 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData4>"
    "$r17 = <javaT.text.Collator.JapaneseTest: int[][] results4>"
    "$r18 = $r17[i10]"
    "$i5 = $r18[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r19, $i5, i10, i9)"
    "$r22 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData5>"
    "$r20 = <javaT.text.Collator.JapaneseTest: int[][] results5>"
    "$r21 = $r20[i10]"
    "$i6 = $r21[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r22, $i6, i10, i9)"
    "$r25 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData6>"
    "$r23 = <javaT.text.Collator.JapaneseTest: int[][] results6>"
    "$r24 = $r23[i10]"
    "$i7 = $r24[i9]"
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r25, $i7, i10, i9)"
    "i10 = i10 + 1"
    "goto [?= (branch)]"
    "i9 = i9 + 1"
    "i8 = i8 + 1"
    "goto [?= $i0 = lengthof r2]"
    "$i1 = r3.<javaT.text.Collator.JapaneseTest: int result>"
    "if $i1 == 0 goto return"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexpected results on Japanese collation.\")"
    "throw $r4"
    "return"
    "r3 := @this: javaT.text.Collator.JapaneseTest"->"$r0 = newarray (java.util.Locale)[1]";
    "$r0 = newarray (java.util.Locale)[1]"->"$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()";
    "$r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"r2 = $r0";
    "r2 = $r0"->"i8 = 0";
    "i8 = 0"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"if i8 >= $i0 goto $i1 = r3.<javaT.text.Collator.JapaneseTest: int result>";
    "if i8 >= $i0 goto $i1 = r3.<javaT.text.Collator.JapaneseTest: int result>"->"$r5 = r2[i8]";
    "if i8 >= $i0 goto $i1 = r3.<javaT.text.Collator.JapaneseTest: int result>"->"$i1 = r3.<javaT.text.Collator.JapaneseTest: int result>";
    "$r5 = r2[i8]"->"staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r5)";
    "staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r5)"->"i9 = 0";
    "i9 = 0"->"if i9 >= 3 goto i8 = i8 + 1";
    "if i9 >= 3 goto i8 = i8 + 1"->"$r6 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>";
    "if i9 >= 3 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$r6 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"->"virtualinvoke $r6.<java.text.Collator: void setDecomposition(int)>(i9)";
    "virtualinvoke $r6.<java.text.Collator: void setDecomposition(int)>(i9)"->"i10 = 0";
    "i10 = 0"->"if i10 >= 3 goto i9 = i9 + 1";
    "if i10 >= 3 goto i9 = i9 + 1"->"$r7 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>";
    "if i10 >= 3 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r7 = r3.<javaT.text.Collator.JapaneseTest: java.text.Collator col>"->"virtualinvoke $r7.<java.text.Collator: void setStrength(int)>(i10)";
    "virtualinvoke $r7.<java.text.Collator: void setStrength(int)>(i10)"->"$r10 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData1>";
    "$r10 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData1>"->"$r8 = <javaT.text.Collator.JapaneseTest: int[][] results1>";
    "$r8 = <javaT.text.Collator.JapaneseTest: int[][] results1>"->"$r9 = $r8[i10]";
    "$r9 = $r8[i10]"->"$i2 = $r9[i9]";
    "$i2 = $r9[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r10, $i2, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r10, $i2, i10, i9)"->"$r13 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData2>";
    "$r13 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData2>"->"$r11 = <javaT.text.Collator.JapaneseTest: int[][] results2>";
    "$r11 = <javaT.text.Collator.JapaneseTest: int[][] results2>"->"$r12 = $r11[i10]";
    "$r12 = $r11[i10]"->"$i3 = $r12[i9]";
    "$i3 = $r12[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r13, $i3, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r13, $i3, i10, i9)"->"$r16 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData3>";
    "$r16 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData3>"->"$r14 = <javaT.text.Collator.JapaneseTest: int[][] results3>";
    "$r14 = <javaT.text.Collator.JapaneseTest: int[][] results3>"->"$r15 = $r14[i10]";
    "$r15 = $r14[i10]"->"$i4 = $r15[i9]";
    "$i4 = $r15[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r16, $i4, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r16, $i4, i10, i9)"->"$r19 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData4>";
    "$r19 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData4>"->"$r17 = <javaT.text.Collator.JapaneseTest: int[][] results4>";
    "$r17 = <javaT.text.Collator.JapaneseTest: int[][] results4>"->"$r18 = $r17[i10]";
    "$r18 = $r17[i10]"->"$i5 = $r18[i9]";
    "$i5 = $r18[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r19, $i5, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r19, $i5, i10, i9)"->"$r22 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData5>";
    "$r22 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData5>"->"$r20 = <javaT.text.Collator.JapaneseTest: int[][] results5>";
    "$r20 = <javaT.text.Collator.JapaneseTest: int[][] results5>"->"$r21 = $r20[i10]";
    "$r21 = $r20[i10]"->"$i6 = $r21[i9]";
    "$i6 = $r21[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r22, $i6, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r22, $i6, i10, i9)"->"$r25 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData6>";
    "$r25 = <javaT.text.Collator.JapaneseTest: java.lang.String[][] compData6>"->"$r23 = <javaT.text.Collator.JapaneseTest: int[][] results6>";
    "$r23 = <javaT.text.Collator.JapaneseTest: int[][] results6>"->"$r24 = $r23[i10]";
    "$r24 = $r23[i10]"->"$i7 = $r24[i9]";
    "$i7 = $r24[i9]"->"virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r25, $i7, i10, i9)";
    "virtualinvoke r3.<javaT.text.Collator.JapaneseTest: void doCompare(java.lang.String[][],int,int,int)>($r25, $i7, i10, i9)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= 3 goto i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= 3 goto i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i0 = lengthof r2]";
    "goto [?= $i0 = lengthof r2]"->"$i0 = lengthof r2";
    "$i1 = r3.<javaT.text.Collator.JapaneseTest: int result>"->"if $i1 == 0 goto return";
    "if $i1 == 0 goto return"->"$r4 = new java.lang.RuntimeException";
    "if $i1 == 0 goto return"->"return";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexpected results on Japanese collation.\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unexpected results on Japanese collation.\")"->"throw $r4";
}
