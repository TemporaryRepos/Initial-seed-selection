digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.nio.ByteBuffer;
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"byte [\");
virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
$i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
if $i0 >= $i1 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$b2 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();
$i3 = $b2 & 255;
$r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r9);
goto [?= $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\" ]\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.nio.ByteBuffer;
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"byte [\");
virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
$i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
if $i0 >= $i1 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
$i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
if $i0 >= $i1 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$b2 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();
$i3 = $b2 & 255;
$r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r9);
goto [?= $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
$i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
if $i0 >= $i1 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\" ]\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$b2 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();
$i3 = $b2 & 255;
$r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r9);
goto [?= $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
$i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
if $i0 >= $i1 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
}
