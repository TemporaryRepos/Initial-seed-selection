digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
$z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
staticinvoke <javaT.util.Map.Get: void pass()>();
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Map.Get: void fail(java.lang.String)>($r6);
"
    "Block 3:
[preds: 1 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
$z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
staticinvoke <javaT.util.Map.Get: void pass()>();
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
$z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r0, r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Map.Get: void fail(java.lang.String)>($r6);
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
staticinvoke <javaT.util.Map.Get: void pass()>();
goto [?= return];
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.util.Map.Get: void fail(java.lang.String)>($r6);
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
}
