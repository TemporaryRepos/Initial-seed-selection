digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = new java.net.SocketPermission"
    "specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")"
    "r1 = $r0"
    "$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1)"
    "if $z0 != 0 goto $r2 = new java.net.SocketPermission"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: SocketPermission instance should imply itself.\")"
    "throw $r5"
    "$r2 = new java.net.SocketPermission"
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")"
    "r3 = $r2"
    "$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3)"
    "if $z1 != 0 goto return"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: Equaled SocketPermission instances should imply each other.\")"
    "throw $r4"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = new java.net.SocketPermission";
    "$r0 = new java.net.SocketPermission"->"specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")";
    "specialinvoke $r0.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")"->"r1 = $r0";
    "r1 = $r0"->"$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1)";
    "$z0 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r1)"->"if $z0 != 0 goto $r2 = new java.net.SocketPermission";
    "if $z0 != 0 goto $r2 = new java.net.SocketPermission"->"$r5 = new java.lang.RuntimeException";
    "if $z0 != 0 goto $r2 = new java.net.SocketPermission"->"$r2 = new java.net.SocketPermission";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: SocketPermission instance should imply itself.\")";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: SocketPermission instance should imply itself.\")"->"throw $r5";
    "$r2 = new java.net.SocketPermission"->"specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")";
    "specialinvoke $r2.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(\"invlidhost\", \"connect\")"->"r3 = $r2";
    "r3 = $r2"->"$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3)";
    "$z1 = virtualinvoke r1.<java.net.SocketPermission: boolean implies(java.security.Permission)>(r3)"->"if $z1 != 0 goto return";
    "if $z1 != 0 goto return"->"$r4 = new java.lang.RuntimeException";
    "if $z1 != 0 goto return"->"return";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: Equaled SocketPermission instances should imply each other.\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: Equaled SocketPermission instances should imply each other.\")"->"throw $r4";
}
