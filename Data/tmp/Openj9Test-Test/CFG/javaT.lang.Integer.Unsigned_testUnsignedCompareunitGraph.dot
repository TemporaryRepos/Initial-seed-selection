digraph "unitGraph" {
    "i10 = 0"
    "$r0 = newarray (int)[10]"
    "$r0[0] = 0"
    "$r0[1] = 1"
    "$r0[2] = 2"
    "$r0[3] = 3"
    "$r0[4] = -2147483648"
    "$r0[5] = -2147483647"
    "$r0[6] = -2147483646"
    "$r0[7] = -2147483645"
    "$r0[8] = -2"
    "$r0[9] = -1"
    "r1 = $r0"
    "r2 = r1"
    "i0 = lengthof r2"
    "i11 = 0"
    "if i11 >= i0 goto return i10"
    "i1 = r2[i11]"
    "r3 = r1"
    "i2 = lengthof r3"
    "i12 = 0"
    "if i12 >= i2 goto i11 = i11 + 1"
    "i3 = r3[i12]"
    "i4 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i1, i3)"
    "i5 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i3, i1)"
    "i6 = staticinvoke <javaT.lang.Integer.Unsigned: int compUnsigned(int,int)>(i1, i3)"
    "if i1 != i3 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"
    "if i4 == 0 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"
    "i10 = i10 + 1"
    "$r19 = <java.lang.System: java.io.PrintStream err>"
    "$r18 = newarray (java.lang.Object)[2]"
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r18[0] = $r20"
    "$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$r18[1] = $r21"
    "virtualinvoke $r19.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Value 0x%x did not compare as an unsigned value equal to itself; got %d%n\", $r18)"
    "$i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"
    "$i14 = staticinvoke <java.lang.Integer: int signum(int)>(i6)"
    "if $i13 == $i14 goto $i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"
    "$r12 = <java.lang.System: java.io.PrintStream err>"
    "$r11 = newarray (java.lang.Object)[4]"
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r11[0] = $r13"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "$r11[1] = $r14"
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r11[2] = $r15"
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$r11[3] = $r16"
    "virtualinvoke $r12.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unsigned compare of 0x%x to 0x%x%n:\texpected sign of %d, got %d%n\", $r11)"
    "$i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"
    "$i8 = staticinvoke <java.lang.Integer: int signum(int)>(i5)"
    "$i9 = neg $i8"
    "if $i7 == $i9 goto i12 = i12 + 1"
    "$r5 = <java.lang.System: java.io.PrintStream err>"
    "$r4 = newarray (java.lang.Object)[4]"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r4[0] = $r6"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "$r4[1] = $r7"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$r4[2] = $r8"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"
    "$r4[3] = $r9"
    "virtualinvoke $r5.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"signum(compareUnsigned(x, y)) != -signum(compareUnsigned(y,x)) for \t0x%x and 0x%x, computed %d and %d%n\", $r4)"
    "i12 = i12 + 1"
    "goto [?= (branch)]"
    "i11 = i11 + 1"
    "return i10"
    "i10 = 0"->"$r0 = newarray (int)[10]";
    "$r0 = newarray (int)[10]"->"$r0[0] = 0";
    "$r0[0] = 0"->"$r0[1] = 1";
    "$r0[1] = 1"->"$r0[2] = 2";
    "$r0[2] = 2"->"$r0[3] = 3";
    "$r0[3] = 3"->"$r0[4] = -2147483648";
    "$r0[4] = -2147483648"->"$r0[5] = -2147483647";
    "$r0[5] = -2147483647"->"$r0[6] = -2147483646";
    "$r0[6] = -2147483646"->"$r0[7] = -2147483645";
    "$r0[7] = -2147483645"->"$r0[8] = -2";
    "$r0[8] = -2"->"$r0[9] = -1";
    "$r0[9] = -1"->"r1 = $r0";
    "r1 = $r0"->"r2 = r1";
    "r2 = r1"->"i0 = lengthof r2";
    "i0 = lengthof r2"->"i11 = 0";
    "i11 = 0"->"if i11 >= i0 goto return i10";
    "if i11 >= i0 goto return i10"->"i1 = r2[i11]";
    "if i11 >= i0 goto return i10"->"return i10";
    "i1 = r2[i11]"->"r3 = r1";
    "r3 = r1"->"i2 = lengthof r3";
    "i2 = lengthof r3"->"i12 = 0";
    "i12 = 0"->"if i12 >= i2 goto i11 = i11 + 1";
    "if i12 >= i2 goto i11 = i11 + 1"->"i3 = r3[i12]";
    "if i12 >= i2 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "i3 = r3[i12]"->"i4 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i1, i3)";
    "i4 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i1, i3)"->"i5 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i3, i1)";
    "i5 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i3, i1)"->"i6 = staticinvoke <javaT.lang.Integer.Unsigned: int compUnsigned(int,int)>(i1, i3)";
    "i6 = staticinvoke <javaT.lang.Integer.Unsigned: int compUnsigned(int,int)>(i1, i3)"->"if i1 != i3 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "if i1 != i3 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"if i4 == 0 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "if i1 != i3 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"$i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "if i4 == 0 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"i10 = i10 + 1";
    "if i4 == 0 goto $i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"$i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "i10 = i10 + 1"->"$r19 = <java.lang.System: java.io.PrintStream err>";
    "$r19 = <java.lang.System: java.io.PrintStream err>"->"$r18 = newarray (java.lang.Object)[2]";
    "$r18 = newarray (java.lang.Object)[2]"->"$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r18[0] = $r20";
    "$r18[0] = $r20"->"$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$r18[1] = $r21";
    "$r18[1] = $r21"->"virtualinvoke $r19.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Value 0x%x did not compare as an unsigned value equal to itself; got %d%n\", $r18)";
    "virtualinvoke $r19.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Value 0x%x did not compare as an unsigned value equal to itself; got %d%n\", $r18)"->"$i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "$i13 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"$i14 = staticinvoke <java.lang.Integer: int signum(int)>(i6)";
    "$i14 = staticinvoke <java.lang.Integer: int signum(int)>(i6)"->"if $i13 == $i14 goto $i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "if $i13 == $i14 goto $i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"i10 = i10 + 1";
    "if $i13 == $i14 goto $i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"$i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "i10 = i10 + 1"->"$r12 = <java.lang.System: java.io.PrintStream err>";
    "$r12 = <java.lang.System: java.io.PrintStream err>"->"$r11 = newarray (java.lang.Object)[4]";
    "$r11 = newarray (java.lang.Object)[4]"->"$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r11[0] = $r13";
    "$r11[0] = $r13"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"$r11[1] = $r14";
    "$r11[1] = $r14"->"$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r11[2] = $r15";
    "$r11[2] = $r15"->"$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$r11[3] = $r16";
    "$r11[3] = $r16"->"virtualinvoke $r12.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unsigned compare of 0x%x to 0x%x%n:\texpected sign of %d, got %d%n\", $r11)";
    "virtualinvoke $r12.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"Unsigned compare of 0x%x to 0x%x%n:\texpected sign of %d, got %d%n\", $r11)"->"$i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)";
    "$i7 = staticinvoke <java.lang.Integer: int signum(int)>(i4)"->"$i8 = staticinvoke <java.lang.Integer: int signum(int)>(i5)";
    "$i8 = staticinvoke <java.lang.Integer: int signum(int)>(i5)"->"$i9 = neg $i8";
    "$i9 = neg $i8"->"if $i7 == $i9 goto i12 = i12 + 1";
    "if $i7 == $i9 goto i12 = i12 + 1"->"i10 = i10 + 1";
    "if $i7 == $i9 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "i10 = i10 + 1"->"$r5 = <java.lang.System: java.io.PrintStream err>";
    "$r5 = <java.lang.System: java.io.PrintStream err>"->"$r4 = newarray (java.lang.Object)[4]";
    "$r4 = newarray (java.lang.Object)[4]"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r4[0] = $r6";
    "$r4[0] = $r6"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"$r4[1] = $r7";
    "$r4[1] = $r7"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$r4[2] = $r8";
    "$r4[2] = $r8"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"->"$r4[3] = $r9";
    "$r4[3] = $r9"->"virtualinvoke $r5.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"signum(compareUnsigned(x, y)) != -signum(compareUnsigned(y,x)) for \t0x%x and 0x%x, computed %d and %d%n\", $r4)";
    "virtualinvoke $r5.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"signum(compareUnsigned(x, y)) != -signum(compareUnsigned(y,x)) for \t0x%x and 0x%x, computed %d and %d%n\", $r4)"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i2 goto i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= i0 goto return i10";
}
