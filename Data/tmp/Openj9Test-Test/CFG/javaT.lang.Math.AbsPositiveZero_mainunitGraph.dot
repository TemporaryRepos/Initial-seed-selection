digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0)"
    "$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0)"
    "if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)"
    "$r9 = new java.lang.Exception"
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0d) failed\")"
    "throw $r9"
    "$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)"
    "$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1)"
    "if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)"
    "$r8 = new java.lang.Exception"
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0d) failed\")"
    "throw $r8"
    "$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)"
    "$b0 = $d2 cmpl #Infinity"
    "if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)"
    "$r7 = new java.lang.Exception"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")"
    "throw $r7"
    "$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)"
    "$b1 = $d3 cmpl #Infinity"
    "if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)"
    "$r6 = new java.lang.Exception"
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")"
    "throw $r6"
    "d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)"
    "$b2 = d4 cmpl d4"
    "if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)"
    "$r5 = new java.lang.Exception"
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")"
    "throw $r5"
    "$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)"
    "$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0)"
    "if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)"
    "$r4 = new java.lang.Exception"
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0f) failed\")"
    "throw $r4"
    "$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)"
    "$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1)"
    "if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)"
    "$r3 = new java.lang.Exception"
    "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0f) failed\")"
    "throw $r3"
    "$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)"
    "$b3 = $f2 cmpl #InfinityF"
    "if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)"
    "$r2 = new java.lang.Exception"
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")"
    "throw $r2"
    "$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)"
    "$b4 = $f3 cmpl #InfinityF"
    "if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)"
    "$r1 = new java.lang.Exception"
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")"
    "throw $r1"
    "f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)"
    "$b5 = f4 cmpl f4"
    "if $b5 != 0 goto return"
    "$r0 = new java.lang.Exception"
    "specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")"
    "throw $r0"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0)";
    "$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0)"->"$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0)";
    "$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0)"->"if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)";
    "if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)"->"$r9 = new java.lang.Exception";
    "if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)"->"$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)";
    "$r9 = new java.lang.Exception"->"specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0d) failed\")";
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0d) failed\")"->"throw $r9";
    "$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0)"->"$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1)";
    "$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1)"->"if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)";
    "if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)"->"$r8 = new java.lang.Exception";
    "if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)"->"$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)";
    "$r8 = new java.lang.Exception"->"specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0d) failed\")";
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0d) failed\")"->"throw $r8";
    "$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity)"->"$b0 = $d2 cmpl #Infinity";
    "$b0 = $d2 cmpl #Infinity"->"if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)";
    "if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)"->"$r7 = new java.lang.Exception";
    "if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)"->"$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)";
    "$r7 = new java.lang.Exception"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")"->"throw $r7";
    "$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity)"->"$b1 = $d3 cmpl #Infinity";
    "$b1 = $d3 cmpl #Infinity"->"if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)";
    "if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)"->"$r6 = new java.lang.Exception";
    "if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)"->"d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)";
    "$r6 = new java.lang.Exception"->"specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")";
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")"->"throw $r6";
    "d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN)"->"$b2 = d4 cmpl d4";
    "$b2 = d4 cmpl d4"->"if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)";
    "if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)"->"$r5 = new java.lang.Exception";
    "if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)"->"$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)";
    "$r5 = new java.lang.Exception"->"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")"->"throw $r5";
    "$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F)"->"$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0)";
    "$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0)"->"if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)";
    "if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)"->"$r4 = new java.lang.Exception";
    "if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)"->"$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)";
    "$r4 = new java.lang.Exception"->"specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0f) failed\")";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0f) failed\")"->"throw $r4";
    "$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F)"->"$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1)";
    "$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1)"->"if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)";
    "if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)"->"$r3 = new java.lang.Exception";
    "if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)"->"$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)";
    "$r3 = new java.lang.Exception"->"specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0f) failed\")";
    "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0f) failed\")"->"throw $r3";
    "$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF)"->"$b3 = $f2 cmpl #InfinityF";
    "$b3 = $f2 cmpl #InfinityF"->"if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)";
    "if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)"->"$r2 = new java.lang.Exception";
    "if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)"->"$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)";
    "$r2 = new java.lang.Exception"->"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\")"->"throw $r2";
    "$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF)"->"$b4 = $f3 cmpl #InfinityF";
    "$b4 = $f3 cmpl #InfinityF"->"if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)";
    "if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)"->"$r1 = new java.lang.Exception";
    "if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)"->"f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)";
    "$r1 = new java.lang.Exception"->"specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")";
    "specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\")"->"throw $r1";
    "f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF)"->"$b5 = f4 cmpl f4";
    "$b5 = f4 cmpl f4"->"if $b5 != 0 goto return";
    "if $b5 != 0 goto return"->"$r0 = new java.lang.Exception";
    "if $b5 != 0 goto return"->"return";
    "$r0 = new java.lang.Exception"->"specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")";
    "specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\")"->"throw $r0";
}
