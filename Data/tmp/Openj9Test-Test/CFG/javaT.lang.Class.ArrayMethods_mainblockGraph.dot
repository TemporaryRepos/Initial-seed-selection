digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.Class.ArrayMethods;
specialinvoke $r0.<javaT.lang.Class.ArrayMethods: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetInterfaces()>();
$i0 = r1.<javaT.lang.Class.ArrayMethods: int failed>;
if $i0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed, check log for details\");
throw $r2;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.Class.ArrayMethods;
specialinvoke $r0.<javaT.lang.Class.ArrayMethods: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetInterfaces()>();
$i0 = r1.<javaT.lang.Class.ArrayMethods: int failed>;
if $i0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed, check log for details\");
throw $r2;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
$r0 = new javaT.lang.Class.ArrayMethods;
specialinvoke $r0.<javaT.lang.Class.ArrayMethods: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethod()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetDeclaredMethods()>();
virtualinvoke r1.<javaT.lang.Class.ArrayMethods: void testGetInterfaces()>();
$i0 = r1.<javaT.lang.Class.ArrayMethods: int failed>;
if $i0 == 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
