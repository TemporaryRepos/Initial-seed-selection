digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "r1 := @parameter2: java.lang.Object"
    "r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(int,int)>(i0, i1)"
    "$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1)"
    "if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)"
    "$r6 = newarray (java.lang.Object)[4]"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$r6[0] = $r7"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r6[1] = $r8"
    "$r6[2] = r0"
    "$r6[3] = r1"
    "staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6)"
    "r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)"
    "$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1)"
    "if $z1 != 0 goto return"
    "$r3 = newarray (java.lang.Object)[4]"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$r3[0] = $r4"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "$r3[1] = $r5"
    "$r3[2] = r2"
    "$r3[3] = r1"
    "staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3)"
    "return"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"r1 := @parameter2: java.lang.Object";
    "r1 := @parameter2: java.lang.Object"->"r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(int,int)>(i0, i1)";
    "r0 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doFloorDiv(int,int)>(i0, i1)"->"$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1)";
    "$z0 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r0, r1)"->"if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)";
    "if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)"->"$r6 = newarray (java.lang.Object)[4]";
    "if $z0 != 0 goto r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)"->"r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)";
    "$r6 = newarray (java.lang.Object)[4]"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r6[0] = $r7";
    "$r6[0] = $r7"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r6[1] = $r8";
    "$r6[1] = $r8"->"$r6[2] = r0";
    "$r6[2] = r0"->"$r6[3] = r1";
    "$r6[3] = r1"->"staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6)";
    "staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: Math.floorDiv(%d, %d) = %s; expected %s%n\", $r6)"->"r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)";
    "r2 = staticinvoke <javaT.lang.Math.DivModTests: java.lang.Object doStrictFloorDiv(int,int)>(i0, i1)"->"$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1)";
    "$z1 = staticinvoke <javaT.lang.Math.DivModTests: boolean resultEquals(java.lang.Object,java.lang.Object)>(r2, r1)"->"if $z1 != 0 goto return";
    "if $z1 != 0 goto return"->"$r3 = newarray (java.lang.Object)[4]";
    "if $z1 != 0 goto return"->"return";
    "$r3 = newarray (java.lang.Object)[4]"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r3[0] = $r4";
    "$r3[0] = $r4"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"$r3[1] = $r5";
    "$r3[1] = $r5"->"$r3[2] = r2";
    "$r3[2] = r2"->"$r3[3] = r1";
    "$r3[3] = r1"->"staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3)";
    "staticinvoke <javaT.lang.Math.DivModTests: void fail(java.lang.String,java.lang.Object[])>(\"FAIL: StrictMath.floorDiv(%d, %d) = %s; expected %s%n\", $r3)"->"return";
}
