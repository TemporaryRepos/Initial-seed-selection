digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r7 := @parameter1: java.lang.Class"
    "$r0 = new java.lang.StringBuffer"
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"
    "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i0)"
    "goto [?= $r2 = new java.lang.StringBuilder]"
    "$r11 := @caughtexception"
    "r12 = $r11"
    "$z0 = virtualinvoke r7.<java.lang.Class: boolean isInstance(java.lang.Object)>(r12)"
    "if $z0 == 0 goto $r13 = new java.lang.RuntimeException"
    "return"
    "$r13 = new java.lang.RuntimeException"
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r12)"
    "throw $r13"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\")"
    "$r4 = staticinvoke <javaT.lang.StringBuffer.Supplementary: java.lang.String toHexString(int)>(i0)"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") didn\'t throw \")"
    "$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>()"
    "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>(1, $r10)"
    "i0 := @parameter0: int"->"r7 := @parameter1: java.lang.Class";
    "r7 := @parameter1: java.lang.Class"->"$r0 = new java.lang.StringBuffer";
    "r7 := @parameter1: java.lang.Class"->"$r11 := @caughtexception";
    "$r0 = new java.lang.StringBuffer"->"specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()";
    "$r0 = new java.lang.StringBuffer"->"$r11 := @caughtexception";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"->"virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i0)";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"->"$r11 := @caughtexception";
    "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i0)"->"goto [?= $r2 = new java.lang.StringBuilder]";
    "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i0)"->"$r11 := @caughtexception";
    "goto [?= $r2 = new java.lang.StringBuilder]"->"$r2 = new java.lang.StringBuilder";
    "$r11 := @caughtexception"->"r12 = $r11";
    "r12 = $r11"->"$z0 = virtualinvoke r7.<java.lang.Class: boolean isInstance(java.lang.Object)>(r12)";
    "$z0 = virtualinvoke r7.<java.lang.Class: boolean isInstance(java.lang.Object)>(r12)"->"if $z0 == 0 goto $r13 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r13 = new java.lang.RuntimeException"->"return";
    "if $z0 == 0 goto $r13 = new java.lang.RuntimeException"->"$r13 = new java.lang.RuntimeException";
    "$r13 = new java.lang.RuntimeException"->"specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r12)";
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r12)"->"throw $r13";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\")"->"$r4 = staticinvoke <javaT.lang.StringBuffer.Supplementary: java.lang.String toHexString(int)>(i0)";
    "$r4 = staticinvoke <javaT.lang.StringBuffer.Supplementary: java.lang.String toHexString(int)>(i0)"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") didn\'t throw \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") didn\'t throw \")"->"$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>()";
    "$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>()"->"$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)";
    "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>(1, $r10)";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>(1, $r10)"->"return";
}
