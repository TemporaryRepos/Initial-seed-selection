digraph "unitGraph" {
    "r13 := @parameter0: java.lang.String[]"
    "$r0 = new java.net.DatagramSocket"
    "specialinvoke $r0.<java.net.DatagramSocket: void <init>()>()"
    "r1 = $r0"
    "staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>(r1)"
    "r2 = staticinvoke <java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open()>()"
    "$r3 = virtualinvoke r2.<java.nio.channels.DatagramChannel: java.net.DatagramSocket socket()>()"
    "staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>($r3)"
    "$r4 = new java.net.Socket"
    "specialinvoke $r4.<java.net.Socket: void <init>()>()"
    "r5 = $r4"
    "staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>(r5)"
    "r6 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>()"
    "$r7 = virtualinvoke r6.<java.nio.channels.SocketChannel: java.net.Socket socket()>()"
    "staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>($r7)"
    "$i0 = <javaT.net.Socket.TrafficClass: int failures>"
    "if $i0 <= 0 goto return"
    "$r8 = new java.lang.Exception"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$i1 = <javaT.net.Socket.TrafficClass: int failures>"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sub-test(s) failed - see log for details.\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r12)"
    "throw $r8"
    "return"
    "r13 := @parameter0: java.lang.String[]"->"$r0 = new java.net.DatagramSocket";
    "$r0 = new java.net.DatagramSocket"->"specialinvoke $r0.<java.net.DatagramSocket: void <init>()>()";
    "specialinvoke $r0.<java.net.DatagramSocket: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>(r1)";
    "staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>(r1)"->"r2 = staticinvoke <java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open()>()";
    "r2 = staticinvoke <java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open()>()"->"$r3 = virtualinvoke r2.<java.nio.channels.DatagramChannel: java.net.DatagramSocket socket()>()";
    "$r3 = virtualinvoke r2.<java.nio.channels.DatagramChannel: java.net.DatagramSocket socket()>()"->"staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>($r3)";
    "staticinvoke <javaT.net.Socket.TrafficClass: void testDatagramSocket(java.net.DatagramSocket)>($r3)"->"$r4 = new java.net.Socket";
    "$r4 = new java.net.Socket"->"specialinvoke $r4.<java.net.Socket: void <init>()>()";
    "specialinvoke $r4.<java.net.Socket: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>(r5)";
    "staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>(r5)"->"r6 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>()";
    "r6 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>()"->"$r7 = virtualinvoke r6.<java.nio.channels.SocketChannel: java.net.Socket socket()>()";
    "$r7 = virtualinvoke r6.<java.nio.channels.SocketChannel: java.net.Socket socket()>()"->"staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>($r7)";
    "staticinvoke <javaT.net.Socket.TrafficClass: void testSocket(java.net.Socket)>($r7)"->"$i0 = <javaT.net.Socket.TrafficClass: int failures>";
    "$i0 = <javaT.net.Socket.TrafficClass: int failures>"->"if $i0 <= 0 goto return";
    "if $i0 <= 0 goto return"->"$r8 = new java.lang.Exception";
    "if $i0 <= 0 goto return"->"return";
    "$r8 = new java.lang.Exception"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$i1 = <javaT.net.Socket.TrafficClass: int failures>";
    "$i1 = <javaT.net.Socket.TrafficClass: int failures>"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sub-test(s) failed - see log for details.\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sub-test(s) failed - see log for details.\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r12)"->"throw $r8";
}
