digraph "unitGraph" {
    "r0 := @parameter0: javax.crypto.Cipher"
    "r1 := @parameter1: java.security.spec.AlgorithmParameterSpec"
    "i0 := @parameter2: int"
    "z0 := @parameter3: boolean"
    "if z0 == 0 goto $r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r38 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r47 = (java.security.Key) $r38"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r47)"
    "$r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r48 = (java.security.Key) $r2"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r48, r1)"
    "$r3 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "r4 = virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)"
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i1 = lengthof r4"
    "$i2 = $i1 + i0"
    "r39 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r5, $i2)"
    "if z0 == 0 goto $r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r36 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r49 = (java.security.Key) $r36"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r49)"
    "$r37 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r50 = (java.security.Key) $r37"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r50, r1)"
    "$r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i3 = lengthof $r6"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i3, r39, 0)"
    "$i5 = lengthof r4"
    "$z1 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i5)"
    "if $z1 != 0 goto $z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r41 = new java.lang.Exception"
    "specialinvoke $r41.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#1 diff check failed!\")"
    "throw $r41"
    "$z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z2 == 0 goto $r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r34 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#1 diff check passed\")"
    "$r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r7 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i6 = lengthof $r7"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r39, 0, $i6)"
    "if z0 == 0 goto $r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r32 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r51 = (java.security.Key) $r32"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r51)"
    "$r33 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r52 = (java.security.Key) $r33"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r52, r1)"
    "$r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i7 = lengthof $r9"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i7, r39, i0)"
    "$i9 = lengthof r4"
    "$z3 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, i0, r4, 0, $i9)"
    "if $z3 != 0 goto $z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r42 = new java.lang.Exception"
    "specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#2 diff check failed\")"
    "throw $r42"
    "$z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z4 == 0 goto $r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r30 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#2 diff check passed\")"
    "$r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i10 = lengthof $r10"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r39, i0, $i10)"
    "if z0 == 0 goto $r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r28 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r53 = (java.security.Key) $r28"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r53)"
    "$r29 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r54 = (java.security.Key) $r29"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r54, r1)"
    "$r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i11 = lengthof $r12"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, i0, $i11, r39, 0)"
    "$i13 = lengthof r4"
    "$z5 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i13)"
    "if $z5 != 0 goto $z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r43 = new java.lang.Exception"
    "specialinvoke $r43.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#3 diff check failed\")"
    "throw $r43"
    "$z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z6 == 0 goto $r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r26 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#3 diff check passed\")"
    "$r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"
    "$r55 = (java.security.Key) $r13"
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r55, r1)"
    "$i14 = lengthof r4"
    "$i15 = $i14 + i0"
    "r40 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r4, $i15)"
    "$i16 = lengthof r4"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i16, r40, 0)"
    "$r15 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r14 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i18 = lengthof $r14"
    "$z7 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r15, 0, $i18)"
    "if $z7 != 0 goto $z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r44 = new java.lang.Exception"
    "specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#1 diff check failed!\")"
    "throw $r44"
    "$z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z8 == 0 goto $i19 = lengthof r4"
    "$r24 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#1 diff check passed\")"
    "$i19 = lengthof r4"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, 0, $i19)"
    "$i20 = lengthof r4"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i20, r40, i0)"
    "$r17 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r16 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i22 = lengthof $r16"
    "$z9 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, i0, $r17, 0, $i22)"
    "if $z9 != 0 goto $z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r45 = new java.lang.Exception"
    "specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#2 diff check failed\")"
    "throw $r45"
    "$z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z10 == 0 goto $i23 = lengthof r4"
    "$r22 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#2 diff check passed\")"
    "$i23 = lengthof r4"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, i0, $i23)"
    "$i24 = lengthof r4"
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, i0, $i24, r40, 0)"
    "$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$r18 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"
    "$i26 = lengthof $r18"
    "$z11 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r19, 0, $i26)"
    "if $z11 != 0 goto $z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "$r46 = new java.lang.Exception"
    "specialinvoke $r46.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#3 diff check failed\")"
    "throw $r46"
    "$z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"
    "if $z12 == 0 goto return"
    "$r20 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#3 diff check passed\")"
    "return"
    "r0 := @parameter0: javax.crypto.Cipher"->"r1 := @parameter1: java.security.spec.AlgorithmParameterSpec";
    "r1 := @parameter1: java.security.spec.AlgorithmParameterSpec"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"z0 := @parameter3: boolean";
    "z0 := @parameter3: boolean"->"if z0 == 0 goto $r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if z0 == 0 goto $r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r38 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if z0 == 0 goto $r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r38 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r47 = (java.security.Key) $r38";
    "$r47 = (java.security.Key) $r38"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r47)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r47)"->"$r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r48 = (java.security.Key) $r2";
    "$r48 = (java.security.Key) $r2"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r48, r1)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r48, r1)"->"$r3 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r3 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"r4 = virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)";
    "r4 = virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)"->"$r5 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i1 = lengthof r4";
    "$i1 = lengthof r4"->"$i2 = $i1 + i0";
    "$i2 = $i1 + i0"->"r39 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r5, $i2)";
    "r39 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r5, $i2)"->"if z0 == 0 goto $r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "if z0 == 0 goto $r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r36 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if z0 == 0 goto $r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r36 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r49 = (java.security.Key) $r36";
    "$r49 = (java.security.Key) $r36"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r49)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r49)"->"$r37 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r37 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r50 = (java.security.Key) $r37";
    "$r50 = (java.security.Key) $r37"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r50, r1)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r50, r1)"->"$r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i3 = lengthof $r6";
    "$i3 = lengthof $r6"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i3, r39, 0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i3, r39, 0)"->"$i5 = lengthof r4";
    "$i5 = lengthof r4"->"$z1 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i5)";
    "$z1 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i5)"->"if $z1 != 0 goto $z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z1 != 0 goto $z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r41 = new java.lang.Exception";
    "if $z1 != 0 goto $z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r41 = new java.lang.Exception"->"specialinvoke $r41.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#1 diff check failed!\")";
    "specialinvoke $r41.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#1 diff check failed!\")"->"throw $r41";
    "$z2 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z2 == 0 goto $r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "if $z2 == 0 goto $r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r34 = <java.lang.System: java.io.PrintStream out>";
    "if $z2 == 0 goto $r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r34 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#1 diff check passed\")";
    "virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#1 diff check passed\")"->"$r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r7 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r7 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i6 = lengthof $r7";
    "$i6 = lengthof $r7"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r39, 0, $i6)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r39, 0, $i6)"->"if z0 == 0 goto $r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "if z0 == 0 goto $r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r32 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if z0 == 0 goto $r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r32 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r51 = (java.security.Key) $r32";
    "$r51 = (java.security.Key) $r32"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r51)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r51)"->"$r33 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r33 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r52 = (java.security.Key) $r33";
    "$r52 = (java.security.Key) $r33"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r52, r1)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r52, r1)"->"$r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r9 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i7 = lengthof $r9";
    "$i7 = lengthof $r9"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i7, r39, i0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, 0, $i7, r39, i0)"->"$i9 = lengthof r4";
    "$i9 = lengthof r4"->"$z3 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, i0, r4, 0, $i9)";
    "$z3 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, i0, r4, 0, $i9)"->"if $z3 != 0 goto $z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z3 != 0 goto $z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r42 = new java.lang.Exception";
    "if $z3 != 0 goto $z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r42 = new java.lang.Exception"->"specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#2 diff check failed\")";
    "specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#2 diff check failed\")"->"throw $r42";
    "$z4 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z4 == 0 goto $r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "if $z4 == 0 goto $r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r30 = <java.lang.System: java.io.PrintStream out>";
    "if $z4 == 0 goto $r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r30 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#2 diff check passed\")";
    "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#2 diff check passed\")"->"$r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r11 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i10 = lengthof $r10";
    "$i10 = lengthof $r10"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r39, i0, $i10)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r39, i0, $i10)"->"if z0 == 0 goto $r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "if z0 == 0 goto $r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r28 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if z0 == 0 goto $r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r28 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r53 = (java.security.Key) $r28";
    "$r53 = (java.security.Key) $r28"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r53)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r53)"->"$r29 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r29 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r54 = (java.security.Key) $r29";
    "$r54 = (java.security.Key) $r29"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r54, r1)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r54, r1)"->"$r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i11 = lengthof $r12";
    "$i11 = lengthof $r12"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, i0, $i11, r39, 0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r39, i0, $i11, r39, 0)"->"$i13 = lengthof r4";
    "$i13 = lengthof r4"->"$z5 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i13)";
    "$z5 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r39, 0, r4, 0, $i13)"->"if $z5 != 0 goto $z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z5 != 0 goto $z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r43 = new java.lang.Exception";
    "if $z5 != 0 goto $z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r43 = new java.lang.Exception"->"specialinvoke $r43.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#3 diff check failed\")";
    "specialinvoke $r43.<java.lang.Exception: void <init>(java.lang.String)>(\"Enc#3 diff check failed\")"->"throw $r43";
    "$z6 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z6 == 0 goto $r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "if $z6 == 0 goto $r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r26 = <java.lang.System: java.io.PrintStream out>";
    "if $z6 == 0 goto $r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r26 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#3 diff check passed\")";
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>(\"Enc#3 diff check passed\")"->"$r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>";
    "$r13 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: javax.crypto.SecretKey KEY>"->"$r55 = (java.security.Key) $r13";
    "$r55 = (java.security.Key) $r13"->"virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r55, r1)";
    "virtualinvoke r0.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r55, r1)"->"$i14 = lengthof r4";
    "$i14 = lengthof r4"->"$i15 = $i14 + i0";
    "$i15 = $i14 + i0"->"r40 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r4, $i15)";
    "r40 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r4, $i15)"->"$i16 = lengthof r4";
    "$i16 = lengthof r4"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i16, r40, 0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i16, r40, 0)"->"$r15 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r15 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r14 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r14 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i18 = lengthof $r14";
    "$i18 = lengthof $r14"->"$z7 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r15, 0, $i18)";
    "$z7 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r15, 0, $i18)"->"if $z7 != 0 goto $z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z7 != 0 goto $z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r44 = new java.lang.Exception";
    "if $z7 != 0 goto $z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r44 = new java.lang.Exception"->"specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#1 diff check failed!\")";
    "specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#1 diff check failed!\")"->"throw $r44";
    "$z8 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z8 == 0 goto $i19 = lengthof r4";
    "if $z8 == 0 goto $i19 = lengthof r4"->"$r24 = <java.lang.System: java.io.PrintStream out>";
    "if $z8 == 0 goto $i19 = lengthof r4"->"$i19 = lengthof r4";
    "$r24 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#1 diff check passed\")";
    "virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#1 diff check passed\")"->"$i19 = lengthof r4";
    "$i19 = lengthof r4"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, 0, $i19)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, 0, $i19)"->"$i20 = lengthof r4";
    "$i20 = lengthof r4"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i20, r40, i0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, 0, $i20, r40, i0)"->"$r17 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r17 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r16 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r16 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i22 = lengthof $r16";
    "$i22 = lengthof $r16"->"$z9 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, i0, $r17, 0, $i22)";
    "$z9 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, i0, $r17, 0, $i22)"->"if $z9 != 0 goto $z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z9 != 0 goto $z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r45 = new java.lang.Exception";
    "if $z9 != 0 goto $z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r45 = new java.lang.Exception"->"specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#2 diff check failed\")";
    "specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#2 diff check failed\")"->"throw $r45";
    "$z10 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z10 == 0 goto $i23 = lengthof r4";
    "if $z10 == 0 goto $i23 = lengthof r4"->"$r22 = <java.lang.System: java.io.PrintStream out>";
    "if $z10 == 0 goto $i23 = lengthof r4"->"$i23 = lengthof r4";
    "$r22 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#2 diff check passed\")";
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#2 diff check passed\")"->"$i23 = lengthof r4";
    "$i23 = lengthof r4"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, i0, $i23)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r40, i0, $i23)"->"$i24 = lengthof r4";
    "$i24 = lengthof r4"->"virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, i0, $i24, r40, 0)";
    "virtualinvoke r0.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r40, i0, $i24, r40, 0)"->"$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r19 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$r18 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>";
    "$r18 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: byte[] PT>"->"$i26 = lengthof $r18";
    "$i26 = lengthof $r18"->"$z11 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r19, 0, $i26)";
    "$z11 = staticinvoke <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean isTwoArraysEqual(byte[],int,byte[],int,int)>(r40, 0, $r19, 0, $i26)"->"if $z11 != 0 goto $z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "if $z11 != 0 goto $z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$r46 = new java.lang.Exception";
    "if $z11 != 0 goto $z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"$z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>";
    "$r46 = new java.lang.Exception"->"specialinvoke $r46.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#3 diff check failed\")";
    "specialinvoke $r46.<java.lang.Exception: void <init>(java.lang.String)>(\"Dec#3 diff check failed\")"->"throw $r46";
    "$z12 = <com.sun.crypto.provider.Cipher.AES.TestCopySafe: boolean DEBUG>"->"if $z12 == 0 goto return";
    "if $z12 == 0 goto return"->"$r20 = <java.lang.System: java.io.PrintStream out>";
    "if $z12 == 0 goto return"->"return";
    "$r20 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#3 diff check passed\")";
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Dec#3 diff check passed\")"->"return";
}
