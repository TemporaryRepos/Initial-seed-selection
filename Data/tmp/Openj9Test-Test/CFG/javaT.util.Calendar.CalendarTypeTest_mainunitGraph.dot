digraph "unitGraph" {
    "r26 := @parameter0: java.lang.String[]"
    "i3 = 0"
    "$r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>"
    "$i0 = lengthof $r0"
    "if i3 >= $i0 goto $r1 = new java.util.GregorianCalendar"
    "$r22 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>"
    "$r23 = $r22[i3]"
    "r27 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r23)"
    "r28 = virtualinvoke r27.<java.util.Calendar: java.lang.String getCalendarType()>()"
    "$r24 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"
    "$i2 = i3 / 2"
    "$r25 = $r24[$i2]"
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad calendar type\", r28, $r25)"
    "i3 = i3 + 1"
    "goto [?= $r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>]"
    "$r1 = new java.util.GregorianCalendar"
    "specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()"
    "r29 = $r1"
    "$r2 = virtualinvoke r29.<java.util.GregorianCalendar: java.lang.String getCalendarType()>()"
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar type\", $r2, \"gregory\")"
    "$r3 = new javaT.util.Calendar.CalendarTypeTest$Gregorian"
    "specialinvoke $r3.<javaT.util.Calendar.CalendarTypeTest$Gregorian: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)"
    "r30 = $r3"
    "$r4 = virtualinvoke r30.<javaT.util.Calendar.CalendarTypeTest$Gregorian: java.lang.String getCalendarType()>()"
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar subclass type\", $r4, \"gregory\")"
    "$r5 = new javaT.util.Calendar.CalendarTypeTest$Koyomi"
    "specialinvoke $r5.<javaT.util.Calendar.CalendarTypeTest$Koyomi: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)"
    "r31 = $r5"
    "$r6 = virtualinvoke r31.<java.util.Calendar: java.lang.String getCalendarType()>()"
    "$r7 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>()"
    "$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()"
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad class name\", $r6, $r8)"
    "r9 = staticinvoke <java.util.Calendar: java.util.Set getAvailableCalendarTypes()>()"
    "$i1 = interfaceinvoke r9.<java.util.Set: int size()>()"
    "if $i1 == 3 goto r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"
    "$r21 = new java.lang.RuntimeException"
    "specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"size != 3\")"
    "throw $r21"
    "r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"
    "i4 = lengthof r32"
    "i5 = 0"
    "if i5 >= i4 goto r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>"
    "r33 = r32[i5]"
    "$z1 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r33)"
    "if $z1 != 0 goto i5 = i5 + 1"
    "$r16 = new java.lang.RuntimeException"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not contained\")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)"
    "throw $r16"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>"
    "i6 = lengthof r34"
    "i7 = 0"
    "if i7 >= i6 goto return"
    "r35 = r34[i7]"
    "$z0 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r35)"
    "if $z0 == 0 goto i7 = i7 + 1"
    "$r10 = new java.lang.RuntimeException"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"alias \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" contained\")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15)"
    "throw $r10"
    "i7 = i7 + 1"
    "return"
    "r26 := @parameter0: java.lang.String[]"->"i3 = 0";
    "i3 = 0"->"$r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>";
    "$r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i3 >= $i0 goto $r1 = new java.util.GregorianCalendar";
    "if i3 >= $i0 goto $r1 = new java.util.GregorianCalendar"->"$r22 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>";
    "if i3 >= $i0 goto $r1 = new java.util.GregorianCalendar"->"$r1 = new java.util.GregorianCalendar";
    "$r22 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>"->"$r23 = $r22[i3]";
    "$r23 = $r22[i3]"->"r27 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r23)";
    "r27 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r23)"->"r28 = virtualinvoke r27.<java.util.Calendar: java.lang.String getCalendarType()>()";
    "r28 = virtualinvoke r27.<java.util.Calendar: java.lang.String getCalendarType()>()"->"$r24 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>";
    "$r24 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"->"$i2 = i3 / 2";
    "$i2 = i3 / 2"->"$r25 = $r24[$i2]";
    "$r25 = $r24[$i2]"->"staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad calendar type\", r28, $r25)";
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad calendar type\", r28, $r25)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>]";
    "goto [?= $r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>]"->"$r0 = <javaT.util.Calendar.CalendarTypeTest: java.util.Locale[] locales>";
    "$r1 = new java.util.GregorianCalendar"->"specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()";
    "specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()"->"r29 = $r1";
    "r29 = $r1"->"$r2 = virtualinvoke r29.<java.util.GregorianCalendar: java.lang.String getCalendarType()>()";
    "$r2 = virtualinvoke r29.<java.util.GregorianCalendar: java.lang.String getCalendarType()>()"->"staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar type\", $r2, \"gregory\")";
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar type\", $r2, \"gregory\")"->"$r3 = new javaT.util.Calendar.CalendarTypeTest$Gregorian";
    "$r3 = new javaT.util.Calendar.CalendarTypeTest$Gregorian"->"specialinvoke $r3.<javaT.util.Calendar.CalendarTypeTest$Gregorian: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)";
    "specialinvoke $r3.<javaT.util.Calendar.CalendarTypeTest$Gregorian: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)"->"r30 = $r3";
    "r30 = $r3"->"$r4 = virtualinvoke r30.<javaT.util.Calendar.CalendarTypeTest$Gregorian: java.lang.String getCalendarType()>()";
    "$r4 = virtualinvoke r30.<javaT.util.Calendar.CalendarTypeTest$Gregorian: java.lang.String getCalendarType()>()"->"staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar subclass type\", $r4, \"gregory\")";
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad GregorianCalendar subclass type\", $r4, \"gregory\")"->"$r5 = new javaT.util.Calendar.CalendarTypeTest$Koyomi";
    "$r5 = new javaT.util.Calendar.CalendarTypeTest$Koyomi"->"specialinvoke $r5.<javaT.util.Calendar.CalendarTypeTest$Koyomi: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)";
    "specialinvoke $r5.<javaT.util.Calendar.CalendarTypeTest$Koyomi: void <init>(javaT.util.Calendar.CalendarTypeTest$1)>(null)"->"r31 = $r5";
    "r31 = $r5"->"$r6 = virtualinvoke r31.<java.util.Calendar: java.lang.String getCalendarType()>()";
    "$r6 = virtualinvoke r31.<java.util.Calendar: java.lang.String getCalendarType()>()"->"$r7 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>()";
    "$r7 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>()"->"$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()";
    "$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()"->"staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad class name\", $r6, $r8)";
    "staticinvoke <javaT.util.Calendar.CalendarTypeTest: void checkValue(java.lang.String,java.lang.String,java.lang.String)>(\"bad class name\", $r6, $r8)"->"r9 = staticinvoke <java.util.Calendar: java.util.Set getAvailableCalendarTypes()>()";
    "r9 = staticinvoke <java.util.Calendar: java.util.Set getAvailableCalendarTypes()>()"->"$i1 = interfaceinvoke r9.<java.util.Set: int size()>()";
    "$i1 = interfaceinvoke r9.<java.util.Set: int size()>()"->"if $i1 == 3 goto r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>";
    "if $i1 == 3 goto r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"->"$r21 = new java.lang.RuntimeException";
    "if $i1 == 3 goto r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"->"r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>";
    "$r21 = new java.lang.RuntimeException"->"specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"size != 3\")";
    "specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"size != 3\")"->"throw $r21";
    "r32 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] TYPES>"->"i4 = lengthof r32";
    "i4 = lengthof r32"->"i5 = 0";
    "i5 = 0"->"if i5 >= i4 goto r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>";
    "if i5 >= i4 goto r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>"->"r33 = r32[i5]";
    "if i5 >= i4 goto r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>"->"r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>";
    "r33 = r32[i5]"->"$z1 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r33)";
    "$z1 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r33)"->"if $z1 != 0 goto i5 = i5 + 1";
    "if $z1 != 0 goto i5 = i5 + 1"->"$r16 = new java.lang.RuntimeException";
    "if $z1 != 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r16 = new java.lang.RuntimeException"->"$r17 = new java.lang.StringBuilder";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not contained\")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not contained\")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)"->"throw $r16";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i4 goto r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>";
    "r34 = <javaT.util.Calendar.CalendarTypeTest: java.lang.String[] ALIASES>"->"i6 = lengthof r34";
    "i6 = lengthof r34"->"i7 = 0";
    "i7 = 0"->"if i7 >= i6 goto return";
    "if i7 >= i6 goto return"->"r35 = r34[i7]";
    "if i7 >= i6 goto return"->"return";
    "r35 = r34[i7]"->"$z0 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r35)";
    "$z0 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r35)"->"if $z0 == 0 goto i7 = i7 + 1";
    "if $z0 == 0 goto i7 = i7 + 1"->"$r10 = new java.lang.RuntimeException";
    "if $z0 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r10 = new java.lang.RuntimeException"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"alias \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"alias \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" contained\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" contained\")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15)";
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15)"->"throw $r10";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i6 goto return";
}
