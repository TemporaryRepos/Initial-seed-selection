digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName"
    "specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()"
    "$r2 = new java.lang.SecurityManager"
    "specialinvoke $r2.<java.lang.SecurityManager: void <init>()>()"
    "r3 = $r2"
    "staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3)"
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null)"
    "$r4 = new java.lang.Exception"
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\")"
    "throw $r4"
    "$r6 := @caughtexception"
    "r9 = $r6"
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\")"
    "$r7 = new java.lang.Exception"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\")"
    "throw $r7"
    "$r5 := @caughtexception"
    "r10 = $r5"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName";
    "$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName"->"specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>()";
    "specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()";
    "virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()"->"$r2 = new java.lang.SecurityManager";
    "$r2 = new java.lang.SecurityManager"->"specialinvoke $r2.<java.lang.SecurityManager: void <init>()>()";
    "specialinvoke $r2.<java.lang.SecurityManager: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3)";
    "staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3)"->"virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()";
    "virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()"->"virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null)";
    "virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>()"->"$r6 := @caughtexception";
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null)"->"$r4 = new java.lang.Exception";
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null)"->"$r6 := @caughtexception";
    "$r4 = new java.lang.Exception"->"specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\")";
    "$r4 = new java.lang.Exception"->"$r6 := @caughtexception";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\")"->"throw $r4";
    "specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\")"->"$r6 := @caughtexception";
    "throw $r4"->"$r6 := @caughtexception";
    "$r6 := @caughtexception"->"r9 = $r6";
    "r9 = $r6"->"virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\")";
    "r9 = $r6"->"$r5 := @caughtexception";
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\")"->"$r7 = new java.lang.Exception";
    "virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\")"->"$r5 := @caughtexception";
    "$r7 = new java.lang.Exception"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\")";
    "$r7 = new java.lang.Exception"->"$r5 := @caughtexception";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\")"->"throw $r7";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\")"->"$r5 := @caughtexception";
    "throw $r7"->"$r5 := @caughtexception";
    "$r5 := @caughtexception"->"r10 = $r5";
    "r10 = $r5"->"return";
}
