digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r2 := @this: vm.verifier.defaultMethods.DefaultMethodRegressionTests;
$r0 = new vm.verifier.defaultMethods.C;
specialinvoke $r0.<vm.verifier.defaultMethods.C: void <init>()>();
r1 = $r0;
$r3 = new java.lang.Integer;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>(1);
$i0 = virtualinvoke r1.<vm.verifier.defaultMethods.C: int bbb(java.lang.Integer)>($r3);
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(22);
virtualinvoke r2.<vm.verifier.defaultMethods.DefaultMethodRegressionTests: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);
$r6 = new java.lang.Float;
specialinvoke $r6.<java.lang.Float: void <init>(double)>(1.1);
$i1 = virtualinvoke r1.<vm.verifier.defaultMethods.C: int bbb(java.lang.Float)>($r6);
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(33);
virtualinvoke r2.<vm.verifier.defaultMethods.DefaultMethodRegressionTests: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);
$r9 = new java.lang.Long;
specialinvoke $r9.<java.lang.Long: void <init>(long)>(1L);
$i2 = virtualinvoke r1.<vm.verifier.defaultMethods.C: int bbb(java.lang.Long)>($r9);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44);
virtualinvoke r2.<vm.verifier.defaultMethods.DefaultMethodRegressionTests: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);
$r12 = new java.lang.Double;
specialinvoke $r12.<java.lang.Double: void <init>(double)>(0.01);
$i3 = virtualinvoke r1.<vm.verifier.defaultMethods.C: int bbb(java.lang.Double)>($r12);
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(55);
virtualinvoke r2.<vm.verifier.defaultMethods.DefaultMethodRegressionTests: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14);
$r15 = new java.lang.String;
specialinvoke $r15.<java.lang.String: void <init>(java.lang.String)>(\"\");
$i4 = virtualinvoke r1.<vm.verifier.defaultMethods.C: int bbb(java.lang.String)>($r15);
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(66);
virtualinvoke r2.<vm.verifier.defaultMethods.DefaultMethodRegressionTests: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);
return;
"
}
