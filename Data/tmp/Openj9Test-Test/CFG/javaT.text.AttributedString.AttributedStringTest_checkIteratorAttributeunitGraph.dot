digraph "unitGraph" {
    "r0 := @parameter0: java.text.AttributedCharacterIterator"
    "i0 := @parameter1: int"
    "r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute"
    "r2 := @parameter3: java.lang.Object"
    "interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0)"
    "r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1)"
    "if r2 != null goto (branch)"
    "if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"
    "if r2 == null goto $r3 = new java.lang.StringBuilder"
    "$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15)"
    "if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8)"
    "$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"
    "r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)"
    "if r17 == null goto return"
    "if r2 == null goto $r9 = new java.lang.StringBuilder"
    "$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17)"
    "if $z0 != 0 goto return"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14)"
    "return"
    "r0 := @parameter0: java.text.AttributedCharacterIterator"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute";
    "r1 := @parameter2: java.text.AttributedCharacterIterator$Attribute"->"r2 := @parameter3: java.lang.Object";
    "r2 := @parameter3: java.lang.Object"->"interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0)";
    "interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0)"->"r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1)";
    "r15 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1)"->"if r2 != null goto (branch)";
    "if r2 != null goto (branch)"->"if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()";
    "if r2 != null goto (branch)"->"if r2 == null goto $r3 = new java.lang.StringBuilder";
    "if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"->"if r2 == null goto $r3 = new java.lang.StringBuilder";
    "if r15 == null goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"->"$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()";
    "if r2 == null goto $r3 = new java.lang.StringBuilder"->"$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15)";
    "if r2 == null goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "$z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r15)"->"if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()";
    "if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"->"$r3 = new java.lang.StringBuilder";
    "if $z1 != 0 goto $r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"->"$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator returns wrong attribute value - \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8)";
    "staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r8)"->"$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()";
    "$r16 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>()"->"r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)";
    "r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)"->"if r2 != null goto (branch)";
    "if r2 != null goto (branch)"->"if r17 == null goto return";
    "if r2 != null goto (branch)"->"if r2 == null goto $r9 = new java.lang.StringBuilder";
    "if r17 == null goto return"->"if r2 == null goto $r9 = new java.lang.StringBuilder";
    "if r17 == null goto return"->"return";
    "if r2 == null goto $r9 = new java.lang.StringBuilder"->"$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17)";
    "if r2 == null goto $r9 = new java.lang.StringBuilder"->"$r9 = new java.lang.StringBuilder";
    "$z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r17)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r9 = new java.lang.StringBuilder";
    "if $z0 != 0 goto return"->"return";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"iterator\'s map returns wrong attribute value - \")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14)";
    "staticinvoke <javaT.text.AttributedString.AttributedStringTest: void throwException(java.text.AttributedCharacterIterator,java.lang.String)>(r0, $r14)"->"return";
}
