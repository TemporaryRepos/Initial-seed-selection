digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"old\");
$r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
$r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(\"new\");
$z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(\"old\");
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Return value: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);
throw $r8;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"old\");
$r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
$r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(\"new\");
$z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(\"old\");
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Return value: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);
throw $r8;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key\", \"old\");
$r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
$r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
$r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(\"new\");
$z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(\"old\");
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
