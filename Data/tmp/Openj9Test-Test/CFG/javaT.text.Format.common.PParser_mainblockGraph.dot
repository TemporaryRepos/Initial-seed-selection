digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 14 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.io.FileReader;
"
    "Block 1:
[preds: 0 ] [succs: 15 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"need filename\");
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 3 14 ]
$r1 = new java.io.FileReader;
"
    "Block 3:
[preds: 2 ] [succs: 4 14 ]
$r2 = r0[0];
"
    "Block 4:
[preds: 3 ] [succs: 5 14 ]
specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>($r2);
"
    "Block 5:
[preds: 4 ] [succs: 6 14 ]
r14 = $r1;
"
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r3 = new javaT.text.Format.common.PParser;
"
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r3.<javaT.text.Format.common.PParser: void <init>()>();
"
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
r4 = $r3;
"
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
r5 = virtualinvoke r4.<javaT.text.Format.common.PParser: java.util.Hashtable parse(java.io.Reader)>(r14);
"
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
staticinvoke <javaT.text.Format.common.PParser: void dump(java.lang.Object)>(r5);
"
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
virtualinvoke $r6.<java.io.PrintStream: void println()>();
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= return];
"
    "Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
"
    "Block 15:
[preds: 1 13 14 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 14 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.io.FileReader;
"->"Block 1:
[preds: 0 ] [succs: 15 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"need filename\");
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 14 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.io.FileReader;
"->"Block 2:
[preds: 0 ] [succs: 3 14 ]
$r1 = new java.io.FileReader;
";
    "Block 0:
[preds: ] [succs: 1 2 14 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.io.FileReader;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 1:
[preds: 0 ] [succs: 15 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"need filename\");
goto [?= return];
"->"Block 15:
[preds: 1 13 14 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 14 ]
$r1 = new java.io.FileReader;
"->"Block 3:
[preds: 2 ] [succs: 4 14 ]
$r2 = r0[0];
";
    "Block 2:
[preds: 0 ] [succs: 3 14 ]
$r1 = new java.io.FileReader;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 3:
[preds: 2 ] [succs: 4 14 ]
$r2 = r0[0];
"->"Block 4:
[preds: 3 ] [succs: 5 14 ]
specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>($r2);
";
    "Block 3:
[preds: 2 ] [succs: 4 14 ]
$r2 = r0[0];
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 4:
[preds: 3 ] [succs: 5 14 ]
specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>($r2);
"->"Block 5:
[preds: 4 ] [succs: 6 14 ]
r14 = $r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 14 ]
specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>($r2);
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 5:
[preds: 4 ] [succs: 6 14 ]
r14 = $r1;
"->"Block 6:
[preds: 5 ] [succs: 7 14 ]
$r3 = new javaT.text.Format.common.PParser;
";
    "Block 5:
[preds: 4 ] [succs: 6 14 ]
r14 = $r1;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r3 = new javaT.text.Format.common.PParser;
"->"Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r3.<javaT.text.Format.common.PParser: void <init>()>();
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r3 = new javaT.text.Format.common.PParser;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r3.<javaT.text.Format.common.PParser: void <init>()>();
"->"Block 8:
[preds: 7 ] [succs: 9 14 ]
r4 = $r3;
";
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r3.<javaT.text.Format.common.PParser: void <init>()>();
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
r4 = $r3;
"->"Block 9:
[preds: 8 ] [succs: 10 14 ]
r5 = virtualinvoke r4.<javaT.text.Format.common.PParser: java.util.Hashtable parse(java.io.Reader)>(r14);
";
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
r4 = $r3;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
r5 = virtualinvoke r4.<javaT.text.Format.common.PParser: java.util.Hashtable parse(java.io.Reader)>(r14);
"->"Block 10:
[preds: 9 ] [succs: 11 14 ]
staticinvoke <javaT.text.Format.common.PParser: void dump(java.lang.Object)>(r5);
";
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
r5 = virtualinvoke r4.<javaT.text.Format.common.PParser: java.util.Hashtable parse(java.io.Reader)>(r14);
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
staticinvoke <javaT.text.Format.common.PParser: void dump(java.lang.Object)>(r5);
"->"Block 11:
[preds: 10 ] [succs: 12 14 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
staticinvoke <javaT.text.Format.common.PParser: void dump(java.lang.Object)>(r5);
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
virtualinvoke $r6.<java.io.PrintStream: void println()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
virtualinvoke $r6.<java.io.PrintStream: void println()>();
"->"Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= return];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
virtualinvoke $r6.<java.io.PrintStream: void println()>();
"->"Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= return];
"->"Block 15:
[preds: 1 13 14 ] [succs: ]
return;
";
    "Block 14:
[preds: 0 2 3 4 5 6 7 8 9 10 11 12 ] [succs: 15 ]
$r8 := @caughtexception;
r15 = $r8;
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Couldn\'t parse: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
"->"Block 15:
[preds: 1 13 14 ] [succs: ]
return;
";
}
