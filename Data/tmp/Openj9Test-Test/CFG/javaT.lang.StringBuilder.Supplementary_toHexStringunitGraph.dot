digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "i2 = 0"
    "$i0 = virtualinvoke r2.<java.lang.String: int length()>()"
    "if i2 >= $i0 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"
    "c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" 0x\")"
    "if c1 >= 16 goto (branch)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)"
    "if c1 >= 256 goto (branch)"
    "if c1 >= 4096 goto $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"
    "i2 = i2 + 1"
    "goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()]"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"
    "$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r4"
    "r2 := @parameter0: java.lang.String"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i2 = 0";
    "i2 = 0"->"$i0 = virtualinvoke r2.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r2.<java.lang.String: int length()>()"->"if i2 >= $i0 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)";
    "if i2 >= $i0 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"->"c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2)";
    "if i2 >= $i0 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)";
    "c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" 0x\")";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" 0x\")"->"if c1 >= 16 goto (branch)";
    "if c1 >= 16 goto (branch)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)";
    "if c1 >= 16 goto (branch)"->"if c1 >= 256 goto (branch)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)"->"if c1 >= 256 goto (branch)";
    "if c1 >= 256 goto (branch)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)";
    "if c1 >= 256 goto (branch)"->"if c1 >= 4096 goto $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)"->"if c1 >= 4096 goto $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)";
    "if c1 >= 4096 goto $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)";
    "if c1 >= 4096 goto $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)"->"$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)"->"$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r2.<java.lang.String: int length()>()";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"->"$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r4";
}
