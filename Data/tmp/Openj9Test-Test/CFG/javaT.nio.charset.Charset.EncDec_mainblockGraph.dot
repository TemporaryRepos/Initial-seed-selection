digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r17 := @parameter0: java.lang.String[];
r0 = \"Hello, world!\";
r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(100);
$r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"ISO-8859-15\");
$r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>(r0);
$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r3);
virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\");
$r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r1);
r8 = virtualinvoke $r7.<java.nio.CharBuffer: java.lang.String toString()>();
$r9 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r8);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch: \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r16);
throw $r10;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r17 := @parameter0: java.lang.String[];
r0 = \"Hello, world!\";
r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(100);
$r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"ISO-8859-15\");
$r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>(r0);
$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r3);
virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\");
$r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r1);
r8 = virtualinvoke $r7.<java.nio.CharBuffer: java.lang.String toString()>();
$r9 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r8);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch: \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r16);
throw $r10;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r17 := @parameter0: java.lang.String[];
r0 = \"Hello, world!\";
r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(100);
$r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"ISO-8859-15\");
$r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>(r0);
$r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r3);
virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\");
$r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r1);
r8 = virtualinvoke $r7.<java.nio.CharBuffer: java.lang.String toString()>();
$r9 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r8);
$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
