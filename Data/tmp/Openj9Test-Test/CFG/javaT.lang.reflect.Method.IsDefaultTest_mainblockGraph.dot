digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
i1 = 0;
i2 = 0;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType1;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType2;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType3;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType4;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType2$nestedTestType2;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType5;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType5$nestedTestType5;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType6;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType6$nestedTestType6;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType7;\");
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z10 == 0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.Class) $r7;
r9 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
i0 = lengthof r9;
i3 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= i0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
r10 = r9[i3];
$r11 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Method/ExpectedIsDefault;\");
r12 = (javaT.lang.reflect.Method.ExpectedIsDefault) $r11;
if r12 == null goto i3 = i3 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i2 = i2 + 1;
z11 = interfaceinvoke r12.<javaT.lang.reflect.Method.ExpectedIsDefault: boolean value()>();
z12 = virtualinvoke r10.<java.lang.reflect.Method: boolean isDefault()>();
if z12 == z11 goto i3 = i3 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
i1 = i1 + 1;
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = newarray (java.lang.Object)[3];
$r15 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.String toString()>();
$r13[0] = $r15;
$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z11);
$r13[1] = $r16;
$r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z12);
$r13[2] = $r17;
virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"ERROR: On %s expected isDefault of \'\'%s\'\'; got \'\'%s\'\'.\n\", $r13);
"
    "Block 7:
[preds: 4 5 6 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 9:
[preds: 1 ] [succs: 10 11 ]
if i2 != 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Test failed because no methods checked.\");
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>()>();
throw $r6;
"
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i1 <= 0 goto return;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test failed.\");
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();
throw $r4;
"
    "Block 13:
[preds: 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
i1 = 0;
i2 = 0;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType1;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType2;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType3;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType4;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType2$nestedTestType2;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType5;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType5$nestedTestType5;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType6;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType6$nestedTestType6;\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(class \"LjavaT/lang/reflect/Method/TestType7;\");
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z10 == 0 goto (branch);
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z10 == 0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.Class) $r7;
r9 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
i0 = lengthof r9;
i3 = 0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z10 == 0 goto (branch);
"->"Block 9:
[preds: 1 ] [succs: 10 11 ]
if i2 != 0 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.Class) $r7;
r9 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
i0 = lengthof r9;
i3 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= i0 goto (branch);
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= i0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
r10 = r9[i3];
$r11 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Method/ExpectedIsDefault;\");
r12 = (javaT.lang.reflect.Method.ExpectedIsDefault) $r11;
if r12 == null goto i3 = i3 + 1;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= i0 goto (branch);
"->"Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
r10 = r9[i3];
$r11 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Method/ExpectedIsDefault;\");
r12 = (javaT.lang.reflect.Method.ExpectedIsDefault) $r11;
if r12 == null goto i3 = i3 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
i2 = i2 + 1;
z11 = interfaceinvoke r12.<javaT.lang.reflect.Method.ExpectedIsDefault: boolean value()>();
z12 = virtualinvoke r10.<java.lang.reflect.Method: boolean isDefault()>();
if z12 == z11 goto i3 = i3 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
r10 = r9[i3];
$r11 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Method/ExpectedIsDefault;\");
r12 = (javaT.lang.reflect.Method.ExpectedIsDefault) $r11;
if r12 == null goto i3 = i3 + 1;
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i2 = i2 + 1;
z11 = interfaceinvoke r12.<javaT.lang.reflect.Method.ExpectedIsDefault: boolean value()>();
z12 = virtualinvoke r10.<java.lang.reflect.Method: boolean isDefault()>();
if z12 == z11 goto i3 = i3 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
i1 = i1 + 1;
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = newarray (java.lang.Object)[3];
$r15 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.String toString()>();
$r13[0] = $r15;
$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z11);
$r13[1] = $r16;
$r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z12);
$r13[2] = $r17;
virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"ERROR: On %s expected isDefault of \'\'%s\'\'; got \'\'%s\'\'.\n\", $r13);
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
i2 = i2 + 1;
z11 = interfaceinvoke r12.<javaT.lang.reflect.Method.ExpectedIsDefault: boolean value()>();
z12 = virtualinvoke r10.<java.lang.reflect.Method: boolean isDefault()>();
if z12 == z11 goto i3 = i3 + 1;
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
i1 = i1 + 1;
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = newarray (java.lang.Object)[3];
$r15 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.String toString()>();
$r13[0] = $r15;
$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z11);
$r13[1] = $r16;
$r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z12);
$r13[2] = $r17;
virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"ERROR: On %s expected isDefault of \'\'%s\'\'; got \'\'%s\'\'.\n\", $r13);
"->"Block 7:
[preds: 4 5 6 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 4 5 6 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i3 >= i0 goto (branch);
";
    "Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z10 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z10 == 0 goto (branch);
";
    "Block 9:
[preds: 1 ] [succs: 10 11 ]
if i2 != 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Test failed because no methods checked.\");
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>()>();
throw $r6;
";
    "Block 9:
[preds: 1 ] [succs: 10 11 ]
if i2 != 0 goto (branch);
"->"Block 11:
[preds: 9 ] [succs: 12 13 ]
if i1 <= 0 goto return;
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i1 <= 0 goto return;
"->"Block 12:
[preds: 11 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test failed.\");
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();
throw $r4;
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i1 <= 0 goto return;
"->"Block 13:
[preds: 11 ] [succs: ]
return;
";
}
