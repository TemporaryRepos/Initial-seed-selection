digraph "unitGraph" {
    "l0 := @parameter0: long"
    "l1 := @parameter1: long"
    "r64 = null"
    "r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"
    "l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64)"
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"
    "$r55 := @caughtexception"
    "r65 = $r55"
    "$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"
    "$r56 = new java.lang.StringBuilder"
    "specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()"
    "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")"
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65)"
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63)"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"
    "l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64)"
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"
    "$r46 := @caughtexception"
    "r66 = $r46"
    "$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"
    "$r47 = new java.lang.StringBuilder"
    "specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()"
    "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\")"
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)"
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"
    "l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64)"
    "goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>]"
    "$r37 := @caughtexception"
    "r67 = $r37"
    "$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "$r38 = new java.lang.StringBuilder"
    "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\")"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45)"
    "$r68 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68)"
    "l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64)"
    "goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>]"
    "$r30 := @caughtexception"
    "r69 = $r30"
    "$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36)"
    "$r70 = <java.math.BigInteger: java.math.BigInteger ONE>"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70)"
    "l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64)"
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()]"
    "$r23 := @caughtexception"
    "r71 = $r23"
    "$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"
    "$r24 = new java.lang.StringBuilder"
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"
    "l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0)"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64)"
    "goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)]"
    "$r16 := @caughtexception"
    "r72 = $r16"
    "$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"
    "if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"
    "i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"
    "$l10 = (long) i9"
    "$b11 = $l10 cmp l0"
    "if $b11 == 0 goto (branch)"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8)"
    "goto [?= return]"
    "$r9 := @caughtexception"
    "r73 = $r9"
    "$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>()"
    "if $i2 > 32 goto return"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15)"
    "return"
    "l0 := @parameter0: long"->"l1 := @parameter1: long";
    "l1 := @parameter1: long"->"r64 = null";
    "r64 = null"->"r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)";
    "r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0)"->"r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)";
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)";
    "r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1)"->"$r55 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"->"l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r1)"->"$r55 := @caughtexception";
    "l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64)";
    "l3 = staticinvoke <java.lang.Math: long addExact(long,long)>(l0, l1)"->"$r55 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64)"->"goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.addExact\", l0, l1, l3, r64)"->"$r55 := @caughtexception";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)]"->"$r46 := @caughtexception";
    "$r55 := @caughtexception"->"r65 = $r55";
    "r65 = $r55"->"$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z5 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r56 = new java.lang.StringBuilder";
    "if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "if $z5 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r46 := @caughtexception";
    "$r56 = new java.lang.StringBuilder"->"specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()"->"$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")";
    "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")"->"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65)";
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65)"->"$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r63)"->"$r46 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r1)"->"$r46 := @caughtexception";
    "l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64)";
    "l4 = staticinvoke <java.lang.Math: long subtractExact(long,long)>(l0, l1)"->"$r46 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64)"->"goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.subtractExact\", l0, l1, l4, r64)"->"$r46 := @caughtexception";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)]"->"$r37 := @caughtexception";
    "$r46 := @caughtexception"->"r66 = $r46";
    "r66 = $r46"->"$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z4 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r47 = new java.lang.StringBuilder";
    "if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "if $z4 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r37 := @caughtexception";
    "$r47 = new java.lang.StringBuilder"->"specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()"->"$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\")";
    "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.subtractExact(\")"->"$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)"->"$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"->"$r37 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1)"->"$r37 := @caughtexception";
    "l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64)";
    "l5 = staticinvoke <java.lang.Math: long multiplyExact(long,long)>(l0, l1)"->"$r37 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64)"->"goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.multiplyExact\", l0, l1, l5, r64)"->"$r37 := @caughtexception";
    "goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>]"->"$r68 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "goto [?= $r68 = <java.math.BigInteger: java.math.BigInteger ONE>]"->"$r30 := @caughtexception";
    "$r37 := @caughtexception"->"r67 = $r37";
    "r67 = $r37"->"$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z3 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r38 = new java.lang.StringBuilder";
    "if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r68 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "if $z3 == 0 goto $r68 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r30 := @caughtexception";
    "$r38 = new java.lang.StringBuilder"->"specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\")";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.multiplyExact(\")"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45)"->"$r68 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r45)"->"$r30 := @caughtexception";
    "$r68 = <java.math.BigInteger: java.math.BigInteger ONE>"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68)";
    "$r68 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r30 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68)"->"l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r68)"->"$r30 := @caughtexception";
    "l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64)";
    "l6 = staticinvoke <java.lang.Math: long incrementExact(long)>(l0)"->"$r30 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64)"->"goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.incrementExact\", l0, 1L, l6, r64)"->"$r30 := @caughtexception";
    "goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>]"->"$r70 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "goto [?= $r70 = <java.math.BigInteger: java.math.BigInteger ONE>]"->"$r23 := @caughtexception";
    "$r30 := @caughtexception"->"r69 = $r30";
    "r69 = $r30"->"$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z2 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r31 = new java.lang.StringBuilder";
    "if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r70 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "if $z2 == 0 goto $r70 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r23 := @caughtexception";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69)";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36)"->"$r70 = <java.math.BigInteger: java.math.BigInteger ONE>";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r36)"->"$r23 := @caughtexception";
    "$r70 = <java.math.BigInteger: java.math.BigInteger ONE>"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70)";
    "$r70 = <java.math.BigInteger: java.math.BigInteger ONE>"->"$r23 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70)"->"l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r70)"->"$r23 := @caughtexception";
    "l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64)";
    "l7 = staticinvoke <java.lang.Math: long decrementExact(long)>(l0)"->"$r23 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64)"->"goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.decrementExact\", l0, 1L, l7, r64)"->"$r23 := @caughtexception";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()]"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()";
    "goto [?= r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()]"->"$r16 := @caughtexception";
    "$r23 := @caughtexception"->"r71 = $r23";
    "r71 = $r23"->"$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z1 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()";
    "if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"->"$r24 = new java.lang.StringBuilder";
    "if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()";
    "if $z1 == 0 goto r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"->"$r16 := @caughtexception";
    "$r24 = new java.lang.StringBuilder"->"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"->"r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"->"$r16 := @caughtexception";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"->"l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0)";
    "r64 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger negate()>()"->"$r16 := @caughtexception";
    "l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0)"->"staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64)";
    "l8 = staticinvoke <java.lang.Math: long negateExact(long)>(l0)"->"$r16 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64)"->"goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void checkResult(java.lang.String,long,long,long,java.math.BigInteger)>(\"long Math.negateExact\", l0, 0L, l8, r64)"->"$r16 := @caughtexception";
    "goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)]"->"i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)";
    "goto [?= i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)]"->"$r9 := @caughtexception";
    "$r16 := @caughtexception"->"r72 = $r16";
    "r72 = $r16"->"$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)";
    "$z0 = staticinvoke <javaT.lang.Math.ExactArithTests: boolean inLongRange(java.math.BigInteger)>(r64)"->"if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)";
    "if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"->"$r17 = new java.lang.StringBuilder";
    "if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"->"i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)";
    "if $z0 == 0 goto i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"->"$r9 := @caughtexception";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"->"i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"->"$r9 := @caughtexception";
    "i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"->"$l10 = (long) i9";
    "i9 = staticinvoke <java.lang.Math: int toIntExact(long)>(l0)"->"$r9 := @caughtexception";
    "$l10 = (long) i9"->"$b11 = $l10 cmp l0";
    "$l10 = (long) i9"->"$r9 := @caughtexception";
    "$b11 = $l10 cmp l0"->"if $b11 == 0 goto (branch)";
    "$b11 = $l10 cmp l0"->"$r9 := @caughtexception";
    "if $b11 == 0 goto (branch)"->"$r2 = new java.lang.StringBuilder";
    "if $b11 == 0 goto (branch)"->"goto [?= return]";
    "if $b11 == 0 goto (branch)"->"$r9 := @caughtexception";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "$r2 = new java.lang.StringBuilder"->"$r9 := @caughtexception";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r9 := @caughtexception";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")"->"$r9 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r9 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r9 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r9 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected an arithmetic exception: \")"->"$r9 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r9 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8)"->"goto [?= return]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r8)"->"$r9 := @caughtexception";
    "goto [?= return]"->"return";
    "$r9 := @caughtexception"->"r73 = $r9";
    "r73 = $r9"->"$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>()";
    "$i2 = virtualinvoke r64.<java.math.BigInteger: int bitLength()>()"->"if $i2 > 32 goto return";
    "if $i2 > 32 goto return"->"$r10 = new java.lang.StringBuilder";
    "if $i2 > 32 goto return"->"return";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.toIntExact(\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r15)"->"return";
}
