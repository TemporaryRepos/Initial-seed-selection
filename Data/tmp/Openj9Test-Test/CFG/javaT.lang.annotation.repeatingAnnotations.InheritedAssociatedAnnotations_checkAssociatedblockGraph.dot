digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
$r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Ann;\");
r2 = (javaT.lang.annotation.repeatingAnnotations.Ann[]) $r1;
$r3 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/ExpectedAssociated;\");
$r4 = (javaT.lang.annotation.repeatingAnnotations.ExpectedAssociated) $r3;
r5 = interfaceinvoke $r4.<javaT.lang.'annotation'.repeatingAnnotations.ExpectedAssociated: javaT.lang.'annotation'.repeatingAnnotations.Ann[] value()>();
$z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r2, r5);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = newarray (java.lang.Object)[3];
$r7[0] = r0;
$r8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r5);
$r7[1] = $r8;
$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);
$r7[2] = $r9;
$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Test failed for %s: Expected %s but got %s.\", $r7);
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
$r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Ann;\");
r2 = (javaT.lang.annotation.repeatingAnnotations.Ann[]) $r1;
$r3 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/ExpectedAssociated;\");
$r4 = (javaT.lang.annotation.repeatingAnnotations.ExpectedAssociated) $r3;
r5 = interfaceinvoke $r4.<javaT.lang.'annotation'.repeatingAnnotations.ExpectedAssociated: javaT.lang.'annotation'.repeatingAnnotations.Ann[] value()>();
$z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r2, r5);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = newarray (java.lang.Object)[3];
$r7[0] = r0;
$r8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r5);
$r7[1] = $r8;
$r9 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);
$r7[2] = $r9;
$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Test failed for %s: Expected %s but got %s.\", $r7);
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.reflect.AnnotatedElement;
$r1 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/Ann;\");
r2 = (javaT.lang.annotation.repeatingAnnotations.Ann[]) $r1;
$r3 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/annotation/repeatingAnnotations/ExpectedAssociated;\");
$r4 = (javaT.lang.annotation.repeatingAnnotations.ExpectedAssociated) $r3;
r5 = interfaceinvoke $r4.<javaT.lang.'annotation'.repeatingAnnotations.ExpectedAssociated: javaT.lang.'annotation'.repeatingAnnotations.Ann[] value()>();
$z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r2, r5);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
