digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @parameter0: java.lang.String[];
i2 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$r2 = $r1[i2];
r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);
i3 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r5 = $r4[i2];
$i1 = lengthof $r5;
if i3 >= $i1 goto i2 = i2 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r7 = $r6[i2];
$r8 = $r7[i3];
$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8);
$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9);
if $z0 == 0 goto $r10 = new java.lang.Exception;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i3 = i3 + 1];
"
    "Block 6:
[preds: 4 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: charset \");
$r13 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$r14 = $r13[i2];
$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"doesn\'t contain \");
$r17 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r18 = $r17[i2];
$r19 = $r18[i3];
$r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r21);
throw $r10;
"
    "Block 7:
[preds: 5 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>];
"
    "Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>];
"
    "Block 9:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @parameter0: java.lang.String[];
i2 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$r2 = $r1[i2];
r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);
i3 = 0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
"->"Block 9:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$r2 = $r1[i2];
r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);
i3 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r5 = $r4[i2];
$i1 = lengthof $r5;
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r5 = $r4[i2];
$i1 = lengthof $r5;
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r7 = $r6[i2];
$r8 = $r7[i3];
$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8);
$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9);
if $z0 == 0 goto $r10 = new java.lang.Exception;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r5 = $r4[i2];
$i1 = lengthof $r5;
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r7 = $r6[i2];
$r8 = $r7[i3];
$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8);
$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9);
if $z0 == 0 goto $r10 = new java.lang.Exception;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i3 = i3 + 1];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r7 = $r6[i2];
$r8 = $r7[i3];
$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8);
$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9);
if $z0 == 0 goto $r10 = new java.lang.Exception;
"->"Block 6:
[preds: 4 ] [succs: ]
$r10 = new java.lang.Exception;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: charset \");
$r13 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$r14 = $r13[i2];
$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"doesn\'t contain \");
$r17 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r18 = $r17[i2];
$r19 = $r18[i3];
$r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r21);
throw $r10;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i3 = i3 + 1];
"->"Block 7:
[preds: 5 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>];
";
    "Block 7:
[preds: 5 ] [succs: 3 ]
i3 = i3 + 1;
goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>;
$r5 = $r4[i2];
$i1 = lengthof $r5;
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 8:
[preds: 3 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>;
$i0 = lengthof $r0;
if i2 >= $i0 goto return;
";
}
