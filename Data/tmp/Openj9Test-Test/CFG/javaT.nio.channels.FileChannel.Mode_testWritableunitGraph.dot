digraph "unitGraph" {
    "$r0 = new java.io.FileOutputStream"
    "$r1 = <javaT.nio.channels.FileChannel.Mode: java.io.File testFile>"
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)"
    "r2 = $r0"
    "r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"
    "$r4 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>"
    "r7 = virtualinvoke r3.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r4, 0L, 8L)"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Exception expected, none thrown\")"
    "throw $r5"
    "$r6 := @caughtexception"
    "r8 = $r6"
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"
    "return"
    "$r0 = new java.io.FileOutputStream"->"$r1 = <javaT.nio.channels.FileChannel.Mode: java.io.File testFile>";
    "$r1 = <javaT.nio.channels.FileChannel.Mode: java.io.File testFile>"->"specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)";
    "specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>($r1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()";
    "r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"->"$r4 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>";
    "r3 = virtualinvoke r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"->"$r6 := @caughtexception";
    "$r4 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>"->"r7 = virtualinvoke r3.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r4, 0L, 8L)";
    "$r4 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>"->"$r6 := @caughtexception";
    "r7 = virtualinvoke r3.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r4, 0L, 8L)"->"$r5 = new java.lang.RuntimeException";
    "r7 = virtualinvoke r3.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r4, 0L, 8L)"->"$r6 := @caughtexception";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Exception expected, none thrown\")";
    "$r5 = new java.lang.RuntimeException"->"$r6 := @caughtexception";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Exception expected, none thrown\")"->"throw $r5";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Exception expected, none thrown\")"->"$r6 := @caughtexception";
    "throw $r5"->"$r6 := @caughtexception";
    "$r6 := @caughtexception"->"r8 = $r6";
    "r8 = $r6"->"virtualinvoke r2.<java.io.FileOutputStream: void close()>()";
    "virtualinvoke r2.<java.io.FileOutputStream: void close()>()"->"return";
}
