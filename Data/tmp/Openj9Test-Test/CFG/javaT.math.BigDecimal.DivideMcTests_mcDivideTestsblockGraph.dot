digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i4 = 0;
i5 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i0 = lengthof $r0;
if i5 >= $i0 goto i7 = 1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i3 = lengthof $r29;
if i6 >= $i3 goto i5 = i5 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r30 = new java.math.BigDecimal;
$r31 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r32 = $r31[i5];
specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>($r32);
r55 = $r30;
$r33 = new java.math.BigDecimal;
$r34 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r35 = $r34[i6];
specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>($r35);
r56 = $r33;
$r36 = <java.math.MathContext: java.math.MathContext DECIMAL64>;
r57 = virtualinvoke r55.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r56, $r36);
$r37 = virtualinvoke r57.<java.math.BigDecimal: java.lang.String toString()>();
$r38 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r39 = $r38[i5];
$r40 = $r39[i6];
$z1 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r40);
if $z1 != 0 goto i6 = i6 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i4 + 1;
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r48 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r49 = $r48[i5];
$r50 = $r49[i6];
$r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r54);
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"
    "Block 7:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"
    "Block 8:
[preds: 1 ] [succs: 9 ]
i7 = 1;
"
    "Block 9:
[preds: 8 18 ] [succs: 10 19 ]
if i7 >= 23 goto return i4;
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
i8 = 0;
"
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i1 = lengthof $r1;
if i8 >= $i1 goto i7 = i7 + 1;
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
i9 = 0;
"
    "Block 13:
[preds: 12 16 ] [succs: 14 17 ]
$r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i2 = lengthof $r2;
if i9 >= $i2 goto i8 = i8 + 1;
"
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
$r3 = new java.math.BigDecimal;
$r4 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r5 = $r4[i8];
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>($r5);
r58 = $r3;
$r6 = new java.math.BigDecimal;
$r7 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r8 = $r7[i9];
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>($r8);
r59 = $r6;
$r9 = new java.math.MathContext;
$r10 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r9.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r10);
r11 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r9);
$r12 = new java.math.MathContext;
$r13 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r12.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(128, $r13);
$r14 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r12);
$r15 = new java.math.MathContext;
$r16 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r15.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r16);
r17 = virtualinvoke $r14.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>($r15);
$z0 = virtualinvoke r11.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto i9 = i9 + 1;
"
    "Block 15:
[preds: 14 ] [succs: 16 ]
i4 = i4 + 1;
$r19 = <java.lang.System: java.io.PrintStream err>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r28);
"
    "Block 16:
[preds: 14 15 ] [succs: 13 ]
i9 = i9 + 1;
goto [?= $r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"
    "Block 17:
[preds: 13 ] [succs: 11 ]
i8 = i8 + 1;
goto [?= $r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"
    "Block 18:
[preds: 11 ] [succs: 9 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 9 ] [succs: ]
return i4;
"
    "Block 0:
[preds: ] [succs: 1 ]
i4 = 0;
i5 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i0 = lengthof $r0;
if i5 >= $i0 goto i7 = 1;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i0 = lengthof $r0;
if i5 >= $i0 goto i7 = 1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i0 = lengthof $r0;
if i5 >= $i0 goto i7 = 1;
"->"Block 8:
[preds: 1 ] [succs: 9 ]
i7 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i3 = lengthof $r29;
if i6 >= $i3 goto i5 = i5 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i3 = lengthof $r29;
if i6 >= $i3 goto i5 = i5 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r30 = new java.math.BigDecimal;
$r31 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r32 = $r31[i5];
specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>($r32);
r55 = $r30;
$r33 = new java.math.BigDecimal;
$r34 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r35 = $r34[i6];
specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>($r35);
r56 = $r33;
$r36 = <java.math.MathContext: java.math.MathContext DECIMAL64>;
r57 = virtualinvoke r55.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r56, $r36);
$r37 = virtualinvoke r57.<java.math.BigDecimal: java.lang.String toString()>();
$r38 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r39 = $r38[i5];
$r40 = $r39[i6];
$z1 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r40);
if $z1 != 0 goto i6 = i6 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i3 = lengthof $r29;
if i6 >= $i3 goto i5 = i5 + 1;
"->"Block 7:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r30 = new java.math.BigDecimal;
$r31 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r32 = $r31[i5];
specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>($r32);
r55 = $r30;
$r33 = new java.math.BigDecimal;
$r34 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r35 = $r34[i6];
specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>($r35);
r56 = $r33;
$r36 = <java.math.MathContext: java.math.MathContext DECIMAL64>;
r57 = virtualinvoke r55.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r56, $r36);
$r37 = virtualinvoke r57.<java.math.BigDecimal: java.lang.String toString()>();
$r38 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r39 = $r38[i5];
$r40 = $r39[i6];
$z1 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r40);
if $z1 != 0 goto i6 = i6 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i4 + 1;
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r48 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r49 = $r48[i5];
$r50 = $r49[i6];
$r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r54);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r30 = new java.math.BigDecimal;
$r31 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r32 = $r31[i5];
specialinvoke $r30.<java.math.BigDecimal: void <init>(java.lang.String)>($r32);
r55 = $r30;
$r33 = new java.math.BigDecimal;
$r34 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r35 = $r34[i6];
specialinvoke $r33.<java.math.BigDecimal: void <init>(java.lang.String)>($r35);
r56 = $r33;
$r36 = <java.math.MathContext: java.math.MathContext DECIMAL64>;
r57 = virtualinvoke r55.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r56, $r36);
$r37 = virtualinvoke r57.<java.math.BigDecimal: java.lang.String toString()>();
$r38 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r39 = $r38[i5];
$r40 = $r39[i6];
$z1 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r40);
if $z1 != 0 goto i6 = i6 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i4 + 1;
$r42 = <java.lang.System: java.io.PrintStream err>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r48 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[][] results>;
$r49 = $r48[i5];
$r50 = $r49[i6];
$r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r54);
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= $r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$r29 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i3 = lengthof $r29;
if i6 >= $i3 goto i5 = i5 + 1;
";
    "Block 7:
[preds: 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$r0 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i0 = lengthof $r0;
if i5 >= $i0 goto i7 = 1;
";
    "Block 8:
[preds: 1 ] [succs: 9 ]
i7 = 1;
"->"Block 9:
[preds: 8 18 ] [succs: 10 19 ]
if i7 >= 23 goto return i4;
";
    "Block 9:
[preds: 8 18 ] [succs: 10 19 ]
if i7 >= 23 goto return i4;
"->"Block 10:
[preds: 9 ] [succs: 11 ]
i8 = 0;
";
    "Block 9:
[preds: 8 18 ] [succs: 10 19 ]
if i7 >= 23 goto return i4;
"->"Block 19:
[preds: 9 ] [succs: ]
return i4;
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
i8 = 0;
"->"Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i1 = lengthof $r1;
if i8 >= $i1 goto i7 = i7 + 1;
";
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i1 = lengthof $r1;
if i8 >= $i1 goto i7 = i7 + 1;
"->"Block 12:
[preds: 11 ] [succs: 13 ]
i9 = 0;
";
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i1 = lengthof $r1;
if i8 >= $i1 goto i7 = i7 + 1;
"->"Block 18:
[preds: 11 ] [succs: 9 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
i9 = 0;
"->"Block 13:
[preds: 12 16 ] [succs: 14 17 ]
$r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i2 = lengthof $r2;
if i9 >= $i2 goto i8 = i8 + 1;
";
    "Block 13:
[preds: 12 16 ] [succs: 14 17 ]
$r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i2 = lengthof $r2;
if i9 >= $i2 goto i8 = i8 + 1;
"->"Block 14:
[preds: 13 ] [succs: 15 16 ]
$r3 = new java.math.BigDecimal;
$r4 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r5 = $r4[i8];
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>($r5);
r58 = $r3;
$r6 = new java.math.BigDecimal;
$r7 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r8 = $r7[i9];
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>($r8);
r59 = $r6;
$r9 = new java.math.MathContext;
$r10 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r9.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r10);
r11 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r9);
$r12 = new java.math.MathContext;
$r13 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r12.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(128, $r13);
$r14 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r12);
$r15 = new java.math.MathContext;
$r16 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r15.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r16);
r17 = virtualinvoke $r14.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>($r15);
$z0 = virtualinvoke r11.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto i9 = i9 + 1;
";
    "Block 13:
[preds: 12 16 ] [succs: 14 17 ]
$r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i2 = lengthof $r2;
if i9 >= $i2 goto i8 = i8 + 1;
"->"Block 17:
[preds: 13 ] [succs: 11 ]
i8 = i8 + 1;
goto [?= $r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
$r3 = new java.math.BigDecimal;
$r4 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r5 = $r4[i8];
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>($r5);
r58 = $r3;
$r6 = new java.math.BigDecimal;
$r7 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r8 = $r7[i9];
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>($r8);
r59 = $r6;
$r9 = new java.math.MathContext;
$r10 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r9.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r10);
r11 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r9);
$r12 = new java.math.MathContext;
$r13 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r12.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(128, $r13);
$r14 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r12);
$r15 = new java.math.MathContext;
$r16 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r15.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r16);
r17 = virtualinvoke $r14.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>($r15);
$z0 = virtualinvoke r11.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto i9 = i9 + 1;
"->"Block 15:
[preds: 14 ] [succs: 16 ]
i4 = i4 + 1;
$r19 = <java.lang.System: java.io.PrintStream err>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r28);
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
$r3 = new java.math.BigDecimal;
$r4 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r5 = $r4[i8];
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>($r5);
r58 = $r3;
$r6 = new java.math.BigDecimal;
$r7 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$r8 = $r7[i9];
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>($r8);
r59 = $r6;
$r9 = new java.math.MathContext;
$r10 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r9.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r10);
r11 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r9);
$r12 = new java.math.MathContext;
$r13 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r12.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(128, $r13);
$r14 = virtualinvoke r58.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>(r59, $r12);
$r15 = new java.math.MathContext;
$r16 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
specialinvoke $r15.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i7, $r16);
r17 = virtualinvoke $r14.<java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>($r15);
$z0 = virtualinvoke r11.<java.math.BigDecimal: boolean equals(java.lang.Object)>(r17);
if $z0 != 0 goto i9 = i9 + 1;
"->"Block 16:
[preds: 14 15 ] [succs: 13 ]
i9 = i9 + 1;
goto [?= $r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 15:
[preds: 14 ] [succs: 16 ]
i4 = i4 + 1;
$r19 = <java.lang.System: java.io.PrintStream err>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected result from \");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / \");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r28);
"->"Block 16:
[preds: 14 15 ] [succs: 13 ]
i9 = i9 + 1;
goto [?= $r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
";
    "Block 16:
[preds: 14 15 ] [succs: 13 ]
i9 = i9 + 1;
goto [?= $r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"->"Block 13:
[preds: 12 16 ] [succs: 14 17 ]
$r2 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i2 = lengthof $r2;
if i9 >= $i2 goto i8 = i8 + 1;
";
    "Block 17:
[preds: 13 ] [succs: 11 ]
i8 = i8 + 1;
goto [?= $r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>];
"->"Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <javaT.math.BigDecimal.DivideMcTests: java.lang.String[] value>;
$i1 = lengthof $r1;
if i8 >= $i1 goto i7 = i7 + 1;
";
    "Block 18:
[preds: 11 ] [succs: 9 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 9:
[preds: 8 18 ] [succs: 10 19 ]
if i7 >= 23 goto return i4;
";
}
