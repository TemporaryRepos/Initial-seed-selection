digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "$i0 = lengthof r1"
    "$i1 = $i0 / 2"
    "r2 = newarray (byte)[$i1]"
    "i9 = 0"
    "i10 = -1"
    "b11 = -1"
    "i12 = 0"
    "$i2 = lengthof r1"
    "if i12 >= $i2 goto (branch)"
    "c4 = r1[i12]"
    "if i10 != -1 goto i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"
    "i10 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"
    "goto [?= i12 = i12 + 1]"
    "i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"
    "if i13 == -1 goto i12 = i12 + 1"
    "$i5 = i9"
    "i9 = i9 + 1"
    "$i6 = i10 << 4"
    "$i7 = $i6 | i13"
    "$b8 = (byte) $i7"
    "r2[$i5] = $b8"
    "b14 = -1"
    "i12 = i12 + 1"
    "goto [?= $i2 = lengthof r1]"
    "if i10 == -1 goto $i3 = lengthof r2"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>()>()"
    "throw $r3"
    "$i3 = lengthof r2"
    "if i9 != $i3 goto r4 = newarray (byte)[i9]"
    "return r2"
    "r4 = newarray (byte)[i9]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i9)"
    "return r4"
    "r0 := @parameter0: java.lang.String"->"r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"$i1 = $i0 / 2";
    "$i1 = $i0 / 2"->"r2 = newarray (byte)[$i1]";
    "r2 = newarray (byte)[$i1]"->"i9 = 0";
    "i9 = 0"->"i10 = -1";
    "i10 = -1"->"b11 = -1";
    "b11 = -1"->"i12 = 0";
    "i12 = 0"->"$i2 = lengthof r1";
    "$i2 = lengthof r1"->"if i12 >= $i2 goto (branch)";
    "if i12 >= $i2 goto (branch)"->"c4 = r1[i12]";
    "if i12 >= $i2 goto (branch)"->"if i10 == -1 goto $i3 = lengthof r2";
    "c4 = r1[i12]"->"if i10 != -1 goto i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)";
    "if i10 != -1 goto i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"->"i10 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)";
    "if i10 != -1 goto i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"->"i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)";
    "i10 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"->"goto [?= i12 = i12 + 1]";
    "goto [?= i12 = i12 + 1]"->"i12 = i12 + 1";
    "i13 = staticinvoke <java.lang.Character: int digit(char,int)>(c4, 16)"->"if i13 == -1 goto i12 = i12 + 1";
    "if i13 == -1 goto i12 = i12 + 1"->"$i5 = i9";
    "if i13 == -1 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$i5 = i9"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"$i6 = i10 << 4";
    "$i6 = i10 << 4"->"$i7 = $i6 | i13";
    "$i7 = $i6 | i13"->"$b8 = (byte) $i7";
    "$b8 = (byte) $i7"->"r2[$i5] = $b8";
    "r2[$i5] = $b8"->"i10 = -1";
    "i10 = -1"->"b14 = -1";
    "b14 = -1"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= $i2 = lengthof r1]";
    "goto [?= $i2 = lengthof r1]"->"$i2 = lengthof r1";
    "if i10 == -1 goto $i3 = lengthof r2"->"$r3 = new java.lang.RuntimeException";
    "if i10 == -1 goto $i3 = lengthof r2"->"$i3 = lengthof r2";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>()>()";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>()>()"->"throw $r3";
    "$i3 = lengthof r2"->"if i9 != $i3 goto r4 = newarray (byte)[i9]";
    "if i9 != $i3 goto r4 = newarray (byte)[i9]"->"return r2";
    "if i9 != $i3 goto r4 = newarray (byte)[i9]"->"r4 = newarray (byte)[i9]";
    "r4 = newarray (byte)[i9]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i9)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i9)"->"return r4";
}
