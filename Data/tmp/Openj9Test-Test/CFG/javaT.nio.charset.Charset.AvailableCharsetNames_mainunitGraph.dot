digraph "unitGraph" {
    "r15 := @parameter0: java.lang.String[]"
    "$r0 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>()"
    "$r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Set keySet()>()"
    "r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return"
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"
    "r4 = (java.lang.String) $r3"
    "r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4)"
    "$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()"
    "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4)"
    "if $z1 != 0 goto (branch)"
    "$r7 = new java.lang.Exception"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Charset name mismatch - expected \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"
    "$r12 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r14)"
    "throw $r7"
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r15 := @parameter0: java.lang.String[]"->"$r0 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>()";
    "$r0 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>()"->"$r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Set keySet()>()";
    "$r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Set keySet()>()"->"r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()";
    "r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return"->"return";
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"->"r4 = (java.lang.String) $r3";
    "r4 = (java.lang.String) $r3"->"r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4)";
    "r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r4)"->"$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()";
    "$r6 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()"->"$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4)";
    "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4)"->"if $z1 != 0 goto (branch)";
    "if $z1 != 0 goto (branch)"->"$r7 = new java.lang.Exception";
    "if $z1 != 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "$r7 = new java.lang.Exception"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Charset name mismatch - expected \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Charset name mismatch - expected \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", got \")"->"$r12 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()";
    "$r12 = virtualinvoke r5.<java.nio.charset.Charset: java.lang.String name()>()"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r14)";
    "specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r14)"->"throw $r7";
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
}
