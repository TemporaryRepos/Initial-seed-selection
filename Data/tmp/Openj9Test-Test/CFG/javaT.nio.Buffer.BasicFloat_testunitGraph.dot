digraph "unitGraph" {
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void testAllocate()>()"
    "$r0 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(7168)"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r0, 0)"
    "$r1 = newarray (float)[7168]"
    "$r2 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[],int,int)>($r1, 0, 7168)"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r2, 0)"
    "$r3 = newarray (float)[1024]"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(float[])>($r3)"
    "$r4 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(10)"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void callReset(java.nio.FloatBuffer)>($r4)"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void putBuffer()>()"
    "return"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void testAllocate()>()"->"$r0 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(7168)";
    "$r0 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(7168)"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r0, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r0, 0)"->"$r1 = newarray (float)[7168]";
    "$r1 = newarray (float)[7168]"->"$r2 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[],int,int)>($r1, 0, 7168)";
    "$r2 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[],int,int)>($r1, 0, 7168)"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r2, 0)";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(int,java.nio.FloatBuffer,boolean)>(0, $r2, 0)"->"$r3 = newarray (float)[1024]";
    "$r3 = newarray (float)[1024]"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void test(float[])>($r3)";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void test(float[])>($r3)"->"$r4 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(10)";
    "$r4 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>(10)"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void callReset(java.nio.FloatBuffer)>($r4)";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void callReset(java.nio.FloatBuffer)>($r4)"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void putBuffer()>()";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void putBuffer()>()"->"return";
}
