digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0);
$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0);
if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
"
    "Block 1:
[preds: 0 ] [succs: ]
$r9 = new java.lang.Exception;
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0d) failed\");
throw $r9;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1);
if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
"
    "Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.Exception;
specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0d) failed\");
throw $r8;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
$b0 = $d2 cmpl #Infinity;
if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r7 = new java.lang.Exception;
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\");
throw $r7;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
$b1 = $d3 cmpl #Infinity;
if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
"
    "Block 7:
[preds: 6 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\");
throw $r6;
"
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
$b2 = d4 cmpl d4;
if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
"
    "Block 9:
[preds: 8 ] [succs: ]
$r5 = new java.lang.Exception;
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\");
throw $r5;
"
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0);
if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
"
    "Block 11:
[preds: 10 ] [succs: ]
$r4 = new java.lang.Exception;
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0f) failed\");
throw $r4;
"
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1);
if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
"
    "Block 13:
[preds: 12 ] [succs: ]
$r3 = new java.lang.Exception;
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0f) failed\");
throw $r3;
"
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
$b3 = $f2 cmpl #InfinityF;
if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
"
    "Block 15:
[preds: 14 ] [succs: ]
$r2 = new java.lang.Exception;
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\");
throw $r2;
"
    "Block 16:
[preds: 14 ] [succs: 17 18 ]
$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
$b4 = $f3 cmpl #InfinityF;
if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
"
    "Block 17:
[preds: 16 ] [succs: ]
$r1 = new java.lang.Exception;
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\");
throw $r1;
"
    "Block 18:
[preds: 16 ] [succs: 19 20 ]
f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
$b5 = f4 cmpl f4;
if $b5 != 0 goto return;
"
    "Block 19:
[preds: 18 ] [succs: ]
$r0 = new java.lang.Exception;
specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\");
throw $r0;
"
    "Block 20:
[preds: 18 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0);
$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0);
if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
"->"Block 1:
[preds: 0 ] [succs: ]
$r9 = new java.lang.Exception;
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0d) failed\");
throw $r9;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
$d0 = staticinvoke <java.lang.Math: double abs(double)>(-0.0);
$z0 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d0);
if $z0 != 0 goto $d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1);
if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1);
if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
"->"Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.Exception;
specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0d) failed\");
throw $r8;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d1 = staticinvoke <java.lang.Math: double abs(double)>(0.0);
$z1 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(double)>($d1);
if $z1 != 0 goto $d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
$b0 = $d2 cmpl #Infinity;
if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
$b0 = $d2 cmpl #Infinity;
if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
"->"Block 5:
[preds: 4 ] [succs: ]
$r7 = new java.lang.Exception;
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\");
throw $r7;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$d2 = staticinvoke <java.lang.Math: double abs(double)>(#Infinity);
$b0 = $d2 cmpl #Infinity;
if $b0 == 0 goto $d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
$b1 = $d3 cmpl #Infinity;
if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
$b1 = $d3 cmpl #Infinity;
if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
"->"Block 7:
[preds: 6 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\");
throw $r6;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$d3 = staticinvoke <java.lang.Math: double abs(double)>(#-Infinity);
$b1 = $d3 cmpl #Infinity;
if $b1 == 0 goto d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
"->"Block 8:
[preds: 6 ] [succs: 9 10 ]
d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
$b2 = d4 cmpl d4;
if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
$b2 = d4 cmpl d4;
if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
"->"Block 9:
[preds: 8 ] [succs: ]
$r5 = new java.lang.Exception;
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\");
throw $r5;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
d4 = staticinvoke <java.lang.Math: double abs(double)>(#NaN);
$b2 = d4 cmpl d4;
if $b2 != 0 goto $f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
"->"Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0);
if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0);
if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
"->"Block 11:
[preds: 10 ] [succs: ]
$r4 = new java.lang.Exception;
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-0.0f) failed\");
throw $r4;
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = staticinvoke <java.lang.Math: float abs(float)>(-0.0F);
$z2 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f0);
if $z2 != 0 goto $f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
"->"Block 12:
[preds: 10 ] [succs: 13 14 ]
$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1);
if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1);
if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
"->"Block 13:
[preds: 12 ] [succs: ]
$r3 = new java.lang.Exception;
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+0.0f) failed\");
throw $r3;
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$f1 = staticinvoke <java.lang.Math: float abs(float)>(0.0F);
$z3 = staticinvoke <javaT.lang.Math.AbsPositiveZero: boolean isPositiveZero(float)>($f1);
if $z3 != 0 goto $f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
"->"Block 14:
[preds: 12 ] [succs: 15 16 ]
$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
$b3 = $f2 cmpl #InfinityF;
if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
$b3 = $f2 cmpl #InfinityF;
if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
"->"Block 15:
[preds: 14 ] [succs: ]
$r2 = new java.lang.Exception;
specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(+Inf) failed\");
throw $r2;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$f2 = staticinvoke <java.lang.Math: float abs(float)>(#InfinityF);
$b3 = $f2 cmpl #InfinityF;
if $b3 == 0 goto $f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
"->"Block 16:
[preds: 14 ] [succs: 17 18 ]
$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
$b4 = $f3 cmpl #InfinityF;
if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
";
    "Block 16:
[preds: 14 ] [succs: 17 18 ]
$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
$b4 = $f3 cmpl #InfinityF;
if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
"->"Block 17:
[preds: 16 ] [succs: ]
$r1 = new java.lang.Exception;
specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(-Inf) failed\");
throw $r1;
";
    "Block 16:
[preds: 14 ] [succs: 17 18 ]
$f3 = staticinvoke <java.lang.Math: float abs(float)>(#-InfinityF);
$b4 = $f3 cmpl #InfinityF;
if $b4 == 0 goto f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
"->"Block 18:
[preds: 16 ] [succs: 19 20 ]
f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
$b5 = f4 cmpl f4;
if $b5 != 0 goto return;
";
    "Block 18:
[preds: 16 ] [succs: 19 20 ]
f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
$b5 = f4 cmpl f4;
if $b5 != 0 goto return;
"->"Block 19:
[preds: 18 ] [succs: ]
$r0 = new java.lang.Exception;
specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>(\"abs(NaN) failed\");
throw $r0;
";
    "Block 18:
[preds: 16 ] [succs: 19 20 ]
f4 = staticinvoke <java.lang.Math: float abs(float)>(#NaNF);
$b5 = f4 cmpl f4;
if $b5 != 0 goto return;
"->"Block 20:
[preds: 18 ] [succs: ]
return;
";
}
