digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r5 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"A\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"B\");
r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>(2, r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"01\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"2345\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r7, $r12);
"
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
"
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
$i1 = $i0 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>($i1, r3);
"
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r14 = new java.lang.RuntimeException;
"
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException\");
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r14;
"
    "Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
"
    "Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r5 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"A\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"B\");
r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>(2, r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"01\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"2345\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r7, $r12);
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r5 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"A\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"B\");
r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>(2, r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"01\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"2345\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r7, $r12);
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r5 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"A\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"B\");
r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>(2, r3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"01\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"2345\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r7, $r12);
"->"Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
"->"Block 2:
[preds: 1 ] [succs: 7 8 3 ]
$i1 = $i0 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
$i1 = $i0 + 1;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
$i1 = $i0 + 1;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
$i1 = $i0 + 1;
"->"Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>($i1, r3);
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>($i1, r3);
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>($i1, r3);
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>($i1, r3);
"->"Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r14 = new java.lang.RuntimeException;
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r14 = new java.lang.RuntimeException;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r14 = new java.lang.RuntimeException;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r14 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException\");
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException\");
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException\");
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r14;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r14;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r14;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r15 := @caughtexception;
r23 = $r15;
$r16 = new java.lang.RuntimeException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown StringIndexOutOfBoundsException, but instead threw:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);
throw $r16;
";
    "Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r21 := @caughtexception;
r22 = $r21;
goto [?= return];
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
}
