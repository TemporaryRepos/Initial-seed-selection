digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.BitSet"
    "specialinvoke $r0.<java.util.BitSet: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.util.BitSet"
    "specialinvoke $r2.<java.util.BitSet: void <init>()>()"
    "r3 = $r2"
    "virtualinvoke r1.<java.util.BitSet: void set(int)>(0)"
    "virtualinvoke r1.<java.util.BitSet: void set(int)>(70)"
    "virtualinvoke r3.<java.util.BitSet: void set(int)>(40)"
    "virtualinvoke r1.<java.util.BitSet: void and(java.util.BitSet)>(r3)"
    "$i0 = virtualinvoke r1.<java.util.BitSet: int length()>()"
    "if $i0 == 0 goto return"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Incorrect length after and().\")"
    "throw $r4"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"$r0 = new java.util.BitSet";
    "$r0 = new java.util.BitSet"->"specialinvoke $r0.<java.util.BitSet: void <init>()>()";
    "specialinvoke $r0.<java.util.BitSet: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.BitSet";
    "$r2 = new java.util.BitSet"->"specialinvoke $r2.<java.util.BitSet: void <init>()>()";
    "specialinvoke $r2.<java.util.BitSet: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r1.<java.util.BitSet: void set(int)>(0)";
    "virtualinvoke r1.<java.util.BitSet: void set(int)>(0)"->"virtualinvoke r1.<java.util.BitSet: void set(int)>(70)";
    "virtualinvoke r1.<java.util.BitSet: void set(int)>(70)"->"virtualinvoke r3.<java.util.BitSet: void set(int)>(40)";
    "virtualinvoke r3.<java.util.BitSet: void set(int)>(40)"->"virtualinvoke r1.<java.util.BitSet: void and(java.util.BitSet)>(r3)";
    "virtualinvoke r1.<java.util.BitSet: void and(java.util.BitSet)>(r3)"->"$i0 = virtualinvoke r1.<java.util.BitSet: int length()>()";
    "$i0 = virtualinvoke r1.<java.util.BitSet: int length()>()"->"if $i0 == 0 goto return";
    "if $i0 == 0 goto return"->"$r4 = new java.lang.RuntimeException";
    "if $i0 == 0 goto return"->"return";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Incorrect length after and().\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Incorrect length after and().\")"->"throw $r4";
}
