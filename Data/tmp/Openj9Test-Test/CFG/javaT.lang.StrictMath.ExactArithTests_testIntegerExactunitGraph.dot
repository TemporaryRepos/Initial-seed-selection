digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "i24 = staticinvoke <java.lang.StrictMath: int addExact(int,int)>(i0, i1)"
    "$l3 = (long) i0"
    "$l2 = (long) i1"
    "l25 = $l3 + $l2"
    "$i4 = (int) l25"
    "$l5 = (long) $i4"
    "$b6 = $l5 cmp l25"
    "if $b6 == 0 goto $l7 = (long) i24"
    "$r30 = new java.lang.StringBuilder"
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r38)"
    "goto [?= (branch)]"
    "$l7 = (long) i24"
    "$b8 = $l7 cmp l25"
    "if $b8 == 0 goto (branch)"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r29)"
    "goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]"
    "$r57 := @caughtexception"
    "r66 = $r57"
    "$l20 = (long) i0"
    "$l19 = (long) i1"
    "l26 = $l20 + $l19"
    "$i21 = (int) l26"
    "$l22 = (long) $i21"
    "$b23 = $l22 cmp l26"
    "if $b23 != 0 goto i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"
    "$r58 = new java.lang.StringBuilder"
    "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()"
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")"
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)"
    "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r65)"
    "i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"
    "$l28 = (long) i0"
    "$l29 = (long) i1"
    "l30 = $l28 - $l29"
    "$i31 = (int) l30"
    "$l32 = (long) $i31"
    "$b33 = $l32 cmp l30"
    "if $b33 == 0 goto (branch)"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r19)"
    "goto [?= i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)]"
    "$r48 := @caughtexception"
    "r67 = $r48"
    "$l15 = (long) i0"
    "$l14 = (long) i1"
    "l34 = $l15 - $l14"
    "$i16 = (int) l34"
    "$l17 = (long) $i16"
    "$b18 = $l17 cmp l34"
    "if $b18 != 0 goto i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"
    "$r49 = new java.lang.StringBuilder"
    "specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()"
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")"
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)"
    "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r56)"
    "i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"
    "$l36 = (long) i0"
    "$l37 = (long) i1"
    "l38 = $l36 * $l37"
    "$i39 = (int) l38"
    "$l40 = (long) $i39"
    "$b41 = $l40 cmp l38"
    "if $b41 == 0 goto (branch)"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l38)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r9)"
    "goto [?= return]"
    "$r39 := @caughtexception"
    "r68 = $r39"
    "$l10 = (long) i0"
    "$l9 = (long) i1"
    "l42 = $l10 * $l9"
    "$i11 = (int) l42"
    "$l12 = (long) $i11"
    "$b13 = $l12 cmp l42"
    "if $b13 != 0 goto return"
    "$r40 = new java.lang.StringBuilder"
    "specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68)"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r47)"
    "return"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i24 = staticinvoke <java.lang.StrictMath: int addExact(int,int)>(i0, i1)";
    "i1 := @parameter1: int"->"$r57 := @caughtexception";
    "i24 = staticinvoke <java.lang.StrictMath: int addExact(int,int)>(i0, i1)"->"$l3 = (long) i0";
    "i24 = staticinvoke <java.lang.StrictMath: int addExact(int,int)>(i0, i1)"->"$r57 := @caughtexception";
    "$l3 = (long) i0"->"$l2 = (long) i1";
    "$l3 = (long) i0"->"$r57 := @caughtexception";
    "$l2 = (long) i1"->"l25 = $l3 + $l2";
    "$l2 = (long) i1"->"$r57 := @caughtexception";
    "l25 = $l3 + $l2"->"$i4 = (int) l25";
    "l25 = $l3 + $l2"->"$r57 := @caughtexception";
    "$i4 = (int) l25"->"$l5 = (long) $i4";
    "$i4 = (int) l25"->"$r57 := @caughtexception";
    "$l5 = (long) $i4"->"$b6 = $l5 cmp l25";
    "$l5 = (long) $i4"->"$r57 := @caughtexception";
    "$b6 = $l5 cmp l25"->"if $b6 == 0 goto $l7 = (long) i24";
    "$b6 = $l5 cmp l25"->"$r57 := @caughtexception";
    "if $b6 == 0 goto $l7 = (long) i24"->"$r30 = new java.lang.StringBuilder";
    "if $b6 == 0 goto $l7 = (long) i24"->"$l7 = (long) i24";
    "if $b6 == 0 goto $l7 = (long) i24"->"$r57 := @caughtexception";
    "$r30 = new java.lang.StringBuilder"->"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()";
    "$r30 = new java.lang.StringBuilder"->"$r57 := @caughtexception";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"->"$r57 := @caughtexception";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")"->"$r57 := @caughtexception";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r57 := @caughtexception";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r57 := @caughtexception";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r57 := @caughtexception";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r57 := @caughtexception";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"->"$r57 := @caughtexception";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r57 := @caughtexception";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r38)";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r57 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r38)"->"goto [?= (branch)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r38)"->"$r57 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]";
    "goto [?= (branch)]"->"$r57 := @caughtexception";
    "$l7 = (long) i24"->"$b8 = $l7 cmp l25";
    "$l7 = (long) i24"->"$r57 := @caughtexception";
    "$b8 = $l7 cmp l25"->"if $b8 == 0 goto (branch)";
    "$b8 = $l7 cmp l25"->"$r57 := @caughtexception";
    "if $b8 == 0 goto (branch)"->"$r20 = new java.lang.StringBuilder";
    "if $b8 == 0 goto (branch)"->"goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]";
    "if $b8 == 0 goto (branch)"->"$r57 := @caughtexception";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()";
    "$r20 = new java.lang.StringBuilder"->"$r57 := @caughtexception";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r57 := @caughtexception";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long StrictMath.addExact(\")"->"$r57 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r57 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r57 := @caughtexception";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r57 := @caughtexception";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r57 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24)"->"$r57 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r57 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25)"->"$r57 := @caughtexception";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r29)";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r57 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r29)"->"goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r29)"->"$r57 := @caughtexception";
    "goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]"->"i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)";
    "goto [?= i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)]"->"$r48 := @caughtexception";
    "$r57 := @caughtexception"->"r66 = $r57";
    "r66 = $r57"->"$l20 = (long) i0";
    "$l20 = (long) i0"->"$l19 = (long) i1";
    "$l19 = (long) i1"->"l26 = $l20 + $l19";
    "l26 = $l20 + $l19"->"$i21 = (int) l26";
    "$i21 = (int) l26"->"$l22 = (long) $i21";
    "$l22 = (long) $i21"->"$b23 = $l22 cmp l26";
    "$b23 = $l22 cmp l26"->"if $b23 != 0 goto i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)";
    "if $b23 != 0 goto i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"->"$r58 = new java.lang.StringBuilder";
    "if $b23 != 0 goto i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"->"i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)";
    "if $b23 != 0 goto i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"->"$r48 := @caughtexception";
    "$r58 = new java.lang.StringBuilder"->"specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()"->"$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")";
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.addExact(\")"->"$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)";
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66)"->"$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r65)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r65)"->"i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r65)"->"$r48 := @caughtexception";
    "i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"->"$l28 = (long) i0";
    "i27 = staticinvoke <java.lang.StrictMath: int subtractExact(int,int)>(i0, i1)"->"$r48 := @caughtexception";
    "$l28 = (long) i0"->"$l29 = (long) i1";
    "$l28 = (long) i0"->"$r48 := @caughtexception";
    "$l29 = (long) i1"->"l30 = $l28 - $l29";
    "$l29 = (long) i1"->"$r48 := @caughtexception";
    "l30 = $l28 - $l29"->"$i31 = (int) l30";
    "l30 = $l28 - $l29"->"$r48 := @caughtexception";
    "$i31 = (int) l30"->"$l32 = (long) $i31";
    "$i31 = (int) l30"->"$r48 := @caughtexception";
    "$l32 = (long) $i31"->"$b33 = $l32 cmp l30";
    "$l32 = (long) $i31"->"$r48 := @caughtexception";
    "$b33 = $l32 cmp l30"->"if $b33 == 0 goto (branch)";
    "$b33 = $l32 cmp l30"->"$r48 := @caughtexception";
    "if $b33 == 0 goto (branch)"->"$r10 = new java.lang.StringBuilder";
    "if $b33 == 0 goto (branch)"->"goto [?= i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)]";
    "if $b33 == 0 goto (branch)"->"$r48 := @caughtexception";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "$r10 = new java.lang.StringBuilder"->"$r48 := @caughtexception";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r48 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")"->"$r48 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r48 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r48 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r48 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r48 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)"->"$r48 := @caughtexception";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r48 := @caughtexception";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30)"->"$r48 := @caughtexception";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r19)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r48 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r19)"->"goto [?= i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r19)"->"$r48 := @caughtexception";
    "goto [?= i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)]"->"i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)";
    "goto [?= i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)]"->"$r39 := @caughtexception";
    "$r48 := @caughtexception"->"r67 = $r48";
    "r67 = $r48"->"$l15 = (long) i0";
    "$l15 = (long) i0"->"$l14 = (long) i1";
    "$l14 = (long) i1"->"l34 = $l15 - $l14";
    "l34 = $l15 - $l14"->"$i16 = (int) l34";
    "$i16 = (int) l34"->"$l17 = (long) $i16";
    "$l17 = (long) $i16"->"$b18 = $l17 cmp l34";
    "$b18 = $l17 cmp l34"->"if $b18 != 0 goto i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)";
    "if $b18 != 0 goto i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"->"$r49 = new java.lang.StringBuilder";
    "if $b18 != 0 goto i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"->"i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)";
    "if $b18 != 0 goto i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"->"$r39 := @caughtexception";
    "$r49 = new java.lang.StringBuilder"->"specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()"->"$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")";
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.subtractExact(\")"->"$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)";
    "$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67)"->"$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r56)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r56)"->"i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r56)"->"$r39 := @caughtexception";
    "i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"->"$l36 = (long) i0";
    "i35 = staticinvoke <java.lang.StrictMath: int multiplyExact(int,int)>(i0, i1)"->"$r39 := @caughtexception";
    "$l36 = (long) i0"->"$l37 = (long) i1";
    "$l36 = (long) i0"->"$r39 := @caughtexception";
    "$l37 = (long) i1"->"l38 = $l36 * $l37";
    "$l37 = (long) i1"->"$r39 := @caughtexception";
    "l38 = $l36 * $l37"->"$i39 = (int) l38";
    "l38 = $l36 * $l37"->"$r39 := @caughtexception";
    "$i39 = (int) l38"->"$l40 = (long) $i39";
    "$i39 = (int) l38"->"$r39 := @caughtexception";
    "$l40 = (long) $i39"->"$b41 = $l40 cmp l38";
    "$l40 = (long) $i39"->"$r39 := @caughtexception";
    "$b41 = $l40 cmp l38"->"if $b41 == 0 goto (branch)";
    "$b41 = $l40 cmp l38"->"$r39 := @caughtexception";
    "if $b41 == 0 goto (branch)"->"$r0 = new java.lang.StringBuilder";
    "if $b41 == 0 goto (branch)"->"goto [?= return]";
    "if $b41 == 0 goto (branch)"->"$r39 := @caughtexception";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "$r0 = new java.lang.StringBuilder"->"$r39 := @caughtexception";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")"->"$r39 := @caughtexception";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r39 := @caughtexception";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r39 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r39 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r39 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35)"->"$r39 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l38)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r39 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l38)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l38)"->"$r39 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r9)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r39 := @caughtexception";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r9)"->"goto [?= return]";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r9)"->"$r39 := @caughtexception";
    "goto [?= return]"->"return";
    "$r39 := @caughtexception"->"r68 = $r39";
    "r68 = $r39"->"$l10 = (long) i0";
    "$l10 = (long) i0"->"$l9 = (long) i1";
    "$l9 = (long) i1"->"l42 = $l10 * $l9";
    "l42 = $l10 * $l9"->"$i11 = (int) l42";
    "$i11 = (int) l42"->"$l12 = (long) $i11";
    "$l12 = (long) $i11"->"$b13 = $l12 cmp l42";
    "$b13 = $l12 cmp l42"->"if $b13 != 0 goto return";
    "if $b13 != 0 goto return"->"$r40 = new java.lang.StringBuilder";
    "if $b13 != 0 goto return"->"return";
    "$r40 = new java.lang.StringBuilder"->"specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int StrictMath.multiplyExact(\")"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68)";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68)"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r47)";
    "staticinvoke <javaT.lang.StrictMath.ExactArithTests: void fail(java.lang.String)>($r47)"->"return";
}
