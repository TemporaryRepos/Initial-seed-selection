digraph "unitGraph" {
    "r9 := @this: javaT.text.Collator.G7Test"
    "$r0 = <java.util.Locale: java.util.Locale US>"
    "r1 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>($r0)"
    "$r2 = (java.text.RuleBasedCollator) r1"
    "r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.lang.String getRules()>()"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" & Z < p, P\")"
    "r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r8 = new java.text.RuleBasedCollator"
    "specialinvoke $r8.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r7)"
    "r23 = $r8"
    "i2 = 0"
    "if i2 >= 15 goto (branch)"
    "i3 = i2 + 1"
    "if i3 >= 15 goto i2 = i2 + 1"
    "$r11 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"
    "$r10 = <javaT.text.Collator.G7Test: int[] Test1Results>"
    "$i0 = $r10[i2]"
    "$r15 = $r11[$i0]"
    "$r13 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"
    "$r12 = <javaT.text.Collator.G7Test: int[] Test1Results>"
    "$i1 = $r12[i3]"
    "$r14 = $r13[$i1]"
    "virtualinvoke r9.<javaT.text.Collator.G7Test: void doTest(java.text.Collator,java.lang.String,java.lang.String,int)>(r23, $r15, $r14, -1)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "i2 = i2 + 1"
    "goto [?= return]"
    "$r16 := @caughtexception"
    "r24 = $r16"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception: \")"
    "$r19 = virtualinvoke r24.<java.lang.Exception: java.lang.String getMessage()>()"
    "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nDemo Test 1 Table Collation object creation failed.\")"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r9.<javaT.text.Collator.G7Test: void errln(java.lang.String)>($r22)"
    "return"
    "r9 := @this: javaT.text.Collator.G7Test"->"$r0 = <java.util.Locale: java.util.Locale US>";
    "$r0 = <java.util.Locale: java.util.Locale US>"->"r1 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>($r0)";
    "r1 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>($r0)"->"$r2 = (java.text.RuleBasedCollator) r1";
    "$r2 = (java.text.RuleBasedCollator) r1"->"r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.lang.String getRules()>()";
    "r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.lang.String getRules()>()"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" & Z < p, P\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" & Z < p, P\")"->"r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r8 = new java.text.RuleBasedCollator";
    "r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r16 := @caughtexception";
    "$r8 = new java.text.RuleBasedCollator"->"specialinvoke $r8.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r7)";
    "$r8 = new java.text.RuleBasedCollator"->"$r16 := @caughtexception";
    "specialinvoke $r8.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r7)"->"r23 = $r8";
    "specialinvoke $r8.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(r7)"->"$r16 := @caughtexception";
    "r23 = $r8"->"i2 = 0";
    "r23 = $r8"->"$r16 := @caughtexception";
    "i2 = 0"->"if i2 >= 15 goto (branch)";
    "i2 = 0"->"$r16 := @caughtexception";
    "if i2 >= 15 goto (branch)"->"i3 = i2 + 1";
    "if i2 >= 15 goto (branch)"->"goto [?= return]";
    "if i2 >= 15 goto (branch)"->"$r16 := @caughtexception";
    "i3 = i2 + 1"->"if i3 >= 15 goto i2 = i2 + 1";
    "i3 = i2 + 1"->"$r16 := @caughtexception";
    "if i3 >= 15 goto i2 = i2 + 1"->"$r11 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>";
    "if i3 >= 15 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "if i3 >= 15 goto i2 = i2 + 1"->"$r16 := @caughtexception";
    "$r11 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"->"$r10 = <javaT.text.Collator.G7Test: int[] Test1Results>";
    "$r11 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"->"$r16 := @caughtexception";
    "$r10 = <javaT.text.Collator.G7Test: int[] Test1Results>"->"$i0 = $r10[i2]";
    "$r10 = <javaT.text.Collator.G7Test: int[] Test1Results>"->"$r16 := @caughtexception";
    "$i0 = $r10[i2]"->"$r15 = $r11[$i0]";
    "$i0 = $r10[i2]"->"$r16 := @caughtexception";
    "$r15 = $r11[$i0]"->"$r13 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>";
    "$r15 = $r11[$i0]"->"$r16 := @caughtexception";
    "$r13 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"->"$r12 = <javaT.text.Collator.G7Test: int[] Test1Results>";
    "$r13 = <javaT.text.Collator.G7Test: java.lang.String[] testCases>"->"$r16 := @caughtexception";
    "$r12 = <javaT.text.Collator.G7Test: int[] Test1Results>"->"$i1 = $r12[i3]";
    "$r12 = <javaT.text.Collator.G7Test: int[] Test1Results>"->"$r16 := @caughtexception";
    "$i1 = $r12[i3]"->"$r14 = $r13[$i1]";
    "$i1 = $r12[i3]"->"$r16 := @caughtexception";
    "$r14 = $r13[$i1]"->"virtualinvoke r9.<javaT.text.Collator.G7Test: void doTest(java.text.Collator,java.lang.String,java.lang.String,int)>(r23, $r15, $r14, -1)";
    "$r14 = $r13[$i1]"->"$r16 := @caughtexception";
    "virtualinvoke r9.<javaT.text.Collator.G7Test: void doTest(java.text.Collator,java.lang.String,java.lang.String,int)>(r23, $r15, $r14, -1)"->"i3 = i3 + 1";
    "virtualinvoke r9.<javaT.text.Collator.G7Test: void doTest(java.text.Collator,java.lang.String,java.lang.String,int)>(r23, $r15, $r14, -1)"->"$r16 := @caughtexception";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "i3 = i3 + 1"->"$r16 := @caughtexception";
    "goto [?= (branch)]"->"if i3 >= 15 goto i2 = i2 + 1";
    "goto [?= (branch)]"->"$r16 := @caughtexception";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "i2 = i2 + 1"->"$r16 := @caughtexception";
    "goto [?= (branch)]"->"if i2 >= 15 goto (branch)";
    "goto [?= (branch)]"->"$r16 := @caughtexception";
    "goto [?= return]"->"return";
    "$r16 := @caughtexception"->"r24 = $r16";
    "r24 = $r16"->"$r17 = new java.lang.StringBuilder";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception: \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception: \")"->"$r19 = virtualinvoke r24.<java.lang.Exception: java.lang.String getMessage()>()";
    "$r19 = virtualinvoke r24.<java.lang.Exception: java.lang.String getMessage()>()"->"$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)";
    "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nDemo Test 1 Table Collation object creation failed.\")";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nDemo Test 1 Table Collation object creation failed.\")"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r9.<javaT.text.Collator.G7Test: void errln(java.lang.String)>($r22)";
    "virtualinvoke r9.<javaT.text.Collator.G7Test: void errln(java.lang.String)>($r22)"->"return";
}
