digraph "unitGraph" {
    "r0 := @parameter0: short[]"
    "r2 := @parameter1: java.lang.Class"
    "r3 := @parameter2: java.lang.Runnable"
    "$r1 = staticinvoke <java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>(r0)"
    "staticinvoke <javaT.nio.Buffer.BasicShort: void tryCatch(java.nio.Buffer,java.lang.Class,java.lang.Runnable)>($r1, r2, r3)"
    "return"
    "r0 := @parameter0: short[]"->"r2 := @parameter1: java.lang.Class";
    "r2 := @parameter1: java.lang.Class"->"r3 := @parameter2: java.lang.Runnable";
    "r3 := @parameter2: java.lang.Runnable"->"$r1 = staticinvoke <java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>(r0)";
    "$r1 = staticinvoke <java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>(r0)"->"staticinvoke <javaT.nio.Buffer.BasicShort: void tryCatch(java.nio.Buffer,java.lang.Class,java.lang.Runnable)>($r1, r2, r3)";
    "staticinvoke <javaT.nio.Buffer.BasicShort: void tryCatch(java.nio.Buffer,java.lang.Class,java.lang.Runnable)>($r1, r2, r3)"->"return";
}
