digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$r0 = <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute LANGUAGE>"
    "staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r0)"
    "$r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT>"
    "staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r1)"
    "z0 = 0"
    "r11 = null"
    "$r2 = <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute: javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute LANGUAGE>"
    "r11 = staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: java.text.AttributedCharacterIterator$Attribute doSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r2)"
    "goto [?= (branch)]"
    "$r8 := @caughtexception"
    "r9 = $r8"
    "z0 = 1"
    "if z0 != 0 goto return"
    "$r3 = new java.lang.RuntimeException"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Attribute should throw an exception when given a fake \\\"language\\\" attribute. Deserialized object: \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)"
    "throw $r3"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$r0 = <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute LANGUAGE>";
    "$r0 = <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute LANGUAGE>"->"staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r0)";
    "staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r0)"->"$r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT>";
    "$r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT>"->"staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r1)";
    "staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: void testSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r1)"->"z0 = 0";
    "z0 = 0"->"r11 = null";
    "r11 = null"->"$r2 = <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute: javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute LANGUAGE>";
    "r11 = null"->"$r8 := @caughtexception";
    "$r2 = <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute: javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute LANGUAGE>"->"r11 = staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: java.text.AttributedCharacterIterator$Attribute doSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r2)";
    "$r2 = <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute: javaT.text.AttributedCharacterIterator.Attribute.ReadResolve$FakeAttribute LANGUAGE>"->"$r8 := @caughtexception";
    "r11 = staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: java.text.AttributedCharacterIterator$Attribute doSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r2)"->"goto [?= (branch)]";
    "r11 = staticinvoke <javaT.text.AttributedCharacterIterator.Attribute.ReadResolve: java.text.AttributedCharacterIterator$Attribute doSerializationCycle(java.text.AttributedCharacterIterator$Attribute)>($r2)"->"$r8 := @caughtexception";
    "goto [?= (branch)]"->"if z0 != 0 goto return";
    "$r8 := @caughtexception"->"r9 = $r8";
    "r9 = $r8"->"z0 = 1";
    "z0 = 1"->"if z0 != 0 goto return";
    "if z0 != 0 goto return"->"$r3 = new java.lang.RuntimeException";
    "if z0 != 0 goto return"->"return";
    "$r3 = new java.lang.RuntimeException"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Attribute should throw an exception when given a fake \\\"language\\\" attribute. Deserialized object: \")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Attribute should throw an exception when given a fake \\\"language\\\" attribute. Deserialized object: \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)"->"throw $r3";
}
