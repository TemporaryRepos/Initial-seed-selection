digraph "unitGraph" {
    "r3 := @this: javaT.lang.Class.ArrayMethods"
    "$r0 = newmultiarray (java.lang.Object)[0][0]"
    "$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$r2 = (java.lang.Class[]) null"
    "virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"clone\", $r2)"
    "$i0 = r3.<javaT.lang.Class.ArrayMethods: int failed>"
    "$i1 = $i0 + 1"
    "r3.<javaT.lang.Class.ArrayMethods: int failed> = $i1"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"getDeclaredMethod(\\\"clone\\\", null) Should not find clone()\")"
    "goto [?= return]"
    "$r5 := @caughtexception"
    "r7 = $r5"
    "return"
    "r3 := @this: javaT.lang.Class.ArrayMethods"->"$r0 = newmultiarray (java.lang.Object)[0][0]";
    "r3 := @this: javaT.lang.Class.ArrayMethods"->"$r5 := @caughtexception";
    "$r0 = newmultiarray (java.lang.Object)[0][0]"->"$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()";
    "$r0 = newmultiarray (java.lang.Object)[0][0]"->"$r5 := @caughtexception";
    "$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r2 = (java.lang.Class[]) null";
    "$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r5 := @caughtexception";
    "$r2 = (java.lang.Class[]) null"->"virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"clone\", $r2)";
    "$r2 = (java.lang.Class[]) null"->"$r5 := @caughtexception";
    "virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"clone\", $r2)"->"$i0 = r3.<javaT.lang.Class.ArrayMethods: int failed>";
    "virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"clone\", $r2)"->"$r5 := @caughtexception";
    "$i0 = r3.<javaT.lang.Class.ArrayMethods: int failed>"->"$i1 = $i0 + 1";
    "$i0 = r3.<javaT.lang.Class.ArrayMethods: int failed>"->"$r5 := @caughtexception";
    "$i1 = $i0 + 1"->"r3.<javaT.lang.Class.ArrayMethods: int failed> = $i1";
    "$i1 = $i0 + 1"->"$r5 := @caughtexception";
    "r3.<javaT.lang.Class.ArrayMethods: int failed> = $i1"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "r3.<javaT.lang.Class.ArrayMethods: int failed> = $i1"->"$r5 := @caughtexception";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"getDeclaredMethod(\\\"clone\\\", null) Should not find clone()\")";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r5 := @caughtexception";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"getDeclaredMethod(\\\"clone\\\", null) Should not find clone()\")"->"goto [?= return]";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"getDeclaredMethod(\\\"clone\\\", null) Should not find clone()\")"->"$r5 := @caughtexception";
    "goto [?= return]"->"return";
    "$r5 := @caughtexception"->"r7 = $r5";
    "r7 = $r5"->"return";
}
