digraph "unitGraph" {
    "r0 := @parameter0: java.lang.reflect.TypeVariable[]"
    "i4 = 0"
    "$i0 = lengthof r0"
    "if $i0 != 0 goto r1 = r0"
    "i5 = i4 + 1"
    "return i5"
    "r1 = r0"
    "i1 = lengthof r1"
    "i6 = 0"
    "if i6 >= i1 goto return i4"
    "r2 = r1[i6]"
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(null)"
    "i4 = i4 + 1"
    "goto [?= $r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]"
    "$r8 := @caughtexception"
    "r9 = $r8"
    "$r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")"
    "if $r4 == null goto interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"
    "goto [?= $z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]"
    "$r7 := @caughtexception"
    "r10 = $r7"
    "$z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")"
    "if $z1 == 0 goto $r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()"
    "$r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()"
    "$i2 = lengthof $r5"
    "if $i2 == 0 goto $r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"
    "$r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"
    "$i3 = lengthof $r6"
    "if $i3 == 0 goto i6 = i6 + 1"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "return i4"
    "r0 := @parameter0: java.lang.reflect.TypeVariable[]"->"i4 = 0";
    "i4 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 0 goto r1 = r0";
    "if $i0 != 0 goto r1 = r0"->"i5 = i4 + 1";
    "if $i0 != 0 goto r1 = r0"->"r1 = r0";
    "i5 = i4 + 1"->"return i5";
    "r1 = r0"->"i1 = lengthof r1";
    "i1 = lengthof r1"->"i6 = 0";
    "i6 = 0"->"if i6 >= i1 goto return i4";
    "if i6 >= i1 goto return i4"->"r2 = r1[i6]";
    "if i6 >= i1 goto return i4"->"return i4";
    "r2 = r1[i6]"->"interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(null)";
    "r2 = r1[i6]"->"$r8 := @caughtexception";
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(null)"->"i4 = i4 + 1";
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(null)"->"$r8 := @caughtexception";
    "i4 = i4 + 1"->"goto [?= $r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]";
    "i4 = i4 + 1"->"$r8 := @caughtexception";
    "goto [?= $r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]"->"$r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")";
    "$r8 := @caughtexception"->"r9 = $r8";
    "r9 = $r8"->"$r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")";
    "$r4 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")"->"if $r4 == null goto interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)";
    "if $r4 == null goto interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"->"i4 = i4 + 1";
    "if $r4 == null goto interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"->"interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)";
    "if $r4 == null goto interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"->"$r7 := @caughtexception";
    "i4 = i4 + 1"->"interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)";
    "i4 = i4 + 1"->"$r7 := @caughtexception";
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"->"i4 = i4 + 1";
    "interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(null)"->"$r7 := @caughtexception";
    "i4 = i4 + 1"->"goto [?= $z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]";
    "i4 = i4 + 1"->"$r7 := @caughtexception";
    "goto [?= $z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")]"->"$z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")";
    "$r7 := @caughtexception"->"r10 = $r7";
    "r10 = $r7"->"$z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")";
    "$z1 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: boolean isAnnotationPresent(java.lang.Class)>(class \"Ljava/lang/SuppressWarnings;\")"->"if $z1 == 0 goto $r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()";
    "if $z1 == 0 goto $r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()"->"i4 = i4 + 1";
    "if $z1 == 0 goto $r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()"->"$r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()";
    "i4 = i4 + 1"->"$r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()";
    "$r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getAnnotations()>()"->"$i2 = lengthof $r5";
    "$i2 = lengthof $r5"->"if $i2 == 0 goto $r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()";
    "if $i2 == 0 goto $r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"->"i4 = i4 + 1";
    "if $i2 == 0 goto $r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"->"$r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()";
    "i4 = i4 + 1"->"$r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()";
    "$r6 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>()"->"$i3 = lengthof $r6";
    "$i3 = lengthof $r6"->"if $i3 == 0 goto i6 = i6 + 1";
    "if $i3 == 0 goto i6 = i6 + 1"->"i4 = i4 + 1";
    "if $i3 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "i4 = i4 + 1"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i1 goto return i4";
}
