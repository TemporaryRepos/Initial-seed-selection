digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
r0 = \"012345\";
r1 = \"aString\";
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\");
r3 = $r2;
$r4 = new java.lang.StringBuffer;
specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\");
r5 = $r4;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\");
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\");
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\");
"
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$r16 = new java.lang.StringBuilder;
"
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
"
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1);
"
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r18 = new java.lang.RuntimeException;
"
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\");
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r18;
"
    "Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
"
    "Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
r0 = \"012345\";
r1 = \"aString\";
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\");
r3 = $r2;
$r4 = new java.lang.StringBuffer;
specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\");
r5 = $r4;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\");
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\");
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
r0 = \"012345\";
r1 = \"aString\";
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\");
r3 = $r2;
$r4 = new java.lang.StringBuffer;
specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\");
r5 = $r4;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\");
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\");
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\");
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 0:
[preds: ] [succs: 7 8 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
r0 = \"012345\";
r1 = \"aString\";
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\");
r3 = $r2;
$r4 = new java.lang.StringBuffer;
specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\");
r5 = $r4;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r9, \"01aString2345\");
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r12, \"01aStringBuilder2345\");
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(2, r5);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(java.lang.String,java.lang.String)>($r15, \"01aStringBuffer2345\");
"->"Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$r16 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$r16 = new java.lang.StringBuilder;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$r16 = new java.lang.StringBuilder;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 1:
[preds: 0 ] [succs: 7 8 2 ]
$r16 = new java.lang.StringBuilder;
"->"Block 2:
[preds: 1 ] [succs: 7 8 3 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 2:
[preds: 1 ] [succs: 7 8 3 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"012345\");
"->"Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1);
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1);
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1);
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 3:
[preds: 2 ] [succs: 7 8 4 ]
virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>(7, r1);
"->"Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r18 = new java.lang.RuntimeException;
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r18 = new java.lang.RuntimeException;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r18 = new java.lang.RuntimeException;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 4:
[preds: 3 ] [succs: 7 8 5 ]
$r18 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\");
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\");
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\");
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 5:
[preds: 4 ] [succs: 7 8 6 ]
specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException\");
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r18;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r18;
"->"Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
throw $r18;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: ]
$r19 := @caughtexception;
r28 = $r19;
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Test failed: should have thrown IndexOutOfBoundsException, but instead threw \");
$r23 = virtualinvoke r28.<java.lang.Throwable: java.lang.String getMessage()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);
throw $r20;
";
    "Block 7:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r26 := @caughtexception;
r27 = $r26;
goto [?= return];
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
}
