digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
$r0 = newarray (java.math.BigDecimal)[3];
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789\");
$r0[0] = $r1;
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1234567898\");
$r0[1] = $r2;
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12345678987\");
$r0[2] = $r3;
r4 = $r0;
$r5 = newarray (java.math.BigDecimal)[3];
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(\"987654321\");
$r5[0] = $r6;
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"8987654321\");
$r5[1] = $r7;
$r8 = new java.math.BigDecimal;
specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>(\"78987654321\");
$r5[2] = $r8;
r9 = $r5;
$r10 = newarray (java.math.BigDecimal[])[3];
$r11 = newarray (java.math.BigDecimal)[3];
$r12 = new java.math.BigDecimal;
specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(\"121932631112635269\");
$r11[0] = $r12;
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1109586943112635269\");
$r11[1] = $r13;
$r14 = new java.math.BigDecimal;
specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9751562173112635269\");
$r11[2] = $r14;
$r10[0] = $r11;
$r15 = newarray (java.math.BigDecimal)[3];
$r16 = new java.math.BigDecimal;
specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1219326319027587258\");
$r15[0] = $r16;
$r17 = new java.math.BigDecimal;
specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"11095869503027587258\");
$r15[1] = $r17;
$r18 = new java.math.BigDecimal;
specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"97515622363027587258\");
$r15[2] = $r18;
$r10[1] = $r15;
$r19 = newarray (java.math.BigDecimal)[3];
$r20 = new java.math.BigDecimal;
specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12193263197189452827\");
$r19[0] = $r20;
$r21 = new java.math.BigDecimal;
specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(\"110958695093189452827\");
$r19[1] = $r21;
$r22 = new java.math.BigDecimal;
specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"975156224183189452827\");
$r19[2] = $r22;
$r10[2] = $r19;
r23 = $r10;
i3 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$i0 = lengthof r4;
if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$i1 = lengthof r9;
if i4 >= $i1 goto i3 = i3 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r25 = r4[i3];
$r24 = r9[i4];
$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24);
$r27 = r23[i3];
$r28 = $r27[i4];
$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28);
if $z0 != 0 goto i4 = i4 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i2 = i2 + 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= $i1 = lengthof r9];
"
    "Block 7:
[preds: 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r4];
"
    "Block 8:
[preds: 1 ] [succs: 9 15 ]
r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L);
"
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
i5 = 0;
"
    "Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30);
"
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
i5 = i5 + 1;
"
    "Block 13:
[preds: 12 ] [succs: 10 15 ]
goto [?= (branch)];
"
    "Block 14:
[preds: 10 ] [succs: 16 ]
goto [?= return i2];
"
    "Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
"
    "Block 16:
[preds: 14 15 ] [succs: ]
return i2;
"
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
$r0 = newarray (java.math.BigDecimal)[3];
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(\"123456789\");
$r0[0] = $r1;
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1234567898\");
$r0[1] = $r2;
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12345678987\");
$r0[2] = $r3;
r4 = $r0;
$r5 = newarray (java.math.BigDecimal)[3];
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(\"987654321\");
$r5[0] = $r6;
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"8987654321\");
$r5[1] = $r7;
$r8 = new java.math.BigDecimal;
specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>(\"78987654321\");
$r5[2] = $r8;
r9 = $r5;
$r10 = newarray (java.math.BigDecimal[])[3];
$r11 = newarray (java.math.BigDecimal)[3];
$r12 = new java.math.BigDecimal;
specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(\"121932631112635269\");
$r11[0] = $r12;
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1109586943112635269\");
$r11[1] = $r13;
$r14 = new java.math.BigDecimal;
specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"9751562173112635269\");
$r11[2] = $r14;
$r10[0] = $r11;
$r15 = newarray (java.math.BigDecimal)[3];
$r16 = new java.math.BigDecimal;
specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1219326319027587258\");
$r15[0] = $r16;
$r17 = new java.math.BigDecimal;
specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(\"11095869503027587258\");
$r15[1] = $r17;
$r18 = new java.math.BigDecimal;
specialinvoke $r18.<java.math.BigDecimal: void <init>(java.lang.String)>(\"97515622363027587258\");
$r15[2] = $r18;
$r10[1] = $r15;
$r19 = newarray (java.math.BigDecimal)[3];
$r20 = new java.math.BigDecimal;
specialinvoke $r20.<java.math.BigDecimal: void <init>(java.lang.String)>(\"12193263197189452827\");
$r19[0] = $r20;
$r21 = new java.math.BigDecimal;
specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(\"110958695093189452827\");
$r19[1] = $r21;
$r22 = new java.math.BigDecimal;
specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(\"975156224183189452827\");
$r19[2] = $r22;
$r10[2] = $r19;
r23 = $r10;
i3 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$i0 = lengthof r4;
if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$i0 = lengthof r4;
if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i4 = 0;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$i0 = lengthof r4;
if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
"->"Block 8:
[preds: 1 ] [succs: 9 15 ]
r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$i1 = lengthof r9;
if i4 >= $i1 goto i3 = i3 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$i1 = lengthof r9;
if i4 >= $i1 goto i3 = i3 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r25 = r4[i3];
$r24 = r9[i4];
$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24);
$r27 = r23[i3];
$r28 = $r27[i4];
$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28);
if $z0 != 0 goto i4 = i4 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$i1 = lengthof r9;
if i4 >= $i1 goto i3 = i3 + 1;
"->"Block 7:
[preds: 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r4];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r25 = r4[i3];
$r24 = r9[i4];
$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24);
$r27 = r23[i3];
$r28 = $r27[i4];
$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28);
if $z0 != 0 goto i4 = i4 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i2 = i2 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r25 = r4[i3];
$r24 = r9[i4];
$r26 = virtualinvoke $r25.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r24);
$r27 = r23[i3];
$r28 = $r27[i4];
$z0 = virtualinvoke $r26.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r28);
if $z0 != 0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= $i1 = lengthof r9];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i2 = i2 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= $i1 = lengthof r9];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i4 = i4 + 1;
goto [?= $i1 = lengthof r9];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$i1 = lengthof r9;
if i4 >= $i1 goto i3 = i3 + 1;
";
    "Block 7:
[preds: 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r4];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$i0 = lengthof r4;
if i3 >= $i0 goto r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
";
    "Block 8:
[preds: 1 ] [succs: 9 15 ]
r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L);
"->"Block 9:
[preds: 8 ] [succs: 10 15 ]
i5 = 0;
";
    "Block 8:
[preds: 1 ] [succs: 9 15 ]
r30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(8L, 1);
r31 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-1L);
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
i5 = 0;
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
";
    "Block 9:
[preds: 8 ] [succs: 10 15 ]
i5 = 0;
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 12 15 ]
r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30);
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
"->"Block 14:
[preds: 10 ] [succs: 16 ]
goto [?= return i2];
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30);
"->"Block 12:
[preds: 11 ] [succs: 13 15 ]
i5 = i5 + 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 15 ]
r31 = virtualinvoke r31.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r30);
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
i5 = i5 + 1;
"->"Block 13:
[preds: 12 ] [succs: 10 15 ]
goto [?= (branch)];
";
    "Block 12:
[preds: 11 ] [succs: 13 15 ]
i5 = i5 + 1;
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 13:
[preds: 12 ] [succs: 10 15 ]
goto [?= (branch)];
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 15 ]
if i5 >= 100 goto (branch);
";
    "Block 13:
[preds: 12 ] [succs: 10 15 ]
goto [?= (branch)];
"->"Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
";
    "Block 14:
[preds: 10 ] [succs: 16 ]
goto [?= return i2];
"->"Block 16:
[preds: 14 15 ] [succs: ]
return i2;
";
    "Block 15:
[preds: 8 9 13 10 11 12 ] [succs: 16 ]
$r29 := @caughtexception;
r32 = $r29;
i2 = i2 + 1;
"->"Block 16:
[preds: 14 15 ] [succs: ]
return i2;
";
}
