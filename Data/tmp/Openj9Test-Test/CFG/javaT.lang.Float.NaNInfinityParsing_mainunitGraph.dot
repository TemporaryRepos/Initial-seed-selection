digraph "unitGraph" {
    "r47 := @parameter0: java.lang.String[]"
    "i5 = 0"
    "$r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"
    "$i0 = lengthof $r0"
    "if i5 >= $i0 goto i6 = 0"
    "$r34 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"
    "$r35 = $r34[i5]"
    "$f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r35)"
    "f3 = $f2"
    "$z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2)"
    "if $z1 != 0 goto i5 = i5 + 1"
    "$r36 = new java.lang.RuntimeException"
    "$r37 = new java.lang.StringBuilder"
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NaN string ``\")"
    "$r39 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"
    "$r40 = $r39[i5]"
    "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as a NaN; returned \")"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3)"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead.\")"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r45)"
    "throw $r36"
    "i5 = i5 + 1"
    "goto [?= $r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>]"
    "i6 = 0"
    "$r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"
    "$i1 = lengthof $r1"
    "if i6 >= $i1 goto i7 = 0"
    "$r15 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"
    "$r16 = $r15[i6]"
    "$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16)"
    "f4 = $f0"
    "$z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0)"
    "if $z0 != 0 goto $r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"
    "$r24 = new java.lang.RuntimeException"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity string ``\")"
    "$r27 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"
    "$r28 = $r27[i6]"
    "$r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)"
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as infinity; returned \")"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4)"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"instead.\")"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33)"
    "throw $r24"
    "$r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"
    "$r18 = $r17[i6]"
    "$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)"
    "if $c3 != 45 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= z3 = $z2]"
    "$z2 = 0"
    "z3 = $z2"
    "if z3 == 0 goto $f5 = #InfinityF"
    "$f5 = #-InfinityF"
    "goto [?= $b4 = f4 cmpl $f5]"
    "$f5 = #InfinityF"
    "$b4 = f4 cmpl $f5"
    "if $b4 == 0 goto i6 = i6 + 1"
    "$r19 = new java.lang.RuntimeException"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity has wrong sign;\")"
    "if z3 == 0 goto $r48 = \"negative instead of positive.\""
    "$r48 = \"positive instead of negative.\""
    "goto [?= $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)]"
    "$r48 = \"negative instead of positive.\""
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23)"
    "throw $r19"
    "i6 = i6 + 1"
    "goto [?= $r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>]"
    "i7 = 0"
    "$r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"
    "$i2 = lengthof $r2"
    "if i7 >= $i2 goto return"
    "$r3 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"
    "$r4 = $r3[i7]"
    "f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4)"
    "$r5 = new java.lang.RuntimeException"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid string ``\")"
    "$r8 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"
    "$r9 = $r8[i7]"
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' parsed as \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f6)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"
    "throw $r5"
    "$r46 := @caughtexception"
    "r49 = $r46"
    "i7 = i7 + 1"
    "goto [?= $r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>]"
    "return"
    "r47 := @parameter0: java.lang.String[]"->"i5 = 0";
    "i5 = 0"->"$r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>";
    "$r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i5 >= $i0 goto i6 = 0";
    "if i5 >= $i0 goto i6 = 0"->"$r34 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>";
    "if i5 >= $i0 goto i6 = 0"->"i6 = 0";
    "$r34 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"->"$r35 = $r34[i5]";
    "$r35 = $r34[i5]"->"$f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r35)";
    "$f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r35)"->"f3 = $f2";
    "f3 = $f2"->"$z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2)";
    "$z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2)"->"if $z1 != 0 goto i5 = i5 + 1";
    "if $z1 != 0 goto i5 = i5 + 1"->"$r36 = new java.lang.RuntimeException";
    "if $z1 != 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r36 = new java.lang.RuntimeException"->"$r37 = new java.lang.StringBuilder";
    "$r37 = new java.lang.StringBuilder"->"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NaN string ``\")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NaN string ``\")"->"$r39 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>";
    "$r39 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>"->"$r40 = $r39[i5]";
    "$r40 = $r39[i5]"->"$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)";
    "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as a NaN; returned \")";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as a NaN; returned \")"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3)";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3)"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead.\")";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead.\")"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r45)";
    "specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r45)"->"throw $r36";
    "i5 = i5 + 1"->"goto [?= $r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>]";
    "goto [?= $r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>]"->"$r0 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] NaNStrings>";
    "i6 = 0"->"$r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "$r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$i1 = lengthof $r1";
    "$i1 = lengthof $r1"->"if i6 >= $i1 goto i7 = 0";
    "if i6 >= $i1 goto i7 = 0"->"$r15 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "if i6 >= $i1 goto i7 = 0"->"i7 = 0";
    "$r15 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$r16 = $r15[i6]";
    "$r16 = $r15[i6]"->"$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16)";
    "$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16)"->"f4 = $f0";
    "f4 = $f0"->"$z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0)";
    "$z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0)"->"if $z0 != 0 goto $r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "if $z0 != 0 goto $r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$r24 = new java.lang.RuntimeException";
    "if $z0 != 0 goto $r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "$r24 = new java.lang.RuntimeException"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity string ``\")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity string ``\")"->"$r27 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "$r27 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$r28 = $r27[i6]";
    "$r28 = $r27[i6]"->"$r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)";
    "$r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)"->"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as infinity; returned \")";
    "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' did not parse as infinity; returned \")"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4)";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4)"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"instead.\")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"instead.\")"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33)";
    "specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33)"->"throw $r24";
    "$r17 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>"->"$r18 = $r17[i6]";
    "$r18 = $r17[i6]"->"$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)";
    "$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)"->"if $c3 != 45 goto $z2 = 0";
    "if $c3 != 45 goto $z2 = 0"->"$z2 = 1";
    "if $c3 != 45 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= z3 = $z2]";
    "goto [?= z3 = $z2]"->"z3 = $z2";
    "$z2 = 0"->"z3 = $z2";
    "z3 = $z2"->"if z3 == 0 goto $f5 = #InfinityF";
    "if z3 == 0 goto $f5 = #InfinityF"->"$f5 = #-InfinityF";
    "if z3 == 0 goto $f5 = #InfinityF"->"$f5 = #InfinityF";
    "$f5 = #-InfinityF"->"goto [?= $b4 = f4 cmpl $f5]";
    "goto [?= $b4 = f4 cmpl $f5]"->"$b4 = f4 cmpl $f5";
    "$f5 = #InfinityF"->"$b4 = f4 cmpl $f5";
    "$b4 = f4 cmpl $f5"->"if $b4 == 0 goto i6 = i6 + 1";
    "if $b4 == 0 goto i6 = i6 + 1"->"$r19 = new java.lang.RuntimeException";
    "if $b4 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r19 = new java.lang.RuntimeException"->"$r20 = new java.lang.StringBuilder";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity has wrong sign;\")";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Infinity has wrong sign;\")"->"if z3 == 0 goto $r48 = \"negative instead of positive.\"";
    "if z3 == 0 goto $r48 = \"negative instead of positive.\""->"$r48 = \"positive instead of negative.\"";
    "if z3 == 0 goto $r48 = \"negative instead of positive.\""->"$r48 = \"negative instead of positive.\"";
    "$r48 = \"positive instead of negative.\""->"goto [?= $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)]";
    "goto [?= $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)]"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)";
    "$r48 = \"negative instead of positive.\""->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23)";
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23)"->"throw $r19";
    "i6 = i6 + 1"->"goto [?= $r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>]";
    "goto [?= $r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>]"->"$r1 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] infinityStrings>";
    "i7 = 0"->"$r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>";
    "$r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"->"$i2 = lengthof $r2";
    "$i2 = lengthof $r2"->"if i7 >= $i2 goto return";
    "if i7 >= $i2 goto return"->"$r3 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>";
    "if i7 >= $i2 goto return"->"return";
    "if i7 >= $i2 goto return"->"$r46 := @caughtexception";
    "$r3 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"->"$r4 = $r3[i7]";
    "$r3 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"->"$r46 := @caughtexception";
    "$r4 = $r3[i7]"->"f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4)";
    "$r4 = $r3[i7]"->"$r46 := @caughtexception";
    "f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4)"->"$r5 = new java.lang.RuntimeException";
    "f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4)"->"$r46 := @caughtexception";
    "$r5 = new java.lang.RuntimeException"->"$r6 = new java.lang.StringBuilder";
    "$r5 = new java.lang.RuntimeException"->"$r46 := @caughtexception";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "$r6 = new java.lang.StringBuilder"->"$r46 := @caughtexception";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid string ``\")";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r46 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid string ``\")"->"$r8 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid string ``\")"->"$r46 := @caughtexception";
    "$r8 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"->"$r9 = $r8[i7]";
    "$r8 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>"->"$r46 := @caughtexception";
    "$r9 = $r8[i7]"->"$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)";
    "$r9 = $r8[i7]"->"$r46 := @caughtexception";
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' parsed as \")";
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r46 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' parsed as \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f6)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\' parsed as \")"->"$r46 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f6)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f6)"->"$r46 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"->"$r46 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r46 := @caughtexception";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"->"throw $r5";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"->"$r46 := @caughtexception";
    "throw $r5"->"$r46 := @caughtexception";
    "$r46 := @caughtexception"->"r49 = $r46";
    "r49 = $r46"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= $r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>]";
    "goto [?= $r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>]"->"$r2 = <javaT.lang.Float.NaNInfinityParsing: java.lang.String[] invalidStrings>";
}
