digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r29 := @parameter0: java.lang.String[];
z0 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = new java.util.Hashtable;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
specialinvoke $r0.<java.util.Hashtable: void <init>(int,float)>(100, -3.0F);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r30 = $r0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= (branch)];
"
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if z0 != 0 goto z1 = 0;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r20 = new java.lang.Exception;
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"Hashtable, negative load factor\");
throw $r20;
"
    "Block 8:
[preds: 6 ] [succs: 9 13 ]
z1 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r1 = new java.util.Hashtable;
"
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
specialinvoke $r1.<java.util.Hashtable: void <init>(int,float)>(100, #NaNF);
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
r32 = $r1;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
goto [?= (branch)];
"
    "Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if z1 != 0 goto z2 = 0;
"
    "Block 15:
[preds: 14 ] [succs: ]
$r19 = new java.lang.Exception;
specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"Hashtable, NaN load factor\");
throw $r19;
"
    "Block 16:
[preds: 14 ] [succs: 17 21 ]
z2 = 0;
"
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
$r2 = new java.util.HashMap;
"
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(100, -3.0F);
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
r34 = $r2;
"
    "Block 20:
[preds: 19 ] [succs: 22 ]
goto [?= (branch)];
"
    "Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
"
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
if z2 != 0 goto z3 = 0;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r18 = new java.lang.Exception;
specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"HashMap, negative load factor\");
throw $r18;
"
    "Block 24:
[preds: 22 ] [succs: 25 29 ]
z3 = 0;
"
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r3 = new java.util.HashMap;
"
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>(100, #NaNF);
"
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r36 = $r3;
"
    "Block 28:
[preds: 27 ] [succs: 30 ]
goto [?= (branch)];
"
    "Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
"
    "Block 30:
[preds: 28 29 ] [succs: 31 32 ]
if z3 != 0 goto z4 = 0;
"
    "Block 31:
[preds: 30 ] [succs: ]
$r17 = new java.lang.Exception;
specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>(\"HashMap, NaN load factor\");
throw $r17;
"
    "Block 32:
[preds: 30 ] [succs: 33 37 ]
z4 = 0;
"
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
$r4 = new java.util.HashSet;
"
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
specialinvoke $r4.<java.util.HashSet: void <init>(int,float)>(100, -3.0F);
"
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
r38 = $r4;
"
    "Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
"
    "Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
"
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z4 != 0 goto z5 = 0;
"
    "Block 39:
[preds: 38 ] [succs: ]
$r16 = new java.lang.Exception;
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>(\"HashSet, negative load factor\");
throw $r16;
"
    "Block 40:
[preds: 38 ] [succs: 41 45 ]
z5 = 0;
"
    "Block 41:
[preds: 40 ] [succs: 42 45 ]
$r5 = new java.util.HashSet;
"
    "Block 42:
[preds: 41 ] [succs: 43 45 ]
specialinvoke $r5.<java.util.HashSet: void <init>(int,float)>(100, #NaNF);
"
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
r40 = $r5;
"
    "Block 44:
[preds: 43 ] [succs: 46 ]
goto [?= (branch)];
"
    "Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
"
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
if z5 != 0 goto z6 = 0;
"
    "Block 47:
[preds: 46 ] [succs: ]
$r15 = new java.lang.Exception;
specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(\"HashSet, NaN load factor\");
throw $r15;
"
    "Block 48:
[preds: 46 ] [succs: 49 53 ]
z6 = 0;
"
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r6 = new java.util.WeakHashMap;
"
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
specialinvoke $r6.<java.util.WeakHashMap: void <init>(int,float)>(100, -3.0F);
"
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
r42 = $r6;
"
    "Block 52:
[preds: 51 ] [succs: 54 ]
goto [?= (branch)];
"
    "Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
"
    "Block 54:
[preds: 52 53 ] [succs: 55 56 ]
if z6 != 0 goto z7 = 0;
"
    "Block 55:
[preds: 54 ] [succs: ]
$r14 = new java.lang.Exception;
specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>(\"WeakHashMap, negative load factor\");
throw $r14;
"
    "Block 56:
[preds: 54 ] [succs: 57 61 ]
z7 = 0;
"
    "Block 57:
[preds: 56 ] [succs: 58 61 ]
$r7 = new java.util.WeakHashMap;
"
    "Block 58:
[preds: 57 ] [succs: 59 61 ]
specialinvoke $r7.<java.util.WeakHashMap: void <init>(int,float)>(100, #NaNF);
"
    "Block 59:
[preds: 58 ] [succs: 60 61 ]
r44 = $r7;
"
    "Block 60:
[preds: 59 ] [succs: 62 ]
goto [?= (branch)];
"
    "Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
"
    "Block 62:
[preds: 60 61 ] [succs: 63 64 ]
if z7 != 0 goto $r8 = new java.util.Hashtable;
"
    "Block 63:
[preds: 62 ] [succs: ]
$r13 = new java.lang.Exception;
specialinvoke $r13.<java.lang.Exception: void <init>(java.lang.String)>(\"WeakHashMap, NaN load factor\");
throw $r13;
"
    "Block 64:
[preds: 62 ] [succs: ]
$r8 = new java.util.Hashtable;
specialinvoke $r8.<java.util.Hashtable: void <init>(int,float)>(100, 0.69F);
r46 = $r8;
$r9 = new java.util.HashMap;
specialinvoke $r9.<java.util.HashMap: void <init>(int,float)>(100, 0.69F);
r47 = $r9;
$r10 = new java.util.HashSet;
specialinvoke $r10.<java.util.HashSet: void <init>(int,float)>(100, 0.69F);
r11 = $r10;
$r12 = new java.util.WeakHashMap;
specialinvoke $r12.<java.util.WeakHashMap: void <init>(int,float)>(100, 0.69F);
r48 = $r12;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r29 := @parameter0: java.lang.String[];
z0 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = new java.util.Hashtable;
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r29 := @parameter0: java.lang.String[];
z0 = 0;
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = new java.util.Hashtable;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
specialinvoke $r0.<java.util.Hashtable: void <init>(int,float)>(100, -3.0F);
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = new java.util.Hashtable;
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
specialinvoke $r0.<java.util.Hashtable: void <init>(int,float)>(100, -3.0F);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
r30 = $r0;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
specialinvoke $r0.<java.util.Hashtable: void <init>(int,float)>(100, -3.0F);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r30 = $r0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r30 = $r0;
"->"Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= (branch)];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if z0 != 0 goto z1 = 0;
";
    "Block 5:
[preds: 0 1 2 3 ] [succs: 6 ]
$r28 := @caughtexception;
r31 = $r28;
z0 = 1;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if z0 != 0 goto z1 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if z0 != 0 goto z1 = 0;
"->"Block 7:
[preds: 6 ] [succs: ]
$r20 = new java.lang.Exception;
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"Hashtable, negative load factor\");
throw $r20;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if z0 != 0 goto z1 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 13 ]
z1 = 0;
";
    "Block 8:
[preds: 6 ] [succs: 9 13 ]
z1 = 0;
"->"Block 9:
[preds: 8 ] [succs: 10 13 ]
$r1 = new java.util.Hashtable;
";
    "Block 8:
[preds: 6 ] [succs: 9 13 ]
z1 = 0;
"->"Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r1 = new java.util.Hashtable;
"->"Block 10:
[preds: 9 ] [succs: 11 13 ]
specialinvoke $r1.<java.util.Hashtable: void <init>(int,float)>(100, #NaNF);
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r1 = new java.util.Hashtable;
"->"Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
specialinvoke $r1.<java.util.Hashtable: void <init>(int,float)>(100, #NaNF);
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
r32 = $r1;
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
specialinvoke $r1.<java.util.Hashtable: void <init>(int,float)>(100, #NaNF);
"->"Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
r32 = $r1;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
goto [?= (branch)];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
r32 = $r1;
"->"Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
goto [?= (branch)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if z1 != 0 goto z2 = 0;
";
    "Block 13:
[preds: 8 9 10 11 ] [succs: 14 ]
$r27 := @caughtexception;
r33 = $r27;
z1 = 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if z1 != 0 goto z2 = 0;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if z1 != 0 goto z2 = 0;
"->"Block 15:
[preds: 14 ] [succs: ]
$r19 = new java.lang.Exception;
specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"Hashtable, NaN load factor\");
throw $r19;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if z1 != 0 goto z2 = 0;
"->"Block 16:
[preds: 14 ] [succs: 17 21 ]
z2 = 0;
";
    "Block 16:
[preds: 14 ] [succs: 17 21 ]
z2 = 0;
"->"Block 17:
[preds: 16 ] [succs: 18 21 ]
$r2 = new java.util.HashMap;
";
    "Block 16:
[preds: 14 ] [succs: 17 21 ]
z2 = 0;
"->"Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
";
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
$r2 = new java.util.HashMap;
"->"Block 18:
[preds: 17 ] [succs: 19 21 ]
specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(100, -3.0F);
";
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
$r2 = new java.util.HashMap;
"->"Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
";
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(100, -3.0F);
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
r34 = $r2;
";
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(100, -3.0F);
"->"Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
r34 = $r2;
"->"Block 20:
[preds: 19 ] [succs: 22 ]
goto [?= (branch)];
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
r34 = $r2;
"->"Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
";
    "Block 20:
[preds: 19 ] [succs: 22 ]
goto [?= (branch)];
"->"Block 22:
[preds: 20 21 ] [succs: 23 24 ]
if z2 != 0 goto z3 = 0;
";
    "Block 21:
[preds: 16 17 18 19 ] [succs: 22 ]
$r26 := @caughtexception;
r35 = $r26;
z2 = 1;
"->"Block 22:
[preds: 20 21 ] [succs: 23 24 ]
if z2 != 0 goto z3 = 0;
";
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
if z2 != 0 goto z3 = 0;
"->"Block 23:
[preds: 22 ] [succs: ]
$r18 = new java.lang.Exception;
specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"HashMap, negative load factor\");
throw $r18;
";
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
if z2 != 0 goto z3 = 0;
"->"Block 24:
[preds: 22 ] [succs: 25 29 ]
z3 = 0;
";
    "Block 24:
[preds: 22 ] [succs: 25 29 ]
z3 = 0;
"->"Block 25:
[preds: 24 ] [succs: 26 29 ]
$r3 = new java.util.HashMap;
";
    "Block 24:
[preds: 22 ] [succs: 25 29 ]
z3 = 0;
"->"Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
";
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r3 = new java.util.HashMap;
"->"Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>(100, #NaNF);
";
    "Block 25:
[preds: 24 ] [succs: 26 29 ]
$r3 = new java.util.HashMap;
"->"Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
";
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>(100, #NaNF);
"->"Block 27:
[preds: 26 ] [succs: 28 29 ]
r36 = $r3;
";
    "Block 26:
[preds: 25 ] [succs: 27 29 ]
specialinvoke $r3.<java.util.HashMap: void <init>(int,float)>(100, #NaNF);
"->"Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r36 = $r3;
"->"Block 28:
[preds: 27 ] [succs: 30 ]
goto [?= (branch)];
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
r36 = $r3;
"->"Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
";
    "Block 28:
[preds: 27 ] [succs: 30 ]
goto [?= (branch)];
"->"Block 30:
[preds: 28 29 ] [succs: 31 32 ]
if z3 != 0 goto z4 = 0;
";
    "Block 29:
[preds: 24 25 26 27 ] [succs: 30 ]
$r25 := @caughtexception;
r37 = $r25;
z3 = 1;
"->"Block 30:
[preds: 28 29 ] [succs: 31 32 ]
if z3 != 0 goto z4 = 0;
";
    "Block 30:
[preds: 28 29 ] [succs: 31 32 ]
if z3 != 0 goto z4 = 0;
"->"Block 31:
[preds: 30 ] [succs: ]
$r17 = new java.lang.Exception;
specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>(\"HashMap, NaN load factor\");
throw $r17;
";
    "Block 30:
[preds: 28 29 ] [succs: 31 32 ]
if z3 != 0 goto z4 = 0;
"->"Block 32:
[preds: 30 ] [succs: 33 37 ]
z4 = 0;
";
    "Block 32:
[preds: 30 ] [succs: 33 37 ]
z4 = 0;
"->"Block 33:
[preds: 32 ] [succs: 34 37 ]
$r4 = new java.util.HashSet;
";
    "Block 32:
[preds: 30 ] [succs: 33 37 ]
z4 = 0;
"->"Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
";
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
$r4 = new java.util.HashSet;
"->"Block 34:
[preds: 33 ] [succs: 35 37 ]
specialinvoke $r4.<java.util.HashSet: void <init>(int,float)>(100, -3.0F);
";
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
$r4 = new java.util.HashSet;
"->"Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
specialinvoke $r4.<java.util.HashSet: void <init>(int,float)>(100, -3.0F);
"->"Block 35:
[preds: 34 ] [succs: 36 37 ]
r38 = $r4;
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
specialinvoke $r4.<java.util.HashSet: void <init>(int,float)>(100, -3.0F);
"->"Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
r38 = $r4;
"->"Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
r38 = $r4;
"->"Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
";
    "Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
"->"Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z4 != 0 goto z5 = 0;
";
    "Block 37:
[preds: 32 33 34 35 ] [succs: 38 ]
$r24 := @caughtexception;
r39 = $r24;
z4 = 1;
"->"Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z4 != 0 goto z5 = 0;
";
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z4 != 0 goto z5 = 0;
"->"Block 39:
[preds: 38 ] [succs: ]
$r16 = new java.lang.Exception;
specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>(\"HashSet, negative load factor\");
throw $r16;
";
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z4 != 0 goto z5 = 0;
"->"Block 40:
[preds: 38 ] [succs: 41 45 ]
z5 = 0;
";
    "Block 40:
[preds: 38 ] [succs: 41 45 ]
z5 = 0;
"->"Block 41:
[preds: 40 ] [succs: 42 45 ]
$r5 = new java.util.HashSet;
";
    "Block 40:
[preds: 38 ] [succs: 41 45 ]
z5 = 0;
"->"Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
";
    "Block 41:
[preds: 40 ] [succs: 42 45 ]
$r5 = new java.util.HashSet;
"->"Block 42:
[preds: 41 ] [succs: 43 45 ]
specialinvoke $r5.<java.util.HashSet: void <init>(int,float)>(100, #NaNF);
";
    "Block 41:
[preds: 40 ] [succs: 42 45 ]
$r5 = new java.util.HashSet;
"->"Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
";
    "Block 42:
[preds: 41 ] [succs: 43 45 ]
specialinvoke $r5.<java.util.HashSet: void <init>(int,float)>(100, #NaNF);
"->"Block 43:
[preds: 42 ] [succs: 44 45 ]
r40 = $r5;
";
    "Block 42:
[preds: 41 ] [succs: 43 45 ]
specialinvoke $r5.<java.util.HashSet: void <init>(int,float)>(100, #NaNF);
"->"Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
r40 = $r5;
"->"Block 44:
[preds: 43 ] [succs: 46 ]
goto [?= (branch)];
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
r40 = $r5;
"->"Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
";
    "Block 44:
[preds: 43 ] [succs: 46 ]
goto [?= (branch)];
"->"Block 46:
[preds: 44 45 ] [succs: 47 48 ]
if z5 != 0 goto z6 = 0;
";
    "Block 45:
[preds: 40 41 42 43 ] [succs: 46 ]
$r23 := @caughtexception;
r41 = $r23;
z5 = 1;
"->"Block 46:
[preds: 44 45 ] [succs: 47 48 ]
if z5 != 0 goto z6 = 0;
";
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
if z5 != 0 goto z6 = 0;
"->"Block 47:
[preds: 46 ] [succs: ]
$r15 = new java.lang.Exception;
specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(\"HashSet, NaN load factor\");
throw $r15;
";
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
if z5 != 0 goto z6 = 0;
"->"Block 48:
[preds: 46 ] [succs: 49 53 ]
z6 = 0;
";
    "Block 48:
[preds: 46 ] [succs: 49 53 ]
z6 = 0;
"->"Block 49:
[preds: 48 ] [succs: 50 53 ]
$r6 = new java.util.WeakHashMap;
";
    "Block 48:
[preds: 46 ] [succs: 49 53 ]
z6 = 0;
"->"Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
";
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r6 = new java.util.WeakHashMap;
"->"Block 50:
[preds: 49 ] [succs: 51 53 ]
specialinvoke $r6.<java.util.WeakHashMap: void <init>(int,float)>(100, -3.0F);
";
    "Block 49:
[preds: 48 ] [succs: 50 53 ]
$r6 = new java.util.WeakHashMap;
"->"Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
";
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
specialinvoke $r6.<java.util.WeakHashMap: void <init>(int,float)>(100, -3.0F);
"->"Block 51:
[preds: 50 ] [succs: 52 53 ]
r42 = $r6;
";
    "Block 50:
[preds: 49 ] [succs: 51 53 ]
specialinvoke $r6.<java.util.WeakHashMap: void <init>(int,float)>(100, -3.0F);
"->"Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
";
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
r42 = $r6;
"->"Block 52:
[preds: 51 ] [succs: 54 ]
goto [?= (branch)];
";
    "Block 51:
[preds: 50 ] [succs: 52 53 ]
r42 = $r6;
"->"Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
";
    "Block 52:
[preds: 51 ] [succs: 54 ]
goto [?= (branch)];
"->"Block 54:
[preds: 52 53 ] [succs: 55 56 ]
if z6 != 0 goto z7 = 0;
";
    "Block 53:
[preds: 48 49 50 51 ] [succs: 54 ]
$r22 := @caughtexception;
r43 = $r22;
z6 = 1;
"->"Block 54:
[preds: 52 53 ] [succs: 55 56 ]
if z6 != 0 goto z7 = 0;
";
    "Block 54:
[preds: 52 53 ] [succs: 55 56 ]
if z6 != 0 goto z7 = 0;
"->"Block 55:
[preds: 54 ] [succs: ]
$r14 = new java.lang.Exception;
specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>(\"WeakHashMap, negative load factor\");
throw $r14;
";
    "Block 54:
[preds: 52 53 ] [succs: 55 56 ]
if z6 != 0 goto z7 = 0;
"->"Block 56:
[preds: 54 ] [succs: 57 61 ]
z7 = 0;
";
    "Block 56:
[preds: 54 ] [succs: 57 61 ]
z7 = 0;
"->"Block 57:
[preds: 56 ] [succs: 58 61 ]
$r7 = new java.util.WeakHashMap;
";
    "Block 56:
[preds: 54 ] [succs: 57 61 ]
z7 = 0;
"->"Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
";
    "Block 57:
[preds: 56 ] [succs: 58 61 ]
$r7 = new java.util.WeakHashMap;
"->"Block 58:
[preds: 57 ] [succs: 59 61 ]
specialinvoke $r7.<java.util.WeakHashMap: void <init>(int,float)>(100, #NaNF);
";
    "Block 57:
[preds: 56 ] [succs: 58 61 ]
$r7 = new java.util.WeakHashMap;
"->"Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
";
    "Block 58:
[preds: 57 ] [succs: 59 61 ]
specialinvoke $r7.<java.util.WeakHashMap: void <init>(int,float)>(100, #NaNF);
"->"Block 59:
[preds: 58 ] [succs: 60 61 ]
r44 = $r7;
";
    "Block 58:
[preds: 57 ] [succs: 59 61 ]
specialinvoke $r7.<java.util.WeakHashMap: void <init>(int,float)>(100, #NaNF);
"->"Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
";
    "Block 59:
[preds: 58 ] [succs: 60 61 ]
r44 = $r7;
"->"Block 60:
[preds: 59 ] [succs: 62 ]
goto [?= (branch)];
";
    "Block 59:
[preds: 58 ] [succs: 60 61 ]
r44 = $r7;
"->"Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
";
    "Block 60:
[preds: 59 ] [succs: 62 ]
goto [?= (branch)];
"->"Block 62:
[preds: 60 61 ] [succs: 63 64 ]
if z7 != 0 goto $r8 = new java.util.Hashtable;
";
    "Block 61:
[preds: 56 57 58 59 ] [succs: 62 ]
$r21 := @caughtexception;
r45 = $r21;
z7 = 1;
"->"Block 62:
[preds: 60 61 ] [succs: 63 64 ]
if z7 != 0 goto $r8 = new java.util.Hashtable;
";
    "Block 62:
[preds: 60 61 ] [succs: 63 64 ]
if z7 != 0 goto $r8 = new java.util.Hashtable;
"->"Block 63:
[preds: 62 ] [succs: ]
$r13 = new java.lang.Exception;
specialinvoke $r13.<java.lang.Exception: void <init>(java.lang.String)>(\"WeakHashMap, NaN load factor\");
throw $r13;
";
    "Block 62:
[preds: 60 61 ] [succs: 63 64 ]
if z7 != 0 goto $r8 = new java.util.Hashtable;
"->"Block 64:
[preds: 62 ] [succs: ]
$r8 = new java.util.Hashtable;
specialinvoke $r8.<java.util.Hashtable: void <init>(int,float)>(100, 0.69F);
r46 = $r8;
$r9 = new java.util.HashMap;
specialinvoke $r9.<java.util.HashMap: void <init>(int,float)>(100, 0.69F);
r47 = $r9;
$r10 = new java.util.HashSet;
specialinvoke $r10.<java.util.HashSet: void <init>(int,float)>(100, 0.69F);
r11 = $r10;
$r12 = new java.util.WeakHashMap;
specialinvoke $r12.<java.util.WeakHashMap: void <init>(int,float)>(100, 0.69F);
r48 = $r12;
return;
";
}
