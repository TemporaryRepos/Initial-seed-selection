digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = newarray (long)[7];
$r0[0] = 2147483646L;
$r0[1] = 2147483647L;
$r0[2] = 2147483648L;
$r0[3] = 4503599627370495L;
$r0[4] = 4503599627370496L;
$r0[5] = 4503599627370497L;
$r0[6] = 9223372036854773760L;
r1 = $r0;
r10 = r1;
i0 = lengthof r10;
i5 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto l7 = 9223372036854773760L;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
l6 = r10[i5];
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(long)>(l6);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$l3 = neg l6;
specialinvoke $r8.<java.math.BigDecimal: void <init>(long)>($l3);
r9 = $r8;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>(l6, r7);
$l4 = neg l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>($l4, r9);
$f3 = (float) l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r7, $f3);
$f4 = (float) l6;
$f5 = neg $f4;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r9, $f5);
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
l7 = 9223372036854773760L;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$b1 = l7 cmp 9223372036854775807L;
if $b1 >= 0 goto $r2 = new java.math.BigDecimal;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(long)>(l7);
r11 = $r4;
$r5 = new java.math.BigDecimal;
$l2 = neg l7;
specialinvoke $r5.<java.math.BigDecimal: void <init>(long)>($l2);
r12 = $r5;
$d0 = (double) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r11, $d0);
$d1 = (double) l7;
$d2 = neg $d1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r12, $d2);
$f0 = (float) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r11, $f0);
$f1 = (float) l7;
$f2 = neg $f1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r12, $f2);
l7 = l7 + 1L;
goto [?= $b1 = l7 cmp 9223372036854775807L];
"
    "Block 6:
[preds: 4 ] [succs: ]
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(long)>(-9223372036854775808L);
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>($r2, -9.223372036854776E18);
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(long)>(9223372036854775807L);
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>($r3, 9.223372036854776E18);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = newarray (long)[7];
$r0[0] = 2147483646L;
$r0[1] = 2147483647L;
$r0[2] = 2147483648L;
$r0[3] = 4503599627370495L;
$r0[4] = 4503599627370496L;
$r0[5] = 4503599627370497L;
$r0[6] = 9223372036854773760L;
r1 = $r0;
r10 = r1;
i0 = lengthof r10;
i5 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto l7 = 9223372036854773760L;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto l7 = 9223372036854773760L;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
l6 = r10[i5];
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(long)>(l6);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$l3 = neg l6;
specialinvoke $r8.<java.math.BigDecimal: void <init>(long)>($l3);
r9 = $r8;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>(l6, r7);
$l4 = neg l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>($l4, r9);
$f3 = (float) l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r7, $f3);
$f4 = (float) l6;
$f5 = neg $f4;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r9, $f5);
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto l7 = 9223372036854773760L;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
l7 = 9223372036854773760L;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
l6 = r10[i5];
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(long)>(l6);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$l3 = neg l6;
specialinvoke $r8.<java.math.BigDecimal: void <init>(long)>($l3);
r9 = $r8;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>(l6, r7);
$l4 = neg l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void testDoubleValue0(long,java.math.BigDecimal)>($l4, r9);
$f3 = (float) l6;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r7, $f3);
$f4 = (float) l6;
$f5 = neg $f4;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r9, $f5);
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= i0 goto l7 = 9223372036854773760L;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
l7 = 9223372036854773760L;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$b1 = l7 cmp 9223372036854775807L;
if $b1 >= 0 goto $r2 = new java.math.BigDecimal;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$b1 = l7 cmp 9223372036854775807L;
if $b1 >= 0 goto $r2 = new java.math.BigDecimal;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(long)>(l7);
r11 = $r4;
$r5 = new java.math.BigDecimal;
$l2 = neg l7;
specialinvoke $r5.<java.math.BigDecimal: void <init>(long)>($l2);
r12 = $r5;
$d0 = (double) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r11, $d0);
$d1 = (double) l7;
$d2 = neg $d1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r12, $d2);
$f0 = (float) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r11, $f0);
$f1 = (float) l7;
$f2 = neg $f1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r12, $f2);
l7 = l7 + 1L;
goto [?= $b1 = l7 cmp 9223372036854775807L];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$b1 = l7 cmp 9223372036854775807L;
if $b1 >= 0 goto $r2 = new java.math.BigDecimal;
"->"Block 6:
[preds: 4 ] [succs: ]
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(long)>(-9223372036854775808L);
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>($r2, -9.223372036854776E18);
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(long)>(9223372036854775807L);
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>($r3, 9.223372036854776E18);
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = new java.math.BigDecimal;
specialinvoke $r4.<java.math.BigDecimal: void <init>(long)>(l7);
r11 = $r4;
$r5 = new java.math.BigDecimal;
$l2 = neg l7;
specialinvoke $r5.<java.math.BigDecimal: void <init>(long)>($l2);
r12 = $r5;
$d0 = (double) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r11, $d0);
$d1 = (double) l7;
$d2 = neg $d1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkDouble(java.math.BigDecimal,double)>(r12, $d2);
$f0 = (float) l7;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r11, $f0);
$f1 = (float) l7;
$f2 = neg $f1;
staticinvoke <javaT.math.BigDecimal.FloatDoubleValueTests: void checkFloat(java.math.BigDecimal,float)>(r12, $f2);
l7 = l7 + 1L;
goto [?= $b1 = l7 cmp 9223372036854775807L];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$b1 = l7 cmp 9223372036854775807L;
if $b1 >= 0 goto $r2 = new java.math.BigDecimal;
";
}
