digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 6 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r7 = $r0;
"
    "Block 1:
[preds: 0 ] [succs: 5 6 2 ]
virtualinvoke r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(null, 1);
"
    "Block 2:
[preds: 1 ] [succs: 5 6 3 ]
$r1 = new java.lang.RuntimeException;
"
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
throw $r1;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
"
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
"
    "Block 7:
[preds: 5 ] [succs: ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"xyyz\");
r10 = $r5;
$i1 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 0);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i1, 1);
$i2 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 1);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i2, 1);
$i3 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 2);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i3, 2);
$i4 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String)>(\"not found\");
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i4, -1);
return;
"
    "Block 0:
[preds: ] [succs: 5 6 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r7 = $r0;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
";
    "Block 0:
[preds: ] [succs: 5 6 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r7 = $r0;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
";
    "Block 0:
[preds: ] [succs: 5 6 1 ]
r6 := @this: javaT.lang.StringBuilder.BuilderForwarding;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r7 = $r0;
"->"Block 1:
[preds: 0 ] [succs: 5 6 2 ]
virtualinvoke r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(null, 1);
";
    "Block 1:
[preds: 0 ] [succs: 5 6 2 ]
virtualinvoke r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(null, 1);
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
";
    "Block 1:
[preds: 0 ] [succs: 5 6 2 ]
virtualinvoke r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(null, 1);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
";
    "Block 1:
[preds: 0 ] [succs: 5 6 2 ]
virtualinvoke r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(null, 1);
"->"Block 2:
[preds: 1 ] [succs: 5 6 3 ]
$r1 = new java.lang.RuntimeException;
";
    "Block 2:
[preds: 1 ] [succs: 5 6 3 ]
$r1 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
";
    "Block 2:
[preds: 1 ] [succs: 5 6 3 ]
$r1 = new java.lang.RuntimeException;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
";
    "Block 2:
[preds: 1 ] [succs: 5 6 3 ]
$r1 = new java.lang.RuntimeException;
"->"Block 3:
[preds: 2 ] [succs: 5 6 4 ]
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
throw $r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
throw $r1;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
throw $r1;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: ]
$r2 := @caughtexception;
r9 = $r2;
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed: should have thrown NPE\");
throw $r3;
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r4 := @caughtexception;
r8 = $r4;
goto [?= $r5 = new java.lang.StringBuilder];
"->"Block 7:
[preds: 5 ] [succs: ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"xyyz\");
r10 = $r5;
$i1 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 0);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i1, 1);
$i2 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 1);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i2, 1);
$i3 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>(\"y\", 2);
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i3, 2);
$i4 = virtualinvoke r10.<java.lang.StringBuilder: int indexOf(java.lang.String)>(\"not found\");
virtualinvoke r6.<javaT.lang.StringBuilder.BuilderForwarding: void assertEquals(int,int)>($i4, -1);
return;
";
}
