digraph "unitGraph" {
    "r17 := @this: com.sun.crypto.provider.Cipher.AES.Test4512524"
    "r2 := @parameter0: java.lang.String"
    "$r18 = new java.lang.StringBuilder"
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NoPadding\")"
    "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")"
    "r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")"
    "virtualinvoke r8.<javax.crypto.KeyGenerator: void init(int)>(128)"
    "r9 = virtualinvoke r8.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()"
    "$r21 = (java.security.Key) r9"
    "virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r21, null)"
    "goto [?= $r11 = <java.lang.System: java.io.PrintStream out>]"
    "$r15 := @caughtexception"
    "$r19 = new java.lang.Exception"
    "specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"null parameter is not handled correctly!\")"
    "throw $r19"
    "$r11 = <java.lang.System: java.io.PrintStream out>"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "return"
    "r17 := @this: com.sun.crypto.provider.Cipher.AES.Test4512524"->"r2 := @parameter0: java.lang.String";
    "r2 := @parameter0: java.lang.String"->"$r18 = new java.lang.StringBuilder";
    "$r18 = new java.lang.StringBuilder"->"specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")";
    "$r1 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"AES/\")"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NoPadding\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NoPadding\")"->"r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")";
    "r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r6, \"SunJCE\")"->"r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")";
    "r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(\"AES\", \"SunJCE\")"->"virtualinvoke r8.<javax.crypto.KeyGenerator: void init(int)>(128)";
    "virtualinvoke r8.<javax.crypto.KeyGenerator: void init(int)>(128)"->"r9 = virtualinvoke r8.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()";
    "r9 = virtualinvoke r8.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()"->"$r21 = (java.security.Key) r9";
    "r9 = virtualinvoke r8.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()"->"$r15 := @caughtexception";
    "$r21 = (java.security.Key) r9"->"virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r21, null)";
    "$r21 = (java.security.Key) r9"->"$r15 := @caughtexception";
    "virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r21, null)"->"goto [?= $r11 = <java.lang.System: java.io.PrintStream out>]";
    "virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r21, null)"->"$r15 := @caughtexception";
    "goto [?= $r11 = <java.lang.System: java.io.PrintStream out>]"->"$r11 = <java.lang.System: java.io.PrintStream out>";
    "$r15 := @caughtexception"->"$r19 = new java.lang.Exception";
    "$r19 = new java.lang.Exception"->"specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"null parameter is not handled correctly!\")";
    "specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"null parameter is not handled correctly!\")"->"throw $r19";
    "$r11 = <java.lang.System: java.io.PrintStream out>"->"$r20 = new java.lang.StringBuilder";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Passed\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"return";
}
