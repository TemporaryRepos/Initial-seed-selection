digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing constructors\");
r1 = newarray (java.lang.Class)[1];
r1[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r2 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r48 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r1);
r49 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r50 = r49[0];
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i14 = lengthof r49;
if $i14 == 1 goto r50 = r49[0];
"
    "Block 2:
[preds: 1 ] [succs: ]
$r47 = new java.lang.AssertionError;
specialinvoke $r47.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C0(T) should have one generic parameter type\");
throw $r47;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r50 = r49[0];
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z26 = r50 instanceof java.lang.reflect.TypeVariable;
if $z26 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r46 = new java.lang.AssertionError;
specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of C0(T2) is a type variable\");
throw $r46;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r51 = (java.lang.reflect.TypeVariable) r50;
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r39 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z25 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z25 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 8:
[preds: 7 ] [succs: ]
$r40 = new java.lang.AssertionError;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2 is T2, not \");
$r43 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r40.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);
throw $r40;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i13 = lengthof r52;
if $i13 == 1 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 11:
[preds: 10 ] [succs: ]
$r38 = new java.lang.AssertionError;
specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r38;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$i12 = lengthof r53;
if $i12 == 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 14:
[preds: 13 ] [succs: ]
$r37 = new java.lang.AssertionError;
specialinvoke $r37.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T2) should have no generic exception types\");
throw $r37;
"
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r3 = newarray (java.lang.Class)[1];
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i11 = lengthof r54;
if $i11 == 0 goto r3 = newarray (java.lang.Class)[1];
"
    "Block 17:
[preds: 16 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T2) should have no type parameters\");
throw $r36;
"
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"Ljava/lang/Object;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r55 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r3);
r56 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r57 = r56[0];
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i10 = lengthof r56;
if $i10 == 1 goto r57 = r56[0];
"
    "Block 20:
[preds: 19 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C0(T) should have one generic parameter type\");
throw $r35;
"
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r57 = r56[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$z24 = r57 instanceof java.lang.reflect.TypeVariable;
if $z24 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r34 = new java.lang.AssertionError;
specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of C2(T) is a type variable\");
throw $r34;
"
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r58 = (java.lang.reflect.TypeVariable) r57;
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$r27 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z23 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z23 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 26:
[preds: 25 ] [succs: ]
$r28 = new java.lang.AssertionError;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2 is T, not \");
$r31 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>($r33);
throw $r28;
"
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$i9 = lengthof r59;
if $i9 == 1 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 29:
[preds: 28 ] [succs: ]
$r26 = new java.lang.AssertionError;
specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r26;
"
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i8 = lengthof r60;
if $i8 == 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 32:
[preds: 31 ] [succs: ]
$r25 = new java.lang.AssertionError;
specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T) should have no generic exception types\");
throw $r25;
"
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r5 = newarray (java.lang.Class)[3];
"
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$i7 = lengthof r61;
if $i7 == 1 goto r5 = newarray (java.lang.Class)[3];
"
    "Block 35:
[preds: 34 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T) should have one type parameter\");
throw $r24;
"
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r5 = newarray (java.lang.Class)[3];
r5[0] = class \"Ljava/lang/Object;\";
r5[1] = class \"Ljava/lang/Object;\";
r5[2] = class \"Ljava/lang/Object;\";
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r62 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);
r63 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r64 = r63[0];
"
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$i6 = lengthof r63;
if $i6 == 3 goto r64 = r63[0];
"
    "Block 38:
[preds: 37 ] [succs: ]
$r23 = new java.lang.AssertionError;
specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have three generic parameter types\");
throw $r23;
"
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r64 = r63[0];
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$z22 = r64 instanceof java.lang.reflect.TypeVariable;
if $z22 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"
    "Block 41:
[preds: 40 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the first parameter of C2(T1,T2,T4) is a type variable\");
throw $r22;
"
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
r65 = (java.lang.reflect.TypeVariable) r64;
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r15 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z21 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z21 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"
    "Block 44:
[preds: 43 ] [succs: ]
$r16 = new java.lang.AssertionError;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2(T1,T2,T4) is T1, not \");
$r19 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);
throw $r16;
"
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i5 = lengthof r66;
if $i5 == 1 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 47:
[preds: 46 ] [succs: ]
$r14 = new java.lang.AssertionError;
specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r14;
"
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$i4 = lengthof r67;
if $i4 == 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 50:
[preds: 49 ] [succs: ]
$r13 = new java.lang.AssertionError;
specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have no generic exception types\");
throw $r13;
"
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r7 = newarray (java.lang.Class)[0];
"
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$i3 = lengthof r68;
if $i3 == 4 goto r7 = newarray (java.lang.Class)[0];
"
    "Block 53:
[preds: 52 ] [succs: ]
$r12 = new java.lang.AssertionError;
specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have four type parameters\");
throw $r12;
"
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r7 = newarray (java.lang.Class)[0];
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r69 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r7);
r70 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i2 = lengthof r70;
if $i2 == 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"
    "Block 56:
[preds: 55 ] [succs: ]
$r11 = new java.lang.AssertionError;
specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have no generic parameter types\");
throw $r11;
"
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$i1 = lengthof r71;
if $i1 == 1 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"
    "Block 59:
[preds: 58 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have one generic exception type\");
throw $r10;
"
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto return;
"
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
$i0 = lengthof r72;
if $i0 == 0 goto return;
"
    "Block 62:
[preds: 61 ] [succs: ]
$r9 = new java.lang.AssertionError;
specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have no type parameters\");
throw $r9;
"
    "Block 63:
[preds: 60 61 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing constructors\");
r1 = newarray (java.lang.Class)[1];
r1[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r2 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r48 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r1);
r49 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r50 = r49[0];
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i14 = lengthof r49;
if $i14 == 1 goto r50 = r49[0];
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing constructors\");
r1 = newarray (java.lang.Class)[1];
r1[0] = class \"LjavaT/lang/reflect/Generics/C0;\";
$r2 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r48 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r1);
r49 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z0 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z0 != 0 goto r50 = r49[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r50 = r49[0];
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i14 = lengthof r49;
if $i14 == 1 goto r50 = r49[0];
"->"Block 2:
[preds: 1 ] [succs: ]
$r47 = new java.lang.AssertionError;
specialinvoke $r47.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C0(T) should have one generic parameter type\");
throw $r47;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i14 = lengthof r49;
if $i14 == 1 goto r50 = r49[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r50 = r49[0];
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r50 = r49[0];
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$z26 = r50 instanceof java.lang.reflect.TypeVariable;
if $z26 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r50 = r49[0];
$z1 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z1 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r51 = (java.lang.reflect.TypeVariable) r50;
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z26 = r50 instanceof java.lang.reflect.TypeVariable;
if $z26 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"->"Block 5:
[preds: 4 ] [succs: ]
$r46 = new java.lang.AssertionError;
specialinvoke $r46.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of C0(T2) is a type variable\");
throw $r46;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z26 = r50 instanceof java.lang.reflect.TypeVariable;
if $z26 != 0 goto r51 = (java.lang.reflect.TypeVariable) r50;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r51 = (java.lang.reflect.TypeVariable) r50;
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r51 = (java.lang.reflect.TypeVariable) r50;
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r39 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z25 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z25 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r51 = (java.lang.reflect.TypeVariable) r50;
$z2 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z2 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r39 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z25 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z25 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 8:
[preds: 7 ] [succs: ]
$r40 = new java.lang.AssertionError;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2 is T2, not \");
$r43 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r40.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);
throw $r40;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r39 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z25 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(\"T2\");
if $z25 != 0 goto r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$i13 = lengthof r52;
if $i13 == 1 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
r52 = interfaceinvoke r51.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z3 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z3 != 0 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i13 = lengthof r52;
if $i13 == 1 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 11:
[preds: 10 ] [succs: ]
$r38 = new java.lang.AssertionError;
specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r38;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i13 = lengthof r52;
if $i13 == 1 goto r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$i12 = lengthof r53;
if $i12 == 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 15 ]
r53 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z4 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z4 != 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r3 = newarray (java.lang.Class)[1];
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$i12 = lengthof r53;
if $i12 == 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 14:
[preds: 13 ] [succs: ]
$r37 = new java.lang.AssertionError;
specialinvoke $r37.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T2) should have no generic exception types\");
throw $r37;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$i12 = lengthof r53;
if $i12 == 0 goto r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r3 = newarray (java.lang.Class)[1];
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r3 = newarray (java.lang.Class)[1];
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$i11 = lengthof r54;
if $i11 == 0 goto r3 = newarray (java.lang.Class)[1];
";
    "Block 15:
[preds: 12 13 ] [succs: 16 18 ]
r54 = virtualinvoke r48.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z5 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z5 != 0 goto r3 = newarray (java.lang.Class)[1];
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"Ljava/lang/Object;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r55 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r3);
r56 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r57 = r56[0];
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i11 = lengthof r54;
if $i11 == 0 goto r3 = newarray (java.lang.Class)[1];
"->"Block 17:
[preds: 16 ] [succs: ]
$r36 = new java.lang.AssertionError;
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T2) should have no type parameters\");
throw $r36;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i11 = lengthof r54;
if $i11 == 0 goto r3 = newarray (java.lang.Class)[1];
"->"Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"Ljava/lang/Object;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r55 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r3);
r56 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r57 = r56[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"Ljava/lang/Object;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r55 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r3);
r56 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r57 = r56[0];
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
$i10 = lengthof r56;
if $i10 == 1 goto r57 = r56[0];
";
    "Block 18:
[preds: 15 16 ] [succs: 19 21 ]
r3 = newarray (java.lang.Class)[1];
r3[0] = class \"Ljava/lang/Object;\";
$r4 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r55 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r3);
r56 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z6 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z6 != 0 goto r57 = r56[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r57 = r56[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i10 = lengthof r56;
if $i10 == 1 goto r57 = r56[0];
"->"Block 20:
[preds: 19 ] [succs: ]
$r35 = new java.lang.AssertionError;
specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C0(T) should have one generic parameter type\");
throw $r35;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
$i10 = lengthof r56;
if $i10 == 1 goto r57 = r56[0];
"->"Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r57 = r56[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r57 = r56[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
$z24 = r57 instanceof java.lang.reflect.TypeVariable;
if $z24 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
";
    "Block 21:
[preds: 18 19 ] [succs: 22 24 ]
r57 = r56[0];
$z7 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z7 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r58 = (java.lang.reflect.TypeVariable) r57;
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$z24 = r57 instanceof java.lang.reflect.TypeVariable;
if $z24 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"->"Block 23:
[preds: 22 ] [succs: ]
$r34 = new java.lang.AssertionError;
specialinvoke $r34.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the parameter of C2(T) is a type variable\");
throw $r34;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
$z24 = r57 instanceof java.lang.reflect.TypeVariable;
if $z24 != 0 goto r58 = (java.lang.reflect.TypeVariable) r57;
"->"Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r58 = (java.lang.reflect.TypeVariable) r57;
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r58 = (java.lang.reflect.TypeVariable) r57;
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
$r27 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z23 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z23 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 24:
[preds: 21 22 ] [succs: 25 27 ]
r58 = (java.lang.reflect.TypeVariable) r57;
$z8 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z8 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$r27 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z23 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z23 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 26:
[preds: 25 ] [succs: ]
$r28 = new java.lang.AssertionError;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2 is T, not \");
$r31 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>($r33);
throw $r28;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$r27 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z23 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(\"T\");
if $z23 != 0 goto r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
$i9 = lengthof r59;
if $i9 == 1 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 27:
[preds: 24 25 ] [succs: 28 30 ]
r59 = interfaceinvoke r58.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z9 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z9 != 0 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$i9 = lengthof r59;
if $i9 == 1 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 29:
[preds: 28 ] [succs: ]
$r26 = new java.lang.AssertionError;
specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r26;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
$i9 = lengthof r59;
if $i9 == 1 goto r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
$i8 = lengthof r60;
if $i8 == 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 30:
[preds: 27 28 ] [succs: 31 33 ]
r60 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z10 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z10 != 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r5 = newarray (java.lang.Class)[3];
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i8 = lengthof r60;
if $i8 == 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 32:
[preds: 31 ] [succs: ]
$r25 = new java.lang.AssertionError;
specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T) should have no generic exception types\");
throw $r25;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
$i8 = lengthof r60;
if $i8 == 0 goto r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 33:
[preds: 30 31 ] [succs: 34 36 ]
r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r5 = newarray (java.lang.Class)[3];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r5 = newarray (java.lang.Class)[3];
"->"Block 34:
[preds: 33 ] [succs: 35 36 ]
$i7 = lengthof r61;
if $i7 == 1 goto r5 = newarray (java.lang.Class)[3];
";
    "Block 33:
[preds: 30 31 ] [succs: 34 36 ]
r61 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z11 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z11 != 0 goto r5 = newarray (java.lang.Class)[3];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r5 = newarray (java.lang.Class)[3];
r5[0] = class \"Ljava/lang/Object;\";
r5[1] = class \"Ljava/lang/Object;\";
r5[2] = class \"Ljava/lang/Object;\";
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r62 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);
r63 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r64 = r63[0];
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$i7 = lengthof r61;
if $i7 == 1 goto r5 = newarray (java.lang.Class)[3];
"->"Block 35:
[preds: 34 ] [succs: ]
$r24 = new java.lang.AssertionError;
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T) should have one type parameter\");
throw $r24;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$i7 = lengthof r61;
if $i7 == 1 goto r5 = newarray (java.lang.Class)[3];
"->"Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r5 = newarray (java.lang.Class)[3];
r5[0] = class \"Ljava/lang/Object;\";
r5[1] = class \"Ljava/lang/Object;\";
r5[2] = class \"Ljava/lang/Object;\";
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r62 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);
r63 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r64 = r63[0];
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r5 = newarray (java.lang.Class)[3];
r5[0] = class \"Ljava/lang/Object;\";
r5[1] = class \"Ljava/lang/Object;\";
r5[2] = class \"Ljava/lang/Object;\";
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r62 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);
r63 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r64 = r63[0];
"->"Block 37:
[preds: 36 ] [succs: 38 39 ]
$i6 = lengthof r63;
if $i6 == 3 goto r64 = r63[0];
";
    "Block 36:
[preds: 33 34 ] [succs: 37 39 ]
r5 = newarray (java.lang.Class)[3];
r5[0] = class \"Ljava/lang/Object;\";
r5[1] = class \"Ljava/lang/Object;\";
r5[2] = class \"Ljava/lang/Object;\";
$r6 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r62 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);
r63 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z12 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z12 != 0 goto r64 = r63[0];
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r64 = r63[0];
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$i6 = lengthof r63;
if $i6 == 3 goto r64 = r63[0];
"->"Block 38:
[preds: 37 ] [succs: ]
$r23 = new java.lang.AssertionError;
specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have three generic parameter types\");
throw $r23;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$i6 = lengthof r63;
if $i6 == 3 goto r64 = r63[0];
"->"Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r64 = r63[0];
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r64 = r63[0];
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"->"Block 40:
[preds: 39 ] [succs: 41 42 ]
$z22 = r64 instanceof java.lang.reflect.TypeVariable;
if $z22 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 42 ]
r64 = r63[0];
$z13 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z13 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
r65 = (java.lang.reflect.TypeVariable) r64;
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$z22 = r64 instanceof java.lang.reflect.TypeVariable;
if $z22 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"->"Block 41:
[preds: 40 ] [succs: ]
$r22 = new java.lang.AssertionError;
specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The generic type of the first parameter of C2(T1,T2,T4) is a type variable\");
throw $r22;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$z22 = r64 instanceof java.lang.reflect.TypeVariable;
if $z22 != 0 goto r65 = (java.lang.reflect.TypeVariable) r64;
"->"Block 42:
[preds: 39 40 ] [succs: 43 45 ]
r65 = (java.lang.reflect.TypeVariable) r64;
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
r65 = (java.lang.reflect.TypeVariable) r64;
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 43:
[preds: 42 ] [succs: 44 45 ]
$r15 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z21 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z21 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
";
    "Block 42:
[preds: 39 40 ] [succs: 43 45 ]
r65 = (java.lang.reflect.TypeVariable) r64;
$z14 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z14 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r15 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z21 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z21 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 44:
[preds: 43 ] [succs: ]
$r16 = new java.lang.AssertionError;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The name of the type parameter of C2(T1,T2,T4) is T1, not \");
$r19 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);
throw $r16;
";
    "Block 43:
[preds: 42 ] [succs: 44 45 ]
$r15 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
$z21 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"T1\");
if $z21 != 0 goto r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
"->"Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 46:
[preds: 45 ] [succs: 47 48 ]
$i5 = lengthof r66;
if $i5 == 1 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 45:
[preds: 42 43 ] [succs: 46 48 ]
r66 = interfaceinvoke r65.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z15 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z15 != 0 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i5 = lengthof r66;
if $i5 == 1 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 47:
[preds: 46 ] [succs: ]
$r14 = new java.lang.AssertionError;
specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r14;
";
    "Block 46:
[preds: 45 ] [succs: 47 48 ]
$i5 = lengthof r66;
if $i5 == 1 goto r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 49:
[preds: 48 ] [succs: 50 51 ]
$i4 = lengthof r67;
if $i4 == 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 48:
[preds: 45 46 ] [succs: 49 51 ]
r67 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z16 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z16 != 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r7 = newarray (java.lang.Class)[0];
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$i4 = lengthof r67;
if $i4 == 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 50:
[preds: 49 ] [succs: ]
$r13 = new java.lang.AssertionError;
specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have no generic exception types\");
throw $r13;
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
$i4 = lengthof r67;
if $i4 == 0 goto r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r7 = newarray (java.lang.Class)[0];
";
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r7 = newarray (java.lang.Class)[0];
"->"Block 52:
[preds: 51 ] [succs: 53 54 ]
$i3 = lengthof r68;
if $i3 == 4 goto r7 = newarray (java.lang.Class)[0];
";
    "Block 51:
[preds: 48 49 ] [succs: 52 54 ]
r68 = virtualinvoke r62.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z17 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z17 != 0 goto r7 = newarray (java.lang.Class)[0];
"->"Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r7 = newarray (java.lang.Class)[0];
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r69 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r7);
r70 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$i3 = lengthof r68;
if $i3 == 4 goto r7 = newarray (java.lang.Class)[0];
"->"Block 53:
[preds: 52 ] [succs: ]
$r12 = new java.lang.AssertionError;
specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2(T1,T2,T4) should have four type parameters\");
throw $r12;
";
    "Block 52:
[preds: 51 ] [succs: 53 54 ]
$i3 = lengthof r68;
if $i3 == 4 goto r7 = newarray (java.lang.Class)[0];
"->"Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r7 = newarray (java.lang.Class)[0];
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r69 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r7);
r70 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r7 = newarray (java.lang.Class)[0];
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r69 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r7);
r70 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 55:
[preds: 54 ] [succs: 56 57 ]
$i2 = lengthof r70;
if $i2 == 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
";
    "Block 54:
[preds: 51 52 ] [succs: 55 57 ]
r7 = newarray (java.lang.Class)[0];
$r8 = <javaT.lang.reflect.Generics.TestC2: java.lang.Class 'cls'>;
r69 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r7);
r70 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();
$z18 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z18 != 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 57:
[preds: 54 55 ] [succs: 58 60 ]
r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i2 = lengthof r70;
if $i2 == 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 56:
[preds: 55 ] [succs: ]
$r11 = new java.lang.AssertionError;
specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have no generic parameter types\");
throw $r11;
";
    "Block 55:
[preds: 54 ] [succs: 56 57 ]
$i2 = lengthof r70;
if $i2 == 0 goto r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
"->"Block 57:
[preds: 54 55 ] [succs: 58 60 ]
r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 58:
[preds: 57 ] [succs: 59 60 ]
$i1 = lengthof r71;
if $i1 == 1 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
";
    "Block 57:
[preds: 54 55 ] [succs: 58 60 ]
r71 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>();
$z19 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z19 != 0 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto return;
";
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$i1 = lengthof r71;
if $i1 == 1 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 59:
[preds: 58 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have one generic exception type\");
throw $r10;
";
    "Block 58:
[preds: 57 ] [succs: 59 60 ]
$i1 = lengthof r71;
if $i1 == 1 goto r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
"->"Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto return;
";
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto return;
"->"Block 61:
[preds: 60 ] [succs: 62 63 ]
$i0 = lengthof r72;
if $i0 == 0 goto return;
";
    "Block 60:
[preds: 57 58 ] [succs: 61 63 ]
r72 = virtualinvoke r69.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z20 = <javaT.lang.reflect.Generics.TestC2: boolean $assertionsDisabled>;
if $z20 != 0 goto return;
"->"Block 63:
[preds: 60 61 ] [succs: ]
return;
";
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
$i0 = lengthof r72;
if $i0 == 0 goto return;
"->"Block 62:
[preds: 61 ] [succs: ]
$r9 = new java.lang.AssertionError;
specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Constructor C2() should have no type parameters\");
throw $r9;
";
    "Block 61:
[preds: 60 ] [succs: 62 63 ]
$i0 = lengthof r72;
if $i0 == 0 goto return;
"->"Block 63:
[preds: 60 61 ] [succs: ]
return;
";
}
