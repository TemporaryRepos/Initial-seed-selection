digraph "unitGraph" {
    "r38 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.util.List)[3]"
    "$r1 = new java.util.ArrayList"
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"
    "$r0[0] = $r1"
    "$r2 = new java.util.LinkedList"
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"
    "$r0[1] = $r2"
    "$r3 = new java.util.Vector"
    "specialinvoke $r3.<java.util.Vector: void <init>()>()"
    "$r0[2] = $r3"
    "r4 = $r0"
    "i2 = 0"
    "$i0 = lengthof r4"
    "if i2 >= $i0 goto return"
    "r5 = r4[i2]"
    "i3 = 1"
    "if i3 > 20 goto r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")"
    "$r37 = new java.lang.Integer"
    "$i1 = i3 % 3"
    "specialinvoke $r37.<java.lang.Integer: void <init>(int)>($i1)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r37)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")"
    "i4 = 0"
    "if i4 >= 3 goto $z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")"
    "$r11 = new java.util.ArrayList"
    "specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r5)"
    "r12 = $r11"
    "$r13 = new java.lang.Integer"
    "specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i4)"
    "$z1 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, $r13, \"*\")"
    "if $z1 != 0 goto $z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)"
    "$r30 = new java.lang.Exception"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"False return value: \")"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r36)"
    "throw $r30"
    "$z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)"
    "if $z2 == 0 goto $z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)"
    "$r21 = new java.lang.Exception"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unchanged: \")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", : \")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>($r29)"
    "throw $r21"
    "$z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)"
    "if i4 != 2 goto $z5 = 0"
    "$z5 = 1"
    "$z5 = 0"
    "if $z3 == $z5 goto i4 = i4 + 1"
    "$r14 = new java.lang.Exception"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong change:\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>($r20)"
    "throw $r14"
    "i4 = i4 + 1"
    "$z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")"
    "if $z0 == 0 goto i2 = i2 + 1"
    "$r6 = new java.lang.Exception"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"True return value: \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r10)"
    "throw $r6"
    "i2 = i2 + 1"
    "goto [?= $i0 = lengthof r4]"
    "return"
    "r38 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.util.List)[3]";
    "$r0 = newarray (java.util.List)[3]"->"$r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"specialinvoke $r1.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = new java.util.LinkedList";
    "$r2 = new java.util.LinkedList"->"specialinvoke $r2.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = new java.util.Vector";
    "$r3 = new java.util.Vector"->"specialinvoke $r3.<java.util.Vector: void <init>()>()";
    "specialinvoke $r3.<java.util.Vector: void <init>()>()"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"r4 = $r0";
    "r4 = $r0"->"i2 = 0";
    "i2 = 0"->"$i0 = lengthof r4";
    "$i0 = lengthof r4"->"if i2 >= $i0 goto return";
    "if i2 >= $i0 goto return"->"r5 = r4[i2]";
    "if i2 >= $i0 goto return"->"return";
    "r5 = r4[i2]"->"i3 = 1";
    "i3 = 1"->"if i3 > 20 goto r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")";
    "if i3 > 20 goto r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")"->"$r37 = new java.lang.Integer";
    "if i3 > 20 goto r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")"->"r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")";
    "$r37 = new java.lang.Integer"->"$i1 = i3 % 3";
    "$i1 = i3 % 3"->"specialinvoke $r37.<java.lang.Integer: void <init>(int)>($i1)";
    "specialinvoke $r37.<java.lang.Integer: void <init>(int)>($i1)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r37)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r37)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 > 20 goto r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")";
    "r39 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(20, \"*\")"->"i4 = 0";
    "i4 = 0"->"if i4 >= 3 goto $z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")";
    "if i4 >= 3 goto $z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")"->"$r11 = new java.util.ArrayList";
    "if i4 >= 3 goto $z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")"->"$z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")";
    "$r11 = new java.util.ArrayList"->"specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r5)";
    "specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r5)"->"r12 = $r11";
    "r12 = $r11"->"$r13 = new java.lang.Integer";
    "$r13 = new java.lang.Integer"->"specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i4)";
    "specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i4)"->"$z1 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, $r13, \"*\")";
    "$z1 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, $r13, \"*\")"->"if $z1 != 0 goto $z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)";
    "if $z1 != 0 goto $z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)"->"$r30 = new java.lang.Exception";
    "if $z1 != 0 goto $z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)"->"$z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)";
    "$r30 = new java.lang.Exception"->"$r31 = new java.lang.StringBuilder";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"False return value: \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"False return value: \")"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r36)";
    "specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r36)"->"throw $r30";
    "$z2 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r12)"->"if $z2 == 0 goto $z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)";
    "if $z2 == 0 goto $z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)"->"$r21 = new java.lang.Exception";
    "if $z2 == 0 goto $z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)"->"$z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)";
    "$r21 = new java.lang.Exception"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unchanged: \")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unchanged: \")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", : \")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", : \")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>($r29)";
    "specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>($r29)"->"throw $r21";
    "$z3 = interfaceinvoke r5.<java.util.List: boolean equals(java.lang.Object)>(r39)"->"if i4 != 2 goto $z5 = 0";
    "if i4 != 2 goto $z5 = 0"->"$z5 = 1";
    "if i4 != 2 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if $z3 == $z5 goto i4 = i4 + 1";
    "$z5 = 0"->"if $z3 == $z5 goto i4 = i4 + 1";
    "if $z3 == $z5 goto i4 = i4 + 1"->"$r14 = new java.lang.Exception";
    "if $z3 == $z5 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r14 = new java.lang.Exception"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong change:\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong change:\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.String)>($r20)"->"throw $r14";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= 3 goto $z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")";
    "$z0 = staticinvoke <java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>(r5, \"love\", \"hate\")"->"if $z0 == 0 goto i2 = i2 + 1";
    "if $z0 == 0 goto i2 = i2 + 1"->"$r6 = new java.lang.Exception";
    "if $z0 == 0 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r6 = new java.lang.Exception"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"True return value: \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"True return value: \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r10)";
    "specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r10)"->"throw $r6";
    "i2 = i2 + 1"->"goto [?= $i0 = lengthof r4]";
    "goto [?= $i0 = lengthof r4]"->"$i0 = lengthof r4";
}
