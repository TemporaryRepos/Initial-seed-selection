digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: javaT.text.Collator.IteratorTest;
$r2 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r1 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r1);
specialinvoke r0.<javaT.text.Collator.IteratorTest: int[] getOrders(java.text.CollationElementIterator)>(r3);
i0 = virtualinvoke r3.<java.text.CollationElementIterator: int getOffset()>();
$r5 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i1 = virtualinvoke $r5.<java.lang.String: int length()>();
if i0 == $i1 goto virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"offset at end != length: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" vs \");
$r14 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i2 = virtualinvoke $r14.<java.lang.String: int length()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
$r7 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r6 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$r8 = virtualinvoke $r7.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r6);
virtualinvoke r0.<javaT.text.Collator.IteratorTest: void assertEqual(java.text.CollationElementIterator,java.text.CollationElementIterator)>(r3, $r8);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: javaT.text.Collator.IteratorTest;
$r2 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r1 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r1);
specialinvoke r0.<javaT.text.Collator.IteratorTest: int[] getOrders(java.text.CollationElementIterator)>(r3);
i0 = virtualinvoke r3.<java.text.CollationElementIterator: int getOffset()>();
$r5 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i1 = virtualinvoke $r5.<java.lang.String: int length()>();
if i0 == $i1 goto virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"offset at end != length: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" vs \");
$r14 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i2 = virtualinvoke $r14.<java.lang.String: int length()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: javaT.text.Collator.IteratorTest;
$r2 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r1 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
r3 = virtualinvoke $r2.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r1);
specialinvoke r0.<javaT.text.Collator.IteratorTest: int[] getOrders(java.text.CollationElementIterator)>(r3);
i0 = virtualinvoke r3.<java.text.CollationElementIterator: int getOffset()>();
$r5 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i1 = virtualinvoke $r5.<java.lang.String: int length()>();
if i0 == $i1 goto virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
"->"Block 2:
[preds: 0 1 ] [succs: ]
virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
$r7 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r6 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$r8 = virtualinvoke $r7.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r6);
virtualinvoke r0.<javaT.text.Collator.IteratorTest: void assertEqual(java.text.CollationElementIterator,java.text.CollationElementIterator)>(r3, $r8);
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"offset at end != length: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" vs \");
$r14 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$i2 = virtualinvoke $r14.<java.lang.String: int length()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);
"->"Block 2:
[preds: 0 1 ] [succs: ]
virtualinvoke r3.<java.text.CollationElementIterator: void setOffset(int)>(0);
$r7 = r0.<javaT.text.Collator.IteratorTest: java.text.RuleBasedCollator en_us>;
$r6 = r0.<javaT.text.Collator.IteratorTest: java.lang.String test1>;
$r8 = virtualinvoke $r7.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>($r6);
virtualinvoke r0.<javaT.text.Collator.IteratorTest: void assertEqual(java.text.CollationElementIterator,java.text.CollationElementIterator)>(r3, $r8);
return;
";
}
