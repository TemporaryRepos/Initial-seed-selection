digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.String)[3]"
    "$r0[0] = \"I\""
    "$r0[1] = \"Love\""
    "$r0[2] = \"You\""
    "r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"
    "i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, \"You\", null)"
    "if i0 == 2 goto return"
    "$r2 = new java.lang.Exception"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result: \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r6)"
    "throw $r2"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.String)[3]";
    "$r0 = newarray (java.lang.String)[3]"->"$r0[0] = \"I\"";
    "$r0[0] = \"I\""->"$r0[1] = \"Love\"";
    "$r0[1] = \"Love\""->"$r0[2] = \"You\"";
    "$r0[2] = \"You\""->"r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)";
    "r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"->"i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, \"You\", null)";
    "i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, \"You\", null)"->"if i0 == 2 goto return";
    "if i0 == 2 goto return"->"$r2 = new java.lang.Exception";
    "if i0 == 2 goto return"->"return";
    "$r2 = new java.lang.Exception"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result: \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result: \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r6)"->"throw $r2";
}
