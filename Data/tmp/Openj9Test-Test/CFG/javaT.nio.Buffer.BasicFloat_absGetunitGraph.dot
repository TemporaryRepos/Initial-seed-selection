digraph "unitGraph" {
    "r0 := @parameter0: java.nio.FloatBuffer"
    "i0 = virtualinvoke r0.<java.nio.FloatBuffer: int capacity()>()"
    "i4 = 0"
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()"
    "$f0 = virtualinvoke r0.<java.nio.FloatBuffer: float get()>()"
    "$l1 = (long) $f0"
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i4)"
    "$f1 = (float) $l2"
    "$l3 = (long) $f1"
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()"
    "return"
    "r0 := @parameter0: java.nio.FloatBuffer"->"i0 = virtualinvoke r0.<java.nio.FloatBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.FloatBuffer: int capacity()>()"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()";
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()"->"$f0 = virtualinvoke r0.<java.nio.FloatBuffer: float get()>()";
    "if i4 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()"->"virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()";
    "$f0 = virtualinvoke r0.<java.nio.FloatBuffer: float get()>()"->"$l1 = (long) $f0";
    "$l1 = (long) $f0"->"$l2 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i4)";
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicFloat: long ic(int)>(i4)"->"$f1 = (float) $l2";
    "$f1 = (float) $l2"->"$l3 = (long) $f1";
    "$l3 = (long) $f1"->"staticinvoke <javaT.nio.Buffer.BasicFloat: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3)";
    "staticinvoke <javaT.nio.Buffer.BasicFloat: void ck(java.nio.Buffer,long,long)>(r0, $l1, $l3)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()";
    "virtualinvoke r0.<java.nio.FloatBuffer: java.nio.Buffer rewind()>()"->"return";
}
