digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(\"javax.naming.ldap.LdapName\")"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"LDAP is present, test skipped\")"
    "return"
    "$r4 := @caughtexception"
    "r9 = $r4"
    "$r5 = new java.security.cert.LDAPCertStoreParameters"
    "specialinvoke $r5.<java.security.cert.LDAPCertStoreParameters: void <init>()>()"
    "staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>(\"LDAP\", $r5)"
    "$r7 = new java.lang.RuntimeException"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"NoSuchAlgorithmException expected\")"
    "throw $r7"
    "$r2 := @caughtexception"
    "r10 = $r2"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"NoSuchAlgorithmException thrown as expected\")"
    "r8 := @parameter0: java.lang.String[]"->"staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(\"javax.naming.ldap.LdapName\")";
    "r8 := @parameter0: java.lang.String[]"->"$r4 := @caughtexception";
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(\"javax.naming.ldap.LdapName\")"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(\"javax.naming.ldap.LdapName\")"->"$r4 := @caughtexception";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"LDAP is present, test skipped\")";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r4 := @caughtexception";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"LDAP is present, test skipped\")"->"return";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"LDAP is present, test skipped\")"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"r9 = $r4";
    "r9 = $r4"->"$r5 = new java.security.cert.LDAPCertStoreParameters";
    "r9 = $r4"->"$r2 := @caughtexception";
    "$r5 = new java.security.cert.LDAPCertStoreParameters"->"specialinvoke $r5.<java.security.cert.LDAPCertStoreParameters: void <init>()>()";
    "$r5 = new java.security.cert.LDAPCertStoreParameters"->"$r2 := @caughtexception";
    "specialinvoke $r5.<java.security.cert.LDAPCertStoreParameters: void <init>()>()"->"staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>(\"LDAP\", $r5)";
    "specialinvoke $r5.<java.security.cert.LDAPCertStoreParameters: void <init>()>()"->"$r2 := @caughtexception";
    "staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>(\"LDAP\", $r5)"->"$r7 = new java.lang.RuntimeException";
    "staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>(\"LDAP\", $r5)"->"$r2 := @caughtexception";
    "$r7 = new java.lang.RuntimeException"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"NoSuchAlgorithmException expected\")";
    "$r7 = new java.lang.RuntimeException"->"$r2 := @caughtexception";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"NoSuchAlgorithmException expected\")"->"throw $r7";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"NoSuchAlgorithmException expected\")"->"$r2 := @caughtexception";
    "throw $r7"->"$r2 := @caughtexception";
    "$r2 := @caughtexception"->"r10 = $r2";
    "r10 = $r2"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"NoSuchAlgorithmException thrown as expected\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"NoSuchAlgorithmException thrown as expected\")"->"return";
}
