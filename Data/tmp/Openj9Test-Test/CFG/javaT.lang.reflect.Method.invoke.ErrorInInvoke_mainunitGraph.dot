digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "$r1 = class \"LjavaT/lang/reflect/Method/invoke/ErrorInInvoke;\""
    "$r0 = newarray (java.lang.Class)[0]"
    "r12 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"run\", $r0)"
    "goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]"
    "$r9 := @caughtexception"
    "$r10 = new java.lang.RuntimeException"
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (getMethod() failed\")"
    "throw $r10"
    "virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "$r8 = new java.lang.RuntimeException"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (AbstractMethodError passed through)\")"
    "throw $r8"
    "$r4 := @caughtexception"
    "r13 = $r4"
    "r5 = virtualinvoke r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()"
    "$z0 = r5 instanceof java.lang.AbstractMethodError"
    "if $z0 != 0 goto (branch)"
    "$r6 = new java.lang.RuntimeException"
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (InvocationTargetException didn\'t wrap AbstractMethodError)\")"
    "throw $r6"
    "$r2 := @caughtexception"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (Unexpected exception)\")"
    "throw $r3"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"$r1 = class \"LjavaT/lang/reflect/Method/invoke/ErrorInInvoke;\"";
    "r11 := @parameter0: java.lang.String[]"->"$r9 := @caughtexception";
    "$r1 = class \"LjavaT/lang/reflect/Method/invoke/ErrorInInvoke;\""->"$r0 = newarray (java.lang.Class)[0]";
    "$r1 = class \"LjavaT/lang/reflect/Method/invoke/ErrorInInvoke;\""->"$r9 := @caughtexception";
    "$r0 = newarray (java.lang.Class)[0]"->"r12 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"run\", $r0)";
    "$r0 = newarray (java.lang.Class)[0]"->"$r9 := @caughtexception";
    "r12 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"run\", $r0)"->"goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]";
    "r12 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(\"run\", $r0)"->"$r9 := @caughtexception";
    "goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]"->"$r7 := @caughtexception";
    "goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]"->"$r4 := @caughtexception";
    "goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]"->"$r2 := @caughtexception";
    "goto [?= virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)]"->"virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)";
    "$r9 := @caughtexception"->"$r10 = new java.lang.RuntimeException";
    "$r10 = new java.lang.RuntimeException"->"specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (getMethod() failed\")";
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (getMethod() failed\")"->"throw $r10";
    "virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)"->"$r7 := @caughtexception";
    "virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)"->"$r4 := @caughtexception";
    "virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)"->"$r2 := @caughtexception";
    "virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"$r8 = new java.lang.RuntimeException";
    "$r8 = new java.lang.RuntimeException"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (AbstractMethodError passed through)\")";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (AbstractMethodError passed through)\")"->"throw $r8";
    "$r4 := @caughtexception"->"r13 = $r4";
    "r13 = $r4"->"r5 = virtualinvoke r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()";
    "r5 = virtualinvoke r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()"->"$z0 = r5 instanceof java.lang.AbstractMethodError";
    "$z0 = r5 instanceof java.lang.AbstractMethodError"->"if $z0 != 0 goto (branch)";
    "if $z0 != 0 goto (branch)"->"$r6 = new java.lang.RuntimeException";
    "if $z0 != 0 goto (branch)"->"goto [?= return]";
    "$r6 = new java.lang.RuntimeException"->"specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (InvocationTargetException didn\'t wrap AbstractMethodError)\")";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (InvocationTargetException didn\'t wrap AbstractMethodError)\")"->"throw $r6";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"$r3 = new java.lang.RuntimeException";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (Unexpected exception)\")";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed (Unexpected exception)\")"->"throw $r3";
}
