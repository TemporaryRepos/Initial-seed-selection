digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
r3 := @parameter3: java.lang.Class;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.lang.String: int offsetByCodePoints(int,int)>(i0, i1);
"
    "Block 2:
[preds: 1 ] [succs: 6 ]
goto [?= $r1 = new java.lang.StringBuilder];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r7 := @caughtexception;
r9 = $r7;
$z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r9);
if $z0 == 0 goto $r8 = new java.lang.RuntimeException;
"
    "Block 4:
[preds: 3 ] [succs: ]
return;
"
    "Block 5:
[preds: 3 ] [succs: ]
$r8 = new java.lang.RuntimeException;
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r9);
throw $r8;
"
    "Block 6:
[preds: 2 ] [succs: ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"offsetByCodePoints() didn\'t throw \");
$r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>(1, $r6);
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
r3 := @parameter3: java.lang.Class;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.lang.String: int offsetByCodePoints(int,int)>(i0, i1);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
r3 := @parameter3: java.lang.Class;
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r7 := @caughtexception;
r9 = $r7;
$z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r9);
if $z0 == 0 goto $r8 = new java.lang.RuntimeException;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.lang.String: int offsetByCodePoints(int,int)>(i0, i1);
"->"Block 2:
[preds: 1 ] [succs: 6 ]
goto [?= $r1 = new java.lang.StringBuilder];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r0.<java.lang.String: int offsetByCodePoints(int,int)>(i0, i1);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r7 := @caughtexception;
r9 = $r7;
$z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r9);
if $z0 == 0 goto $r8 = new java.lang.RuntimeException;
";
    "Block 2:
[preds: 1 ] [succs: 6 ]
goto [?= $r1 = new java.lang.StringBuilder];
"->"Block 6:
[preds: 2 ] [succs: ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"offsetByCodePoints() didn\'t throw \");
$r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.String.Supplementary: void check(boolean,java.lang.String)>(1, $r6);
return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r7 := @caughtexception;
r9 = $r7;
$z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r9);
if $z0 == 0 goto $r8 = new java.lang.RuntimeException;
"->"Block 4:
[preds: 3 ] [succs: ]
return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r7 := @caughtexception;
r9 = $r7;
$z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r9);
if $z0 == 0 goto $r8 = new java.lang.RuntimeException;
"->"Block 5:
[preds: 3 ] [succs: ]
$r8 = new java.lang.RuntimeException;
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Error: Unexpected exception\", r9);
throw $r8;
";
}
