digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);
r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
$r3 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(\"US-ASCII\");
if $z0 == 0 goto staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 120, 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 182, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"x\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\u00b6\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xyzzy\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xy\u00b6\", 0);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55297, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57342, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57343, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud800\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud801\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udffe\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udfff\", 0);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);
r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
$r3 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(\"US-ASCII\");
if $z0 == 0 goto staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 120, 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 182, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"x\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\u00b6\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xyzzy\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xy\u00b6\", 0);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);
r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
$r3 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(\"US-ASCII\");
if $z0 == 0 goto staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
"->"Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55297, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57342, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57343, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud800\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud801\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udffe\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udfff\", 0);
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 120, 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 182, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"x\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\u00b6\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xyzzy\", 1);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"xy\u00b6\", 0);
"->"Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55296, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 55297, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57342, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,char,boolean)>(r2, 57343, 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud800\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\ud801\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udffe\", 0);
staticinvoke <javaT.nio.charset.CharsetEncoder.CanEncode: void ck(java.nio.charset.CharsetEncoder,java.lang.String,boolean)>(r2, \"\udfff\", 0);
return;
";
}
