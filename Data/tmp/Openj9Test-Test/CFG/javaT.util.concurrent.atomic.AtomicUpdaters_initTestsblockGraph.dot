digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
z0 := @parameter0: boolean;
$r0 = newarray (javaT.util.concurrent.atomic.AtomicUpdaters$Config)[9];
$r1 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r2 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r1.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_int\", \"public\", 1, 1, \"public int field of current class\", $r2);
$r0[0] = $r1;
$r3 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r4 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r3.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_int\", \"private\", 1, 1, \"private int field of current class\", $r4);
$r0[1] = $r3;
$r5 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r6 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r5.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_long\", \"public\", 1, 1, \"public long field of current class\", $r6);
$r0[2] = $r5;
$r7 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r8 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r7.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_long\", \"private\", 1, 1, \"private long field of current class\", $r8);
$r0[3] = $r7;
$r9 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r10 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r9.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_ref\", \"public\", 1, 1, \"public ref field of current class\", $r10);
$r0[4] = $r9;
$r11 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r12 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r11.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_ref\", \"private\", 1, 1, \"private ref field of current class\", $r12);
$r0[5] = $r11;
$r13 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z1 = 1;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
goto [?= $r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r13.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicInteger;\", \"value\", \"private\", $z1, 0, \"private int field of class in different package\", $r14);
$r0[6] = $r13;
$r15 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z2 = 1;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
goto [?= $r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r15.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicLong;\", \"value\", \"private\", $z2, 0, \"private long field of class in different package\", $r16);
$r0[7] = $r15;
$r17 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z3 = 1;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
goto [?= $r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
"
    "Block 9:
[preds: 7 8 ] [succs: ]
$r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r17.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicReference;\", \"value\", \"private\", $z3, 0, \"private reference field of class in different package\", $r18);
$r0[8] = $r17;
<javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests> = $r0;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
z0 := @parameter0: boolean;
$r0 = newarray (javaT.util.concurrent.atomic.AtomicUpdaters$Config)[9];
$r1 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r2 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r1.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_int\", \"public\", 1, 1, \"public int field of current class\", $r2);
$r0[0] = $r1;
$r3 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r4 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r3.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_int\", \"private\", 1, 1, \"private int field of current class\", $r4);
$r0[1] = $r3;
$r5 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r6 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r5.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_long\", \"public\", 1, 1, \"public long field of current class\", $r6);
$r0[2] = $r5;
$r7 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r8 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r7.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_long\", \"private\", 1, 1, \"private long field of current class\", $r8);
$r0[3] = $r7;
$r9 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r10 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r9.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_ref\", \"public\", 1, 1, \"public ref field of current class\", $r10);
$r0[4] = $r9;
$r11 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r12 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r11.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_ref\", \"private\", 1, 1, \"private ref field of current class\", $r12);
$r0[5] = $r11;
$r13 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z1 = 1;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
goto [?= $r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
z0 := @parameter0: boolean;
$r0 = newarray (javaT.util.concurrent.atomic.AtomicUpdaters$Config)[9];
$r1 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r2 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r1.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_int\", \"public\", 1, 1, \"public int field of current class\", $r2);
$r0[0] = $r1;
$r3 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r4 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r3.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_int\", \"private\", 1, 1, \"private int field of current class\", $r4);
$r0[1] = $r3;
$r5 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r6 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r5.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_long\", \"public\", 1, 1, \"public long field of current class\", $r6);
$r0[2] = $r5;
$r7 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r8 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r7.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_long\", \"private\", 1, 1, \"private long field of current class\", $r8);
$r0[3] = $r7;
$r9 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r10 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r9.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"pub_ref\", \"public\", 1, 1, \"public ref field of current class\", $r10);
$r0[4] = $r9;
$r11 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
$r12 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r11.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"LjavaT/util/concurrent/atomic/AtomicUpdaters;\", \"priv_ref\", \"private\", 1, 1, \"private ref field of current class\", $r12);
$r0[5] = $r11;
$r13 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z1 = 1;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
goto [?= $r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r13.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicInteger;\", \"value\", \"private\", $z1, 0, \"private int field of class in different package\", $r14);
$r0[6] = $r13;
$r15 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z2 = 1;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r13.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicInteger;\", \"value\", \"private\", $z1, 0, \"private int field of class in different package\", $r14);
$r0[6] = $r13;
$r15 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z2 = 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r13.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicInteger;\", \"value\", \"private\", $z1, 0, \"private int field of class in different package\", $r14);
$r0[6] = $r13;
$r15 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z2 = 1;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
goto [?= $r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r14 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE INT>;
specialinvoke $r13.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicInteger;\", \"value\", \"private\", $z1, 0, \"private int field of class in different package\", $r14);
$r0[6] = $r13;
$r15 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z2 = 1;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
goto [?= $r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r15.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicLong;\", \"value\", \"private\", $z2, 0, \"private long field of class in different package\", $r16);
$r0[7] = $r15;
$r17 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z3 = 1;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r15.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicLong;\", \"value\", \"private\", $z2, 0, \"private long field of class in different package\", $r16);
$r0[7] = $r15;
$r17 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z3 = 1;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r15.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicLong;\", \"value\", \"private\", $z2, 0, \"private long field of class in different package\", $r16);
$r0[7] = $r15;
$r17 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z3 = 1;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
goto [?= $r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r16 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE LONG>;
specialinvoke $r15.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicLong;\", \"value\", \"private\", $z2, 0, \"private long field of class in different package\", $r16);
$r0[7] = $r15;
$r17 = new javaT.util.concurrent.atomic.AtomicUpdaters$Config;
if z0 == 0 goto $z3 = 1;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
goto [?= $r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>];
"->"Block 9:
[preds: 7 8 ] [succs: ]
$r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r17.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicReference;\", \"value\", \"private\", $z3, 0, \"private reference field of class in different package\", $r18);
$r0[8] = $r17;
<javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests> = $r0;
return;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
"->"Block 9:
[preds: 7 8 ] [succs: ]
$r18 = <javaT.util.concurrent.atomic.AtomicUpdaters$TYPE: javaT.util.concurrent.atomic.AtomicUpdaters$TYPE REF>;
specialinvoke $r17.<javaT.util.concurrent.atomic.AtomicUpdaters$Config: void <init>(java.lang.Class,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,javaT.util.concurrent.atomic.AtomicUpdaters$TYPE)>(class \"Ljava/util/concurrent/atomic/AtomicReference;\", \"value\", \"private\", $z3, 0, \"private reference field of class in different package\", $r18);
$r0[8] = $r17;
<javaT.util.concurrent.atomic.AtomicUpdaters: javaT.util.concurrent.atomic.AtomicUpdaters$Config[] tests> = $r0;
return;
";
}
