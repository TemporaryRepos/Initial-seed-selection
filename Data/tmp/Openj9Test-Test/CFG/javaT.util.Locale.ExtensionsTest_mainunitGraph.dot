digraph "unitGraph" {
    "r20 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.Locale"
    "specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\")"
    "r1 = $r0"
    "$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>()"
    "if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19)"
    "r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()"
    "$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>()"
    "if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15)"
    "$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)"
    "if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\""
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"jaJPJP equals stripped\")"
    "throw $r11"
    "$r3 = \"ja-JP-x-lvariant-JP\""
    "$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>()"
    "$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)"
    "if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")"
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\")"
    "r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")"
    "$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>()"
    "$r7 = <java.util.Locale: java.util.Locale US>"
    "$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7)"
    "if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>"
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\")"
    "$r8 = <java.util.Locale: java.util.Locale US>"
    "r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>()"
    "$r10 = <java.util.Locale: java.util.Locale US>"
    "if r9 == $r10 goto return"
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\")"
    "return"
    "r20 := @parameter0: java.lang.String[]"->"$r0 = new java.util.Locale";
    "$r0 = new java.util.Locale"->"specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\")";
    "specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\"ja\", \"JP\", \"JP\")"->"r1 = $r0";
    "r1 = $r0"->"$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>()";
    "$z0 = virtualinvoke r1.<java.util.Locale: boolean hasExtensions()>()"->"if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()";
    "if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()"->"$r16 = new java.lang.StringBuilder";
    "if $z0 != 0 goto r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()"->"r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should have an extension.\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19)";
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r19)"->"r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()";
    "r2 = virtualinvoke r1.<java.util.Locale: java.util.Locale stripExtensions()>()"->"$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>()";
    "$z1 = virtualinvoke r2.<java.util.Locale: boolean hasExtensions()>()"->"if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)";
    "if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)"->"$r12 = new java.lang.StringBuilder";
    "if $z1 == 0 goto $z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)"->"$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should NOT have an extension.\")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15)";
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>($r15)"->"$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)";
    "$z2 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r2)"->"if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\"";
    "if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\""->"$r11 = new java.lang.RuntimeException";
    "if $z2 == 0 goto $r3 = \"ja-JP-x-lvariant-JP\""->"$r3 = \"ja-JP-x-lvariant-JP\"";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"jaJPJP equals stripped\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"jaJPJP equals stripped\")"->"throw $r11";
    "$r3 = \"ja-JP-x-lvariant-JP\""->"$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>()";
    "$r4 = virtualinvoke r2.<java.util.Locale: java.lang.String toLanguageTag()>()"->"$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)";
    "$z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)"->"if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")";
    "if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")"->"staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\")";
    "if $z3 != 0 goto r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")"->"r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")";
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped.toLanguageTag() isn\'t ja-JP-x-lvariant-JP\")"->"r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")";
    "r5 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>(\"en-US-u-ca-japanese\")"->"$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>()";
    "$r6 = virtualinvoke r5.<java.util.Locale: java.util.Locale stripExtensions()>()"->"$r7 = <java.util.Locale: java.util.Locale US>";
    "$r7 = <java.util.Locale: java.util.Locale US>"->"$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7)";
    "$z4 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7)"->"if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>";
    "if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>"->"staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\")";
    "if $z4 != 0 goto $r8 = <java.util.Locale: java.util.Locale US>"->"$r8 = <java.util.Locale: java.util.Locale US>";
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped enUSja not equals Locale.US\")"->"$r8 = <java.util.Locale: java.util.Locale US>";
    "$r8 = <java.util.Locale: java.util.Locale US>"->"r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>()";
    "r9 = virtualinvoke $r8.<java.util.Locale: java.util.Locale stripExtensions()>()"->"$r10 = <java.util.Locale: java.util.Locale US>";
    "$r10 = <java.util.Locale: java.util.Locale US>"->"if r9 == $r10 goto return";
    "if r9 == $r10 goto return"->"staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\")";
    "if r9 == $r10 goto return"->"return";
    "staticinvoke <javaT.util.Locale.ExtensionsTest: void error(java.lang.String)>(\"stripped Locale.US != Locale.US\")"->"return";
}
