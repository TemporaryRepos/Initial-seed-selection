digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
$r0 = newarray (double[])[1];
$r1 = newarray (double)[3];
$r1[0] = -3.0;
$r1[1] = #Infinity;
$r1[2] = -0.0;
$r0[0] = $r1;
r2 = $r0;
r3 = r2;
i0 = lengthof r3;
i3 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto return i2;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r4 = r3[i3];
$d2 = r4[0];
$d1 = r4[1];
$d0 = r4[2];
$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0);
i2 = i2 + $i1;
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return i2;
"
    "Block 0:
[preds: ] [succs: 1 ]
i2 = 0;
$r0 = newarray (double[])[1];
$r1 = newarray (double)[3];
$r1[0] = -3.0;
$r1[1] = #Infinity;
$r1[2] = -0.0;
$r0[0] = $r1;
r2 = $r0;
r3 = r2;
i0 = lengthof r3;
i3 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto return i2;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto return i2;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r4 = r3[i3];
$d2 = r4[0];
$d1 = r4[1];
$d0 = r4[2];
$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0);
i2 = i2 + $i1;
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto return i2;
"->"Block 3:
[preds: 1 ] [succs: ]
return i2;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r4 = r3[i3];
$d2 = r4[0];
$d1 = r4[1];
$d0 = r4[2];
$i1 = staticinvoke <javaT.lang.Math.Atan2Tests: int testAtan2Case(double,double,double)>($d2, $d1, $d0);
i2 = i2 + $i1;
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i0 goto return i2;
";
}
