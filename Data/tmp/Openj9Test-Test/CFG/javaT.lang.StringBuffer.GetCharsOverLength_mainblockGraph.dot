digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r17 := @parameter0: java.lang.String[];
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"sample string buffer\");
r1 = $r0;
r2 = newarray (char)[30];
z0 = 0;
$r3 = newarray (int[])[6];
$r4 = newarray (int)[3];
$r4[0] = 0;
$r4[1] = 0;
$i0 = lengthof r2;
$i1 = $i0 + 1;
$r4[2] = $i1;
$r3[0] = $r4;
$r5 = newarray (int)[3];
$r5[0] = 0;
$r5[1] = 0;
$i2 = lengthof r2;
$i3 = $i2 + 2;
$r5[2] = $i3;
$r3[1] = $r5;
$r6 = newarray (int)[3];
$r6[0] = 0;
$r6[1] = 0;
$i4 = lengthof r2;
$i5 = $i4 + 20;
$r6[2] = $i5;
$r3[2] = $r6;
$r7 = newarray (int)[3];
$r7[0] = 5;
$r7[1] = 5;
$i6 = lengthof r2;
$i7 = $i6 + 1;
$r7[2] = $i7;
$r3[3] = $r7;
$r8 = newarray (int)[3];
$r8[0] = 5;
$r8[1] = 5;
$i8 = lengthof r2;
$i9 = $i8 + 2;
$r8[2] = $i9;
$r3[4] = $r8;
$r9 = newarray (int)[3];
$r9[0] = 5;
$r9[1] = 5;
$i10 = lengthof r2;
$i11 = $i10 + 20;
$r9[2] = $i11;
$r3[5] = $r9;
r10 = $r3;
i16 = 0;
"
    "Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
$r11 = r10[i16];
"
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i15 = $r11[0];
"
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r12 = r10[i16];
"
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i14 = $r12[1];
"
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$r13 = r10[i16];
"
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$i13 = $r13[2];
"
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r1.<java.lang.StringBuffer: void getChars(int,int,char[],int)>($i15, $i14, r2, $i13);
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r14 = new java.lang.RuntimeException;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bounds test failed\");
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r14;
"
    "Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
"
    "Block 13:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r17 := @parameter0: java.lang.String[];
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"sample string buffer\");
r1 = $r0;
r2 = newarray (char)[30];
z0 = 0;
$r3 = newarray (int[])[6];
$r4 = newarray (int)[3];
$r4[0] = 0;
$r4[1] = 0;
$i0 = lengthof r2;
$i1 = $i0 + 1;
$r4[2] = $i1;
$r3[0] = $r4;
$r5 = newarray (int)[3];
$r5[0] = 0;
$r5[1] = 0;
$i2 = lengthof r2;
$i3 = $i2 + 2;
$r5[2] = $i3;
$r3[1] = $r5;
$r6 = newarray (int)[3];
$r6[0] = 0;
$r6[1] = 0;
$i4 = lengthof r2;
$i5 = $i4 + 20;
$r6[2] = $i5;
$r3[2] = $r6;
$r7 = newarray (int)[3];
$r7[0] = 5;
$r7[1] = 5;
$i6 = lengthof r2;
$i7 = $i6 + 1;
$r7[2] = $i7;
$r3[3] = $r7;
$r8 = newarray (int)[3];
$r8[0] = 5;
$r8[1] = 5;
$i8 = lengthof r2;
$i9 = $i8 + 2;
$r8[2] = $i9;
$r3[4] = $r8;
$r9 = newarray (int)[3];
$r9[0] = 5;
$r9[1] = 5;
$i10 = lengthof r2;
$i11 = $i10 + 20;
$r9[2] = $i11;
$r3[5] = $r9;
r10 = $r3;
i16 = 0;
"->"Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
";
    "Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 12 ]
$r11 = r10[i16];
";
    "Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
"->"Block 13:
[preds: 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
$r11 = r10[i16];
"->"Block 3:
[preds: 2 ] [succs: 4 12 ]
$i15 = $r11[0];
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
$r11 = r10[i16];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i15 = $r11[0];
"->"Block 4:
[preds: 3 ] [succs: 5 12 ]
$r12 = r10[i16];
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i15 = $r11[0];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r12 = r10[i16];
"->"Block 5:
[preds: 4 ] [succs: 6 12 ]
$i14 = $r12[1];
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$r12 = r10[i16];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i14 = $r12[1];
"->"Block 6:
[preds: 5 ] [succs: 7 12 ]
$r13 = r10[i16];
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$i14 = $r12[1];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$r13 = r10[i16];
"->"Block 7:
[preds: 6 ] [succs: 8 12 ]
$i13 = $r13[2];
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
$r13 = r10[i16];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$i13 = $r13[2];
"->"Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r1.<java.lang.StringBuffer: void getChars(int,int,char[],int)>($i15, $i14, r2, $i13);
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$i13 = $r13[2];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r1.<java.lang.StringBuffer: void getChars(int,int,char[],int)>($i15, $i14, r2, $i13);
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r14 = new java.lang.RuntimeException;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r1.<java.lang.StringBuffer: void getChars(int,int,char[],int)>($i15, $i14, r2, $i13);
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r14 = new java.lang.RuntimeException;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bounds test failed\");
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r14 = new java.lang.RuntimeException;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bounds test failed\");
"->"Block 11:
[preds: 10 ] [succs: 12 ]
throw $r14;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Bounds test failed\");
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r14;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
";
    "Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 11 ] [succs: 1 ]
$r15 := @caughtexception;
r16 = $r15;
i16 = i16 + 1;
goto [?= $i12 = lengthof r10];
"->"Block 1:
[preds: 0 12 ] [succs: 2 13 12 ]
$i12 = lengthof r10;
if i16 >= $i12 goto return;
";
}
