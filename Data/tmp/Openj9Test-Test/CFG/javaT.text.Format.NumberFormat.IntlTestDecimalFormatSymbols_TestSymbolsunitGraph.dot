digraph "unitGraph" {
    "r12 := @this: javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols"
    "$r0 = new java.text.DecimalFormatSymbols"
    "$r1 = <java.util.Locale: java.util.Locale FRENCH>"
    "specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1)"
    "r2 = $r0"
    "$r3 = new java.text.DecimalFormatSymbols"
    "$r4 = <java.util.Locale: java.util.Locale ENGLISH>"
    "specialinvoke $r3.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r4)"
    "r13 = $r3"
    "$z0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)"
    "if $z0 == 0 goto c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: English DecimalFormatSymbols equal to French\")"
    "c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setZeroDigit(char)>(c0)"
    "$c1 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"
    "$c2 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"
    "if $c1 == $c2 goto c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set ZeroDigit failed\")"
    "c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(c3)"
    "$c4 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"
    "$c5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"
    "if $c4 == $c5 goto c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set GroupingSeparator failed\")"
    "c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(c6)"
    "$c7 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"
    "$c8 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"
    "if $c7 == $c8 goto c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set DecimalSeparator failed\")"
    "c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPerMill(char)>(c9)"
    "$c10 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPerMill()>()"
    "$c11 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"
    "if $c10 == $c11 goto c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PerMill failed\")"
    "c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPercent(char)>(c12)"
    "$c13 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "$c14 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "if $c13 == $c14 goto c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Percent failed\")"
    "c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDigit(char)>(c15)"
    "$c16 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "$c17 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"
    "if $c16 == $c17 goto c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"
    "c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>(c18)"
    "$c19 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"
    "$c20 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"
    "if $c19 == $c20 goto r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PatternSeparator failed\")"
    "r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>(r5)"
    "r6 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"
    "$z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r6)"
    "if $z1 != 0 goto r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Infinity failed\")"
    "r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>(r7)"
    "r8 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"
    "$z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r8)"
    "if $z2 != 0 goto c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set NaN failed\")"
    "c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setMinusSign(char)>(c21)"
    "$c22 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getMinusSign()>()"
    "$c23 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"
    "if $c22 == $c23 goto $r9 = new java.text.DecimalFormatSymbols"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set MinusSign failed\")"
    "$r9 = new java.text.DecimalFormatSymbols"
    "specialinvoke $r9.<java.text.DecimalFormatSymbols: void <init>()>()"
    "r10 = $r9"
    "$r11 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.Object clone()>()"
    "r14 = (java.text.DecimalFormatSymbols) $r11"
    "$z3 = virtualinvoke r14.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)"
    "if $z3 != 0 goto return"
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: Clone failed\")"
    "return"
    "r12 := @this: javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols"->"$r0 = new java.text.DecimalFormatSymbols";
    "$r0 = new java.text.DecimalFormatSymbols"->"$r1 = <java.util.Locale: java.util.Locale FRENCH>";
    "$r1 = <java.util.Locale: java.util.Locale FRENCH>"->"specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1)";
    "specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1)"->"r2 = $r0";
    "r2 = $r0"->"$r3 = new java.text.DecimalFormatSymbols";
    "$r3 = new java.text.DecimalFormatSymbols"->"$r4 = <java.util.Locale: java.util.Locale ENGLISH>";
    "$r4 = <java.util.Locale: java.util.Locale ENGLISH>"->"specialinvoke $r3.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r4)";
    "specialinvoke $r3.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r4)"->"r13 = $r3";
    "r13 = $r3"->"$z0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)";
    "$z0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)"->"if $z0 == 0 goto c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()";
    "if $z0 == 0 goto c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: English DecimalFormatSymbols equal to French\")";
    "if $z0 == 0 goto c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"->"c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: English DecimalFormatSymbols equal to French\")"->"c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()";
    "c0 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setZeroDigit(char)>(c0)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setZeroDigit(char)>(c0)"->"$c1 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getZeroDigit()>()";
    "$c1 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"->"$c2 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()";
    "$c2 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getZeroDigit()>()"->"if $c1 == $c2 goto c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()";
    "if $c1 == $c2 goto c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set ZeroDigit failed\")";
    "if $c1 == $c2 goto c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"->"c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set ZeroDigit failed\")"->"c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()";
    "c3 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(c3)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(c3)"->"$c4 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()";
    "$c4 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"->"$c5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()";
    "$c5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>()"->"if $c4 == $c5 goto c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()";
    "if $c4 == $c5 goto c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set GroupingSeparator failed\")";
    "if $c4 == $c5 goto c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"->"c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set GroupingSeparator failed\")"->"c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()";
    "c6 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(c6)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(c6)"->"$c7 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()";
    "$c7 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"->"$c8 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()";
    "$c8 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>()"->"if $c7 == $c8 goto c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()";
    "if $c7 == $c8 goto c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set DecimalSeparator failed\")";
    "if $c7 == $c8 goto c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"->"c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set DecimalSeparator failed\")"->"c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()";
    "c9 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPerMill(char)>(c9)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPerMill(char)>(c9)"->"$c10 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPerMill()>()";
    "$c10 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPerMill()>()"->"$c11 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()";
    "$c11 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPerMill()>()"->"if $c10 == $c11 goto c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "if $c10 == $c11 goto c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PerMill failed\")";
    "if $c10 == $c11 goto c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"->"c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PerMill failed\")"->"c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "c12 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPercent(char)>(c12)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPercent(char)>(c12)"->"$c13 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "$c13 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()"->"$c14 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "$c14 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"->"if $c13 == $c14 goto c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()";
    "if $c13 == $c14 goto c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Percent failed\")";
    "if $c13 == $c14 goto c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()"->"c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Percent failed\")"->"c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()";
    "c15 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getDigit()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDigit(char)>(c15)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setDigit(char)>(c15)"->"$c16 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "$c16 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPercent()>()"->"$c17 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()";
    "$c17 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPercent()>()"->"if $c16 == $c17 goto c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()";
    "if $c16 == $c17 goto c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Percent failed\")";
    "if $c16 == $c17 goto c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"->"c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Percent failed\")"->"c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()";
    "c18 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>(c18)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>(c18)"->"$c19 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()";
    "$c19 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"->"$c20 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()";
    "$c20 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getPatternSeparator()>()"->"if $c19 == $c20 goto r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()";
    "if $c19 == $c20 goto r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PatternSeparator failed\")";
    "if $c19 == $c20 goto r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"->"r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set PatternSeparator failed\")"->"r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()";
    "r5 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>(r5)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>(r5)"->"r6 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()";
    "r6 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>()"->"$z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r6)";
    "$z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r6)"->"if $z1 != 0 goto r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()";
    "if $z1 != 0 goto r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Infinity failed\")";
    "if $z1 != 0 goto r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"->"r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set Infinity failed\")"->"r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()";
    "r7 = virtualinvoke r13.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>(r7)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>(r7)"->"r8 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()";
    "r8 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>()"->"$z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r8)";
    "$z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r8)"->"if $z2 != 0 goto c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()";
    "if $z2 != 0 goto c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set NaN failed\")";
    "if $z2 != 0 goto c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"->"c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set NaN failed\")"->"c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()";
    "c21 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"->"virtualinvoke r2.<java.text.DecimalFormatSymbols: void setMinusSign(char)>(c21)";
    "virtualinvoke r2.<java.text.DecimalFormatSymbols: void setMinusSign(char)>(c21)"->"$c22 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getMinusSign()>()";
    "$c22 = virtualinvoke r2.<java.text.DecimalFormatSymbols: char getMinusSign()>()"->"$c23 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()";
    "$c23 = virtualinvoke r13.<java.text.DecimalFormatSymbols: char getMinusSign()>()"->"if $c22 == $c23 goto $r9 = new java.text.DecimalFormatSymbols";
    "if $c22 == $c23 goto $r9 = new java.text.DecimalFormatSymbols"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set MinusSign failed\")";
    "if $c22 == $c23 goto $r9 = new java.text.DecimalFormatSymbols"->"$r9 = new java.text.DecimalFormatSymbols";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: get/set MinusSign failed\")"->"$r9 = new java.text.DecimalFormatSymbols";
    "$r9 = new java.text.DecimalFormatSymbols"->"specialinvoke $r9.<java.text.DecimalFormatSymbols: void <init>()>()";
    "specialinvoke $r9.<java.text.DecimalFormatSymbols: void <init>()>()"->"r10 = $r9";
    "r10 = $r9"->"$r11 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.Object clone()>()";
    "$r11 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.Object clone()>()"->"r14 = (java.text.DecimalFormatSymbols) $r11";
    "r14 = (java.text.DecimalFormatSymbols) $r11"->"$z3 = virtualinvoke r14.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)";
    "$z3 = virtualinvoke r14.<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>(r2)"->"if $z3 != 0 goto return";
    "if $z3 != 0 goto return"->"virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: Clone failed\")";
    "if $z3 != 0 goto return"->"return";
    "virtualinvoke r12.<javaT.text.Format.NumberFormat.IntlTestDecimalFormatSymbols: void errln(java.lang.String)>(\"ERROR: Clone failed\")"->"return";
}
