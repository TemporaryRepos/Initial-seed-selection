digraph "unitGraph" {
    "r9 := @this: javaT.text.Bidi.BidiSurrogateTest"
    "r0 := @parameter0: java.lang.String"
    "z1 := @parameter1: boolean"
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "$i0 = lengthof r1"
    "$z0 = staticinvoke <java.text.Bidi: boolean requiresBidi(char[],int,int)>(r1, 0, $i0)"
    "if $z0 == z1 goto return"
    "$r2 = new java.lang.RuntimeException"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"testRequiresBidi failed with \'\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\', \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"
    "throw $r2"
    "return"
    "r9 := @this: javaT.text.Bidi.BidiSurrogateTest"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"z1 := @parameter1: boolean";
    "z1 := @parameter1: boolean"->"r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"$z0 = staticinvoke <java.text.Bidi: boolean requiresBidi(char[],int,int)>(r1, 0, $i0)";
    "$z0 = staticinvoke <java.text.Bidi: boolean requiresBidi(char[],int,int)>(r1, 0, $i0)"->"if $z0 == z1 goto return";
    "if $z0 == z1 goto return"->"$r2 = new java.lang.RuntimeException";
    "if $z0 == z1 goto return"->"return";
    "$r2 = new java.lang.RuntimeException"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"testRequiresBidi failed with \'\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"testRequiresBidi failed with \'\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\', \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\', \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"->"throw $r2";
}
