digraph "unitGraph" {
    "i1 = 0"
    "$r0 = newarray (java.lang.String)[6]"
    "$r0[0] = \"9223372036854775807\""
    "$r0[1] = \"9223372036854775807.0\""
    "$r0[2] = \"9223372036854775807.00\""
    "$r0[3] = \"-9223372036854775808\""
    "$r0[4] = \"-9223372036854775808.0\""
    "$r0[5] = \"-9223372036854775808.00\""
    "r1 = $r0"
    "r7 = r1"
    "i2 = lengthof r7"
    "i3 = 0"
    "if i3 >= i2 goto $r2 = newarray (java.lang.String)[6]"
    "r8 = r7[i3]"
    "$r4 = new java.math.BigDecimal"
    "specialinvoke $r4.<java.math.BigDecimal: void <init>(java.lang.String)>(r8)"
    "r9 = $r4"
    "l4 = virtualinvoke r9.<java.math.BigDecimal: long longValueExact()>()"
    "goto [?= i3 = i3 + 1]"
    "$r6 := @caughtexception"
    "r10 = $r6"
    "i1 = i1 + 1"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "$r2 = newarray (java.lang.String)[6]"
    "$r2[0] = \"9223372036854775808\""
    "$r2[1] = \"9223372036854775808.0\""
    "$r2[2] = \"9223372036854775808.00\""
    "$r2[3] = \"-9223372036854775809\""
    "$r2[4] = \"-9223372036854775808.1\""
    "$r2[5] = \"-9223372036854775808.01\""
    "r11 = $r2"
    "r12 = r11"
    "i5 = lengthof r12"
    "i6 = 0"
    "if i6 >= i5 goto return i1"
    "r13 = r12[i6]"
    "$r3 = new java.math.BigDecimal"
    "specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(r13)"
    "r14 = $r3"
    "l0 = virtualinvoke r14.<java.math.BigDecimal: long longValueExact()>()"
    "goto [?= i6 = i6 + 1]"
    "$r5 := @caughtexception"
    "r15 = $r5"
    "i6 = i6 + 1"
    "return i1"
    "i1 = 0"->"$r0 = newarray (java.lang.String)[6]";
    "$r0 = newarray (java.lang.String)[6]"->"$r0[0] = \"9223372036854775807\"";
    "$r0[0] = \"9223372036854775807\""->"$r0[1] = \"9223372036854775807.0\"";
    "$r0[1] = \"9223372036854775807.0\""->"$r0[2] = \"9223372036854775807.00\"";
    "$r0[2] = \"9223372036854775807.00\""->"$r0[3] = \"-9223372036854775808\"";
    "$r0[3] = \"-9223372036854775808\""->"$r0[4] = \"-9223372036854775808.0\"";
    "$r0[4] = \"-9223372036854775808.0\""->"$r0[5] = \"-9223372036854775808.00\"";
    "$r0[5] = \"-9223372036854775808.00\""->"r1 = $r0";
    "r1 = $r0"->"r7 = r1";
    "r7 = r1"->"i2 = lengthof r7";
    "i2 = lengthof r7"->"i3 = 0";
    "i3 = 0"->"if i3 >= i2 goto $r2 = newarray (java.lang.String)[6]";
    "if i3 >= i2 goto $r2 = newarray (java.lang.String)[6]"->"r8 = r7[i3]";
    "if i3 >= i2 goto $r2 = newarray (java.lang.String)[6]"->"$r2 = newarray (java.lang.String)[6]";
    "r8 = r7[i3]"->"$r4 = new java.math.BigDecimal";
    "r8 = r7[i3]"->"$r6 := @caughtexception";
    "$r4 = new java.math.BigDecimal"->"specialinvoke $r4.<java.math.BigDecimal: void <init>(java.lang.String)>(r8)";
    "$r4 = new java.math.BigDecimal"->"$r6 := @caughtexception";
    "specialinvoke $r4.<java.math.BigDecimal: void <init>(java.lang.String)>(r8)"->"r9 = $r4";
    "specialinvoke $r4.<java.math.BigDecimal: void <init>(java.lang.String)>(r8)"->"$r6 := @caughtexception";
    "r9 = $r4"->"l4 = virtualinvoke r9.<java.math.BigDecimal: long longValueExact()>()";
    "r9 = $r4"->"$r6 := @caughtexception";
    "l4 = virtualinvoke r9.<java.math.BigDecimal: long longValueExact()>()"->"goto [?= i3 = i3 + 1]";
    "l4 = virtualinvoke r9.<java.math.BigDecimal: long longValueExact()>()"->"$r6 := @caughtexception";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$r6 := @caughtexception"->"r10 = $r6";
    "r10 = $r6"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i2 goto $r2 = newarray (java.lang.String)[6]";
    "$r2 = newarray (java.lang.String)[6]"->"$r2[0] = \"9223372036854775808\"";
    "$r2[0] = \"9223372036854775808\""->"$r2[1] = \"9223372036854775808.0\"";
    "$r2[1] = \"9223372036854775808.0\""->"$r2[2] = \"9223372036854775808.00\"";
    "$r2[2] = \"9223372036854775808.00\""->"$r2[3] = \"-9223372036854775809\"";
    "$r2[3] = \"-9223372036854775809\""->"$r2[4] = \"-9223372036854775808.1\"";
    "$r2[4] = \"-9223372036854775808.1\""->"$r2[5] = \"-9223372036854775808.01\"";
    "$r2[5] = \"-9223372036854775808.01\""->"r11 = $r2";
    "r11 = $r2"->"r12 = r11";
    "r12 = r11"->"i5 = lengthof r12";
    "i5 = lengthof r12"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto return i1";
    "if i6 >= i5 goto return i1"->"r13 = r12[i6]";
    "if i6 >= i5 goto return i1"->"return i1";
    "r13 = r12[i6]"->"$r3 = new java.math.BigDecimal";
    "r13 = r12[i6]"->"$r5 := @caughtexception";
    "$r3 = new java.math.BigDecimal"->"specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(r13)";
    "$r3 = new java.math.BigDecimal"->"$r5 := @caughtexception";
    "specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(r13)"->"r14 = $r3";
    "specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(r13)"->"$r5 := @caughtexception";
    "r14 = $r3"->"l0 = virtualinvoke r14.<java.math.BigDecimal: long longValueExact()>()";
    "r14 = $r3"->"$r5 := @caughtexception";
    "l0 = virtualinvoke r14.<java.math.BigDecimal: long longValueExact()>()"->"i1 = i1 + 1";
    "l0 = virtualinvoke r14.<java.math.BigDecimal: long longValueExact()>()"->"$r5 := @caughtexception";
    "i1 = i1 + 1"->"goto [?= i6 = i6 + 1]";
    "i1 = i1 + 1"->"$r5 := @caughtexception";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$r5 := @caughtexception"->"r15 = $r5";
    "r15 = $r5"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto return i1";
}
