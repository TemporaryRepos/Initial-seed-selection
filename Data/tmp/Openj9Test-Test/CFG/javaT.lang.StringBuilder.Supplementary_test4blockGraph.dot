digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i5 = 0;
"
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
r2 = $r1[i5];
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i6 = 0;
"
    "Block 3:
[preds: 2 10 ] [succs: 4 11 ]
$i1 = virtualinvoke r2.<java.lang.String: int length()>();
if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6);
r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2);
if r4 == r11 goto $z1 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\");
i3 = virtualinvoke r4.<java.lang.StringBuilder: int codePointAt(int)>(i6);
if i3 == i2 goto $z2 = 0;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= $r12 = new java.lang.StringBuilder];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
"
    "Block 10:
[preds: 8 9 ] [succs: 3 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != c\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, $r16, i3, i2);
$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2);
i6 = i6 + $i4;
goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()];
"
    "Block 11:
[preds: 3 ] [succs: 12 13 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z0 != 0 goto $z3 = 0;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r6 = new java.lang.StringBuilder];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"
    "Block 14:
[preds: 12 13 ] [succs: 1 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z3, $r10);
i5 = i5 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
"
    "Block 15:
[preds: 1 ] [succs: ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(1114112, class \"Ljava/lang/IllegalArgumentException;\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i5 = 0;
"->"Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
";
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
r2 = $r1[i5];
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i6 = 0;
";
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
"->"Block 15:
[preds: 1 ] [succs: ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(1114112, class \"Ljava/lang/IllegalArgumentException;\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r1 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
r2 = $r1[i5];
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i6 = 0;
"->"Block 3:
[preds: 2 10 ] [succs: 4 11 ]
$i1 = virtualinvoke r2.<java.lang.String: int length()>();
if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 3:
[preds: 2 10 ] [succs: 4 11 ]
$i1 = virtualinvoke r2.<java.lang.String: int length()>();
if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6);
r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2);
if r4 == r11 goto $z1 = 0;
";
    "Block 3:
[preds: 2 10 ] [succs: 4 11 ]
$i1 = virtualinvoke r2.<java.lang.String: int length()>();
if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 11:
[preds: 3 ] [succs: 12 13 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z0 != 0 goto $z3 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6);
r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2);
if r4 == r11 goto $z1 = 0;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6);
r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2);
if r4 == r11 goto $z1 = 0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")];
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\");
i3 = virtualinvoke r4.<java.lang.StringBuilder: int codePointAt(int)>(i6);
if i3 == i2 goto $z2 = 0;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\");
i3 = virtualinvoke r4.<java.lang.StringBuilder: int codePointAt(int)>(i6);
if i3 == i2 goto $z2 = 0;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\");
i3 = virtualinvoke r4.<java.lang.StringBuilder: int codePointAt(int)>(i6);
if i3 == i2 goto $z2 = 0;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= $r12 = new java.lang.StringBuilder];
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\");
i3 = virtualinvoke r4.<java.lang.StringBuilder: int codePointAt(int)>(i6);
if i3 == i2 goto $z2 = 0;
"->"Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= $r12 = new java.lang.StringBuilder];
"->"Block 10:
[preds: 8 9 ] [succs: 3 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != c\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, $r16, i3, i2);
$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2);
i6 = i6 + $i4;
goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()];
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
"->"Block 10:
[preds: 8 9 ] [succs: 3 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != c\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, $r16, i3, i2);
$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2);
i6 = i6 + $i4;
goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()];
";
    "Block 10:
[preds: 8 9 ] [succs: 3 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint(\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != c\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, $r16, i3, i2);
$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2);
i6 = i6 + $i4;
goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()];
"->"Block 3:
[preds: 2 10 ] [succs: 4 11 ]
$i1 = virtualinvoke r2.<java.lang.String: int length()>();
if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 11:
[preds: 3 ] [succs: 12 13 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z0 != 0 goto $z3 = 0;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r6 = new java.lang.StringBuilder];
";
    "Block 11:
[preds: 3 ] [succs: 12 13 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z0 != 0 goto $z3 = 0;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= $r6 = new java.lang.StringBuilder];
"->"Block 14:
[preds: 12 13 ] [succs: 1 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z3, $r10);
i5 = i5 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"->"Block 14:
[preds: 12 13 ] [succs: 1 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z3, $r10);
i5 = i5 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
";
    "Block 14:
[preds: 12 13 ] [succs: 1 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.lang.StringBuilder.Supplementary: void check(boolean,java.lang.String)>($z3, $r10);
i5 = i5 + 1;
goto [?= $r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>];
"->"Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$r0 = <javaT.lang.StringBuilder.Supplementary: java.lang.String[] input>;
$i0 = lengthof $r0;
if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuilder.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\");
";
}
