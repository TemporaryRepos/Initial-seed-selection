digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "i42 = staticinvoke <java.lang.Math: int addExact(int,int)>(i0, i1)"
    "$l3 = (long) i0"
    "$l2 = (long) i1"
    "l43 = $l3 + $l2"
    "$i4 = (int) l43"
    "$l5 = (long) $i4"
    "$b6 = $l5 cmp l43"
    "if $b6 == 0 goto $l7 = (long) i42"
    "$r75 = new java.lang.StringBuilder"
    "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()"
    "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")"
    "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"
    "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"
    "$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r83)"
    "goto [?= (branch)]"
    "$l7 = (long) i42"
    "$b8 = $l7 cmp l43"
    "if $b8 == 0 goto (branch)"
    "$r65 = new java.lang.StringBuilder"
    "specialinvoke $r65.<java.lang.StringBuilder: void <init>()>()"
    "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")"
    "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"
    "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l43)"
    "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r74)"
    "goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]"
    "$r123 := @caughtexception"
    "r132 = $r123"
    "$l38 = (long) i0"
    "$l37 = (long) i1"
    "l44 = $l38 + $l37"
    "$i39 = (int) l44"
    "$l40 = (long) $i39"
    "$b41 = $l40 cmp l44"
    "if $b41 != 0 goto i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"
    "$r124 = new java.lang.StringBuilder"
    "specialinvoke $r124.<java.lang.StringBuilder: void <init>()>()"
    "$r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")"
    "$r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"
    "$r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r132)"
    "$r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r131)"
    "i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"
    "$l46 = (long) i0"
    "$l47 = (long) i1"
    "l48 = $l46 - $l47"
    "$i49 = (int) l48"
    "$l50 = (long) $i49"
    "$b51 = $l50 cmp l48"
    "if $b51 == 0 goto (branch)"
    "$r55 = new java.lang.StringBuilder"
    "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()"
    "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")"
    "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45)"
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l48)"
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r64)"
    "goto [?= i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)]"
    "$r114 := @caughtexception"
    "r133 = $r114"
    "$l33 = (long) i0"
    "$l32 = (long) i1"
    "l52 = $l33 - $l32"
    "$i34 = (int) l52"
    "$l35 = (long) $i34"
    "$b36 = $l35 cmp l52"
    "if $b36 != 0 goto i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"
    "$r115 = new java.lang.StringBuilder"
    "specialinvoke $r115.<java.lang.StringBuilder: void <init>()>()"
    "$r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")"
    "$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133)"
    "$r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r122)"
    "i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"
    "$l54 = (long) i0"
    "$l55 = (long) i1"
    "l56 = $l54 * $l55"
    "$i57 = (int) l56"
    "$l58 = (long) $i57"
    "$b59 = $l58 cmp l56"
    "if $b59 == 0 goto (branch)"
    "$r45 = new java.lang.StringBuilder"
    "specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53)"
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l56)"
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"
    "goto [?= i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)]"
    "$r105 := @caughtexception"
    "r134 = $r105"
    "$l28 = (long) i0"
    "$l27 = (long) i1"
    "l60 = $l28 * $l27"
    "$i29 = (int) l60"
    "$l30 = (long) $i29"
    "$b31 = $l30 cmp l60"
    "if $b31 != 0 goto i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"
    "$r106 = new java.lang.StringBuilder"
    "specialinvoke $r106.<java.lang.StringBuilder: void <init>()>()"
    "$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")"
    "$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"
    "$r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r134)"
    "$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r113)"
    "i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"
    "$l62 = (long) i0"
    "l63 = $l62 + 1L"
    "$i64 = (int) l63"
    "$l65 = (long) $i64"
    "$b66 = $l65 cmp l63"
    "if $b66 == 0 goto $l9 = (long) i61"
    "$r38 = new java.lang.StringBuilder"
    "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r44)"
    "$l9 = (long) i61"
    "$b10 = $l9 cmp l63"
    "if $b10 == 0 goto (branch)"
    "$r30 = new java.lang.StringBuilder"
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l63)"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r37)"
    "goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]"
    "$r98 := @caughtexception"
    "r135 = $r98"
    "$l23 = (long) i0"
    "l67 = $l23 + 1L"
    "$i24 = (int) l67"
    "$l25 = (long) $i24"
    "$b26 = $l25 cmp l67"
    "if $b26 != 0 goto i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"
    "$r99 = new java.lang.StringBuilder"
    "specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()"
    "$r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")"
    "$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r135)"
    "$r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r104)"
    "i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"
    "$l69 = (long) i0"
    "l70 = $l69 - 1L"
    "$i71 = (int) l70"
    "$l72 = (long) $i71"
    "$b73 = $l72 cmp l70"
    "if $b73 == 0 goto $l11 = (long) i68"
    "$r23 = new java.lang.StringBuilder"
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"
    "$l11 = (long) i68"
    "$b12 = $l11 cmp l70"
    "if $b12 == 0 goto (branch)"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l70)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"
    "goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]"
    "$r91 := @caughtexception"
    "r136 = $r91"
    "$l19 = (long) i0"
    "l74 = $l19 - 1L"
    "$i20 = (int) l74"
    "$l21 = (long) $i20"
    "$b22 = $l21 cmp l74"
    "if $b22 != 0 goto i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"
    "$r92 = new java.lang.StringBuilder"
    "specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()"
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")"
    "$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r136)"
    "$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r97)"
    "i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"
    "$l76 = (long) i0"
    "l77 = neg $l76"
    "$i78 = (int) l77"
    "$l79 = (long) $i78"
    "$b80 = $l79 cmp l77"
    "if $b80 == 0 goto $l13 = (long) i75"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r14)"
    "$l13 = (long) i75"
    "$b14 = $l13 cmp l77"
    "if $b14 == 0 goto (branch)"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l77)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r7)"
    "goto [?= return]"
    "$r84 := @caughtexception"
    "r137 = $r84"
    "$l15 = (long) i0"
    "l81 = $l15 - 1L"
    "$i16 = (int) l81"
    "$l17 = (long) $i16"
    "$b18 = $l17 cmp l81"
    "if $b18 != 0 goto return"
    "$r85 = new java.lang.StringBuilder"
    "specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()"
    "$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")"
    "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"
    "$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r137)"
    "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r90)"
    "return"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i42 = staticinvoke <java.lang.Math: int addExact(int,int)>(i0, i1)";
    "i1 := @parameter1: int"->"$r123 := @caughtexception";
    "i42 = staticinvoke <java.lang.Math: int addExact(int,int)>(i0, i1)"->"$l3 = (long) i0";
    "i42 = staticinvoke <java.lang.Math: int addExact(int,int)>(i0, i1)"->"$r123 := @caughtexception";
    "$l3 = (long) i0"->"$l2 = (long) i1";
    "$l3 = (long) i0"->"$r123 := @caughtexception";
    "$l2 = (long) i1"->"l43 = $l3 + $l2";
    "$l2 = (long) i1"->"$r123 := @caughtexception";
    "l43 = $l3 + $l2"->"$i4 = (int) l43";
    "l43 = $l3 + $l2"->"$r123 := @caughtexception";
    "$i4 = (int) l43"->"$l5 = (long) $i4";
    "$i4 = (int) l43"->"$r123 := @caughtexception";
    "$l5 = (long) $i4"->"$b6 = $l5 cmp l43";
    "$l5 = (long) $i4"->"$r123 := @caughtexception";
    "$b6 = $l5 cmp l43"->"if $b6 == 0 goto $l7 = (long) i42";
    "$b6 = $l5 cmp l43"->"$r123 := @caughtexception";
    "if $b6 == 0 goto $l7 = (long) i42"->"$r75 = new java.lang.StringBuilder";
    "if $b6 == 0 goto $l7 = (long) i42"->"$l7 = (long) i42";
    "if $b6 == 0 goto $l7 = (long) i42"->"$r123 := @caughtexception";
    "$r75 = new java.lang.StringBuilder"->"specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()";
    "$r75 = new java.lang.StringBuilder"->"$r123 := @caughtexception";
    "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()"->"$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")";
    "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()"->"$r123 := @caughtexception";
    "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")"->"$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")"->"$r123 := @caughtexception";
    "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r123 := @caughtexception";
    "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r123 := @caughtexception";
    "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r123 := @caughtexception";
    "$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)";
    "$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r123 := @caughtexception";
    "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"->"$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")";
    "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"->"$r123 := @caughtexception";
    "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r123 := @caughtexception";
    "$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r83)";
    "$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r123 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r83)"->"goto [?= (branch)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r83)"->"$r123 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]";
    "goto [?= (branch)]"->"$r123 := @caughtexception";
    "$l7 = (long) i42"->"$b8 = $l7 cmp l43";
    "$l7 = (long) i42"->"$r123 := @caughtexception";
    "$b8 = $l7 cmp l43"->"if $b8 == 0 goto (branch)";
    "$b8 = $l7 cmp l43"->"$r123 := @caughtexception";
    "if $b8 == 0 goto (branch)"->"$r65 = new java.lang.StringBuilder";
    "if $b8 == 0 goto (branch)"->"goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]";
    "if $b8 == 0 goto (branch)"->"$r123 := @caughtexception";
    "$r65 = new java.lang.StringBuilder"->"specialinvoke $r65.<java.lang.StringBuilder: void <init>()>()";
    "$r65 = new java.lang.StringBuilder"->"$r123 := @caughtexception";
    "specialinvoke $r65.<java.lang.StringBuilder: void <init>()>()"->"$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")";
    "specialinvoke $r65.<java.lang.StringBuilder: void <init>()>()"->"$r123 := @caughtexception";
    "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")"->"$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.addExact(\")"->"$r123 := @caughtexception";
    "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r123 := @caughtexception";
    "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r123 := @caughtexception";
    "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r123 := @caughtexception";
    "$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)";
    "$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r123 := @caughtexception";
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"->"$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42)"->"$r123 := @caughtexception";
    "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l43)";
    "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r123 := @caughtexception";
    "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l43)"->"$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l43)"->"$r123 := @caughtexception";
    "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r74)";
    "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r123 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r74)"->"goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r74)"->"$r123 := @caughtexception";
    "goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]"->"i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)";
    "goto [?= i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)]"->"$r114 := @caughtexception";
    "$r123 := @caughtexception"->"r132 = $r123";
    "r132 = $r123"->"$l38 = (long) i0";
    "$l38 = (long) i0"->"$l37 = (long) i1";
    "$l37 = (long) i1"->"l44 = $l38 + $l37";
    "l44 = $l38 + $l37"->"$i39 = (int) l44";
    "$i39 = (int) l44"->"$l40 = (long) $i39";
    "$l40 = (long) $i39"->"$b41 = $l40 cmp l44";
    "$b41 = $l40 cmp l44"->"if $b41 != 0 goto i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)";
    "if $b41 != 0 goto i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"->"$r124 = new java.lang.StringBuilder";
    "if $b41 != 0 goto i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"->"i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)";
    "if $b41 != 0 goto i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"->"$r114 := @caughtexception";
    "$r124 = new java.lang.StringBuilder"->"specialinvoke $r124.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r124.<java.lang.StringBuilder: void <init>()>()"->"$r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")";
    "$r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.addExact(\")"->"$r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")";
    "$r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" + \")"->"$r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r132)";
    "$r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r132)"->"$r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r131)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r131)"->"i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r131)"->"$r114 := @caughtexception";
    "i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"->"$l46 = (long) i0";
    "i45 = staticinvoke <java.lang.Math: int subtractExact(int,int)>(i0, i1)"->"$r114 := @caughtexception";
    "$l46 = (long) i0"->"$l47 = (long) i1";
    "$l46 = (long) i0"->"$r114 := @caughtexception";
    "$l47 = (long) i1"->"l48 = $l46 - $l47";
    "$l47 = (long) i1"->"$r114 := @caughtexception";
    "l48 = $l46 - $l47"->"$i49 = (int) l48";
    "l48 = $l46 - $l47"->"$r114 := @caughtexception";
    "$i49 = (int) l48"->"$l50 = (long) $i49";
    "$i49 = (int) l48"->"$r114 := @caughtexception";
    "$l50 = (long) $i49"->"$b51 = $l50 cmp l48";
    "$l50 = (long) $i49"->"$r114 := @caughtexception";
    "$b51 = $l50 cmp l48"->"if $b51 == 0 goto (branch)";
    "$b51 = $l50 cmp l48"->"$r114 := @caughtexception";
    "if $b51 == 0 goto (branch)"->"$r55 = new java.lang.StringBuilder";
    "if $b51 == 0 goto (branch)"->"goto [?= i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)]";
    "if $b51 == 0 goto (branch)"->"$r114 := @caughtexception";
    "$r55 = new java.lang.StringBuilder"->"specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()";
    "$r55 = new java.lang.StringBuilder"->"$r114 := @caughtexception";
    "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()"->"$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")";
    "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()"->"$r114 := @caughtexception";
    "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")"->"$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")"->"$r114 := @caughtexception";
    "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r114 := @caughtexception";
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r114 := @caughtexception";
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r114 := @caughtexception";
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45)";
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r114 := @caughtexception";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45)"->"$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45)"->"$r114 := @caughtexception";
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l48)";
    "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r114 := @caughtexception";
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l48)"->"$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l48)"->"$r114 := @caughtexception";
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r64)";
    "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r114 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r64)"->"goto [?= i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r64)"->"$r114 := @caughtexception";
    "goto [?= i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)]"->"i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)";
    "goto [?= i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)]"->"$r105 := @caughtexception";
    "$r114 := @caughtexception"->"r133 = $r114";
    "r133 = $r114"->"$l33 = (long) i0";
    "$l33 = (long) i0"->"$l32 = (long) i1";
    "$l32 = (long) i1"->"l52 = $l33 - $l32";
    "l52 = $l33 - $l32"->"$i34 = (int) l52";
    "$i34 = (int) l52"->"$l35 = (long) $i34";
    "$l35 = (long) $i34"->"$b36 = $l35 cmp l52";
    "$b36 = $l35 cmp l52"->"if $b36 != 0 goto i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)";
    "if $b36 != 0 goto i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"->"$r115 = new java.lang.StringBuilder";
    "if $b36 != 0 goto i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"->"i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)";
    "if $b36 != 0 goto i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"->"$r105 := @caughtexception";
    "$r115 = new java.lang.StringBuilder"->"specialinvoke $r115.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r115.<java.lang.StringBuilder: void <init>()>()"->"$r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")";
    "$r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.subtractExact(\")"->"$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133)";
    "$r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133)"->"$r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r122)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r122)"->"i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r122)"->"$r105 := @caughtexception";
    "i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"->"$l54 = (long) i0";
    "i53 = staticinvoke <java.lang.Math: int multiplyExact(int,int)>(i0, i1)"->"$r105 := @caughtexception";
    "$l54 = (long) i0"->"$l55 = (long) i1";
    "$l54 = (long) i0"->"$r105 := @caughtexception";
    "$l55 = (long) i1"->"l56 = $l54 * $l55";
    "$l55 = (long) i1"->"$r105 := @caughtexception";
    "l56 = $l54 * $l55"->"$i57 = (int) l56";
    "l56 = $l54 * $l55"->"$r105 := @caughtexception";
    "$i57 = (int) l56"->"$l58 = (long) $i57";
    "$i57 = (int) l56"->"$r105 := @caughtexception";
    "$l58 = (long) $i57"->"$b59 = $l58 cmp l56";
    "$l58 = (long) $i57"->"$r105 := @caughtexception";
    "$b59 = $l58 cmp l56"->"if $b59 == 0 goto (branch)";
    "$b59 = $l58 cmp l56"->"$r105 := @caughtexception";
    "if $b59 == 0 goto (branch)"->"$r45 = new java.lang.StringBuilder";
    "if $b59 == 0 goto (branch)"->"goto [?= i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)]";
    "if $b59 == 0 goto (branch)"->"$r105 := @caughtexception";
    "$r45 = new java.lang.StringBuilder"->"specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()";
    "$r45 = new java.lang.StringBuilder"->"$r105 := @caughtexception";
    "specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")";
    "specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()"->"$r105 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")"->"$r105 := @caughtexception";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r105 := @caughtexception";
    "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r105 := @caughtexception";
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r105 := @caughtexception";
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53)";
    "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r105 := @caughtexception";
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53)"->"$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53)"->"$r105 := @caughtexception";
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l56)";
    "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r105 := @caughtexception";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l56)"->"$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l56)"->"$r105 := @caughtexception";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r105 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"->"goto [?= i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r54)"->"$r105 := @caughtexception";
    "goto [?= i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)]"->"i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)";
    "goto [?= i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)]"->"$r98 := @caughtexception";
    "$r105 := @caughtexception"->"r134 = $r105";
    "r134 = $r105"->"$l28 = (long) i0";
    "$l28 = (long) i0"->"$l27 = (long) i1";
    "$l27 = (long) i1"->"l60 = $l28 * $l27";
    "l60 = $l28 * $l27"->"$i29 = (int) l60";
    "$i29 = (int) l60"->"$l30 = (long) $i29";
    "$l30 = (long) $i29"->"$b31 = $l30 cmp l60";
    "$b31 = $l30 cmp l60"->"if $b31 != 0 goto i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)";
    "if $b31 != 0 goto i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"->"$r106 = new java.lang.StringBuilder";
    "if $b31 != 0 goto i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"->"i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)";
    "if $b31 != 0 goto i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"->"$r98 := @caughtexception";
    "$r106 = new java.lang.StringBuilder"->"specialinvoke $r106.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r106.<java.lang.StringBuilder: void <init>()>()"->"$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")";
    "$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.multiplyExact(\")"->"$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")";
    "$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" * \")"->"$r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r134)";
    "$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r134)"->"$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r113)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r113)"->"i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r113)"->"$r98 := @caughtexception";
    "i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"->"$l62 = (long) i0";
    "i61 = staticinvoke <java.lang.Math: int incrementExact(int)>(i0)"->"$r98 := @caughtexception";
    "$l62 = (long) i0"->"l63 = $l62 + 1L";
    "$l62 = (long) i0"->"$r98 := @caughtexception";
    "l63 = $l62 + 1L"->"$i64 = (int) l63";
    "l63 = $l62 + 1L"->"$r98 := @caughtexception";
    "$i64 = (int) l63"->"$l65 = (long) $i64";
    "$i64 = (int) l63"->"$r98 := @caughtexception";
    "$l65 = (long) $i64"->"$b66 = $l65 cmp l63";
    "$l65 = (long) $i64"->"$r98 := @caughtexception";
    "$b66 = $l65 cmp l63"->"if $b66 == 0 goto $l9 = (long) i61";
    "$b66 = $l65 cmp l63"->"$r98 := @caughtexception";
    "if $b66 == 0 goto $l9 = (long) i61"->"$r38 = new java.lang.StringBuilder";
    "if $b66 == 0 goto $l9 = (long) i61"->"$l9 = (long) i61";
    "if $b66 == 0 goto $l9 = (long) i61"->"$r98 := @caughtexception";
    "$r38 = new java.lang.StringBuilder"->"specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()";
    "$r38 = new java.lang.StringBuilder"->"$r98 := @caughtexception";
    "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")";
    "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()"->"$r98 := @caughtexception";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")"->"$r98 := @caughtexception";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r98 := @caughtexception";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r98 := @caughtexception";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"->"$r98 := @caughtexception";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r98 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r44)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r98 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r44)"->"goto [?= (branch)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r44)"->"$r98 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]";
    "goto [?= (branch)]"->"$r98 := @caughtexception";
    "$l9 = (long) i61"->"$b10 = $l9 cmp l63";
    "$l9 = (long) i61"->"$r98 := @caughtexception";
    "$b10 = $l9 cmp l63"->"if $b10 == 0 goto (branch)";
    "$b10 = $l9 cmp l63"->"$r98 := @caughtexception";
    "if $b10 == 0 goto (branch)"->"$r30 = new java.lang.StringBuilder";
    "if $b10 == 0 goto (branch)"->"goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]";
    "if $b10 == 0 goto (branch)"->"$r98 := @caughtexception";
    "$r30 = new java.lang.StringBuilder"->"specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()";
    "$r30 = new java.lang.StringBuilder"->"$r98 := @caughtexception";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()"->"$r98 := @caughtexception";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.incrementExact(\")"->"$r98 := @caughtexception";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r98 := @caughtexception";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r98 := @caughtexception";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"->"$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61)"->"$r98 := @caughtexception";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l63)";
    "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r98 := @caughtexception";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l63)"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l63)"->"$r98 := @caughtexception";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r37)";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r98 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r37)"->"goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r37)"->"$r98 := @caughtexception";
    "goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]"->"i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)";
    "goto [?= i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)]"->"$r91 := @caughtexception";
    "$r98 := @caughtexception"->"r135 = $r98";
    "r135 = $r98"->"$l23 = (long) i0";
    "$l23 = (long) i0"->"l67 = $l23 + 1L";
    "l67 = $l23 + 1L"->"$i24 = (int) l67";
    "$i24 = (int) l67"->"$l25 = (long) $i24";
    "$l25 = (long) $i24"->"$b26 = $l25 cmp l67";
    "$b26 = $l25 cmp l67"->"if $b26 != 0 goto i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)";
    "if $b26 != 0 goto i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"->"$r99 = new java.lang.StringBuilder";
    "if $b26 != 0 goto i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"->"i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)";
    "if $b26 != 0 goto i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"->"$r91 := @caughtexception";
    "$r99 = new java.lang.StringBuilder"->"specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()"->"$r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")";
    "$r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.incrementExact(\")"->"$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r135)";
    "$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r135)"->"$r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r104)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r104)"->"i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r104)"->"$r91 := @caughtexception";
    "i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"->"$l69 = (long) i0";
    "i68 = staticinvoke <java.lang.Math: int decrementExact(int)>(i0)"->"$r91 := @caughtexception";
    "$l69 = (long) i0"->"l70 = $l69 - 1L";
    "$l69 = (long) i0"->"$r91 := @caughtexception";
    "l70 = $l69 - 1L"->"$i71 = (int) l70";
    "l70 = $l69 - 1L"->"$r91 := @caughtexception";
    "$i71 = (int) l70"->"$l72 = (long) $i71";
    "$i71 = (int) l70"->"$r91 := @caughtexception";
    "$l72 = (long) $i71"->"$b73 = $l72 cmp l70";
    "$l72 = (long) $i71"->"$r91 := @caughtexception";
    "$b73 = $l72 cmp l70"->"if $b73 == 0 goto $l11 = (long) i68";
    "$b73 = $l72 cmp l70"->"$r91 := @caughtexception";
    "if $b73 == 0 goto $l11 = (long) i68"->"$r23 = new java.lang.StringBuilder";
    "if $b73 == 0 goto $l11 = (long) i68"->"$l11 = (long) i68";
    "if $b73 == 0 goto $l11 = (long) i68"->"$r91 := @caughtexception";
    "$r23 = new java.lang.StringBuilder"->"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()";
    "$r23 = new java.lang.StringBuilder"->"$r91 := @caughtexception";
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")";
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"->"$r91 := @caughtexception";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")"->"$r91 := @caughtexception";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r91 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r91 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"->"$r91 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r91 := @caughtexception";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r91 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"->"goto [?= (branch)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r29)"->"$r91 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]";
    "goto [?= (branch)]"->"$r91 := @caughtexception";
    "$l11 = (long) i68"->"$b12 = $l11 cmp l70";
    "$l11 = (long) i68"->"$r91 := @caughtexception";
    "$b12 = $l11 cmp l70"->"if $b12 == 0 goto (branch)";
    "$b12 = $l11 cmp l70"->"$r91 := @caughtexception";
    "if $b12 == 0 goto (branch)"->"$r15 = new java.lang.StringBuilder";
    "if $b12 == 0 goto (branch)"->"goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]";
    "if $b12 == 0 goto (branch)"->"$r91 := @caughtexception";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "$r15 = new java.lang.StringBuilder"->"$r91 := @caughtexception";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r91 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.decrementExact(\")"->"$r91 := @caughtexception";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r91 := @caughtexception";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r91 := @caughtexception";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i68)"->"$r91 := @caughtexception";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l70)";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r91 := @caughtexception";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l70)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l70)"->"$r91 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r91 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"->"goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r22)"->"$r91 := @caughtexception";
    "goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]"->"i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)";
    "goto [?= i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)]"->"$r84 := @caughtexception";
    "$r91 := @caughtexception"->"r136 = $r91";
    "r136 = $r91"->"$l19 = (long) i0";
    "$l19 = (long) i0"->"l74 = $l19 - 1L";
    "l74 = $l19 - 1L"->"$i20 = (int) l74";
    "$i20 = (int) l74"->"$l21 = (long) $i20";
    "$l21 = (long) $i20"->"$b22 = $l21 cmp l74";
    "$b22 = $l21 cmp l74"->"if $b22 != 0 goto i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)";
    "if $b22 != 0 goto i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"->"$r92 = new java.lang.StringBuilder";
    "if $b22 != 0 goto i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"->"i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)";
    "if $b22 != 0 goto i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"->"$r84 := @caughtexception";
    "$r92 = new java.lang.StringBuilder"->"specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()"->"$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")";
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.decrementExact(\")"->"$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r136)";
    "$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r136)"->"$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r97)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r97)"->"i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r97)"->"$r84 := @caughtexception";
    "i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"->"$l76 = (long) i0";
    "i75 = staticinvoke <java.lang.Math: int negateExact(int)>(i0)"->"$r84 := @caughtexception";
    "$l76 = (long) i0"->"l77 = neg $l76";
    "$l76 = (long) i0"->"$r84 := @caughtexception";
    "l77 = neg $l76"->"$i78 = (int) l77";
    "l77 = neg $l76"->"$r84 := @caughtexception";
    "$i78 = (int) l77"->"$l79 = (long) $i78";
    "$i78 = (int) l77"->"$r84 := @caughtexception";
    "$l79 = (long) $i78"->"$b80 = $l79 cmp l77";
    "$l79 = (long) $i78"->"$r84 := @caughtexception";
    "$b80 = $l79 cmp l77"->"if $b80 == 0 goto $l13 = (long) i75";
    "$b80 = $l79 cmp l77"->"$r84 := @caughtexception";
    "if $b80 == 0 goto $l13 = (long) i75"->"$r8 = new java.lang.StringBuilder";
    "if $b80 == 0 goto $l13 = (long) i75"->"$l13 = (long) i75";
    "if $b80 == 0 goto $l13 = (long) i75"->"$r84 := @caughtexception";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "$r8 = new java.lang.StringBuilder"->"$r84 := @caughtexception";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r84 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")"->"$r84 := @caughtexception";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r84 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r84 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"->"$r84 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected Arithmetic exception\")"->"$r84 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r14)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r84 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r14)"->"goto [?= (branch)]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r14)"->"$r84 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r84 := @caughtexception";
    "$l13 = (long) i75"->"$b14 = $l13 cmp l77";
    "$l13 = (long) i75"->"$r84 := @caughtexception";
    "$b14 = $l13 cmp l77"->"if $b14 == 0 goto (branch)";
    "$b14 = $l13 cmp l77"->"$r84 := @caughtexception";
    "if $b14 == 0 goto (branch)"->"$r0 = new java.lang.StringBuilder";
    "if $b14 == 0 goto (branch)"->"goto [?= return]";
    "if $b14 == 0 goto (branch)"->"$r84 := @caughtexception";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "$r0 = new java.lang.StringBuilder"->"$r84 := @caughtexception";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r84 := @caughtexception";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: long Math.negateExact(\")"->"$r84 := @caughtexception";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r84 := @caughtexception";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = \")"->"$r84 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i75)"->"$r84 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l77)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; expected: \")"->"$r84 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l77)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l77)"->"$r84 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r7)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r84 := @caughtexception";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r7)"->"goto [?= return]";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r7)"->"$r84 := @caughtexception";
    "goto [?= return]"->"return";
    "$r84 := @caughtexception"->"r137 = $r84";
    "r137 = $r84"->"$l15 = (long) i0";
    "$l15 = (long) i0"->"l81 = $l15 - 1L";
    "l81 = $l15 - 1L"->"$i16 = (int) l81";
    "$i16 = (int) l81"->"$l17 = (long) $i16";
    "$l17 = (long) $i16"->"$b18 = $l17 cmp l81";
    "$b18 = $l17 cmp l81"->"if $b18 != 0 goto return";
    "if $b18 != 0 goto return"->"$r85 = new java.lang.StringBuilder";
    "if $b18 != 0 goto return"->"return";
    "$r85 = new java.lang.StringBuilder"->"specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()"->"$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")";
    "$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FAIL: int Math.negateExact(\")"->"$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")";
    "$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); Unexpected exception: \")"->"$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r137)";
    "$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r137)"->"$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r90)";
    "staticinvoke <javaT.lang.Math.ExactArithTests: void fail(java.lang.String)>($r90)"->"return";
}
