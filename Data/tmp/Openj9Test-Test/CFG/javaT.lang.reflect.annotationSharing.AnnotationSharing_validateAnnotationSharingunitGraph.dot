digraph "unitGraph" {
    "r0 := @parameter0: java.lang.reflect.AccessibleObject"
    "r3 := @parameter1: java.lang.reflect.AccessibleObject"
    "$r1 = virtualinvoke r0.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")"
    "r2 = (javaT.lang.reflect.annotationSharing.Bar) $r1"
    "$r4 = virtualinvoke r3.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")"
    "r5 = (javaT.lang.reflect.annotationSharing.Bar) $r4"
    "if r2 == r5 goto return"
    "$r6 = new java.lang.RuntimeException"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be ==\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12)"
    "throw $r6"
    "return"
    "r0 := @parameter0: java.lang.reflect.AccessibleObject"->"r3 := @parameter1: java.lang.reflect.AccessibleObject";
    "r3 := @parameter1: java.lang.reflect.AccessibleObject"->"$r1 = virtualinvoke r0.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")";
    "$r1 = virtualinvoke r0.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")"->"r2 = (javaT.lang.reflect.annotationSharing.Bar) $r1";
    "r2 = (javaT.lang.reflect.annotationSharing.Bar) $r1"->"$r4 = virtualinvoke r3.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")";
    "$r4 = virtualinvoke r3.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Bar;\")"->"r5 = (javaT.lang.reflect.annotationSharing.Bar) $r4";
    "r5 = (javaT.lang.reflect.annotationSharing.Bar) $r4"->"if r2 == r5 goto return";
    "if r2 == r5 goto return"->"$r6 = new java.lang.RuntimeException";
    "if r2 == r5 goto return"->"return";
    "$r6 = new java.lang.RuntimeException"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be ==\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be ==\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12)"->"throw $r6";
}
