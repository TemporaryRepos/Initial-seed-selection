digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>(int,float)>(16, 0.75F);
r1 = $r0;
i3 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>;
if i3 >= $i0 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i3 * 10;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i3 * 10;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);
i3 = i3 + 1;
goto [?= $i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>(int,float)>(16, 0.75F);
r1 = $r0;
i3 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>;
if i3 >= $i0 goto return r1;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>;
if i3 >= $i0 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i3 * 10;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i3 * 10;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);
i3 = i3 + 1;
goto [?= $i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>;
if i3 >= $i0 goto return r1;
"->"Block 3:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i3 * 10;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i3 * 10;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);
i3 = i3 + 1;
goto [?= $i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = <javaT.util.HashMap.ReplaceExisting: int ENTRIES>;
if i3 >= $i0 goto return r1;
";
}
