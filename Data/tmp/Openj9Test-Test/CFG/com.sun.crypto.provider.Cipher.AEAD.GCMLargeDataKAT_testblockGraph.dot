digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @this: com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
$r0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Set keySet()>();
r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
$r5 = (java.lang.Integer) $r4;
i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
specialinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: void <init>()>();
r7 = virtualinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] encrypt(int)>(i0);
$r8 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] hash(byte[])>(r7);
r9 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.lang.String toHex(byte[])>($r8);
$r10 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
$r13 = (java.lang.String) $r12;
$i1 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>($r13);
if $i1 != 0 goto $z2 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z3 = $z2];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z3 = $z2;
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------------\");
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encrypt data size \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z3 == 0 goto $r44 = \"Fail\";
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = \"Pass\";
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r44 = \"Fail\";
"
    "Block 8:
[preds: 6 7 ] [succs: 9 12 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
if z3 != 0 goto z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i2 = lengthof r7;
if $i2 == 0 goto <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tExpected: \");
$r33 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r35 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r34);
$r36 = (java.lang.String) $r35;
$r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r38);
$r40 = <java.lang.System: java.io.PrintStream out>;
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tReturned: \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);
"
    "Block 11:
[preds: 9 10 ] [succs: 1 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 12:
[preds: 8 ] [succs: 13 14 ]
z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt data size \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z4 == 0 goto $r45 = \"Fail\";
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
$r45 = \"Pass\";
goto [?= $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
$r45 = \"Fail\";
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
if z4 != 0 goto (branch);
"
    "Block 16:
[preds: 15 ] [succs: 17 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
"
    "Block 17:
[preds: 15 16 ] [succs: 1 ]
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 18:
[preds: 1 ] [succs: 19 20 ]
$z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
if $z0 != 0 goto return;
"
    "Block 19:
[preds: 18 ] [succs: ]
$r3 = new java.lang.Exception;
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"Tests failed\");
throw $r3;
"
    "Block 20:
[preds: 18 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @this: com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
$r0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Set keySet()>();
r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
";
    "Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
$r5 = (java.lang.Integer) $r4;
i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
specialinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: void <init>()>();
r7 = virtualinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] encrypt(int)>(i0);
$r8 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] hash(byte[])>(r7);
r9 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.lang.String toHex(byte[])>($r8);
$r10 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
$r13 = (java.lang.String) $r12;
$i1 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>($r13);
if $i1 != 0 goto $z2 = 0;
";
    "Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
"->"Block 18:
[preds: 1 ] [succs: 19 20 ]
$z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
if $z0 != 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
$r5 = (java.lang.Integer) $r4;
i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
specialinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: void <init>()>();
r7 = virtualinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] encrypt(int)>(i0);
$r8 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] hash(byte[])>(r7);
r9 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.lang.String toHex(byte[])>($r8);
$r10 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
$r13 = (java.lang.String) $r12;
$i1 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>($r13);
if $i1 != 0 goto $z2 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z3 = $z2];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
$r5 = (java.lang.Integer) $r4;
i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT;
specialinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: void <init>()>();
r7 = virtualinvoke $r6.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] encrypt(int)>(i0);
$r8 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: byte[] hash(byte[])>(r7);
r9 = staticinvoke <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.lang.String toHex(byte[])>($r8);
$r10 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
$r13 = (java.lang.String) $r12;
$i1 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>($r13);
if $i1 != 0 goto $z2 = 0;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= z3 = $z2];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z3 = $z2;
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------------\");
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encrypt data size \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z3 == 0 goto $r44 = \"Fail\";
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z2 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z3 = $z2;
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------------\");
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encrypt data size \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z3 == 0 goto $r44 = \"Fail\";
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z3 = $z2;
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------------\");
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encrypt data size \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z3 == 0 goto $r44 = \"Fail\";
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = \"Pass\";
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
z3 = $z2;
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------------\");
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encrypt data size \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z3 == 0 goto $r44 = \"Fail\";
"->"Block 7:
[preds: 5 ] [succs: 8 ]
$r44 = \"Fail\";
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = \"Pass\";
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 12 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
if z3 != 0 goto z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r44 = \"Fail\";
"->"Block 8:
[preds: 6 7 ] [succs: 9 12 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
if z3 != 0 goto z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 12 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
if z3 != 0 goto z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$i2 = lengthof r7;
if $i2 == 0 goto <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 12 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
if z3 != 0 goto z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
"->"Block 12:
[preds: 8 ] [succs: 13 14 ]
z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt data size \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z4 == 0 goto $r45 = \"Fail\";
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i2 = lengthof r7;
if $i2 == 0 goto <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
"->"Block 10:
[preds: 9 ] [succs: 11 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tExpected: \");
$r33 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r35 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r34);
$r36 = (java.lang.String) $r35;
$r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r38);
$r40 = <java.lang.System: java.io.PrintStream out>;
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tReturned: \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i2 = lengthof r7;
if $i2 == 0 goto <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
"->"Block 11:
[preds: 9 10 ] [succs: 1 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tExpected: \");
$r33 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: java.util.HashMap results>;
$r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r35 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r34);
$r36 = (java.lang.String) $r35;
$r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r38);
$r40 = <java.lang.System: java.io.PrintStream out>;
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\tReturned: \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);
"->"Block 11:
[preds: 9 10 ] [succs: 1 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 11:
[preds: 9 10 ] [succs: 1 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
";
    "Block 12:
[preds: 8 ] [succs: 13 14 ]
z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt data size \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z4 == 0 goto $r45 = \"Fail\";
"->"Block 13:
[preds: 12 ] [succs: 15 ]
$r45 = \"Pass\";
goto [?= $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)];
";
    "Block 12:
[preds: 8 ] [succs: 13 14 ]
z4 = virtualinvoke r22.<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean decrypt(byte[])>(r7);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decrypt data size \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \tResult: \");
if z4 == 0 goto $r45 = \"Fail\";
"->"Block 14:
[preds: 12 ] [succs: 15 ]
$r45 = \"Fail\";
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
$r45 = \"Pass\";
goto [?= $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)];
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
if z4 != 0 goto (branch);
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
$r45 = \"Fail\";
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
if z4 != 0 goto (branch);
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
if z4 != 0 goto (branch);
"->"Block 16:
[preds: 15 ] [succs: 17 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
if z4 != 0 goto (branch);
"->"Block 17:
[preds: 15 16 ] [succs: 1 ]
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 16:
[preds: 15 ] [succs: 17 ]
<com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult> = 0;
"->"Block 17:
[preds: 15 16 ] [succs: 1 ]
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 17:
[preds: 15 16 ] [succs: 1 ]
goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 11 17 ] [succs: 2 18 ]
$z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
";
    "Block 18:
[preds: 1 ] [succs: 19 20 ]
$z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
if $z0 != 0 goto return;
"->"Block 19:
[preds: 18 ] [succs: ]
$r3 = new java.lang.Exception;
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"Tests failed\");
throw $r3;
";
    "Block 18:
[preds: 1 ] [succs: 19 20 ]
$z0 = <com.sun.crypto.provider.Cipher.AEAD.GCMLargeDataKAT: boolean testresult>;
if $z0 != 0 goto return;
"->"Block 20:
[preds: 18 ] [succs: ]
return;
";
}
