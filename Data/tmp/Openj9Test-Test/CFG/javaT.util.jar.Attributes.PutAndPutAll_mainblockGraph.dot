digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.jar.Attributes;
specialinvoke $r0.<java.util.jar.Attributes: void <init>()>();
r1 = $r0;
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"this is not an Attributes.Name\", \"value\");
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r3 = new java.lang.Exception;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non Attributes.Name names\");
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r3;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
"
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r9 = new java.util.jar.Attributes$Name;
"
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r9.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"name\");
"
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
$r10 = new java.lang.Integer;
"
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);
"
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
"
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r12 = new java.lang.Exception;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non String values\");
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
throw $r12;
"
    "Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
"
    "Block 15:
[preds: 14 ] [succs: 16 21 ]
$r6 = new java.util.HashMap;
"
    "Block 16:
[preds: 15 ] [succs: 17 21 ]
specialinvoke $r6.<java.util.HashMap: void <init>()>();
"
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
virtualinvoke r1.<java.util.jar.Attributes: void putAll(java.util.Map)>($r6);
"
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
$r7 = new java.lang.Exception;
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"putAll should check for non Attributes maps\");
"
    "Block 20:
[preds: 19 ] [succs: 21 ]
throw $r7;
"
    "Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.jar.Attributes;
specialinvoke $r0.<java.util.jar.Attributes: void <init>()>();
r1 = $r0;
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"this is not an Attributes.Name\", \"value\");
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.jar.Attributes;
specialinvoke $r0.<java.util.jar.Attributes: void <init>()>();
r1 = $r0;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"this is not an Attributes.Name\", \"value\");
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r3 = new java.lang.Exception;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"this is not an Attributes.Name\", \"value\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r3 = new java.lang.Exception;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non Attributes.Name names\");
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r3 = new java.lang.Exception;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non Attributes.Name names\");
"->"Block 4:
[preds: 3 ] [succs: 5 ]
throw $r3;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non Attributes.Name names\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r3;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
"->"Block 6:
[preds: 5 ] [succs: 7 14 ]
$r9 = new java.util.jar.Attributes$Name;
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 14 ]
$r8 := @caughtexception;
r14 = $r8;
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r9 = new java.util.jar.Attributes$Name;
"->"Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r9.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"name\");
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r9 = new java.util.jar.Attributes$Name;
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r9.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"name\");
"->"Block 8:
[preds: 7 ] [succs: 9 14 ]
$r10 = new java.lang.Integer;
";
    "Block 7:
[preds: 6 ] [succs: 8 14 ]
specialinvoke $r9.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(\"name\");
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
$r10 = new java.lang.Integer;
"->"Block 9:
[preds: 8 ] [succs: 10 14 ]
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);
";
    "Block 8:
[preds: 7 ] [succs: 9 14 ]
$r10 = new java.lang.Integer;
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);
"->"Block 10:
[preds: 9 ] [succs: 11 14 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
";
    "Block 9:
[preds: 8 ] [succs: 10 14 ]
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
"->"Block 11:
[preds: 10 ] [succs: 12 14 ]
$r12 = new java.lang.Exception;
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
virtualinvoke r1.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r12 = new java.lang.Exception;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non String values\");
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r12 = new java.lang.Exception;
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non String values\");
"->"Block 13:
[preds: 12 ] [succs: 14 ]
throw $r12;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"put should check for non String values\");
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
throw $r12;
"->"Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
";
    "Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
"->"Block 15:
[preds: 14 ] [succs: 16 21 ]
$r6 = new java.util.HashMap;
";
    "Block 14:
[preds: 5 6 7 8 9 10 11 12 13 ] [succs: 15 21 ]
$r5 := @caughtexception;
r15 = $r5;
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 15:
[preds: 14 ] [succs: 16 21 ]
$r6 = new java.util.HashMap;
"->"Block 16:
[preds: 15 ] [succs: 17 21 ]
specialinvoke $r6.<java.util.HashMap: void <init>()>();
";
    "Block 15:
[preds: 14 ] [succs: 16 21 ]
$r6 = new java.util.HashMap;
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 16:
[preds: 15 ] [succs: 17 21 ]
specialinvoke $r6.<java.util.HashMap: void <init>()>();
"->"Block 17:
[preds: 16 ] [succs: 18 21 ]
virtualinvoke r1.<java.util.jar.Attributes: void putAll(java.util.Map)>($r6);
";
    "Block 16:
[preds: 15 ] [succs: 17 21 ]
specialinvoke $r6.<java.util.HashMap: void <init>()>();
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
virtualinvoke r1.<java.util.jar.Attributes: void putAll(java.util.Map)>($r6);
"->"Block 18:
[preds: 17 ] [succs: 19 21 ]
$r7 = new java.lang.Exception;
";
    "Block 17:
[preds: 16 ] [succs: 18 21 ]
virtualinvoke r1.<java.util.jar.Attributes: void putAll(java.util.Map)>($r6);
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
$r7 = new java.lang.Exception;
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"putAll should check for non Attributes maps\");
";
    "Block 18:
[preds: 17 ] [succs: 19 21 ]
$r7 = new java.lang.Exception;
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"putAll should check for non Attributes maps\");
"->"Block 20:
[preds: 19 ] [succs: 21 ]
throw $r7;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"putAll should check for non Attributes maps\");
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
    "Block 20:
[preds: 19 ] [succs: 21 ]
throw $r7;
"->"Block 21:
[preds: 14 15 16 17 18 19 20 ] [succs: ]
$r4 := @caughtexception;
r16 = $r4;
return;
";
}
