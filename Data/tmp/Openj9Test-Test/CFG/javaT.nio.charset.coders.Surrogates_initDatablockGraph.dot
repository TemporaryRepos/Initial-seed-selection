digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
r1 = $r0;
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
i1 = 65537;
$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();
<javaT.nio.charset.coders.Surrogates: char[] input> = $r3;
$r4 = new java.io.ByteArrayOutputStream;
specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();
r11 = $r4;
$r5 = new java.io.OutputStreamWriter;
$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\");
specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r11, $r6);
r12 = $r5;
$r7 = <javaT.nio.charset.coders.Surrogates: char[] input>;
virtualinvoke r12.<java.io.OutputStreamWriter: void write(char[])>($r7);
virtualinvoke r12.<java.io.OutputStreamWriter: void close()>();
$r8 = virtualinvoke r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
<javaT.nio.charset.coders.Surrogates: byte[] output> = $r8;
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
r1 = $r0;
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
i1 = 65537;
$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 3:
[preds: 1 ] [succs: ]
$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
$r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();
<javaT.nio.charset.coders.Surrogates: char[] input> = $r3;
$r4 = new java.io.ByteArrayOutputStream;
specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();
r11 = $r4;
$r5 = new java.io.OutputStreamWriter;
$r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"UTF-8\");
specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r11, $r6);
r12 = $r5;
$r7 = <javaT.nio.charset.coders.Surrogates: char[] input>;
virtualinvoke r12.<java.io.OutputStreamWriter: void write(char[])>($r7);
virtualinvoke r12.<java.io.OutputStreamWriter: void close()>();
$r8 = virtualinvoke r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
<javaT.nio.charset.coders.Surrogates: byte[] output> = $r8;
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
i1 = 65537;
$r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 128 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
";
}
