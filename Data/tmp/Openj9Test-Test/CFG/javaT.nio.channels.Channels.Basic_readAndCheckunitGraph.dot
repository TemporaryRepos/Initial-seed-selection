digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "$r0 = new java.io.FileInputStream"
    "specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1)"
    "r2 = $r0"
    "$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()"
    "$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "$i2 = $i0 * $i1"
    "$i3 = $i2 * 3"
    "i4 = $i3 + 1"
    "r4 = newarray (byte)[i4]"
    "i10 = 0"
    "i11 = 0"
    "if i10 == -1 goto $r5 = new java.lang.String"
    "i11 = i11 + i10"
    "$i9 = i4 - i11"
    "i10 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[],int,int)>(r4, i11, $i9)"
    "goto [?= (branch)]"
    "$r5 = new java.lang.String"
    "$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"
    "specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r4, 0, i11, $r6)"
    "r7 = $r5"
    "$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "i5 = virtualinvoke $r8.<java.lang.String: int length()>()"
    "i12 = 0"
    "$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"
    "if i12 >= $i6 goto virtualinvoke r2.<java.io.FileInputStream: void close()>()"
    "i13 = i12 + 1"
    "$i8 = i12 * i5"
    "$i7 = i13 * i5"
    "r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)"
    "$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"
    "$z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"
    "if $z0 != 0 goto i12 = i13 + 1"
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r11"
    "i12 = i13 + 1"
    "goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"
    "virtualinvoke r2.<java.io.FileInputStream: void close()>()"
    "return"
    "r1 := @parameter0: java.io.File"->"$r0 = new java.io.FileInputStream";
    "$r0 = new java.io.FileInputStream"->"specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1)";
    "specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r3 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$i0 = virtualinvoke $r3.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()"->"$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i1 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"$i2 = $i0 * $i1";
    "$i2 = $i0 * $i1"->"$i3 = $i2 * 3";
    "$i3 = $i2 * 3"->"i4 = $i3 + 1";
    "i4 = $i3 + 1"->"r4 = newarray (byte)[i4]";
    "r4 = newarray (byte)[i4]"->"i10 = 0";
    "i10 = 0"->"i11 = 0";
    "i11 = 0"->"if i10 == -1 goto $r5 = new java.lang.String";
    "if i10 == -1 goto $r5 = new java.lang.String"->"i11 = i11 + i10";
    "if i10 == -1 goto $r5 = new java.lang.String"->"$r5 = new java.lang.String";
    "i11 = i11 + i10"->"$i9 = i4 - i11";
    "$i9 = i4 - i11"->"i10 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[],int,int)>(r4, i11, $i9)";
    "i10 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[],int,int)>(r4, i11, $i9)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 == -1 goto $r5 = new java.lang.String";
    "$r5 = new java.lang.String"->"$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>";
    "$r6 = <javaT.nio.channels.Channels.Basic: java.lang.String encoding>"->"specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r4, 0, i11, $r6)";
    "specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r4, 0, i11, $r6)"->"r7 = $r5";
    "r7 = $r5"->"$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r8 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"i5 = virtualinvoke $r8.<java.lang.String: int length()>()";
    "i5 = virtualinvoke $r8.<java.lang.String: int length()>()"->"i12 = 0";
    "i12 = 0"->"$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>"->"if i12 >= $i6 goto virtualinvoke r2.<java.io.FileInputStream: void close()>()";
    "if i12 >= $i6 goto virtualinvoke r2.<java.io.FileInputStream: void close()>()"->"i13 = i12 + 1";
    "if i12 >= $i6 goto virtualinvoke r2.<java.io.FileInputStream: void close()>()"->"virtualinvoke r2.<java.io.FileInputStream: void close()>()";
    "i13 = i12 + 1"->"$i8 = i12 * i5";
    "$i8 = i12 * i5"->"$i7 = i13 * i5";
    "$i7 = i13 * i5"->"r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)";
    "r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7)"->"$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>";
    "$r10 = <javaT.nio.channels.Channels.Basic: java.lang.String message>"->"$z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)";
    "$z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"if $z0 != 0 goto i12 = i13 + 1";
    "if $z0 != 0 goto i12 = i13 + 1"->"$r11 = new java.lang.RuntimeException";
    "if $z0 != 0 goto i12 = i13 + 1"->"i12 = i13 + 1";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r11";
    "i12 = i13 + 1"->"goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]";
    "goto [?= $i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>]"->"$i6 = <javaT.nio.channels.Channels.Basic: int ITERATIONS>";
    "virtualinvoke r2.<java.io.FileInputStream: void close()>()"->"return";
}
