digraph "unitGraph" {
    "r3 := @this: javaT.text.Collator.IteratorTest"
    "$r0 = new java.text.RuleBasedCollator"
    "specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< a < b < c & ab = d\")"
    "r1 = $r0"
    "r2 = virtualinvoke r1.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"abcd\")"
    "i0 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"
    "virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(3)"
    "virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"
    "virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(0)"
    "i2 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"
    "if i2 == i0 goto return"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"got \")"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i2, 16)"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \")"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16)"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r3.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r11)"
    "return"
    "r3 := @this: javaT.text.Collator.IteratorTest"->"$r0 = new java.text.RuleBasedCollator";
    "$r0 = new java.text.RuleBasedCollator"->"specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< a < b < c & ab = d\")";
    "specialinvoke $r0.<java.text.RuleBasedCollator: void <init>(java.lang.String)>(\"< a < b < c & ab = d\")"->"r1 = $r0";
    "r1 = $r0"->"r2 = virtualinvoke r1.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"abcd\")";
    "r2 = virtualinvoke r1.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(\"abcd\")"->"i0 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()";
    "i0 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"->"virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(3)";
    "virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(3)"->"virtualinvoke r2.<java.text.CollationElementIterator: int next()>()";
    "virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"->"virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(0)";
    "virtualinvoke r2.<java.text.CollationElementIterator: void setOffset(int)>(0)"->"i2 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()";
    "i2 = virtualinvoke r2.<java.text.CollationElementIterator: int next()>()"->"if i2 == i0 goto return";
    "if i2 == i0 goto return"->"$r4 = new java.lang.StringBuilder";
    "if i2 == i0 goto return"->"return";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"got \")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"got \")"->"$r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i2, 16)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i2, 16)"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \")"->"$r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16)"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r3.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r11)";
    "virtualinvoke r3.<javaT.text.Collator.IteratorTest: void errln(java.lang.String)>($r11)"->"return";
}
