digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: javaT.text.Collator.KoreanTest;
r0 := @parameter0: java.lang.String[][];
i4 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i4 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r6 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r2 = r0[i4];
$r5 = $r2[0];
$r3 = r0[i4];
$r4 = $r3[1];
$z0 = virtualinvoke $r6.<java.text.Collator: boolean equals(java.lang.String,java.lang.String)>($r5, $r4);
if $z0 != 0 goto i4 = i4 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r1.<javaT.text.Collator.KoreanTest: int result>;
$i2 = $i1 + 1;
r1.<javaT.text.Collator.KoreanTest: int result> = $i2;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TERTIARY: The first string should be equals to the second string:  \");
$r10 = r0[i4];
$r11 = $r10[2];
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  compare() returned \");
$r16 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r14 = r0[i4];
$r17 = $r14[0];
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r18 = r0[i4];
$r19 = $r18[1];
$r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
$i3 = virtualinvoke $r16.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r17, $r22);
$r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: javaT.text.Collator.KoreanTest;
r0 := @parameter0: java.lang.String[][];
i4 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i4 >= $i0 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i4 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r6 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r2 = r0[i4];
$r5 = $r2[0];
$r3 = r0[i4];
$r4 = $r3[1];
$z0 = virtualinvoke $r6.<java.text.Collator: boolean equals(java.lang.String,java.lang.String)>($r5, $r4);
if $z0 != 0 goto i4 = i4 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i4 >= $i0 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r6 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r2 = r0[i4];
$r5 = $r2[0];
$r3 = r0[i4];
$r4 = $r3[1];
$z0 = virtualinvoke $r6.<java.text.Collator: boolean equals(java.lang.String,java.lang.String)>($r5, $r4);
if $z0 != 0 goto i4 = i4 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r1.<javaT.text.Collator.KoreanTest: int result>;
$i2 = $i1 + 1;
r1.<javaT.text.Collator.KoreanTest: int result> = $i2;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TERTIARY: The first string should be equals to the second string:  \");
$r10 = r0[i4];
$r11 = $r10[2];
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  compare() returned \");
$r16 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r14 = r0[i4];
$r17 = $r14[0];
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r18 = r0[i4];
$r19 = $r18[1];
$r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
$i3 = virtualinvoke $r16.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r17, $r22);
$r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r6 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r2 = r0[i4];
$r5 = $r2[0];
$r3 = r0[i4];
$r4 = $r3[1];
$z0 = virtualinvoke $r6.<java.text.Collator: boolean equals(java.lang.String,java.lang.String)>($r5, $r4);
if $z0 != 0 goto i4 = i4 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i1 = r1.<javaT.text.Collator.KoreanTest: int result>;
$i2 = $i1 + 1;
r1.<javaT.text.Collator.KoreanTest: int result> = $i2;
$r8 = <java.lang.System: java.io.PrintStream err>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TERTIARY: The first string should be equals to the second string:  \");
$r10 = r0[i4];
$r11 = $r10[2];
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  compare() returned \");
$r16 = r1.<javaT.text.Collator.KoreanTest: java.text.Collator col>;
$r14 = r0[i4];
$r17 = $r14[0];
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r18 = r0[i4];
$r19 = $r18[1];
$r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
$i3 = virtualinvoke $r16.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r17, $r22);
$r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r24);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i4 >= $i0 goto return;
";
}
