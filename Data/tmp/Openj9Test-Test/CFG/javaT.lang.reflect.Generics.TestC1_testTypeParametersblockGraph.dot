digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC1: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = r2[0];
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = lengthof r2;
if $i1 == 1 goto r3 = r2[0];
"
    "Block 2:
[preds: 1 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C1 should have one type parameter\");
throw $r8;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = r2[0];
r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i0 = lengthof r4;
if $i0 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r7;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z2 != 0 goto return;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r5 = r4[0];
if $r5 == class \"Ljava/lang/Object;\" goto return;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The default bound of a type variable should be Object\");
throw $r6;
"
    "Block 9:
[preds: 6 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC1: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = r2[0];
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = lengthof r2;
if $i1 == 1 goto r3 = r2[0];
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"testing type parameters\");
$r1 = <javaT.lang.reflect.Generics.TestC1: java.lang.Class 'cls'>;
r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
$z0 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z0 != 0 goto r3 = r2[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = r2[0];
r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = lengthof r2;
if $i1 == 1 goto r3 = r2[0];
"->"Block 2:
[preds: 1 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"C1 should have one type parameter\");
throw $r8;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = lengthof r2;
if $i1 == 1 goto r3 = r2[0];
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = r2[0];
r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = r2[0];
r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$i0 = lengthof r4;
if $i0 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
r3 = r2[0];
r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
$z1 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z2 != 0 goto return;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i0 = lengthof r4;
if $i0 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"->"Block 5:
[preds: 4 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"T should have one bound\");
throw $r7;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i0 = lengthof r4;
if $i0 == 1 goto $z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z2 != 0 goto return;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z2 != 0 goto return;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r5 = r4[0];
if $r5 == class \"Ljava/lang/Object;\" goto return;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$z2 = <javaT.lang.reflect.Generics.TestC1: boolean $assertionsDisabled>;
if $z2 != 0 goto return;
"->"Block 9:
[preds: 6 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r5 = r4[0];
if $r5 == class \"Ljava/lang/Object;\" goto return;
"->"Block 8:
[preds: 7 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"The default bound of a type variable should be Object\");
throw $r6;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r5 = r4[0];
if $r5 == class \"Ljava/lang/Object;\" goto return;
"->"Block 9:
[preds: 6 7 ] [succs: ]
return;
";
}
