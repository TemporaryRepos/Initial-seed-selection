digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
z0 := @parameter1: boolean;
i1 = 0;
"
    "Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
$r1 = r0[i1];
"
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);
"
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
d0 = (double) $f0;
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r2 = r0[i1];
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r2);
"
    "Block 7:
[preds: 6 ] [succs: 11 ]
goto [?= (branch)];
"
    "Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: ]
$r12 = new java.lang.RuntimeException;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.parseFloat rejected good string `\");
$r15 = r0[i1];
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'.\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);
throw $r12;
"
    "Block 10:
[preds: 8 ] [succs: 14 ]
goto [?= return];
"
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
if z0 == 0 goto i1 = i1 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.parseFloat accepted bad string `\");
$r6 = r0[i1];
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'.\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r3;
"
    "Block 13:
[preds: 11 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 14:
[preds: 1 10 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
z0 := @parameter1: boolean;
i1 = 0;
"->"Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
";
    "Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 8 ]
$r1 = r0[i1];
";
    "Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"->"Block 14:
[preds: 1 10 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
$r1 = r0[i1];
"->"Block 3:
[preds: 2 ] [succs: 4 8 ]
$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
$r1 = r0[i1];
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);
"->"Block 4:
[preds: 3 ] [succs: 5 8 ]
d0 = (double) $f0;
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
d0 = (double) $f0;
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
$r2 = r0[i1];
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
d0 = (double) $f0;
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r2 = r0[i1];
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r2);
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r2 = r0[i1];
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r2);
"->"Block 7:
[preds: 6 ] [succs: 11 ]
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r2);
"->"Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 11 ]
goto [?= (branch)];
"->"Block 11:
[preds: 7 ] [succs: 12 13 ]
if z0 == 0 goto i1 = i1 + 1;
";
    "Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: ]
$r12 = new java.lang.RuntimeException;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.parseFloat rejected good string `\");
$r15 = r0[i1];
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'.\");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);
throw $r12;
";
    "Block 8:
[preds: 1 2 3 4 5 6 ] [succs: 9 10 ]
$r10 := @caughtexception;
r11 = $r10;
if z0 != 0 goto (branch);
"->"Block 10:
[preds: 8 ] [succs: 14 ]
goto [?= return];
";
    "Block 10:
[preds: 8 ] [succs: 14 ]
goto [?= return];
"->"Block 14:
[preds: 1 10 ] [succs: ]
return;
";
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
if z0 == 0 goto i1 = i1 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
$r3 = new java.lang.RuntimeException;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.parseFloat accepted bad string `\");
$r6 = r0[i1];
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'.\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r3;
";
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
if z0 == 0 goto i1 = i1 + 1;
"->"Block 13:
[preds: 11 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 13:
[preds: 11 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 13 ] [succs: 2 14 8 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
";
}
