digraph "unitGraph" {
    "d0 := @parameter0: double"
    "d2 := @parameter1: double"
    "b4 = 0"
    "$d1 = staticinvoke <java.lang.Math: double rint(double)>(d0)"
    "$i0 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", d0, $d1, d2)"
    "i5 = b4 + $i0"
    "$d4 = neg d0"
    "$d3 = neg d0"
    "$d5 = staticinvoke <java.lang.Math: double rint(double)>($d3)"
    "$d6 = neg d2"
    "$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", $d4, $d5, $d6)"
    "i6 = i5 + $i1"
    "$d7 = staticinvoke <java.lang.StrictMath: double rint(double)>(d0)"
    "$i2 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", d0, $d7, d2)"
    "i7 = i6 + $i2"
    "$d9 = neg d0"
    "$d8 = neg d0"
    "$d10 = staticinvoke <java.lang.StrictMath: double rint(double)>($d8)"
    "$d11 = neg d2"
    "$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", $d9, $d10, $d11)"
    "i8 = i7 + $i3"
    "return i8"
    "d0 := @parameter0: double"->"d2 := @parameter1: double";
    "d2 := @parameter1: double"->"b4 = 0";
    "b4 = 0"->"$d1 = staticinvoke <java.lang.Math: double rint(double)>(d0)";
    "$d1 = staticinvoke <java.lang.Math: double rint(double)>(d0)"->"$i0 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", d0, $d1, d2)";
    "$i0 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", d0, $d1, d2)"->"i5 = b4 + $i0";
    "i5 = b4 + $i0"->"$d4 = neg d0";
    "$d4 = neg d0"->"$d3 = neg d0";
    "$d3 = neg d0"->"$d5 = staticinvoke <java.lang.Math: double rint(double)>($d3)";
    "$d5 = staticinvoke <java.lang.Math: double rint(double)>($d3)"->"$d6 = neg d2";
    "$d6 = neg d2"->"$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", $d4, $d5, $d6)";
    "$i1 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"Math.rint\", $d4, $d5, $d6)"->"i6 = i5 + $i1";
    "i6 = i5 + $i1"->"$d7 = staticinvoke <java.lang.StrictMath: double rint(double)>(d0)";
    "$d7 = staticinvoke <java.lang.StrictMath: double rint(double)>(d0)"->"$i2 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", d0, $d7, d2)";
    "$i2 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", d0, $d7, d2)"->"i7 = i6 + $i2";
    "i7 = i6 + $i2"->"$d9 = neg d0";
    "$d9 = neg d0"->"$d8 = neg d0";
    "$d8 = neg d0"->"$d10 = staticinvoke <java.lang.StrictMath: double rint(double)>($d8)";
    "$d10 = staticinvoke <java.lang.StrictMath: double rint(double)>($d8)"->"$d11 = neg d2";
    "$d11 = neg d2"->"$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", $d9, $d10, $d11)";
    "$i3 = staticinvoke <javaT.lang.Math.Tests: int test(java.lang.String,double,double,double)>(\"StrictMath.rint\", $d9, $d10, $d11)"->"i8 = i7 + $i3";
    "i8 = i7 + $i3"->"return i8";
}
