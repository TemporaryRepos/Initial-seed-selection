digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 = -149;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 > 127 goto $r0 = new java.math.BigDecimal;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
f1 = staticinvoke <java.lang.Math: float scalb(float,int)>(1.0F, i0);
$r6 = new java.math.BigDecimal;
$d1 = (double) f1;
specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>($d1);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$f2 = neg f1;
$f3 = staticinvoke <java.lang.Math: float nextUp(float)>($f2);
$f4 = neg $f3;
$f5 = staticinvoke <java.lang.Math: float ulp(float)>($f4);
$d2 = (double) $f5;
specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d2);
$r9 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9);
r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10);
$r12 = new java.math.BigDecimal;
$f6 = staticinvoke <java.lang.Math: float ulp(float)>(f1);
$d3 = (double) $f6;
specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d3);
$r13 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14);
$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r16);
$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r17);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(3.4028234663852886E38);
$r1 = new java.math.BigDecimal;
$f0 = staticinvoke <java.lang.Math: float ulp(float)>(3.4028235E38F);
$d0 = (double) $f0;
specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0);
$r2 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r3 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);
$r4 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r3);
$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r5);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 = -149;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 > 127 goto $r0 = new java.math.BigDecimal;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 > 127 goto $r0 = new java.math.BigDecimal;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
f1 = staticinvoke <java.lang.Math: float scalb(float,int)>(1.0F, i0);
$r6 = new java.math.BigDecimal;
$d1 = (double) f1;
specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>($d1);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$f2 = neg f1;
$f3 = staticinvoke <java.lang.Math: float nextUp(float)>($f2);
$f4 = neg $f3;
$f5 = staticinvoke <java.lang.Math: float ulp(float)>($f4);
$d2 = (double) $f5;
specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d2);
$r9 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9);
r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10);
$r12 = new java.math.BigDecimal;
$f6 = staticinvoke <java.lang.Math: float ulp(float)>(f1);
$d3 = (double) $f6;
specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d3);
$r13 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14);
$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r16);
$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r17);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 > 127 goto $r0 = new java.math.BigDecimal;
"->"Block 3:
[preds: 1 ] [succs: ]
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(3.4028234663852886E38);
$r1 = new java.math.BigDecimal;
$f0 = staticinvoke <java.lang.Math: float ulp(float)>(3.4028235E38F);
$d0 = (double) $f0;
specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0);
$r2 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r3 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r2);
$r4 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r3);
$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r5);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
f1 = staticinvoke <java.lang.Math: float scalb(float,int)>(1.0F, i0);
$r6 = new java.math.BigDecimal;
$d1 = (double) f1;
specialinvoke $r6.<java.math.BigDecimal: void <init>(double)>($d1);
r7 = $r6;
$r8 = new java.math.BigDecimal;
$f2 = neg f1;
$f3 = staticinvoke <java.lang.Math: float nextUp(float)>($f2);
$f4 = neg $f3;
$f5 = staticinvoke <java.lang.Math: float ulp(float)>($f4);
$d2 = (double) $f5;
specialinvoke $r8.<java.math.BigDecimal: void <init>(double)>($d2);
$r9 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r10 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9);
r11 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r10);
$r12 = new java.math.BigDecimal;
$f6 = staticinvoke <java.lang.Math: float ulp(float)>(f1);
$d3 = (double) $f6;
specialinvoke $r12.<java.math.BigDecimal: void <init>(double)>($d3);
$r13 = <javaT.lang.Float.ParseFloat: java.math.BigDecimal HALF>;
$r14 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r13);
r15 = virtualinvoke r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r14);
$r16 = virtualinvoke r11.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r16);
$r17 = virtualinvoke r15.<java.math.BigDecimal: java.lang.String toString()>();
staticinvoke <javaT.lang.Float.ParseFloat: void check(java.lang.String)>($r17);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 > 127 goto $r0 = new java.math.BigDecimal;
";
}
