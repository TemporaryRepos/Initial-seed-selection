digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"
    "i0 = 0"
    "if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()"
    "virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>()"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.nio.channels.Selector: void close()>()"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "throw r3"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()";
    "r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"->"i0 = 0";
    "r0 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>()"->"$r2 := @caughtexception";
    "i0 = 0"->"if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()";
    "i0 = 0"->"$r2 := @caughtexception";
    "if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>()";
    "if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()"->"virtualinvoke r0.<java.nio.channels.Selector: void close()>()";
    "if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()"->"$r2 := @caughtexception";
    "virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>()"->"i0 = i0 + 1";
    "virtualinvoke r0.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>()"->"$r2 := @caughtexception";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "i0 = i0 + 1"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i0 >= 10000 goto virtualinvoke r0.<java.nio.channels.Selector: void close()>()";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "virtualinvoke r0.<java.nio.channels.Selector: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r0.<java.nio.channels.Selector: void close()>()";
    "virtualinvoke r0.<java.nio.channels.Selector: void close()>()"->"throw r3";
}
