digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName;
specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
$r2 = new java.lang.SecurityManager;
specialinvoke $r2.<java.lang.SecurityManager: void <init>()>();
r3 = $r2;
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3);
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null);
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r4 = new java.lang.Exception;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\");
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r4;
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\");
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r7 = new java.lang.Exception;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\");
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r7;
"
    "Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName;
specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
$r2 = new java.lang.SecurityManager;
specialinvoke $r2.<java.lang.SecurityManager: void <init>()>();
r3 = $r2;
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3);
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null);
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r8 := @parameter0: java.lang.String[];
$r0 = new javaT.securityT.BasicPermission.NullOrEmptyName;
specialinvoke $r0.<javaT.securityT.BasicPermission.NullOrEmptyName: void <init>()>();
r1 = $r0;
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
$r2 = new java.lang.SecurityManager;
specialinvoke $r2.<java.lang.SecurityManager: void <init>()>();
r3 = $r2;
staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3);
virtualinvoke r1.<javaT.securityT.BasicPermission.NullOrEmptyName: void run()>();
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null);
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$r4 = new java.lang.Exception;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(null);
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r4 = new java.lang.Exception;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\");
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$r4 = new java.lang.Exception;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\");
"->"Block 4:
[preds: 3 ] [succs: 5 ]
throw $r4;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected NullPointerException not thrown\");
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
throw $r4;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\");
";
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: 6 10 ]
$r6 := @caughtexception;
r9 = $r6;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\");
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
$r7 = new java.lang.Exception;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
virtualinvoke r3.<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>(\"\");
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r7 = new java.lang.Exception;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\");
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r7 = new java.lang.Exception;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\");
"->"Block 9:
[preds: 8 ] [succs: 10 ]
throw $r7;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>(\"Expected IllegalArgumentException not thrown\");
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
throw $r7;
"->"Block 10:
[preds: 5 6 7 8 9 ] [succs: ]
$r5 := @caughtexception;
r10 = $r5;
return;
";
}
