digraph "unitGraph" {
    "r22 := @parameter0: java.lang.String[]"
    "i2 = 0"
    "$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"
    "$i0 = lengthof $r0"
    "if i2 >= $i0 goto return"
    "$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"
    "$r2 = $r1[i2]"
    "r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2)"
    "i3 = 0"
    "$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"
    "$r5 = $r4[i2]"
    "$i1 = lengthof $r5"
    "if i3 >= $i1 goto i2 = i2 + 1"
    "$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"
    "$r7 = $r6[i2]"
    "$r8 = $r7[i3]"
    "$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8)"
    "$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9)"
    "if $z0 == 0 goto $r10 = new java.lang.Exception"
    "goto [?= i3 = i3 + 1]"
    "$r10 = new java.lang.Exception"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: charset \")"
    "$r13 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"
    "$r14 = $r13[i2]"
    "$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"doesn\'t contain \")"
    "$r17 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"
    "$r18 = $r17[i2]"
    "$r19 = $r18[i3]"
    "$r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r21)"
    "throw $r10"
    "i3 = i3 + 1"
    "goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>]"
    "i2 = i2 + 1"
    "goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>]"
    "return"
    "r22 := @parameter0: java.lang.String[]"->"i2 = 0";
    "i2 = 0"->"$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>";
    "$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i2 >= $i0 goto return";
    "if i2 >= $i0 goto return"->"$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>";
    "if i2 >= $i0 goto return"->"return";
    "$r1 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"->"$r2 = $r1[i2]";
    "$r2 = $r1[i2]"->"r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2)";
    "r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2)"->"i3 = 0";
    "i3 = 0"->"$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>";
    "$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"->"$r5 = $r4[i2]";
    "$r5 = $r4[i2]"->"$i1 = lengthof $r5";
    "$i1 = lengthof $r5"->"if i3 >= $i1 goto i2 = i2 + 1";
    "if i3 >= $i1 goto i2 = i2 + 1"->"$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>";
    "if i3 >= $i1 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r6 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"->"$r7 = $r6[i2]";
    "$r7 = $r6[i2]"->"$r8 = $r7[i3]";
    "$r8 = $r7[i3]"->"$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8)";
    "$r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r8)"->"$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9)";
    "$z0 = virtualinvoke r3.<java.nio.charset.Charset: boolean contains(java.nio.charset.Charset)>($r9)"->"if $z0 == 0 goto $r10 = new java.lang.Exception";
    "if $z0 == 0 goto $r10 = new java.lang.Exception"->"goto [?= i3 = i3 + 1]";
    "if $z0 == 0 goto $r10 = new java.lang.Exception"->"$r10 = new java.lang.Exception";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$r10 = new java.lang.Exception"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: charset \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: charset \")"->"$r13 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>";
    "$r13 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>"->"$r14 = $r13[i2]";
    "$r14 = $r13[i2]"->"$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)";
    "$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"doesn\'t contain \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"doesn\'t contain \")"->"$r17 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>";
    "$r17 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>"->"$r18 = $r17[i2]";
    "$r18 = $r17[i2]"->"$r19 = $r18[i3]";
    "$r19 = $r18[i3]"->"$r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)";
    "$r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r21)";
    "specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r21)"->"throw $r10";
    "i3 = i3 + 1"->"goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>]";
    "goto [?= $r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>]"->"$r4 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[][] contains>";
    "i2 = i2 + 1"->"goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>]";
    "goto [?= $r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>]"->"$r0 = <javaT.nio.charset.Charset.CharsetContainmentTest: java.lang.String[] encodings>";
}
