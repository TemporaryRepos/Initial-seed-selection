digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.reflect.AccessibleObject[];
r1 := @parameter1: java.lang.reflect.AccessibleObject[];
r25 = r0;
i3 = lengthof r25;
i4 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto r27 = r1;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r26 = r25[i4];
virtualinvoke r26.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(0);
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r27 = r1;
i5 = lengthof r27;
i6 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i6 >= i5 goto r29 = r0;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
r28 = r27[i6];
virtualinvoke r28.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
r29 = r0;
i7 = lengthof r29;
i8 = 0;
"
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i8 >= i7 goto r31 = r1;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r30 = r29[i8];
$z2 = virtualinvoke r30.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z2 == 0 goto i8 = i8 + 1;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should not be accessible\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);
throw $r20;
"
    "Block 10:
[preds: 8 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 7 ] [succs: 12 ]
r31 = r1;
i9 = lengthof r31;
i10 = 0;
"
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i10 >= i9 goto i11 = 0;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r32 = r31[i10];
$z1 = virtualinvoke r32.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z1 != 0 goto i10 = i10 + 1;
"
    "Block 14:
[preds: 13 ] [succs: ]
$r15 = new java.lang.RuntimeException;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be accessible\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);
throw $r15;
"
    "Block 15:
[preds: 13 ] [succs: 12 ]
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 16:
[preds: 12 ] [succs: 17 ]
i11 = 0;
"
    "Block 17:
[preds: 16 20 ] [succs: 18 21 ]
$i0 = lengthof r0;
if i11 >= $i0 goto i12 = 0;
"
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
$r5 = r0[i11];
$r4 = r1[i11];
$z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
if $z0 != 0 goto i11 = i11 + 1;
"
    "Block 19:
[preds: 18 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = r0[i11];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \");
$r11 = r1[i11];
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be equal()\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);
throw $r6;
"
    "Block 20:
[preds: 18 ] [succs: 17 ]
i11 = i11 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 21:
[preds: 17 ] [succs: 22 ]
i12 = 0;
"
    "Block 22:
[preds: 21 23 ] [succs: 23 24 ]
$i1 = lengthof r0;
if i12 >= $i1 goto i13 = 0;
"
    "Block 23:
[preds: 22 ] [succs: 22 ]
r0[i12] = null;
i12 = i12 + 1;
goto [?= $i1 = lengthof r0];
"
    "Block 24:
[preds: 22 ] [succs: 25 ]
i13 = 0;
"
    "Block 25:
[preds: 24 28 ] [succs: 26 29 ]
$i2 = lengthof r1;
if i13 >= $i2 goto return;
"
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
$r2 = r1[i13];
if $r2 != null goto i13 = i13 + 1;
"
    "Block 27:
[preds: 26 ] [succs: ]
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Detected sharing of AccessibleObject arrays\");
throw $r3;
"
    "Block 28:
[preds: 26 ] [succs: 25 ]
i13 = i13 + 1;
goto [?= $i2 = lengthof r1];
"
    "Block 29:
[preds: 25 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.reflect.AccessibleObject[];
r1 := @parameter1: java.lang.reflect.AccessibleObject[];
r25 = r0;
i3 = lengthof r25;
i4 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto r27 = r1;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto r27 = r1;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r26 = r25[i4];
virtualinvoke r26.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(0);
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto r27 = r1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r27 = r1;
i5 = lengthof r27;
i6 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r26 = r25[i4];
virtualinvoke r26.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(0);
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto r27 = r1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r27 = r1;
i5 = lengthof r27;
i6 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i6 >= i5 goto r29 = r0;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i6 >= i5 goto r29 = r0;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
r28 = r27[i6];
virtualinvoke r28.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i6 >= i5 goto r29 = r0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
r29 = r0;
i7 = lengthof r29;
i8 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
r28 = r27[i6];
virtualinvoke r28.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i6 >= i5 goto r29 = r0;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
r29 = r0;
i7 = lengthof r29;
i8 = 0;
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i8 >= i7 goto r31 = r1;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i8 >= i7 goto r31 = r1;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
r30 = r29[i8];
$z2 = virtualinvoke r30.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z2 == 0 goto i8 = i8 + 1;
";
    "Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i8 >= i7 goto r31 = r1;
"->"Block 11:
[preds: 7 ] [succs: 12 ]
r31 = r1;
i9 = lengthof r31;
i10 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r30 = r29[i8];
$z2 = virtualinvoke r30.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z2 == 0 goto i8 = i8 + 1;
"->"Block 9:
[preds: 8 ] [succs: ]
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should not be accessible\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);
throw $r20;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r30 = r29[i8];
$z2 = virtualinvoke r30.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z2 == 0 goto i8 = i8 + 1;
"->"Block 10:
[preds: 8 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 10 ] [succs: 8 11 ]
if i8 >= i7 goto r31 = r1;
";
    "Block 11:
[preds: 7 ] [succs: 12 ]
r31 = r1;
i9 = lengthof r31;
i10 = 0;
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i10 >= i9 goto i11 = 0;
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i10 >= i9 goto i11 = 0;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
r32 = r31[i10];
$z1 = virtualinvoke r32.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z1 != 0 goto i10 = i10 + 1;
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i10 >= i9 goto i11 = 0;
"->"Block 16:
[preds: 12 ] [succs: 17 ]
i11 = 0;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r32 = r31[i10];
$z1 = virtualinvoke r32.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z1 != 0 goto i10 = i10 + 1;
"->"Block 14:
[preds: 13 ] [succs: ]
$r15 = new java.lang.RuntimeException;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be accessible\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);
throw $r15;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r32 = r31[i10];
$z1 = virtualinvoke r32.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();
if $z1 != 0 goto i10 = i10 + 1;
"->"Block 15:
[preds: 13 ] [succs: 12 ]
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 15:
[preds: 13 ] [succs: 12 ]
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i10 >= i9 goto i11 = 0;
";
    "Block 16:
[preds: 12 ] [succs: 17 ]
i11 = 0;
"->"Block 17:
[preds: 16 20 ] [succs: 18 21 ]
$i0 = lengthof r0;
if i11 >= $i0 goto i12 = 0;
";
    "Block 17:
[preds: 16 20 ] [succs: 18 21 ]
$i0 = lengthof r0;
if i11 >= $i0 goto i12 = 0;
"->"Block 18:
[preds: 17 ] [succs: 19 20 ]
$r5 = r0[i11];
$r4 = r1[i11];
$z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
if $z0 != 0 goto i11 = i11 + 1;
";
    "Block 17:
[preds: 16 20 ] [succs: 18 21 ]
$i0 = lengthof r0;
if i11 >= $i0 goto i12 = 0;
"->"Block 21:
[preds: 17 ] [succs: 22 ]
i12 = 0;
";
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
$r5 = r0[i11];
$r4 = r1[i11];
$z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
if $z0 != 0 goto i11 = i11 + 1;
"->"Block 19:
[preds: 18 ] [succs: ]
$r6 = new java.lang.RuntimeException;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = r0[i11];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \");
$r11 = r1[i11];
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be equal()\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);
throw $r6;
";
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
$r5 = r0[i11];
$r4 = r1[i11];
$z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
if $z0 != 0 goto i11 = i11 + 1;
"->"Block 20:
[preds: 18 ] [succs: 17 ]
i11 = i11 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 20:
[preds: 18 ] [succs: 17 ]
i11 = i11 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 17:
[preds: 16 20 ] [succs: 18 21 ]
$i0 = lengthof r0;
if i11 >= $i0 goto i12 = 0;
";
    "Block 21:
[preds: 17 ] [succs: 22 ]
i12 = 0;
"->"Block 22:
[preds: 21 23 ] [succs: 23 24 ]
$i1 = lengthof r0;
if i12 >= $i1 goto i13 = 0;
";
    "Block 22:
[preds: 21 23 ] [succs: 23 24 ]
$i1 = lengthof r0;
if i12 >= $i1 goto i13 = 0;
"->"Block 23:
[preds: 22 ] [succs: 22 ]
r0[i12] = null;
i12 = i12 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 22:
[preds: 21 23 ] [succs: 23 24 ]
$i1 = lengthof r0;
if i12 >= $i1 goto i13 = 0;
"->"Block 24:
[preds: 22 ] [succs: 25 ]
i13 = 0;
";
    "Block 23:
[preds: 22 ] [succs: 22 ]
r0[i12] = null;
i12 = i12 + 1;
goto [?= $i1 = lengthof r0];
"->"Block 22:
[preds: 21 23 ] [succs: 23 24 ]
$i1 = lengthof r0;
if i12 >= $i1 goto i13 = 0;
";
    "Block 24:
[preds: 22 ] [succs: 25 ]
i13 = 0;
"->"Block 25:
[preds: 24 28 ] [succs: 26 29 ]
$i2 = lengthof r1;
if i13 >= $i2 goto return;
";
    "Block 25:
[preds: 24 28 ] [succs: 26 29 ]
$i2 = lengthof r1;
if i13 >= $i2 goto return;
"->"Block 26:
[preds: 25 ] [succs: 27 28 ]
$r2 = r1[i13];
if $r2 != null goto i13 = i13 + 1;
";
    "Block 25:
[preds: 24 28 ] [succs: 26 29 ]
$i2 = lengthof r1;
if i13 >= $i2 goto return;
"->"Block 29:
[preds: 25 ] [succs: ]
return;
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
$r2 = r1[i13];
if $r2 != null goto i13 = i13 + 1;
"->"Block 27:
[preds: 26 ] [succs: ]
$r3 = new java.lang.RuntimeException;
specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Detected sharing of AccessibleObject arrays\");
throw $r3;
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
$r2 = r1[i13];
if $r2 != null goto i13 = i13 + 1;
"->"Block 28:
[preds: 26 ] [succs: 25 ]
i13 = i13 + 1;
goto [?= $i2 = lengthof r1];
";
    "Block 28:
[preds: 26 ] [succs: 25 ]
i13 = i13 + 1;
goto [?= $i2 = lengthof r1];
"->"Block 25:
[preds: 24 28 ] [succs: 26 29 ]
$i2 = lengthof r1;
if i13 >= $i2 goto return;
";
}
