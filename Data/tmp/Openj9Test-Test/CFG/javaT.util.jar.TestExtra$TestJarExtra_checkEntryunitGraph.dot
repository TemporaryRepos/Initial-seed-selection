digraph "unitGraph" {
    "r0 := @this: javaT.util.jar.TestExtra$TestJarExtra"
    "r1 := @parameter0: java.util.zip.ZipEntry"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "if i0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"
    "r2 = virtualinvoke r1.<java.util.zip.ZipEntry: byte[] getExtra()>()"
    "r3 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: byte[] getField(int,byte[])>(51966, r2)"
    "if r3 == null goto $z2 = 0"
    "$z2 = 1"
    "goto [?= $z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")]"
    "$z2 = 0"
    "$z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")"
    "if $z0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"
    "$i2 = lengthof r3"
    "if $i2 == 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")]"
    "$z3 = 0"
    "staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")"
    "specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"
    "return"
    "r0 := @this: javaT.util.jar.TestExtra$TestJarExtra"->"r1 := @parameter0: java.util.zip.ZipEntry";
    "r1 := @parameter0: java.util.zip.ZipEntry"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"if i0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)";
    "if i0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"->"r2 = virtualinvoke r1.<java.util.zip.ZipEntry: byte[] getExtra()>()";
    "if i0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"->"specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)";
    "r2 = virtualinvoke r1.<java.util.zip.ZipEntry: byte[] getExtra()>()"->"r3 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: byte[] getField(int,byte[])>(51966, r2)";
    "r3 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: byte[] getField(int,byte[])>(51966, r2)"->"if r3 == null goto $z2 = 0";
    "if r3 == null goto $z2 = 0"->"$z2 = 1";
    "if r3 == null goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= $z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")]";
    "goto [?= $z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")]"->"$z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")";
    "$z2 = 0"->"$z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")";
    "$z0 = staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z2, \"unexpected null data for JAR_MAGIC\")"->"if $z0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)";
    "if $z0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"->"$i2 = lengthof r3";
    "if $z0 != 0 goto specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"->"specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)";
    "$i2 = lengthof r3"->"if $i2 == 0 goto $z3 = 0";
    "if $i2 == 0 goto $z3 = 0"->"$z3 = 1";
    "if $i2 == 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")]";
    "goto [?= staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")]"->"staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")";
    "$z3 = 0"->"staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")";
    "staticinvoke <javaT.util.jar.TestExtra$TestJarExtra: boolean check(boolean,java.lang.String)>($z3, \"unexpected non-zero data length for JAR_MAGIC\")"->"specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)";
    "specialinvoke r0.<javaT.util.jar.TestExtra: void checkEntry(java.util.zip.ZipEntry,int,int)>(r1, i0, i1)"->"return";
}
