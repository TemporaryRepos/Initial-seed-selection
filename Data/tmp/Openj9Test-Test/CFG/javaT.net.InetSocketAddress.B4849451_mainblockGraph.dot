digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"unresolveable\", 10);
r1 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"UNRESOLVEABLE\", 10);
$z0 = virtualinvoke r0.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be equal\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r2;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"unresolveable\", 10);
r1 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"UNRESOLVEABLE\", 10);
$z0 = virtualinvoke r0.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" and \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" should be equal\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
throw $r2;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"unresolveable\", 10);
r1 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(\"UNRESOLVEABLE\", 10);
$z0 = virtualinvoke r0.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>(r1);
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
