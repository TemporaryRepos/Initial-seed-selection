digraph "unitGraph" {
    "r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer"
    "i0 := @parameter0: int"
    "r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0"
    "z0 = 0"
    "$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"
    "$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"
    "r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, 0, i0)"
    "if r3 == null goto $r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"
    "$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"
    "$i3 = lengthof r3"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r9, 0, $i3)"
    "$i5 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"
    "$i4 = lengthof r3"
    "$i6 = $i5 + $i4"
    "r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i6"
    "$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"
    "$r6 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"
    "$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"
    "$i1 = lengthof $r4"
    "$i2 = $i1 - i0"
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>"
    "i13 = virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r6, i0, $i2, $r5)"
    "$r8 = new java.lang.Exception"
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\")"
    "throw $r8"
    "$r10 := @caughtexception"
    "r11 = $r10"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\")"
    "$r16 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"
    "$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"
    "$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"
    "$i7 = lengthof $r13"
    "$i9 = $i7 - i0"
    "$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"
    "$i8 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"
    "i14 = virtualinvoke $r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r15, i0, $i9, $r14, $i8)"
    "$r17 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"
    "$i12 = lengthof $r17"
    "$i10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"
    "$i11 = i14 + $i10"
    "if $i12 == $i11 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()"
    "$r18 = new java.lang.Exception"
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Wrong number of output bytes\")"
    "throw $r18"
    "specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()"
    "return"
    "r0 := @this: com.sun.crypto.provider.Cipher.AES.TestShortBuffer"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0";
    "r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = 0"->"z0 = 0";
    "z0 = 0"->"$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>";
    "$r2 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>";
    "$r1 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, 0, i0)";
    "r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, 0, i0)"->"if r3 == null goto $r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>";
    "if r3 == null goto $r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>";
    "if r3 == null goto $r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>";
    "if r3 == null goto $r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r10 := @caughtexception";
    "$r9 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"->"$i3 = lengthof r3";
    "$i3 = lengthof r3"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r9, 0, $i3)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r9, 0, $i3)"->"$i5 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>";
    "$i5 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"->"$i4 = lengthof r3";
    "$i4 = lengthof r3"->"$i6 = $i5 + $i4";
    "$i6 = $i5 + $i4"->"r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i6";
    "r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i6"->"$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>";
    "r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset> = $i6"->"$r10 := @caughtexception";
    "$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r6 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>";
    "$r7 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r10 := @caughtexception";
    "$r6 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>";
    "$r6 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$r10 := @caughtexception";
    "$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$i1 = lengthof $r4";
    "$r4 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$r10 := @caughtexception";
    "$i1 = lengthof $r4"->"$i2 = $i1 - i0";
    "$i1 = lengthof $r4"->"$r10 := @caughtexception";
    "$i2 = $i1 - i0"->"$r5 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>";
    "$i2 = $i1 - i0"->"$r10 := @caughtexception";
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>"->"i13 = virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r6, i0, $i2, $r5)";
    "$r5 = <com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] SHORTBUFFER>"->"$r10 := @caughtexception";
    "i13 = virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r6, i0, $i2, $r5)"->"$r8 = new java.lang.Exception";
    "i13 = virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r6, i0, $i2, $r5)"->"$r10 := @caughtexception";
    "$r8 = new java.lang.Exception"->"specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\")";
    "$r8 = new java.lang.Exception"->"$r10 := @caughtexception";
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\")"->"throw $r8";
    "specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(\"Should throw ShortBufferException!\")"->"$r10 := @caughtexception";
    "throw $r8"->"$r10 := @caughtexception";
    "$r10 := @caughtexception"->"r11 = $r10";
    "r11 = $r10"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\")";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Expected SBE thrown....\")"->"$r16 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>";
    "$r16 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: javax.crypto.Cipher ci>"->"$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>";
    "$r15 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>";
    "$r13 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] in>"->"$i7 = lengthof $r13";
    "$i7 = lengthof $r13"->"$i9 = $i7 - i0";
    "$i9 = $i7 - i0"->"$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>";
    "$r14 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"->"$i8 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>";
    "$i8 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"->"i14 = virtualinvoke $r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r15, i0, $i9, $r14, $i8)";
    "i14 = virtualinvoke $r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r15, i0, $i9, $r14, $i8)"->"$r17 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>";
    "$r17 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: byte[] out>"->"$i12 = lengthof $r17";
    "$i12 = lengthof $r17"->"$i10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>";
    "$i10 = r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: int outOffset>"->"$i11 = i14 + $i10";
    "$i11 = i14 + $i10"->"if $i12 == $i11 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()";
    "if $i12 == $i11 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()"->"$r18 = new java.lang.Exception";
    "if $i12 == $i11 goto specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()"->"specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()";
    "$r18 = new java.lang.Exception"->"specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Wrong number of output bytes\")";
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Wrong number of output bytes\")"->"throw $r18";
    "specialinvoke r0.<com.sun.crypto.provider.Cipher.AES.TestShortBuffer: void checkOutput()>()"->"return";
}
