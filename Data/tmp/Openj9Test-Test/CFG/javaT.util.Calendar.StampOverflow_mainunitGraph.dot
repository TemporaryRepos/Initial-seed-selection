digraph "unitGraph" {
    "r9 := @parameter0: java.lang.String[]"
    "$r0 = class \"Ljava/util/Calendar;\""
    "r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"nextStamp\")"
    "goto [?= virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)]"
    "$r7 := @caughtexception"
    "r11 = $r7"
    "$r8 = new java.lang.RuntimeException"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"implementation changed?\", r11)"
    "throw $r8"
    "virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)"
    "$r1 = new java.util.GregorianCalendar"
    "specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()"
    "r12 = $r1"
    "i0 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)"
    "virtualinvoke r10.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r12, 2147483547)"
    "i2 = 0"
    "if i2 >= 1000 goto return"
    "staticinvoke <javaT.util.Calendar.StampOverflow: void invoke(java.util.Calendar)>(r12)"
    "i1 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)"
    "if i1 >= i0 goto i2 = i2 + 1"
    "$r2 = new java.lang.RuntimeException"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"invalid nextStamp: \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"
    "throw $r2"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "return"
    "r9 := @parameter0: java.lang.String[]"->"$r0 = class \"Ljava/util/Calendar;\"";
    "r9 := @parameter0: java.lang.String[]"->"$r7 := @caughtexception";
    "$r0 = class \"Ljava/util/Calendar;\""->"r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"nextStamp\")";
    "$r0 = class \"Ljava/util/Calendar;\""->"$r7 := @caughtexception";
    "r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"nextStamp\")"->"goto [?= virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)]";
    "r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"nextStamp\")"->"$r7 := @caughtexception";
    "goto [?= virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)]"->"virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)";
    "$r7 := @caughtexception"->"r11 = $r7";
    "r11 = $r7"->"$r8 = new java.lang.RuntimeException";
    "$r8 = new java.lang.RuntimeException"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"implementation changed?\", r11)";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"implementation changed?\", r11)"->"throw $r8";
    "virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1)"->"$r1 = new java.util.GregorianCalendar";
    "$r1 = new java.util.GregorianCalendar"->"specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()";
    "specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>()"->"r12 = $r1";
    "r12 = $r1"->"i0 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)";
    "i0 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)"->"virtualinvoke r10.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r12, 2147483547)";
    "virtualinvoke r10.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r12, 2147483547)"->"i2 = 0";
    "i2 = 0"->"if i2 >= 1000 goto return";
    "if i2 >= 1000 goto return"->"staticinvoke <javaT.util.Calendar.StampOverflow: void invoke(java.util.Calendar)>(r12)";
    "if i2 >= 1000 goto return"->"return";
    "staticinvoke <javaT.util.Calendar.StampOverflow: void invoke(java.util.Calendar)>(r12)"->"i1 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)";
    "i1 = virtualinvoke r10.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r12)"->"if i1 >= i0 goto i2 = i2 + 1";
    "if i1 >= i0 goto i2 = i2 + 1"->"$r2 = new java.lang.RuntimeException";
    "if i1 >= i0 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r2 = new java.lang.RuntimeException"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"invalid nextStamp: \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"invalid nextStamp: \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"->"throw $r2";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 1000 goto return";
}
