digraph "unitGraph" {
    "r10 := @this: javaT.lang.reflect.annotationSharing.AnnotationSharing"
    "$r1 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\""
    "$r0 = (java.lang.Class[]) null"
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r0)"
    "$r4 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\""
    "$r3 = (java.lang.Class[]) null"
    "r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r3)"
    "staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateAnnotationSharingIsSafe(java.lang.reflect.AccessibleObject,java.lang.reflect.AccessibleObject)>(r2, r5)"
    "$r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")"
    "$r7 = (javaT.lang.reflect.annotationSharing.Baz) $r6"
    "$r8 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")"
    "$r9 = (javaT.lang.reflect.annotationSharing.Baz) $r8"
    "staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateArrayValues(javaT.lang.reflect.annotationSharing.Baz,javaT.lang.reflect.annotationSharing.Baz)>($r7, $r9)"
    "return"
    "r10 := @this: javaT.lang.reflect.annotationSharing.AnnotationSharing"->"$r1 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\"";
    "$r1 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\""->"$r0 = (java.lang.Class[]) null";
    "$r0 = (java.lang.Class[]) null"->"r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r0)";
    "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r0)"->"$r4 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\"";
    "$r4 = class \"LjavaT/lang/reflect/annotationSharing/AnnotationSharing;\""->"$r3 = (java.lang.Class[]) null";
    "$r3 = (java.lang.Class[]) null"->"r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r3)";
    "r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(\"m\", $r3)"->"staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateAnnotationSharingIsSafe(java.lang.reflect.AccessibleObject,java.lang.reflect.AccessibleObject)>(r2, r5)";
    "staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateAnnotationSharingIsSafe(java.lang.reflect.AccessibleObject,java.lang.reflect.AccessibleObject)>(r2, r5)"->"$r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")";
    "$r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")"->"$r7 = (javaT.lang.reflect.annotationSharing.Baz) $r6";
    "$r7 = (javaT.lang.reflect.annotationSharing.Baz) $r6"->"$r8 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")";
    "$r8 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/annotationSharing/Baz;\")"->"$r9 = (javaT.lang.reflect.annotationSharing.Baz) $r8";
    "$r9 = (javaT.lang.reflect.annotationSharing.Baz) $r8"->"staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateArrayValues(javaT.lang.reflect.annotationSharing.Baz,javaT.lang.reflect.annotationSharing.Baz)>($r7, $r9)";
    "staticinvoke <javaT.lang.reflect.annotationSharing.AnnotationSharing: void validateArrayValues(javaT.lang.reflect.annotationSharing.Baz,javaT.lang.reflect.annotationSharing.Baz)>($r7, $r9)"->"return";
}
