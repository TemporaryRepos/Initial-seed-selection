digraph "unitGraph" {
    "i5 = 0"
    "$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"
    "$i0 = lengthof $r0"
    "if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")"
    "$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"
    "r2 = $r1[i5]"
    "$r3 = new java.lang.StringBuffer"
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()"
    "r4 = $r3"
    "i6 = 0"
    "$i1 = virtualinvoke r2.<java.lang.String: int length()>()"
    "if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"
    "i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6)"
    "r11 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i2)"
    "if r4 == r11 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")]"
    "$z1 = 0"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")"
    "i3 = virtualinvoke r4.<java.lang.StringBuffer: int codePointAt(int)>(i6)"
    "if i3 == i2 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)]"
    "$z2 = 0"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)"
    "$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2)"
    "i6 = i6 + $i4"
    "goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()]"
    "$r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5)"
    "if $z0 != 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= $r6 = new java.lang.StringBuilder]"
    "$z3 = 0"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z3, $r10)"
    "i5 = i5 + 1"
    "goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")"
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(1114112, class \"Ljava/lang/IllegalArgumentException;\")"
    "return"
    "i5 = 0"->"$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
    "$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")";
    "if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")"->"$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
    "if i5 >= $i0 goto staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")";
    "$r1 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>"->"r2 = $r1[i5]";
    "r2 = $r1[i5]"->"$r3 = new java.lang.StringBuffer";
    "$r3 = new java.lang.StringBuffer"->"specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"i6 = 0";
    "i6 = 0"->"$i1 = virtualinvoke r2.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r2.<java.lang.String: int length()>()"->"if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()";
    "if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6)";
    "if i6 >= $i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()";
    "i2 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(i6)"->"r11 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i2)";
    "r11 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>(i2)"->"if r4 == r11 goto $z1 = 0";
    "if r4 == r11 goto $z1 = 0"->"$z1 = 1";
    "if r4 == r11 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")]";
    "goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")]"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")";
    "$z1 = 0"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z1, \"appendCodePoint returned a wrong object\")"->"i3 = virtualinvoke r4.<java.lang.StringBuffer: int codePointAt(int)>(i6)";
    "i3 = virtualinvoke r4.<java.lang.StringBuffer: int codePointAt(int)>(i6)"->"if i3 == i2 goto $z2 = 0";
    "if i3 == i2 goto $z2 = 0"->"$z2 = 1";
    "if i3 == i2 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)]";
    "goto [?= staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)]"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)";
    "$z2 = 0"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String,int,int)>($z2, \"appendCodePoint(j) != c\", i3, i2)"->"$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2)";
    "$i4 = staticinvoke <java.lang.Character: int charCount(int)>(i2)"->"i6 = i6 + $i4";
    "i6 = i6 + $i4"->"goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()]";
    "goto [?= $i1 = virtualinvoke r2.<java.lang.String: int length()>()]"->"$i1 = virtualinvoke r2.<java.lang.String: int length()>()";
    "$r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5)";
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5)"->"if $z0 != 0 goto $z3 = 0";
    "if $z0 != 0 goto $z3 = 0"->"$z3 = 1";
    "if $z0 != 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= $r6 = new java.lang.StringBuilder]";
    "goto [?= $r6 = new java.lang.StringBuilder]"->"$r6 = new java.lang.StringBuilder";
    "$z3 = 0"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"appendCodePoint() produced a wrong result with input[\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z3, $r10)";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void check(boolean,java.lang.String)>($z3, $r10)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]";
    "goto [?= $r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>]"->"$r0 = <javaT.lang.StringBuffer.Supplementary: java.lang.String[] input>";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(-1, class \"Ljava/lang/IllegalArgumentException;\")"->"staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(1114112, class \"Ljava/lang/IllegalArgumentException;\")";
    "staticinvoke <javaT.lang.StringBuffer.Supplementary: void testAppendCodePoint(int,java.lang.Class)>(1114112, class \"Ljava/lang/IllegalArgumentException;\")"->"return";
}
