digraph "unitGraph" {
    "r1 := @parameter0: java.io.File"
    "r2 := @parameter1: java.nio.charset.Charset"
    "r6 := @parameter2: java.lang.String"
    "r9 := @parameter3: java.lang.String"
    "r12 := @parameter4: byte[]"
    "$r0 = new java.util.zip.ZipFile"
    "specialinvoke $r0.<java.util.zip.ZipFile: void <init>(java.io.File,java.nio.charset.Charset)>(r1, r2)"
    "r3 = $r0"
    "r23 = null"
    "r24 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>()"
    "$r4 = interfaceinvoke r24.<java.util.Enumeration: java.lang.Object nextElement()>()"
    "r5 = (java.util.zip.ZipEntry) $r4"
    "$r7 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getName()>()"
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)"
    "if $z0 == 0 goto $r8 = new java.lang.RuntimeException"
    "$r10 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getComment()>()"
    "$z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"
    "if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"
    "$r8 = new java.lang.RuntimeException"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: name/comment doesn\'t match!\")"
    "throw $r8"
    "r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"
    "if r11 != null goto $i0 = lengthof r12"
    "$r16 = new java.lang.RuntimeException"
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: getIS failed!\")"
    "throw $r16"
    "$i0 = lengthof r12"
    "$i1 = $i0 << 1"
    "r13 = newarray (byte)[$i1]"
    "i6 = 0"
    "z3 = 0"
    "$i2 = lengthof r13"
    "$i3 = $i2 - i6"
    "$i4 = virtualinvoke r11.<java.io.InputStream: int read(byte[],int,int)>(r13, i6, $i3)"
    "i7 = $i4"
    "if $i4 == -1 goto $i5 = lengthof r12"
    "i6 = i6 + i7"
    "goto [?= $i2 = lengthof r13]"
    "$i5 = lengthof r12"
    "if i6 != $i5 goto $r14 = new java.lang.RuntimeException"
    "$r15 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r13, i6)"
    "$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r15)"
    "if $z2 != 0 goto (branch)"
    "$r14 = new java.lang.RuntimeException"
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile content doesn\'t match!\")"
    "throw $r14"
    "if r3 == null goto return"
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"
    "goto [?= return]"
    "$r22 := @caughtexception"
    "r25 = $r22"
    "virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r25)"
    "$r21 := @caughtexception"
    "r26 = $r21"
    "r23 = r26"
    "throw r26"
    "$r20 := @caughtexception"
    "r19 = $r20"
    "if r3 == null goto throw r19"
    "goto [?= throw r19]"
    "$r17 := @caughtexception"
    "r18 = $r17"
    "virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r18)"
    "throw r19"
    "return"
    "r1 := @parameter0: java.io.File"->"r2 := @parameter1: java.nio.charset.Charset";
    "r2 := @parameter1: java.nio.charset.Charset"->"r6 := @parameter2: java.lang.String";
    "r6 := @parameter2: java.lang.String"->"r9 := @parameter3: java.lang.String";
    "r9 := @parameter3: java.lang.String"->"r12 := @parameter4: byte[]";
    "r12 := @parameter4: byte[]"->"$r0 = new java.util.zip.ZipFile";
    "$r0 = new java.util.zip.ZipFile"->"specialinvoke $r0.<java.util.zip.ZipFile: void <init>(java.io.File,java.nio.charset.Charset)>(r1, r2)";
    "specialinvoke $r0.<java.util.zip.ZipFile: void <init>(java.io.File,java.nio.charset.Charset)>(r1, r2)"->"r3 = $r0";
    "r3 = $r0"->"r23 = null";
    "r23 = null"->"$r21 := @caughtexception";
    "r23 = null"->"$r20 := @caughtexception";
    "r23 = null"->"r24 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>()";
    "r24 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>()"->"$r21 := @caughtexception";
    "r24 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>()"->"$r20 := @caughtexception";
    "r24 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>()"->"$r4 = interfaceinvoke r24.<java.util.Enumeration: java.lang.Object nextElement()>()";
    "$r4 = interfaceinvoke r24.<java.util.Enumeration: java.lang.Object nextElement()>()"->"$r21 := @caughtexception";
    "$r4 = interfaceinvoke r24.<java.util.Enumeration: java.lang.Object nextElement()>()"->"$r20 := @caughtexception";
    "$r4 = interfaceinvoke r24.<java.util.Enumeration: java.lang.Object nextElement()>()"->"r5 = (java.util.zip.ZipEntry) $r4";
    "r5 = (java.util.zip.ZipEntry) $r4"->"$r21 := @caughtexception";
    "r5 = (java.util.zip.ZipEntry) $r4"->"$r20 := @caughtexception";
    "r5 = (java.util.zip.ZipEntry) $r4"->"$r7 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getName()>()";
    "$r7 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getName()>()"->"$r21 := @caughtexception";
    "$r7 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getName()>()"->"$r20 := @caughtexception";
    "$r7 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getName()>()"->"$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)";
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)"->"$r21 := @caughtexception";
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)"->"$r20 := @caughtexception";
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)"->"if $z0 == 0 goto $r8 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r8 = new java.lang.RuntimeException"->"$r10 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getComment()>()";
    "if $z0 == 0 goto $r8 = new java.lang.RuntimeException"->"$r8 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r8 = new java.lang.RuntimeException"->"$r21 := @caughtexception";
    "if $z0 == 0 goto $r8 = new java.lang.RuntimeException"->"$r20 := @caughtexception";
    "$r10 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getComment()>()"->"$r21 := @caughtexception";
    "$r10 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getComment()>()"->"$r20 := @caughtexception";
    "$r10 = virtualinvoke r5.<java.util.zip.ZipEntry: java.lang.String getComment()>()"->"$z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)";
    "$z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"$r21 := @caughtexception";
    "$z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"$r20 := @caughtexception";
    "$z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)";
    "if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"$r8 = new java.lang.RuntimeException";
    "if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)";
    "if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"$r21 := @caughtexception";
    "if $z1 != 0 goto r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"$r20 := @caughtexception";
    "$r8 = new java.lang.RuntimeException"->"$r21 := @caughtexception";
    "$r8 = new java.lang.RuntimeException"->"$r20 := @caughtexception";
    "$r8 = new java.lang.RuntimeException"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: name/comment doesn\'t match!\")";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: name/comment doesn\'t match!\")"->"$r21 := @caughtexception";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: name/comment doesn\'t match!\")"->"$r20 := @caughtexception";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: name/comment doesn\'t match!\")"->"throw $r8";
    "throw $r8"->"$r21 := @caughtexception";
    "throw $r8"->"$r20 := @caughtexception";
    "r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"$r21 := @caughtexception";
    "r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"$r20 := @caughtexception";
    "r11 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r5)"->"if r11 != null goto $i0 = lengthof r12";
    "if r11 != null goto $i0 = lengthof r12"->"$r16 = new java.lang.RuntimeException";
    "if r11 != null goto $i0 = lengthof r12"->"$i0 = lengthof r12";
    "if r11 != null goto $i0 = lengthof r12"->"$r21 := @caughtexception";
    "if r11 != null goto $i0 = lengthof r12"->"$r20 := @caughtexception";
    "$r16 = new java.lang.RuntimeException"->"$r21 := @caughtexception";
    "$r16 = new java.lang.RuntimeException"->"$r20 := @caughtexception";
    "$r16 = new java.lang.RuntimeException"->"specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: getIS failed!\")";
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: getIS failed!\")"->"$r21 := @caughtexception";
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: getIS failed!\")"->"$r20 := @caughtexception";
    "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile: getIS failed!\")"->"throw $r16";
    "throw $r16"->"$r21 := @caughtexception";
    "throw $r16"->"$r20 := @caughtexception";
    "$i0 = lengthof r12"->"$r21 := @caughtexception";
    "$i0 = lengthof r12"->"$r20 := @caughtexception";
    "$i0 = lengthof r12"->"$i1 = $i0 << 1";
    "$i1 = $i0 << 1"->"$r21 := @caughtexception";
    "$i1 = $i0 << 1"->"$r20 := @caughtexception";
    "$i1 = $i0 << 1"->"r13 = newarray (byte)[$i1]";
    "r13 = newarray (byte)[$i1]"->"$r21 := @caughtexception";
    "r13 = newarray (byte)[$i1]"->"$r20 := @caughtexception";
    "r13 = newarray (byte)[$i1]"->"i6 = 0";
    "i6 = 0"->"$r21 := @caughtexception";
    "i6 = 0"->"$r20 := @caughtexception";
    "i6 = 0"->"z3 = 0";
    "z3 = 0"->"$r21 := @caughtexception";
    "z3 = 0"->"$r20 := @caughtexception";
    "z3 = 0"->"$i2 = lengthof r13";
    "$i2 = lengthof r13"->"$r21 := @caughtexception";
    "$i2 = lengthof r13"->"$r20 := @caughtexception";
    "$i2 = lengthof r13"->"$i3 = $i2 - i6";
    "$i3 = $i2 - i6"->"$r21 := @caughtexception";
    "$i3 = $i2 - i6"->"$r20 := @caughtexception";
    "$i3 = $i2 - i6"->"$i4 = virtualinvoke r11.<java.io.InputStream: int read(byte[],int,int)>(r13, i6, $i3)";
    "$i4 = virtualinvoke r11.<java.io.InputStream: int read(byte[],int,int)>(r13, i6, $i3)"->"$r21 := @caughtexception";
    "$i4 = virtualinvoke r11.<java.io.InputStream: int read(byte[],int,int)>(r13, i6, $i3)"->"$r20 := @caughtexception";
    "$i4 = virtualinvoke r11.<java.io.InputStream: int read(byte[],int,int)>(r13, i6, $i3)"->"i7 = $i4";
    "i7 = $i4"->"$r21 := @caughtexception";
    "i7 = $i4"->"$r20 := @caughtexception";
    "i7 = $i4"->"if $i4 == -1 goto $i5 = lengthof r12";
    "if $i4 == -1 goto $i5 = lengthof r12"->"i6 = i6 + i7";
    "if $i4 == -1 goto $i5 = lengthof r12"->"$i5 = lengthof r12";
    "if $i4 == -1 goto $i5 = lengthof r12"->"$r21 := @caughtexception";
    "if $i4 == -1 goto $i5 = lengthof r12"->"$r20 := @caughtexception";
    "i6 = i6 + i7"->"$r21 := @caughtexception";
    "i6 = i6 + i7"->"$r20 := @caughtexception";
    "i6 = i6 + i7"->"goto [?= $i2 = lengthof r13]";
    "goto [?= $i2 = lengthof r13]"->"$r21 := @caughtexception";
    "goto [?= $i2 = lengthof r13]"->"$r20 := @caughtexception";
    "goto [?= $i2 = lengthof r13]"->"$i2 = lengthof r13";
    "$i5 = lengthof r12"->"$r21 := @caughtexception";
    "$i5 = lengthof r12"->"$r20 := @caughtexception";
    "$i5 = lengthof r12"->"if i6 != $i5 goto $r14 = new java.lang.RuntimeException";
    "if i6 != $i5 goto $r14 = new java.lang.RuntimeException"->"$r15 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r13, i6)";
    "if i6 != $i5 goto $r14 = new java.lang.RuntimeException"->"$r14 = new java.lang.RuntimeException";
    "if i6 != $i5 goto $r14 = new java.lang.RuntimeException"->"$r21 := @caughtexception";
    "if i6 != $i5 goto $r14 = new java.lang.RuntimeException"->"$r20 := @caughtexception";
    "$r15 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r13, i6)"->"$r21 := @caughtexception";
    "$r15 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r13, i6)"->"$r20 := @caughtexception";
    "$r15 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r13, i6)"->"$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r15)";
    "$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r15)"->"$r21 := @caughtexception";
    "$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r15)"->"$r20 := @caughtexception";
    "$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r15)"->"if $z2 != 0 goto (branch)";
    "if $z2 != 0 goto (branch)"->"$r14 = new java.lang.RuntimeException";
    "if $z2 != 0 goto (branch)"->"if r3 == null goto return";
    "if $z2 != 0 goto (branch)"->"$r21 := @caughtexception";
    "if $z2 != 0 goto (branch)"->"$r20 := @caughtexception";
    "$r14 = new java.lang.RuntimeException"->"$r21 := @caughtexception";
    "$r14 = new java.lang.RuntimeException"->"$r20 := @caughtexception";
    "$r14 = new java.lang.RuntimeException"->"specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile content doesn\'t match!\")";
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile content doesn\'t match!\")"->"$r21 := @caughtexception";
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile content doesn\'t match!\")"->"$r20 := @caughtexception";
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"ZipFile content doesn\'t match!\")"->"throw $r14";
    "throw $r14"->"$r21 := @caughtexception";
    "throw $r14"->"$r20 := @caughtexception";
    "if r3 == null goto return"->"if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r3 == null goto return"->"return";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"$r22 := @caughtexception";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"goto [?= return]";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"$r22 := @caughtexception";
    "goto [?= return]"->"return";
    "$r22 := @caughtexception"->"r25 = $r22";
    "r25 = $r22"->"virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r25)";
    "virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r25)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r21 := @caughtexception"->"r26 = $r21";
    "$r21 := @caughtexception"->"$r20 := @caughtexception";
    "r26 = $r21"->"r23 = r26";
    "r26 = $r21"->"$r20 := @caughtexception";
    "r23 = r26"->"throw r26";
    "r23 = r26"->"$r20 := @caughtexception";
    "throw r26"->"$r20 := @caughtexception";
    "$r20 := @caughtexception"->"r19 = $r20";
    "$r20 := @caughtexception"->"$r20 := @caughtexception";
    "r19 = $r20"->"if r3 == null goto throw r19";
    "r19 = $r20"->"$r20 := @caughtexception";
    "if r3 == null goto throw r19"->"if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r3 == null goto throw r19"->"throw r19";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"virtualinvoke r3.<java.util.zip.ZipFile: void close()>()";
    "if r23 == null goto virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"$r17 := @caughtexception";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"goto [?= throw r19]";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"$r17 := @caughtexception";
    "goto [?= throw r19]"->"throw r19";
    "$r17 := @caughtexception"->"r18 = $r17";
    "r18 = $r17"->"virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r18)";
    "virtualinvoke r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r18)"->"goto [?= throw r19]";
    "goto [?= throw r19]"->"throw r19";
    "virtualinvoke r3.<java.util.zip.ZipFile: void close()>()"->"throw r19";
}
