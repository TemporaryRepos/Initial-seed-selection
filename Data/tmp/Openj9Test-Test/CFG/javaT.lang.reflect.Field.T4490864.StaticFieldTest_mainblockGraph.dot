digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
r0 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"byteField\");
r1 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"shortField\");
r2 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"charField\");
r3 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"intField\");
r4 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"longField\");
r5 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"floatField\");
r6 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"doubleField\");
r7 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"stringField\");
virtualinvoke r0.<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>(null, 77);
virtualinvoke r1.<java.lang.reflect.Field: void setShort(java.lang.Object,short)>(null, 77);
virtualinvoke r2.<java.lang.reflect.Field: void setChar(java.lang.Object,char)>(null, 77);
virtualinvoke r3.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(null, 77);
virtualinvoke r4.<java.lang.reflect.Field: void setLong(java.lang.Object,long)>(null, 77L);
virtualinvoke r5.<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>(null, 77.0F);
virtualinvoke r6.<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>(null, 77.0);
r8 = \"Hello, world\";
virtualinvoke r7.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r8);
$b0 = virtualinvoke r0.<java.lang.reflect.Field: byte getByte(java.lang.Object)>(null);
if $b0 == 77 goto $s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
"
    "Block 1:
[preds: 0 ] [succs: ]
$r17 = new java.lang.RuntimeException;
specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r17;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
if $s1 == 77 goto $c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
"
    "Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.RuntimeException;
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r16;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
if $c2 == 77 goto $i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r15 = new java.lang.RuntimeException;
specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r15;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
if $i3 == 77 goto $l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
"
    "Block 7:
[preds: 6 ] [succs: ]
$r14 = new java.lang.RuntimeException;
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r14;
"
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
$b5 = $l4 cmp 77L;
if $b5 == 0 goto $f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
"
    "Block 9:
[preds: 8 ] [succs: ]
$r13 = new java.lang.RuntimeException;
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r13;
"
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
$b6 = $f0 cmpl 77.0F;
if $b6 == 0 goto $d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
"
    "Block 11:
[preds: 10 ] [succs: ]
$r12 = new java.lang.RuntimeException;
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r12;
"
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
$b7 = $d0 cmpl 77.0;
if $b7 == 0 goto $r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
"
    "Block 13:
[preds: 12 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r11;
"
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
if $r9 == r8 goto return;
"
    "Block 15:
[preds: 14 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r10;
"
    "Block 16:
[preds: 14 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
r0 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"byteField\");
r1 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"shortField\");
r2 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"charField\");
r3 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"intField\");
r4 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"longField\");
r5 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"floatField\");
r6 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"doubleField\");
r7 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"stringField\");
virtualinvoke r0.<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>(null, 77);
virtualinvoke r1.<java.lang.reflect.Field: void setShort(java.lang.Object,short)>(null, 77);
virtualinvoke r2.<java.lang.reflect.Field: void setChar(java.lang.Object,char)>(null, 77);
virtualinvoke r3.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(null, 77);
virtualinvoke r4.<java.lang.reflect.Field: void setLong(java.lang.Object,long)>(null, 77L);
virtualinvoke r5.<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>(null, 77.0F);
virtualinvoke r6.<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>(null, 77.0);
r8 = \"Hello, world\";
virtualinvoke r7.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r8);
$b0 = virtualinvoke r0.<java.lang.reflect.Field: byte getByte(java.lang.Object)>(null);
if $b0 == 77 goto $s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
"->"Block 1:
[preds: 0 ] [succs: ]
$r17 = new java.lang.RuntimeException;
specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r17;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String[];
r0 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"byteField\");
r1 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"shortField\");
r2 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"charField\");
r3 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"intField\");
r4 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"longField\");
r5 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"floatField\");
r6 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"doubleField\");
r7 = staticinvoke <javaT.lang.reflect.Field.T4490864.StaticFieldTest: java.lang.reflect.Field getAccessibleField(java.lang.String)>(\"stringField\");
virtualinvoke r0.<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>(null, 77);
virtualinvoke r1.<java.lang.reflect.Field: void setShort(java.lang.Object,short)>(null, 77);
virtualinvoke r2.<java.lang.reflect.Field: void setChar(java.lang.Object,char)>(null, 77);
virtualinvoke r3.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(null, 77);
virtualinvoke r4.<java.lang.reflect.Field: void setLong(java.lang.Object,long)>(null, 77L);
virtualinvoke r5.<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>(null, 77.0F);
virtualinvoke r6.<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>(null, 77.0);
r8 = \"Hello, world\";
virtualinvoke r7.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r8);
$b0 = virtualinvoke r0.<java.lang.reflect.Field: byte getByte(java.lang.Object)>(null);
if $b0 == 77 goto $s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
if $s1 == 77 goto $c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
if $s1 == 77 goto $c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
"->"Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.RuntimeException;
specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r16;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$s1 = virtualinvoke r1.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);
if $s1 == 77 goto $c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
if $c2 == 77 goto $i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
if $c2 == 77 goto $i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
"->"Block 5:
[preds: 4 ] [succs: ]
$r15 = new java.lang.RuntimeException;
specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r15;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r2.<java.lang.reflect.Field: char getChar(java.lang.Object)>(null);
if $c2 == 77 goto $i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
if $i3 == 77 goto $l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
if $i3 == 77 goto $l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
"->"Block 7:
[preds: 6 ] [succs: ]
$r14 = new java.lang.RuntimeException;
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r14;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$i3 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
if $i3 == 77 goto $l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
"->"Block 8:
[preds: 6 ] [succs: 9 10 ]
$l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
$b5 = $l4 cmp 77L;
if $b5 == 0 goto $f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
$b5 = $l4 cmp 77L;
if $b5 == 0 goto $f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
"->"Block 9:
[preds: 8 ] [succs: ]
$r13 = new java.lang.RuntimeException;
specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r13;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$l4 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);
$b5 = $l4 cmp 77L;
if $b5 == 0 goto $f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
"->"Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
$b6 = $f0 cmpl 77.0F;
if $b6 == 0 goto $d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
$b6 = $f0 cmpl 77.0F;
if $b6 == 0 goto $d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
"->"Block 11:
[preds: 10 ] [succs: ]
$r12 = new java.lang.RuntimeException;
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r12;
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$f0 = virtualinvoke r5.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(null);
$b6 = $f0 cmpl 77.0F;
if $b6 == 0 goto $d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
"->"Block 12:
[preds: 10 ] [succs: 13 14 ]
$d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
$b7 = $d0 cmpl 77.0;
if $b7 == 0 goto $r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
$b7 = $d0 cmpl 77.0;
if $b7 == 0 goto $r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
"->"Block 13:
[preds: 12 ] [succs: ]
$r11 = new java.lang.RuntimeException;
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r11;
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
$d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(null);
$b7 = $d0 cmpl 77.0;
if $b7 == 0 goto $r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
"->"Block 14:
[preds: 12 ] [succs: 15 16 ]
$r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
if $r9 == r8 goto return;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
if $r9 == r8 goto return;
"->"Block 15:
[preds: 14 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r10;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
if $r9 == r8 goto return;
"->"Block 16:
[preds: 14 ] [succs: ]
return;
";
}
