digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r1 = \"$$$\""
    "$r0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>"
    "$r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r0)"
    "r3 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getMimeEncoder(int,byte[])>(0, $r2)"
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToString(java.util.Base64$Encoder)>(r3)"
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode1(java.util.Base64$Encoder)>(r3)"
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToStringWithLongInputData(java.util.Base64$Encoder)>(r3)"
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode2(java.util.Base64$Encoder)>(r3)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r1 = \"$$$\"";
    "$r1 = \"$$$\""->"$r0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>";
    "$r0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>"->"$r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r0)";
    "$r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r0)"->"r3 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getMimeEncoder(int,byte[])>(0, $r2)";
    "r3 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getMimeEncoder(int,byte[])>(0, $r2)"->"staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToString(java.util.Base64$Encoder)>(r3)";
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToString(java.util.Base64$Encoder)>(r3)"->"staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode1(java.util.Base64$Encoder)>(r3)";
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode1(java.util.Base64$Encoder)>(r3)"->"staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToStringWithLongInputData(java.util.Base64$Encoder)>(r3)";
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testEncodeToStringWithLongInputData(java.util.Base64$Encoder)>(r3)"->"staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode2(java.util.Base64$Encoder)>(r3)";
    "staticinvoke <javaT.util.Base64.Base64GetEncoderTest: void testWrapEncode2(java.util.Base64$Encoder)>(r3)"->"return";
}
