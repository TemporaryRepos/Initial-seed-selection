digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
r17 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBKDF2WithHmacSHA1\", \"SunJCE\");
$r18 = new javax.crypto.spec.PBEKeySpec;
$r3 = newarray (char)[112];
$r2 = newarray (byte)[1];
specialinvoke $r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, 1024, 8);
r4 = $r18;
r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"keyLength\");
virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
virtualinvoke r6.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r4, -8);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"pbeks.getKeyLength(): \");
$i0 = virtualinvoke r4.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
"
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r21 = (java.security.spec.KeySpec) r4;
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r21);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r20 = new java.lang.Exception;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"We shouldn\'t get here.\");
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
throw $r20;
"
    "Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
r17 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBKDF2WithHmacSHA1\", \"SunJCE\");
$r18 = new javax.crypto.spec.PBEKeySpec;
$r3 = newarray (char)[112];
$r2 = newarray (byte)[1];
specialinvoke $r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, 1024, 8);
r4 = $r18;
r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"keyLength\");
virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
virtualinvoke r6.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r4, -8);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"pbeks.getKeyLength(): \");
$i0 = virtualinvoke r4.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
"->"Block 1:
[preds: 0 ] [succs: 2 6 ]
$r21 = (java.security.spec.KeySpec) r4;
";
    "Block 0:
[preds: ] [succs: 1 6 ]
r17 := @parameter0: java.lang.String[];
r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(\"PBKDF2WithHmacSHA1\", \"SunJCE\");
$r18 = new javax.crypto.spec.PBEKeySpec;
$r3 = newarray (char)[112];
$r2 = newarray (byte)[1];
specialinvoke $r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, 1024, 8);
r4 = $r18;
r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"keyLength\");
virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
virtualinvoke r6.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r4, -8);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"pbeks.getKeyLength(): \");
$i0 = virtualinvoke r4.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r21 = (java.security.spec.KeySpec) r4;
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r21);
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r21 = (java.security.spec.KeySpec) r4;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r21);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r20 = new java.lang.Exception;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r21);
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r20 = new java.lang.Exception;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"We shouldn\'t get here.\");
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r20 = new java.lang.Exception;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"We shouldn\'t get here.\");
"->"Block 5:
[preds: 4 ] [succs: 6 ]
throw $r20;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>(\"We shouldn\'t get here.\");
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
throw $r20;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r14 := @caughtexception;
r15 = $r14;
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test Passed.\");
return;
";
}
