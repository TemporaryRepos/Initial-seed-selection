digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r12 = \"com.sun.crypto.provider.GHASH\""
    "i3 = 0"
    "i4 = 1"
    "$i0 = lengthof r0"
    "if $i0 <= i3 goto $r2 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = r0[i3]"
    "$i1 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>(\"-c\")"
    "if $i1 != 0 goto $r10 = r0[i3]"
    "i3 = i3 + 1"
    "r12 = r0[i3]"
    "goto [?= i3 = i3 + 1]"
    "$r10 = r0[i3]"
    "$i2 = virtualinvoke $r10.<java.lang.String: int compareTo(java.lang.String)>(\"-n\")"
    "if $i2 != 0 goto i3 = i3 + 1"
    "$r11 = r0[i3]"
    "i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11)"
    "goto [?= $i0 = lengthof r0]"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations.\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "$r7 = new com.sun.crypto.provider.Cipher.AES.TestGHASH"
    "specialinvoke $r7.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void <init>(java.lang.String)>(r12)"
    "r8 = $r7"
    "i5 = 0"
    "if i4 <= i5 goto return"
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"\", \"00000000000000000000000000000000\")"
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(2, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"0388dace60b6a392f328c2b971b2fe78\", \"f38cbb1ad69223dcc3457ae5b6b0f885\")"
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(3, \"b83b533708bf535d0aa6e52980d53b78\", \"\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091473f5985\", \"7f1b32b81b820d02614f8895ac1d4eac\")"
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(4, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091\", \"698e57f70e6ecc7fd9463b7260a9ae5f\")"
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(5, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"61353b4c2806934a777ff51fa22a4755699b2a714fcdc6f83766e5f97b6c742373806900e49f24b22b097544d4896b424989b5e1ebac0f07c23f4598\", \"df586bb4c249b92cb6922877e444d37b\")"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"r12 = \"com.sun.crypto.provider.GHASH\"";
    "r12 = \"com.sun.crypto.provider.GHASH\""->"i3 = 0";
    "i3 = 0"->"i4 = 1";
    "i4 = 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 <= i3 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 <= i3 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r9 = r0[i3]";
    "if $i0 <= i3 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = r0[i3]"->"$i1 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>(\"-c\")";
    "$i1 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>(\"-c\")"->"if $i1 != 0 goto $r10 = r0[i3]";
    "if $i1 != 0 goto $r10 = r0[i3]"->"i3 = i3 + 1";
    "if $i1 != 0 goto $r10 = r0[i3]"->"$r10 = r0[i3]";
    "i3 = i3 + 1"->"r12 = r0[i3]";
    "r12 = r0[i3]"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$r10 = r0[i3]"->"$i2 = virtualinvoke $r10.<java.lang.String: int compareTo(java.lang.String)>(\"-n\")";
    "$i2 = virtualinvoke $r10.<java.lang.String: int compareTo(java.lang.String)>(\"-n\")"->"if $i2 != 0 goto i3 = i3 + 1";
    "if $i2 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "if $i2 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"$r11 = r0[i3]";
    "$r11 = r0[i3]"->"i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11)";
    "i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \")";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations.\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iterations.\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"$r7 = new com.sun.crypto.provider.Cipher.AES.TestGHASH";
    "$r7 = new com.sun.crypto.provider.Cipher.AES.TestGHASH"->"specialinvoke $r7.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void <init>(java.lang.String)>(r12)";
    "specialinvoke $r7.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void <init>(java.lang.String)>(r12)"->"r8 = $r7";
    "r8 = $r7"->"i5 = 0";
    "i5 = 0"->"if i4 <= i5 goto return";
    "if i4 <= i5 goto return"->"specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"\", \"00000000000000000000000000000000\")";
    "if i4 <= i5 goto return"->"return";
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"\", \"00000000000000000000000000000000\")"->"specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(2, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"0388dace60b6a392f328c2b971b2fe78\", \"f38cbb1ad69223dcc3457ae5b6b0f885\")";
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(2, \"66e94bd4ef8a2c3b884cfa59ca342b2e\", \"\", \"0388dace60b6a392f328c2b971b2fe78\", \"f38cbb1ad69223dcc3457ae5b6b0f885\")"->"specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(3, \"b83b533708bf535d0aa6e52980d53b78\", \"\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091473f5985\", \"7f1b32b81b820d02614f8895ac1d4eac\")";
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(3, \"b83b533708bf535d0aa6e52980d53b78\", \"\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091473f5985\", \"7f1b32b81b820d02614f8895ac1d4eac\")"->"specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(4, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091\", \"698e57f70e6ecc7fd9463b7260a9ae5f\")";
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(4, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"42831ec2217774244b7221b784d0d49ce3aa212f2c02a4e035c17e2329aca12e21d514b25466931c7d8f6a5aac84aa051ba30b396a0aac973d58e091\", \"698e57f70e6ecc7fd9463b7260a9ae5f\")"->"specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(5, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"61353b4c2806934a777ff51fa22a4755699b2a714fcdc6f83766e5f97b6c742373806900e49f24b22b097544d4896b424989b5e1ebac0f07c23f4598\", \"df586bb4c249b92cb6922877e444d37b\")";
    "specialinvoke r8.<com.sun.crypto.provider.Cipher.AES.TestGHASH: void check(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(5, \"b83b533708bf535d0aa6e52980d53b78\", \"feedfacedeadbeeffeedfacedeadbeefabaddad2\", \"61353b4c2806934a777ff51fa22a4755699b2a714fcdc6f83766e5f97b6c742373806900e49f24b22b097544d4896b424989b5e1ebac0f07c23f4598\", \"df586bb4c249b92cb6922877e444d37b\")"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 <= i5 goto return";
}
