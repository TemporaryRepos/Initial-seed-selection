digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r15 := @this: javaT.text.Format.NumberFormat.DFSExponential;
$r0 = new java.text.DecimalFormatSymbols;
$r1 = <java.util.Locale: java.util.Locale US>;
specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1);
r2 = $r0;
$r3 = newarray (java.lang.String)[4];
$r3[0] = \"0.####E0\";
$r3[1] = \"00.000E00\";
$r3[2] = \"##0.####E000\";
$r3[3] = \"0.###E0;[0.###E0]\";
r4 = $r3;
$r5 = newarray (double)[4];
$r5[0] = 0.01234;
$r5[1] = 1.23456789E8;
$r5[2] = 1.23E300;
$r5[3] = -3.141592653E-271;
r6 = $r5;
$r7 = newarray (long)[4];
$r7[0] = 0L;
$r7[1] = -1L;
$r7[2] = 1L;
$r7[3] = 123456789L;
r8 = $r7;
$r9 = newarray (java.lang.String[])[4];
$r10 = newarray (java.lang.String)[4];
$r10[0] = \"1.234x10^-2\";
$r10[1] = \"1.2346x10^8\";
$r10[2] = \"1.23x10^300\";
$r10[3] = \"-3.1416x10^-271\";
$r9[0] = $r10;
$r11 = newarray (java.lang.String)[4];
$r11[0] = \"12.340x10^-03\";
$r11[1] = \"12.346x10^07\";
$r11[2] = \"12.300x10^299\";
$r11[3] = \"-31.416x10^-272\";
$r9[1] = $r11;
$r12 = newarray (java.lang.String)[4];
$r12[0] = \"12.34x10^-003\";
$r12[1] = \"123.4568x10^006\";
$r12[2] = \"1.23x10^300\";
$r12[3] = \"-314.1593x10^-273\";
$r9[2] = $r12;
$r13 = newarray (java.lang.String)[4];
$r13[0] = \"1.234x10^-2\";
$r13[1] = \"1.235x10^8\";
$r13[2] = \"1.23x10^300\";
$r13[3] = \"[3.142x10^-271]\";
$r9[3] = $r13;
r14 = $r9;
z0 = 0;
z1 = 0;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Default exponent separator: \");
$r18 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r20);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r2.<java.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>(\"x10^\");
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r21 = new java.lang.StringBuilder];
"
    "Block 3:
[preds: 0 1 ] [succs: ]
$r65 := @caughtexception;
r67 = $r65;
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void errln(java.lang.String)>(\"null String was passed to set an exponent separator symbol\");
$r66 = new java.lang.RuntimeException;
specialinvoke $r66.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test Malfunction: null String was passed to set an exponent separator symbol\");
throw $r66;
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Current exponent separator: \");
$r23 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r25);
i2 = 0;
"
    "Block 5:
[preds: 4 12 ] [succs: 6 13 ]
$i0 = lengthof r4;
if i2 >= $i0 goto return;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r26 = new java.text.DecimalFormat;
$r27 = r4[i2];
specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>($r27, r2);
r28 = $r26;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Pattern: \");
$r31 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toPattern()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r33);
r34 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toLocalizedPattern()>();
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Localized pattern: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r38);
i3 = 0;
"
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r6;
if i3 >= $i1 goto i2 = i2 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$d0 = r6[i3];
r39 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String format(double)>($d0);
$r40 = new java.lang.StringBuilder;
specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         \");
$d1 = r6[i3];
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" --> \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r45);
$r46 = r14[i2];
$r47 = $r46[i3];
$z2 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r39);
if $z2 == 0 goto $r48 = new java.lang.StringBuilder;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>(\": Passed\");
goto [?= i3 = i3 + 1];
"
    "Block 10:
[preds: 8 ] [succs: ]
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Failed: Should be formatted as \");
$r50 = r14[i2];
$r51 = $r50[i3];
$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void errln(java.lang.String)>($r55);
$r56 = new java.lang.RuntimeException;
$r57 = new java.lang.StringBuilder;
specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Failed: Should be formatted as \");
$r59 = r14[i2];
$r60 = $r59[i3];
$r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got \");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String)>($r64);
throw $r56;
"
    "Block 11:
[preds: 9 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= $i1 = lengthof r6];
"
    "Block 12:
[preds: 7 ] [succs: 5 ]
i2 = i2 + 1;
goto [?= $i0 = lengthof r4];
"
    "Block 13:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r15 := @this: javaT.text.Format.NumberFormat.DFSExponential;
$r0 = new java.text.DecimalFormatSymbols;
$r1 = <java.util.Locale: java.util.Locale US>;
specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1);
r2 = $r0;
$r3 = newarray (java.lang.String)[4];
$r3[0] = \"0.####E0\";
$r3[1] = \"00.000E00\";
$r3[2] = \"##0.####E000\";
$r3[3] = \"0.###E0;[0.###E0]\";
r4 = $r3;
$r5 = newarray (double)[4];
$r5[0] = 0.01234;
$r5[1] = 1.23456789E8;
$r5[2] = 1.23E300;
$r5[3] = -3.141592653E-271;
r6 = $r5;
$r7 = newarray (long)[4];
$r7[0] = 0L;
$r7[1] = -1L;
$r7[2] = 1L;
$r7[3] = 123456789L;
r8 = $r7;
$r9 = newarray (java.lang.String[])[4];
$r10 = newarray (java.lang.String)[4];
$r10[0] = \"1.234x10^-2\";
$r10[1] = \"1.2346x10^8\";
$r10[2] = \"1.23x10^300\";
$r10[3] = \"-3.1416x10^-271\";
$r9[0] = $r10;
$r11 = newarray (java.lang.String)[4];
$r11[0] = \"12.340x10^-03\";
$r11[1] = \"12.346x10^07\";
$r11[2] = \"12.300x10^299\";
$r11[3] = \"-31.416x10^-272\";
$r9[1] = $r11;
$r12 = newarray (java.lang.String)[4];
$r12[0] = \"12.34x10^-003\";
$r12[1] = \"123.4568x10^006\";
$r12[2] = \"1.23x10^300\";
$r12[3] = \"-314.1593x10^-273\";
$r9[2] = $r12;
$r13 = newarray (java.lang.String)[4];
$r13[0] = \"1.234x10^-2\";
$r13[1] = \"1.235x10^8\";
$r13[2] = \"1.23x10^300\";
$r13[3] = \"[3.142x10^-271]\";
$r9[3] = $r13;
r14 = $r9;
z0 = 0;
z1 = 0;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Default exponent separator: \");
$r18 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r20);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r2.<java.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>(\"x10^\");
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r15 := @this: javaT.text.Format.NumberFormat.DFSExponential;
$r0 = new java.text.DecimalFormatSymbols;
$r1 = <java.util.Locale: java.util.Locale US>;
specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1);
r2 = $r0;
$r3 = newarray (java.lang.String)[4];
$r3[0] = \"0.####E0\";
$r3[1] = \"00.000E00\";
$r3[2] = \"##0.####E000\";
$r3[3] = \"0.###E0;[0.###E0]\";
r4 = $r3;
$r5 = newarray (double)[4];
$r5[0] = 0.01234;
$r5[1] = 1.23456789E8;
$r5[2] = 1.23E300;
$r5[3] = -3.141592653E-271;
r6 = $r5;
$r7 = newarray (long)[4];
$r7[0] = 0L;
$r7[1] = -1L;
$r7[2] = 1L;
$r7[3] = 123456789L;
r8 = $r7;
$r9 = newarray (java.lang.String[])[4];
$r10 = newarray (java.lang.String)[4];
$r10[0] = \"1.234x10^-2\";
$r10[1] = \"1.2346x10^8\";
$r10[2] = \"1.23x10^300\";
$r10[3] = \"-3.1416x10^-271\";
$r9[0] = $r10;
$r11 = newarray (java.lang.String)[4];
$r11[0] = \"12.340x10^-03\";
$r11[1] = \"12.346x10^07\";
$r11[2] = \"12.300x10^299\";
$r11[3] = \"-31.416x10^-272\";
$r9[1] = $r11;
$r12 = newarray (java.lang.String)[4];
$r12[0] = \"12.34x10^-003\";
$r12[1] = \"123.4568x10^006\";
$r12[2] = \"1.23x10^300\";
$r12[3] = \"-314.1593x10^-273\";
$r9[2] = $r12;
$r13 = newarray (java.lang.String)[4];
$r13[0] = \"1.234x10^-2\";
$r13[1] = \"1.235x10^8\";
$r13[2] = \"1.23x10^300\";
$r13[3] = \"[3.142x10^-271]\";
$r9[3] = $r13;
r14 = $r9;
z0 = 0;
z1 = 0;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Default exponent separator: \");
$r18 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r20);
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r65 := @caughtexception;
r67 = $r65;
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void errln(java.lang.String)>(\"null String was passed to set an exponent separator symbol\");
$r66 = new java.lang.RuntimeException;
specialinvoke $r66.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test Malfunction: null String was passed to set an exponent separator symbol\");
throw $r66;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r2.<java.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>(\"x10^\");
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r21 = new java.lang.StringBuilder];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
virtualinvoke r2.<java.text.DecimalFormatSymbols: void setExponentSeparator(java.lang.String)>(\"x10^\");
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r65 := @caughtexception;
r67 = $r65;
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void errln(java.lang.String)>(\"null String was passed to set an exponent separator symbol\");
$r66 = new java.lang.RuntimeException;
specialinvoke $r66.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test Malfunction: null String was passed to set an exponent separator symbol\");
throw $r66;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r21 = new java.lang.StringBuilder];
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Current exponent separator: \");
$r23 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r25);
i2 = 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Current exponent separator: \");
$r23 = virtualinvoke r2.<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r25);
i2 = 0;
"->"Block 5:
[preds: 4 12 ] [succs: 6 13 ]
$i0 = lengthof r4;
if i2 >= $i0 goto return;
";
    "Block 5:
[preds: 4 12 ] [succs: 6 13 ]
$i0 = lengthof r4;
if i2 >= $i0 goto return;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r26 = new java.text.DecimalFormat;
$r27 = r4[i2];
specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>($r27, r2);
r28 = $r26;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Pattern: \");
$r31 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toPattern()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r33);
r34 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toLocalizedPattern()>();
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Localized pattern: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r38);
i3 = 0;
";
    "Block 5:
[preds: 4 12 ] [succs: 6 13 ]
$i0 = lengthof r4;
if i2 >= $i0 goto return;
"->"Block 13:
[preds: 5 ] [succs: ]
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r26 = new java.text.DecimalFormat;
$r27 = r4[i2];
specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>($r27, r2);
r28 = $r26;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Pattern: \");
$r31 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toPattern()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r33);
r34 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String toLocalizedPattern()>();
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     Localized pattern: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r38);
i3 = 0;
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r6;
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r6;
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$d0 = r6[i3];
r39 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String format(double)>($d0);
$r40 = new java.lang.StringBuilder;
specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         \");
$d1 = r6[i3];
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" --> \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r45);
$r46 = r14[i2];
$r47 = $r46[i3];
$z2 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r39);
if $z2 == 0 goto $r48 = new java.lang.StringBuilder;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r6;
if i3 >= $i1 goto i2 = i2 + 1;
"->"Block 12:
[preds: 7 ] [succs: 5 ]
i2 = i2 + 1;
goto [?= $i0 = lengthof r4];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$d0 = r6[i3];
r39 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String format(double)>($d0);
$r40 = new java.lang.StringBuilder;
specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         \");
$d1 = r6[i3];
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" --> \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r45);
$r46 = r14[i2];
$r47 = $r46[i3];
$z2 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r39);
if $z2 == 0 goto $r48 = new java.lang.StringBuilder;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>(\": Passed\");
goto [?= i3 = i3 + 1];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$d0 = r6[i3];
r39 = virtualinvoke r28.<java.text.DecimalFormat: java.lang.String format(double)>($d0);
$r40 = new java.lang.StringBuilder;
specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         \");
$d1 = r6[i3];
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" --> \");
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>($r45);
$r46 = r14[i2];
$r47 = $r46[i3];
$z2 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r39);
if $z2 == 0 goto $r48 = new java.lang.StringBuilder;
"->"Block 10:
[preds: 8 ] [succs: ]
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Failed: Should be formatted as \");
$r50 = r14[i2];
$r51 = $r50[i3];
$r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void errln(java.lang.String)>($r55);
$r56 = new java.lang.RuntimeException;
$r57 = new java.lang.StringBuilder;
specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Failed: Should be formatted as \");
$r59 = r14[i2];
$r60 = $r59[i3];
$r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got \");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String)>($r64);
throw $r56;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r15.<javaT.text.Format.NumberFormat.DFSExponential: void logln(java.lang.String)>(\": Passed\");
goto [?= i3 = i3 + 1];
"->"Block 11:
[preds: 9 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= $i1 = lengthof r6];
";
    "Block 11:
[preds: 9 ] [succs: 7 ]
i3 = i3 + 1;
goto [?= $i1 = lengthof r6];
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r6;
if i3 >= $i1 goto i2 = i2 + 1;
";
    "Block 12:
[preds: 7 ] [succs: 5 ]
i2 = i2 + 1;
goto [?= $i0 = lengthof r4];
"->"Block 5:
[preds: 4 12 ] [succs: 6 13 ]
$i0 = lengthof r4;
if i2 >= $i0 goto return;
";
}
