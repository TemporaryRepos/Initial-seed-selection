digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r2.<java.lang.String: int length()>();
if i2 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  0x\");
$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($c1);
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
i2 = i2 + 1;
goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
return $r3;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r2.<java.lang.String: int length()>();
if i2 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r2.<java.lang.String: int length()>();
if i2 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  0x\");
$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($c1);
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
i2 = i2 + 1;
goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r2.<java.lang.String: int length()>();
if i2 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 3:
[preds: 1 ] [succs: ]
$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
return $r3;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  0x\");
$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
$r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($c1);
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
i2 = i2 + 1;
goto [?= $i0 = virtualinvoke r2.<java.lang.String: int length()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r2.<java.lang.String: int length()>();
if i2 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
}
