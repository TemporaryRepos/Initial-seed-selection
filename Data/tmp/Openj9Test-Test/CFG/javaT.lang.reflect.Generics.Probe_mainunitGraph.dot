digraph "unitGraph" {
    "r21 := @parameter0: java.lang.String[]"
    "$r0 = class \"LjavaT/lang/reflect/Generics/Probe;\""
    "$r1 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Generics/Classes;\")"
    "r2 = (javaT.lang.reflect.Generics.Classes) $r1"
    "$r3 = new java.util.ArrayList"
    "$r4 = interfaceinvoke r2.<javaT.lang.reflect.Generics.Classes: java.lang.String[] value()>()"
    "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)"
    "specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5)"
    "r6 = $r3"
    "i1 = 0"
    "r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto (branch)"
    "$r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r10 = (java.lang.String) $r9"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nCLASS \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)"
    "r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r10, 0, null)"
    "$i0 = staticinvoke <javaT.lang.reflect.Generics.Probe: int probe(java.lang.Class)>(r16)"
    "i1 = i1 + $i0"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "if i1 != 0 goto $r17 = new java.lang.StringBuilder"
    "$r22 = \"  ok\""
    "goto [?= virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)]"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  ERRORS:\")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)"
    "goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"
    "if i1 <= 0 goto return"
    "$r8 = new java.lang.RuntimeException"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Errors during probing.\")"
    "throw $r8"
    "return"
    "r21 := @parameter0: java.lang.String[]"->"$r0 = class \"LjavaT/lang/reflect/Generics/Probe;\"";
    "$r0 = class \"LjavaT/lang/reflect/Generics/Probe;\""->"$r1 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Generics/Classes;\")";
    "$r1 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class \"LjavaT/lang/reflect/Generics/Classes;\")"->"r2 = (javaT.lang.reflect.Generics.Classes) $r1";
    "r2 = (javaT.lang.reflect.Generics.Classes) $r1"->"$r3 = new java.util.ArrayList";
    "$r3 = new java.util.ArrayList"->"$r4 = interfaceinvoke r2.<javaT.lang.reflect.Generics.Classes: java.lang.String[] value()>()";
    "$r4 = interfaceinvoke r2.<javaT.lang.reflect.Generics.Classes: java.lang.String[] value()>()"->"$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)";
    "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)"->"specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5)";
    "specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5)"->"r6 = $r3";
    "r6 = $r3"->"i1 = 0";
    "i1 = 0"->"r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()";
    "r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto (branch)";
    "if $z0 == 0 goto (branch)"->"$r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto (branch)"->"if i1 <= 0 goto return";
    "$r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r10 = (java.lang.String) $r9";
    "r10 = (java.lang.String) $r9"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nCLASS \")";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\nCLASS \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15)"->"r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r10, 0, null)";
    "r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r10, 0, null)"->"$i0 = staticinvoke <javaT.lang.reflect.Generics.Probe: int probe(java.lang.Class)>(r16)";
    "$i0 = staticinvoke <javaT.lang.reflect.Generics.Probe: int probe(java.lang.Class)>(r16)"->"i1 = i1 + $i0";
    "i1 = i1 + $i0"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"if i1 != 0 goto $r17 = new java.lang.StringBuilder";
    "if i1 != 0 goto $r17 = new java.lang.StringBuilder"->"$r22 = \"  ok\"";
    "if i1 != 0 goto $r17 = new java.lang.StringBuilder"->"$r17 = new java.lang.StringBuilder";
    "$r22 = \"  ok\""->"goto [?= virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)]";
    "goto [?= virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)]"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  ERRORS:\")";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  ERRORS:\")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22)"->"goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "if i1 <= 0 goto return"->"$r8 = new java.lang.RuntimeException";
    "if i1 <= 0 goto return"->"return";
    "$r8 = new java.lang.RuntimeException"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Errors during probing.\")";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Errors during probing.\")"->"throw $r8";
}
