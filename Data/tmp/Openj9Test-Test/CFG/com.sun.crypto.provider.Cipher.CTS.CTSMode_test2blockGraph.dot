digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i23 = 0;
"
    "Block 1:
[preds: 0 26 ] [succs: 2 27 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
$i0 = lengthof $r0;
if i23 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
r2 = $r1[i23];
$r4 = <java.lang.System: java.io.PrintStream out>;
$r113 = new java.lang.StringBuilder;
specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test2_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: int[] KEYSIZES2>;
i1 = $r11[i23];
i2 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
if i1 <= i2 goto $r114 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 26 ]
goto [?= i23 = i23 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 6 12 ]
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
i3 = virtualinvoke r16.<javax.crypto.Cipher: int getBlockSize()>();
$r115 = new javax.crypto.spec.SecretKeySpec;
$r18 = newarray (byte)[i1];
specialinvoke $r115.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, r2);
r19 = $r115;
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r21 = $r20[3];
$r137 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r137);
$i4 = lengthof r21;
r22 = newarray (byte)[$i4];
i5 = i3 + 1;
i24 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r22, 0);
$i6 = lengthof r21;
$i7 = $i6 - i5;
i25 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r21, i5, $i7, r22, i24);
r23 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
$i9 = i24 + i25;
$i8 = lengthof r21;
if $i9 == $i8 goto $i10 = i3 - 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
$r116 = new java.lang.StringBuilder;
specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r117 = new java.lang.StringBuilder;
specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r118 = new java.lang.StringBuilder;
specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i11 = lengthof r21;
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);
$r120 = new java.lang.RuntimeException;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r44 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encryption failure for test \");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r120.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);
throw $r120;
"
    "Block 6:
[preds: 4 ] [succs: 7 12 ]
$i10 = i3 - 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r24 = newarray (byte)[$i10];
"
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
"
    "Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
"
    "Block 13:
[preds: 12 ] [succs: ]
$r124 = new java.lang.RuntimeException;
specialinvoke $r124.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Different encryption output for CBC and CTS\");
throw $r124;
"
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r142 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r142, r23);
$i12 = lengthof r22;
$i13 = virtualinvoke r16.<javax.crypto.Cipher: int getOutputSize(int)>($i12);
r62 = newarray (byte)[$i13];
i26 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, 0, i5, r62, 0);
$i14 = lengthof r22;
$i15 = $i14 - i5;
i27 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, i5, $i15, r62, i26);
$i16 = i26 + i27;
i17 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int)>(r62, $i16);
$i18 = i26 + i27;
$i20 = $i18 + i17;
$i19 = lengthof r21;
if $i20 == $i19 goto $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
"
    "Block 15:
[preds: 14 ] [succs: ]
$r84 = <java.lang.System: java.io.PrintStream out>;
$r125 = new java.lang.StringBuilder;
specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();
$r85 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);
$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r87);
$r89 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();
$r90 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r92);
$r94 = <java.lang.System: java.io.PrintStream out>;
$r127 = new java.lang.StringBuilder;
specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();
$r95 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed3 = \");
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r97);
$r99 = <java.lang.System: java.io.PrintStream out>;
$r128 = new java.lang.StringBuilder;
specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();
$r100 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i22 = lengthof r21;
$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);
$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r102);
$r130 = new java.lang.RuntimeException;
$r129 = new java.lang.StringBuilder;
specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();
$r105 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r130.<java.lang.RuntimeException: void <init>(java.lang.String)>($r107);
throw $r130;
"
    "Block 16:
[preds: 14 ] [succs: 17 18 24 ]
$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
if $z2 != 0 goto $i21 = i3 - 1;
"
    "Block 17:
[preds: 16 ] [succs: ]
$r67 = <java.lang.System: java.io.PrintStream out>;
$r131 = new java.lang.StringBuilder;
specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();
$r68 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r69 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r71);
$r73 = <java.lang.System: java.io.PrintStream out>;
$r132 = new java.lang.StringBuilder;
specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"recovered: \");
$r75 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r62);
$r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r77);
$r134 = new java.lang.RuntimeException;
$r133 = new java.lang.StringBuilder;
specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();
$r80 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r134.<java.lang.RuntimeException: void <init>(java.lang.String)>($r82);
throw $r134;
"
    "Block 18:
[preds: 16 ] [succs: 19 24 ]
$i21 = i3 - 1;
"
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r63 = newarray (byte)[$i21];
"
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r63);
"
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r135 = new java.lang.RuntimeException;
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r135.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"
    "Block 23:
[preds: 22 ] [succs: 24 ]
throw $r135;
"
    "Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
"
    "Block 25:
[preds: 24 ] [succs: ]
$r136 = new java.lang.RuntimeException;
specialinvoke $r136.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Different decryption output for CBC and CTS\");
throw $r136;
"
    "Block 26:
[preds: 3 24 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>];
"
    "Block 27:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i23 = 0;
"->"Block 1:
[preds: 0 26 ] [succs: 2 27 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
$i0 = lengthof $r0;
if i23 >= $i0 goto return;
";
    "Block 1:
[preds: 0 26 ] [succs: 2 27 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
$i0 = lengthof $r0;
if i23 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
r2 = $r1[i23];
$r4 = <java.lang.System: java.io.PrintStream out>;
$r113 = new java.lang.StringBuilder;
specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test2_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: int[] KEYSIZES2>;
i1 = $r11[i23];
i2 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
if i1 <= i2 goto $r114 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 26 ] [succs: 2 27 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
$i0 = lengthof $r0;
if i23 >= $i0 goto return;
"->"Block 27:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
r2 = $r1[i23];
$r4 = <java.lang.System: java.io.PrintStream out>;
$r113 = new java.lang.StringBuilder;
specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test2_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: int[] KEYSIZES2>;
i1 = $r11[i23];
i2 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
if i1 <= i2 goto $r114 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 26 ]
goto [?= i23 = i23 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
r2 = $r1[i23];
$r4 = <java.lang.System: java.io.PrintStream out>;
$r113 = new java.lang.StringBuilder;
specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running test2_\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: int[] KEYSIZES2>;
i1 = $r11[i23];
i2 = staticinvoke <javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>(r2);
if i1 <= i2 goto $r114 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 ] [succs: 5 6 12 ]
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
i3 = virtualinvoke r16.<javax.crypto.Cipher: int getBlockSize()>();
$r115 = new javax.crypto.spec.SecretKeySpec;
$r18 = newarray (byte)[i1];
specialinvoke $r115.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, r2);
r19 = $r115;
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r21 = $r20[3];
$r137 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r137);
$i4 = lengthof r21;
r22 = newarray (byte)[$i4];
i5 = i3 + 1;
i24 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r22, 0);
$i6 = lengthof r21;
$i7 = $i6 - i5;
i25 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r21, i5, $i7, r22, i24);
r23 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
$i9 = i24 + i25;
$i8 = lengthof r21;
if $i9 == $i8 goto $i10 = i3 - 1;
";
    "Block 3:
[preds: 2 ] [succs: 26 ]
goto [?= i23 = i23 + 1];
"->"Block 26:
[preds: 3 24 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>];
";
    "Block 4:
[preds: 2 ] [succs: 5 6 12 ]
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
i3 = virtualinvoke r16.<javax.crypto.Cipher: int getBlockSize()>();
$r115 = new javax.crypto.spec.SecretKeySpec;
$r18 = newarray (byte)[i1];
specialinvoke $r115.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, r2);
r19 = $r115;
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r21 = $r20[3];
$r137 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r137);
$i4 = lengthof r21;
r22 = newarray (byte)[$i4];
i5 = i3 + 1;
i24 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r22, 0);
$i6 = lengthof r21;
$i7 = $i6 - i5;
i25 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r21, i5, $i7, r22, i24);
r23 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
$i9 = i24 + i25;
$i8 = lengthof r21;
if $i9 == $i8 goto $i10 = i3 - 1;
"->"Block 5:
[preds: 4 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
$r116 = new java.lang.StringBuilder;
specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r117 = new java.lang.StringBuilder;
specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r118 = new java.lang.StringBuilder;
specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i11 = lengthof r21;
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);
$r120 = new java.lang.RuntimeException;
$r119 = new java.lang.StringBuilder;
specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
$r44 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Encryption failure for test \");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r120.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);
throw $r120;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 12 ]
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
i3 = virtualinvoke r16.<javax.crypto.Cipher: int getBlockSize()>();
$r115 = new javax.crypto.spec.SecretKeySpec;
$r18 = newarray (byte)[i1];
specialinvoke $r115.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, r2);
r19 = $r115;
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r21 = $r20[3];
$r137 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r137);
$i4 = lengthof r21;
r22 = newarray (byte)[$i4];
i5 = i3 + 1;
i24 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r22, 0);
$i6 = lengthof r21;
$i7 = $i6 - i5;
i25 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r21, i5, $i7, r22, i24);
r23 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
$i9 = i24 + i25;
$i8 = lengthof r21;
if $i9 == $i8 goto $i10 = i3 - 1;
"->"Block 6:
[preds: 4 ] [succs: 7 12 ]
$i10 = i3 - 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 12 ]
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CTS/NoPadding\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r15, \"SunJCE\");
i3 = virtualinvoke r16.<javax.crypto.Cipher: int getBlockSize()>();
$r115 = new javax.crypto.spec.SecretKeySpec;
$r18 = newarray (byte)[i1];
specialinvoke $r115.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, r2);
r19 = $r115;
$r20 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[][] PLAIN1>;
r21 = $r20[3];
$r137 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r137);
$i4 = lengthof r21;
r22 = newarray (byte)[$i4];
i5 = i3 + 1;
i24 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r21, 0, i5, r22, 0);
$i6 = lengthof r21;
$i7 = $i6 - i5;
i25 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r21, i5, $i7, r22, i24);
r23 = virtualinvoke r16.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();
$i9 = i24 + i25;
$i8 = lengthof r21;
if $i9 == $i8 goto $i10 = i3 - 1;
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 6:
[preds: 4 ] [succs: 7 12 ]
$i10 = i3 - 1;
"->"Block 7:
[preds: 6 ] [succs: 8 12 ]
$r24 = newarray (byte)[$i10];
";
    "Block 6:
[preds: 4 ] [succs: 7 12 ]
$i10 = i3 - 1;
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r24 = newarray (byte)[$i10];
"->"Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r24 = newarray (byte)[$i10];
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r24);
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r121 = new java.lang.RuntimeException;
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"->"Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
specialinvoke $r121.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
throw $r121;
"->"Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
";
    "Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
"->"Block 13:
[preds: 12 ] [succs: ]
$r124 = new java.lang.RuntimeException;
specialinvoke $r124.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Different encryption output for CBC and CTS\");
throw $r124;
";
    "Block 12:
[preds: 4 6 7 8 9 10 11 ] [succs: 13 14 ]
$r53 := @caughtexception;
r109 = $r53;
$r122 = new javax.crypto.spec.IvParameterSpec;
$r55 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
specialinvoke $r122.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r55, 0, i3);
r110 = $r122;
$r138 = (java.security.Key) r19;
$r139 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r138, $r139);
$r123 = new java.lang.StringBuilder;
specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/CBC/NoPadding\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
r48 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r59, \"SunJCE\");
$r140 = (java.security.Key) r19;
$r141 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r140, $r141);
$r60 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r49 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r60, 0, i3);
$r61 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: byte[] IV2_SRC>;
r50 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r61, 0, i3);
$z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, r50);
if $z1 != 0 goto $r142 = (java.security.Key) r19;
"->"Block 14:
[preds: 12 ] [succs: 15 16 ]
$r142 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r142, r23);
$i12 = lengthof r22;
$i13 = virtualinvoke r16.<javax.crypto.Cipher: int getOutputSize(int)>($i12);
r62 = newarray (byte)[$i13];
i26 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, 0, i5, r62, 0);
$i14 = lengthof r22;
$i15 = $i14 - i5;
i27 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, i5, $i15, r62, i26);
$i16 = i26 + i27;
i17 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int)>(r62, $i16);
$i18 = i26 + i27;
$i20 = $i18 + i17;
$i19 = lengthof r21;
if $i20 == $i19 goto $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r142 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r142, r23);
$i12 = lengthof r22;
$i13 = virtualinvoke r16.<javax.crypto.Cipher: int getOutputSize(int)>($i12);
r62 = newarray (byte)[$i13];
i26 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, 0, i5, r62, 0);
$i14 = lengthof r22;
$i15 = $i14 - i5;
i27 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, i5, $i15, r62, i26);
$i16 = i26 + i27;
i17 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int)>(r62, $i16);
$i18 = i26 + i27;
$i20 = $i18 + i17;
$i19 = lengthof r21;
if $i20 == $i19 goto $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
"->"Block 15:
[preds: 14 ] [succs: ]
$r84 = <java.lang.System: java.io.PrintStream out>;
$r125 = new java.lang.StringBuilder;
specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();
$r85 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed1 = \");
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);
$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r87);
$r89 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();
$r90 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed2 = \");
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r92);
$r94 = <java.lang.System: java.io.PrintStream out>;
$r127 = new java.lang.StringBuilder;
specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();
$r95 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"processed3 = \");
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r97);
$r99 = <java.lang.System: java.io.PrintStream out>;
$r128 = new java.lang.StringBuilder;
specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();
$r100 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"total length = \");
$i22 = lengthof r21;
$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);
$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r102);
$r130 = new java.lang.RuntimeException;
$r129 = new java.lang.StringBuilder;
specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();
$r105 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r130.<java.lang.RuntimeException: void <init>(java.lang.String)>($r107);
throw $r130;
";
    "Block 14:
[preds: 12 ] [succs: 15 16 ]
$r142 = (java.security.Key) r19;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r142, r23);
$i12 = lengthof r22;
$i13 = virtualinvoke r16.<javax.crypto.Cipher: int getOutputSize(int)>($i12);
r62 = newarray (byte)[$i13];
i26 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, 0, i5, r62, 0);
$i14 = lengthof r22;
$i15 = $i14 - i5;
i27 = virtualinvoke r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r22, i5, $i15, r62, i26);
$i16 = i26 + i27;
i17 = virtualinvoke r16.<javax.crypto.Cipher: int doFinal(byte[],int)>(r62, $i16);
$i18 = i26 + i27;
$i20 = $i18 + i17;
$i19 = lengthof r21;
if $i20 == $i19 goto $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
"->"Block 16:
[preds: 14 ] [succs: 17 18 24 ]
$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
if $z2 != 0 goto $i21 = i3 - 1;
";
    "Block 16:
[preds: 14 ] [succs: 17 18 24 ]
$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
if $z2 != 0 goto $i21 = i3 - 1;
"->"Block 17:
[preds: 16 ] [succs: ]
$r67 = <java.lang.System: java.io.PrintStream out>;
$r131 = new java.lang.StringBuilder;
specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();
$r68 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"plain:  \");
$r69 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r21);
$r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r71);
$r73 = <java.lang.System: java.io.PrintStream out>;
$r132 = new java.lang.StringBuilder;
specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"recovered: \");
$r75 = staticinvoke <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String toString(byte[])>(r62);
$r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r77);
$r134 = new java.lang.RuntimeException;
$r133 = new java.lang.StringBuilder;
specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();
$r80 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Decryption failure for test \");
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r134.<java.lang.RuntimeException: void <init>(java.lang.String)>($r82);
throw $r134;
";
    "Block 16:
[preds: 14 ] [succs: 17 18 24 ]
$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
if $z2 != 0 goto $i21 = i3 - 1;
"->"Block 18:
[preds: 16 ] [succs: 19 24 ]
$i21 = i3 - 1;
";
    "Block 16:
[preds: 14 ] [succs: 17 18 24 ]
$z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r21, r62);
if $z2 != 0 goto $i21 = i3 - 1;
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 18:
[preds: 16 ] [succs: 19 24 ]
$i21 = i3 - 1;
"->"Block 19:
[preds: 18 ] [succs: 20 24 ]
$r63 = newarray (byte)[$i21];
";
    "Block 18:
[preds: 16 ] [succs: 19 24 ]
$i21 = i3 - 1;
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r63 = newarray (byte)[$i21];
"->"Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r63);
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$r63 = newarray (byte)[$i21];
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r63);
"->"Block 21:
[preds: 20 ] [succs: 22 24 ]
$r135 = new java.lang.RuntimeException;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r63);
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r135 = new java.lang.RuntimeException;
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r135.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r135 = new java.lang.RuntimeException;
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r135.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"->"Block 23:
[preds: 22 ] [succs: 24 ]
throw $r135;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
specialinvoke $r135.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Expected IBSE is not thrown\");
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 23:
[preds: 22 ] [succs: 24 ]
throw $r135;
"->"Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
";
    "Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
"->"Block 25:
[preds: 24 ] [succs: ]
$r136 = new java.lang.RuntimeException;
specialinvoke $r136.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Different decryption output for CBC and CTS\");
throw $r136;
";
    "Block 24:
[preds: 16 18 19 20 21 22 23 ] [succs: 25 26 ]
$r47 := @caughtexception;
r111 = $r47;
$r143 = (java.security.Key) r19;
$r144 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r143, $r144);
$r145 = (java.security.Key) r19;
$r146 = (java.security.spec.AlgorithmParameterSpec) r110;
virtualinvoke r48.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r145, $r146);
r112 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r49);
r51 = virtualinvoke r48.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r50);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r112, r51);
if $z0 != 0 goto i23 = i23 + 1;
"->"Block 26:
[preds: 3 24 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>];
";
    "Block 26:
[preds: 3 24 ] [succs: 1 ]
i23 = i23 + 1;
goto [?= $r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>];
"->"Block 1:
[preds: 0 26 ] [succs: 2 27 ]
$r0 = <com.sun.crypto.provider.Cipher.CTS.CTSMode: java.lang.String[] ALGORITHMS2>;
$i0 = lengthof $r0;
if i23 >= $i0 goto return;
";
}
