digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r5 := @this: javaT.lang.StringBuffer.BufferForwarding;
r0 = \"aString\";
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"aStringBuilder\");
r2 = $r1;
$r3 = new java.lang.StringBuffer;
specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"aStringBuffer\");
r4 = $r3;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r8, \"aString\");
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r11, \"aStringBuilder\");
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r4);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r14, \"aStringBuffer\");
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"NonEmpty\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r17, \"NonEmptyaString\");
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"NonEmpty\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r20, \"NonEmptyaStringBuilder\");
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"NonEmpty\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r4);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r5.<javaT.lang.StringBuffer.BufferForwarding: void assertEquals(java.lang.String,java.lang.String)>($r23, \"NonEmptyaStringBuffer\");
return;
"
}
