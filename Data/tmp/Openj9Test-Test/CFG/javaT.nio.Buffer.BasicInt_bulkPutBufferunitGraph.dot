digraph "unitGraph" {
    "r0 := @parameter0: java.nio.IntBuffer"
    "i0 = virtualinvoke r0.<java.nio.IntBuffer: int capacity()>()"
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer clear()>()"
    "$i1 = i0 + 7"
    "r2 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>($i1)"
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(7)"
    "i4 = 0"
    "if i4 >= i0 goto virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()"
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i4)"
    "$i3 = (int) $l2"
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.IntBuffer put(int)>($i3)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()"
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>(r2)"
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer flip()>()"
    "return"
    "r0 := @parameter0: java.nio.IntBuffer"->"i0 = virtualinvoke r0.<java.nio.IntBuffer: int capacity()>()";
    "i0 = virtualinvoke r0.<java.nio.IntBuffer: int capacity()>()"->"virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer clear()>()";
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer clear()>()"->"$i1 = i0 + 7";
    "$i1 = i0 + 7"->"r2 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>($i1)";
    "r2 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>($i1)"->"virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(7)";
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(7)"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()";
    "if i4 >= i0 goto virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()"->"$l2 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i4)";
    "if i4 >= i0 goto virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()"->"virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()";
    "$l2 = staticinvoke <javaT.nio.Buffer.BasicInt: long ic(int)>(i4)"->"$i3 = (int) $l2";
    "$i3 = (int) $l2"->"virtualinvoke r2.<java.nio.IntBuffer: java.nio.IntBuffer put(int)>($i3)";
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.IntBuffer put(int)>($i3)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer flip()>()"->"virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(7)";
    "virtualinvoke r2.<java.nio.IntBuffer: java.nio.Buffer position(int)>(7)"->"virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>(r2)";
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>(r2)"->"virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer flip()>()";
    "virtualinvoke r0.<java.nio.IntBuffer: java.nio.Buffer flip()>()"->"return";
}
