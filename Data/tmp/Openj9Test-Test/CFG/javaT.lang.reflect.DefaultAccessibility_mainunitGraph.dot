digraph "unitGraph" {
    "r22 := @parameter0: java.lang.String[]"
    "$r0 = new javaT.lang.reflect.DefaultAccessibility"
    "specialinvoke $r0.<javaT.lang.reflect.DefaultAccessibility: void <init>()>()"
    "r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()"
    "i0 = 0"
    "r23 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()"
    "i1 = lengthof r23"
    "i2 = 0"
    "if i2 >= i1 goto r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()"
    "r24 = r23[i2]"
    "i0 = i0 + 1"
    "$z2 = virtualinvoke r24.<java.lang.reflect.Constructor: boolean isAccessible()>()"
    "if $z2 == 0 goto i2 = i2 + 1"
    "$r17 = new java.lang.RuntimeException"
    "$r18 = new java.lang.StringBuilder"
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for constructor \")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21)"
    "throw $r17"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()"
    "i3 = lengthof r25"
    "i4 = 0"
    "if i4 >= i3 goto r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()"
    "r26 = r25[i4]"
    "$z1 = virtualinvoke r26.<java.lang.reflect.Method: boolean isAccessible()>()"
    "if $z1 == 0 goto i4 = i4 + 1"
    "$r12 = new java.lang.RuntimeException"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for method \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)"
    "throw $r12"
    "i4 = i4 + 1"
    "r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()"
    "i5 = lengthof r27"
    "i6 = 0"
    "if i6 >= i5 goto (branch)"
    "r28 = r27[i6]"
    "$z0 = virtualinvoke r28.<java.lang.reflect.Field: boolean isAccessible()>()"
    "if $z0 == 0 goto i6 = i6 + 1"
    "$r7 = new java.lang.RuntimeException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for field \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)"
    "throw $r7"
    "i6 = i6 + 1"
    "if i0 >= 3 goto return"
    "$r2 = new java.lang.RuntimeException"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected at least three members; only found \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"
    "throw $r2"
    "return"
    "r22 := @parameter0: java.lang.String[]"->"$r0 = new javaT.lang.reflect.DefaultAccessibility";
    "$r0 = new javaT.lang.reflect.DefaultAccessibility"->"specialinvoke $r0.<javaT.lang.reflect.DefaultAccessibility: void <init>()>()";
    "specialinvoke $r0.<javaT.lang.reflect.DefaultAccessibility: void <init>()>()"->"r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()";
    "r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>()"->"i0 = 0";
    "i0 = 0"->"r23 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()";
    "r23 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()"->"i1 = lengthof r23";
    "i1 = lengthof r23"->"i2 = 0";
    "i2 = 0"->"if i2 >= i1 goto r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()";
    "if i2 >= i1 goto r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()"->"r24 = r23[i2]";
    "if i2 >= i1 goto r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()"->"r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()";
    "r24 = r23[i2]"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"$z2 = virtualinvoke r24.<java.lang.reflect.Constructor: boolean isAccessible()>()";
    "$z2 = virtualinvoke r24.<java.lang.reflect.Constructor: boolean isAccessible()>()"->"if $z2 == 0 goto i2 = i2 + 1";
    "if $z2 == 0 goto i2 = i2 + 1"->"$r17 = new java.lang.RuntimeException";
    "if $z2 == 0 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r17 = new java.lang.RuntimeException"->"$r18 = new java.lang.StringBuilder";
    "$r18 = new java.lang.StringBuilder"->"specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for constructor \")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for constructor \")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24)";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21)";
    "specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21)"->"throw $r17";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i1 goto r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()";
    "r25 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>()"->"i3 = lengthof r25";
    "i3 = lengthof r25"->"i4 = 0";
    "i4 = 0"->"if i4 >= i3 goto r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()";
    "if i4 >= i3 goto r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()"->"r26 = r25[i4]";
    "if i4 >= i3 goto r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()"->"r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()";
    "r26 = r25[i4]"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"$z1 = virtualinvoke r26.<java.lang.reflect.Method: boolean isAccessible()>()";
    "$z1 = virtualinvoke r26.<java.lang.reflect.Method: boolean isAccessible()>()"->"if $z1 == 0 goto i4 = i4 + 1";
    "if $z1 == 0 goto i4 = i4 + 1"->"$r12 = new java.lang.RuntimeException";
    "if $z1 == 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r12 = new java.lang.RuntimeException"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for method \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for method \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)";
    "specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)"->"throw $r12";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i3 goto r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()";
    "r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>()"->"i5 = lengthof r27";
    "i5 = lengthof r27"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto (branch)";
    "if i6 >= i5 goto (branch)"->"r28 = r27[i6]";
    "if i6 >= i5 goto (branch)"->"if i0 >= 3 goto return";
    "r28 = r27[i6]"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"$z0 = virtualinvoke r28.<java.lang.reflect.Field: boolean isAccessible()>()";
    "$z0 = virtualinvoke r28.<java.lang.reflect.Field: boolean isAccessible()>()"->"if $z0 == 0 goto i6 = i6 + 1";
    "if $z0 == 0 goto i6 = i6 + 1"->"$r7 = new java.lang.RuntimeException";
    "if $z0 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r7 = new java.lang.RuntimeException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for field \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected accessibility for field \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)"->"throw $r7";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto (branch)";
    "if i0 >= 3 goto return"->"$r2 = new java.lang.RuntimeException";
    "if i0 >= 3 goto return"->"return";
    "$r2 = new java.lang.RuntimeException"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected at least three members; only found \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected at least three members; only found \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)"->"throw $r2";
}
