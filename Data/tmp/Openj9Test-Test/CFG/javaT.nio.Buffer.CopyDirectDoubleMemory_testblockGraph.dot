digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>();
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
$i0 = virtualinvoke r1.<java.nio.DoubleBuffer: int capacity()>();
r2 = newarray (double)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(double[])>(r2);
virtualinvoke r1.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[])>(r2);
i6 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i6 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$d4 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i6);
$i4 = i6 + 1;
$l5 = staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: long ic(int)>($i4);
$d5 = (double) $l5;
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void ck(java.nio.Buffer,double,double)>(r1, $d4, $d5);
i6 = i6 + 1;
goto [?= $i1 = lengthof r2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(double[])>(r2);
virtualinvoke r1.<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>(r2);
i7 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i7 >= $i2 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$d0 = r2[i7];
$d1 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$b3 = $d0 cmpl $d1;
if $b3 == 0 goto i7 = i7 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$d2 = r2[i7];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$d3 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void fail(java.lang.String)>($r13);
"
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i7 = i7 + 1;
goto [?= $i2 = lengthof r2];
"
    "Block 8:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1049600);
r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>();
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
$i0 = virtualinvoke r1.<java.nio.DoubleBuffer: int capacity()>();
r2 = newarray (double)[$i0];
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(double[])>(r2);
virtualinvoke r1.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[])>(r2);
i6 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i6 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i6 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$d4 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i6);
$i4 = i6 + 1;
$l5 = staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: long ic(int)>($i4);
$d5 = (double) $l5;
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void ck(java.nio.Buffer,double,double)>(r1, $d4, $d5);
i6 = i6 + 1;
goto [?= $i1 = lengthof r2];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i6 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(double[])>(r2);
virtualinvoke r1.<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>(r2);
i7 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$d4 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i6);
$i4 = i6 + 1;
$l5 = staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: long ic(int)>($i4);
$d5 = (double) $l5;
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void ck(java.nio.Buffer,double,double)>(r1, $d4, $d5);
i6 = i6 + 1;
goto [?= $i1 = lengthof r2];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = lengthof r2;
if i6 >= $i1 goto staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(java.nio.DoubleBuffer)>(r1);
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void init(double[])>(r2);
virtualinvoke r1.<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>(r2);
i7 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i7 >= $i2 goto return;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i7 >= $i2 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$d0 = r2[i7];
$d1 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$b3 = $d0 cmpl $d1;
if $b3 == 0 goto i7 = i7 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i7 >= $i2 goto return;
"->"Block 8:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$d0 = r2[i7];
$d1 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$b3 = $d0 cmpl $d1;
if $b3 == 0 goto i7 = i7 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$d2 = r2[i7];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$d3 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void fail(java.lang.String)>($r13);
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$d0 = r2[i7];
$d1 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$b3 = $d0 cmpl $d1;
if $b3 == 0 goto i7 = i7 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i7 = i7 + 1;
goto [?= $i2 = lengthof r2];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Copy failed at \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \'\");
$d2 = r2[i7];
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' != \'\");
$d3 = virtualinvoke r1.<java.nio.DoubleBuffer: double get(int)>(i7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <javaT.nio.Buffer.CopyDirectDoubleMemory: void fail(java.lang.String)>($r13);
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i7 = i7 + 1;
goto [?= $i2 = lengthof r2];
";
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i7 = i7 + 1;
goto [?= $i2 = lengthof r2];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i2 = lengthof r2;
if i7 >= $i2 goto return;
";
}
