digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"blah\", null)"
    "virtualinvoke r0.<java.io.File: void deleteOnExit()>()"
    "r1 = newarray (java.nio.ByteBuffer)[10]"
    "i2 = 0"
    "if i2 >= 10 goto $r2 = new java.io.FileInputStream"
    "$r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(10)"
    "r1[i2] = $r5"
    "$r6 = r1[i2]"
    "virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(10)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "$r2 = new java.io.FileInputStream"
    "specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0)"
    "r9 = $r2"
    "r3 = virtualinvoke r9.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()"
    "l0 = virtualinvoke r3.<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>(r1)"
    "$b1 = l0 cmp 0L"
    "if $b1 == 0 goto virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Nonzero return from read\")"
    "throw $r4"
    "virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()"
    "virtualinvoke r9.<java.io.FileInputStream: void close()>()"
    "virtualinvoke r0.<java.io.File: boolean delete()>()"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"blah\", null)";
    "r0 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>(\"blah\", null)"->"virtualinvoke r0.<java.io.File: void deleteOnExit()>()";
    "virtualinvoke r0.<java.io.File: void deleteOnExit()>()"->"r1 = newarray (java.nio.ByteBuffer)[10]";
    "r1 = newarray (java.nio.ByteBuffer)[10]"->"i2 = 0";
    "i2 = 0"->"if i2 >= 10 goto $r2 = new java.io.FileInputStream";
    "if i2 >= 10 goto $r2 = new java.io.FileInputStream"->"$r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(10)";
    "if i2 >= 10 goto $r2 = new java.io.FileInputStream"->"$r2 = new java.io.FileInputStream";
    "$r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(10)"->"r1[i2] = $r5";
    "r1[i2] = $r5"->"$r6 = r1[i2]";
    "$r6 = r1[i2]"->"virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(10)";
    "virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(10)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 10 goto $r2 = new java.io.FileInputStream";
    "$r2 = new java.io.FileInputStream"->"specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0)";
    "specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0)"->"r9 = $r2";
    "r9 = $r2"->"r3 = virtualinvoke r9.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()";
    "r3 = virtualinvoke r9.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()"->"l0 = virtualinvoke r3.<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>(r1)";
    "l0 = virtualinvoke r3.<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>(r1)"->"$b1 = l0 cmp 0L";
    "$b1 = l0 cmp 0L"->"if $b1 == 0 goto virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()";
    "if $b1 == 0 goto virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()"->"$r4 = new java.lang.RuntimeException";
    "if $b1 == 0 goto virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()"->"virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Nonzero return from read\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Nonzero return from read\")"->"throw $r4";
    "virtualinvoke r3.<java.nio.channels.FileChannel: void close()>()"->"virtualinvoke r9.<java.io.FileInputStream: void close()>()";
    "virtualinvoke r9.<java.io.FileInputStream: void close()>()"->"virtualinvoke r0.<java.io.File: boolean delete()>()";
    "virtualinvoke r0.<java.io.File: boolean delete()>()"->"return";
}
