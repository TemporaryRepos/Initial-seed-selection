digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.nio.charset.CharsetEncoder;
z0 := @parameter1: boolean;
r7 := @parameter2: java.lang.String;
$r1 = <javaT.nio.charset.CharsetEncoder.CanEncode: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke r2.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();
$r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Wrong answer for \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
if z0 != 0 goto $z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r11);
$i0 = <javaT.nio.charset.CharsetEncoder.CanEncode: int errors>;
$i1 = $i0 + 1;
<javaT.nio.charset.CharsetEncoder.CanEncode: int errors> = $i1;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.nio.charset.CharsetEncoder;
z0 := @parameter1: boolean;
r7 := @parameter2: java.lang.String;
$r1 = <javaT.nio.charset.CharsetEncoder.CanEncode: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke r2.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();
$r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Wrong answer for \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
if z0 != 0 goto $z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.nio.charset.CharsetEncoder;
z0 := @parameter1: boolean;
r7 := @parameter2: java.lang.String;
$r1 = <javaT.nio.charset.CharsetEncoder.CanEncode: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke r2.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();
$r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();
$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Wrong answer for \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
if z0 != 0 goto $z1 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r11);
$i0 = <javaT.nio.charset.CharsetEncoder.CanEncode: int errors>;
$i1 = $i0 + 1;
<javaT.nio.charset.CharsetEncoder.CanEncode: int errors> = $i1;
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r11);
$i0 = <javaT.nio.charset.CharsetEncoder.CanEncode: int errors>;
$i1 = $i0 + 1;
<javaT.nio.charset.CharsetEncoder.CanEncode: int errors> = $i1;
return;
";
}
