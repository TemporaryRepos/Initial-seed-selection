digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i4 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$r1 = r0[i4]"
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"-vbs\")"
    "if $z0 != 0 goto <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1"
    "$r15 = r0[i4]"
    "$z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"-verbose\")"
    "if $z1 == 0 goto i4 = i4 + 1"
    "<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1"
    "goto [?= staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")]"
    "i4 = i4 + 1"
    "$i0 = lengthof r0"
    "if i4 < $i0 goto $r1 = r0[i4]"
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")"
    "b5 = 0"
    "i6 = 0"
    "$i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>"
    "$i8 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int maxInstr>"
    "if $i7 <= $i8 goto (branch)"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: unexpected instruction: \")"
    "$i3 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void logErr(java.lang.String)>($r14)"
    "b5 = 2"
    "goto [?= $i2 = b5 + 95]"
    "tableswitch(i6) {     case 0: goto $r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1];     default: goto $i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>; }"
    "$r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1]"
    "$r3 = new nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass"
    "specialinvoke $r3.<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass: void <init>()>()"
    "$r2[0] = $r3"
    "$r4 = <java.lang.Boolean: java.lang.Class TYPE>"
    "$r5 = <java.lang.Byte: java.lang.Class TYPE>"
    "$r6 = <java.lang.Character: java.lang.Class TYPE>"
    "$r7 = <java.lang.Double: java.lang.Class TYPE>"
    "$r8 = <java.lang.Float: java.lang.Class TYPE>"
    "$r9 = <java.lang.Integer: java.lang.Class TYPE>"
    "$r10 = <java.lang.Long: java.lang.Class TYPE>"
    "$r11 = <java.lang.Short: java.lang.Class TYPE>"
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void methodForCommunication()>()"
    "goto [?= i6 = i6 + 1]"
    "$i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>"
    "<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction> = $i1"
    "i6 = i6 + 1"
    "goto [?= $i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>]"
    "$i2 = b5 + 95"
    "staticinvoke <java.lang.System: void exit(int)>($i2)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i4 = 0";
    "i4 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$r1 = r0[i4]"->"$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"-vbs\")";
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"-vbs\")"->"if $z0 != 0 goto <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1";
    "if $z0 != 0 goto <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1"->"$r15 = r0[i4]";
    "if $z0 != 0 goto <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1"->"<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1";
    "$r15 = r0[i4]"->"$z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"-verbose\")";
    "$z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(\"-verbose\")"->"if $z1 == 0 goto i4 = i4 + 1";
    "if $z1 == 0 goto i4 = i4 + 1"->"<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1";
    "if $z1 == 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: boolean verbMode> = 1"->"goto [?= staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")]";
    "goto [?= staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")]"->"staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")";
    "i4 = i4 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i4 < $i0 goto $r1 = r0[i4]";
    "if i4 < $i0 goto $r1 = r0[i4]"->"staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")";
    "if i4 < $i0 goto $r1 = r0[i4]"->"$r1 = r0[i4]";
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void log1(java.lang.String)>(\"debuggee started!\")"->"b5 = 0";
    "b5 = 0"->"i6 = 0";
    "i6 = 0"->"$i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>";
    "$i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>"->"$i8 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int maxInstr>";
    "$i8 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int maxInstr>"->"if $i7 <= $i8 goto (branch)";
    "if $i7 <= $i8 goto (branch)"->"$r12 = new java.lang.StringBuilder";
    "if $i7 <= $i8 goto (branch)"->"tableswitch(i6) {     case 0: goto $r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1];     default: goto $i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>; }";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: unexpected instruction: \")";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: unexpected instruction: \")"->"$i3 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>";
    "$i3 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void logErr(java.lang.String)>($r14)";
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void logErr(java.lang.String)>($r14)"->"b5 = 2";
    "b5 = 2"->"goto [?= $i2 = b5 + 95]";
    "goto [?= $i2 = b5 + 95]"->"$i2 = b5 + 95";
    "tableswitch(i6) {     case 0: goto $r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1];     default: goto $i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>; }"->"$r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1]";
    "tableswitch(i6) {     case 0: goto $r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1];     default: goto $i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>; }"->"$i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>";
    "$r2 = newarray (nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass)[1]"->"$r3 = new nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass";
    "$r3 = new nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass"->"specialinvoke $r3.<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass: void <init>()>()";
    "specialinvoke $r3.<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002aTestClass: void <init>()>()"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"$r4 = <java.lang.Boolean: java.lang.Class TYPE>";
    "$r4 = <java.lang.Boolean: java.lang.Class TYPE>"->"$r5 = <java.lang.Byte: java.lang.Class TYPE>";
    "$r5 = <java.lang.Byte: java.lang.Class TYPE>"->"$r6 = <java.lang.Character: java.lang.Class TYPE>";
    "$r6 = <java.lang.Character: java.lang.Class TYPE>"->"$r7 = <java.lang.Double: java.lang.Class TYPE>";
    "$r7 = <java.lang.Double: java.lang.Class TYPE>"->"$r8 = <java.lang.Float: java.lang.Class TYPE>";
    "$r8 = <java.lang.Float: java.lang.Class TYPE>"->"$r9 = <java.lang.Integer: java.lang.Class TYPE>";
    "$r9 = <java.lang.Integer: java.lang.Class TYPE>"->"$r10 = <java.lang.Long: java.lang.Class TYPE>";
    "$r10 = <java.lang.Long: java.lang.Class TYPE>"->"$r11 = <java.lang.Short: java.lang.Class TYPE>";
    "$r11 = <java.lang.Short: java.lang.Class TYPE>"->"staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void methodForCommunication()>()";
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void methodForCommunication()>()"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$i1 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int end>"->"<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction> = $i1";
    "<nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction> = $i1"->"staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void methodForCommunication()>()";
    "staticinvoke <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: void methodForCommunication()>()"->"goto [?= $i2 = b5 + 95]";
    "goto [?= $i2 = b5 + 95]"->"$i2 = b5 + 95";
    "i6 = i6 + 1"->"goto [?= $i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>]";
    "goto [?= $i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>]"->"$i7 = <nsk.jdi.ReferenceType.nestedTypes.nestedtypes002a: int instruction>";
    "$i2 = b5 + 95"->"staticinvoke <java.lang.System: void exit(int)>($i2)";
    "staticinvoke <java.lang.System: void exit(int)>($i2)"->"return";
}
