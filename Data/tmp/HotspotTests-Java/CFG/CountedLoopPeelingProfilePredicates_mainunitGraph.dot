digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "b0 = 2"
    "r0 = newarray (boolean)[b0]"
    "$i1 = b0 - 1"
    "r0[$i1] = 1"
    "r1 = newarray (boolean)[b0]"
    "r1[0] = 1"
    "r2 = newarray (boolean)[100]"
    "staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>(r2, 1)"
    "r2[0] = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)"
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r1, 0)"
    "i2 = i2 + 1"
    "if i2 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)"
    "i3 = 0"
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)"
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r1, 0, r2, 1)"
    "i3 = i3 + 1"
    "if i3 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"b0 = 2";
    "b0 = 2"->"r0 = newarray (boolean)[b0]";
    "r0 = newarray (boolean)[b0]"->"$i1 = b0 - 1";
    "$i1 = b0 - 1"->"r0[$i1] = 1";
    "r0[$i1] = 1"->"r1 = newarray (boolean)[b0]";
    "r1 = newarray (boolean)[b0]"->"r1[0] = 1";
    "r1[0] = 1"->"r2 = newarray (boolean)[100]";
    "r2 = newarray (boolean)[100]"->"staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>(r2, 1)";
    "staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>(r2, 1)"->"r2[0] = 0";
    "r2[0] = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r1, 0)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r1, 0)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r1, 0)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r1, 0)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)";
    "if i2 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)"->"i3 = 0";
    "if i2 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(b0, r0, 0)";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r1, 0, r2, 1)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r1, 0, r2, 1)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r1, 0, r2, 1)";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r1, 0, r2, 1)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)";
    "if i3 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)"->"return";
    "if i3 < 20000 goto staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test(int,boolean[],boolean,boolean[],int)>(b0, r0, 0, r2, 1)";
}
