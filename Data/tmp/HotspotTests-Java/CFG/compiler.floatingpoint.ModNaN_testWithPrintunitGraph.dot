digraph "unitGraph" {
    "$r0 = <compiler.floatingpoint.ModNaN: double[][] bad>"
    "r38 = $r0"
    "i0 = lengthof $r0"
    "i1 = 0"
    "goto [?= (branch)]"
    "r39 = r38[i1]"
    "d0 = r39[0]"
    "d1 = r39[1]"
    "d2 = d0 % d1"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r5 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d0)"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r10 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d1)"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r15 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d2)"
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r18)"
    "i1 = i1 + 1"
    "if i1 < i0 goto r39 = r38[i1]"
    "$r19 = <compiler.floatingpoint.ModNaN: double[][] good>"
    "r40 = $r19"
    "i2 = lengthof $r19"
    "i3 = 0"
    "r41 = r40[i3]"
    "d3 = r41[0]"
    "d4 = r41[1]"
    "d5 = d3 % d4"
    "$r21 = <java.lang.System: java.io.PrintStream out>"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d3)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r24 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d3)"
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d4)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r29 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d4)"
    "$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5)"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"
    "$r34 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d5)"
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r37)"
    "i3 = i3 + 1"
    "if i3 < i2 goto r41 = r40[i3]"
    "return"
    "$r0 = <compiler.floatingpoint.ModNaN: double[][] bad>"->"r38 = $r0";
    "r38 = $r0"->"i0 = lengthof $r0";
    "i0 = lengthof $r0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto r39 = r38[i1]";
    "r39 = r38[i1]"->"d0 = r39[0]";
    "d0 = r39[0]"->"d1 = r39[1]";
    "d1 = r39[1]"->"d2 = d0 % d1";
    "d2 = d0 % d1"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r5 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d0)";
    "$r5 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d0)"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r10 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d1)";
    "$r10 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d1)"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r15 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d2)";
    "$r15 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d2)"->"$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)";
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r18)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r18)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto r39 = r38[i1]";
    "if i1 < i0 goto r39 = r38[i1]"->"$r19 = <compiler.floatingpoint.ModNaN: double[][] good>";
    "if i1 < i0 goto r39 = r38[i1]"->"r39 = r38[i1]";
    "$r19 = <compiler.floatingpoint.ModNaN: double[][] good>"->"r40 = $r19";
    "r40 = $r19"->"i2 = lengthof $r19";
    "i2 = lengthof $r19"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < i2 goto r41 = r40[i3]";
    "r41 = r40[i3]"->"d3 = r41[0]";
    "d3 = r41[0]"->"d4 = r41[1]";
    "d4 = r41[1]"->"d5 = d3 % d4";
    "d5 = d3 % d4"->"$r21 = <java.lang.System: java.io.PrintStream out>";
    "$r21 = <java.lang.System: java.io.PrintStream out>"->"$r20 = new java.lang.StringBuilder";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()"->"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d3)";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d3)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r24 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d3)";
    "$r24 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d3)"->"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)";
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") mod \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d4)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d4)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r29 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d4)";
    "$r29 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d4)"->"$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)";
    "$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"->"$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")";
    "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") yields \")"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5)";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5)"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")"->"$r34 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d5)";
    "$r34 = staticinvoke <compiler.floatingpoint.ModNaN: java.lang.String toHexRep(double)>(d5)"->"$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)";
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r37)";
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r37)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < i2 goto r41 = r40[i3]";
    "if i3 < i2 goto r41 = r40[i3]"->"return";
    "if i3 < i2 goto r41 = r40[i3]"->"r41 = r40[i3]";
}
