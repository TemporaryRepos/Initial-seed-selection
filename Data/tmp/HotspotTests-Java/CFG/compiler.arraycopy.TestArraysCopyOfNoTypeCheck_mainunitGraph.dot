digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "r0 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)"
    "i0 = i0 + 1"
    "if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)"
    "r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]"
    "$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A"
    "specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>()"
    "r7[0] = $r2"
    "z0 = 0"
    "staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7)"
    "$r5 := @caughtexception"
    "z0 = 1"
    "if z0 != 0 goto return"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: ArrayStoreException not thrown\")"
    "throw $r4"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"r0 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]";
    "r0 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)";
    "staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)";
    "if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)"->"r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]";
    "if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)"->"staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0)";
    "r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20]"->"$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A";
    "$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A"->"specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>()";
    "specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>()"->"r7[0] = $r2";
    "r7[0] = $r2"->"z0 = 0";
    "z0 = 0"->"staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7)";
    "z0 = 0"->"$r5 := @caughtexception";
    "staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7)"->"goto [?= (branch)]";
    "staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7)"->"$r5 := @caughtexception";
    "goto [?= (branch)]"->"if z0 != 0 goto return";
    "$r5 := @caughtexception"->"z0 = 1";
    "z0 = 1"->"if z0 != 0 goto return";
    "if z0 != 0 goto return"->"$r4 = new java.lang.RuntimeException";
    "if z0 != 0 goto return"->"return";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: ArrayStoreException not thrown\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: ArrayStoreException not thrown\")"->"throw $r4";
}
