digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r2 := @this: compiler.escapeAnalysis.Test6726999;
i1 := @parameter0: int;
b0 = 3;
$r0 = new compiler.escapeAnalysis.Test6726999$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>();
r1 = $r0;
virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>();
$r3 = new compiler.escapeAnalysis.Test6726999$Point;
specialinvoke $r3.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>();
r4 = $r3;
virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>();
r5 = newarray (compiler.escapeAnalysis.Test6726999$Point)[1];
r5[0] = r1;
virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>();
r5[0] = r4;
virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>();
$r6 = r5[0];
$r6.<compiler.escapeAnalysis.Test6726999$Point: int x> = b0;
$r7 = r5[0];
$i2 = 3 * b0;
$i3 = $i2 + i1;
$r7.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3;
$r8 = r5[0];
$i5 = $r8.<compiler.escapeAnalysis.Test6726999$Point: int x>;
$r9 = r5[0];
$i4 = $r9.<compiler.escapeAnalysis.Test6726999$Point: int y>;
$i6 = $i5 * $i4;
return $i6;
"
}
