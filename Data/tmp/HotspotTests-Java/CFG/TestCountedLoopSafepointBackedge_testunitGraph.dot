digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i1 = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "i2 = i2 + 1"
    "if i2 < 10 goto i2 = i2 + 1"
    "r0[i1] = i1"
    "i1 = i1 + 1"
    "if i1 < 100 goto i3 = 0"
    "goto [?= return]"
    "i3 = 0"
    "i3 = i3 + 1"
    "if i3 < 10 goto i3 = i3 + 1"
    "goto [?= i2 = 0]"
    "return"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10 goto i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 10 goto i2 = i2 + 1";
    "if i2 < 10 goto i2 = i2 + 1"->"r0[i1] = i1";
    "if i2 < 10 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "r0[i1] = i1"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 100 goto i3 = 0";
    "if i1 < 100 goto i3 = 0"->"goto [?= return]";
    "if i1 < 100 goto i3 = 0"->"i3 = 0";
    "goto [?= return]"->"return";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 10 goto i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 10 goto i3 = i3 + 1";
    "if i3 < 10 goto i3 = i3 + 1"->"goto [?= i2 = 0]";
    "if i3 < 10 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "goto [?= i2 = 0]"->"i2 = 0";
}
