digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r3 := @parameter0: java.lang.String[];
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$i0 = lengthof $r0;
$i1 = $i0 - 1;
$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1);
$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$b3 = $r1[0];
if $b2 == $b3 goto i4 = i4 + 1;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r2;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i4 = i4 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
"
    "Block 5:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
r3 := @parameter0: java.lang.String[];
i4 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$i0 = lengthof $r0;
$i1 = $i0 - 1;
$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1);
$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$b3 = $r1[0];
if $b2 == $b3 goto i4 = i4 + 1;
"->"Block 2:
[preds: 1 ] [succs: ]
$r2 = new java.lang.RuntimeException;
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r2;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$i0 = lengthof $r0;
$i1 = $i0 - 1;
$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1);
$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$b3 = $r1[0];
if $b2 == $b3 goto i4 = i4 + 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i4 = i4 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i4 = i4 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
"->"Block 5:
[preds: 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$i0 = lengthof $r0;
$i1 = $i0 - 1;
$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1);
$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>;
$b3 = $r1[0];
if $b2 == $b3 goto i4 = i4 + 1;
";
}
