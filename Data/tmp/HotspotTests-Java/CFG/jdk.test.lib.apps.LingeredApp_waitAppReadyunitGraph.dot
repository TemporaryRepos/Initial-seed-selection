digraph "unitGraph" {
    "r0 := @this: jdk.test.lib.apps.LingeredApp"
    "l2 := @parameter0: long"
    "l0 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()"
    "l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()"
    "$l7 = l1 - l0"
    "$l8 = l2 * 1000L"
    "$b9 = $l7 cmp $l8"
    "if $b9 <= 0 goto $r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"
    "$r8 = new java.io.IOException"
    "specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>(\"App waiting timeout\")"
    "throw $r8"
    "$r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"
    "l3 = staticinvoke <jdk.test.lib.apps.LingeredApp: long lastModified(java.lang.String)>($r1)"
    "$l4 = r0.<jdk.test.lib.apps.LingeredApp: long lockCreationTime>"
    "$b5 = l3 cmp $l4"
    "if $b5 <= 0 goto $r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"
    "goto [?= return]"
    "$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"
    "$z0 = virtualinvoke $r2.<java.lang.Process: boolean isAlive()>()"
    "if $z0 != 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"
    "$r3 = new java.io.IOException"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"App exited unexpectedly with \")"
    "$r5 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"
    "$i6 = virtualinvoke $r5.<java.lang.Process: int exitValue()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7)"
    "throw $r3"
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"
    "goto [?= l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()]"
    "$r9 := @caughtexception"
    "return"
    "r0 := @this: jdk.test.lib.apps.LingeredApp"->"l2 := @parameter0: long";
    "l2 := @parameter0: long"->"l0 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()";
    "l0 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()"->"l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()";
    "l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()"->"$l7 = l1 - l0";
    "$l7 = l1 - l0"->"$l8 = l2 * 1000L";
    "$l8 = l2 * 1000L"->"$b9 = $l7 cmp $l8";
    "$b9 = $l7 cmp $l8"->"if $b9 <= 0 goto $r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>";
    "if $b9 <= 0 goto $r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"->"$r8 = new java.io.IOException";
    "if $b9 <= 0 goto $r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"->"$r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>";
    "$r8 = new java.io.IOException"->"specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>(\"App waiting timeout\")";
    "specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>(\"App waiting timeout\")"->"throw $r8";
    "$r1 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"->"l3 = staticinvoke <jdk.test.lib.apps.LingeredApp: long lastModified(java.lang.String)>($r1)";
    "l3 = staticinvoke <jdk.test.lib.apps.LingeredApp: long lastModified(java.lang.String)>($r1)"->"$l4 = r0.<jdk.test.lib.apps.LingeredApp: long lockCreationTime>";
    "$l4 = r0.<jdk.test.lib.apps.LingeredApp: long lockCreationTime>"->"$b5 = l3 cmp $l4";
    "$b5 = l3 cmp $l4"->"if $b5 <= 0 goto $r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>";
    "if $b5 <= 0 goto $r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"->"goto [?= return]";
    "if $b5 <= 0 goto $r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"->"$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>";
    "goto [?= return]"->"return";
    "$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"->"$z0 = virtualinvoke $r2.<java.lang.Process: boolean isAlive()>()";
    "$z0 = virtualinvoke $r2.<java.lang.Process: boolean isAlive()>()"->"if $z0 != 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L)";
    "if $z0 != 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"$r3 = new java.io.IOException";
    "if $z0 != 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"staticinvoke <java.lang.Thread: void sleep(long)>(1000L)";
    "if $z0 != 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"$r9 := @caughtexception";
    "$r3 = new java.io.IOException"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"App exited unexpectedly with \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"App exited unexpectedly with \")"->"$r5 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>";
    "$r5 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.Process appProcess>"->"$i6 = virtualinvoke $r5.<java.lang.Process: int exitValue()>()";
    "$i6 = virtualinvoke $r5.<java.lang.Process: int exitValue()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7)";
    "specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7)"->"throw $r3";
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"goto [?= l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()]";
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"$r9 := @caughtexception";
    "goto [?= l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()]"->"l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()";
    "$r9 := @caughtexception"->"goto [?= l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()]";
    "goto [?= l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()]"->"l1 = staticinvoke <jdk.test.lib.apps.LingeredApp: long epoch()>()";
}
