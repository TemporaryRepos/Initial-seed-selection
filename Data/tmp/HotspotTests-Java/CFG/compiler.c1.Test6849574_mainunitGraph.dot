digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.concurrent.atomic.AtomicReferenceArray"
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(10000)"
    "r1 = $r0"
    "i0 = 0"
    "goto [?= (branch)]"
    "$r2 = new java.lang.Object"
    "specialinvoke $r2.<java.lang.Object: void <init>()>()"
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)>(9999, $r2)"
    "if i0 <= 99990 goto i0 = i0 + 1"
    "staticinvoke <java.lang.System: void gc()>()"
    "i0 = i0 + 1"
    "if i0 < 100000 goto $r2 = new java.lang.Object"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new java.util.concurrent.atomic.AtomicReferenceArray";
    "$r0 = new java.util.concurrent.atomic.AtomicReferenceArray"->"specialinvoke $r0.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(10000)";
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(10000)"->"r1 = $r0";
    "r1 = $r0"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 100000 goto $r2 = new java.lang.Object";
    "$r2 = new java.lang.Object"->"specialinvoke $r2.<java.lang.Object: void <init>()>()";
    "specialinvoke $r2.<java.lang.Object: void <init>()>()"->"virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)>(9999, $r2)";
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)>(9999, $r2)"->"if i0 <= 99990 goto i0 = i0 + 1";
    "if i0 <= 99990 goto i0 = i0 + 1"->"staticinvoke <java.lang.System: void gc()>()";
    "if i0 <= 99990 goto i0 = i0 + 1"->"i0 = i0 + 1";
    "staticinvoke <java.lang.System: void gc()>()"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 100000 goto $r2 = new java.lang.Object";
    "if i0 < 100000 goto $r2 = new java.lang.Object"->"return";
    "if i0 < 100000 goto $r2 = new java.lang.Object"->"$r2 = new java.lang.Object";
}
