digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 9 ]
r0 = newarray (char)[16];
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 9 ] [succs: 5 ]
i0 = i8 & 7;
$i1 = i8 >> 4;
$i2 = $i1 & 7;
i3 = i0 + $i2;
c4 = (char) i8;
staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>(r0, i0, i3, c4);
z0 = 0;
i9 = i0;
goto [?= (branch)];
"
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$c5 = r0[i9];
if $c5 == c4 goto i9 = i9 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r2 = <java.lang.System: java.io.PrintStream err>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a[\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$c6 = r0[i9];
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$i7 = lengthof r0;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
z0 = 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
"
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
if i9 < i3 goto $c5 = r0[i9];
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z0 == 0 goto i8 = i8 + 1;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r11 = new java.lang.InternalError;
specialinvoke $r11.<java.lang.InternalError: void <init>()>();
throw $r11;
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
i8 = i8 + 1;
"
    "Block 9:
[preds: 0 8 ] [succs: 10 1 ]
if i8 < 200000 goto i0 = i8 & 7;
"
    "Block 10:
[preds: 9 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 9 ]
r0 = newarray (char)[16];
i8 = 0;
goto [?= (branch)];
"->"Block 9:
[preds: 0 8 ] [succs: 10 1 ]
if i8 < 200000 goto i0 = i8 & 7;
";
    "Block 1:
[preds: 9 ] [succs: 5 ]
i0 = i8 & 7;
$i1 = i8 >> 4;
$i2 = $i1 & 7;
i3 = i0 + $i2;
c4 = (char) i8;
staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>(r0, i0, i3, c4);
z0 = 0;
i9 = i0;
goto [?= (branch)];
"->"Block 5:
[preds: 1 4 ] [succs: 6 2 ]
if i9 < i3 goto $c5 = r0[i9];
";
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$c5 = r0[i9];
if $c5 == c4 goto i9 = i9 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r2 = <java.lang.System: java.io.PrintStream err>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a[\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$c6 = r0[i9];
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$i7 = lengthof r0;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
z0 = 1;
";
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$c5 = r0[i9];
if $c5 == c4 goto i9 = i9 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r2 = <java.lang.System: java.io.PrintStream err>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a[\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$c6 = r0[i9];
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for \");
$i7 = lengthof r0;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
z0 = 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
"->"Block 5:
[preds: 1 4 ] [succs: 6 2 ]
if i9 < i3 goto $c5 = r0[i9];
";
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
if i9 < i3 goto $c5 = r0[i9];
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
if z0 == 0 goto i8 = i8 + 1;
";
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
if i9 < i3 goto $c5 = r0[i9];
"->"Block 2:
[preds: 5 ] [succs: 3 4 ]
$c5 = r0[i9];
if $c5 == c4 goto i9 = i9 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z0 == 0 goto i8 = i8 + 1;
"->"Block 7:
[preds: 6 ] [succs: ]
$r11 = new java.lang.InternalError;
specialinvoke $r11.<java.lang.InternalError: void <init>()>();
throw $r11;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z0 == 0 goto i8 = i8 + 1;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
i8 = i8 + 1;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
i8 = i8 + 1;
"->"Block 9:
[preds: 0 8 ] [succs: 10 1 ]
if i8 < 200000 goto i0 = i8 & 7;
";
    "Block 9:
[preds: 0 8 ] [succs: 10 1 ]
if i8 < 200000 goto i0 = i8 & 7;
"->"Block 10:
[preds: 9 ] [succs: ]
return;
";
    "Block 9:
[preds: 0 8 ] [succs: 10 1 ]
if i8 < 200000 goto i0 = i8 & 7;
"->"Block 1:
[preds: 9 ] [succs: 5 ]
i0 = i8 & 7;
$i1 = i8 >> 4;
$i2 = $i1 & 7;
i3 = i0 + $i2;
c4 = (char) i8;
staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>(r0, i0, i3, c4);
z0 = 0;
i9 = i0;
goto [?= (branch)];
";
}
