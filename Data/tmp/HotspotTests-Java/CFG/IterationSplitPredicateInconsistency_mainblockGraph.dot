digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r10 := @parameter0: java.lang.String[];
r0 = newarray (double)[10];
r1 = newarray (double)[1000];
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test2_helper(int,int,double[],double[],int)>(1000, 0, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 1);
staticinvoke <IterationSplitPredicateInconsistency: boolean test3_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test4_helper(int,int,int,double[],double[],int)>(1000, 0, 1000, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 1);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r10 := @parameter0: java.lang.String[];
r0 = newarray (double)[10];
r1 = newarray (double)[1000];
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test2_helper(int,int,double[],double[],int)>(1000, 0, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 1);
staticinvoke <IterationSplitPredicateInconsistency: boolean test3_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test4_helper(int,int,int,double[],double[],int)>(1000, 0, 1000, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 1);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <IterationSplitPredicateInconsistency: boolean test1_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test1(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test2_helper(int,int,double[],double[],int)>(1000, 0, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test2(int,double[],int)>(5, r0, 1);
staticinvoke <IterationSplitPredicateInconsistency: boolean test3_helper(int,int,double[],double[],int)>(0, 1000, r1, r1, 998);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test3(int,double[],int)>(0, r0, 4);
staticinvoke <IterationSplitPredicateInconsistency: boolean test4_helper(int,int,int,double[],double[],int)>(1000, 0, 1000, r1, r1, 1);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 999);
staticinvoke <IterationSplitPredicateInconsistency: double[] test4(int,double[],int)>(5, r0, 1);
i0 = i0 + 1;
";
}
