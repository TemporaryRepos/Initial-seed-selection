digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r142 := @parameter0: java.lang.String[];
$r0 = new compiler.escapeAnalysis.Test6689060;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060: void <init>()>();
r1 = $r0;
$r2 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r2.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r3 = $r2;
r4 = r3;
r5 = class \"Lcompiler/escapeAnalysis/Test6689060$Point;\";
z0 = 0;
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r6;
$r7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r7;
$r8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r8;
$r9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r9;
$r10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r10;
i6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i6, 1, 0);
i8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i7, 1, 0);
i9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i8);
i10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i9);
i11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i10);
i12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i11);
i13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i12);
i14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i13);
i15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i14);
i16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i15);
i17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i16, r3);
i18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i17);
i19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i18, r3);
i20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i19);
i21 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i20, r3);
i22 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i21, 1, 0);
i23 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i22, 1, 0);
i24 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i23, 1, 0, r5);
i25 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i24);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i25);
i5 = i5 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 10000 goto $r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i27 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r11;
$r12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r12;
$r13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r13;
$r14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r14;
$r15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r15;
i28 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i29 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i28, 1, 0);
i30 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i29, 1, 0);
i31 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i30);
i32 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i31);
i33 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i32);
i34 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i33);
i35 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i34);
i36 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i35);
i37 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i36);
i38 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i37);
i39 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i38, r3);
i40 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i39);
i41 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i40, r3);
i42 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i41);
i43 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i42, r3);
i44 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i43, 1, 0);
i45 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i44, 1, 0);
i46 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i45, 1, 0, r5);
i47 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i46);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i47);
i27 = i27 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i27 < 10000 goto $r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i49 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r16;
$r17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r17;
$r18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r18;
$r19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r19;
$r20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r20;
i50 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i51 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i50, 1, 0);
i52 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i51, 1, 0);
i53 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i52);
i54 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i53);
i55 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i54);
i56 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i55);
i57 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i56);
i58 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i57);
i59 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i58);
i60 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i59);
i61 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i60, r3);
i62 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i61);
i63 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i62, r3);
i64 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i63);
i65 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i64, r3);
i66 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i65, 1, 0);
i67 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i66, 1, 0);
i68 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i67, 1, 0, r5);
i69 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i68);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i69);
i49 = i49 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i49 < 10000 goto $r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"
    "Block 9:
[preds: 8 ] [succs: ]
b71 = 0;
i72 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(0, 1, 0);
i73 = b71 + i72;
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test80\' y=\");
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i72);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r24);
i74 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(0, 1, 0);
i75 = i73 + i74;
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test81\' y=\");
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i74);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r28);
i76 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(0);
i77 = i75 + i76;
$r30 = <java.lang.System: java.io.PrintStream out>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test44\' y=\");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i76);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r32);
i78 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(0);
i79 = i77 + i78;
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test43\' y=\");
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i78);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r36);
i80 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(0);
i81 = i79 + i80;
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test42\' y=\");
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i80);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r40);
i82 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(0);
i83 = i81 + i82;
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test40\' y=\");
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i82);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r44);
i84 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(0);
i85 = i83 + i84;
$r46 = <java.lang.System: java.io.PrintStream out>;
$r45 = new java.lang.StringBuilder;
specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test41\' y=\");
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i84);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r48);
$r49 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r49;
i86 = i85 + i84;
$r51 = <java.lang.System: java.io.PrintStream out>;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test00\' p.y=\");
$r52 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i0 = $r52.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r54);
$r55 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r55;
i87 = i86 + i84;
$r57 = <java.lang.System: java.io.PrintStream out>;
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test01\' p.y=\");
$r58 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i1 = $r58.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r60);
$r61 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r61;
i88 = i87 + i84;
$r63 = <java.lang.System: java.io.PrintStream out>;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test02\' p.y=\");
$r64 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i2 = $r64.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);
$r67 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r67;
i89 = i88 + i84;
$r69 = <java.lang.System: java.io.PrintStream out>;
$r68 = new java.lang.StringBuilder;
specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test03\' p.y=\");
$r70 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i3 = $r70.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r72);
$r73 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r73;
i90 = i89 + i84;
$r75 = <java.lang.System: java.io.PrintStream out>;
$r74 = new java.lang.StringBuilder;
specialinvoke $r74.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test04\' p.y=\");
$r76 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i4 = $r76.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r78);
i91 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i92 = i90 + i91;
$r80 = <java.lang.System: java.io.PrintStream out>;
$r79 = new java.lang.StringBuilder;
specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test05\' y=\");
$r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i91);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r82);
i93 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(0);
i94 = i92 + i93;
$r84 = <java.lang.System: java.io.PrintStream out>;
$r83 = new java.lang.StringBuilder;
specialinvoke $r83.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test0\' y=\");
$r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i93);
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r86);
i95 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(0);
i96 = i94 + i95;
$r88 = <java.lang.System: java.io.PrintStream out>;
$r87 = new java.lang.StringBuilder;
specialinvoke $r87.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test1\' y=\");
$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i95);
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>($r90);
i97 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(0);
i98 = i96 + i97;
$r92 = <java.lang.System: java.io.PrintStream out>;
$r91 = new java.lang.StringBuilder;
specialinvoke $r91.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test2\' y=\");
$r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i97);
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>($r94);
$r95 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r95.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i99 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r95);
i100 = i98 + i99;
$r97 = <java.lang.System: java.io.PrintStream out>;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test3\' y=\");
$r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i99);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>($r99);
i101 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(0);
i102 = i100 + i101;
$r101 = <java.lang.System: java.io.PrintStream out>;
$r100 = new java.lang.StringBuilder;
specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test4\' y=\");
$r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i101);
$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r103);
$r104 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r104.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i103 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r104);
i104 = i102 + i103;
$r106 = <java.lang.System: java.io.PrintStream out>;
$r105 = new java.lang.StringBuilder;
specialinvoke $r105.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test5\' y=\");
$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i103);
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>($r108);
i105 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(0);
i106 = i104 + i105;
$r110 = <java.lang.System: java.io.PrintStream out>;
$r109 = new java.lang.StringBuilder;
specialinvoke $r109.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test6\' y=\");
$r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i105);
$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>($r112);
$r113 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r113.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i107 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r113);
i108 = i106 + i107;
$r115 = <java.lang.System: java.io.PrintStream out>;
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test7\' y=\");
$r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i107);
$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r117);
i109 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(0, 1, 0);
i110 = i108 + i109;
$r119 = <java.lang.System: java.io.PrintStream out>;
$r118 = new java.lang.StringBuilder;
specialinvoke $r118.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test8\' y=\");
$r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i109);
$r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>($r121);
i111 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(0, 1, 0);
i112 = i110 + i111;
$r123 = <java.lang.System: java.io.PrintStream out>;
$r122 = new java.lang.StringBuilder;
specialinvoke $r122.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test9\' y=\");
$r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i111);
$r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r123.<java.io.PrintStream: void println(java.lang.String)>($r125);
i113 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(0, 1, 0, r5);
i114 = i112 + i113;
$r127 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test10\' y=\");
$r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i113);
$r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r127.<java.io.PrintStream: void println(java.lang.String)>($r129);
i115 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(0);
i116 = i114 + i115;
$r131 = <java.lang.System: java.io.PrintStream out>;
$r130 = new java.lang.StringBuilder;
specialinvoke $r130.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test11\' y=\");
$r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i115);
$r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r131.<java.io.PrintStream: void println(java.lang.String)>($r133);
i117 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(0);
i118 = i116 + i117;
$r135 = <java.lang.System: java.io.PrintStream out>;
$r134 = new java.lang.StringBuilder;
specialinvoke $r134.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test12\' y=\");
$r136 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i117);
$r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>($r137);
$r139 = <java.lang.System: java.io.PrintStream out>;
$r138 = new java.lang.StringBuilder;
specialinvoke $r138.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Sum of y =\");
$r140 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i118);
$r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r141);
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r142 := @parameter0: java.lang.String[];
$r0 = new compiler.escapeAnalysis.Test6689060;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060: void <init>()>();
r1 = $r0;
$r2 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r2.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r3 = $r2;
r4 = r3;
r5 = class \"Lcompiler/escapeAnalysis/Test6689060$Point;\";
z0 = 0;
i5 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 10000 goto $r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r6;
$r7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r7;
$r8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r8;
$r9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r9;
$r10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r10;
i6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i6, 1, 0);
i8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i7, 1, 0);
i9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i8);
i10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i9);
i11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i10);
i12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i11);
i13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i12);
i14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i13);
i15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i14);
i16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i15);
i17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i16, r3);
i18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i17);
i19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i18, r3);
i20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i19);
i21 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i20, r3);
i22 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i21, 1, 0);
i23 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i22, 1, 0);
i24 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i23, 1, 0, r5);
i25 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i24);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i25);
i5 = i5 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 10000 goto $r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 10000 goto $r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i27 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 10000 goto $r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r6;
$r7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r7;
$r8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r8;
$r9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r9;
$r10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r10;
i6 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i7 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i6, 1, 0);
i8 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i7, 1, 0);
i9 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i8);
i10 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i9);
i11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i10);
i12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i11);
i13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i12);
i14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i13);
i15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i14);
i16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i15);
i17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i16, r3);
i18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i17);
i19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i18, r3);
i20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i19);
i21 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i20, r3);
i22 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i21, 1, 0);
i23 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i22, 1, 0);
i24 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i23, 1, 0, r5);
i25 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i24);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i25);
i5 = i5 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i27 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i27 < 10000 goto $r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r11;
$r12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r12;
$r13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r13;
$r14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r14;
$r15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r15;
i28 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i29 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i28, 1, 0);
i30 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i29, 1, 0);
i31 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i30);
i32 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i31);
i33 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i32);
i34 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i33);
i35 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i34);
i36 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i35);
i37 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i36);
i38 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i37);
i39 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i38, r3);
i40 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i39);
i41 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i40, r3);
i42 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i41);
i43 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i42, r3);
i44 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i43, 1, 0);
i45 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i44, 1, 0);
i46 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i45, 1, 0, r5);
i47 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i46);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i47);
i27 = i27 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i27 < 10000 goto $r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i27 < 10000 goto $r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i49 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i27 < 10000 goto $r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$r11 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r11;
$r12 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r12;
$r13 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r13;
$r14 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r14;
$r15 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r15;
i28 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i29 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i28, 1, 0);
i30 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i29, 1, 0);
i31 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i30);
i32 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i31);
i33 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i32);
i34 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i33);
i35 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i34);
i36 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i35);
i37 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i36);
i38 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i37);
i39 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i38, r3);
i40 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i39);
i41 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i40, r3);
i42 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i41);
i43 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i42, r3);
i44 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i43, 1, 0);
i45 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i44, 1, 0);
i46 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i45, 1, 0, r5);
i47 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i46);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i47);
i27 = i27 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i49 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i49 < 10000 goto $r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r16;
$r17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r17;
$r18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r18;
$r19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r19;
$r20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r20;
i50 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i51 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i50, 1, 0);
i52 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i51, 1, 0);
i53 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i52);
i54 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i53);
i55 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i54);
i56 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i55);
i57 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i56);
i58 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i57);
i59 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i58);
i60 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i59);
i61 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i60, r3);
i62 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i61);
i63 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i62, r3);
i64 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i63);
i65 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i64, r3);
i66 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i65, 1, 0);
i67 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i66, 1, 0);
i68 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i67, 1, 0, r5);
i69 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i68);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i69);
i49 = i49 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i49 < 10000 goto $r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i49 < 10000 goto $r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 9:
[preds: 8 ] [succs: ]
b71 = 0;
i72 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(0, 1, 0);
i73 = b71 + i72;
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test80\' y=\");
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i72);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r24);
i74 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(0, 1, 0);
i75 = i73 + i74;
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test81\' y=\");
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i74);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r28);
i76 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(0);
i77 = i75 + i76;
$r30 = <java.lang.System: java.io.PrintStream out>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test44\' y=\");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i76);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r32);
i78 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(0);
i79 = i77 + i78;
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test43\' y=\");
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i78);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r36);
i80 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(0);
i81 = i79 + i80;
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test42\' y=\");
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i80);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r40);
i82 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(0);
i83 = i81 + i82;
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test40\' y=\");
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i82);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r44);
i84 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(0);
i85 = i83 + i84;
$r46 = <java.lang.System: java.io.PrintStream out>;
$r45 = new java.lang.StringBuilder;
specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test41\' y=\");
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i84);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r48);
$r49 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r49;
i86 = i85 + i84;
$r51 = <java.lang.System: java.io.PrintStream out>;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test00\' p.y=\");
$r52 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i0 = $r52.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r54);
$r55 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r55;
i87 = i86 + i84;
$r57 = <java.lang.System: java.io.PrintStream out>;
$r56 = new java.lang.StringBuilder;
specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test01\' p.y=\");
$r58 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i1 = $r58.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r60);
$r61 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r61;
i88 = i87 + i84;
$r63 = <java.lang.System: java.io.PrintStream out>;
$r62 = new java.lang.StringBuilder;
specialinvoke $r62.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test02\' p.y=\");
$r64 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i2 = $r64.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);
$r67 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r67;
i89 = i88 + i84;
$r69 = <java.lang.System: java.io.PrintStream out>;
$r68 = new java.lang.StringBuilder;
specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test03\' p.y=\");
$r70 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i3 = $r70.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r72);
$r73 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r73;
i90 = i89 + i84;
$r75 = <java.lang.System: java.io.PrintStream out>;
$r74 = new java.lang.StringBuilder;
specialinvoke $r74.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test04\' p.y=\");
$r76 = r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i4 = $r76.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r78);
i91 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i92 = i90 + i91;
$r80 = <java.lang.System: java.io.PrintStream out>;
$r79 = new java.lang.StringBuilder;
specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test05\' y=\");
$r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i91);
$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r82);
i93 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(0);
i94 = i92 + i93;
$r84 = <java.lang.System: java.io.PrintStream out>;
$r83 = new java.lang.StringBuilder;
specialinvoke $r83.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test0\' y=\");
$r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i93);
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r86);
i95 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(0);
i96 = i94 + i95;
$r88 = <java.lang.System: java.io.PrintStream out>;
$r87 = new java.lang.StringBuilder;
specialinvoke $r87.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test1\' y=\");
$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i95);
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>($r90);
i97 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(0);
i98 = i96 + i97;
$r92 = <java.lang.System: java.io.PrintStream out>;
$r91 = new java.lang.StringBuilder;
specialinvoke $r91.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test2\' y=\");
$r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i97);
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>($r94);
$r95 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r95.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i99 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r95);
i100 = i98 + i99;
$r97 = <java.lang.System: java.io.PrintStream out>;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test3\' y=\");
$r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i99);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>($r99);
i101 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(0);
i102 = i100 + i101;
$r101 = <java.lang.System: java.io.PrintStream out>;
$r100 = new java.lang.StringBuilder;
specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test4\' y=\");
$r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i101);
$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r103);
$r104 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r104.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i103 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r104);
i104 = i102 + i103;
$r106 = <java.lang.System: java.io.PrintStream out>;
$r105 = new java.lang.StringBuilder;
specialinvoke $r105.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test5\' y=\");
$r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i103);
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>($r108);
i105 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(0);
i106 = i104 + i105;
$r110 = <java.lang.System: java.io.PrintStream out>;
$r109 = new java.lang.StringBuilder;
specialinvoke $r109.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test6\' y=\");
$r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i105);
$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>($r112);
$r113 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r113.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
i107 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(0, $r113);
i108 = i106 + i107;
$r115 = <java.lang.System: java.io.PrintStream out>;
$r114 = new java.lang.StringBuilder;
specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test7\' y=\");
$r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i107);
$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r117);
i109 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(0, 1, 0);
i110 = i108 + i109;
$r119 = <java.lang.System: java.io.PrintStream out>;
$r118 = new java.lang.StringBuilder;
specialinvoke $r118.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test8\' y=\");
$r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i109);
$r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>($r121);
i111 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(0, 1, 0);
i112 = i110 + i111;
$r123 = <java.lang.System: java.io.PrintStream out>;
$r122 = new java.lang.StringBuilder;
specialinvoke $r122.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test9\' y=\");
$r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i111);
$r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r123.<java.io.PrintStream: void println(java.lang.String)>($r125);
i113 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(0, 1, 0, r5);
i114 = i112 + i113;
$r127 = <java.lang.System: java.io.PrintStream out>;
$r126 = new java.lang.StringBuilder;
specialinvoke $r126.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test10\' y=\");
$r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i113);
$r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r127.<java.io.PrintStream: void println(java.lang.String)>($r129);
i115 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(0);
i116 = i114 + i115;
$r131 = <java.lang.System: java.io.PrintStream out>;
$r130 = new java.lang.StringBuilder;
specialinvoke $r130.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test11\' y=\");
$r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i115);
$r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r131.<java.io.PrintStream: void println(java.lang.String)>($r133);
i117 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(0);
i118 = i116 + i117;
$r135 = <java.lang.System: java.io.PrintStream out>;
$r134 = new java.lang.StringBuilder;
specialinvoke $r134.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"After \'test12\' y=\");
$r136 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i117);
$r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>($r137);
$r139 = <java.lang.System: java.io.PrintStream out>;
$r138 = new java.lang.StringBuilder;
specialinvoke $r138.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Sum of y =\");
$r140 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i118);
$r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r141);
return;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i49 < 10000 goto $r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$r16 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test00(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r16;
$r17 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test01(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r17;
$r18 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test02(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r18;
$r19 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test03(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r19;
$r20 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: compiler.escapeAnalysis.Test6689060$Point test04(int)>(1);
r4.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = $r20;
i50 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test05(int)>(1);
i51 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test80(int,int,int)>(i50, 1, 0);
i52 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test81(int,int,int)>(i51, 1, 0);
i53 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test44(int)>(i52);
i54 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test43(int)>(i53);
i55 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test42(int)>(i54);
i56 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test40(int)>(i55);
i57 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test41(int)>(i56);
i58 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test0(int)>(i57);
i59 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test1(int)>(i58);
i60 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test2(int)>(i59);
i61 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test3(int,compiler.escapeAnalysis.Test6689060$Point)>(i60, r3);
i62 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test4(int)>(i61);
i63 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test5(int,compiler.escapeAnalysis.Test6689060$Point)>(i62, r3);
i64 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test6(int)>(i63);
i65 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test7(int,compiler.escapeAnalysis.Test6689060$Point)>(i64, r3);
i66 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test8(int,int,int)>(i65, 1, 0);
i67 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test9(int,int,int)>(i66, 1, 0);
i68 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test10(int,int,int,java.lang.Class)>(i67, 1, 0, r5);
i69 = virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test11(int)>(i68);
virtualinvoke r1.<compiler.escapeAnalysis.Test6689060: int test12(int)>(i69);
i49 = i49 + 1;
";
}
