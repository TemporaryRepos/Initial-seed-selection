digraph "unitGraph" {
    "r3 := @this: TriggerResize"
    "i4 := @parameter0: int"
    "$r0 = <TriggerResize: int[] DATA>"
    "$i0 = lengthof $r0"
    "r1 = newarray (byte)[$i0]"
    "i49 = 0"
    "goto [?= $i1 = lengthof r1]"
    "$r2 = <TriggerResize: int[] DATA>"
    "$i2 = $r2[i49]"
    "$b3 = (byte) $i2"
    "r1[i49] = $b3"
    "i49 = i49 + 1"
    "$i1 = lengthof r1"
    "if i49 < $i1 goto $r2 = <TriggerResize: int[] DATA>"
    "i50 = i4 % 10"
    "$i5 = i4 / 10"
    "i6 = $i5 % 10"
    "$i7 = i4 / 100"
    "i8 = $i7 % 10"
    "$i9 = i4 / 1000"
    "i10 = $i9 % 10"
    "$i11 = i4 / 10000"
    "i12 = $i11 % 10"
    "$i13 = <TriggerResize: int INDEX1>"
    "$i19 = $i13 + 0"
    "$i14 = <TriggerResize: int INDEX2>"
    "$i18 = $i14 + 0"
    "$i15 = <TriggerResize: int BASE>"
    "$i16 = $i15 + i12"
    "$b17 = (byte) $i16"
    "r1[$i18] = $b17"
    "r1[$i19] = $b17"
    "$i20 = <TriggerResize: int INDEX1>"
    "$i26 = $i20 + 1"
    "$i21 = <TriggerResize: int INDEX2>"
    "$i25 = $i21 + 1"
    "$i22 = <TriggerResize: int BASE>"
    "$i23 = $i22 + i10"
    "$b24 = (byte) $i23"
    "r1[$i25] = $b24"
    "r1[$i26] = $b24"
    "$i27 = <TriggerResize: int INDEX1>"
    "$i33 = $i27 + 2"
    "$i28 = <TriggerResize: int INDEX2>"
    "$i32 = $i28 + 2"
    "$i29 = <TriggerResize: int BASE>"
    "$i30 = $i29 + i8"
    "$b31 = (byte) $i30"
    "r1[$i32] = $b31"
    "r1[$i33] = $b31"
    "$i34 = <TriggerResize: int INDEX1>"
    "$i40 = $i34 + 3"
    "$i35 = <TriggerResize: int INDEX2>"
    "$i39 = $i35 + 3"
    "$i36 = <TriggerResize: int BASE>"
    "$i37 = $i36 + i6"
    "$b38 = (byte) $i37"
    "r1[$i39] = $b38"
    "r1[$i40] = $b38"
    "$i41 = <TriggerResize: int INDEX1>"
    "$i47 = $i41 + 4"
    "$i42 = <TriggerResize: int INDEX2>"
    "$i46 = $i42 + 4"
    "$i43 = <TriggerResize: int BASE>"
    "$i44 = $i43 + i50"
    "$b45 = (byte) $i44"
    "r1[$i46] = $b45"
    "r1[$i47] = $b45"
    "$i48 = lengthof r1"
    "r4 = virtualinvoke r3.<TriggerResize: java.lang.Class defineClass(byte[],int,int)>(r1, 0, $i48)"
    "virtualinvoke r3.<TriggerResize: void resolveClass(java.lang.Class)>(r4)"
    "return"
    "r3 := @this: TriggerResize"->"i4 := @parameter0: int";
    "i4 := @parameter0: int"->"$r0 = <TriggerResize: int[] DATA>";
    "$r0 = <TriggerResize: int[] DATA>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"r1 = newarray (byte)[$i0]";
    "r1 = newarray (byte)[$i0]"->"i49 = 0";
    "i49 = 0"->"goto [?= $i1 = lengthof r1]";
    "goto [?= $i1 = lengthof r1]"->"$i1 = lengthof r1";
    "$r2 = <TriggerResize: int[] DATA>"->"$i2 = $r2[i49]";
    "$i2 = $r2[i49]"->"$b3 = (byte) $i2";
    "$b3 = (byte) $i2"->"r1[i49] = $b3";
    "r1[i49] = $b3"->"i49 = i49 + 1";
    "i49 = i49 + 1"->"$i1 = lengthof r1";
    "$i1 = lengthof r1"->"if i49 < $i1 goto $r2 = <TriggerResize: int[] DATA>";
    "if i49 < $i1 goto $r2 = <TriggerResize: int[] DATA>"->"i50 = i4 % 10";
    "if i49 < $i1 goto $r2 = <TriggerResize: int[] DATA>"->"$r2 = <TriggerResize: int[] DATA>";
    "i50 = i4 % 10"->"$i5 = i4 / 10";
    "$i5 = i4 / 10"->"i6 = $i5 % 10";
    "i6 = $i5 % 10"->"$i7 = i4 / 100";
    "$i7 = i4 / 100"->"i8 = $i7 % 10";
    "i8 = $i7 % 10"->"$i9 = i4 / 1000";
    "$i9 = i4 / 1000"->"i10 = $i9 % 10";
    "i10 = $i9 % 10"->"$i11 = i4 / 10000";
    "$i11 = i4 / 10000"->"i12 = $i11 % 10";
    "i12 = $i11 % 10"->"$i13 = <TriggerResize: int INDEX1>";
    "$i13 = <TriggerResize: int INDEX1>"->"$i19 = $i13 + 0";
    "$i19 = $i13 + 0"->"$i14 = <TriggerResize: int INDEX2>";
    "$i14 = <TriggerResize: int INDEX2>"->"$i18 = $i14 + 0";
    "$i18 = $i14 + 0"->"$i15 = <TriggerResize: int BASE>";
    "$i15 = <TriggerResize: int BASE>"->"$i16 = $i15 + i12";
    "$i16 = $i15 + i12"->"$b17 = (byte) $i16";
    "$b17 = (byte) $i16"->"r1[$i18] = $b17";
    "r1[$i18] = $b17"->"r1[$i19] = $b17";
    "r1[$i19] = $b17"->"$i20 = <TriggerResize: int INDEX1>";
    "$i20 = <TriggerResize: int INDEX1>"->"$i26 = $i20 + 1";
    "$i26 = $i20 + 1"->"$i21 = <TriggerResize: int INDEX2>";
    "$i21 = <TriggerResize: int INDEX2>"->"$i25 = $i21 + 1";
    "$i25 = $i21 + 1"->"$i22 = <TriggerResize: int BASE>";
    "$i22 = <TriggerResize: int BASE>"->"$i23 = $i22 + i10";
    "$i23 = $i22 + i10"->"$b24 = (byte) $i23";
    "$b24 = (byte) $i23"->"r1[$i25] = $b24";
    "r1[$i25] = $b24"->"r1[$i26] = $b24";
    "r1[$i26] = $b24"->"$i27 = <TriggerResize: int INDEX1>";
    "$i27 = <TriggerResize: int INDEX1>"->"$i33 = $i27 + 2";
    "$i33 = $i27 + 2"->"$i28 = <TriggerResize: int INDEX2>";
    "$i28 = <TriggerResize: int INDEX2>"->"$i32 = $i28 + 2";
    "$i32 = $i28 + 2"->"$i29 = <TriggerResize: int BASE>";
    "$i29 = <TriggerResize: int BASE>"->"$i30 = $i29 + i8";
    "$i30 = $i29 + i8"->"$b31 = (byte) $i30";
    "$b31 = (byte) $i30"->"r1[$i32] = $b31";
    "r1[$i32] = $b31"->"r1[$i33] = $b31";
    "r1[$i33] = $b31"->"$i34 = <TriggerResize: int INDEX1>";
    "$i34 = <TriggerResize: int INDEX1>"->"$i40 = $i34 + 3";
    "$i40 = $i34 + 3"->"$i35 = <TriggerResize: int INDEX2>";
    "$i35 = <TriggerResize: int INDEX2>"->"$i39 = $i35 + 3";
    "$i39 = $i35 + 3"->"$i36 = <TriggerResize: int BASE>";
    "$i36 = <TriggerResize: int BASE>"->"$i37 = $i36 + i6";
    "$i37 = $i36 + i6"->"$b38 = (byte) $i37";
    "$b38 = (byte) $i37"->"r1[$i39] = $b38";
    "r1[$i39] = $b38"->"r1[$i40] = $b38";
    "r1[$i40] = $b38"->"$i41 = <TriggerResize: int INDEX1>";
    "$i41 = <TriggerResize: int INDEX1>"->"$i47 = $i41 + 4";
    "$i47 = $i41 + 4"->"$i42 = <TriggerResize: int INDEX2>";
    "$i42 = <TriggerResize: int INDEX2>"->"$i46 = $i42 + 4";
    "$i46 = $i42 + 4"->"$i43 = <TriggerResize: int BASE>";
    "$i43 = <TriggerResize: int BASE>"->"$i44 = $i43 + i50";
    "$i44 = $i43 + i50"->"$b45 = (byte) $i44";
    "$b45 = (byte) $i44"->"r1[$i46] = $b45";
    "r1[$i46] = $b45"->"r1[$i47] = $b45";
    "r1[$i47] = $b45"->"$i48 = lengthof r1";
    "$i48 = lengthof r1"->"r4 = virtualinvoke r3.<TriggerResize: java.lang.Class defineClass(byte[],int,int)>(r1, 0, $i48)";
    "r4 = virtualinvoke r3.<TriggerResize: java.lang.Class defineClass(byte[],int,int)>(r1, 0, $i48)"->"virtualinvoke r3.<TriggerResize: void resolveClass(java.lang.Class)>(r4)";
    "virtualinvoke r3.<TriggerResize: void resolveClass(java.lang.Class)>(r4)"->"return";
}
