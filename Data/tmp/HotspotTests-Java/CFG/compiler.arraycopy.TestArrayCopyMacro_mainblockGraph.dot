digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r17 := @parameter0: java.lang.String[];
r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10];
i2 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>();
r0[i2] = $r1;
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
i3 = i3 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
"
    "Block 6:
[preds: 5 ] [succs: 13 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 13 ] [succs: 11 ]
$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
r4 = (java.lang.Object[]) $r3;
i5 = 0;
goto [?= $i1 = lengthof r0];
"
    "Block 8:
[preds: 11 ] [succs: 9 10 ]
$r6 = r4[i5];
$r5 = r0[i5];
if $r6 == $r5 goto i5 = i5 + 1;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r7 = new java.lang.RuntimeException;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"copy failed at index \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src = \");
$r11 = r0[i5];
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" dest = \");
$r14 = r4[i5];
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);
throw $r7;
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
i5 = i5 + 1;
"
    "Block 11:
[preds: 7 10 ] [succs: 12 8 ]
$i1 = lengthof r0;
if i5 < $i1 goto $r6 = r4[i5];
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
i4 = i4 + 1;
"
    "Block 13:
[preds: 6 12 ] [succs: 14 7 ]
if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
"
    "Block 14:
[preds: 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r17 := @parameter0: java.lang.String[];
r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10];
i2 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>();
r0[i2] = $r1;
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new compiler.arraycopy.TestArrayCopyMacro$A;
specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>();
r0[i2] = $r1;
i2 = i2 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
i3 = i3 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
"->"Block 6:
[preds: 5 ] [succs: 13 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0);
i3 = i3 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 13 ]
i4 = 0;
goto [?= (branch)];
"->"Block 13:
[preds: 6 12 ] [succs: 14 7 ]
if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
";
    "Block 7:
[preds: 13 ] [succs: 11 ]
$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
r4 = (java.lang.Object[]) $r3;
i5 = 0;
goto [?= $i1 = lengthof r0];
"->"Block 11:
[preds: 7 10 ] [succs: 12 8 ]
$i1 = lengthof r0;
if i5 < $i1 goto $r6 = r4[i5];
";
    "Block 8:
[preds: 11 ] [succs: 9 10 ]
$r6 = r4[i5];
$r5 = r0[i5];
if $r6 == $r5 goto i5 = i5 + 1;
"->"Block 9:
[preds: 8 ] [succs: ]
$r7 = new java.lang.RuntimeException;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"copy failed at index \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src = \");
$r11 = r0[i5];
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" dest = \");
$r14 = r4[i5];
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);
throw $r7;
";
    "Block 8:
[preds: 11 ] [succs: 9 10 ]
$r6 = r4[i5];
$r5 = r0[i5];
if $r6 == $r5 goto i5 = i5 + 1;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
i5 = i5 + 1;
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
i5 = i5 + 1;
"->"Block 11:
[preds: 7 10 ] [succs: 12 8 ]
$i1 = lengthof r0;
if i5 < $i1 goto $r6 = r4[i5];
";
    "Block 11:
[preds: 7 10 ] [succs: 12 8 ]
$i1 = lengthof r0;
if i5 < $i1 goto $r6 = r4[i5];
"->"Block 12:
[preds: 11 ] [succs: 13 ]
i4 = i4 + 1;
";
    "Block 11:
[preds: 7 10 ] [succs: 12 8 ]
$i1 = lengthof r0;
if i5 < $i1 goto $r6 = r4[i5];
"->"Block 8:
[preds: 11 ] [succs: 9 10 ]
$r6 = r4[i5];
$r5 = r0[i5];
if $r6 == $r5 goto i5 = i5 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
i4 = i4 + 1;
"->"Block 13:
[preds: 6 12 ] [succs: 14 7 ]
if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
";
    "Block 13:
[preds: 6 12 ] [succs: 14 7 ]
if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
"->"Block 14:
[preds: 13 ] [succs: ]
return;
";
    "Block 13:
[preds: 6 12 ] [succs: 14 7 ]
if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
"->"Block 7:
[preds: 13 ] [succs: 11 ]
$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null);
r4 = (java.lang.Object[]) $r3;
i5 = 0;
goto [?= $i1 = lengthof r0];
";
}
