digraph "unitGraph" {
    "r0 := @parameter0: double[]"
    "r4 := @parameter1: java.lang.Double"
    "r1 = r0"
    "i0 = lengthof r0"
    "i1 = 0"
    "goto [?= (branch)]"
    "$d0 = r1[i1]"
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"
    "$d1 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()"
    "$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"
    "$r3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double foob(double)>($d2)"
    "$d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()"
    "$d4 = $d1 + $d3"
    "r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)"
    "i1 = i1 + 1"
    "if i1 < i0 goto $d0 = r1[i1]"
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"
    "$d5 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()"
    "return $d5"
    "r0 := @parameter0: double[]"->"r4 := @parameter1: java.lang.Double";
    "r4 := @parameter1: java.lang.Double"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto $d0 = r1[i1]";
    "$d0 = r1[i1]"->"r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)";
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"$d1 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()"->"$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()";
    "$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"->"$r3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double foob(double)>($d2)";
    "$r3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double foob(double)>($d2)"->"$d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()";
    "$d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()"->"$d4 = $d1 + $d3";
    "$d4 = $d1 + $d3"->"r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)";
    "r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto $d0 = r1[i1]";
    "if i1 < i0 goto $d0 = r1[i1]"->"staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()";
    "if i1 < i0 goto $d0 = r1[i1]"->"$d0 = r1[i1]";
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"->"$d5 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()";
    "$d5 = virtualinvoke r4.<java.lang.Double: double doubleValue()>()"->"return $d5";
}
