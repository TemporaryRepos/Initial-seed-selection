digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 6 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i6 = r0[1];
<compiler.c2.Test5091921: int result> = i6;
i7 = -2147483648;
goto [?= (branch)];
"
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
if i7 <= -2147483648 goto $i1 = i7 & 3;
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i3 = i7 - 9;
if $i3 >= -9 goto return i6;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i8 = i6 + i7;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i7 & 7;
$i5 = r0[$i4];
i6 = i8 ^ $i5;
<compiler.c2.Test5091921: int result> = i6;
goto [?= i7 = i7 + 1];
"
    "Block 4:
[preds: 1 ] [succs: 5 ]
$i1 = i7 & 3;
$i2 = r0[$i1];
i6 = i6 + $i2;
<compiler.c2.Test5091921: int result> = i6;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i7 = i7 + 1;
"
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i7 < i0 goto (branch);
"
    "Block 7:
[preds: 2 6 ] [succs: ]
return i6;
"
    "Block 0:
[preds: ] [succs: 6 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i6 = r0[1];
<compiler.c2.Test5091921: int result> = i6;
i7 = -2147483648;
goto [?= (branch)];
"->"Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i7 < i0 goto (branch);
";
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
if i7 <= -2147483648 goto $i1 = i7 & 3;
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
$i3 = i7 - 9;
if $i3 >= -9 goto return i6;
";
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
if i7 <= -2147483648 goto $i1 = i7 & 3;
"->"Block 4:
[preds: 1 ] [succs: 5 ]
$i1 = i7 & 3;
$i2 = r0[$i1];
i6 = i6 + $i2;
<compiler.c2.Test5091921: int result> = i6;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i3 = i7 - 9;
if $i3 >= -9 goto return i6;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i8 = i6 + i7;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i7 & 7;
$i5 = r0[$i4];
i6 = i8 ^ $i5;
<compiler.c2.Test5091921: int result> = i6;
goto [?= i7 = i7 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$i3 = i7 - 9;
if $i3 >= -9 goto return i6;
"->"Block 7:
[preds: 2 6 ] [succs: ]
return i6;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i8 = i6 + i7;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i7 & 7;
$i5 = r0[$i4];
i6 = i8 ^ $i5;
<compiler.c2.Test5091921: int result> = i6;
goto [?= i7 = i7 + 1];
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i7 = i7 + 1;
";
    "Block 4:
[preds: 1 ] [succs: 5 ]
$i1 = i7 & 3;
$i2 = r0[$i1];
i6 = i6 + $i2;
<compiler.c2.Test5091921: int result> = i6;
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i7 = i7 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i7 = i7 + 1;
"->"Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i7 < i0 goto (branch);
";
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i7 < i0 goto (branch);
"->"Block 7:
[preds: 2 6 ] [succs: ]
return i6;
";
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i7 < i0 goto (branch);
"->"Block 1:
[preds: 6 ] [succs: 2 4 ]
if i7 <= -2147483648 goto $i1 = i7 & 3;
";
}
