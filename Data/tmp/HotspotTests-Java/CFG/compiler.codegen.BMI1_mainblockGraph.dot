digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r24 := @parameter0: java.lang.String[];
i0 = 19088743;
i1 = -1985229329;
$r0 = new compiler.codegen.BMI1$MemI;
specialinvoke $r0.<compiler.codegen.BMI1$MemI: void <init>(int)>(i1);
r1 = $r0;
l2 = 81985526925837671L;
l3 = -8526495040805286417L;
$r2 = new compiler.codegen.BMI1$MemL;
specialinvoke $r2.<compiler.codegen.BMI1$MemL: void <init>(long)>(l3);
r3 = $r2;
i12 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
i13 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
if i14 == i12 goto i13 = i13 + 1;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with register failed\");
throw $r4;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i13 = i13 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
"
    "Block 5:
[preds: 4 ] [succs: 9 ]
l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
i16 = 0;
goto [?= (branch)];
"
    "Block 6:
[preds: 9 ] [succs: 7 8 ]
l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
$b4 = l17 cmp l15;
if $b4 == 0 goto i16 = i16 + 1;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with register failed\");
throw $r5;
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
i16 = i16 + 1;
"
    "Block 9:
[preds: 5 8 ] [succs: 10 6 ]
if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
"
    "Block 10:
[preds: 9 ] [succs: 14 ]
i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
i19 = 0;
goto [?= (branch)];
"
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
if i20 == i18 goto i19 = i19 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r6 = new java.lang.Error;
specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with memory failed\");
throw $r6;
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
i19 = i19 + 1;
"
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
"
    "Block 15:
[preds: 14 ] [succs: 19 ]
l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
i22 = 0;
goto [?= (branch)];
"
    "Block 16:
[preds: 19 ] [succs: 17 18 ]
l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
$b5 = l23 cmp l21;
if $b5 == 0 goto i22 = i22 + 1;
"
    "Block 17:
[preds: 16 ] [succs: ]
$r7 = new java.lang.Error;
specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with memory failed\");
throw $r7;
"
    "Block 18:
[preds: 16 ] [succs: 19 ]
i22 = i22 + 1;
"
    "Block 19:
[preds: 15 18 ] [succs: 20 16 ]
if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
"
    "Block 20:
[preds: 19 ] [succs: 24 ]
i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
i25 = 0;
goto [?= (branch)];
"
    "Block 21:
[preds: 24 ] [succs: 22 23 ]
i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
if i26 == i24 goto i25 = i25 + 1;
"
    "Block 22:
[preds: 21 ] [succs: ]
$r8 = new java.lang.Error;
specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with register failed\");
throw $r8;
"
    "Block 23:
[preds: 21 ] [succs: 24 ]
i25 = i25 + 1;
"
    "Block 24:
[preds: 20 23 ] [succs: 25 21 ]
if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
"
    "Block 25:
[preds: 24 ] [succs: 29 ]
l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
i28 = 0;
goto [?= (branch)];
"
    "Block 26:
[preds: 29 ] [succs: 27 28 ]
l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
$b6 = l29 cmp l27;
if $b6 == 0 goto i28 = i28 + 1;
"
    "Block 27:
[preds: 26 ] [succs: ]
$r9 = new java.lang.Error;
specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with register failed\");
throw $r9;
"
    "Block 28:
[preds: 26 ] [succs: 29 ]
i28 = i28 + 1;
"
    "Block 29:
[preds: 25 28 ] [succs: 30 26 ]
if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
"
    "Block 30:
[preds: 29 ] [succs: 34 ]
i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
i31 = 0;
goto [?= (branch)];
"
    "Block 31:
[preds: 34 ] [succs: 32 33 ]
i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
if i32 == i30 goto i31 = i31 + 1;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r10 = new java.lang.Error;
specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with memory failed\");
throw $r10;
"
    "Block 33:
[preds: 31 ] [succs: 34 ]
i31 = i31 + 1;
"
    "Block 34:
[preds: 30 33 ] [succs: 35 31 ]
if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
"
    "Block 35:
[preds: 34 ] [succs: 39 ]
l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
i34 = 0;
goto [?= (branch)];
"
    "Block 36:
[preds: 39 ] [succs: 37 38 ]
l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
$b7 = l35 cmp l33;
if $b7 == 0 goto i34 = i34 + 1;
"
    "Block 37:
[preds: 36 ] [succs: ]
$r11 = new java.lang.Error;
specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with memory failed\");
throw $r11;
"
    "Block 38:
[preds: 36 ] [succs: 39 ]
i34 = i34 + 1;
"
    "Block 39:
[preds: 35 38 ] [succs: 40 36 ]
if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
"
    "Block 40:
[preds: 39 ] [succs: 44 ]
i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
i37 = 0;
goto [?= (branch)];
"
    "Block 41:
[preds: 44 ] [succs: 42 43 ]
i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
if i38 == i36 goto i37 = i37 + 1;
"
    "Block 42:
[preds: 41 ] [succs: ]
$r12 = new java.lang.Error;
specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with register failed\");
throw $r12;
"
    "Block 43:
[preds: 41 ] [succs: 44 ]
i37 = i37 + 1;
"
    "Block 44:
[preds: 40 43 ] [succs: 45 41 ]
if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
"
    "Block 45:
[preds: 44 ] [succs: 49 ]
l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
i40 = 0;
goto [?= (branch)];
"
    "Block 46:
[preds: 49 ] [succs: 47 48 ]
l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
$b8 = l41 cmp l39;
if $b8 == 0 goto i40 = i40 + 1;
"
    "Block 47:
[preds: 46 ] [succs: ]
$r13 = new java.lang.Error;
specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with register failed\");
throw $r13;
"
    "Block 48:
[preds: 46 ] [succs: 49 ]
i40 = i40 + 1;
"
    "Block 49:
[preds: 45 48 ] [succs: 50 46 ]
if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
"
    "Block 50:
[preds: 49 ] [succs: 54 ]
i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
i43 = 0;
goto [?= (branch)];
"
    "Block 51:
[preds: 54 ] [succs: 52 53 ]
i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
if i44 == i42 goto i43 = i43 + 1;
"
    "Block 52:
[preds: 51 ] [succs: ]
$r14 = new java.lang.Error;
specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with memory failed\");
throw $r14;
"
    "Block 53:
[preds: 51 ] [succs: 54 ]
i43 = i43 + 1;
"
    "Block 54:
[preds: 50 53 ] [succs: 55 51 ]
if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
"
    "Block 55:
[preds: 54 ] [succs: 59 ]
l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
i46 = 0;
goto [?= (branch)];
"
    "Block 56:
[preds: 59 ] [succs: 57 58 ]
l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
$b9 = l47 cmp l45;
if $b9 == 0 goto i46 = i46 + 1;
"
    "Block 57:
[preds: 56 ] [succs: ]
$r15 = new java.lang.Error;
specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with memory failed\");
throw $r15;
"
    "Block 58:
[preds: 56 ] [succs: 59 ]
i46 = i46 + 1;
"
    "Block 59:
[preds: 55 58 ] [succs: 60 56 ]
if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
"
    "Block 60:
[preds: 59 ] [succs: 64 ]
i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
i49 = 0;
goto [?= (branch)];
"
    "Block 61:
[preds: 64 ] [succs: 62 63 ]
i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
if i50 == i48 goto i49 = i49 + 1;
"
    "Block 62:
[preds: 61 ] [succs: ]
$r16 = new java.lang.Error;
specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with register failed\");
throw $r16;
"
    "Block 63:
[preds: 61 ] [succs: 64 ]
i49 = i49 + 1;
"
    "Block 64:
[preds: 60 63 ] [succs: 65 61 ]
if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
"
    "Block 65:
[preds: 64 ] [succs: 69 ]
l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
i52 = 0;
goto [?= (branch)];
"
    "Block 66:
[preds: 69 ] [succs: 67 68 ]
l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
$b10 = l53 cmp l51;
if $b10 == 0 goto i52 = i52 + 1;
"
    "Block 67:
[preds: 66 ] [succs: ]
$r17 = new java.lang.Error;
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with register failed\");
throw $r17;
"
    "Block 68:
[preds: 66 ] [succs: 69 ]
i52 = i52 + 1;
"
    "Block 69:
[preds: 65 68 ] [succs: 70 66 ]
if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
"
    "Block 70:
[preds: 69 ] [succs: 74 ]
i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
i55 = 0;
goto [?= (branch)];
"
    "Block 71:
[preds: 74 ] [succs: 72 73 ]
i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
if i56 == i54 goto i55 = i55 + 1;
"
    "Block 72:
[preds: 71 ] [succs: ]
$r18 = new java.lang.Error;
specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with memory failed\");
throw $r18;
"
    "Block 73:
[preds: 71 ] [succs: 74 ]
i55 = i55 + 1;
"
    "Block 74:
[preds: 70 73 ] [succs: 75 71 ]
if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
"
    "Block 75:
[preds: 74 ] [succs: 79 ]
l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
i58 = 0;
goto [?= (branch)];
"
    "Block 76:
[preds: 79 ] [succs: 77 78 ]
l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
$b11 = l59 cmp l57;
if $b11 == 0 goto i58 = i58 + 1;
"
    "Block 77:
[preds: 76 ] [succs: ]
$r19 = new java.lang.Error;
specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with memory failed\");
throw $r19;
"
    "Block 78:
[preds: 76 ] [succs: 79 ]
i58 = i58 + 1;
"
    "Block 79:
[preds: 75 78 ] [succs: 80 76 ]
if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
"
    "Block 80:
[preds: 79 ] [succs: 84 ]
i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
i61 = 0;
goto [?= (branch)];
"
    "Block 81:
[preds: 84 ] [succs: 82 83 ]
i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
if i62 == i60 goto i61 = i61 + 1;
"
    "Block 82:
[preds: 81 ] [succs: ]
$r20 = new java.lang.Error;
specialinvoke $r20.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntl failed\");
throw $r20;
"
    "Block 83:
[preds: 81 ] [succs: 84 ]
i61 = i61 + 1;
"
    "Block 84:
[preds: 80 83 ] [succs: 85 81 ]
if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
"
    "Block 85:
[preds: 84 ] [succs: 89 ]
i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
i64 = 0;
goto [?= (branch)];
"
    "Block 86:
[preds: 89 ] [succs: 87 88 ]
i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
if i65 == i63 goto i64 = i64 + 1;
"
    "Block 87:
[preds: 86 ] [succs: ]
$r21 = new java.lang.Error;
specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntq failed\");
throw $r21;
"
    "Block 88:
[preds: 86 ] [succs: 89 ]
i64 = i64 + 1;
"
    "Block 89:
[preds: 85 88 ] [succs: 90 86 ]
if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
"
    "Block 90:
[preds: 89 ] [succs: 94 ]
i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
i67 = 0;
goto [?= (branch)];
"
    "Block 91:
[preds: 94 ] [succs: 92 93 ]
i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
if i68 == i66 goto i67 = i67 + 1;
"
    "Block 92:
[preds: 91 ] [succs: ]
$r22 = new java.lang.Error;
specialinvoke $r22.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntl failed\");
throw $r22;
"
    "Block 93:
[preds: 91 ] [succs: 94 ]
i67 = i67 + 1;
"
    "Block 94:
[preds: 90 93 ] [succs: 95 91 ]
if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
"
    "Block 95:
[preds: 94 ] [succs: 99 ]
i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
i70 = 0;
goto [?= (branch)];
"
    "Block 96:
[preds: 99 ] [succs: 97 98 ]
i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
if i71 == i69 goto i70 = i70 + 1;
"
    "Block 97:
[preds: 96 ] [succs: ]
$r23 = new java.lang.Error;
specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntq failed\");
throw $r23;
"
    "Block 98:
[preds: 96 ] [succs: 99 ]
i70 = i70 + 1;
"
    "Block 99:
[preds: 95 98 ] [succs: 100 96 ]
if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
"
    "Block 100:
[preds: 99 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
r24 := @parameter0: java.lang.String[];
i0 = 19088743;
i1 = -1985229329;
$r0 = new compiler.codegen.BMI1$MemI;
specialinvoke $r0.<compiler.codegen.BMI1$MemI: void <init>(int)>(i1);
r1 = $r0;
l2 = 81985526925837671L;
l3 = -8526495040805286417L;
$r2 = new compiler.codegen.BMI1$MemL;
specialinvoke $r2.<compiler.codegen.BMI1$MemL: void <init>(long)>(l3);
r3 = $r2;
i12 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
i13 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
if i14 == i12 goto i13 = i13 + 1;
"->"Block 2:
[preds: 1 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with register failed\");
throw $r4;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
if i14 == i12 goto i13 = i13 + 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i13 = i13 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i13 = i13 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
"->"Block 5:
[preds: 4 ] [succs: 9 ]
l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
i16 = 0;
goto [?= (branch)];
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1);
if i14 == i12 goto i13 = i13 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 9 ]
l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
i16 = 0;
goto [?= (branch)];
"->"Block 9:
[preds: 5 8 ] [succs: 10 6 ]
if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
";
    "Block 6:
[preds: 9 ] [succs: 7 8 ]
l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
$b4 = l17 cmp l15;
if $b4 == 0 goto i16 = i16 + 1;
"->"Block 7:
[preds: 6 ] [succs: ]
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with register failed\");
throw $r5;
";
    "Block 6:
[preds: 9 ] [succs: 7 8 ]
l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
$b4 = l17 cmp l15;
if $b4 == 0 goto i16 = i16 + 1;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
i16 = i16 + 1;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
i16 = i16 + 1;
"->"Block 9:
[preds: 5 8 ] [succs: 10 6 ]
if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
";
    "Block 9:
[preds: 5 8 ] [succs: 10 6 ]
if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
"->"Block 10:
[preds: 9 ] [succs: 14 ]
i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
i19 = 0;
goto [?= (branch)];
";
    "Block 9:
[preds: 5 8 ] [succs: 10 6 ]
if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
"->"Block 6:
[preds: 9 ] [succs: 7 8 ]
l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3);
$b4 = l17 cmp l15;
if $b4 == 0 goto i16 = i16 + 1;
";
    "Block 10:
[preds: 9 ] [succs: 14 ]
i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
i19 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
";
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
if i20 == i18 goto i19 = i19 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
$r6 = new java.lang.Error;
specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with memory failed\");
throw $r6;
";
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
if i20 == i18 goto i19 = i19 + 1;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
i19 = i19 + 1;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
i19 = i19 + 1;
"->"Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
";
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
"->"Block 15:
[preds: 14 ] [succs: 19 ]
l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
i22 = 0;
goto [?= (branch)];
";
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
"->"Block 11:
[preds: 14 ] [succs: 12 13 ]
i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1);
if i20 == i18 goto i19 = i19 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 19 ]
l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
i22 = 0;
goto [?= (branch)];
"->"Block 19:
[preds: 15 18 ] [succs: 20 16 ]
if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
";
    "Block 16:
[preds: 19 ] [succs: 17 18 ]
l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
$b5 = l23 cmp l21;
if $b5 == 0 goto i22 = i22 + 1;
"->"Block 17:
[preds: 16 ] [succs: ]
$r7 = new java.lang.Error;
specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with memory failed\");
throw $r7;
";
    "Block 16:
[preds: 19 ] [succs: 17 18 ]
l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
$b5 = l23 cmp l21;
if $b5 == 0 goto i22 = i22 + 1;
"->"Block 18:
[preds: 16 ] [succs: 19 ]
i22 = i22 + 1;
";
    "Block 18:
[preds: 16 ] [succs: 19 ]
i22 = i22 + 1;
"->"Block 19:
[preds: 15 18 ] [succs: 20 16 ]
if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
";
    "Block 19:
[preds: 15 18 ] [succs: 20 16 ]
if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
"->"Block 20:
[preds: 19 ] [succs: 24 ]
i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
i25 = 0;
goto [?= (branch)];
";
    "Block 19:
[preds: 15 18 ] [succs: 20 16 ]
if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
"->"Block 16:
[preds: 19 ] [succs: 17 18 ]
l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3);
$b5 = l23 cmp l21;
if $b5 == 0 goto i22 = i22 + 1;
";
    "Block 20:
[preds: 19 ] [succs: 24 ]
i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
i25 = 0;
goto [?= (branch)];
"->"Block 24:
[preds: 20 23 ] [succs: 25 21 ]
if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
";
    "Block 21:
[preds: 24 ] [succs: 22 23 ]
i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
if i26 == i24 goto i25 = i25 + 1;
"->"Block 22:
[preds: 21 ] [succs: ]
$r8 = new java.lang.Error;
specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with register failed\");
throw $r8;
";
    "Block 21:
[preds: 24 ] [succs: 22 23 ]
i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
if i26 == i24 goto i25 = i25 + 1;
"->"Block 23:
[preds: 21 ] [succs: 24 ]
i25 = i25 + 1;
";
    "Block 23:
[preds: 21 ] [succs: 24 ]
i25 = i25 + 1;
"->"Block 24:
[preds: 20 23 ] [succs: 25 21 ]
if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
";
    "Block 24:
[preds: 20 23 ] [succs: 25 21 ]
if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
"->"Block 25:
[preds: 24 ] [succs: 29 ]
l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
i28 = 0;
goto [?= (branch)];
";
    "Block 24:
[preds: 20 23 ] [succs: 25 21 ]
if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
"->"Block 21:
[preds: 24 ] [succs: 22 23 ]
i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0);
if i26 == i24 goto i25 = i25 + 1;
";
    "Block 25:
[preds: 24 ] [succs: 29 ]
l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
i28 = 0;
goto [?= (branch)];
"->"Block 29:
[preds: 25 28 ] [succs: 30 26 ]
if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
";
    "Block 26:
[preds: 29 ] [succs: 27 28 ]
l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
$b6 = l29 cmp l27;
if $b6 == 0 goto i28 = i28 + 1;
"->"Block 27:
[preds: 26 ] [succs: ]
$r9 = new java.lang.Error;
specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with register failed\");
throw $r9;
";
    "Block 26:
[preds: 29 ] [succs: 27 28 ]
l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
$b6 = l29 cmp l27;
if $b6 == 0 goto i28 = i28 + 1;
"->"Block 28:
[preds: 26 ] [succs: 29 ]
i28 = i28 + 1;
";
    "Block 28:
[preds: 26 ] [succs: 29 ]
i28 = i28 + 1;
"->"Block 29:
[preds: 25 28 ] [succs: 30 26 ]
if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
";
    "Block 29:
[preds: 25 28 ] [succs: 30 26 ]
if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
"->"Block 30:
[preds: 29 ] [succs: 34 ]
i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
i31 = 0;
goto [?= (branch)];
";
    "Block 29:
[preds: 25 28 ] [succs: 30 26 ]
if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
"->"Block 26:
[preds: 29 ] [succs: 27 28 ]
l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2);
$b6 = l29 cmp l27;
if $b6 == 0 goto i28 = i28 + 1;
";
    "Block 30:
[preds: 29 ] [succs: 34 ]
i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
i31 = 0;
goto [?= (branch)];
"->"Block 34:
[preds: 30 33 ] [succs: 35 31 ]
if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 31:
[preds: 34 ] [succs: 32 33 ]
i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
if i32 == i30 goto i31 = i31 + 1;
"->"Block 32:
[preds: 31 ] [succs: ]
$r10 = new java.lang.Error;
specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with memory failed\");
throw $r10;
";
    "Block 31:
[preds: 34 ] [succs: 32 33 ]
i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
if i32 == i30 goto i31 = i31 + 1;
"->"Block 33:
[preds: 31 ] [succs: 34 ]
i31 = i31 + 1;
";
    "Block 33:
[preds: 31 ] [succs: 34 ]
i31 = i31 + 1;
"->"Block 34:
[preds: 30 33 ] [succs: 35 31 ]
if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 34:
[preds: 30 33 ] [succs: 35 31 ]
if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 35:
[preds: 34 ] [succs: 39 ]
l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
i34 = 0;
goto [?= (branch)];
";
    "Block 34:
[preds: 30 33 ] [succs: 35 31 ]
if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 31:
[preds: 34 ] [succs: 32 33 ]
i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1);
if i32 == i30 goto i31 = i31 + 1;
";
    "Block 35:
[preds: 34 ] [succs: 39 ]
l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
i34 = 0;
goto [?= (branch)];
"->"Block 39:
[preds: 35 38 ] [succs: 40 36 ]
if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 36:
[preds: 39 ] [succs: 37 38 ]
l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
$b7 = l35 cmp l33;
if $b7 == 0 goto i34 = i34 + 1;
"->"Block 37:
[preds: 36 ] [succs: ]
$r11 = new java.lang.Error;
specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with memory failed\");
throw $r11;
";
    "Block 36:
[preds: 39 ] [succs: 37 38 ]
l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
$b7 = l35 cmp l33;
if $b7 == 0 goto i34 = i34 + 1;
"->"Block 38:
[preds: 36 ] [succs: 39 ]
i34 = i34 + 1;
";
    "Block 38:
[preds: 36 ] [succs: 39 ]
i34 = i34 + 1;
"->"Block 39:
[preds: 35 38 ] [succs: 40 36 ]
if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 39:
[preds: 35 38 ] [succs: 40 36 ]
if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 40:
[preds: 39 ] [succs: 44 ]
i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
i37 = 0;
goto [?= (branch)];
";
    "Block 39:
[preds: 35 38 ] [succs: 40 36 ]
if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 36:
[preds: 39 ] [succs: 37 38 ]
l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3);
$b7 = l35 cmp l33;
if $b7 == 0 goto i34 = i34 + 1;
";
    "Block 40:
[preds: 39 ] [succs: 44 ]
i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
i37 = 0;
goto [?= (branch)];
"->"Block 44:
[preds: 40 43 ] [succs: 45 41 ]
if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
";
    "Block 41:
[preds: 44 ] [succs: 42 43 ]
i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
if i38 == i36 goto i37 = i37 + 1;
"->"Block 42:
[preds: 41 ] [succs: ]
$r12 = new java.lang.Error;
specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with register failed\");
throw $r12;
";
    "Block 41:
[preds: 44 ] [succs: 42 43 ]
i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
if i38 == i36 goto i37 = i37 + 1;
"->"Block 43:
[preds: 41 ] [succs: 44 ]
i37 = i37 + 1;
";
    "Block 43:
[preds: 41 ] [succs: 44 ]
i37 = i37 + 1;
"->"Block 44:
[preds: 40 43 ] [succs: 45 41 ]
if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
";
    "Block 44:
[preds: 40 43 ] [succs: 45 41 ]
if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
"->"Block 45:
[preds: 44 ] [succs: 49 ]
l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
i40 = 0;
goto [?= (branch)];
";
    "Block 44:
[preds: 40 43 ] [succs: 45 41 ]
if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
"->"Block 41:
[preds: 44 ] [succs: 42 43 ]
i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0);
if i38 == i36 goto i37 = i37 + 1;
";
    "Block 45:
[preds: 44 ] [succs: 49 ]
l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
i40 = 0;
goto [?= (branch)];
"->"Block 49:
[preds: 45 48 ] [succs: 50 46 ]
if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
";
    "Block 46:
[preds: 49 ] [succs: 47 48 ]
l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
$b8 = l41 cmp l39;
if $b8 == 0 goto i40 = i40 + 1;
"->"Block 47:
[preds: 46 ] [succs: ]
$r13 = new java.lang.Error;
specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with register failed\");
throw $r13;
";
    "Block 46:
[preds: 49 ] [succs: 47 48 ]
l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
$b8 = l41 cmp l39;
if $b8 == 0 goto i40 = i40 + 1;
"->"Block 48:
[preds: 46 ] [succs: 49 ]
i40 = i40 + 1;
";
    "Block 48:
[preds: 46 ] [succs: 49 ]
i40 = i40 + 1;
"->"Block 49:
[preds: 45 48 ] [succs: 50 46 ]
if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
";
    "Block 49:
[preds: 45 48 ] [succs: 50 46 ]
if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
"->"Block 50:
[preds: 49 ] [succs: 54 ]
i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
i43 = 0;
goto [?= (branch)];
";
    "Block 49:
[preds: 45 48 ] [succs: 50 46 ]
if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
"->"Block 46:
[preds: 49 ] [succs: 47 48 ]
l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2);
$b8 = l41 cmp l39;
if $b8 == 0 goto i40 = i40 + 1;
";
    "Block 50:
[preds: 49 ] [succs: 54 ]
i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
i43 = 0;
goto [?= (branch)];
"->"Block 54:
[preds: 50 53 ] [succs: 55 51 ]
if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 51:
[preds: 54 ] [succs: 52 53 ]
i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
if i44 == i42 goto i43 = i43 + 1;
"->"Block 52:
[preds: 51 ] [succs: ]
$r14 = new java.lang.Error;
specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with memory failed\");
throw $r14;
";
    "Block 51:
[preds: 54 ] [succs: 52 53 ]
i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
if i44 == i42 goto i43 = i43 + 1;
"->"Block 53:
[preds: 51 ] [succs: 54 ]
i43 = i43 + 1;
";
    "Block 53:
[preds: 51 ] [succs: 54 ]
i43 = i43 + 1;
"->"Block 54:
[preds: 50 53 ] [succs: 55 51 ]
if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 54:
[preds: 50 53 ] [succs: 55 51 ]
if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 55:
[preds: 54 ] [succs: 59 ]
l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
i46 = 0;
goto [?= (branch)];
";
    "Block 54:
[preds: 50 53 ] [succs: 55 51 ]
if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 51:
[preds: 54 ] [succs: 52 53 ]
i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1);
if i44 == i42 goto i43 = i43 + 1;
";
    "Block 55:
[preds: 54 ] [succs: 59 ]
l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
i46 = 0;
goto [?= (branch)];
"->"Block 59:
[preds: 55 58 ] [succs: 60 56 ]
if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 56:
[preds: 59 ] [succs: 57 58 ]
l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
$b9 = l47 cmp l45;
if $b9 == 0 goto i46 = i46 + 1;
"->"Block 57:
[preds: 56 ] [succs: ]
$r15 = new java.lang.Error;
specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with memory failed\");
throw $r15;
";
    "Block 56:
[preds: 59 ] [succs: 57 58 ]
l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
$b9 = l47 cmp l45;
if $b9 == 0 goto i46 = i46 + 1;
"->"Block 58:
[preds: 56 ] [succs: 59 ]
i46 = i46 + 1;
";
    "Block 58:
[preds: 56 ] [succs: 59 ]
i46 = i46 + 1;
"->"Block 59:
[preds: 55 58 ] [succs: 60 56 ]
if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 59:
[preds: 55 58 ] [succs: 60 56 ]
if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 60:
[preds: 59 ] [succs: 64 ]
i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
i49 = 0;
goto [?= (branch)];
";
    "Block 59:
[preds: 55 58 ] [succs: 60 56 ]
if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 56:
[preds: 59 ] [succs: 57 58 ]
l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3);
$b9 = l47 cmp l45;
if $b9 == 0 goto i46 = i46 + 1;
";
    "Block 60:
[preds: 59 ] [succs: 64 ]
i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
i49 = 0;
goto [?= (branch)];
"->"Block 64:
[preds: 60 63 ] [succs: 65 61 ]
if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
";
    "Block 61:
[preds: 64 ] [succs: 62 63 ]
i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
if i50 == i48 goto i49 = i49 + 1;
"->"Block 62:
[preds: 61 ] [succs: ]
$r16 = new java.lang.Error;
specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with register failed\");
throw $r16;
";
    "Block 61:
[preds: 64 ] [succs: 62 63 ]
i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
if i50 == i48 goto i49 = i49 + 1;
"->"Block 63:
[preds: 61 ] [succs: 64 ]
i49 = i49 + 1;
";
    "Block 63:
[preds: 61 ] [succs: 64 ]
i49 = i49 + 1;
"->"Block 64:
[preds: 60 63 ] [succs: 65 61 ]
if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
";
    "Block 64:
[preds: 60 63 ] [succs: 65 61 ]
if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
"->"Block 65:
[preds: 64 ] [succs: 69 ]
l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
i52 = 0;
goto [?= (branch)];
";
    "Block 64:
[preds: 60 63 ] [succs: 65 61 ]
if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
"->"Block 61:
[preds: 64 ] [succs: 62 63 ]
i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0);
if i50 == i48 goto i49 = i49 + 1;
";
    "Block 65:
[preds: 64 ] [succs: 69 ]
l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
i52 = 0;
goto [?= (branch)];
"->"Block 69:
[preds: 65 68 ] [succs: 70 66 ]
if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
";
    "Block 66:
[preds: 69 ] [succs: 67 68 ]
l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
$b10 = l53 cmp l51;
if $b10 == 0 goto i52 = i52 + 1;
"->"Block 67:
[preds: 66 ] [succs: ]
$r17 = new java.lang.Error;
specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with register failed\");
throw $r17;
";
    "Block 66:
[preds: 69 ] [succs: 67 68 ]
l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
$b10 = l53 cmp l51;
if $b10 == 0 goto i52 = i52 + 1;
"->"Block 68:
[preds: 66 ] [succs: 69 ]
i52 = i52 + 1;
";
    "Block 68:
[preds: 66 ] [succs: 69 ]
i52 = i52 + 1;
"->"Block 69:
[preds: 65 68 ] [succs: 70 66 ]
if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
";
    "Block 69:
[preds: 65 68 ] [succs: 70 66 ]
if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
"->"Block 70:
[preds: 69 ] [succs: 74 ]
i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
i55 = 0;
goto [?= (branch)];
";
    "Block 69:
[preds: 65 68 ] [succs: 70 66 ]
if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
"->"Block 66:
[preds: 69 ] [succs: 67 68 ]
l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2);
$b10 = l53 cmp l51;
if $b10 == 0 goto i52 = i52 + 1;
";
    "Block 70:
[preds: 69 ] [succs: 74 ]
i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
i55 = 0;
goto [?= (branch)];
"->"Block 74:
[preds: 70 73 ] [succs: 75 71 ]
if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 71:
[preds: 74 ] [succs: 72 73 ]
i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
if i56 == i54 goto i55 = i55 + 1;
"->"Block 72:
[preds: 71 ] [succs: ]
$r18 = new java.lang.Error;
specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with memory failed\");
throw $r18;
";
    "Block 71:
[preds: 74 ] [succs: 72 73 ]
i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
if i56 == i54 goto i55 = i55 + 1;
"->"Block 73:
[preds: 71 ] [succs: 74 ]
i55 = i55 + 1;
";
    "Block 73:
[preds: 71 ] [succs: 74 ]
i55 = i55 + 1;
"->"Block 74:
[preds: 70 73 ] [succs: 75 71 ]
if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
";
    "Block 74:
[preds: 70 73 ] [succs: 75 71 ]
if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 75:
[preds: 74 ] [succs: 79 ]
l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
i58 = 0;
goto [?= (branch)];
";
    "Block 74:
[preds: 70 73 ] [succs: 75 71 ]
if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
"->"Block 71:
[preds: 74 ] [succs: 72 73 ]
i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1);
if i56 == i54 goto i55 = i55 + 1;
";
    "Block 75:
[preds: 74 ] [succs: 79 ]
l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
i58 = 0;
goto [?= (branch)];
"->"Block 79:
[preds: 75 78 ] [succs: 80 76 ]
if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 76:
[preds: 79 ] [succs: 77 78 ]
l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
$b11 = l59 cmp l57;
if $b11 == 0 goto i58 = i58 + 1;
"->"Block 77:
[preds: 76 ] [succs: ]
$r19 = new java.lang.Error;
specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with memory failed\");
throw $r19;
";
    "Block 76:
[preds: 79 ] [succs: 77 78 ]
l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
$b11 = l59 cmp l57;
if $b11 == 0 goto i58 = i58 + 1;
"->"Block 78:
[preds: 76 ] [succs: 79 ]
i58 = i58 + 1;
";
    "Block 78:
[preds: 76 ] [succs: 79 ]
i58 = i58 + 1;
"->"Block 79:
[preds: 75 78 ] [succs: 80 76 ]
if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
";
    "Block 79:
[preds: 75 78 ] [succs: 80 76 ]
if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 80:
[preds: 79 ] [succs: 84 ]
i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
i61 = 0;
goto [?= (branch)];
";
    "Block 79:
[preds: 75 78 ] [succs: 80 76 ]
if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
"->"Block 76:
[preds: 79 ] [succs: 77 78 ]
l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3);
$b11 = l59 cmp l57;
if $b11 == 0 goto i58 = i58 + 1;
";
    "Block 80:
[preds: 79 ] [succs: 84 ]
i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
i61 = 0;
goto [?= (branch)];
"->"Block 84:
[preds: 80 83 ] [succs: 85 81 ]
if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
";
    "Block 81:
[preds: 84 ] [succs: 82 83 ]
i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
if i62 == i60 goto i61 = i61 + 1;
"->"Block 82:
[preds: 81 ] [succs: ]
$r20 = new java.lang.Error;
specialinvoke $r20.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntl failed\");
throw $r20;
";
    "Block 81:
[preds: 84 ] [succs: 82 83 ]
i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
if i62 == i60 goto i61 = i61 + 1;
"->"Block 83:
[preds: 81 ] [succs: 84 ]
i61 = i61 + 1;
";
    "Block 83:
[preds: 81 ] [succs: 84 ]
i61 = i61 + 1;
"->"Block 84:
[preds: 80 83 ] [succs: 85 81 ]
if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
";
    "Block 84:
[preds: 80 83 ] [succs: 85 81 ]
if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
"->"Block 85:
[preds: 84 ] [succs: 89 ]
i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
i64 = 0;
goto [?= (branch)];
";
    "Block 84:
[preds: 80 83 ] [succs: 85 81 ]
if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
"->"Block 81:
[preds: 84 ] [succs: 82 83 ]
i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0);
if i62 == i60 goto i61 = i61 + 1;
";
    "Block 85:
[preds: 84 ] [succs: 89 ]
i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
i64 = 0;
goto [?= (branch)];
"->"Block 89:
[preds: 85 88 ] [succs: 90 86 ]
if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
";
    "Block 86:
[preds: 89 ] [succs: 87 88 ]
i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
if i65 == i63 goto i64 = i64 + 1;
"->"Block 87:
[preds: 86 ] [succs: ]
$r21 = new java.lang.Error;
specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntq failed\");
throw $r21;
";
    "Block 86:
[preds: 89 ] [succs: 87 88 ]
i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
if i65 == i63 goto i64 = i64 + 1;
"->"Block 88:
[preds: 86 ] [succs: 89 ]
i64 = i64 + 1;
";
    "Block 88:
[preds: 86 ] [succs: 89 ]
i64 = i64 + 1;
"->"Block 89:
[preds: 85 88 ] [succs: 90 86 ]
if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
";
    "Block 89:
[preds: 85 88 ] [succs: 90 86 ]
if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
"->"Block 90:
[preds: 89 ] [succs: 94 ]
i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
i67 = 0;
goto [?= (branch)];
";
    "Block 89:
[preds: 85 88 ] [succs: 90 86 ]
if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
"->"Block 86:
[preds: 89 ] [succs: 87 88 ]
i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2);
if i65 == i63 goto i64 = i64 + 1;
";
    "Block 90:
[preds: 89 ] [succs: 94 ]
i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
i67 = 0;
goto [?= (branch)];
"->"Block 94:
[preds: 90 93 ] [succs: 95 91 ]
if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
";
    "Block 91:
[preds: 94 ] [succs: 92 93 ]
i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
if i68 == i66 goto i67 = i67 + 1;
"->"Block 92:
[preds: 91 ] [succs: ]
$r22 = new java.lang.Error;
specialinvoke $r22.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntl failed\");
throw $r22;
";
    "Block 91:
[preds: 94 ] [succs: 92 93 ]
i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
if i68 == i66 goto i67 = i67 + 1;
"->"Block 93:
[preds: 91 ] [succs: 94 ]
i67 = i67 + 1;
";
    "Block 93:
[preds: 91 ] [succs: 94 ]
i67 = i67 + 1;
"->"Block 94:
[preds: 90 93 ] [succs: 95 91 ]
if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
";
    "Block 94:
[preds: 90 93 ] [succs: 95 91 ]
if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
"->"Block 95:
[preds: 94 ] [succs: 99 ]
i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
i70 = 0;
goto [?= (branch)];
";
    "Block 94:
[preds: 90 93 ] [succs: 95 91 ]
if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
"->"Block 91:
[preds: 94 ] [succs: 92 93 ]
i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0);
if i68 == i66 goto i67 = i67 + 1;
";
    "Block 95:
[preds: 94 ] [succs: 99 ]
i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
i70 = 0;
goto [?= (branch)];
"->"Block 99:
[preds: 95 98 ] [succs: 100 96 ]
if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
";
    "Block 96:
[preds: 99 ] [succs: 97 98 ]
i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
if i71 == i69 goto i70 = i70 + 1;
"->"Block 97:
[preds: 96 ] [succs: ]
$r23 = new java.lang.Error;
specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntq failed\");
throw $r23;
";
    "Block 96:
[preds: 99 ] [succs: 97 98 ]
i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
if i71 == i69 goto i70 = i70 + 1;
"->"Block 98:
[preds: 96 ] [succs: 99 ]
i70 = i70 + 1;
";
    "Block 98:
[preds: 96 ] [succs: 99 ]
i70 = i70 + 1;
"->"Block 99:
[preds: 95 98 ] [succs: 100 96 ]
if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
";
    "Block 99:
[preds: 95 98 ] [succs: 100 96 ]
if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
"->"Block 100:
[preds: 99 ] [succs: ]
return;
";
    "Block 99:
[preds: 95 98 ] [succs: 100 96 ]
if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
"->"Block 96:
[preds: 99 ] [succs: 97 98 ]
i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2);
if i71 == i69 goto i70 = i70 + 1;
";
}
