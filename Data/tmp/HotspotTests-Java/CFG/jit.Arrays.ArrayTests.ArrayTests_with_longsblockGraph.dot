digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @this: jit.Arrays.ArrayTests.ArrayTests;
$i0 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
r0 = newarray (long)[$i0];
i9 = 0;
i10 = 0;
goto [?= $i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i2 = $r2[i10];
$l3 = (long) $i2;
r0[i10] = $l3;
i10 = i10 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i10 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i11 = 0;
goto [?= $i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$l5 = r0[i11];
$i6 = (int) $l5;
i9 = i9 + $i6;
i11 = i11 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
$i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i11 < $i4 goto $l5 = r0[i11];
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"longs \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \");
$i7 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
$i8 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
if i9 != $i8 goto return 0;
"
    "Block 7:
[preds: 6 ] [succs: ]
return 1;
"
    "Block 8:
[preds: 6 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @this: jit.Arrays.ArrayTests.ArrayTests;
$i0 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
r0 = newarray (long)[$i0];
i9 = 0;
i10 = 0;
goto [?= $i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i10 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i2 = $r2[i10];
$l3 = (long) $i2;
r0[i10] = $l3;
i10 = i10 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i10 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i10 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i11 = 0;
goto [?= $i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i10 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i2 = $r2[i10];
$l3 = (long) $i2;
r0[i10] = $l3;
i10 = i10 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i11 = 0;
goto [?= $i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
$i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i11 < $i4 goto $l5 = r0[i11];
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$l5 = r0[i11];
$i6 = (int) $l5;
i9 = i9 + $i6;
i11 = i11 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
$i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i11 < $i4 goto $l5 = r0[i11];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
$i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i11 < $i4 goto $l5 = r0[i11];
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"longs \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \");
$i7 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
$i8 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
if i9 != $i8 goto return 0;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
$i4 = <jit.Arrays.ArrayTests.ArrayTests: int n>;
if i11 < $i4 goto $l5 = r0[i11];
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$l5 = r0[i11];
$i6 = (int) $l5;
i9 = i9 + $i6;
i11 = i11 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"longs \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \");
$i7 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
$i8 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
if i9 != $i8 goto return 0;
"->"Block 7:
[preds: 6 ] [succs: ]
return 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"longs \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \");
$i7 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
$i8 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>;
if i9 != $i8 goto return 0;
"->"Block 8:
[preds: 6 ] [succs: ]
return 0;
";
}
