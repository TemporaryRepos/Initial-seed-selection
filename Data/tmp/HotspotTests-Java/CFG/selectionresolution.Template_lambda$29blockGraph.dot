digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
$r4 = (selectionresolution.ClassData) $r3;
r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);
$r9 = (selectionresolution.ClassData) $r8;
$r10 = new selectionresolution.MethodData;
$r12 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PROTECTED>;
$r11 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
specialinvoke $r10.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r12, $r11);
r13 = $r10;
$r14 = new selectionresolution.ClassData;
$r15 = <selectionresolution.ClassData$Package: selectionresolution.ClassData$Package OTHER>;
specialinvoke $r14.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>($r15, r13);
r16 = $r14;
$r17 = new selectionresolution.MethodData;
$r19 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PRIVATE>;
$r18 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
specialinvoke $r17.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r19, $r18);
r20 = $r17;
$r21 = new selectionresolution.ClassData;
specialinvoke $r21.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r20);
r22 = $r21;
i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r22);
i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r16);
$r23 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r23.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i2);
$r24 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r24.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i4;
return;
"
}
