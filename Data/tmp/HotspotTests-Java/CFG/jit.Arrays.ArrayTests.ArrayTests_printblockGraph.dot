digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: jit.Arrays.ArrayTests.ArrayTests;
i2 = 0;
goto [?= $r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$r4 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i1 = $r4[i2];
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r6);
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i0 = lengthof $r1;
if i2 < $i0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: jit.Arrays.ArrayTests.ArrayTests;
i2 = 0;
goto [?= $r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i0 = lengthof $r1;
if i2 < $i0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$r4 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i1 = $r4[i2];
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r6);
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i0 = lengthof $r1;
if i2 < $i0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i0 = lengthof $r1;
if i2 < $i0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i0 = lengthof $r1;
if i2 < $i0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$r4 = r0.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>;
$i1 = $r4[i2];
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r6);
i2 = i2 + 1;
";
}
