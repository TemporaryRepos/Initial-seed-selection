digraph "unitGraph" {
    "r0 := @parameter0: java.lang.Object[]"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "$r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>(r0, i0, i1, class \"[Ljava/lang/Object;\")"
    "return $r1"
    "r0 := @parameter0: java.lang.Object[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"$r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>(r0, i0, i1, class \"[Ljava/lang/Object;\")";
    "$r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>(r0, i0, i1, class \"[Ljava/lang/Object;\")"->"return $r1";
}
