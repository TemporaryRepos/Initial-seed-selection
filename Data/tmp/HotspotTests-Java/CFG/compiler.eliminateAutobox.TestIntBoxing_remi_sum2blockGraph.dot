digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r4 = $r0;
$r1 = new java.lang.Integer;
specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);
r5 = $r1;
i7 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Integer;
$i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i1 = $i0 + 1;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);
r4 = $r2;
$r3 = new java.lang.Integer;
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 2;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i3);
r5 = $r3;
i7 = i7 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i7 < 1000 goto $r2 = new java.lang.Integer;
"
    "Block 3:
[preds: 2 ] [succs: ]
$i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i6 = $i4 + $i5;
return $i6;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r4 = $r0;
$r1 = new java.lang.Integer;
specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);
r5 = $r1;
i7 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i7 < 1000 goto $r2 = new java.lang.Integer;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Integer;
$i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i1 = $i0 + 1;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);
r4 = $r2;
$r3 = new java.lang.Integer;
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 2;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i3);
r5 = $r3;
i7 = i7 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i7 < 1000 goto $r2 = new java.lang.Integer;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i7 < 1000 goto $r2 = new java.lang.Integer;
"->"Block 3:
[preds: 2 ] [succs: ]
$i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i6 = $i4 + $i5;
return $i6;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i7 < 1000 goto $r2 = new java.lang.Integer;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Integer;
$i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i1 = $i0 + 1;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);
r4 = $r2;
$r3 = new java.lang.Integer;
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 2;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i3);
r5 = $r3;
i7 = i7 + 1;
";
}
