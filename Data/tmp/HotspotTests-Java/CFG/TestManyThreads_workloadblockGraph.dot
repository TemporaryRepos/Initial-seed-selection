digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
$r0 = new java.lang.Object;
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
specialinvoke $r0.<java.lang.Object: void <init>()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
<TestManyThreads: java.lang.Object sink> = $r0;
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r1 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(3600000L);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
"
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
"
    "Block 8:
[preds: 6 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
$r0 = new java.lang.Object;
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
specialinvoke $r0.<java.lang.Object: void <init>()>();
";
    "Block 0:
[preds: ] [succs: 1 7 ]
$r0 = new java.lang.Object;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
specialinvoke $r0.<java.lang.Object: void <init>()>();
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
<TestManyThreads: java.lang.Object sink> = $r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
specialinvoke $r0.<java.lang.Object: void <init>()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
<TestManyThreads: java.lang.Object sink> = $r0;
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
$r1 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
<TestManyThreads: java.lang.Object sink> = $r0;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r1 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r1 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(3600000L);
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(3600000L);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(3600000L);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
"->"Block 8:
[preds: 6 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r2 := @caughtexception;
r3 = $r2;
<TestManyThreads: java.lang.Throwable failed> = r3;
"->"Block 8:
[preds: 6 7 ] [succs: ]
return;
";
}
