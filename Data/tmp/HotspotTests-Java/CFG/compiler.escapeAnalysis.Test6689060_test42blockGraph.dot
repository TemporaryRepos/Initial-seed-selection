digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r2 := @this: compiler.escapeAnalysis.Test6689060;
i0 := @parameter0: int;
$r0 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r1 = $r0;
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3;
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i8 & 1;
if $i1 != 1 goto i8 = i8 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = $i2 + 4;
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i8 = i8 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i8 < i0 goto $i1 = i8 & 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
$i5 = 3 * i0;
$i4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i6 = $i5 + $i4;
r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i6;
$i7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>;
return $i7;
"
    "Block 0:
[preds: ] [succs: 4 ]
r2 := @this: compiler.escapeAnalysis.Test6689060;
i0 := @parameter0: int;
$r0 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r1 = $r0;
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3;
i8 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i8 < i0 goto $i1 = i8 & 1;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i8 & 1;
if $i1 != 1 goto i8 = i8 + 1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = $i2 + 4;
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i8 & 1;
if $i1 != 1 goto i8 = i8 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i8 = i8 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = $i2 + 4;
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i8 = i8 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i8 = i8 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i8 < i0 goto $i1 = i8 & 1;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i8 < i0 goto $i1 = i8 & 1;
"->"Block 5:
[preds: 4 ] [succs: ]
$i5 = 3 * i0;
$i4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i6 = $i5 + $i4;
r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i6;
$i7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>;
return $i7;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i8 < i0 goto $i1 = i8 & 1;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i8 & 1;
if $i1 != 1 goto i8 = i8 + 1;
";
}
