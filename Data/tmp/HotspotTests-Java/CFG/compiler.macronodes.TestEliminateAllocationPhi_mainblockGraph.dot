digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
i4 = i4 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
"
    "Block 3:
[preds: 2 ] [succs: 8 ]
$r1 = newarray (int)[1];
$r1[0] = 2000;
r6 = $r1;
i5 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 8 ] [succs: 5 6 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z0 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z0 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0);
i5 = i5 + 1;
"
    "Block 8:
[preds: 3 7 ] [succs: 9 4 ]
if i5 < 6000 goto $i0 = i5 % 2;
"
    "Block 9:
[preds: 8 ] [succs: 14 ]
$r3 = newarray (int)[6];
$r3[0] = 1;
$r3[1] = 2;
$r3[2] = 3;
$r3[3] = 4;
$r3[4] = 5;
$r3[5] = 2000;
r7 = $r3;
i6 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 14 ] [succs: 11 12 ]
$i2 = i6 % 2;
if $i2 != 0 goto $z1 = 0;
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
$z1 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)];
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
$z1 = 0;
"
    "Block 13:
[preds: 11 12 ] [succs: 14 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1);
i6 = i6 + 1;
"
    "Block 14:
[preds: 9 13 ] [succs: 15 10 ]
if i6 < 10000 goto $i2 = i6 % 2;
"
    "Block 15:
[preds: 14 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
i4 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
i4 = i4 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
"->"Block 3:
[preds: 2 ] [succs: 8 ]
$r1 = newarray (int)[1];
$r1[0] = 2000;
r6 = $r1;
i5 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1);
i4 = i4 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 8 ]
$r1 = newarray (int)[1];
$r1[0] = 2000;
r6 = $r1;
i5 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 3 7 ] [succs: 9 4 ]
if i5 < 6000 goto $i0 = i5 % 2;
";
    "Block 4:
[preds: 8 ] [succs: 5 6 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z0 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)];
";
    "Block 4:
[preds: 8 ] [succs: 5 6 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$z0 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z0 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0);
i5 = i5 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z0 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0);
i5 = i5 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0);
i5 = i5 + 1;
"->"Block 8:
[preds: 3 7 ] [succs: 9 4 ]
if i5 < 6000 goto $i0 = i5 % 2;
";
    "Block 8:
[preds: 3 7 ] [succs: 9 4 ]
if i5 < 6000 goto $i0 = i5 % 2;
"->"Block 9:
[preds: 8 ] [succs: 14 ]
$r3 = newarray (int)[6];
$r3[0] = 1;
$r3[1] = 2;
$r3[2] = 3;
$r3[3] = 4;
$r3[4] = 5;
$r3[5] = 2000;
r7 = $r3;
i6 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 3 7 ] [succs: 9 4 ]
if i5 < 6000 goto $i0 = i5 % 2;
"->"Block 4:
[preds: 8 ] [succs: 5 6 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 14 ]
$r3 = newarray (int)[6];
$r3[0] = 1;
$r3[1] = 2;
$r3[2] = 3;
$r3[3] = 4;
$r3[4] = 5;
$r3[5] = 2000;
r7 = $r3;
i6 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 9 13 ] [succs: 15 10 ]
if i6 < 10000 goto $i2 = i6 % 2;
";
    "Block 10:
[preds: 14 ] [succs: 11 12 ]
$i2 = i6 % 2;
if $i2 != 0 goto $z1 = 0;
"->"Block 11:
[preds: 10 ] [succs: 13 ]
$z1 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)];
";
    "Block 10:
[preds: 14 ] [succs: 11 12 ]
$i2 = i6 % 2;
if $i2 != 0 goto $z1 = 0;
"->"Block 12:
[preds: 10 ] [succs: 13 ]
$z1 = 0;
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
$z1 = 1;
goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)];
"->"Block 13:
[preds: 11 12 ] [succs: 14 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1);
i6 = i6 + 1;
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
$z1 = 0;
"->"Block 13:
[preds: 11 12 ] [succs: 14 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1);
i6 = i6 + 1;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 ]
staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1);
i6 = i6 + 1;
"->"Block 14:
[preds: 9 13 ] [succs: 15 10 ]
if i6 < 10000 goto $i2 = i6 % 2;
";
    "Block 14:
[preds: 9 13 ] [succs: 15 10 ]
if i6 < 10000 goto $i2 = i6 % 2;
"->"Block 15:
[preds: 14 ] [succs: ]
return;
";
    "Block 14:
[preds: 9 13 ] [succs: 15 10 ]
if i6 < 10000 goto $i2 = i6 % 2;
"->"Block 10:
[preds: 14 ] [succs: 11 12 ]
$i2 = i6 % 2;
if $i2 != 0 goto $z1 = 0;
";
}
