digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new java.awt.Frame"
    "specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\")"
    "r1 = $r0"
    "$r2 = new jit.misctests.fpustack.GraphApplet"
    "specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>()"
    "r3 = $r2"
    "r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0"
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400)"
    "$r4 = new java.awt.BorderLayout"
    "specialinvoke $r4.<java.awt.BorderLayout: void <init>()>()"
    "virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4)"
    "virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3)"
    "virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400)"
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>()"
    "virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1)"
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>()"
    "staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"
    "staticinvoke <java.lang.Thread: void sleep(long)>(5000L)"
    "goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)]"
    "$r7 := @caughtexception"
    "virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)"
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>()"
    "virtualinvoke r1.<java.awt.Frame: void dispose()>()"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new java.awt.Frame";
    "$r0 = new java.awt.Frame"->"specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\")";
    "specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\")"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new jit.misctests.fpustack.GraphApplet";
    "$r2 = new jit.misctests.fpustack.GraphApplet"->"specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>()";
    "specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0";
    "r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0"->"virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400)";
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400)"->"$r4 = new java.awt.BorderLayout";
    "$r4 = new java.awt.BorderLayout"->"specialinvoke $r4.<java.awt.BorderLayout: void <init>()>()";
    "specialinvoke $r4.<java.awt.BorderLayout: void <init>()>()"->"virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4)";
    "virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4)"->"virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3)";
    "virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3)"->"virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400)";
    "virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400)"->"virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>()";
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>()"->"virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1)";
    "virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1)"->"virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>()";
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>()"->"staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()";
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>()"->"$r7 := @caughtexception";
    "staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"staticinvoke <java.lang.Thread: void sleep(long)>(5000L)";
    "staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"$r7 := @caughtexception";
    "staticinvoke <java.lang.Thread: void sleep(long)>(5000L)"->"goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)]";
    "staticinvoke <java.lang.Thread: void sleep(long)>(5000L)"->"$r7 := @caughtexception";
    "goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)]"->"virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)";
    "$r7 := @caughtexception"->"virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)";
    "virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)"->"virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>()";
    "virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>()"->"virtualinvoke r1.<java.awt.Frame: void dispose()>()";
    "virtualinvoke r1.<java.awt.Frame: void dispose()>()"->"return";
}
