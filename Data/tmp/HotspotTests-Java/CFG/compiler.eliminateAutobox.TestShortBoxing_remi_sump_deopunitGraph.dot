digraph "unitGraph" {
    "r0 := @parameter0: java.lang.Short"
    "i5 = 0"
    "goto [?= (branch)]"
    "$s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"
    "$i1 = $s0 + 1"
    "$s2 = (short) $i1"
    "$s3 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s2)"
    "r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)"
    "i5 = i5 + 1"
    "if i5 < 1000 goto $s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"
    "staticinvoke <compiler.eliminateAutobox.TestShortBoxing: void dummy()>()"
    "$s4 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"
    "return $s4"
    "r0 := @parameter0: java.lang.Short"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 1000 goto $s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()";
    "$s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"->"$i1 = $s0 + 1";
    "$i1 = $s0 + 1"->"$s2 = (short) $i1";
    "$s2 = (short) $i1"->"$s3 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s2)";
    "$s3 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s2)"->"r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)";
    "r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 1000 goto $s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()";
    "if i5 < 1000 goto $s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"->"staticinvoke <compiler.eliminateAutobox.TestShortBoxing: void dummy()>()";
    "if i5 < 1000 goto $s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"->"$s0 = virtualinvoke r0.<java.lang.Short: short shortValue()>()";
    "staticinvoke <compiler.eliminateAutobox.TestShortBoxing: void dummy()>()"->"$s4 = virtualinvoke r0.<java.lang.Short: short shortValue()>()";
    "$s4 = virtualinvoke r0.<java.lang.Short: short shortValue()>()"->"return $s4";
}
