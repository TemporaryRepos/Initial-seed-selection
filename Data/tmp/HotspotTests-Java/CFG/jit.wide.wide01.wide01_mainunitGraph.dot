digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "f0 = 3.4028235E38F"
    "f1 = 3.4028235E38F"
    "d0 = 1.7976931348623157E308"
    "d1 = 1.7976931348623157E308"
    "f2 = f0 * f1"
    "$b0 = f2 cmpl #InfinityF"
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")"
    "goto [?= d2 = d0 * d1]"
    "$r0 = new nsk.share.TestFailure"
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")"
    "throw $r0"
    "d2 = d0 * d1"
    "$b1 = d2 cmpl #Infinity"
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")"
    "goto [?= return]"
    "$r2 = new nsk.share.TestFailure"
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")"
    "throw $r2"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"f0 = 3.4028235E38F";
    "f0 = 3.4028235E38F"->"f1 = 3.4028235E38F";
    "f1 = 3.4028235E38F"->"d0 = 1.7976931348623157E308";
    "d0 = 1.7976931348623157E308"->"d1 = 1.7976931348623157E308";
    "d1 = 1.7976931348623157E308"->"f2 = f0 * f1";
    "f2 = f0 * f1"->"$b0 = f2 cmpl #InfinityF";
    "$b0 = f2 cmpl #InfinityF"->"if $b0 != 0 goto $r0 = new nsk.share.TestFailure";
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"->"$r0 = new nsk.share.TestFailure";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")"->"goto [?= d2 = d0 * d1]";
    "goto [?= d2 = d0 * d1]"->"d2 = d0 * d1";
    "$r0 = new nsk.share.TestFailure"->"specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")";
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")"->"throw $r0";
    "d2 = d0 * d1"->"$b1 = d2 cmpl #Infinity";
    "$b1 = d2 cmpl #Infinity"->"if $b1 != 0 goto $r2 = new nsk.share.TestFailure";
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"->"$r2 = new nsk.share.TestFailure";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 = new nsk.share.TestFailure"->"specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")";
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")"->"throw $r2";
}
