digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "l4 := @parameter2: long"
    "$l7 = (long) i0"
    "$l6 = (long) i1"
    "$l3 = (long) i0"
    "$l2 = (long) i1"
    "$l5 = $l3 * $l2"
    "staticinvoke <compiler.c2.TestMultiplyLongHiZero: void check(long,long,long,long)>($l7, $l6, $l5, l4)"
    "return"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"l4 := @parameter2: long";
    "l4 := @parameter2: long"->"$l7 = (long) i0";
    "$l7 = (long) i0"->"$l6 = (long) i1";
    "$l6 = (long) i1"->"$l3 = (long) i0";
    "$l3 = (long) i0"->"$l2 = (long) i1";
    "$l2 = (long) i1"->"$l5 = $l3 * $l2";
    "$l5 = $l3 * $l2"->"staticinvoke <compiler.c2.TestMultiplyLongHiZero: void check(long,long,long,long)>($l7, $l6, $l5, l4)";
    "staticinvoke <compiler.c2.TestMultiplyLongHiZero: void check(long,long,long,long)>($l7, $l6, $l5, l4)"->"return";
}
