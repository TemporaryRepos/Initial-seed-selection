digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.lang.String[];
z0 = 1;
z1 = 0;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
if z0 == 0 goto $z2 = 1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
z0 = $z2;
if z1 == 0 goto $z3 = 1;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z3 = 0;
goto [?= z1 = $z3];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z3 = 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
z1 = $z3;
i0 = i0 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20 goto staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
"
    "Block 9:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.lang.String[];
z0 = 1;
z1 = 0;
i0 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20 goto staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
if z0 == 0 goto $z2 = 1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
if z0 == 0 goto $z2 = 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
z0 = $z2;
if z1 == 0 goto $z3 = 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
z0 = $z2;
if z1 == 0 goto $z3 = 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
z0 = $z2;
if z1 == 0 goto $z3 = 1;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z3 = 0;
goto [?= z1 = $z3];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
z0 = $z2;
if z1 == 0 goto $z3 = 1;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$z3 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z3 = 0;
goto [?= z1 = $z3];
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
z1 = $z3;
i0 = i0 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z3 = 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
z1 = $z3;
i0 = i0 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
z1 = $z3;
i0 = i0 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20 goto staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20 goto staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
"->"Block 9:
[preds: 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20 goto staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
"->"Block 1:
[preds: 8 ] [succs: 2 3 ]
staticinvoke <compiler.jsr292.PollutedTrapCounts$Test: void test(boolean,boolean)>(z0, z1);
if z0 == 0 goto $z2 = 1;
";
}
