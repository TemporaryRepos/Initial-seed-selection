digraph "unitGraph" {
    "r21 := @parameter0: java.lang.String[]"
    "i10 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"
    "goto [?= i10 = i10 + 1]"
    "$r20 := @caughtexception"
    "i10 = i10 + 1"
    "if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"
    "$i0 = <compiler.exceptions.CatchInlineExceptions: int counter1>"
    "if $i0 == 0 goto $i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$r15 = new java.lang.RuntimeException"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter1(\")"
    "$i9 = <compiler.exceptions.CatchInlineExceptions: int counter1>"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != 0\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19)"
    "throw $r15"
    "$i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$i1 = <compiler.exceptions.CatchInlineExceptions: int counter0>"
    "if $i2 == $i1 goto $i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$r8 = new java.lang.RuntimeException"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")"
    "$i7 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter0(\")"
    "$i8 = <compiler.exceptions.CatchInlineExceptions: int counter0>"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"
    "throw $r8"
    "$i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$i3 = <compiler.exceptions.CatchInlineExceptions: int counter>"
    "if $i4 == $i3 goto $r0 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.RuntimeException"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")"
    "$i5 = <compiler.exceptions.CatchInlineExceptions: int counter2>"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter(\")"
    "$i6 = <compiler.exceptions.CatchInlineExceptions: int counter>"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)"
    "throw $r1"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "return"
    "r21 := @parameter0: java.lang.String[]"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)";
    "staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"->"goto [?= i10 = i10 + 1]";
    "staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"->"$r20 := @caughtexception";
    "goto [?= i10 = i10 + 1]"->"i10 = i10 + 1";
    "$r20 := @caughtexception"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)";
    "if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"->"$i0 = <compiler.exceptions.CatchInlineExceptions: int counter1>";
    "if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"->"staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)";
    "if i10 < 15000 goto staticinvoke <compiler.exceptions.CatchInlineExceptions: void test(int)>(i10)"->"$r20 := @caughtexception";
    "$i0 = <compiler.exceptions.CatchInlineExceptions: int counter1>"->"if $i0 == 0 goto $i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "if $i0 == 0 goto $i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$r15 = new java.lang.RuntimeException";
    "if $i0 == 0 goto $i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "$r15 = new java.lang.RuntimeException"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter1(\")";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter1(\")"->"$i9 = <compiler.exceptions.CatchInlineExceptions: int counter1>";
    "$i9 = <compiler.exceptions.CatchInlineExceptions: int counter1>"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != 0\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != 0\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19)";
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19)"->"throw $r15";
    "$i2 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$i1 = <compiler.exceptions.CatchInlineExceptions: int counter0>";
    "$i1 = <compiler.exceptions.CatchInlineExceptions: int counter0>"->"if $i2 == $i1 goto $i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "if $i2 == $i1 goto $i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$r8 = new java.lang.RuntimeException";
    "if $i2 == $i1 goto $i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "$r8 = new java.lang.RuntimeException"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")"->"$i7 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "$i7 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter0(\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter0(\")"->"$i8 = <compiler.exceptions.CatchInlineExceptions: int counter0>";
    "$i8 = <compiler.exceptions.CatchInlineExceptions: int counter0>"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)";
    "specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)"->"throw $r8";
    "$i4 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$i3 = <compiler.exceptions.CatchInlineExceptions: int counter>";
    "$i3 = <compiler.exceptions.CatchInlineExceptions: int counter>"->"if $i4 == $i3 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "if $i4 == $i3 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.RuntimeException";
    "if $i4 == $i3 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = new java.lang.RuntimeException"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed: counter2(\")"->"$i5 = <compiler.exceptions.CatchInlineExceptions: int counter2>";
    "$i5 = <compiler.exceptions.CatchInlineExceptions: int counter2>"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter(\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != counter(\")"->"$i6 = <compiler.exceptions.CatchInlineExceptions: int counter>";
    "$i6 = <compiler.exceptions.CatchInlineExceptions: int counter>"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7)"->"throw $r1";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"return";
}
