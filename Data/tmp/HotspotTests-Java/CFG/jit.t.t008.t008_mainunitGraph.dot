digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "b0 = 39"
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"
    "b1 = 30"
    "goto [?= (branch)]"
    "b1 = 31"
    "b1 = 32"
    "b1 = 33"
    "b1 = 34"
    "b1 = 35"
    "b1 = 36"
    "b1 = 37"
    "b1 = 38"
    "b1 = 39"
    "b1 = 40"
    "b1 = 41"
    "b1 = 42"
    "b1 = 43"
    "b1 = 44"
    "b1 = 45"
    "b1 = 46"
    "b1 = -1"
    "if b1 == 31 goto return"
    "$r0 = new nsk.share.TestFailure"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test failed: result != 31 (\")"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)"
    "throw $r0"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"b0 = 39";
    "b0 = 39"->"lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 30";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 31";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 32";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 33";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 34";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 35";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 36";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 37";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 38";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 39";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 40";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 41";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 42";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 43";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 44";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 45";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = 46";
    "lookupswitch(b0) {     case 30: goto b1 = 30;     case 39: goto b1 = 31;     case 402: goto b1 = 32;     case 1033: goto b1 = 33;     case 2034: goto b1 = 34;     case 2135: goto b1 = 35;     case 35036: goto b1 = 36;     case 35037: goto b1 = 37;     case 100038: goto b1 = 38;     case 200039: goto b1 = 39;     case 300040: goto b1 = 40;     case 400041: goto b1 = 41;     case 500042: goto b1 = 42;     case 600043: goto b1 = 43;     case 700044: goto b1 = 44;     case 800045: goto b1 = 45;     case 900046: goto b1 = 46;     default: goto b1 = -1; }"->"b1 = -1";
    "b1 = 30"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 31"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 32"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 33"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 34"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 35"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 36"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 37"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 38"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 39"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 40"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 41"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 42"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 43"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 44"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 45"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = 46"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if b1 == 31 goto return";
    "b1 = -1"->"if b1 == 31 goto return";
    "if b1 == 31 goto return"->"$r0 = new nsk.share.TestFailure";
    "if b1 == 31 goto return"->"return";
    "$r0 = new nsk.share.TestFailure"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test failed: result != 31 (\")";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test failed: result != 31 (\")"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1)";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)"->"throw $r0";
}
