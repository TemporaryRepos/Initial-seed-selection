digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
<jit.init.init01.InitTest1: int ix1> = 5445;
<jit.init.init01.InitTest2: int ix2> = 1;
$r0 = <jit.init.init01.InitTest2: jit.init.init01.InitTest1 oop>;
$i0 = $r0.<jit.init.init01.InitTest1: int i_ix>;
if $i0 != 5445 goto $r1 = new nsk.share.TestFailure;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Correct order of initialization\");
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: ]
$r1 = new nsk.share.TestFailure;
specialinvoke $r1.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Incorrect order of initialization\");
throw $r1;
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
<jit.init.init01.InitTest1: int ix1> = 5445;
<jit.init.init01.InitTest2: int ix2> = 1;
$r0 = <jit.init.init01.InitTest2: jit.init.init01.InitTest1 oop>;
$i0 = $r0.<jit.init.init01.InitTest1: int i_ix>;
if $i0 != 5445 goto $r1 = new nsk.share.TestFailure;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Correct order of initialization\");
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
<jit.init.init01.InitTest1: int ix1> = 5445;
<jit.init.init01.InitTest2: int ix2> = 1;
$r0 = <jit.init.init01.InitTest2: jit.init.init01.InitTest1 oop>;
$i0 = $r0.<jit.init.init01.InitTest1: int i_ix>;
if $i0 != 5445 goto $r1 = new nsk.share.TestFailure;
"->"Block 2:
[preds: 0 ] [succs: ]
$r1 = new nsk.share.TestFailure;
specialinvoke $r1.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Incorrect order of initialization\");
throw $r1;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Correct order of initialization\");
goto [?= return];
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
}
