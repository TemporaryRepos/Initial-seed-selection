digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
$r0 = new compiler.c2.TestDominatingDeadCheckCast$A;
specialinvoke $r0.<compiler.c2.TestDominatingDeadCheckCast$A: void <init>()>();
<compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field> = $r0;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
$r0 = new compiler.c2.TestDominatingDeadCheckCast$A;
specialinvoke $r0.<compiler.c2.TestDominatingDeadCheckCast$A: void <init>()>();
<compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field> = $r0;
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void test(boolean,boolean,boolean,boolean,boolean)>(1, 1, 1, 1, 1);
i0 = i0 + 1;
";
}
