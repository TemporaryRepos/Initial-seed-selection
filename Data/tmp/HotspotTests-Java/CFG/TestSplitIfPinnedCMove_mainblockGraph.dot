digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r2 := @parameter0: java.lang.String[];
$r0 = new TestSplitIfPinnedCMove$A;
specialinvoke $r0.<TestSplitIfPinnedCMove$A: void <init>(int)>(42);
r1 = $r0;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i3 % 2;
if $i0 != 0 goto $b4 = 1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$b4 = 0;
goto [?= $i1 = i3 % 2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$b4 = 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i1 = i3 % 2;
if $i1 != 0 goto $b5 = 1;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$b5 = 0;
goto [?= staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$b5 = 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1);
i3 = i3 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i3 < 20000 goto $i0 = i3 % 2;
"
    "Block 9:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r2 := @parameter0: java.lang.String[];
$r0 = new TestSplitIfPinnedCMove$A;
specialinvoke $r0.<TestSplitIfPinnedCMove$A: void <init>(int)>(42);
r1 = $r0;
i3 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i3 < 20000 goto $i0 = i3 % 2;
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i3 % 2;
if $i0 != 0 goto $b4 = 1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$b4 = 0;
goto [?= $i1 = i3 % 2];
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i3 % 2;
if $i0 != 0 goto $b4 = 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$b4 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$b4 = 0;
goto [?= $i1 = i3 % 2];
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i1 = i3 % 2;
if $i1 != 0 goto $b5 = 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$b4 = 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i1 = i3 % 2;
if $i1 != 0 goto $b5 = 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i1 = i3 % 2;
if $i1 != 0 goto $b5 = 1;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$b5 = 0;
goto [?= staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1)];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i1 = i3 % 2;
if $i1 != 0 goto $b5 = 1;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$b5 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$b5 = 0;
goto [?= staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1);
i3 = i3 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$b5 = 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1);
i3 = i3 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <TestSplitIfPinnedCMove: int test(int,int,TestSplitIfPinnedCMove$A,TestSplitIfPinnedCMove$A)>($b4, $b5, r1, r1);
i3 = i3 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i3 < 20000 goto $i0 = i3 % 2;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i3 < 20000 goto $i0 = i3 % 2;
"->"Block 9:
[preds: 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i3 < 20000 goto $i0 = i3 % 2;
"->"Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i3 % 2;
if $i0 != 0 goto $b4 = 1;
";
}
