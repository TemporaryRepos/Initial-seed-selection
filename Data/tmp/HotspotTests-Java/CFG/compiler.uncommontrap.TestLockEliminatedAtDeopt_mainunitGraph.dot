digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)"
    "i0 = i0 + 1"
    "if i0 < 20000 goto staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)"
    "staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(1)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 20000 goto staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)";
    "staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 20000 goto staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)";
    "if i0 < 20000 goto staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)"->"staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(1)";
    "if i0 < 20000 goto staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)"->"staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(0)";
    "staticinvoke <compiler.uncommontrap.TestLockEliminatedAtDeopt: void m1(boolean)>(1)"->"return";
}
