digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Object;
specialinvoke $r0.<java.lang.Object: void <init>()>();
r1 = $r0;
$r2 = new compiler.types.TypeSpeculation$B;
specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>();
r3 = $r2;
$r4 = new compiler.types.TypeSpeculation$C;
specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>();
r5 = $r4;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
"
    "Block 3:
[preds: 2 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Object;
specialinvoke $r0.<java.lang.Object: void <init>()>();
r1 = $r0;
$r2 = new compiler.types.TypeSpeculation$B;
specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>();
r3 = $r2;
$r4 = new compiler.types.TypeSpeculation$C;
specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>();
r5 = $r4;
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
"->"Block 3:
[preds: 2 ] [succs: ]
return 1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0);
staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1);
i0 = i0 + 1;
";
}
