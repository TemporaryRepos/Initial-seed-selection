digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
<jit.ExcOpt.ExcOpt: int x> = 0;
i6 = 1;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = <jit.ExcOpt.ExcOpt: int x>;
$i1 = $i0 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i1;
i6 = i6 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 100 goto $i0 = <jit.ExcOpt.ExcOpt: int x>;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
goto [?= i7 = 1];
"
    "Block 4:
[preds: 3 ] [succs: 7 ]
i7 = 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 7 ] [succs: 6 ]
$i2 = <jit.ExcOpt.ExcOpt: int x>;
$i3 = $i2 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i3;
goto [?= i7 = i7 + 1];
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
i7 = i7 + 1;
"
    "Block 7:
[preds: 4 6 ] [succs: 8 5 ]
if i7 < 100 goto $i2 = <jit.ExcOpt.ExcOpt: int x>;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Done \");
$i4 = <jit.ExcOpt.ExcOpt: int x>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$i5 = <jit.ExcOpt.ExcOpt: int x>;
if $i5 == 198 goto return;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r4 = new nsk.share.TestFailure;
specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Test failed (x != 198)\");
throw $r4;
"
    "Block 10:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
<jit.ExcOpt.ExcOpt: int x> = 0;
i6 = 1;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 100 goto $i0 = <jit.ExcOpt.ExcOpt: int x>;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = <jit.ExcOpt.ExcOpt: int x>;
$i1 = $i0 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i1;
i6 = i6 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 100 goto $i0 = <jit.ExcOpt.ExcOpt: int x>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 100 goto $i0 = <jit.ExcOpt.ExcOpt: int x>;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
goto [?= i7 = 1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 100 goto $i0 = <jit.ExcOpt.ExcOpt: int x>;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = <jit.ExcOpt.ExcOpt: int x>;
$i1 = $i0 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i1;
i6 = i6 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
goto [?= i7 = 1];
"->"Block 4:
[preds: 3 ] [succs: 7 ]
i7 = 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 7 ]
i7 = 1;
goto [?= (branch)];
"->"Block 7:
[preds: 4 6 ] [succs: 8 5 ]
if i7 < 100 goto $i2 = <jit.ExcOpt.ExcOpt: int x>;
";
    "Block 5:
[preds: 7 ] [succs: 6 ]
$i2 = <jit.ExcOpt.ExcOpt: int x>;
$i3 = $i2 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i3;
goto [?= i7 = i7 + 1];
"->"Block 6:
[preds: 5 ] [succs: 7 ]
i7 = i7 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
i7 = i7 + 1;
"->"Block 7:
[preds: 4 6 ] [succs: 8 5 ]
if i7 < 100 goto $i2 = <jit.ExcOpt.ExcOpt: int x>;
";
    "Block 7:
[preds: 4 6 ] [succs: 8 5 ]
if i7 < 100 goto $i2 = <jit.ExcOpt.ExcOpt: int x>;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Done \");
$i4 = <jit.ExcOpt.ExcOpt: int x>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$i5 = <jit.ExcOpt.ExcOpt: int x>;
if $i5 == 198 goto return;
";
    "Block 7:
[preds: 4 6 ] [succs: 8 5 ]
if i7 < 100 goto $i2 = <jit.ExcOpt.ExcOpt: int x>;
"->"Block 5:
[preds: 7 ] [succs: 6 ]
$i2 = <jit.ExcOpt.ExcOpt: int x>;
$i3 = $i2 + 1;
<jit.ExcOpt.ExcOpt: int x> = $i3;
goto [?= i7 = i7 + 1];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Done \");
$i4 = <jit.ExcOpt.ExcOpt: int x>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$i5 = <jit.ExcOpt.ExcOpt: int x>;
if $i5 == 198 goto return;
"->"Block 9:
[preds: 8 ] [succs: ]
$r4 = new nsk.share.TestFailure;
specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Test failed (x != 198)\");
throw $r4;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Done \");
$i4 = <jit.ExcOpt.ExcOpt: int x>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$i5 = <jit.ExcOpt.ExcOpt: int x>;
if $i5 == 198 goto return;
"->"Block 10:
[preds: 8 ] [succs: ]
return;
";
}
