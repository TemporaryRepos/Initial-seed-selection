digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r1 := @parameter0: int[];
r0 := @parameter1: int[];
z0 = 0;
i6 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i0 = i6 - 1;
i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);
$i3 = r0[i6];
$i2 = r1[i1];
if $i3 == $i2 goto i6 = i6 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m10 failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i4 = r1[i1];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i5 = r0[i6];
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13);
z0 = 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i6 = i6 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i6 < 5 goto $i0 = i6 - 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
return z0;
"
    "Block 0:
[preds: ] [succs: 4 ]
r1 := @parameter0: int[];
r0 := @parameter1: int[];
z0 = 0;
i6 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i6 < 5 goto $i0 = i6 - 1;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i0 = i6 - 1;
i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);
$i3 = r0[i6];
$i2 = r1[i1];
if $i3 == $i2 goto i6 = i6 + 1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m10 failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i4 = r1[i1];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i5 = r0[i6];
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13);
z0 = 1;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i0 = i6 - 1;
i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);
$i3 = r0[i6];
$i2 = r1[i1];
if $i3 == $i2 goto i6 = i6 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i6 = i6 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m10 failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i4 = r1[i1];
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i5 = r0[i6];
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13);
z0 = 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i6 = i6 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i6 = i6 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i6 < 5 goto $i0 = i6 - 1;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i6 < 5 goto $i0 = i6 - 1;
"->"Block 5:
[preds: 4 ] [succs: ]
return z0;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i6 < 5 goto $i0 = i6 - 1;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$i0 = i6 - 1;
i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);
$i3 = r0[i6];
$i2 = r1[i1];
if $i3 == $i2 goto i6 = i6 + 1;
";
}
