digraph "unitGraph" {
    "$r0 = new compiler.types.TypeSpeculation$A"
    "specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()"
    "r1 = $r0"
    "$r2 = new compiler.types.TypeSpeculation$B"
    "specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()"
    "r3 = $r2"
    "$r4 = new compiler.types.TypeSpeculation$C"
    "specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()"
    "r5 = $r4"
    "i10 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)"
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r3)"
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r5)"
    "staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 0)"
    "staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, 0)"
    "i10 = i10 + 1"
    "if i10 < 3000 goto staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)"
    "i11 = 0"
    "$i5 = i11 % 2"
    "$i6 = $i5 + 1"
    "i7 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, $i6)"
    "$i8 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>()"
    "if i7 == $i8 goto i11 = i11 + 1"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class B\")"
    "return 0"
    "i11 = i11 + 1"
    "if i11 < 20000 goto $i5 = i11 % 2"
    "i12 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 1)"
    "$i9 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>()"
    "if i12 == $i9 goto return 1"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class A\")"
    "return 1"
    "$r0 = new compiler.types.TypeSpeculation$A"->"specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()";
    "specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new compiler.types.TypeSpeculation$B";
    "$r2 = new compiler.types.TypeSpeculation$B"->"specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()";
    "specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new compiler.types.TypeSpeculation$C";
    "$r4 = new compiler.types.TypeSpeculation$C"->"specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()";
    "specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < 3000 goto staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)";
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)"->"staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r3)";
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r3)"->"staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r5)";
    "staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r5)"->"staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 0)"->"staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, 0)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < 3000 goto staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)";
    "if i10 < 3000 goto staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)"->"i11 = 0";
    "if i10 < 3000 goto staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)"->"staticinvoke <compiler.types.TypeSpeculation: int test3_invokevirtual(compiler.types.TypeSpeculation$A)>(r1)";
    "i11 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 < 20000 goto $i5 = i11 % 2";
    "$i5 = i11 % 2"->"$i6 = $i5 + 1";
    "$i6 = $i5 + 1"->"i7 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, $i6)";
    "i7 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r3, $i6)"->"$i8 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>()";
    "$i8 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>()"->"if i7 == $i8 goto i11 = i11 + 1";
    "if i7 == $i8 goto i11 = i11 + 1"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if i7 == $i8 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class B\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class B\")"->"return 0";
    "i11 = i11 + 1"->"if i11 < 20000 goto $i5 = i11 % 2";
    "if i11 < 20000 goto $i5 = i11 % 2"->"i12 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 1)";
    "if i11 < 20000 goto $i5 = i11 % 2"->"$i5 = i11 % 2";
    "i12 = staticinvoke <compiler.types.TypeSpeculation: int test3_1(compiler.types.TypeSpeculation$A,int)>(r1, 1)"->"$i9 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>()";
    "$i9 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>()"->"if i12 == $i9 goto return 1";
    "if i12 == $i9 goto return 1"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i12 == $i9 goto return 1"->"return 1";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class A\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"test3 failed with class A\")"->"return 0";
}
