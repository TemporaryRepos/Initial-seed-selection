digraph "unitGraph" {
    "r8 := @this: compiler.c2.cr6711117.Test"
    "r33 := @parameter0: compiler.c2.cr6711117.Test_Class_3"
    "r0 := @parameter1: boolean[]"
    "$b0 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$i1 = $b0 + 1"
    "$b2 = (byte) $i1"
    "r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b2"
    "$z0 = r0[$b0]"
    "if $z0 == 0 goto $b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r33"
    "$b39 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r34 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b39]"
    "goto [?= $r3 = (compiler.c2.cr6711117.Test_Class_5) $r34]"
    "$b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r1 = newarray (java.lang.Object)[$b3]"
    "$b4 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r34 = $r1[$b4]"
    "$r3 = (compiler.c2.cr6711117.Test_Class_5) $r34"
    "$r2 = new compiler.c2.cr6711117.Test_Class_1"
    "specialinvoke $r2.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()"
    "$r3.<compiler.c2.cr6711117.Test_Class_5: compiler.c2.cr6711117.Test_Class_1 var_54> = $r2"
    "$r4 = new compiler.c2.cr6711117.Test_Class_0"
    "specialinvoke $r4.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"
    "$b7 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$b6 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$b5 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r5 = newmultiarray (compiler.c2.cr6711117.Test)[$b7][$b6][$b5]"
    "$b8 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$i9 = $b8 + 1"
    "$b10 = (byte) $i9"
    "r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b10"
    "$r6 = $r5[$b10]"
    "$b11 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r7 = $r6[$b11]"
    "$b12 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r12 = $r7[$b12]"
    "$b14 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$b13 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r9 = newmultiarray (compiler.c2.cr6711117.Test_Class_5)[$b14][$b13]"
    "$b15 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r10 = $r9[$b15]"
    "$b16 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r11 = $r10[$b16]"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r11"
    "$r12.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r11"
    "$b17 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r14 = newarray (compiler.c2.cr6711117.Test)[$b17]"
    "r35 = r33"
    "r36 = r33"
    "$b18 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r17 = $r14[$b18]"
    "$b20 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$b19 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r15 = newmultiarray (long)[$b20][$b19]"
    "$b21 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r18 = $r15[$b21]"
    "r37 = r36"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r36"
    "$b22 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r19 = new compiler.c2.cr6711117.Test_Class_0"
    "specialinvoke $r19.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"
    "$s23 = $r19.<compiler.c2.cr6711117.Test_Class_0: short var_2>"
    "$i24 = $b22 - $s23"
    "$b25 = (byte) $i24"
    "r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b25"
    "$l26 = $r18[$b25]"
    "$l27 = $l26 << 93"
    "$r17.<compiler.c2.cr6711117.Test: long var_70> = $l27"
    "$r20 = new compiler.c2.cr6711117.Test_Class_0"
    "specialinvoke $r20.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"
    "$s28 = $r20.<compiler.c2.cr6711117.Test_Class_0: short var_2>"
    "$d1 = (double) $s28"
    "$b29 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r21 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b29]"
    "$b30 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r22 = $r21[$b30]"
    "$d0 = $r22.<compiler.c2.cr6711117.Test_Class_2: double var_34>"
    "$d2 = $d1 * $d0"
    "$i31 = (int) $d2"
    "$s32 = (short) $i31"
    "$r20.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s32"
    "$b33 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "if $s32 < $b33 goto $r38 = r37"
    "$r38 = r37"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r37"
    "goto [?= r40 = $r38]"
    "r39 = r37"
    "r40 = $r38"
    "$l34 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"
    "$l35 = $l34 - 1L"
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l35"
    "$b36 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r23 = newarray (compiler.c2.cr6711117.Test_Class_4)[$b36]"
    "$b37 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r24 = $r23[$b37]"
    "$r25 = (compiler.c2.cr6711117.Test_Class_5) $r24"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r25"
    "r26 = $r25"
    "$z4 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z5 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z2 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z1 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z3 = $z2 ^ $z1"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z3"
    "$z7 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z6 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z8 = $z7 & $z6"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z8"
    "$z9 = $z3 | $z8"
    "$z10 = $z5 & $z9"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z10"
    "if $z10 == 0 goto $z20 = 1"
    "$z20 = 0"
    "goto [?= $z11 = $z4 ^ $z20]"
    "$z20 = 1"
    "$z11 = $z4 ^ $z20"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z11"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r40"
    "$b38 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$z21 = r0[$b38]"
    "$z12 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "if $z12 == 0 goto $z22 = 1"
    "$z22 = 0"
    "goto [?= $z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]"
    "$z22 = 1"
    "$z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "if $z13 == 0 goto $z23 = 1"
    "$z23 = 0"
    "goto [?= $z24 = $z22 & $z23]"
    "$z23 = 1"
    "$z24 = $z22 & $z23"
    "$z25 = $z21 | $z24"
    "if $z25 == 0 goto $z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$r29 = \"nmxx\""
    "<compiler.c2.cr6711117.Test_Class_1: java.lang.String var_29> = \"nmxx\""
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = r26"
    "virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()"
    "$z16 = virtualinvoke $r29.<java.lang.String: boolean endsWith(java.lang.String)>(\"uwgmnjpg\")"
    "if $z16 == 0 goto $z26 = 0"
    "$z18 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z17 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z19 = $z18 ^ $z17"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z19"
    "if $z19 == 0 goto $z26 = 0"
    "$z26 = 1"
    "goto [?= $z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]"
    "$z26 = 0"
    "$z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z14 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z26 = $z15 ^ $z14"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z26"
    "$z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "if $z27 == 0 goto $z28 = 1"
    "$z28 = 0"
    "goto [?= $z29 = $z26 ^ $z28]"
    "$z28 = 1"
    "$z29 = $z26 ^ $z28"
    "<compiler.c2.cr6711117.Test: boolean var_72> = $z29"
    "$z30 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z31 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z32 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z32"
    "$z33 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z34 = $z32 & $z33"
    "$z35 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"
    "$z36 = $z34 ^ $z35"
    "$z37 = $z31 & $z36"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z37"
    "$z38 = $z30 & $z37"
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z38"
    "$b40 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$l41 = (long) $b40"
    "$l42 = r8.<compiler.c2.cr6711117.Test: long var_70>"
    "$l43 = $l42 - 1L"
    "r8.<compiler.c2.cr6711117.Test: long var_70> = $l43"
    "$l44 = $l41 - $l43"
    "$i45 = (int) $l44"
    "$b46 = (byte) $i45"
    "r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b46"
    "$l47 = r8.<compiler.c2.cr6711117.Test: long var_70>"
    "$r44 = new compiler.c2.cr6711117.Test_Class_0"
    "specialinvoke $r44.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"
    "$s48 = $r44.<compiler.c2.cr6711117.Test_Class_0: short var_2>"
    "$i49 = $s48 + 1"
    "$s50 = (short) $i49"
    "$r44.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s50"
    "$l51 = (long) $s48"
    "$l52 = $l47 ^ $l51"
    "r8.<compiler.c2.cr6711117.Test: long var_70> = $l52"
    "$l53 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"
    "$r45 = \"jiiibmmsk\""
    "$r46 = new compiler.c2.cr6711117.Test_Class_1"
    "specialinvoke $r46.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()"
    "virtualinvoke $r46.<java.lang.Object: java.lang.Class getClass()>()"
    "$b54 = -1 ^ -1"
    "$i55 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"
    "$i56 = virtualinvoke $r45.<java.lang.String: int lastIndexOf(int,int)>($b54, $i55)"
    "$l57 = (long) $i56"
    "$l58 = $l53 / $l57"
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l58"
    "$l59 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"
    "$i60 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"
    "$l61 = (long) $i60"
    "$l62 = $l59 | $l61"
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l62"
    "$b63 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$b64 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r47 = newmultiarray (compiler.c2.cr6711117.Test_Class_3)[$b63][$b64][32]"
    "$b65 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r48 = $r47[$b65]"
    "$b66 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r49 = $r48[$b66]"
    "$b67 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$r50 = $r49[$b67]"
    "$d3 = $r50.<compiler.c2.cr6711117.Test_Class_3: double var_34>"
    "$b68 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$d4 = (double) $b68"
    "$d5 = $d3 % $d4"
    "$r50.<compiler.c2.cr6711117.Test_Class_3: double var_34> = $d5"
    "$i69 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"
    "$b70 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"
    "$i71 = $i69 & $b70"
    "<compiler.c2.cr6711117.Test_Class_1: int var_21> = $i71"
    "$r52 = (compiler.c2.cr6711117.Test_Class_5) r26"
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r52"
    "<compiler.c2.cr6711117.Test: boolean var_72> = 0"
    "$r53 = new compiler.c2.cr6711117.Test_Class_5"
    "specialinvoke $r53.<compiler.c2.cr6711117.Test_Class_5: void <init>()>()"
    "$c72 = $r53.<compiler.c2.cr6711117.Test_Class_5: char var_60>"
    "$c73 = $c72 ^ 118"
    "$c74 = (char) $c73"
    "$r53.<compiler.c2.cr6711117.Test_Class_5: char var_60> = $c74"
    "return $c74"
    "r8 := @this: compiler.c2.cr6711117.Test"->"r33 := @parameter0: compiler.c2.cr6711117.Test_Class_3";
    "r33 := @parameter0: compiler.c2.cr6711117.Test_Class_3"->"r0 := @parameter1: boolean[]";
    "r0 := @parameter1: boolean[]"->"$b0 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b0 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$i1 = $b0 + 1";
    "$i1 = $b0 + 1"->"$b2 = (byte) $i1";
    "$b2 = (byte) $i1"->"r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b2";
    "r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b2"->"$z0 = r0[$b0]";
    "$z0 = r0[$b0]"->"if $z0 == 0 goto $b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "if $z0 == 0 goto $b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r33";
    "if $z0 == 0 goto $b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r33"->"$b39 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b39 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r34 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b39]";
    "$r34 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b39]"->"goto [?= $r3 = (compiler.c2.cr6711117.Test_Class_5) $r34]";
    "goto [?= $r3 = (compiler.c2.cr6711117.Test_Class_5) $r34]"->"$r3 = (compiler.c2.cr6711117.Test_Class_5) $r34";
    "$b3 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r1 = newarray (java.lang.Object)[$b3]";
    "$r1 = newarray (java.lang.Object)[$b3]"->"$b4 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b4 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r34 = $r1[$b4]";
    "$r34 = $r1[$b4]"->"$r3 = (compiler.c2.cr6711117.Test_Class_5) $r34";
    "$r3 = (compiler.c2.cr6711117.Test_Class_5) $r34"->"$r2 = new compiler.c2.cr6711117.Test_Class_1";
    "$r2 = new compiler.c2.cr6711117.Test_Class_1"->"specialinvoke $r2.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()";
    "specialinvoke $r2.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()"->"$r3.<compiler.c2.cr6711117.Test_Class_5: compiler.c2.cr6711117.Test_Class_1 var_54> = $r2";
    "$r3.<compiler.c2.cr6711117.Test_Class_5: compiler.c2.cr6711117.Test_Class_1 var_54> = $r2"->"$r4 = new compiler.c2.cr6711117.Test_Class_0";
    "$r4 = new compiler.c2.cr6711117.Test_Class_0"->"specialinvoke $r4.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()";
    "specialinvoke $r4.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"->"$b7 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b7 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b6 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b6 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b5 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b5 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r5 = newmultiarray (compiler.c2.cr6711117.Test)[$b7][$b6][$b5]";
    "$r5 = newmultiarray (compiler.c2.cr6711117.Test)[$b7][$b6][$b5]"->"$b8 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b8 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$i9 = $b8 + 1";
    "$i9 = $b8 + 1"->"$b10 = (byte) $i9";
    "$b10 = (byte) $i9"->"r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b10";
    "r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b10"->"$r6 = $r5[$b10]";
    "$r6 = $r5[$b10]"->"$b11 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b11 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r7 = $r6[$b11]";
    "$r7 = $r6[$b11]"->"$b12 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b12 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r12 = $r7[$b12]";
    "$r12 = $r7[$b12]"->"$b14 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b14 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b13 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b13 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r9 = newmultiarray (compiler.c2.cr6711117.Test_Class_5)[$b14][$b13]";
    "$r9 = newmultiarray (compiler.c2.cr6711117.Test_Class_5)[$b14][$b13]"->"$b15 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b15 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r10 = $r9[$b15]";
    "$r10 = $r9[$b15]"->"$b16 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b16 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r11 = $r10[$b16]";
    "$r11 = $r10[$b16]"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r11";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r11"->"$r12.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r11";
    "$r12.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r11"->"$b17 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b17 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r14 = newarray (compiler.c2.cr6711117.Test)[$b17]";
    "$r14 = newarray (compiler.c2.cr6711117.Test)[$b17]"->"r35 = r33";
    "r35 = r33"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r33";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r33"->"r36 = r33";
    "r36 = r33"->"$b18 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b18 = r33.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r17 = $r14[$b18]";
    "$r17 = $r14[$b18]"->"$b20 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b20 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b19 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b19 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r15 = newmultiarray (long)[$b20][$b19]";
    "$r15 = newmultiarray (long)[$b20][$b19]"->"$b21 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b21 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r18 = $r15[$b21]";
    "$r18 = $r15[$b21]"->"r37 = r36";
    "r37 = r36"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r36";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r36"->"$b22 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b22 = r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r19 = new compiler.c2.cr6711117.Test_Class_0";
    "$r19 = new compiler.c2.cr6711117.Test_Class_0"->"specialinvoke $r19.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()";
    "specialinvoke $r19.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"->"$s23 = $r19.<compiler.c2.cr6711117.Test_Class_0: short var_2>";
    "$s23 = $r19.<compiler.c2.cr6711117.Test_Class_0: short var_2>"->"$i24 = $b22 - $s23";
    "$i24 = $b22 - $s23"->"$b25 = (byte) $i24";
    "$b25 = (byte) $i24"->"r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b25";
    "r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b25"->"r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b25";
    "r36.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b25"->"$l26 = $r18[$b25]";
    "$l26 = $r18[$b25]"->"$l27 = $l26 << 93";
    "$l27 = $l26 << 93"->"$r17.<compiler.c2.cr6711117.Test: long var_70> = $l27";
    "$r17.<compiler.c2.cr6711117.Test: long var_70> = $l27"->"$r20 = new compiler.c2.cr6711117.Test_Class_0";
    "$r20 = new compiler.c2.cr6711117.Test_Class_0"->"specialinvoke $r20.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()";
    "specialinvoke $r20.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"->"$s28 = $r20.<compiler.c2.cr6711117.Test_Class_0: short var_2>";
    "$s28 = $r20.<compiler.c2.cr6711117.Test_Class_0: short var_2>"->"$d1 = (double) $s28";
    "$d1 = (double) $s28"->"$b29 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b29 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r21 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b29]";
    "$r21 = newarray (compiler.c2.cr6711117.Test_Class_2)[$b29]"->"$b30 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b30 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r22 = $r21[$b30]";
    "$r22 = $r21[$b30]"->"$d0 = $r22.<compiler.c2.cr6711117.Test_Class_2: double var_34>";
    "$d0 = $r22.<compiler.c2.cr6711117.Test_Class_2: double var_34>"->"$d2 = $d1 * $d0";
    "$d2 = $d1 * $d0"->"$i31 = (int) $d2";
    "$i31 = (int) $d2"->"$s32 = (short) $i31";
    "$s32 = (short) $i31"->"$r20.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s32";
    "$r20.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s32"->"$b33 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b33 = r37.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"if $s32 < $b33 goto $r38 = r37";
    "if $s32 < $b33 goto $r38 = r37"->"$r38 = r37";
    "if $s32 < $b33 goto $r38 = r37"->"$r38 = r37";
    "$r38 = r37"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r37";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r37"->"goto [?= r40 = $r38]";
    "goto [?= r40 = $r38]"->"r40 = $r38";
    "$r38 = r37"->"r39 = r37";
    "r39 = r37"->"r40 = $r38";
    "r40 = $r38"->"$l34 = <compiler.c2.cr6711117.Test_Class_1: long var_26>";
    "$l34 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"->"$l35 = $l34 - 1L";
    "$l35 = $l34 - 1L"->"<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l35";
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l35"->"$b36 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b36 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r23 = newarray (compiler.c2.cr6711117.Test_Class_4)[$b36]";
    "$r23 = newarray (compiler.c2.cr6711117.Test_Class_4)[$b36]"->"$b37 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b37 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r24 = $r23[$b37]";
    "$r24 = $r23[$b37]"->"$r25 = (compiler.c2.cr6711117.Test_Class_5) $r24";
    "$r25 = (compiler.c2.cr6711117.Test_Class_5) $r24"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r25";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = $r25"->"r26 = $r25";
    "r26 = $r25"->"$z4 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z4 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z5 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z5 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z2 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z2 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z1 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z1 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z3 = $z2 ^ $z1";
    "$z3 = $z2 ^ $z1"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z3";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z3"->"$z7 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z7 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z6 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z6 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z8 = $z7 & $z6";
    "$z8 = $z7 & $z6"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z8";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z8"->"$z9 = $z3 | $z8";
    "$z9 = $z3 | $z8"->"$z10 = $z5 & $z9";
    "$z10 = $z5 & $z9"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z10";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z10"->"if $z10 == 0 goto $z20 = 1";
    "if $z10 == 0 goto $z20 = 1"->"$z20 = 0";
    "if $z10 == 0 goto $z20 = 1"->"$z20 = 1";
    "$z20 = 0"->"goto [?= $z11 = $z4 ^ $z20]";
    "goto [?= $z11 = $z4 ^ $z20]"->"$z11 = $z4 ^ $z20";
    "$z20 = 1"->"$z11 = $z4 ^ $z20";
    "$z11 = $z4 ^ $z20"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z11";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z11"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r40";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r40"->"$b38 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b38 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$z21 = r0[$b38]";
    "$z21 = r0[$b38]"->"$z12 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z12 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"if $z12 == 0 goto $z22 = 1";
    "if $z12 == 0 goto $z22 = 1"->"$z22 = 0";
    "if $z12 == 0 goto $z22 = 1"->"$z22 = 1";
    "$z22 = 0"->"goto [?= $z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]";
    "goto [?= $z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]"->"$z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z22 = 1"->"$z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z13 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"if $z13 == 0 goto $z23 = 1";
    "if $z13 == 0 goto $z23 = 1"->"$z23 = 0";
    "if $z13 == 0 goto $z23 = 1"->"$z23 = 1";
    "$z23 = 0"->"goto [?= $z24 = $z22 & $z23]";
    "goto [?= $z24 = $z22 & $z23]"->"$z24 = $z22 & $z23";
    "$z23 = 1"->"$z24 = $z22 & $z23";
    "$z24 = $z22 & $z23"->"$z25 = $z21 | $z24";
    "$z25 = $z21 | $z24"->"if $z25 == 0 goto $z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "if $z25 == 0 goto $z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$r29 = \"nmxx\"";
    "if $z25 == 0 goto $z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$r29 = \"nmxx\""->"<compiler.c2.cr6711117.Test_Class_1: java.lang.String var_29> = \"nmxx\"";
    "<compiler.c2.cr6711117.Test_Class_1: java.lang.String var_29> = \"nmxx\""->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = r26";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_4 var_66> = r26"->"virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()";
    "virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()"->"$z16 = virtualinvoke $r29.<java.lang.String: boolean endsWith(java.lang.String)>(\"uwgmnjpg\")";
    "$z16 = virtualinvoke $r29.<java.lang.String: boolean endsWith(java.lang.String)>(\"uwgmnjpg\")"->"if $z16 == 0 goto $z26 = 0";
    "if $z16 == 0 goto $z26 = 0"->"$z18 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "if $z16 == 0 goto $z26 = 0"->"$z26 = 0";
    "$z18 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z17 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z17 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z19 = $z18 ^ $z17";
    "$z19 = $z18 ^ $z17"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z19";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z19"->"if $z19 == 0 goto $z26 = 0";
    "if $z19 == 0 goto $z26 = 0"->"$z26 = 1";
    "if $z19 == 0 goto $z26 = 0"->"$z26 = 0";
    "$z26 = 1"->"goto [?= $z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]";
    "goto [?= $z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]"->"$z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z26 = 0"->"goto [?= $z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]";
    "goto [?= $z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>]"->"$z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z15 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z14 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z14 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z26 = $z15 ^ $z14";
    "$z26 = $z15 ^ $z14"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z26";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z26"->"$z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z27 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"if $z27 == 0 goto $z28 = 1";
    "if $z27 == 0 goto $z28 = 1"->"$z28 = 0";
    "if $z27 == 0 goto $z28 = 1"->"$z28 = 1";
    "$z28 = 0"->"goto [?= $z29 = $z26 ^ $z28]";
    "goto [?= $z29 = $z26 ^ $z28]"->"$z29 = $z26 ^ $z28";
    "$z28 = 1"->"$z29 = $z26 ^ $z28";
    "$z29 = $z26 ^ $z28"->"<compiler.c2.cr6711117.Test: boolean var_72> = $z29";
    "<compiler.c2.cr6711117.Test: boolean var_72> = $z29"->"$z30 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z30 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z31 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z31 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z32 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z32 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z32";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z32"->"$z33 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z33 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z34 = $z32 & $z33";
    "$z34 = $z32 & $z33"->"$z35 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>";
    "$z35 = <compiler.c2.cr6711117.Test_Class_3: boolean var_40>"->"$z36 = $z34 ^ $z35";
    "$z36 = $z34 ^ $z35"->"$z37 = $z31 & $z36";
    "$z37 = $z31 & $z36"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z37";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z37"->"$z38 = $z30 & $z37";
    "$z38 = $z30 & $z37"->"<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z38";
    "<compiler.c2.cr6711117.Test_Class_3: boolean var_40> = $z38"->"$b40 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b40 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$l41 = (long) $b40";
    "$l41 = (long) $b40"->"$l42 = r8.<compiler.c2.cr6711117.Test: long var_70>";
    "$l42 = r8.<compiler.c2.cr6711117.Test: long var_70>"->"$l43 = $l42 - 1L";
    "$l43 = $l42 - 1L"->"r8.<compiler.c2.cr6711117.Test: long var_70> = $l43";
    "r8.<compiler.c2.cr6711117.Test: long var_70> = $l43"->"$l44 = $l41 - $l43";
    "$l44 = $l41 - $l43"->"$i45 = (int) $l44";
    "$i45 = (int) $l44"->"$b46 = (byte) $i45";
    "$b46 = (byte) $i45"->"r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b46";
    "r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39> = $b46"->"$l47 = r8.<compiler.c2.cr6711117.Test: long var_70>";
    "$l47 = r8.<compiler.c2.cr6711117.Test: long var_70>"->"$r44 = new compiler.c2.cr6711117.Test_Class_0";
    "$r44 = new compiler.c2.cr6711117.Test_Class_0"->"specialinvoke $r44.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()";
    "specialinvoke $r44.<compiler.c2.cr6711117.Test_Class_0: void <init>()>()"->"$s48 = $r44.<compiler.c2.cr6711117.Test_Class_0: short var_2>";
    "$s48 = $r44.<compiler.c2.cr6711117.Test_Class_0: short var_2>"->"$i49 = $s48 + 1";
    "$i49 = $s48 + 1"->"$s50 = (short) $i49";
    "$s50 = (short) $i49"->"$r44.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s50";
    "$r44.<compiler.c2.cr6711117.Test_Class_0: short var_2> = $s50"->"$l51 = (long) $s48";
    "$l51 = (long) $s48"->"$l52 = $l47 ^ $l51";
    "$l52 = $l47 ^ $l51"->"r8.<compiler.c2.cr6711117.Test: long var_70> = $l52";
    "r8.<compiler.c2.cr6711117.Test: long var_70> = $l52"->"$l53 = <compiler.c2.cr6711117.Test_Class_1: long var_26>";
    "$l53 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"->"$r45 = \"jiiibmmsk\"";
    "$r45 = \"jiiibmmsk\""->"$r46 = new compiler.c2.cr6711117.Test_Class_1";
    "$r46 = new compiler.c2.cr6711117.Test_Class_1"->"specialinvoke $r46.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()";
    "specialinvoke $r46.<compiler.c2.cr6711117.Test_Class_1: void <init>()>()"->"virtualinvoke $r46.<java.lang.Object: java.lang.Class getClass()>()";
    "virtualinvoke $r46.<java.lang.Object: java.lang.Class getClass()>()"->"$b54 = -1 ^ -1";
    "$b54 = -1 ^ -1"->"$i55 = <compiler.c2.cr6711117.Test_Class_1: int var_21>";
    "$i55 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"->"$i56 = virtualinvoke $r45.<java.lang.String: int lastIndexOf(int,int)>($b54, $i55)";
    "$i56 = virtualinvoke $r45.<java.lang.String: int lastIndexOf(int,int)>($b54, $i55)"->"$l57 = (long) $i56";
    "$l57 = (long) $i56"->"$l58 = $l53 / $l57";
    "$l58 = $l53 / $l57"->"<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l58";
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l58"->"$l59 = <compiler.c2.cr6711117.Test_Class_1: long var_26>";
    "$l59 = <compiler.c2.cr6711117.Test_Class_1: long var_26>"->"$i60 = <compiler.c2.cr6711117.Test_Class_1: int var_21>";
    "$i60 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"->"$l61 = (long) $i60";
    "$l61 = (long) $i60"->"$l62 = $l59 | $l61";
    "$l62 = $l59 | $l61"->"<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l62";
    "<compiler.c2.cr6711117.Test_Class_1: long var_26> = $l62"->"$b63 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b63 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$b64 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b64 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()";
    "virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()"->"$r47 = newmultiarray (compiler.c2.cr6711117.Test_Class_3)[$b63][$b64][32]";
    "$r47 = newmultiarray (compiler.c2.cr6711117.Test_Class_3)[$b63][$b64][32]"->"$b65 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b65 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r48 = $r47[$b65]";
    "$r48 = $r47[$b65]"->"$b66 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b66 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r49 = $r48[$b66]";
    "$r49 = $r48[$b66]"->"$b67 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b67 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$r50 = $r49[$b67]";
    "$r50 = $r49[$b67]"->"$d3 = $r50.<compiler.c2.cr6711117.Test_Class_3: double var_34>";
    "$d3 = $r50.<compiler.c2.cr6711117.Test_Class_3: double var_34>"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r40";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_3 var_67> = r40"->"$b68 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b68 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$d4 = (double) $b68";
    "$d4 = (double) $b68"->"$d5 = $d3 % $d4";
    "$d5 = $d3 % $d4"->"$r50.<compiler.c2.cr6711117.Test_Class_3: double var_34> = $d5";
    "$r50.<compiler.c2.cr6711117.Test_Class_3: double var_34> = $d5"->"$i69 = <compiler.c2.cr6711117.Test_Class_1: int var_21>";
    "$i69 = <compiler.c2.cr6711117.Test_Class_1: int var_21>"->"$b70 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>";
    "$b70 = r40.<compiler.c2.cr6711117.Test_Class_3: byte var_39>"->"$i71 = $i69 & $b70";
    "$i71 = $i69 & $b70"->"<compiler.c2.cr6711117.Test_Class_1: int var_21> = $i71";
    "<compiler.c2.cr6711117.Test_Class_1: int var_21> = $i71"->"$r52 = (compiler.c2.cr6711117.Test_Class_5) r26";
    "$r52 = (compiler.c2.cr6711117.Test_Class_5) r26"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r52";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r52"->"r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r52";
    "r8.<compiler.c2.cr6711117.Test: compiler.c2.cr6711117.Test_Class_5 var_68> = $r52"->"<compiler.c2.cr6711117.Test: boolean var_72> = 0";
    "<compiler.c2.cr6711117.Test: boolean var_72> = 0"->"$r53 = new compiler.c2.cr6711117.Test_Class_5";
    "$r53 = new compiler.c2.cr6711117.Test_Class_5"->"specialinvoke $r53.<compiler.c2.cr6711117.Test_Class_5: void <init>()>()";
    "specialinvoke $r53.<compiler.c2.cr6711117.Test_Class_5: void <init>()>()"->"$c72 = $r53.<compiler.c2.cr6711117.Test_Class_5: char var_60>";
    "$c72 = $r53.<compiler.c2.cr6711117.Test_Class_5: char var_60>"->"$c73 = $c72 ^ 118";
    "$c73 = $c72 ^ 118"->"$c74 = (char) $c73";
    "$c74 = (char) $c73"->"$r53.<compiler.c2.cr6711117.Test_Class_5: char var_60> = $c74";
    "$r53.<compiler.c2.cr6711117.Test_Class_5: char var_60> = $c74"->"return $c74";
}
