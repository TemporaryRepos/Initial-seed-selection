digraph "unitGraph" {
    "r0 := @parameter0: java.util.zip.Checksum"
    "r1 := @parameter1: byte[]"
    "i1 := @parameter2: int"
    "i0 := @parameter3: int"
    "i5 = 0"
    "goto [?= (branch)]"
    "$i2 = i5 + i1"
    "$b3 = r1[$i2]"
    "interfaceinvoke r0.<java.util.zip.Checksum: void update(int)>($b3)"
    "i5 = i5 + 1"
    "if i5 < i0 goto $i2 = i5 + i1"
    "interfaceinvoke r0.<java.util.zip.Checksum: long getValue()>()"
    "return"
    "r0 := @parameter0: java.util.zip.Checksum"->"r1 := @parameter1: byte[]";
    "r1 := @parameter1: byte[]"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"i0 := @parameter3: int";
    "i0 := @parameter3: int"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < i0 goto $i2 = i5 + i1";
    "$i2 = i5 + i1"->"$b3 = r1[$i2]";
    "$b3 = r1[$i2]"->"interfaceinvoke r0.<java.util.zip.Checksum: void update(int)>($b3)";
    "interfaceinvoke r0.<java.util.zip.Checksum: void update(int)>($b3)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < i0 goto $i2 = i5 + i1";
    "if i5 < i0 goto $i2 = i5 + i1"->"interfaceinvoke r0.<java.util.zip.Checksum: long getValue()>()";
    "if i5 < i0 goto $i2 = i5 + i1"->"$i2 = i5 + i1";
    "interfaceinvoke r0.<java.util.zip.Checksum: long getValue()>()"->"return";
}
