digraph "unitGraph" {
    "r0 = newarray (long)[997]"
    "r1 = newarray (long)[997]"
    "r2 = newarray (long)[997]"
    "r3 = newarray (long)[997]"
    "r4 = newarray (long)[997]"
    "l331 = 0L"
    "i332 = 0"
    "goto [?= (branch)]"
    "$l0 = (long) i332"
    "l333 = 9223372036854775307L + $l0"
    "l331 = l331 + l333"
    "r1[i332] = l333"
    "r2[i332] = 31L"
    "r3[i332] = -31L"
    "r4[i332] = -1404851289946261711L"
    "i332 = i332 + 1"
    "if i332 < 997 goto $l0 = (long) i332"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i334 = 0"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i334 = i334 + 1"
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i335 = 0"
    "l336 = staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"
    "$b2 = l336 cmp l331"
    "if $b2 == 0 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"
    "$r9 = <java.lang.System: java.io.PrintStream err>"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l336)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l331)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13)"
    "i335 = i335 + 1"
    "i337 = 0"
    "$l6 = r0[i337]"
    "$l3 = (long) i337"
    "$l4 = 9223372036854775307L + $l3"
    "$l5 = $l4 + 31L"
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addc: \", i337, $l6, $l5)"
    "i335 = i335 + $i7"
    "i337 = i337 + 1"
    "if i337 < 997 goto $l6 = r0[i337]"
    "i338 = 0"
    "$l11 = r0[i338]"
    "$l8 = (long) i338"
    "$l9 = 9223372036854775307L + $l8"
    "$l10 = $l9 + 31L"
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addv: \", i338, $l11, $l10)"
    "i335 = i335 + $i12"
    "i338 = i338 + 1"
    "if i338 < 997 goto $l11 = r0[i338]"
    "i339 = 0"
    "$l16 = r0[i339]"
    "$l13 = (long) i339"
    "$l14 = 9223372036854775307L + $l13"
    "$l15 = $l14 + 31L"
    "$i17 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_adda: \", i339, $l16, $l15)"
    "i335 = i335 + $i17"
    "i339 = i339 + 1"
    "if i339 < 997 goto $l16 = r0[i339]"
    "i340 = 0"
    "$l21 = r0[i340]"
    "$l18 = (long) i340"
    "$l19 = 9223372036854775307L + $l18"
    "$l20 = $l19 - 31L"
    "$i22 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subc: \", i340, $l21, $l20)"
    "i335 = i335 + $i22"
    "i340 = i340 + 1"
    "if i340 < 997 goto $l21 = r0[i340]"
    "i341 = 0"
    "$l26 = r0[i341]"
    "$l23 = (long) i341"
    "$l24 = 9223372036854775307L + $l23"
    "$l25 = $l24 - 31L"
    "$i27 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subv: \", i341, $l26, $l25)"
    "i335 = i335 + $i27"
    "i341 = i341 + 1"
    "if i341 < 997 goto $l26 = r0[i341]"
    "i342 = 0"
    "$l31 = r0[i342]"
    "$l28 = (long) i342"
    "$l29 = 9223372036854775307L + $l28"
    "$l30 = $l29 - 31L"
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_suba: \", i342, $l31, $l30)"
    "i335 = i335 + $i32"
    "i342 = i342 + 1"
    "if i342 < 997 goto $l31 = r0[i342]"
    "i343 = 0"
    "$l36 = r0[i343]"
    "$l33 = (long) i343"
    "$l34 = 9223372036854775307L + $l33"
    "$l35 = $l34 * 31L"
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc: \", i343, $l36, $l35)"
    "i335 = i335 + $i37"
    "i343 = i343 + 1"
    "if i343 < 997 goto $l36 = r0[i343]"
    "i344 = 0"
    "$l41 = r0[i344]"
    "$l38 = (long) i344"
    "$l39 = 9223372036854775307L + $l38"
    "$l40 = $l39 * 31L"
    "$i42 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv: \", i344, $l41, $l40)"
    "i335 = i335 + $i42"
    "i344 = i344 + 1"
    "if i344 < 997 goto $l41 = r0[i344]"
    "i345 = 0"
    "$l46 = r0[i345]"
    "$l43 = (long) i345"
    "$l44 = 9223372036854775307L + $l43"
    "$l45 = $l44 * 31L"
    "$i47 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula: \", i345, $l46, $l45)"
    "i335 = i335 + $i47"
    "i345 = i345 + 1"
    "if i345 < 997 goto $l46 = r0[i345]"
    "i346 = 0"
    "$l51 = r0[i346]"
    "$l48 = (long) i346"
    "$l49 = 9223372036854775307L + $l48"
    "$l50 = $l49 / 31L"
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc: \", i346, $l51, $l50)"
    "i335 = i335 + $i52"
    "i346 = i346 + 1"
    "if i346 < 997 goto $l51 = r0[i346]"
    "i347 = 0"
    "$l56 = r0[i347]"
    "$l53 = (long) i347"
    "$l54 = 9223372036854775307L + $l53"
    "$l55 = $l54 / 31L"
    "$i57 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv: \", i347, $l56, $l55)"
    "i335 = i335 + $i57"
    "i347 = i347 + 1"
    "if i347 < 997 goto $l56 = r0[i347]"
    "i348 = 0"
    "$l61 = r0[i348]"
    "$l58 = (long) i348"
    "$l59 = 9223372036854775307L + $l58"
    "$l60 = $l59 / 31L"
    "$i62 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva: \", i348, $l61, $l60)"
    "i335 = i335 + $i62"
    "i348 = i348 + 1"
    "if i348 < 997 goto $l61 = r0[i348]"
    "i349 = 0"
    "$l66 = r0[i349]"
    "$l63 = (long) i349"
    "$l64 = 9223372036854775307L + $l63"
    "$l65 = $l64 * -31L"
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc_n: \", i349, $l66, $l65)"
    "i335 = i335 + $i67"
    "i349 = i349 + 1"
    "if i349 < 997 goto $l66 = r0[i349]"
    "i350 = 0"
    "$l71 = r0[i350]"
    "$l68 = (long) i350"
    "$l69 = 9223372036854775307L + $l68"
    "$l70 = $l69 * -31L"
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv_n: \", i350, $l71, $l70)"
    "i335 = i335 + $i72"
    "i350 = i350 + 1"
    "if i350 < 997 goto $l71 = r0[i350]"
    "i351 = 0"
    "$l76 = r0[i351]"
    "$l73 = (long) i351"
    "$l74 = 9223372036854775307L + $l73"
    "$l75 = $l74 * -31L"
    "$i77 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula_n: \", i351, $l76, $l75)"
    "i335 = i335 + $i77"
    "i351 = i351 + 1"
    "if i351 < 997 goto $l76 = r0[i351]"
    "i352 = 0"
    "$l81 = r0[i352]"
    "$l78 = (long) i352"
    "$l79 = 9223372036854775307L + $l78"
    "$l80 = $l79 / -31L"
    "$i82 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc_n: \", i352, $l81, $l80)"
    "i335 = i335 + $i82"
    "i352 = i352 + 1"
    "if i352 < 997 goto $l81 = r0[i352]"
    "i353 = 0"
    "$l86 = r0[i353]"
    "$l83 = (long) i353"
    "$l84 = 9223372036854775307L + $l83"
    "$l85 = $l84 / -31L"
    "$i87 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv_n: \", i353, $l86, $l85)"
    "i335 = i335 + $i87"
    "i353 = i353 + 1"
    "if i353 < 997 goto $l86 = r0[i353]"
    "i354 = 0"
    "$l91 = r0[i354]"
    "$l88 = (long) i354"
    "$l89 = 9223372036854775307L + $l88"
    "$l90 = $l89 / -31L"
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva_n: \", i354, $l91, $l90)"
    "i335 = i335 + $i92"
    "i354 = i354 + 1"
    "if i354 < 997 goto $l91 = r0[i354]"
    "i355 = 0"
    "$l96 = r0[i355]"
    "$l93 = (long) i355"
    "$l94 = 9223372036854775307L + $l93"
    "$l95 = $l94 & -1404851289946261711L"
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andc: \", i355, $l96, $l95)"
    "i335 = i335 + $i97"
    "i355 = i355 + 1"
    "if i355 < 997 goto $l96 = r0[i355]"
    "i356 = 0"
    "$l101 = r0[i356]"
    "$l98 = (long) i356"
    "$l99 = 9223372036854775307L + $l98"
    "$l100 = $l99 & -1404851289946261711L"
    "$i102 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andv: \", i356, $l101, $l100)"
    "i335 = i335 + $i102"
    "i356 = i356 + 1"
    "if i356 < 997 goto $l101 = r0[i356]"
    "i357 = 0"
    "$l106 = r0[i357]"
    "$l103 = (long) i357"
    "$l104 = 9223372036854775307L + $l103"
    "$l105 = $l104 & -1404851289946261711L"
    "$i107 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_anda: \", i357, $l106, $l105)"
    "i335 = i335 + $i107"
    "i357 = i357 + 1"
    "if i357 < 997 goto $l106 = r0[i357]"
    "i358 = 0"
    "$l111 = r0[i358]"
    "$l108 = (long) i358"
    "$l109 = 9223372036854775307L + $l108"
    "$l110 = $l109 | -1404851289946261711L"
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orc: \", i358, $l111, $l110)"
    "i335 = i335 + $i112"
    "i358 = i358 + 1"
    "if i358 < 997 goto $l111 = r0[i358]"
    "i359 = 0"
    "$l116 = r0[i359]"
    "$l113 = (long) i359"
    "$l114 = 9223372036854775307L + $l113"
    "$l115 = $l114 | -1404851289946261711L"
    "$i117 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orv: \", i359, $l116, $l115)"
    "i335 = i335 + $i117"
    "i359 = i359 + 1"
    "if i359 < 997 goto $l116 = r0[i359]"
    "i360 = 0"
    "$l121 = r0[i360]"
    "$l118 = (long) i360"
    "$l119 = 9223372036854775307L + $l118"
    "$l120 = $l119 | -1404851289946261711L"
    "$i122 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_ora: \", i360, $l121, $l120)"
    "i335 = i335 + $i122"
    "i360 = i360 + 1"
    "if i360 < 997 goto $l121 = r0[i360]"
    "i361 = 0"
    "$l126 = r0[i361]"
    "$l123 = (long) i361"
    "$l124 = 9223372036854775307L + $l123"
    "$l125 = $l124 ^ -1404851289946261711L"
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorc: \", i361, $l126, $l125)"
    "i335 = i335 + $i127"
    "i361 = i361 + 1"
    "if i361 < 997 goto $l126 = r0[i361]"
    "i362 = 0"
    "$l131 = r0[i362]"
    "$l128 = (long) i362"
    "$l129 = 9223372036854775307L + $l128"
    "$l130 = $l129 ^ -1404851289946261711L"
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorv: \", i362, $l131, $l130)"
    "i335 = i335 + $i132"
    "i362 = i362 + 1"
    "if i362 < 997 goto $l131 = r0[i362]"
    "i363 = 0"
    "$l136 = r0[i363]"
    "$l133 = (long) i363"
    "$l134 = 9223372036854775307L + $l133"
    "$l135 = $l134 ^ -1404851289946261711L"
    "$i137 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xora: \", i363, $l136, $l135)"
    "i335 = i335 + $i137"
    "i363 = i363 + 1"
    "if i363 < 997 goto $l136 = r0[i363]"
    "i364 = 0"
    "$l141 = r0[i364]"
    "$l138 = (long) i364"
    "$l139 = 9223372036854775307L + $l138"
    "$l140 = $l139 << 31"
    "$i142 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc: \", i364, $l141, $l140)"
    "i335 = i335 + $i142"
    "i364 = i364 + 1"
    "if i364 < 997 goto $l141 = r0[i364]"
    "i365 = 0"
    "$l146 = r0[i365]"
    "$l143 = (long) i365"
    "$l144 = 9223372036854775307L + $l143"
    "$l145 = $l144 << 31"
    "$i147 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv: \", i365, $l146, $l145)"
    "i335 = i335 + $i147"
    "i365 = i365 + 1"
    "if i365 < 997 goto $l146 = r0[i365]"
    "i366 = 0"
    "$l151 = r0[i366]"
    "$l148 = (long) i366"
    "$l149 = 9223372036854775307L + $l148"
    "$l150 = $l149 >>> 31"
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc: \", i366, $l151, $l150)"
    "i335 = i335 + $i152"
    "i366 = i366 + 1"
    "if i366 < 997 goto $l151 = r0[i366]"
    "i367 = 0"
    "$l156 = r0[i367]"
    "$l153 = (long) i367"
    "$l154 = 9223372036854775307L + $l153"
    "$l155 = $l154 >>> 31"
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv: \", i367, $l156, $l155)"
    "i335 = i335 + $i157"
    "i367 = i367 + 1"
    "if i367 < 997 goto $l156 = r0[i367]"
    "i368 = 0"
    "$l161 = r0[i368]"
    "$l158 = (long) i368"
    "$l159 = 9223372036854775307L + $l158"
    "$l160 = $l159 >> 31"
    "$i162 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac: \", i368, $l161, $l160)"
    "i335 = i335 + $i162"
    "i368 = i368 + 1"
    "if i368 < 997 goto $l161 = r0[i368]"
    "i369 = 0"
    "$l166 = r0[i369]"
    "$l163 = (long) i369"
    "$l164 = 9223372036854775307L + $l163"
    "$l165 = $l164 >> 31"
    "$i167 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav: \", i369, $l166, $l165)"
    "i335 = i335 + $i167"
    "i369 = i369 + 1"
    "if i369 < 997 goto $l166 = r0[i369]"
    "i370 = 0"
    "$l171 = r0[i370]"
    "$l168 = (long) i370"
    "$l169 = 9223372036854775307L + $l168"
    "$l170 = $l169 << -31"
    "$i172 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_n: \", i370, $l171, $l170)"
    "i335 = i335 + $i172"
    "i370 = i370 + 1"
    "if i370 < 997 goto $l171 = r0[i370]"
    "i371 = 0"
    "$l176 = r0[i371]"
    "$l173 = (long) i371"
    "$l174 = 9223372036854775307L + $l173"
    "$l175 = $l174 << -31"
    "$i177 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_n: \", i371, $l176, $l175)"
    "i335 = i335 + $i177"
    "i371 = i371 + 1"
    "if i371 < 997 goto $l176 = r0[i371]"
    "i372 = 0"
    "$l181 = r0[i372]"
    "$l178 = (long) i372"
    "$l179 = 9223372036854775307L + $l178"
    "$l180 = $l179 >>> -31"
    "$i182 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_n: \", i372, $l181, $l180)"
    "i335 = i335 + $i182"
    "i372 = i372 + 1"
    "if i372 < 997 goto $l181 = r0[i372]"
    "i373 = 0"
    "$l186 = r0[i373]"
    "$l183 = (long) i373"
    "$l184 = 9223372036854775307L + $l183"
    "$l185 = $l184 >>> -31"
    "$i187 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_n: \", i373, $l186, $l185)"
    "i335 = i335 + $i187"
    "i373 = i373 + 1"
    "if i373 < 997 goto $l186 = r0[i373]"
    "i374 = 0"
    "$l191 = r0[i374]"
    "$l188 = (long) i374"
    "$l189 = 9223372036854775307L + $l188"
    "$l190 = $l189 >> -31"
    "$i192 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_n: \", i374, $l191, $l190)"
    "i335 = i335 + $i192"
    "i374 = i374 + 1"
    "if i374 < 997 goto $l191 = r0[i374]"
    "i375 = 0"
    "$l196 = r0[i375]"
    "$l193 = (long) i375"
    "$l194 = 9223372036854775307L + $l193"
    "$l195 = $l194 >> -31"
    "$i197 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_n: \", i375, $l196, $l195)"
    "i335 = i335 + $i197"
    "i375 = i375 + 1"
    "if i375 < 997 goto $l196 = r0[i375]"
    "i376 = 0"
    "$l201 = r0[i376]"
    "$l198 = (long) i376"
    "$l199 = 9223372036854775307L + $l198"
    "$l200 = $l199 << 64"
    "$i202 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_o: \", i376, $l201, $l200)"
    "i335 = i335 + $i202"
    "i376 = i376 + 1"
    "if i376 < 997 goto $l201 = r0[i376]"
    "i377 = 0"
    "$l206 = r0[i377]"
    "$l203 = (long) i377"
    "$l204 = 9223372036854775307L + $l203"
    "$l205 = $l204 << 64"
    "$i207 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_o: \", i377, $l206, $l205)"
    "i335 = i335 + $i207"
    "i377 = i377 + 1"
    "if i377 < 997 goto $l206 = r0[i377]"
    "i378 = 0"
    "$l211 = r0[i378]"
    "$l208 = (long) i378"
    "$l209 = 9223372036854775307L + $l208"
    "$l210 = $l209 >>> 64"
    "$i212 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_o: \", i378, $l211, $l210)"
    "i335 = i335 + $i212"
    "i378 = i378 + 1"
    "if i378 < 997 goto $l211 = r0[i378]"
    "i379 = 0"
    "$l216 = r0[i379]"
    "$l213 = (long) i379"
    "$l214 = 9223372036854775307L + $l213"
    "$l215 = $l214 >>> 64"
    "$i217 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_o: \", i379, $l216, $l215)"
    "i335 = i335 + $i217"
    "i379 = i379 + 1"
    "if i379 < 997 goto $l216 = r0[i379]"
    "i380 = 0"
    "$l221 = r0[i380]"
    "$l218 = (long) i380"
    "$l219 = 9223372036854775307L + $l218"
    "$l220 = $l219 >> 64"
    "$i222 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_o: \", i380, $l221, $l220)"
    "i335 = i335 + $i222"
    "i380 = i380 + 1"
    "if i380 < 997 goto $l221 = r0[i380]"
    "i381 = 0"
    "$l226 = r0[i381]"
    "$l223 = (long) i381"
    "$l224 = 9223372036854775307L + $l223"
    "$l225 = $l224 >> 64"
    "$i227 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_o: \", i381, $l226, $l225)"
    "i335 = i335 + $i227"
    "i381 = i381 + 1"
    "if i381 < 997 goto $l226 = r0[i381]"
    "i382 = 0"
    "$l231 = r0[i382]"
    "$l228 = (long) i382"
    "$l229 = 9223372036854775307L + $l228"
    "$l230 = $l229 << -64"
    "$i232 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_on: \", i382, $l231, $l230)"
    "i335 = i335 + $i232"
    "i382 = i382 + 1"
    "if i382 < 997 goto $l231 = r0[i382]"
    "i383 = 0"
    "$l236 = r0[i383]"
    "$l233 = (long) i383"
    "$l234 = 9223372036854775307L + $l233"
    "$l235 = $l234 << -64"
    "$i237 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_on: \", i383, $l236, $l235)"
    "i335 = i335 + $i237"
    "i383 = i383 + 1"
    "if i383 < 997 goto $l236 = r0[i383]"
    "i384 = 0"
    "$l241 = r0[i384]"
    "$l238 = (long) i384"
    "$l239 = 9223372036854775307L + $l238"
    "$l240 = $l239 >>> -64"
    "$i242 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_on: \", i384, $l241, $l240)"
    "i335 = i335 + $i242"
    "i384 = i384 + 1"
    "if i384 < 997 goto $l241 = r0[i384]"
    "i385 = 0"
    "$l246 = r0[i385]"
    "$l243 = (long) i385"
    "$l244 = 9223372036854775307L + $l243"
    "$l245 = $l244 >>> -64"
    "$i247 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_on: \", i385, $l246, $l245)"
    "i335 = i335 + $i247"
    "i385 = i385 + 1"
    "if i385 < 997 goto $l246 = r0[i385]"
    "i386 = 0"
    "$l251 = r0[i386]"
    "$l248 = (long) i386"
    "$l249 = 9223372036854775307L + $l248"
    "$l250 = $l249 >> -64"
    "$i252 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_on: \", i386, $l251, $l250)"
    "i335 = i335 + $i252"
    "i386 = i386 + 1"
    "if i386 < 997 goto $l251 = r0[i386]"
    "i387 = 0"
    "$l256 = r0[i387]"
    "$l253 = (long) i387"
    "$l254 = 9223372036854775307L + $l253"
    "$l255 = $l254 >> -64"
    "$i257 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_on: \", i387, $l256, $l255)"
    "i335 = i335 + $i257"
    "i387 = i387 + 1"
    "if i387 < 997 goto $l256 = r0[i387]"
    "i388 = 0"
    "$l262 = r0[i388]"
    "$l258 = (long) i388"
    "$l259 = 9223372036854775307L + $l258"
    "$l260 = $l259 + 9223372036854775307L"
    "$l261 = $l260 << 31"
    "$i263 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_add: \", i388, $l262, $l261)"
    "i335 = i335 + $i263"
    "i388 = i388 + 1"
    "if i388 < 997 goto $l262 = r0[i388]"
    "i389 = 0"
    "$l268 = r0[i389]"
    "$l264 = (long) i389"
    "$l265 = 9223372036854775307L + $l264"
    "$l266 = $l265 + 9223372036854775307L"
    "$l267 = $l266 << 31"
    "$i269 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_add: \", i389, $l268, $l267)"
    "i335 = i335 + $i269"
    "i389 = i389 + 1"
    "if i389 < 997 goto $l268 = r0[i389]"
    "i390 = 0"
    "$l274 = r0[i390]"
    "$l270 = (long) i390"
    "$l271 = 9223372036854775307L + $l270"
    "$l272 = $l271 + 9223372036854775307L"
    "$l273 = $l272 >>> 31"
    "$i275 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_add: \", i390, $l274, $l273)"
    "i335 = i335 + $i275"
    "i390 = i390 + 1"
    "if i390 < 997 goto $l274 = r0[i390]"
    "i391 = 0"
    "$l280 = r0[i391]"
    "$l276 = (long) i391"
    "$l277 = 9223372036854775307L + $l276"
    "$l278 = $l277 + 9223372036854775307L"
    "$l279 = $l278 >>> 31"
    "$i281 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_add: \", i391, $l280, $l279)"
    "i335 = i335 + $i281"
    "i391 = i391 + 1"
    "if i391 < 997 goto $l280 = r0[i391]"
    "i392 = 0"
    "$l286 = r0[i392]"
    "$l282 = (long) i392"
    "$l283 = 9223372036854775307L + $l282"
    "$l284 = $l283 + 9223372036854775307L"
    "$l285 = $l284 >> 31"
    "$i287 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_add: \", i392, $l286, $l285)"
    "i335 = i335 + $i287"
    "i392 = i392 + 1"
    "if i392 < 997 goto $l286 = r0[i392]"
    "i393 = 0"
    "$l292 = r0[i393]"
    "$l288 = (long) i393"
    "$l289 = 9223372036854775307L + $l288"
    "$l290 = $l289 + 9223372036854775307L"
    "$l291 = $l290 >> 31"
    "$i293 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_add: \", i393, $l292, $l291)"
    "i335 = i335 + $i293"
    "i393 = i393 + 1"
    "if i393 < 997 goto $l292 = r0[i393]"
    "i394 = 0"
    "$l298 = r0[i394]"
    "$l294 = (long) i394"
    "$l295 = 9223372036854775307L + $l294"
    "$l296 = $l295 & -1404851289946261711L"
    "$l297 = $l296 << 31"
    "$i299 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_and: \", i394, $l298, $l297)"
    "i335 = i335 + $i299"
    "i394 = i394 + 1"
    "if i394 < 997 goto $l298 = r0[i394]"
    "i395 = 0"
    "$l304 = r0[i395]"
    "$l300 = (long) i395"
    "$l301 = 9223372036854775307L + $l300"
    "$l302 = $l301 & -1404851289946261711L"
    "$l303 = $l302 << 31"
    "$i305 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_and: \", i395, $l304, $l303)"
    "i335 = i335 + $i305"
    "i395 = i395 + 1"
    "if i395 < 997 goto $l304 = r0[i395]"
    "i396 = 0"
    "$l310 = r0[i396]"
    "$l306 = (long) i396"
    "$l307 = 9223372036854775307L + $l306"
    "$l308 = $l307 & -1404851289946261711L"
    "$l309 = $l308 >>> 31"
    "$i311 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_and: \", i396, $l310, $l309)"
    "i335 = i335 + $i311"
    "i396 = i396 + 1"
    "if i396 < 997 goto $l310 = r0[i396]"
    "i397 = 0"
    "$l316 = r0[i397]"
    "$l312 = (long) i397"
    "$l313 = 9223372036854775307L + $l312"
    "$l314 = $l313 & -1404851289946261711L"
    "$l315 = $l314 >>> 31"
    "$i317 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_and: \", i397, $l316, $l315)"
    "i335 = i335 + $i317"
    "i397 = i397 + 1"
    "if i397 < 997 goto $l316 = r0[i397]"
    "i398 = 0"
    "$l322 = r0[i398]"
    "$l318 = (long) i398"
    "$l319 = 9223372036854775307L + $l318"
    "$l320 = $l319 & -1404851289946261711L"
    "$l321 = $l320 >> 31"
    "$i323 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_and: \", i398, $l322, $l321)"
    "i335 = i335 + $i323"
    "i398 = i398 + 1"
    "if i398 < 997 goto $l322 = r0[i398]"
    "i399 = 0"
    "$l328 = r0[i399]"
    "$l324 = (long) i399"
    "$l325 = 9223372036854775307L + $l324"
    "$l326 = $l325 & -1404851289946261711L"
    "$l327 = $l326 >> 31"
    "$i329 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_and: \", i399, $l328, $l327)"
    "i335 = i335 + $i329"
    "i399 = i399 + 1"
    "if i399 < 997 goto $l328 = r0[i399]"
    "if i335 <= 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"
    "return i335"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i400 = 0"
    "i400 = i400 + 1"
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"
    "i401 = 0"
    "i401 = i401 + 1"
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"
    "i402 = 0"
    "i402 = i402 + 1"
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"
    "i403 = 0"
    "i403 = i403 + 1"
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"
    "i404 = 0"
    "i404 = i404 + 1"
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"
    "i405 = 0"
    "i405 = i405 + 1"
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"
    "i406 = 0"
    "i406 = i406 + 1"
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"
    "i407 = 0"
    "i407 = i407 + 1"
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"
    "i408 = 0"
    "i408 = i408 + 1"
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"
    "i409 = 0"
    "i409 = i409 + 1"
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"
    "i410 = 0"
    "i410 = i410 + 1"
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"
    "i411 = 0"
    "i411 = i411 + 1"
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"
    "i412 = 0"
    "i412 = i412 + 1"
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"
    "i413 = 0"
    "i413 = i413 + 1"
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"
    "i414 = 0"
    "i414 = i414 + 1"
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"
    "i415 = 0"
    "i415 = i415 + 1"
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"
    "i416 = 0"
    "i416 = i416 + 1"
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"
    "i417 = 0"
    "i417 = i417 + 1"
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"
    "i418 = 0"
    "i418 = i418 + 1"
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"
    "i419 = 0"
    "i419 = i419 + 1"
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"
    "i420 = 0"
    "i420 = i420 + 1"
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i421 = 0"
    "i421 = i421 + 1"
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"
    "i422 = 0"
    "i422 = i422 + 1"
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"
    "i423 = 0"
    "i423 = i423 + 1"
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i424 = 0"
    "i424 = i424 + 1"
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"
    "i425 = 0"
    "i425 = i425 + 1"
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"
    "i426 = 0"
    "i426 = i426 + 1"
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i427 = 0"
    "i427 = i427 + 1"
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"
    "i428 = 0"
    "i428 = i428 + 1"
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"
    "i429 = 0"
    "i429 = i429 + 1"
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"
    "i430 = 0"
    "i430 = i430 + 1"
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"
    "i431 = 0"
    "i431 = i431 + 1"
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"
    "i432 = 0"
    "i432 = i432 + 1"
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"
    "i433 = 0"
    "i433 = i433 + 1"
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"
    "i434 = 0"
    "i434 = i434 + 1"
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"
    "i435 = 0"
    "i435 = i435 + 1"
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"
    "i436 = 0"
    "i436 = i436 + 1"
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"
    "i437 = 0"
    "i437 = i437 + 1"
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"
    "i438 = 0"
    "i438 = i438 + 1"
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"
    "i439 = 0"
    "i439 = i439 + 1"
    "if i439 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"
    "i440 = 0"
    "i440 = i440 + 1"
    "if i440 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"
    "i441 = 0"
    "i441 = i441 + 1"
    "if i441 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"
    "i442 = 0"
    "i442 = i442 + 1"
    "if i442 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"
    "i443 = 0"
    "i443 = i443 + 1"
    "if i443 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"
    "i444 = 0"
    "i444 = i444 + 1"
    "if i444 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"
    "i445 = 0"
    "i445 = i445 + 1"
    "if i445 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"
    "i446 = 0"
    "i446 = i446 + 1"
    "if i446 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"
    "i447 = 0"
    "i447 = i447 + 1"
    "if i447 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"
    "i448 = 0"
    "i448 = i448 + 1"
    "if i448 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"
    "i449 = 0"
    "i449 = i449 + 1"
    "if i449 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"
    "i450 = 0"
    "i450 = i450 + 1"
    "if i450 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"
    "i451 = 0"
    "i451 = i451 + 1"
    "if i451 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"
    "i452 = 0"
    "i452 = i452 + 1"
    "if i452 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"
    "i453 = 0"
    "i453 = i453 + 1"
    "if i453 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "i454 = 0"
    "i454 = i454 + 1"
    "if i454 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"
    "i455 = 0"
    "i455 = i455 + 1"
    "if i455 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "i456 = 0"
    "i456 = i456 + 1"
    "if i456 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"
    "i457 = 0"
    "i457 = i457 + 1"
    "if i457 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"
    "i458 = 0"
    "i458 = i458 + 1"
    "if i458 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"
    "i459 = 0"
    "i459 = i459 + 1"
    "if i459 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i460 = 0"
    "i460 = i460 + 1"
    "if i460 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"
    "i461 = 0"
    "i461 = i461 + 1"
    "if i461 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "i462 = 0"
    "i462 = i462 + 1"
    "if i462 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"
    "i463 = 0"
    "i463 = i463 + 1"
    "if i463 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"
    "r0 = newarray (long)[997]"->"r1 = newarray (long)[997]";
    "r1 = newarray (long)[997]"->"r2 = newarray (long)[997]";
    "r2 = newarray (long)[997]"->"r3 = newarray (long)[997]";
    "r3 = newarray (long)[997]"->"r4 = newarray (long)[997]";
    "r4 = newarray (long)[997]"->"l331 = 0L";
    "l331 = 0L"->"i332 = 0";
    "i332 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i332 < 997 goto $l0 = (long) i332";
    "$l0 = (long) i332"->"l333 = 9223372036854775307L + $l0";
    "l333 = 9223372036854775307L + $l0"->"l331 = l331 + l333";
    "l331 = l331 + l333"->"r1[i332] = l333";
    "r1[i332] = l333"->"r2[i332] = 31L";
    "r2[i332] = 31L"->"r3[i332] = -31L";
    "r3[i332] = -31L"->"r4[i332] = -1404851289946261711L";
    "r4[i332] = -1404851289946261711L"->"i332 = i332 + 1";
    "i332 = i332 + 1"->"if i332 < 997 goto $l0 = (long) i332";
    "if i332 < 997 goto $l0 = (long) i332"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if i332 < 997 goto $l0 = (long) i332"->"$l0 = (long) i332";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i334 = 0";
    "i334 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i334 = i334 + 1";
    "i334 = i334 + 1"->"if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i335 = 0";
    "i335 = 0"->"l336 = staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "l336 = staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"$b2 = l336 cmp l331";
    "$b2 = l336 cmp l331"->"if $b2 == 0 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "if $b2 == 0 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"$r9 = <java.lang.System: java.io.PrintStream err>";
    "if $b2 == 0 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "$r9 = <java.lang.System: java.io.PrintStream err>"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l336)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l336)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l331)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l331)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13)"->"i335 = i335 + 1";
    "i335 = i335 + 1"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"i337 = 0";
    "i337 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i337 < 997 goto $l6 = r0[i337]";
    "$l6 = r0[i337]"->"$l3 = (long) i337";
    "$l3 = (long) i337"->"$l4 = 9223372036854775307L + $l3";
    "$l4 = 9223372036854775307L + $l3"->"$l5 = $l4 + 31L";
    "$l5 = $l4 + 31L"->"$i7 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addc: \", i337, $l6, $l5)";
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addc: \", i337, $l6, $l5)"->"i335 = i335 + $i7";
    "i335 = i335 + $i7"->"i337 = i337 + 1";
    "i337 = i337 + 1"->"if i337 < 997 goto $l6 = r0[i337]";
    "if i337 < 997 goto $l6 = r0[i337]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)";
    "if i337 < 997 goto $l6 = r0[i337]"->"$l6 = r0[i337]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"->"i338 = 0";
    "i338 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i338 < 997 goto $l11 = r0[i338]";
    "$l11 = r0[i338]"->"$l8 = (long) i338";
    "$l8 = (long) i338"->"$l9 = 9223372036854775307L + $l8";
    "$l9 = 9223372036854775307L + $l8"->"$l10 = $l9 + 31L";
    "$l10 = $l9 + 31L"->"$i12 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addv: \", i338, $l11, $l10)";
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_addv: \", i338, $l11, $l10)"->"i335 = i335 + $i12";
    "i335 = i335 + $i12"->"i338 = i338 + 1";
    "i338 = i338 + 1"->"if i338 < 997 goto $l11 = r0[i338]";
    "if i338 < 997 goto $l11 = r0[i338]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)";
    "if i338 < 997 goto $l11 = r0[i338]"->"$l11 = r0[i338]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"->"i339 = 0";
    "i339 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i339 < 997 goto $l16 = r0[i339]";
    "$l16 = r0[i339]"->"$l13 = (long) i339";
    "$l13 = (long) i339"->"$l14 = 9223372036854775307L + $l13";
    "$l14 = 9223372036854775307L + $l13"->"$l15 = $l14 + 31L";
    "$l15 = $l14 + 31L"->"$i17 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_adda: \", i339, $l16, $l15)";
    "$i17 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_adda: \", i339, $l16, $l15)"->"i335 = i335 + $i17";
    "i335 = i335 + $i17"->"i339 = i339 + 1";
    "i339 = i339 + 1"->"if i339 < 997 goto $l16 = r0[i339]";
    "if i339 < 997 goto $l16 = r0[i339]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)";
    "if i339 < 997 goto $l16 = r0[i339]"->"$l16 = r0[i339]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"->"i340 = 0";
    "i340 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i340 < 997 goto $l21 = r0[i340]";
    "$l21 = r0[i340]"->"$l18 = (long) i340";
    "$l18 = (long) i340"->"$l19 = 9223372036854775307L + $l18";
    "$l19 = 9223372036854775307L + $l18"->"$l20 = $l19 - 31L";
    "$l20 = $l19 - 31L"->"$i22 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subc: \", i340, $l21, $l20)";
    "$i22 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subc: \", i340, $l21, $l20)"->"i335 = i335 + $i22";
    "i335 = i335 + $i22"->"i340 = i340 + 1";
    "i340 = i340 + 1"->"if i340 < 997 goto $l21 = r0[i340]";
    "if i340 < 997 goto $l21 = r0[i340]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)";
    "if i340 < 997 goto $l21 = r0[i340]"->"$l21 = r0[i340]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"->"i341 = 0";
    "i341 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i341 < 997 goto $l26 = r0[i341]";
    "$l26 = r0[i341]"->"$l23 = (long) i341";
    "$l23 = (long) i341"->"$l24 = 9223372036854775307L + $l23";
    "$l24 = 9223372036854775307L + $l23"->"$l25 = $l24 - 31L";
    "$l25 = $l24 - 31L"->"$i27 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subv: \", i341, $l26, $l25)";
    "$i27 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_subv: \", i341, $l26, $l25)"->"i335 = i335 + $i27";
    "i335 = i335 + $i27"->"i341 = i341 + 1";
    "i341 = i341 + 1"->"if i341 < 997 goto $l26 = r0[i341]";
    "if i341 < 997 goto $l26 = r0[i341]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)";
    "if i341 < 997 goto $l26 = r0[i341]"->"$l26 = r0[i341]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"->"i342 = 0";
    "i342 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i342 < 997 goto $l31 = r0[i342]";
    "$l31 = r0[i342]"->"$l28 = (long) i342";
    "$l28 = (long) i342"->"$l29 = 9223372036854775307L + $l28";
    "$l29 = 9223372036854775307L + $l28"->"$l30 = $l29 - 31L";
    "$l30 = $l29 - 31L"->"$i32 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_suba: \", i342, $l31, $l30)";
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_suba: \", i342, $l31, $l30)"->"i335 = i335 + $i32";
    "i335 = i335 + $i32"->"i342 = i342 + 1";
    "i342 = i342 + 1"->"if i342 < 997 goto $l31 = r0[i342]";
    "if i342 < 997 goto $l31 = r0[i342]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)";
    "if i342 < 997 goto $l31 = r0[i342]"->"$l31 = r0[i342]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"->"i343 = 0";
    "i343 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i343 < 997 goto $l36 = r0[i343]";
    "$l36 = r0[i343]"->"$l33 = (long) i343";
    "$l33 = (long) i343"->"$l34 = 9223372036854775307L + $l33";
    "$l34 = 9223372036854775307L + $l33"->"$l35 = $l34 * 31L";
    "$l35 = $l34 * 31L"->"$i37 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc: \", i343, $l36, $l35)";
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc: \", i343, $l36, $l35)"->"i335 = i335 + $i37";
    "i335 = i335 + $i37"->"i343 = i343 + 1";
    "i343 = i343 + 1"->"if i343 < 997 goto $l36 = r0[i343]";
    "if i343 < 997 goto $l36 = r0[i343]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)";
    "if i343 < 997 goto $l36 = r0[i343]"->"$l36 = r0[i343]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"->"i344 = 0";
    "i344 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i344 < 997 goto $l41 = r0[i344]";
    "$l41 = r0[i344]"->"$l38 = (long) i344";
    "$l38 = (long) i344"->"$l39 = 9223372036854775307L + $l38";
    "$l39 = 9223372036854775307L + $l38"->"$l40 = $l39 * 31L";
    "$l40 = $l39 * 31L"->"$i42 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv: \", i344, $l41, $l40)";
    "$i42 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv: \", i344, $l41, $l40)"->"i335 = i335 + $i42";
    "i335 = i335 + $i42"->"i344 = i344 + 1";
    "i344 = i344 + 1"->"if i344 < 997 goto $l41 = r0[i344]";
    "if i344 < 997 goto $l41 = r0[i344]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)";
    "if i344 < 997 goto $l41 = r0[i344]"->"$l41 = r0[i344]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"->"i345 = 0";
    "i345 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i345 < 997 goto $l46 = r0[i345]";
    "$l46 = r0[i345]"->"$l43 = (long) i345";
    "$l43 = (long) i345"->"$l44 = 9223372036854775307L + $l43";
    "$l44 = 9223372036854775307L + $l43"->"$l45 = $l44 * 31L";
    "$l45 = $l44 * 31L"->"$i47 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula: \", i345, $l46, $l45)";
    "$i47 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula: \", i345, $l46, $l45)"->"i335 = i335 + $i47";
    "i335 = i335 + $i47"->"i345 = i345 + 1";
    "i345 = i345 + 1"->"if i345 < 997 goto $l46 = r0[i345]";
    "if i345 < 997 goto $l46 = r0[i345]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)";
    "if i345 < 997 goto $l46 = r0[i345]"->"$l46 = r0[i345]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"->"i346 = 0";
    "i346 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i346 < 997 goto $l51 = r0[i346]";
    "$l51 = r0[i346]"->"$l48 = (long) i346";
    "$l48 = (long) i346"->"$l49 = 9223372036854775307L + $l48";
    "$l49 = 9223372036854775307L + $l48"->"$l50 = $l49 / 31L";
    "$l50 = $l49 / 31L"->"$i52 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc: \", i346, $l51, $l50)";
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc: \", i346, $l51, $l50)"->"i335 = i335 + $i52";
    "i335 = i335 + $i52"->"i346 = i346 + 1";
    "i346 = i346 + 1"->"if i346 < 997 goto $l51 = r0[i346]";
    "if i346 < 997 goto $l51 = r0[i346]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)";
    "if i346 < 997 goto $l51 = r0[i346]"->"$l51 = r0[i346]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"->"i347 = 0";
    "i347 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i347 < 997 goto $l56 = r0[i347]";
    "$l56 = r0[i347]"->"$l53 = (long) i347";
    "$l53 = (long) i347"->"$l54 = 9223372036854775307L + $l53";
    "$l54 = 9223372036854775307L + $l53"->"$l55 = $l54 / 31L";
    "$l55 = $l54 / 31L"->"$i57 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv: \", i347, $l56, $l55)";
    "$i57 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv: \", i347, $l56, $l55)"->"i335 = i335 + $i57";
    "i335 = i335 + $i57"->"i347 = i347 + 1";
    "i347 = i347 + 1"->"if i347 < 997 goto $l56 = r0[i347]";
    "if i347 < 997 goto $l56 = r0[i347]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)";
    "if i347 < 997 goto $l56 = r0[i347]"->"$l56 = r0[i347]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"->"i348 = 0";
    "i348 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i348 < 997 goto $l61 = r0[i348]";
    "$l61 = r0[i348]"->"$l58 = (long) i348";
    "$l58 = (long) i348"->"$l59 = 9223372036854775307L + $l58";
    "$l59 = 9223372036854775307L + $l58"->"$l60 = $l59 / 31L";
    "$l60 = $l59 / 31L"->"$i62 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva: \", i348, $l61, $l60)";
    "$i62 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva: \", i348, $l61, $l60)"->"i335 = i335 + $i62";
    "i335 = i335 + $i62"->"i348 = i348 + 1";
    "i348 = i348 + 1"->"if i348 < 997 goto $l61 = r0[i348]";
    "if i348 < 997 goto $l61 = r0[i348]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)";
    "if i348 < 997 goto $l61 = r0[i348]"->"$l61 = r0[i348]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"->"i349 = 0";
    "i349 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i349 < 997 goto $l66 = r0[i349]";
    "$l66 = r0[i349]"->"$l63 = (long) i349";
    "$l63 = (long) i349"->"$l64 = 9223372036854775307L + $l63";
    "$l64 = 9223372036854775307L + $l63"->"$l65 = $l64 * -31L";
    "$l65 = $l64 * -31L"->"$i67 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc_n: \", i349, $l66, $l65)";
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulc_n: \", i349, $l66, $l65)"->"i335 = i335 + $i67";
    "i335 = i335 + $i67"->"i349 = i349 + 1";
    "i349 = i349 + 1"->"if i349 < 997 goto $l66 = r0[i349]";
    "if i349 < 997 goto $l66 = r0[i349]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)";
    "if i349 < 997 goto $l66 = r0[i349]"->"$l66 = r0[i349]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"->"i350 = 0";
    "i350 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i350 < 997 goto $l71 = r0[i350]";
    "$l71 = r0[i350]"->"$l68 = (long) i350";
    "$l68 = (long) i350"->"$l69 = 9223372036854775307L + $l68";
    "$l69 = 9223372036854775307L + $l68"->"$l70 = $l69 * -31L";
    "$l70 = $l69 * -31L"->"$i72 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv_n: \", i350, $l71, $l70)";
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mulv_n: \", i350, $l71, $l70)"->"i335 = i335 + $i72";
    "i335 = i335 + $i72"->"i350 = i350 + 1";
    "i350 = i350 + 1"->"if i350 < 997 goto $l71 = r0[i350]";
    "if i350 < 997 goto $l71 = r0[i350]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)";
    "if i350 < 997 goto $l71 = r0[i350]"->"$l71 = r0[i350]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"->"i351 = 0";
    "i351 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i351 < 997 goto $l76 = r0[i351]";
    "$l76 = r0[i351]"->"$l73 = (long) i351";
    "$l73 = (long) i351"->"$l74 = 9223372036854775307L + $l73";
    "$l74 = 9223372036854775307L + $l73"->"$l75 = $l74 * -31L";
    "$l75 = $l74 * -31L"->"$i77 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula_n: \", i351, $l76, $l75)";
    "$i77 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_mula_n: \", i351, $l76, $l75)"->"i335 = i335 + $i77";
    "i335 = i335 + $i77"->"i351 = i351 + 1";
    "i351 = i351 + 1"->"if i351 < 997 goto $l76 = r0[i351]";
    "if i351 < 997 goto $l76 = r0[i351]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)";
    "if i351 < 997 goto $l76 = r0[i351]"->"$l76 = r0[i351]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"->"i352 = 0";
    "i352 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i352 < 997 goto $l81 = r0[i352]";
    "$l81 = r0[i352]"->"$l78 = (long) i352";
    "$l78 = (long) i352"->"$l79 = 9223372036854775307L + $l78";
    "$l79 = 9223372036854775307L + $l78"->"$l80 = $l79 / -31L";
    "$l80 = $l79 / -31L"->"$i82 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc_n: \", i352, $l81, $l80)";
    "$i82 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divc_n: \", i352, $l81, $l80)"->"i335 = i335 + $i82";
    "i335 = i335 + $i82"->"i352 = i352 + 1";
    "i352 = i352 + 1"->"if i352 < 997 goto $l81 = r0[i352]";
    "if i352 < 997 goto $l81 = r0[i352]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)";
    "if i352 < 997 goto $l81 = r0[i352]"->"$l81 = r0[i352]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"->"i353 = 0";
    "i353 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i353 < 997 goto $l86 = r0[i353]";
    "$l86 = r0[i353]"->"$l83 = (long) i353";
    "$l83 = (long) i353"->"$l84 = 9223372036854775307L + $l83";
    "$l84 = 9223372036854775307L + $l83"->"$l85 = $l84 / -31L";
    "$l85 = $l84 / -31L"->"$i87 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv_n: \", i353, $l86, $l85)";
    "$i87 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_divv_n: \", i353, $l86, $l85)"->"i335 = i335 + $i87";
    "i335 = i335 + $i87"->"i353 = i353 + 1";
    "i353 = i353 + 1"->"if i353 < 997 goto $l86 = r0[i353]";
    "if i353 < 997 goto $l86 = r0[i353]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)";
    "if i353 < 997 goto $l86 = r0[i353]"->"$l86 = r0[i353]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"->"i354 = 0";
    "i354 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i354 < 997 goto $l91 = r0[i354]";
    "$l91 = r0[i354]"->"$l88 = (long) i354";
    "$l88 = (long) i354"->"$l89 = 9223372036854775307L + $l88";
    "$l89 = 9223372036854775307L + $l88"->"$l90 = $l89 / -31L";
    "$l90 = $l89 / -31L"->"$i92 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva_n: \", i354, $l91, $l90)";
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_diva_n: \", i354, $l91, $l90)"->"i335 = i335 + $i92";
    "i335 = i335 + $i92"->"i354 = i354 + 1";
    "i354 = i354 + 1"->"if i354 < 997 goto $l91 = r0[i354]";
    "if i354 < 997 goto $l91 = r0[i354]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)";
    "if i354 < 997 goto $l91 = r0[i354]"->"$l91 = r0[i354]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"->"i355 = 0";
    "i355 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i355 < 997 goto $l96 = r0[i355]";
    "$l96 = r0[i355]"->"$l93 = (long) i355";
    "$l93 = (long) i355"->"$l94 = 9223372036854775307L + $l93";
    "$l94 = 9223372036854775307L + $l93"->"$l95 = $l94 & -1404851289946261711L";
    "$l95 = $l94 & -1404851289946261711L"->"$i97 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andc: \", i355, $l96, $l95)";
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andc: \", i355, $l96, $l95)"->"i335 = i335 + $i97";
    "i335 = i335 + $i97"->"i355 = i355 + 1";
    "i355 = i355 + 1"->"if i355 < 997 goto $l96 = r0[i355]";
    "if i355 < 997 goto $l96 = r0[i355]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i355 < 997 goto $l96 = r0[i355]"->"$l96 = r0[i355]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i356 = 0";
    "i356 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i356 < 997 goto $l101 = r0[i356]";
    "$l101 = r0[i356]"->"$l98 = (long) i356";
    "$l98 = (long) i356"->"$l99 = 9223372036854775307L + $l98";
    "$l99 = 9223372036854775307L + $l98"->"$l100 = $l99 & -1404851289946261711L";
    "$l100 = $l99 & -1404851289946261711L"->"$i102 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andv: \", i356, $l101, $l100)";
    "$i102 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_andv: \", i356, $l101, $l100)"->"i335 = i335 + $i102";
    "i335 = i335 + $i102"->"i356 = i356 + 1";
    "i356 = i356 + 1"->"if i356 < 997 goto $l101 = r0[i356]";
    "if i356 < 997 goto $l101 = r0[i356]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)";
    "if i356 < 997 goto $l101 = r0[i356]"->"$l101 = r0[i356]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"->"i357 = 0";
    "i357 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i357 < 997 goto $l106 = r0[i357]";
    "$l106 = r0[i357]"->"$l103 = (long) i357";
    "$l103 = (long) i357"->"$l104 = 9223372036854775307L + $l103";
    "$l104 = 9223372036854775307L + $l103"->"$l105 = $l104 & -1404851289946261711L";
    "$l105 = $l104 & -1404851289946261711L"->"$i107 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_anda: \", i357, $l106, $l105)";
    "$i107 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_anda: \", i357, $l106, $l105)"->"i335 = i335 + $i107";
    "i335 = i335 + $i107"->"i357 = i357 + 1";
    "i357 = i357 + 1"->"if i357 < 997 goto $l106 = r0[i357]";
    "if i357 < 997 goto $l106 = r0[i357]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)";
    "if i357 < 997 goto $l106 = r0[i357]"->"$l106 = r0[i357]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"->"i358 = 0";
    "i358 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i358 < 997 goto $l111 = r0[i358]";
    "$l111 = r0[i358]"->"$l108 = (long) i358";
    "$l108 = (long) i358"->"$l109 = 9223372036854775307L + $l108";
    "$l109 = 9223372036854775307L + $l108"->"$l110 = $l109 | -1404851289946261711L";
    "$l110 = $l109 | -1404851289946261711L"->"$i112 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orc: \", i358, $l111, $l110)";
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orc: \", i358, $l111, $l110)"->"i335 = i335 + $i112";
    "i335 = i335 + $i112"->"i358 = i358 + 1";
    "i358 = i358 + 1"->"if i358 < 997 goto $l111 = r0[i358]";
    "if i358 < 997 goto $l111 = r0[i358]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i358 < 997 goto $l111 = r0[i358]"->"$l111 = r0[i358]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i359 = 0";
    "i359 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i359 < 997 goto $l116 = r0[i359]";
    "$l116 = r0[i359]"->"$l113 = (long) i359";
    "$l113 = (long) i359"->"$l114 = 9223372036854775307L + $l113";
    "$l114 = 9223372036854775307L + $l113"->"$l115 = $l114 | -1404851289946261711L";
    "$l115 = $l114 | -1404851289946261711L"->"$i117 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orv: \", i359, $l116, $l115)";
    "$i117 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_orv: \", i359, $l116, $l115)"->"i335 = i335 + $i117";
    "i335 = i335 + $i117"->"i359 = i359 + 1";
    "i359 = i359 + 1"->"if i359 < 997 goto $l116 = r0[i359]";
    "if i359 < 997 goto $l116 = r0[i359]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)";
    "if i359 < 997 goto $l116 = r0[i359]"->"$l116 = r0[i359]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"->"i360 = 0";
    "i360 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i360 < 997 goto $l121 = r0[i360]";
    "$l121 = r0[i360]"->"$l118 = (long) i360";
    "$l118 = (long) i360"->"$l119 = 9223372036854775307L + $l118";
    "$l119 = 9223372036854775307L + $l118"->"$l120 = $l119 | -1404851289946261711L";
    "$l120 = $l119 | -1404851289946261711L"->"$i122 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_ora: \", i360, $l121, $l120)";
    "$i122 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_ora: \", i360, $l121, $l120)"->"i335 = i335 + $i122";
    "i335 = i335 + $i122"->"i360 = i360 + 1";
    "i360 = i360 + 1"->"if i360 < 997 goto $l121 = r0[i360]";
    "if i360 < 997 goto $l121 = r0[i360]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)";
    "if i360 < 997 goto $l121 = r0[i360]"->"$l121 = r0[i360]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"->"i361 = 0";
    "i361 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i361 < 997 goto $l126 = r0[i361]";
    "$l126 = r0[i361]"->"$l123 = (long) i361";
    "$l123 = (long) i361"->"$l124 = 9223372036854775307L + $l123";
    "$l124 = 9223372036854775307L + $l123"->"$l125 = $l124 ^ -1404851289946261711L";
    "$l125 = $l124 ^ -1404851289946261711L"->"$i127 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorc: \", i361, $l126, $l125)";
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorc: \", i361, $l126, $l125)"->"i335 = i335 + $i127";
    "i335 = i335 + $i127"->"i361 = i361 + 1";
    "i361 = i361 + 1"->"if i361 < 997 goto $l126 = r0[i361]";
    "if i361 < 997 goto $l126 = r0[i361]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i361 < 997 goto $l126 = r0[i361]"->"$l126 = r0[i361]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i362 = 0";
    "i362 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i362 < 997 goto $l131 = r0[i362]";
    "$l131 = r0[i362]"->"$l128 = (long) i362";
    "$l128 = (long) i362"->"$l129 = 9223372036854775307L + $l128";
    "$l129 = 9223372036854775307L + $l128"->"$l130 = $l129 ^ -1404851289946261711L";
    "$l130 = $l129 ^ -1404851289946261711L"->"$i132 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorv: \", i362, $l131, $l130)";
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xorv: \", i362, $l131, $l130)"->"i335 = i335 + $i132";
    "i335 = i335 + $i132"->"i362 = i362 + 1";
    "i362 = i362 + 1"->"if i362 < 997 goto $l131 = r0[i362]";
    "if i362 < 997 goto $l131 = r0[i362]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)";
    "if i362 < 997 goto $l131 = r0[i362]"->"$l131 = r0[i362]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"->"i363 = 0";
    "i363 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i363 < 997 goto $l136 = r0[i363]";
    "$l136 = r0[i363]"->"$l133 = (long) i363";
    "$l133 = (long) i363"->"$l134 = 9223372036854775307L + $l133";
    "$l134 = 9223372036854775307L + $l133"->"$l135 = $l134 ^ -1404851289946261711L";
    "$l135 = $l134 ^ -1404851289946261711L"->"$i137 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xora: \", i363, $l136, $l135)";
    "$i137 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_xora: \", i363, $l136, $l135)"->"i335 = i335 + $i137";
    "i335 = i335 + $i137"->"i363 = i363 + 1";
    "i363 = i363 + 1"->"if i363 < 997 goto $l136 = r0[i363]";
    "if i363 < 997 goto $l136 = r0[i363]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)";
    "if i363 < 997 goto $l136 = r0[i363]"->"$l136 = r0[i363]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"->"i364 = 0";
    "i364 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i364 < 997 goto $l141 = r0[i364]";
    "$l141 = r0[i364]"->"$l138 = (long) i364";
    "$l138 = (long) i364"->"$l139 = 9223372036854775307L + $l138";
    "$l139 = 9223372036854775307L + $l138"->"$l140 = $l139 << 31";
    "$l140 = $l139 << 31"->"$i142 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc: \", i364, $l141, $l140)";
    "$i142 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc: \", i364, $l141, $l140)"->"i335 = i335 + $i142";
    "i335 = i335 + $i142"->"i364 = i364 + 1";
    "i364 = i364 + 1"->"if i364 < 997 goto $l141 = r0[i364]";
    "if i364 < 997 goto $l141 = r0[i364]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)";
    "if i364 < 997 goto $l141 = r0[i364]"->"$l141 = r0[i364]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"->"i365 = 0";
    "i365 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i365 < 997 goto $l146 = r0[i365]";
    "$l146 = r0[i365]"->"$l143 = (long) i365";
    "$l143 = (long) i365"->"$l144 = 9223372036854775307L + $l143";
    "$l144 = 9223372036854775307L + $l143"->"$l145 = $l144 << 31";
    "$l145 = $l144 << 31"->"$i147 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv: \", i365, $l146, $l145)";
    "$i147 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv: \", i365, $l146, $l145)"->"i335 = i335 + $i147";
    "i335 = i335 + $i147"->"i365 = i365 + 1";
    "i365 = i365 + 1"->"if i365 < 997 goto $l146 = r0[i365]";
    "if i365 < 997 goto $l146 = r0[i365]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)";
    "if i365 < 997 goto $l146 = r0[i365]"->"$l146 = r0[i365]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"->"i366 = 0";
    "i366 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i366 < 997 goto $l151 = r0[i366]";
    "$l151 = r0[i366]"->"$l148 = (long) i366";
    "$l148 = (long) i366"->"$l149 = 9223372036854775307L + $l148";
    "$l149 = 9223372036854775307L + $l148"->"$l150 = $l149 >>> 31";
    "$l150 = $l149 >>> 31"->"$i152 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc: \", i366, $l151, $l150)";
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc: \", i366, $l151, $l150)"->"i335 = i335 + $i152";
    "i335 = i335 + $i152"->"i366 = i366 + 1";
    "i366 = i366 + 1"->"if i366 < 997 goto $l151 = r0[i366]";
    "if i366 < 997 goto $l151 = r0[i366]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)";
    "if i366 < 997 goto $l151 = r0[i366]"->"$l151 = r0[i366]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"->"i367 = 0";
    "i367 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i367 < 997 goto $l156 = r0[i367]";
    "$l156 = r0[i367]"->"$l153 = (long) i367";
    "$l153 = (long) i367"->"$l154 = 9223372036854775307L + $l153";
    "$l154 = 9223372036854775307L + $l153"->"$l155 = $l154 >>> 31";
    "$l155 = $l154 >>> 31"->"$i157 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv: \", i367, $l156, $l155)";
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv: \", i367, $l156, $l155)"->"i335 = i335 + $i157";
    "i335 = i335 + $i157"->"i367 = i367 + 1";
    "i367 = i367 + 1"->"if i367 < 997 goto $l156 = r0[i367]";
    "if i367 < 997 goto $l156 = r0[i367]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)";
    "if i367 < 997 goto $l156 = r0[i367]"->"$l156 = r0[i367]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"->"i368 = 0";
    "i368 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i368 < 997 goto $l161 = r0[i368]";
    "$l161 = r0[i368]"->"$l158 = (long) i368";
    "$l158 = (long) i368"->"$l159 = 9223372036854775307L + $l158";
    "$l159 = 9223372036854775307L + $l158"->"$l160 = $l159 >> 31";
    "$l160 = $l159 >> 31"->"$i162 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac: \", i368, $l161, $l160)";
    "$i162 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac: \", i368, $l161, $l160)"->"i335 = i335 + $i162";
    "i335 = i335 + $i162"->"i368 = i368 + 1";
    "i368 = i368 + 1"->"if i368 < 997 goto $l161 = r0[i368]";
    "if i368 < 997 goto $l161 = r0[i368]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)";
    "if i368 < 997 goto $l161 = r0[i368]"->"$l161 = r0[i368]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"->"i369 = 0";
    "i369 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i369 < 997 goto $l166 = r0[i369]";
    "$l166 = r0[i369]"->"$l163 = (long) i369";
    "$l163 = (long) i369"->"$l164 = 9223372036854775307L + $l163";
    "$l164 = 9223372036854775307L + $l163"->"$l165 = $l164 >> 31";
    "$l165 = $l164 >> 31"->"$i167 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav: \", i369, $l166, $l165)";
    "$i167 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav: \", i369, $l166, $l165)"->"i335 = i335 + $i167";
    "i335 = i335 + $i167"->"i369 = i369 + 1";
    "i369 = i369 + 1"->"if i369 < 997 goto $l166 = r0[i369]";
    "if i369 < 997 goto $l166 = r0[i369]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)";
    "if i369 < 997 goto $l166 = r0[i369]"->"$l166 = r0[i369]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"->"i370 = 0";
    "i370 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i370 < 997 goto $l171 = r0[i370]";
    "$l171 = r0[i370]"->"$l168 = (long) i370";
    "$l168 = (long) i370"->"$l169 = 9223372036854775307L + $l168";
    "$l169 = 9223372036854775307L + $l168"->"$l170 = $l169 << -31";
    "$l170 = $l169 << -31"->"$i172 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_n: \", i370, $l171, $l170)";
    "$i172 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_n: \", i370, $l171, $l170)"->"i335 = i335 + $i172";
    "i335 = i335 + $i172"->"i370 = i370 + 1";
    "i370 = i370 + 1"->"if i370 < 997 goto $l171 = r0[i370]";
    "if i370 < 997 goto $l171 = r0[i370]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)";
    "if i370 < 997 goto $l171 = r0[i370]"->"$l171 = r0[i370]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"->"i371 = 0";
    "i371 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i371 < 997 goto $l176 = r0[i371]";
    "$l176 = r0[i371]"->"$l173 = (long) i371";
    "$l173 = (long) i371"->"$l174 = 9223372036854775307L + $l173";
    "$l174 = 9223372036854775307L + $l173"->"$l175 = $l174 << -31";
    "$l175 = $l174 << -31"->"$i177 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_n: \", i371, $l176, $l175)";
    "$i177 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_n: \", i371, $l176, $l175)"->"i335 = i335 + $i177";
    "i335 = i335 + $i177"->"i371 = i371 + 1";
    "i371 = i371 + 1"->"if i371 < 997 goto $l176 = r0[i371]";
    "if i371 < 997 goto $l176 = r0[i371]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)";
    "if i371 < 997 goto $l176 = r0[i371]"->"$l176 = r0[i371]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"->"i372 = 0";
    "i372 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i372 < 997 goto $l181 = r0[i372]";
    "$l181 = r0[i372]"->"$l178 = (long) i372";
    "$l178 = (long) i372"->"$l179 = 9223372036854775307L + $l178";
    "$l179 = 9223372036854775307L + $l178"->"$l180 = $l179 >>> -31";
    "$l180 = $l179 >>> -31"->"$i182 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_n: \", i372, $l181, $l180)";
    "$i182 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_n: \", i372, $l181, $l180)"->"i335 = i335 + $i182";
    "i335 = i335 + $i182"->"i372 = i372 + 1";
    "i372 = i372 + 1"->"if i372 < 997 goto $l181 = r0[i372]";
    "if i372 < 997 goto $l181 = r0[i372]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)";
    "if i372 < 997 goto $l181 = r0[i372]"->"$l181 = r0[i372]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"->"i373 = 0";
    "i373 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i373 < 997 goto $l186 = r0[i373]";
    "$l186 = r0[i373]"->"$l183 = (long) i373";
    "$l183 = (long) i373"->"$l184 = 9223372036854775307L + $l183";
    "$l184 = 9223372036854775307L + $l183"->"$l185 = $l184 >>> -31";
    "$l185 = $l184 >>> -31"->"$i187 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_n: \", i373, $l186, $l185)";
    "$i187 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_n: \", i373, $l186, $l185)"->"i335 = i335 + $i187";
    "i335 = i335 + $i187"->"i373 = i373 + 1";
    "i373 = i373 + 1"->"if i373 < 997 goto $l186 = r0[i373]";
    "if i373 < 997 goto $l186 = r0[i373]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)";
    "if i373 < 997 goto $l186 = r0[i373]"->"$l186 = r0[i373]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"->"i374 = 0";
    "i374 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i374 < 997 goto $l191 = r0[i374]";
    "$l191 = r0[i374]"->"$l188 = (long) i374";
    "$l188 = (long) i374"->"$l189 = 9223372036854775307L + $l188";
    "$l189 = 9223372036854775307L + $l188"->"$l190 = $l189 >> -31";
    "$l190 = $l189 >> -31"->"$i192 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_n: \", i374, $l191, $l190)";
    "$i192 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_n: \", i374, $l191, $l190)"->"i335 = i335 + $i192";
    "i335 = i335 + $i192"->"i374 = i374 + 1";
    "i374 = i374 + 1"->"if i374 < 997 goto $l191 = r0[i374]";
    "if i374 < 997 goto $l191 = r0[i374]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)";
    "if i374 < 997 goto $l191 = r0[i374]"->"$l191 = r0[i374]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"->"i375 = 0";
    "i375 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i375 < 997 goto $l196 = r0[i375]";
    "$l196 = r0[i375]"->"$l193 = (long) i375";
    "$l193 = (long) i375"->"$l194 = 9223372036854775307L + $l193";
    "$l194 = 9223372036854775307L + $l193"->"$l195 = $l194 >> -31";
    "$l195 = $l194 >> -31"->"$i197 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_n: \", i375, $l196, $l195)";
    "$i197 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_n: \", i375, $l196, $l195)"->"i335 = i335 + $i197";
    "i335 = i335 + $i197"->"i375 = i375 + 1";
    "i375 = i375 + 1"->"if i375 < 997 goto $l196 = r0[i375]";
    "if i375 < 997 goto $l196 = r0[i375]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)";
    "if i375 < 997 goto $l196 = r0[i375]"->"$l196 = r0[i375]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"->"i376 = 0";
    "i376 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i376 < 997 goto $l201 = r0[i376]";
    "$l201 = r0[i376]"->"$l198 = (long) i376";
    "$l198 = (long) i376"->"$l199 = 9223372036854775307L + $l198";
    "$l199 = 9223372036854775307L + $l198"->"$l200 = $l199 << 64";
    "$l200 = $l199 << 64"->"$i202 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_o: \", i376, $l201, $l200)";
    "$i202 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_o: \", i376, $l201, $l200)"->"i335 = i335 + $i202";
    "i335 = i335 + $i202"->"i376 = i376 + 1";
    "i376 = i376 + 1"->"if i376 < 997 goto $l201 = r0[i376]";
    "if i376 < 997 goto $l201 = r0[i376]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)";
    "if i376 < 997 goto $l201 = r0[i376]"->"$l201 = r0[i376]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"->"i377 = 0";
    "i377 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i377 < 997 goto $l206 = r0[i377]";
    "$l206 = r0[i377]"->"$l203 = (long) i377";
    "$l203 = (long) i377"->"$l204 = 9223372036854775307L + $l203";
    "$l204 = 9223372036854775307L + $l203"->"$l205 = $l204 << 64";
    "$l205 = $l204 << 64"->"$i207 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_o: \", i377, $l206, $l205)";
    "$i207 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_o: \", i377, $l206, $l205)"->"i335 = i335 + $i207";
    "i335 = i335 + $i207"->"i377 = i377 + 1";
    "i377 = i377 + 1"->"if i377 < 997 goto $l206 = r0[i377]";
    "if i377 < 997 goto $l206 = r0[i377]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)";
    "if i377 < 997 goto $l206 = r0[i377]"->"$l206 = r0[i377]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"->"i378 = 0";
    "i378 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i378 < 997 goto $l211 = r0[i378]";
    "$l211 = r0[i378]"->"$l208 = (long) i378";
    "$l208 = (long) i378"->"$l209 = 9223372036854775307L + $l208";
    "$l209 = 9223372036854775307L + $l208"->"$l210 = $l209 >>> 64";
    "$l210 = $l209 >>> 64"->"$i212 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_o: \", i378, $l211, $l210)";
    "$i212 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_o: \", i378, $l211, $l210)"->"i335 = i335 + $i212";
    "i335 = i335 + $i212"->"i378 = i378 + 1";
    "i378 = i378 + 1"->"if i378 < 997 goto $l211 = r0[i378]";
    "if i378 < 997 goto $l211 = r0[i378]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)";
    "if i378 < 997 goto $l211 = r0[i378]"->"$l211 = r0[i378]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"->"i379 = 0";
    "i379 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i379 < 997 goto $l216 = r0[i379]";
    "$l216 = r0[i379]"->"$l213 = (long) i379";
    "$l213 = (long) i379"->"$l214 = 9223372036854775307L + $l213";
    "$l214 = 9223372036854775307L + $l213"->"$l215 = $l214 >>> 64";
    "$l215 = $l214 >>> 64"->"$i217 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_o: \", i379, $l216, $l215)";
    "$i217 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_o: \", i379, $l216, $l215)"->"i335 = i335 + $i217";
    "i335 = i335 + $i217"->"i379 = i379 + 1";
    "i379 = i379 + 1"->"if i379 < 997 goto $l216 = r0[i379]";
    "if i379 < 997 goto $l216 = r0[i379]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)";
    "if i379 < 997 goto $l216 = r0[i379]"->"$l216 = r0[i379]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"->"i380 = 0";
    "i380 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i380 < 997 goto $l221 = r0[i380]";
    "$l221 = r0[i380]"->"$l218 = (long) i380";
    "$l218 = (long) i380"->"$l219 = 9223372036854775307L + $l218";
    "$l219 = 9223372036854775307L + $l218"->"$l220 = $l219 >> 64";
    "$l220 = $l219 >> 64"->"$i222 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_o: \", i380, $l221, $l220)";
    "$i222 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_o: \", i380, $l221, $l220)"->"i335 = i335 + $i222";
    "i335 = i335 + $i222"->"i380 = i380 + 1";
    "i380 = i380 + 1"->"if i380 < 997 goto $l221 = r0[i380]";
    "if i380 < 997 goto $l221 = r0[i380]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)";
    "if i380 < 997 goto $l221 = r0[i380]"->"$l221 = r0[i380]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"->"i381 = 0";
    "i381 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i381 < 997 goto $l226 = r0[i381]";
    "$l226 = r0[i381]"->"$l223 = (long) i381";
    "$l223 = (long) i381"->"$l224 = 9223372036854775307L + $l223";
    "$l224 = 9223372036854775307L + $l223"->"$l225 = $l224 >> 64";
    "$l225 = $l224 >> 64"->"$i227 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_o: \", i381, $l226, $l225)";
    "$i227 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_o: \", i381, $l226, $l225)"->"i335 = i335 + $i227";
    "i335 = i335 + $i227"->"i381 = i381 + 1";
    "i381 = i381 + 1"->"if i381 < 997 goto $l226 = r0[i381]";
    "if i381 < 997 goto $l226 = r0[i381]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)";
    "if i381 < 997 goto $l226 = r0[i381]"->"$l226 = r0[i381]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"->"i382 = 0";
    "i382 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i382 < 997 goto $l231 = r0[i382]";
    "$l231 = r0[i382]"->"$l228 = (long) i382";
    "$l228 = (long) i382"->"$l229 = 9223372036854775307L + $l228";
    "$l229 = 9223372036854775307L + $l228"->"$l230 = $l229 << -64";
    "$l230 = $l229 << -64"->"$i232 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_on: \", i382, $l231, $l230)";
    "$i232 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_on: \", i382, $l231, $l230)"->"i335 = i335 + $i232";
    "i335 = i335 + $i232"->"i382 = i382 + 1";
    "i382 = i382 + 1"->"if i382 < 997 goto $l231 = r0[i382]";
    "if i382 < 997 goto $l231 = r0[i382]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)";
    "if i382 < 997 goto $l231 = r0[i382]"->"$l231 = r0[i382]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"->"i383 = 0";
    "i383 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i383 < 997 goto $l236 = r0[i383]";
    "$l236 = r0[i383]"->"$l233 = (long) i383";
    "$l233 = (long) i383"->"$l234 = 9223372036854775307L + $l233";
    "$l234 = 9223372036854775307L + $l233"->"$l235 = $l234 << -64";
    "$l235 = $l234 << -64"->"$i237 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_on: \", i383, $l236, $l235)";
    "$i237 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_on: \", i383, $l236, $l235)"->"i335 = i335 + $i237";
    "i335 = i335 + $i237"->"i383 = i383 + 1";
    "i383 = i383 + 1"->"if i383 < 997 goto $l236 = r0[i383]";
    "if i383 < 997 goto $l236 = r0[i383]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)";
    "if i383 < 997 goto $l236 = r0[i383]"->"$l236 = r0[i383]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"->"i384 = 0";
    "i384 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i384 < 997 goto $l241 = r0[i384]";
    "$l241 = r0[i384]"->"$l238 = (long) i384";
    "$l238 = (long) i384"->"$l239 = 9223372036854775307L + $l238";
    "$l239 = 9223372036854775307L + $l238"->"$l240 = $l239 >>> -64";
    "$l240 = $l239 >>> -64"->"$i242 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_on: \", i384, $l241, $l240)";
    "$i242 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_on: \", i384, $l241, $l240)"->"i335 = i335 + $i242";
    "i335 = i335 + $i242"->"i384 = i384 + 1";
    "i384 = i384 + 1"->"if i384 < 997 goto $l241 = r0[i384]";
    "if i384 < 997 goto $l241 = r0[i384]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)";
    "if i384 < 997 goto $l241 = r0[i384]"->"$l241 = r0[i384]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"->"i385 = 0";
    "i385 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i385 < 997 goto $l246 = r0[i385]";
    "$l246 = r0[i385]"->"$l243 = (long) i385";
    "$l243 = (long) i385"->"$l244 = 9223372036854775307L + $l243";
    "$l244 = 9223372036854775307L + $l243"->"$l245 = $l244 >>> -64";
    "$l245 = $l244 >>> -64"->"$i247 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_on: \", i385, $l246, $l245)";
    "$i247 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_on: \", i385, $l246, $l245)"->"i335 = i335 + $i247";
    "i335 = i335 + $i247"->"i385 = i385 + 1";
    "i385 = i385 + 1"->"if i385 < 997 goto $l246 = r0[i385]";
    "if i385 < 997 goto $l246 = r0[i385]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)";
    "if i385 < 997 goto $l246 = r0[i385]"->"$l246 = r0[i385]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"->"i386 = 0";
    "i386 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i386 < 997 goto $l251 = r0[i386]";
    "$l251 = r0[i386]"->"$l248 = (long) i386";
    "$l248 = (long) i386"->"$l249 = 9223372036854775307L + $l248";
    "$l249 = 9223372036854775307L + $l248"->"$l250 = $l249 >> -64";
    "$l250 = $l249 >> -64"->"$i252 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_on: \", i386, $l251, $l250)";
    "$i252 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_on: \", i386, $l251, $l250)"->"i335 = i335 + $i252";
    "i335 = i335 + $i252"->"i386 = i386 + 1";
    "i386 = i386 + 1"->"if i386 < 997 goto $l251 = r0[i386]";
    "if i386 < 997 goto $l251 = r0[i386]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)";
    "if i386 < 997 goto $l251 = r0[i386]"->"$l251 = r0[i386]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"->"i387 = 0";
    "i387 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i387 < 997 goto $l256 = r0[i387]";
    "$l256 = r0[i387]"->"$l253 = (long) i387";
    "$l253 = (long) i387"->"$l254 = 9223372036854775307L + $l253";
    "$l254 = 9223372036854775307L + $l253"->"$l255 = $l254 >> -64";
    "$l255 = $l254 >> -64"->"$i257 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_on: \", i387, $l256, $l255)";
    "$i257 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_on: \", i387, $l256, $l255)"->"i335 = i335 + $i257";
    "i335 = i335 + $i257"->"i387 = i387 + 1";
    "i387 = i387 + 1"->"if i387 < 997 goto $l256 = r0[i387]";
    "if i387 < 997 goto $l256 = r0[i387]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)";
    "if i387 < 997 goto $l256 = r0[i387]"->"$l256 = r0[i387]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"->"i388 = 0";
    "i388 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i388 < 997 goto $l262 = r0[i388]";
    "$l262 = r0[i388]"->"$l258 = (long) i388";
    "$l258 = (long) i388"->"$l259 = 9223372036854775307L + $l258";
    "$l259 = 9223372036854775307L + $l258"->"$l260 = $l259 + 9223372036854775307L";
    "$l260 = $l259 + 9223372036854775307L"->"$l261 = $l260 << 31";
    "$l261 = $l260 << 31"->"$i263 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_add: \", i388, $l262, $l261)";
    "$i263 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_add: \", i388, $l262, $l261)"->"i335 = i335 + $i263";
    "i335 = i335 + $i263"->"i388 = i388 + 1";
    "i388 = i388 + 1"->"if i388 < 997 goto $l262 = r0[i388]";
    "if i388 < 997 goto $l262 = r0[i388]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i388 < 997 goto $l262 = r0[i388]"->"$l262 = r0[i388]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i389 = 0";
    "i389 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i389 < 997 goto $l268 = r0[i389]";
    "$l268 = r0[i389]"->"$l264 = (long) i389";
    "$l264 = (long) i389"->"$l265 = 9223372036854775307L + $l264";
    "$l265 = 9223372036854775307L + $l264"->"$l266 = $l265 + 9223372036854775307L";
    "$l266 = $l265 + 9223372036854775307L"->"$l267 = $l266 << 31";
    "$l267 = $l266 << 31"->"$i269 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_add: \", i389, $l268, $l267)";
    "$i269 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_add: \", i389, $l268, $l267)"->"i335 = i335 + $i269";
    "i335 = i335 + $i269"->"i389 = i389 + 1";
    "i389 = i389 + 1"->"if i389 < 997 goto $l268 = r0[i389]";
    "if i389 < 997 goto $l268 = r0[i389]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)";
    "if i389 < 997 goto $l268 = r0[i389]"->"$l268 = r0[i389]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"->"i390 = 0";
    "i390 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i390 < 997 goto $l274 = r0[i390]";
    "$l274 = r0[i390]"->"$l270 = (long) i390";
    "$l270 = (long) i390"->"$l271 = 9223372036854775307L + $l270";
    "$l271 = 9223372036854775307L + $l270"->"$l272 = $l271 + 9223372036854775307L";
    "$l272 = $l271 + 9223372036854775307L"->"$l273 = $l272 >>> 31";
    "$l273 = $l272 >>> 31"->"$i275 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_add: \", i390, $l274, $l273)";
    "$i275 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_add: \", i390, $l274, $l273)"->"i335 = i335 + $i275";
    "i335 = i335 + $i275"->"i390 = i390 + 1";
    "i390 = i390 + 1"->"if i390 < 997 goto $l274 = r0[i390]";
    "if i390 < 997 goto $l274 = r0[i390]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i390 < 997 goto $l274 = r0[i390]"->"$l274 = r0[i390]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i391 = 0";
    "i391 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i391 < 997 goto $l280 = r0[i391]";
    "$l280 = r0[i391]"->"$l276 = (long) i391";
    "$l276 = (long) i391"->"$l277 = 9223372036854775307L + $l276";
    "$l277 = 9223372036854775307L + $l276"->"$l278 = $l277 + 9223372036854775307L";
    "$l278 = $l277 + 9223372036854775307L"->"$l279 = $l278 >>> 31";
    "$l279 = $l278 >>> 31"->"$i281 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_add: \", i391, $l280, $l279)";
    "$i281 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_add: \", i391, $l280, $l279)"->"i335 = i335 + $i281";
    "i335 = i335 + $i281"->"i391 = i391 + 1";
    "i391 = i391 + 1"->"if i391 < 997 goto $l280 = r0[i391]";
    "if i391 < 997 goto $l280 = r0[i391]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)";
    "if i391 < 997 goto $l280 = r0[i391]"->"$l280 = r0[i391]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"->"i392 = 0";
    "i392 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i392 < 997 goto $l286 = r0[i392]";
    "$l286 = r0[i392]"->"$l282 = (long) i392";
    "$l282 = (long) i392"->"$l283 = 9223372036854775307L + $l282";
    "$l283 = 9223372036854775307L + $l282"->"$l284 = $l283 + 9223372036854775307L";
    "$l284 = $l283 + 9223372036854775307L"->"$l285 = $l284 >> 31";
    "$l285 = $l284 >> 31"->"$i287 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_add: \", i392, $l286, $l285)";
    "$i287 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_add: \", i392, $l286, $l285)"->"i335 = i335 + $i287";
    "i335 = i335 + $i287"->"i392 = i392 + 1";
    "i392 = i392 + 1"->"if i392 < 997 goto $l286 = r0[i392]";
    "if i392 < 997 goto $l286 = r0[i392]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i392 < 997 goto $l286 = r0[i392]"->"$l286 = r0[i392]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i393 = 0";
    "i393 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i393 < 997 goto $l292 = r0[i393]";
    "$l292 = r0[i393]"->"$l288 = (long) i393";
    "$l288 = (long) i393"->"$l289 = 9223372036854775307L + $l288";
    "$l289 = 9223372036854775307L + $l288"->"$l290 = $l289 + 9223372036854775307L";
    "$l290 = $l289 + 9223372036854775307L"->"$l291 = $l290 >> 31";
    "$l291 = $l290 >> 31"->"$i293 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_add: \", i393, $l292, $l291)";
    "$i293 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_add: \", i393, $l292, $l291)"->"i335 = i335 + $i293";
    "i335 = i335 + $i293"->"i393 = i393 + 1";
    "i393 = i393 + 1"->"if i393 < 997 goto $l292 = r0[i393]";
    "if i393 < 997 goto $l292 = r0[i393]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)";
    "if i393 < 997 goto $l292 = r0[i393]"->"$l292 = r0[i393]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"->"i394 = 0";
    "i394 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i394 < 997 goto $l298 = r0[i394]";
    "$l298 = r0[i394]"->"$l294 = (long) i394";
    "$l294 = (long) i394"->"$l295 = 9223372036854775307L + $l294";
    "$l295 = 9223372036854775307L + $l294"->"$l296 = $l295 & -1404851289946261711L";
    "$l296 = $l295 & -1404851289946261711L"->"$l297 = $l296 << 31";
    "$l297 = $l296 << 31"->"$i299 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_and: \", i394, $l298, $l297)";
    "$i299 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllc_and: \", i394, $l298, $l297)"->"i335 = i335 + $i299";
    "i335 = i335 + $i299"->"i394 = i394 + 1";
    "i394 = i394 + 1"->"if i394 < 997 goto $l298 = r0[i394]";
    "if i394 < 997 goto $l298 = r0[i394]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i394 < 997 goto $l298 = r0[i394]"->"$l298 = r0[i394]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i395 = 0";
    "i395 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i395 < 997 goto $l304 = r0[i395]";
    "$l304 = r0[i395]"->"$l300 = (long) i395";
    "$l300 = (long) i395"->"$l301 = 9223372036854775307L + $l300";
    "$l301 = 9223372036854775307L + $l300"->"$l302 = $l301 & -1404851289946261711L";
    "$l302 = $l301 & -1404851289946261711L"->"$l303 = $l302 << 31";
    "$l303 = $l302 << 31"->"$i305 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_and: \", i395, $l304, $l303)";
    "$i305 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_sllv_and: \", i395, $l304, $l303)"->"i335 = i335 + $i305";
    "i335 = i335 + $i305"->"i395 = i395 + 1";
    "i395 = i395 + 1"->"if i395 < 997 goto $l304 = r0[i395]";
    "if i395 < 997 goto $l304 = r0[i395]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)";
    "if i395 < 997 goto $l304 = r0[i395]"->"$l304 = r0[i395]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"->"i396 = 0";
    "i396 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i396 < 997 goto $l310 = r0[i396]";
    "$l310 = r0[i396]"->"$l306 = (long) i396";
    "$l306 = (long) i396"->"$l307 = 9223372036854775307L + $l306";
    "$l307 = 9223372036854775307L + $l306"->"$l308 = $l307 & -1404851289946261711L";
    "$l308 = $l307 & -1404851289946261711L"->"$l309 = $l308 >>> 31";
    "$l309 = $l308 >>> 31"->"$i311 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_and: \", i396, $l310, $l309)";
    "$i311 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlc_and: \", i396, $l310, $l309)"->"i335 = i335 + $i311";
    "i335 = i335 + $i311"->"i396 = i396 + 1";
    "i396 = i396 + 1"->"if i396 < 997 goto $l310 = r0[i396]";
    "if i396 < 997 goto $l310 = r0[i396]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i396 < 997 goto $l310 = r0[i396]"->"$l310 = r0[i396]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i397 = 0";
    "i397 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i397 < 997 goto $l316 = r0[i397]";
    "$l316 = r0[i397]"->"$l312 = (long) i397";
    "$l312 = (long) i397"->"$l313 = 9223372036854775307L + $l312";
    "$l313 = 9223372036854775307L + $l312"->"$l314 = $l313 & -1404851289946261711L";
    "$l314 = $l313 & -1404851289946261711L"->"$l315 = $l314 >>> 31";
    "$l315 = $l314 >>> 31"->"$i317 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_and: \", i397, $l316, $l315)";
    "$i317 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srlv_and: \", i397, $l316, $l315)"->"i335 = i335 + $i317";
    "i335 = i335 + $i317"->"i397 = i397 + 1";
    "i397 = i397 + 1"->"if i397 < 997 goto $l316 = r0[i397]";
    "if i397 < 997 goto $l316 = r0[i397]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)";
    "if i397 < 997 goto $l316 = r0[i397]"->"$l316 = r0[i397]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"->"i398 = 0";
    "i398 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i398 < 997 goto $l322 = r0[i398]";
    "$l322 = r0[i398]"->"$l318 = (long) i398";
    "$l318 = (long) i398"->"$l319 = 9223372036854775307L + $l318";
    "$l319 = 9223372036854775307L + $l318"->"$l320 = $l319 & -1404851289946261711L";
    "$l320 = $l319 & -1404851289946261711L"->"$l321 = $l320 >> 31";
    "$l321 = $l320 >> 31"->"$i323 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_and: \", i398, $l322, $l321)";
    "$i323 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srac_and: \", i398, $l322, $l321)"->"i335 = i335 + $i323";
    "i335 = i335 + $i323"->"i398 = i398 + 1";
    "i398 = i398 + 1"->"if i398 < 997 goto $l322 = r0[i398]";
    "if i398 < 997 goto $l322 = r0[i398]"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i398 < 997 goto $l322 = r0[i398]"->"$l322 = r0[i398]";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i399 = 0";
    "i399 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i399 < 997 goto $l328 = r0[i399]";
    "$l328 = r0[i399]"->"$l324 = (long) i399";
    "$l324 = (long) i399"->"$l325 = 9223372036854775307L + $l324";
    "$l325 = 9223372036854775307L + $l324"->"$l326 = $l325 & -1404851289946261711L";
    "$l326 = $l325 & -1404851289946261711L"->"$l327 = $l326 >> 31";
    "$l327 = $l326 >> 31"->"$i329 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_and: \", i399, $l328, $l327)";
    "$i329 = staticinvoke <compiler.c2.cr6340864.TestLongVect: int verify(java.lang.String,int,long,long)>(\"test_srav_and: \", i399, $l328, $l327)"->"i335 = i335 + $i329";
    "i335 = i335 + $i329"->"i399 = i399 + 1";
    "i399 = i399 + 1"->"if i399 < 997 goto $l328 = r0[i399]";
    "if i399 < 997 goto $l328 = r0[i399]"->"if i335 <= 0 goto $r7 = <java.lang.System: java.io.PrintStream out>";
    "if i399 < 997 goto $l328 = r0[i399]"->"$l328 = r0[i399]";
    "if i335 <= 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"return i335";
    "if i335 <= 0 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i400 = 0";
    "i400 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"i400 = i400 + 1";
    "i400 = i400 + 1"->"if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"i401 = 0";
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: long test_sum(long[])>(r1)";
    "i401 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"i401 = i401 + 1";
    "i401 = i401 + 1"->"if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"i402 = 0";
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addc(long[],long[])>(r0, r1)";
    "i402 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"->"i402 = i402 + 1";
    "i402 = i402 + 1"->"if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)";
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"->"i403 = 0";
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_addv(long[],long[],long)>(r0, r1, 31L)";
    "i403 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"->"i403 = i403 + 1";
    "i403 = i403 + 1"->"if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)";
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"->"i404 = 0";
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_adda(long[],long[],long[])>(r0, r1, r2)";
    "i404 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"->"i404 = i404 + 1";
    "i404 = i404 + 1"->"if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)";
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"->"i405 = 0";
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subc(long[],long[])>(r0, r1)";
    "i405 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"->"i405 = i405 + 1";
    "i405 = i405 + 1"->"if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)";
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"->"i406 = 0";
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_subv(long[],long[],long)>(r0, r1, 31L)";
    "i406 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"->"i406 = i406 + 1";
    "i406 = i406 + 1"->"if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)";
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"->"i407 = 0";
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_suba(long[],long[],long[])>(r0, r1, r2)";
    "i407 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"->"i407 = i407 + 1";
    "i407 = i407 + 1"->"if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)";
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"->"i408 = 0";
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc(long[],long[])>(r0, r1)";
    "i408 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"->"i408 = i408 + 1";
    "i408 = i408 + 1"->"if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)";
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"->"i409 = 0";
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, 31L)";
    "i409 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"->"i409 = i409 + 1";
    "i409 = i409 + 1"->"if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)";
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"->"i410 = 0";
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r2)";
    "i410 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"->"i410 = i410 + 1";
    "i410 = i410 + 1"->"if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)";
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"->"i411 = 0";
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc(long[],long[])>(r0, r1)";
    "i411 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"->"i411 = i411 + 1";
    "i411 = i411 + 1"->"if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)";
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"->"i412 = 0";
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, 31L)";
    "i412 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"->"i412 = i412 + 1";
    "i412 = i412 + 1"->"if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)";
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"->"i413 = 0";
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r2)";
    "i413 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"->"i413 = i413 + 1";
    "i413 = i413 + 1"->"if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)";
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"->"i414 = 0";
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulc_n(long[],long[])>(r0, r1)";
    "i414 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"->"i414 = i414 + 1";
    "i414 = i414 + 1"->"if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)";
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"->"i415 = 0";
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mulv(long[],long[],long)>(r0, r1, -31L)";
    "i415 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"->"i415 = i415 + 1";
    "i415 = i415 + 1"->"if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)";
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"->"i416 = 0";
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_mula(long[],long[],long[])>(r0, r1, r3)";
    "i416 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"->"i416 = i416 + 1";
    "i416 = i416 + 1"->"if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)";
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"->"i417 = 0";
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divc_n(long[],long[])>(r0, r1)";
    "i417 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"->"i417 = i417 + 1";
    "i417 = i417 + 1"->"if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)";
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"->"i418 = 0";
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_divv(long[],long[],long)>(r0, r1, -31L)";
    "i418 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"->"i418 = i418 + 1";
    "i418 = i418 + 1"->"if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)";
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"->"i419 = 0";
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_diva(long[],long[],long[])>(r0, r1, r3)";
    "i419 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"->"i419 = i419 + 1";
    "i419 = i419 + 1"->"if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)";
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"->"i420 = 0";
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andc(long[],long[])>(r0, r1)";
    "i420 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i420 = i420 + 1";
    "i420 = i420 + 1"->"if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i421 = 0";
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_andv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "i421 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"->"i421 = i421 + 1";
    "i421 = i421 + 1"->"if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)";
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"->"i422 = 0";
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_anda(long[],long[],long[])>(r0, r1, r4)";
    "i422 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"->"i422 = i422 + 1";
    "i422 = i422 + 1"->"if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)";
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"->"i423 = 0";
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orc(long[],long[])>(r0, r1)";
    "i423 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i423 = i423 + 1";
    "i423 = i423 + 1"->"if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i424 = 0";
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_orv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "i424 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"->"i424 = i424 + 1";
    "i424 = i424 + 1"->"if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)";
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"->"i425 = 0";
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_ora(long[],long[],long[])>(r0, r1, r4)";
    "i425 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"->"i425 = i425 + 1";
    "i425 = i425 + 1"->"if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)";
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"->"i426 = 0";
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorc(long[],long[])>(r0, r1)";
    "i426 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i426 = i426 + 1";
    "i426 = i426 + 1"->"if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i427 = 0";
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xorv(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "i427 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"->"i427 = i427 + 1";
    "i427 = i427 + 1"->"if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)";
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"->"i428 = 0";
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_xora(long[],long[],long[])>(r0, r1, r4)";
    "i428 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"->"i428 = i428 + 1";
    "i428 = i428 + 1"->"if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)";
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"->"i429 = 0";
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc(long[],long[])>(r0, r1)";
    "i429 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"->"i429 = i429 + 1";
    "i429 = i429 + 1"->"if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)";
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"->"i430 = 0";
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 31)";
    "i430 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"->"i430 = i430 + 1";
    "i430 = i430 + 1"->"if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)";
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"->"i431 = 0";
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc(long[],long[])>(r0, r1)";
    "i431 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"->"i431 = i431 + 1";
    "i431 = i431 + 1"->"if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)";
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"->"i432 = 0";
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 31)";
    "i432 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"->"i432 = i432 + 1";
    "i432 = i432 + 1"->"if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)";
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"->"i433 = 0";
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac(long[],long[])>(r0, r1)";
    "i433 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"->"i433 = i433 + 1";
    "i433 = i433 + 1"->"if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)";
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"->"i434 = 0";
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 31)";
    "i434 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"->"i434 = i434 + 1";
    "i434 = i434 + 1"->"if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)";
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"->"i435 = 0";
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_n(long[],long[])>(r0, r1)";
    "i435 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"->"i435 = i435 + 1";
    "i435 = i435 + 1"->"if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)";
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"->"i436 = 0";
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -31)";
    "i436 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"->"i436 = i436 + 1";
    "i436 = i436 + 1"->"if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)";
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"->"i437 = 0";
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_n(long[],long[])>(r0, r1)";
    "i437 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"->"i437 = i437 + 1";
    "i437 = i437 + 1"->"if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)";
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"->"i438 = 0";
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -31)";
    "i438 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"->"i438 = i438 + 1";
    "i438 = i438 + 1"->"if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)";
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"->"i439 = 0";
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_n(long[],long[])>(r0, r1)";
    "i439 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i439 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"->"i439 = i439 + 1";
    "i439 = i439 + 1"->"if i439 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)";
    "if i439 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"->"i440 = 0";
    "if i439 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -31)";
    "i440 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i440 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"->"i440 = i440 + 1";
    "i440 = i440 + 1"->"if i440 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)";
    "if i440 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"->"i441 = 0";
    "if i440 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_o(long[],long[])>(r0, r1)";
    "i441 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i441 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"->"i441 = i441 + 1";
    "i441 = i441 + 1"->"if i441 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)";
    "if i441 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"->"i442 = 0";
    "if i441 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, 64)";
    "i442 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i442 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"->"i442 = i442 + 1";
    "i442 = i442 + 1"->"if i442 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)";
    "if i442 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"->"i443 = 0";
    "if i442 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_o(long[],long[])>(r0, r1)";
    "i443 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i443 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"->"i443 = i443 + 1";
    "i443 = i443 + 1"->"if i443 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)";
    "if i443 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"->"i444 = 0";
    "if i443 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, 64)";
    "i444 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i444 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"->"i444 = i444 + 1";
    "i444 = i444 + 1"->"if i444 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)";
    "if i444 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"->"i445 = 0";
    "if i444 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_o(long[],long[])>(r0, r1)";
    "i445 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i445 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"->"i445 = i445 + 1";
    "i445 = i445 + 1"->"if i445 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)";
    "if i445 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"->"i446 = 0";
    "if i445 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, 64)";
    "i446 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i446 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"->"i446 = i446 + 1";
    "i446 = i446 + 1"->"if i446 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)";
    "if i446 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"->"i447 = 0";
    "if i446 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_on(long[],long[])>(r0, r1)";
    "i447 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i447 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"->"i447 = i447 + 1";
    "i447 = i447 + 1"->"if i447 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)";
    "if i447 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"->"i448 = 0";
    "if i447 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv(long[],long[],int)>(r0, r1, -64)";
    "i448 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i448 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"->"i448 = i448 + 1";
    "i448 = i448 + 1"->"if i448 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)";
    "if i448 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"->"i449 = 0";
    "if i448 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_on(long[],long[])>(r0, r1)";
    "i449 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i449 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"->"i449 = i449 + 1";
    "i449 = i449 + 1"->"if i449 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)";
    "if i449 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"->"i450 = 0";
    "if i449 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv(long[],long[],int)>(r0, r1, -64)";
    "i450 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i450 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"->"i450 = i450 + 1";
    "i450 = i450 + 1"->"if i450 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)";
    "if i450 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"->"i451 = 0";
    "if i450 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_on(long[],long[])>(r0, r1)";
    "i451 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i451 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"->"i451 = i451 + 1";
    "i451 = i451 + 1"->"if i451 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)";
    "if i451 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"->"i452 = 0";
    "if i451 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav(long[],long[],int)>(r0, r1, -64)";
    "i452 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i452 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"->"i452 = i452 + 1";
    "i452 = i452 + 1"->"if i452 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)";
    "if i452 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"->"i453 = 0";
    "if i452 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_add(long[],long[])>(r0, r1)";
    "i453 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i453 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i453 = i453 + 1";
    "i453 = i453 + 1"->"if i453 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i453 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i454 = 0";
    "if i453 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "i454 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i454 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"->"i454 = i454 + 1";
    "i454 = i454 + 1"->"if i454 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)";
    "if i454 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"->"i455 = 0";
    "if i454 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_add(long[],long[])>(r0, r1)";
    "i455 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i455 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i455 = i455 + 1";
    "i455 = i455 + 1"->"if i455 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i455 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i456 = 0";
    "if i455 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "i456 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i456 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"->"i456 = i456 + 1";
    "i456 = i456 + 1"->"if i456 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)";
    "if i456 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"->"i457 = 0";
    "if i456 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_add(long[],long[])>(r0, r1)";
    "i457 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i457 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i457 = i457 + 1";
    "i457 = i457 + 1"->"if i457 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "if i457 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"i458 = 0";
    "if i457 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_add(long[],long[],long)>(r0, r1, 9223372036854775307L)";
    "i458 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i458 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"->"i458 = i458 + 1";
    "i458 = i458 + 1"->"if i458 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)";
    "if i458 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"->"i459 = 0";
    "if i458 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllc_and(long[],long[])>(r0, r1)";
    "i459 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i459 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i459 = i459 + 1";
    "i459 = i459 + 1"->"if i459 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i459 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i460 = 0";
    "if i459 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_sllv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "i460 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i460 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"->"i460 = i460 + 1";
    "i460 = i460 + 1"->"if i460 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)";
    "if i460 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"->"i461 = 0";
    "if i460 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlc_and(long[],long[])>(r0, r1)";
    "i461 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i461 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i461 = i461 + 1";
    "i461 = i461 + 1"->"if i461 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i461 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i462 = 0";
    "if i461 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srlv_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "i462 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i462 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"->"i462 = i462 + 1";
    "i462 = i462 + 1"->"if i462 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)";
    "if i462 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"->"i463 = 0";
    "if i462 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srac_and(long[],long[])>(r0, r1)";
    "i463 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i463 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"i463 = i463 + 1";
    "i463 = i463 + 1"->"if i463 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
    "if i463 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"return i335";
    "if i463 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)"->"staticinvoke <compiler.c2.cr6340864.TestLongVect: void test_srav_and(long[],long[],long)>(r0, r1, -1404851289946261711L)";
}
