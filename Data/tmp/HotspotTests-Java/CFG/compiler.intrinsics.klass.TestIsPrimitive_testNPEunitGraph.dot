digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.Callable"
    "i1 = 0"
    "goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]"
    "$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"
    "<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1"
    "$r2 = new java.lang.IllegalStateException"
    "specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\")"
    "throw $r2"
    "$r3 := @caughtexception"
    "i1 = i1 + 1"
    "$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>"
    "if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"
    "return"
    "r0 := @parameter0: java.util.concurrent.Callable"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]";
    "goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]"->"$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>";
    "$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1";
    "$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"$r3 := @caughtexception";
    "<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1"->"$r2 = new java.lang.IllegalStateException";
    "<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1"->"$r3 := @caughtexception";
    "$r2 = new java.lang.IllegalStateException"->"specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\")";
    "$r2 = new java.lang.IllegalStateException"->"$r3 := @caughtexception";
    "specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\")"->"throw $r2";
    "specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\")"->"$r3 := @caughtexception";
    "throw $r2"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>";
    "$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>"->"if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()";
    "if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"return";
    "if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()";
    "if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"$r3 := @caughtexception";
}
