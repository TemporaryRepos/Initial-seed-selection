digraph "unitGraph" {
    "r1 := @this: jit.Arrays.ArrayTests.ArrayTests"
    "$i0 = <jit.Arrays.ArrayTests.ArrayTests: int n>"
    "r0 = newarray (float)[$i0]"
    "i7 = 0"
    "i8 = 0"
    "goto [?= $i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>]"
    "$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>"
    "$i2 = $r2[i8]"
    "$f0 = (float) $i2"
    "r0[i8] = $f0"
    "i8 = i8 + 1"
    "$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>"
    "if i8 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>"
    "i9 = 0"
    "goto [?= $i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>]"
    "$f1 = r0[i9]"
    "$i4 = (int) $f1"
    "i7 = i7 + $i4"
    "i9 = i9 + 1"
    "$i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>"
    "if i9 < $i3 goto $f1 = r0[i9]"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"floats \")"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \")"
    "$i5 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)"
    "$i6 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>"
    "if i7 != $i6 goto return 0"
    "return 1"
    "return 0"
    "r1 := @this: jit.Arrays.ArrayTests.ArrayTests"->"$i0 = <jit.Arrays.ArrayTests.ArrayTests: int n>";
    "$i0 = <jit.Arrays.ArrayTests.ArrayTests: int n>"->"r0 = newarray (float)[$i0]";
    "r0 = newarray (float)[$i0]"->"i7 = 0";
    "i7 = 0"->"i8 = 0";
    "i8 = 0"->"goto [?= $i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>]";
    "goto [?= $i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>]"->"$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>";
    "$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>"->"$i2 = $r2[i8]";
    "$i2 = $r2[i8]"->"$f0 = (float) $i2";
    "$f0 = (float) $i2"->"r0[i8] = $f0";
    "r0[i8] = $f0"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>";
    "$i1 = <jit.Arrays.ArrayTests.ArrayTests: int n>"->"if i8 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>";
    "if i8 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>"->"i9 = 0";
    "if i8 < $i1 goto $r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>"->"$r2 = r1.<jit.Arrays.ArrayTests.ArrayTests: int[] base_array>";
    "i9 = 0"->"goto [?= $i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>]";
    "goto [?= $i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>]"->"$i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>";
    "$f1 = r0[i9]"->"$i4 = (int) $f1";
    "$i4 = (int) $f1"->"i7 = i7 + $i4";
    "i7 = i7 + $i4"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"$i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>";
    "$i3 = <jit.Arrays.ArrayTests.ArrayTests: int n>"->"if i9 < $i3 goto $f1 = r0[i9]";
    "if i9 < $i3 goto $f1 = r0[i9]"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if i9 < $i3 goto $f1 = r0[i9]"->"$f1 = r0[i9]";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"floats \")";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"floats \")"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \")"->"$i5 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>";
    "$i5 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)"->"$i6 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>";
    "$i6 = <jit.Arrays.ArrayTests.ArrayTests: int the_int_res>"->"if i7 != $i6 goto return 0";
    "if i7 != $i6 goto return 0"->"return 1";
    "if i7 != $i6 goto return 0"->"return 0";
}
