digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r15 := @this: jdk.test.lib.apps.LingeredApp;
r2 := @parameter0: java.util.List;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.String) $r4;
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' \");
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$r10 = <java.lang.System: java.io.PrintStream err>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Command line: [\");
$r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r15 := @this: jdk.test.lib.apps.LingeredApp;
r2 := @parameter0: java.util.List;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.String) $r4;
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' \");
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$r10 = <java.lang.System: java.io.PrintStream err>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Command line: [\");
$r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.String) $r4;
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\'\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' \");
";
}
