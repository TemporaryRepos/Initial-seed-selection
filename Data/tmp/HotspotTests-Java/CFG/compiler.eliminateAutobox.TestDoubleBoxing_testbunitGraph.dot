digraph "unitGraph" {
    "d0 := @parameter0: double"
    "i0 := @parameter1: int"
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)"
    "$i1 = i0 & 1"
    "if $i1 != 0 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"
    "$d2 = d0 + 1.0"
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)"
    "$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"
    "return $d1"
    "d0 := @parameter0: double"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)";
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)"->"$i1 = i0 & 1";
    "$i1 = i0 & 1"->"if $i1 != 0 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "if $i1 != 0 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"$d2 = d0 + 1.0";
    "if $i1 != 0 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "$d2 = d0 + 1.0"->"r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)";
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)"->"$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"return $d1";
}
