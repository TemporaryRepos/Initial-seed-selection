digraph "unitGraph" {
    "r0 := @this: compiler.c2.stemmer.Stemmer"
    "i0 := @parameter0: int"
    "if i0 >= 1 goto $r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "return 0"
    "$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$c3 = $r1[i0]"
    "$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$i1 = i0 - 1"
    "$c2 = $r2[$i1]"
    "if $c3 == $c2 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)"
    "$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)"
    "return $z0"
    "r0 := @this: compiler.c2.stemmer.Stemmer"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"if i0 >= 1 goto $r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "if i0 >= 1 goto $r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"return 0";
    "if i0 >= 1 goto $r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$c3 = $r1[i0]";
    "$c3 = $r1[i0]"->"$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$i1 = i0 - 1";
    "$i1 = i0 - 1"->"$c2 = $r2[$i1]";
    "$c2 = $r2[$i1]"->"if $c3 == $c2 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)";
    "if $c3 == $c2 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)"->"return 0";
    "if $c3 == $c2 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)"->"$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)";
    "$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i0)"->"return $z0";
}
