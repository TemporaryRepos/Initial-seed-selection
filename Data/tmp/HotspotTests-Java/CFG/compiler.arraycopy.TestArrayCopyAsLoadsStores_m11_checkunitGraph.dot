digraph "unitGraph" {
    "r1 := @parameter0: int[]"
    "r0 := @parameter1: int[]"
    "z0 = 0"
    "i6 = 0"
    "goto [?= (branch)]"
    "$i0 = i6 + 1"
    "i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4)"
    "$i3 = r0[i6]"
    "$i2 = r1[i1]"
    "if $i3 == $i2 goto i6 = i6 + 1"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m11 failed for \")"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$i4 = r1[i1]"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$i5 = r0[i6]"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13)"
    "z0 = 1"
    "i6 = i6 + 1"
    "if i6 < 5 goto $i0 = i6 + 1"
    "return z0"
    "r1 := @parameter0: int[]"->"r0 := @parameter1: int[]";
    "r0 := @parameter1: int[]"->"z0 = 0";
    "z0 = 0"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 5 goto $i0 = i6 + 1";
    "$i0 = i6 + 1"->"i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4)";
    "i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 4)"->"$i3 = r0[i6]";
    "$i3 = r0[i6]"->"$i2 = r1[i1]";
    "$i2 = r1[i1]"->"if $i3 == $i2 goto i6 = i6 + 1";
    "if $i3 == $i2 goto i6 = i6 + 1"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $i3 == $i2 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m11 failed for \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m11 failed for \")"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$i4 = r1[i1]";
    "$i4 = r1[i1]"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$i5 = r0[i6]";
    "$i5 = r0[i6]"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r13)"->"z0 = 1";
    "z0 = 1"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 5 goto $i0 = i6 + 1";
    "if i6 < 5 goto $i0 = i6 + 1"->"return z0";
    "if i6 < 5 goto $i0 = i6 + 1"->"$i0 = i6 + 1";
}
