digraph "unitGraph" {
    "r1 := @this: compiler.escapeAnalysis.Test6726999"
    "i0 := @parameter0: int"
    "r2 = null"
    "i1 = i0 & 3"
    "i10 = 0"
    "goto [?= (branch)]"
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"
    "r2 = $r0"
    "i10 = i10 + 1"
    "if i10 < i1 goto $r0 = new compiler.escapeAnalysis.Test6726999$Point"
    "b11 = 3"
    "if r2 != null goto r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11"
    "$i7 = 3 * b11"
    "$i8 = $i7 + i0"
    "$i9 = $i8 * b11"
    "return $i9"
    "r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11"
    "$i2 = 3 * b11"
    "$i3 = $i2 + i0"
    "r2.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3"
    "virtualinvoke r1.<compiler.escapeAnalysis.Test6726999: void dummy()>()"
    "$i5 = r2.<compiler.escapeAnalysis.Test6726999$Point: int x>"
    "$i4 = r2.<compiler.escapeAnalysis.Test6726999$Point: int y>"
    "$i6 = $i5 * $i4"
    "return $i6"
    "r1 := @this: compiler.escapeAnalysis.Test6726999"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"r2 = null";
    "r2 = null"->"i1 = i0 & 3";
    "i1 = i0 & 3"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < i1 goto $r0 = new compiler.escapeAnalysis.Test6726999$Point";
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"->"specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"->"r2 = $r0";
    "r2 = $r0"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < i1 goto $r0 = new compiler.escapeAnalysis.Test6726999$Point";
    "if i10 < i1 goto $r0 = new compiler.escapeAnalysis.Test6726999$Point"->"b11 = 3";
    "if i10 < i1 goto $r0 = new compiler.escapeAnalysis.Test6726999$Point"->"$r0 = new compiler.escapeAnalysis.Test6726999$Point";
    "b11 = 3"->"if r2 != null goto r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11";
    "if r2 != null goto r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11"->"$i7 = 3 * b11";
    "if r2 != null goto r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11"->"r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11";
    "$i7 = 3 * b11"->"$i8 = $i7 + i0";
    "$i8 = $i7 + i0"->"$i9 = $i8 * b11";
    "$i9 = $i8 * b11"->"return $i9";
    "r2.<compiler.escapeAnalysis.Test6726999$Point: int x> = b11"->"$i2 = 3 * b11";
    "$i2 = 3 * b11"->"$i3 = $i2 + i0";
    "$i3 = $i2 + i0"->"r2.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3";
    "r2.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3"->"virtualinvoke r1.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r1.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"$i5 = r2.<compiler.escapeAnalysis.Test6726999$Point: int x>";
    "$i5 = r2.<compiler.escapeAnalysis.Test6726999$Point: int x>"->"$i4 = r2.<compiler.escapeAnalysis.Test6726999$Point: int y>";
    "$i4 = r2.<compiler.escapeAnalysis.Test6726999$Point: int y>"->"$i6 = $i5 * $i4";
    "$i6 = $i5 * $i4"->"return $i6";
}
