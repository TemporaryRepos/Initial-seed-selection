digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.lang.String[];
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z0 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z0 = 0;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0);
$i2 = i5 % 2;
if $i2 != 0 goto $z1 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1);
i5 = i5 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i5 < 20000 goto $i0 = i5 % 2;
"
    "Block 9:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.lang.String[];
i5 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i5 < 20000 goto $i0 = i5 % 2;
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z0 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0)];
";
    "Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$z0 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z0 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0)];
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0);
$i2 = i5 % 2;
if $i2 != 0 goto $z1 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z0 = 0;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0);
$i2 = i5 % 2;
if $i2 != 0 goto $z1 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0);
$i2 = i5 % 2;
if $i2 != 0 goto $z1 = 0;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1)];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test_helper(int,boolean)>(10, $z0);
$i2 = i5 % 2;
if $i2 != 0 goto $z1 = 0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z1 = 1;
goto [?= staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1);
i5 = i5 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z1 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1);
i5 = i5 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
staticinvoke <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: int test(boolean)>($z1);
i5 = i5 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i5 < 20000 goto $i0 = i5 % 2;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i5 < 20000 goto $i0 = i5 % 2;
"->"Block 9:
[preds: 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i5 < 20000 goto $i0 = i5 % 2;
"->"Block 1:
[preds: 8 ] [succs: 2 3 ]
$i0 = i5 % 2;
if $i0 != 0 goto $z0 = 0;
";
}
