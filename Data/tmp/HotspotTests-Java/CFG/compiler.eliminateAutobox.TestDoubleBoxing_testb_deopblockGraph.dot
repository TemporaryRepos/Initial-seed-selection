digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
i0 := @parameter1: int;
$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
$i1 = i0 & 1;
if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$d3 = d0 + 1.0;
$d4 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d3);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
$d2 = virtualinvoke r0.<java.lang.Double: double doubleValue()>();
return $d2;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
i0 := @parameter1: int;
$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
$i1 = i0 & 1;
if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$d3 = d0 + 1.0;
$d4 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d3);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
i0 := @parameter1: int;
$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
$i1 = i0 & 1;
if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
"->"Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
$d2 = virtualinvoke r0.<java.lang.Double: double doubleValue()>();
return $d2;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$d3 = d0 + 1.0;
$d4 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d3);
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
"->"Block 2:
[preds: 0 1 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
$d2 = virtualinvoke r0.<java.lang.Double: double doubleValue()>();
return $d2;
";
}
