digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.lang.String[];
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i1 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
i1 = i1 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i1 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
i2 = i2 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i3 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
i3 = i3 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i3 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
i4 = i4 + 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i4 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 16:
[preds: 17 ] [succs: 17 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
i5 = i5 + 1;
"
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i5 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
i6 = 0;
goto [?= (branch)];
"
    "Block 19:
[preds: 20 ] [succs: 20 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
i6 = i6 + 1;
"
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i6 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
"
    "Block 21:
[preds: 20 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.lang.String[];
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i1 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$0()>();
i0 = i0 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i1 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i1 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
i1 = i1 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i1 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i1 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i1 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$1()>();
i1 = i1 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
i2 = i2 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i3 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
"->"Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$2()>();
i2 = i2 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i3 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i3 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
i3 = i3 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i3 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i3 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
"->"Block 12:
[preds: 11 ] [succs: 14 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i3 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
"->"Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$3()>();
i3 = i3 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
i4 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i4 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
";
    "Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
i4 = i4 + 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i4 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i4 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
"->"Block 15:
[preds: 14 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i4 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
"->"Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$4()>();
i4 = i4 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
"->"Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i5 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
";
    "Block 16:
[preds: 17 ] [succs: 17 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
i5 = i5 + 1;
"->"Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i5 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
";
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i5 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
"->"Block 18:
[preds: 17 ] [succs: 20 ]
i6 = 0;
goto [?= (branch)];
";
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i5 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
"->"Block 16:
[preds: 17 ] [succs: 17 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$5()>();
i5 = i5 + 1;
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
i6 = 0;
goto [?= (branch)];
"->"Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i6 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
";
    "Block 19:
[preds: 20 ] [succs: 20 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
i6 = i6 + 1;
"->"Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i6 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
";
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i6 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
"->"Block 21:
[preds: 20 ] [succs: ]
return;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i6 < 20000 goto staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
"->"Block 19:
[preds: 20 ] [succs: 20 ]
staticinvoke <compiler.jsr292.MHInlineTest: void access$6()>();
i6 = i6 + 1;
";
}
