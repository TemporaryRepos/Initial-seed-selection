digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
$r4 = (selectionresolution.ClassData) $r3;
r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);
r9 = (selectionresolution.ClassData) $r8;
$r10 = new selectionresolution.ClassData;
$r11 = r9.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>;
specialinvoke $r10.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, $r11);
r12 = $r10;
$r13 = new selectionresolution.MethodData;
$r15 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PRIVATE>;
$r14 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
specialinvoke $r13.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r15, $r14);
r16 = $r13;
$r17 = new selectionresolution.ClassData;
specialinvoke $r17.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r16);
r18 = $r17;
i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
$r19 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5);
i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r19);
i4 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
i5 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r12);
i6 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r18);
$r20 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5);
i7 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r20);
$r21 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r21.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i2);
$r22 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r22.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i7, i3);
$r23 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r23.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i7, i6);
$r24 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r24.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i5);
$r25 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r25.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i6, i5);
$r26 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r26.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i5, i4);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i7;
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i5;
return;
"
}
