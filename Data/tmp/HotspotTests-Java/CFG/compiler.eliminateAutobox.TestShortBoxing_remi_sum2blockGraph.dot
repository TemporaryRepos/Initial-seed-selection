digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Short;
specialinvoke $r0.<java.lang.Short: void <init>(short)>(1);
r4 = $r0;
$r1 = new java.lang.Short;
specialinvoke $r1.<java.lang.Short: void <init>(short)>(1);
r5 = $r1;
i10 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Short;
$s0 = virtualinvoke r4.<java.lang.Short: short shortValue()>();
$i1 = $s0 + 1;
$s2 = (short) $i1;
specialinvoke $r2.<java.lang.Short: void <init>(short)>($s2);
r4 = $r2;
$r3 = new java.lang.Short;
$s3 = virtualinvoke r5.<java.lang.Short: short shortValue()>();
$i4 = $s3 + 2;
$s5 = (short) $i4;
specialinvoke $r3.<java.lang.Short: void <init>(short)>($s5);
r5 = $r3;
i10 = i10 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i10 < 1000 goto $r2 = new java.lang.Short;
"
    "Block 3:
[preds: 2 ] [succs: ]
$s6 = virtualinvoke r4.<java.lang.Short: short shortValue()>();
$s7 = virtualinvoke r5.<java.lang.Short: short shortValue()>();
$i8 = $s6 + $s7;
$s9 = (short) $i8;
return $s9;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Short;
specialinvoke $r0.<java.lang.Short: void <init>(short)>(1);
r4 = $r0;
$r1 = new java.lang.Short;
specialinvoke $r1.<java.lang.Short: void <init>(short)>(1);
r5 = $r1;
i10 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i10 < 1000 goto $r2 = new java.lang.Short;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Short;
$s0 = virtualinvoke r4.<java.lang.Short: short shortValue()>();
$i1 = $s0 + 1;
$s2 = (short) $i1;
specialinvoke $r2.<java.lang.Short: void <init>(short)>($s2);
r4 = $r2;
$r3 = new java.lang.Short;
$s3 = virtualinvoke r5.<java.lang.Short: short shortValue()>();
$i4 = $s3 + 2;
$s5 = (short) $i4;
specialinvoke $r3.<java.lang.Short: void <init>(short)>($s5);
r5 = $r3;
i10 = i10 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i10 < 1000 goto $r2 = new java.lang.Short;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i10 < 1000 goto $r2 = new java.lang.Short;
"->"Block 3:
[preds: 2 ] [succs: ]
$s6 = virtualinvoke r4.<java.lang.Short: short shortValue()>();
$s7 = virtualinvoke r5.<java.lang.Short: short shortValue()>();
$i8 = $s6 + $s7;
$s9 = (short) $i8;
return $s9;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i10 < 1000 goto $r2 = new java.lang.Short;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = new java.lang.Short;
$s0 = virtualinvoke r4.<java.lang.Short: short shortValue()>();
$i1 = $s0 + 1;
$s2 = (short) $i1;
specialinvoke $r2.<java.lang.Short: void <init>(short)>($s2);
r4 = $r2;
$r3 = new java.lang.Short;
$s3 = virtualinvoke r5.<java.lang.Short: short shortValue()>();
$i4 = $s3 + 2;
$s5 = (short) $i4;
specialinvoke $r3.<java.lang.Short: void <init>(short)>($s5);
r5 = $r3;
i10 = i10 + 1;
";
}
