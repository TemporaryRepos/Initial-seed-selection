digraph "unitGraph" {
    "r17 := @parameter0: java.lang.String[]"
    "r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]"
    "i2 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$r1 = new compiler.arraycopy.TestArrayCopyMacro$A"
    "specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>()"
    "r0[i2] = $r1"
    "i2 = i2 + 1"
    "$i0 = lengthof r0"
    "if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A"
    "i3 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)"
    "i3 = i3 + 1"
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)"
    "i4 = 0"
    "$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)"
    "r4 = (java.lang.Object[]) $r3"
    "i5 = 0"
    "goto [?= $i1 = lengthof r0]"
    "$r6 = r4[i5]"
    "$r5 = r0[i5]"
    "if $r6 == $r5 goto i5 = i5 + 1"
    "$r7 = new java.lang.RuntimeException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"copy failed at index \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src = \")"
    "$r11 = r0[i5]"
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" dest = \")"
    "$r14 = r4[i5]"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)"
    "throw $r7"
    "i5 = i5 + 1"
    "$i1 = lengthof r0"
    "if i5 < $i1 goto $r6 = r4[i5]"
    "i4 = i4 + 1"
    "if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)"
    "return"
    "r17 := @parameter0: java.lang.String[]"->"r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]";
    "r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]"->"i2 = 0";
    "i2 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$r1 = new compiler.arraycopy.TestArrayCopyMacro$A"->"specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>()";
    "specialinvoke $r1.<compiler.arraycopy.TestArrayCopyMacro$A: void <init>()>()"->"r0[i2] = $r1";
    "r0[i2] = $r1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A";
    "if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A"->"i3 = 0";
    "if i2 < $i0 goto $r1 = new compiler.arraycopy.TestArrayCopyMacro$A"->"$r1 = new compiler.arraycopy.TestArrayCopyMacro$A";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)";
    "staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)";
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)"->"i4 = 0";
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)"->"staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>(null, null, 0)";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)";
    "$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)"->"r4 = (java.lang.Object[]) $r3";
    "r4 = (java.lang.Object[]) $r3"->"i5 = 0";
    "i5 = 0"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$r6 = r4[i5]"->"$r5 = r0[i5]";
    "$r5 = r0[i5]"->"if $r6 == $r5 goto i5 = i5 + 1";
    "if $r6 == $r5 goto i5 = i5 + 1"->"$r7 = new java.lang.RuntimeException";
    "if $r6 == $r5 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r7 = new java.lang.RuntimeException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"copy failed at index \")";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"copy failed at index \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src = \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src = \")"->"$r11 = r0[i5]";
    "$r11 = r0[i5]"->"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)";
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" dest = \")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" dest = \")"->"$r14 = r4[i5]";
    "$r14 = r4[i5]"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16)"->"throw $r7";
    "i5 = i5 + 1"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if i5 < $i1 goto $r6 = r4[i5]";
    "if i5 < $i1 goto $r6 = r4[i5]"->"i4 = i4 + 1";
    "if i5 < $i1 goto $r6 = r4[i5]"->"$r6 = r4[i5]";
    "i4 = i4 + 1"->"if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)";
    "if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)"->"return";
    "if i4 < 20000 goto $r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)"->"$r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m1(compiler.arraycopy.TestArrayCopyMacro$A[],java.lang.Object)>(r0, null)";
}
