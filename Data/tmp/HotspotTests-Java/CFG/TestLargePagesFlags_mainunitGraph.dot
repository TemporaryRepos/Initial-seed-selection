digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "$z0 = staticinvoke <jdk.test.lib.Platform: boolean isLinux()>()"
    "if $z0 != 0 goto staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping. TestLargePagesFlags has only been implemented for Linux.\")"
    "return"
    "staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()"
    "staticinvoke <TestLargePagesFlags: void testUseHugeTLBFS()>()"
    "staticinvoke <TestLargePagesFlags: void testUseSHM()>()"
    "staticinvoke <TestLargePagesFlags: void testCombinations()>()"
    "r1 := @parameter0: java.lang.String[]"->"$z0 = staticinvoke <jdk.test.lib.Platform: boolean isLinux()>()";
    "$z0 = staticinvoke <jdk.test.lib.Platform: boolean isLinux()>()"->"if $z0 != 0 goto staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()";
    "if $z0 != 0 goto staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()"->"staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping. TestLargePagesFlags has only been implemented for Linux.\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping. TestLargePagesFlags has only been implemented for Linux.\")"->"return";
    "staticinvoke <TestLargePagesFlags: void testUseTransparentHugePages()>()"->"staticinvoke <TestLargePagesFlags: void testUseHugeTLBFS()>()";
    "staticinvoke <TestLargePagesFlags: void testUseHugeTLBFS()>()"->"staticinvoke <TestLargePagesFlags: void testUseSHM()>()";
    "staticinvoke <TestLargePagesFlags: void testUseSHM()>()"->"staticinvoke <TestLargePagesFlags: void testCombinations()>()";
    "staticinvoke <TestLargePagesFlags: void testCombinations()>()"->"return";
}
