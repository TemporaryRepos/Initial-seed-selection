digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r10 := @this: compiler.c2.Test6992759;
i1 := @parameter0: int;
i0 := @parameter1: int;
i2 := @parameter2: int;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 3 ] [succs: 2 ]
i3 = i3 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if i3 > i0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 1 ]
if i3 < i1 goto i3 = i3 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
if i3 == i1 goto return;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r0 = new java.lang.RuntimeException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed test iteration=\");
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" max=\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" counted=\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" expected=\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r0;
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r10 := @this: compiler.c2.Test6992759;
i1 := @parameter0: int;
i0 := @parameter1: int;
i2 := @parameter2: int;
i3 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if i3 > i0 goto (branch);
";
    "Block 1:
[preds: 3 ] [succs: 2 ]
i3 = i3 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if i3 > i0 goto (branch);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if i3 > i0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 1 ]
if i3 < i1 goto i3 = i3 + 1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if i3 > i0 goto (branch);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
if i3 == i1 goto return;
";
    "Block 3:
[preds: 2 ] [succs: 4 1 ]
if i3 < i1 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
if i3 == i1 goto return;
";
    "Block 3:
[preds: 2 ] [succs: 4 1 ]
if i3 < i1 goto i3 = i3 + 1;
"->"Block 1:
[preds: 3 ] [succs: 2 ]
i3 = i3 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
if i3 == i1 goto return;
"->"Block 5:
[preds: 4 ] [succs: ]
$r0 = new java.lang.RuntimeException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed test iteration=\");
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" max=\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" counted=\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" expected=\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
if i3 == i1 goto return;
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
}
