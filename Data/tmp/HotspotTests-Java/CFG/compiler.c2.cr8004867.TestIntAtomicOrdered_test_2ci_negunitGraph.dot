digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"
    "r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray"
    "i0 = 96"
    "goto [?= (branch)]"
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)"
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -103)"
    "i0 = i0 + -1"
    "if i0 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)"
    "return"
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"->"r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray";
    "r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray"->"i0 = 96";
    "i0 = 96"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)";
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)"->"virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -103)";
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -103)"->"i0 = i0 + -1";
    "i0 = i0 + -1"->"if i0 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)";
    "if i0 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)"->"return";
    "if i0 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)"->"virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>(i0, -123)";
}
