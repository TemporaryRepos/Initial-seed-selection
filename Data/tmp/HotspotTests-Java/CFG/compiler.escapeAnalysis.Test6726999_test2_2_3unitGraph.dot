digraph "unitGraph" {
    "r2 := @this: compiler.escapeAnalysis.Test6726999"
    "i0 := @parameter0: int"
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"
    "r3 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]"
    "i1 = i0 & 1"
    "r3[i1] = null"
    "i2 = i0 & 3"
    "i11 = 0"
    "goto [?= (branch)]"
    "r3[i11] = r1"
    "i11 = i11 + 1"
    "if i11 < i2 goto virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"
    "b12 = 3"
    "$r4 = r3[i1]"
    "if $r4 != null goto $r5 = r3[i1]"
    "$i8 = 3 * b12"
    "$i9 = $i8 + i0"
    "$i10 = $i9 * b12"
    "return $i10"
    "$r5 = r3[i1]"
    "$r5.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12"
    "$r6 = r3[i1]"
    "$i3 = 3 * b12"
    "$i4 = $i3 + i0"
    "$r6.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4"
    "$r7 = r3[i1]"
    "$i6 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int x>"
    "$r8 = r3[0]"
    "$i5 = $r8.<compiler.escapeAnalysis.Test6726999$Point: int y>"
    "$i7 = $i6 * $i5"
    "return $i7"
    "r2 := @this: compiler.escapeAnalysis.Test6726999"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"$r0 = new compiler.escapeAnalysis.Test6726999$Point";
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"->"specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"r3 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]";
    "r3 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"i1 = i0 & 1";
    "i1 = i0 & 1"->"r3[i1] = null";
    "r3[i1] = null"->"i2 = i0 & 3";
    "i2 = i0 & 3"->"i11 = 0";
    "i11 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 < i2 goto virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"r3[i11] = r1";
    "r3[i11] = r1"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"if i11 < i2 goto virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "if i11 < i2 goto virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"b12 = 3";
    "if i11 < i2 goto virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "b12 = 3"->"$r4 = r3[i1]";
    "$r4 = r3[i1]"->"if $r4 != null goto $r5 = r3[i1]";
    "if $r4 != null goto $r5 = r3[i1]"->"$i8 = 3 * b12";
    "if $r4 != null goto $r5 = r3[i1]"->"$r5 = r3[i1]";
    "$i8 = 3 * b12"->"$i9 = $i8 + i0";
    "$i9 = $i8 + i0"->"$i10 = $i9 * b12";
    "$i10 = $i9 * b12"->"return $i10";
    "$r5 = r3[i1]"->"$r5.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12";
    "$r5.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12"->"$r6 = r3[i1]";
    "$r6 = r3[i1]"->"$i3 = 3 * b12";
    "$i3 = 3 * b12"->"$i4 = $i3 + i0";
    "$i4 = $i3 + i0"->"$r6.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4";
    "$r6.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"$r7 = r3[i1]";
    "$r7 = r3[i1]"->"$i6 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int x>";
    "$i6 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int x>"->"$r8 = r3[0]";
    "$r8 = r3[0]"->"$i5 = $r8.<compiler.escapeAnalysis.Test6726999$Point: int y>";
    "$i5 = $r8.<compiler.escapeAnalysis.Test6726999$Point: int y>"->"$i7 = $i6 * $i5";
    "$i7 = $i6 * $i5"->"return $i7";
}
