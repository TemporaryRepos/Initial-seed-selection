digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestFloatBoxing: java.lang.Float ibc>"
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F)"
    "i1 = 0"
    "goto [?= (branch)]"
    "$i0 = i1 & 1"
    "if $i0 != 0 goto $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"
    "$f2 = virtualinvoke r1.<java.lang.Float: float floatValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestFloatBoxing: java.lang.Float ibc>"
    "$f3 = virtualinvoke $r0.<java.lang.Float: float floatValue()>()"
    "$f4 = $f2 + $f3"
    "r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4)"
    "goto [?= i1 = i1 + 1]"
    "$f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"
    "$f1 = $f0 + 2.0F"
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1)"
    "i1 = i1 + 1"
    "if i1 < 1000 goto $i0 = i1 & 1"
    "$f5 = virtualinvoke r1.<java.lang.Float: float floatValue()>()"
    "$f6 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"
    "$f7 = $f5 + $f6"
    "return $f7"
    "r1 = <compiler.eliminateAutobox.TestFloatBoxing: java.lang.Float ibc>"->"r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F)";
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F)"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 1000 goto $i0 = i1 & 1";
    "$i0 = i1 & 1"->"if $i0 != 0 goto $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()";
    "if $i0 != 0 goto $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"->"$f2 = virtualinvoke r1.<java.lang.Float: float floatValue()>()";
    "if $i0 != 0 goto $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"->"$f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()";
    "$f2 = virtualinvoke r1.<java.lang.Float: float floatValue()>()"->"$r0 = <compiler.eliminateAutobox.TestFloatBoxing: java.lang.Float ibc>";
    "$r0 = <compiler.eliminateAutobox.TestFloatBoxing: java.lang.Float ibc>"->"$f3 = virtualinvoke $r0.<java.lang.Float: float floatValue()>()";
    "$f3 = virtualinvoke $r0.<java.lang.Float: float floatValue()>()"->"$f4 = $f2 + $f3";
    "$f4 = $f2 + $f3"->"r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4)";
    "r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4)"->"goto [?= i1 = i1 + 1]";
    "goto [?= i1 = i1 + 1]"->"i1 = i1 + 1";
    "$f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"->"$f1 = $f0 + 2.0F";
    "$f1 = $f0 + 2.0F"->"r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1)";
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 1000 goto $i0 = i1 & 1";
    "if i1 < 1000 goto $i0 = i1 & 1"->"$f5 = virtualinvoke r1.<java.lang.Float: float floatValue()>()";
    "if i1 < 1000 goto $i0 = i1 & 1"->"$i0 = i1 & 1";
    "$f5 = virtualinvoke r1.<java.lang.Float: float floatValue()>()"->"$f6 = virtualinvoke r2.<java.lang.Float: float floatValue()>()";
    "$f6 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"->"$f7 = $f5 + $f6";
    "$f7 = $f5 + $f6"->"return $f7";
}
