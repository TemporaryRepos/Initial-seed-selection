digraph "unitGraph" {
    "r0 := @this: vm.compiler.jbe.hoist.hoist03.hoist03"
    "i2 = 0"
    "i3 = 0"
    "goto [?= (branch)]"
    "i4 = 0"
    "if i4 >= 0 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"
    "$r2 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"
    "$i1 = i2"
    "i2 = i2 + 1"
    "$r2[$i1] = -1"
    "goto [?= i4 = i4 + 1]"
    "$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"
    "$i0 = i2"
    "$r1[$i0] = 1"
    "i4 = i4 + 1"
    "if i4 < 300 goto (branch)"
    "i3 = i3 + 1"
    "if i3 < 200 goto i4 = 0"
    "return"
    "r0 := @this: vm.compiler.jbe.hoist.hoist03.hoist03"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 200 goto i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 300 goto (branch)";
    "if i4 >= 0 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"->"$r2 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>";
    "if i4 >= 0 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"->"$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>";
    "$r2 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"->"$i1 = i2";
    "$i1 = i2"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$r2[$i1] = -1";
    "$r2[$i1] = -1"->"goto [?= i4 = i4 + 1]";
    "goto [?= i4 = i4 + 1]"->"i4 = i4 + 1";
    "$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>"->"$i0 = i2";
    "$i0 = i2"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$r1[$i0] = 1";
    "$r1[$i0] = 1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 300 goto (branch)";
    "if i4 < 300 goto (branch)"->"i3 = i3 + 1";
    "if i4 < 300 goto (branch)"->"if i4 >= 0 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] a>";
    "i3 = i3 + 1"->"if i3 < 200 goto i4 = 0";
    "if i3 < 200 goto i4 = 0"->"return";
    "if i3 < 200 goto i4 = 0"->"i4 = 0";
}
