digraph "unitGraph" {
    "r0 := @parameter0: java.lang.Long"
    "i4 = 0"
    "goto [?= (branch)]"
    "$l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()"
    "$l1 = $l0 + 1L"
    "$l2 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l1)"
    "r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"
    "i4 = i4 + 1"
    "if i4 < 1000 goto $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()"
    "staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"
    "$l3 = virtualinvoke r0.<java.lang.Long: long longValue()>()"
    "return $l3"
    "r0 := @parameter0: java.lang.Long"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 1000 goto $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()";
    "$l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()"->"$l1 = $l0 + 1L";
    "$l1 = $l0 + 1L"->"$l2 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l1)";
    "$l2 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l1)"->"r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)";
    "r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 1000 goto $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()";
    "if i4 < 1000 goto $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()"->"staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()";
    "if i4 < 1000 goto $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()"->"$l0 = virtualinvoke r0.<java.lang.Long: long longValue()>()";
    "staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"->"$l3 = virtualinvoke r0.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke r0.<java.lang.Long: long longValue()>()"->"return $l3";
}
