digraph "unitGraph" {
    "$r0 = new java.lang.Short"
    "specialinvoke $r0.<java.lang.Short: void <init>(short)>(1)"
    "r2 = $r0"
    "i5 = 0"
    "goto [?= (branch)]"
    "$i0 = i5 & 1"
    "if $i0 != 0 goto i5 = i5 + 1"
    "$r1 = new java.lang.Short"
    "$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"
    "$i2 = $s1 + 1"
    "$s3 = (short) $i2"
    "specialinvoke $r1.<java.lang.Short: void <init>(short)>($s3)"
    "r2 = $r1"
    "i5 = i5 + 1"
    "if i5 < 1000 goto $i0 = i5 & 1"
    "$s4 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"
    "return $s4"
    "$r0 = new java.lang.Short"->"specialinvoke $r0.<java.lang.Short: void <init>(short)>(1)";
    "specialinvoke $r0.<java.lang.Short: void <init>(short)>(1)"->"r2 = $r0";
    "r2 = $r0"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 1000 goto $i0 = i5 & 1";
    "$i0 = i5 & 1"->"if $i0 != 0 goto i5 = i5 + 1";
    "if $i0 != 0 goto i5 = i5 + 1"->"$r1 = new java.lang.Short";
    "if $i0 != 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r1 = new java.lang.Short"->"$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()";
    "$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"$i2 = $s1 + 1";
    "$i2 = $s1 + 1"->"$s3 = (short) $i2";
    "$s3 = (short) $i2"->"specialinvoke $r1.<java.lang.Short: void <init>(short)>($s3)";
    "specialinvoke $r1.<java.lang.Short: void <init>(short)>($s3)"->"r2 = $r1";
    "r2 = $r1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 1000 goto $i0 = i5 & 1";
    "if i5 < 1000 goto $i0 = i5 & 1"->"$s4 = virtualinvoke r2.<java.lang.Short: short shortValue()>()";
    "if i5 < 1000 goto $i0 = i5 & 1"->"$i0 = i5 & 1";
    "$s4 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"return $s4";
}
