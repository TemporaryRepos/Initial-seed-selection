digraph "unitGraph" {
    "i0 := @parameter0: int"
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r0[0] = 0L"
    "$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r1[1] = 1L"
    "$r2 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r2[2] = 2L"
    "$r3 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r3[0] = 0L"
    "$r4 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r4[1] = 1L"
    "$r5 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$r5[2] = 2L"
    "return"
    "i0 := @parameter0: int"->"$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r0[0] = 0L";
    "$r0[0] = 0L"->"$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r1[1] = 1L";
    "$r1[1] = 1L"->"$r2 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r2 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r2[2] = 2L";
    "$r2[2] = 2L"->"$r3 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r3 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r3[0] = 0L";
    "$r3[0] = 0L"->"$r4 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r4 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r4[1] = 1L";
    "$r4[1] = 1L"->"$r5 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r5 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r5[2] = 2L";
    "$r5[2] = 2L"->"return";
}
