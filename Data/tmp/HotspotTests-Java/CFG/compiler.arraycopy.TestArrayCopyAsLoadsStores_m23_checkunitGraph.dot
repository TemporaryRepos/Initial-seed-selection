digraph "unitGraph" {
    "r0 := @parameter0: compiler.arraycopy.TestArrayCopyUtils$A[]"
    "r1 := @parameter1: compiler.arraycopy.TestArrayCopyUtils$A[]"
    "z0 = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "$i0 = i2 + 1"
    "$r3 = r0[$i0]"
    "$r2 = r1[i2]"
    "if $r3 == $r2 goto i2 = i2 + 1"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m23 failed for \")"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")"
    "$i1 = i2 + 1"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$r10 = r1[i2]"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$r15 = r1[i2]"
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "z0 = 1"
    "i2 = i2 + 1"
    "if i2 < 3 goto $i0 = i2 + 1"
    "return z0"
    "r0 := @parameter0: compiler.arraycopy.TestArrayCopyUtils$A[]"->"r1 := @parameter1: compiler.arraycopy.TestArrayCopyUtils$A[]";
    "r1 := @parameter1: compiler.arraycopy.TestArrayCopyUtils$A[]"->"z0 = 0";
    "z0 = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 3 goto $i0 = i2 + 1";
    "$i0 = i2 + 1"->"$r3 = r0[$i0]";
    "$r3 = r0[$i0]"->"$r2 = r1[i2]";
    "$r2 = r1[i2]"->"if $r3 == $r2 goto i2 = i2 + 1";
    "if $r3 == $r2 goto i2 = i2 + 1"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if $r3 == $r2 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m23 failed for \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Test m23 failed for \")"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" src[\")"->"$i1 = i2 + 1";
    "$i1 = i2 + 1"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$r10 = r1[i2]";
    "$r10 = r1[i2]"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dest[\")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$r15 = r1[i2]";
    "$r15 = r1[i2]"->"$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)";
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"z0 = 1";
    "z0 = 1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 3 goto $i0 = i2 + 1";
    "if i2 < 3 goto $i0 = i2 + 1"->"return z0";
    "if i2 < 3 goto $i0 = i2 + 1"->"$i0 = i2 + 1";
}
