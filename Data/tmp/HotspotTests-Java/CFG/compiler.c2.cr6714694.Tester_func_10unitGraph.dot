digraph "unitGraph" {
    "d2 := @parameter0: double"
    "r0 := @parameter1: compiler.c2.cr6714694.Tester_Class_3"
    "d3 := @parameter2: double"
    "r0.<compiler.c2.cr6714694.Tester_Class_3: compiler.c2.cr6714694.Tester_Class_2 var_32> = r0"
    "$r2 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>"
    "$r1 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_18>"
    "<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1"
    "virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r1)"
    "$z1 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"
    "r0.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = 1"
    "$f1 = (float) 1"
    "$c1 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$f0 = (float) $c1"
    "r0.<compiler.c2.cr6714694.Tester_Class_3: float var_2> = $f0"
    "$b2 = $f1 cmpl $f0"
    "if $b2 <= 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= $z2 = $z1 ^ $z3]"
    "$z3 = 0"
    "$z2 = $z1 ^ $z3"
    "<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z2"
    "$d0 = <compiler.c2.cr6714694.Tester: double var_36>"
    "$d1 = $d0 + 2.2030988587437847E38"
    "<compiler.c2.cr6714694.Tester: double var_36> = $d1"
    "return"
    "d2 := @parameter0: double"->"r0 := @parameter1: compiler.c2.cr6714694.Tester_Class_3";
    "r0 := @parameter1: compiler.c2.cr6714694.Tester_Class_3"->"d3 := @parameter2: double";
    "d3 := @parameter2: double"->"r0.<compiler.c2.cr6714694.Tester_Class_3: compiler.c2.cr6714694.Tester_Class_2 var_32> = r0";
    "r0.<compiler.c2.cr6714694.Tester_Class_3: compiler.c2.cr6714694.Tester_Class_2 var_32> = r0"->"r0.<compiler.c2.cr6714694.Tester_Class_3: compiler.c2.cr6714694.Tester_Class_2 var_32> = r0";
    "r0.<compiler.c2.cr6714694.Tester_Class_3: compiler.c2.cr6714694.Tester_Class_2 var_32> = r0"->"$r2 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>";
    "$r2 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>"->"$r1 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_18>";
    "$r1 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_18>"->"<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1";
    "<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1"->"virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r1)";
    "virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r1)"->"$z1 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>";
    "$z1 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"->"r0.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = 1";
    "r0.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = 1"->"r0.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = 1";
    "r0.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = 1"->"$f1 = (float) 1";
    "$f1 = (float) 1"->"$c1 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c1 = <compiler.c2.cr6714694.Tester: char var_40>"->"$f0 = (float) $c1";
    "$f0 = (float) $c1"->"r0.<compiler.c2.cr6714694.Tester_Class_3: float var_2> = $f0";
    "r0.<compiler.c2.cr6714694.Tester_Class_3: float var_2> = $f0"->"$b2 = $f1 cmpl $f0";
    "$b2 = $f1 cmpl $f0"->"if $b2 <= 0 goto $z3 = 0";
    "if $b2 <= 0 goto $z3 = 0"->"$z3 = 1";
    "if $b2 <= 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= $z2 = $z1 ^ $z3]";
    "goto [?= $z2 = $z1 ^ $z3]"->"$z2 = $z1 ^ $z3";
    "$z3 = 0"->"$z2 = $z1 ^ $z3";
    "$z2 = $z1 ^ $z3"->"<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z2";
    "<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z2"->"$d0 = <compiler.c2.cr6714694.Tester: double var_36>";
    "$d0 = <compiler.c2.cr6714694.Tester: double var_36>"->"$d1 = $d0 + 2.2030988587437847E38";
    "$d1 = $d0 + 2.2030988587437847E38"->"<compiler.c2.cr6714694.Tester: double var_36> = $d1";
    "<compiler.c2.cr6714694.Tester: double var_36> = $d1"->"return";
}
