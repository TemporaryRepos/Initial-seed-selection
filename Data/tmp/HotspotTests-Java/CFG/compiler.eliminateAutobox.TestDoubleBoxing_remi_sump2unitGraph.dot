digraph "unitGraph" {
    "r1 := @parameter0: java.lang.Double"
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)"
    "i0 = 0"
    "goto [?= (branch)]"
    "$r0 = new java.lang.Double"
    "$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"
    "$d1 = $d0 + 1.0"
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)"
    "r1 = $r0"
    "$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"
    "$d3 = $d2 + 2.0"
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"
    "i0 = i0 + 1"
    "if i0 < 1000 goto $r0 = new java.lang.Double"
    "$d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"
    "$d5 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"
    "$d6 = $d4 + $d5"
    "return $d6"
    "r1 := @parameter0: java.lang.Double"->"r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)";
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 1000 goto $r0 = new java.lang.Double";
    "$r0 = new java.lang.Double"->"$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"$d1 = $d0 + 1.0";
    "$d1 = $d0 + 1.0"->"specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)";
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)"->"r1 = $r0";
    "r1 = $r0"->"$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()";
    "$d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"->"$d3 = $d2 + 2.0";
    "$d3 = $d2 + 2.0"->"r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)";
    "r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 1000 goto $r0 = new java.lang.Double";
    "if i0 < 1000 goto $r0 = new java.lang.Double"->"$d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "if i0 < 1000 goto $r0 = new java.lang.Double"->"$r0 = new java.lang.Double";
    "$d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"$d5 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()";
    "$d5 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"->"$d6 = $d4 + $d5";
    "$d6 = $d4 + $d5"->"return $d6";
}
