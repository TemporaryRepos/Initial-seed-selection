digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "i2 = 0"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)"
    "i2 = i2 + $i0"
    "i3 = i3 + 1"
    "if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)"
    "i4 = 0"
    "$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)"
    "i2 = i2 + $i1"
    "i4 = i4 + 1"
    "if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"PASSED. sum = \")"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)";
    "$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)"->"i2 = i2 + $i0";
    "i2 = i2 + $i0"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)";
    "if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)"->"i4 = 0";
    "if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)"->"$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3)";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)";
    "$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)"->"i2 = i2 + $i1";
    "i2 = i2 + $i1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)";
    "if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)"->"$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4)";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"PASSED. sum = \")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"PASSED. sum = \")"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)"->"return";
}
