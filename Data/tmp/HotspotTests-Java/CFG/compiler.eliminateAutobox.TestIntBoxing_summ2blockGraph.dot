digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: int[];
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r6 = $r0;
r2 = r1;
i0 = lengthof r1;
i13 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r2[i13];
r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
$r4 = new java.lang.Integer;
$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i7 = $i6 + 1;
specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i7);
$i8 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
$i9 = $i5 + $i8;
r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r2[i13];
"
    "Block 3:
[preds: 2 ] [succs: ]
$i10 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i11 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
$i12 = $i10 + $i11;
return $i12;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: int[];
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r6 = $r0;
r2 = r1;
i0 = lengthof r1;
i13 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r2[i13];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r2[i13];
r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
$r4 = new java.lang.Integer;
$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i7 = $i6 + 1;
specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i7);
$i8 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
$i9 = $i5 + $i8;
r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r2[i13];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r2[i13];
"->"Block 3:
[preds: 2 ] [succs: ]
$i10 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i11 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
$i12 = $i10 + $i11;
return $i12;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r2[i13];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r2[i13];
r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
$r4 = new java.lang.Integer;
$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$i7 = $i6 + 1;
specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i7);
$i8 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
$i9 = $i5 + $i8;
r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
";
}
