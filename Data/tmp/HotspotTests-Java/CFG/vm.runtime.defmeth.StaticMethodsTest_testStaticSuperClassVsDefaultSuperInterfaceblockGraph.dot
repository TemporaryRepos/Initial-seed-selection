digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r8 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r7;
r9 = virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r10 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"A\");
$r11 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder concreteMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r12 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(2);
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r16 = (vm.runtime.defmeth.shared.builder.ConcreteClassBuilder) $r15;
r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r18 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder extend(vm.runtime.defmeth.shared.data.ConcreteClass)>(r17);
$r20 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r20[0] = r9;
$r21 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r20);
r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r23 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IncompatibleClassChangeError;\");
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r27 = virtualinvoke $r26.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(2);
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r31 = virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r32.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
"
    "Block 3:
[preds: 1 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r8 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r7;
r9 = virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r10 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"A\");
$r11 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder concreteMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r12 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(2);
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r16 = (vm.runtime.defmeth.shared.builder.ConcreteClassBuilder) $r15;
r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r18 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder extend(vm.runtime.defmeth.shared.data.ConcreteClass)>(r17);
$r20 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r20[0] = r9;
$r21 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r20);
r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r23 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IncompatibleClassChangeError;\");
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r8 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r7;
r9 = virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r10 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"A\");
$r11 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder concreteMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r12 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(2);
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r16 = (vm.runtime.defmeth.shared.builder.ConcreteClassBuilder) $r15;
r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r18 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder extend(vm.runtime.defmeth.shared.data.ConcreteClass)>(r17);
$r20 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r20[0] = r9;
$r21 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r20);
r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r23 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r27 = virtualinvoke $r26.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(2);
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r31 = virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r32.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IncompatibleClassChangeError;\");
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= return];
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r22, r22, \"m\", \"()I\");
$r27 = virtualinvoke $r26.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(2);
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r9, r22, \"m\", \"()I\");
$r31 = virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r32.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
}
