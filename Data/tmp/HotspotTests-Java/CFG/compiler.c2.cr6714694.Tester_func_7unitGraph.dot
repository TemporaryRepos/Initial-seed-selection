digraph "unitGraph" {
    "r10 := @this: compiler.c2.cr6714694.Tester"
    "i54 := @parameter0: int"
    "$z0 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>"
    "$z1 = $z0 & 0"
    "<compiler.c2.cr6714694.Tester_Class_2: boolean var_4> = $z1"
    "f4 = 2.2030989E38F"
    "$c0 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i1 = $c0 - 1"
    "$c2 = (char) $i1"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c2"
    "$i3 = <compiler.c2.cr6714694.Tester_Class_1: int var_1>"
    "$i4 = $i3 + 1"
    "<compiler.c2.cr6714694.Tester_Class_1: int var_1> = $i4"
    "i55 = $i3"
    "$r1 = \"nncjfoit\""
    "$r0 = newarray (int)[92]"
    "$d0 = <compiler.c2.cr6714694.Tester: double var_36>"
    "$i5 = (int) $d0"
    "$b6 = (byte) $i5"
    "$i7 = $r0[$b6]"
    "virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i7)"
    "$c9 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i10 = $c9 - 1"
    "$c11 = (char) $i10"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c11"
    "$i12 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>"
    "$i13 = $i12 - 1"
    "<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i13"
    "i56 = i55 + -1"
    "$z2 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"
    "if $z2 == 0 goto $f0 = f4 - 120.0F"
    "$b57 = 77"
    "goto [?= b15 = $b57]"
    "$f0 = f4 - 120.0F"
    "f4 = $f0"
    "$i14 = (int) $f0"
    "$b57 = (byte) $i14"
    "b15 = $b57"
    "$r2 = newarray (compiler.c2.cr6714694.Tester_Interface_0)[b15]"
    "$r3 = $r2[b15]"
    "$r4 = (compiler.c2.cr6714694.Tester_Class_3) $r3"
    "$l16 = $r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24>"
    "$l17 = $l16 + 1L"
    "$r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l17"
    "$f1 = (float) $l16"
    "f5 = f4 * $f1"
    "$d2 = <compiler.c2.cr6714694.Tester: double var_36>"
    "$d1 = (double) b15"
    "$d3 = $d2 / $d1"
    "<compiler.c2.cr6714694.Tester: double var_36> = $d3"
    "$c18 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$l19 = (long) $c18"
    "$l20 = $l19 + 3500240160155094016L"
    "$i21 = (int) $l20"
    "$c22 = (char) $i21"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c22"
    "$r5 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b15][b15]"
    "$r6 = $r5[b15]"
    "$r7 = $r6[b15]"
    "<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15"
    "<compiler.c2.cr6714694.Tester_Class_2: short var_7> = b15"
    "$b23 = (byte) b15"
    "$r7.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = $b23"
    "$i24 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>"
    "$i25 = $i24 + 1"
    "<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i25"
    "i58 = i54 + -1"
    "i59 = i58 + 1"
    "$i26 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>"
    "$i27 = $i26 + 1"
    "<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i27"
    "$c30 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$d4 = <compiler.c2.cr6714694.Tester: double var_36>"
    "$i28 = (int) $d4"
    "$b29 = (byte) $i28"
    "$r8 = newarray (compiler.c2.cr6714694.Tester_Class_3)[$b29]"
    "<compiler.c2.cr6714694.Tester: char var_40> = 120"
    "$b32 = (byte) 120"
    "$r9 = $r8[$b32]"
    "$c33 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i34 = -1 * $c33"
    "$b35 = (byte) $i34"
    "$r9.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = $b35"
    "$b36 = 120 >> $b35"
    "$s37 = (short) $b36"
    "$i38 = $c30 & $s37"
    "$c39 = (char) $i38"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c39"
    "$d6 = <compiler.c2.cr6714694.Tester: double var_36>"
    "f6 = 29.0F"
    "$d5 = (double) 29.0F"
    "$d7 = $d6 % $d5"
    "<compiler.c2.cr6714694.Tester: double var_36> = $d7"
    "<compiler.c2.cr6714694.Tester: double var_36> = 3.0507845559320084E18"
    "$c40 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i41 = $c40 / 0"
    "$c42 = (char) $i41"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c42"
    "$i43 = $c42 * -30168"
    "$f2 = (float) $i43"
    "f7 = f6 + $f2"
    "$c44 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i45 = $c44 - 1"
    "$c46 = (char) $i45"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c46"
    "f8 = f7 * 3.65879811E17F"
    "$z3 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"
    "<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z3"
    "$c47 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i48 = $c47 << i56"
    "$c49 = (char) $i48"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c49"
    "$c50 = <compiler.c2.cr6714694.Tester: char var_40>"
    "$i51 = $c50 + 1"
    "$c52 = (char) $i51"
    "<compiler.c2.cr6714694.Tester: char var_40> = $c52"
    "return 120"
    "r10 := @this: compiler.c2.cr6714694.Tester"->"i54 := @parameter0: int";
    "i54 := @parameter0: int"->"$z0 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>";
    "$z0 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>"->"$z1 = $z0 & 0";
    "$z1 = $z0 & 0"->"<compiler.c2.cr6714694.Tester_Class_2: boolean var_4> = $z1";
    "<compiler.c2.cr6714694.Tester_Class_2: boolean var_4> = $z1"->"f4 = 2.2030989E38F";
    "f4 = 2.2030989E38F"->"$c0 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c0 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i1 = $c0 - 1";
    "$i1 = $c0 - 1"->"$c2 = (char) $i1";
    "$c2 = (char) $i1"->"<compiler.c2.cr6714694.Tester: char var_40> = $c2";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c2"->"$i3 = <compiler.c2.cr6714694.Tester_Class_1: int var_1>";
    "$i3 = <compiler.c2.cr6714694.Tester_Class_1: int var_1>"->"$i4 = $i3 + 1";
    "$i4 = $i3 + 1"->"<compiler.c2.cr6714694.Tester_Class_1: int var_1> = $i4";
    "<compiler.c2.cr6714694.Tester_Class_1: int var_1> = $i4"->"i55 = $i3";
    "i55 = $i3"->"$r1 = \"nncjfoit\"";
    "$r1 = \"nncjfoit\""->"$r0 = newarray (int)[92]";
    "$r0 = newarray (int)[92]"->"$d0 = <compiler.c2.cr6714694.Tester: double var_36>";
    "$d0 = <compiler.c2.cr6714694.Tester: double var_36>"->"$i5 = (int) $d0";
    "$i5 = (int) $d0"->"$b6 = (byte) $i5";
    "$b6 = (byte) $i5"->"$i7 = $r0[$b6]";
    "$i7 = $r0[$b6]"->"virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i7)";
    "virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i7)"->"$c9 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c9 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i10 = $c9 - 1";
    "$i10 = $c9 - 1"->"$c11 = (char) $i10";
    "$c11 = (char) $i10"->"<compiler.c2.cr6714694.Tester: char var_40> = $c11";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c11"->"$i12 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>";
    "$i12 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>"->"$i13 = $i12 - 1";
    "$i13 = $i12 - 1"->"<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i13";
    "<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i13"->"i56 = i55 + -1";
    "i56 = i55 + -1"->"$z2 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>";
    "$z2 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"->"if $z2 == 0 goto $f0 = f4 - 120.0F";
    "if $z2 == 0 goto $f0 = f4 - 120.0F"->"$b57 = 77";
    "if $z2 == 0 goto $f0 = f4 - 120.0F"->"$f0 = f4 - 120.0F";
    "$b57 = 77"->"goto [?= b15 = $b57]";
    "goto [?= b15 = $b57]"->"b15 = $b57";
    "$f0 = f4 - 120.0F"->"f4 = $f0";
    "f4 = $f0"->"$i14 = (int) $f0";
    "$i14 = (int) $f0"->"$b57 = (byte) $i14";
    "$b57 = (byte) $i14"->"b15 = $b57";
    "b15 = $b57"->"$r2 = newarray (compiler.c2.cr6714694.Tester_Interface_0)[b15]";
    "$r2 = newarray (compiler.c2.cr6714694.Tester_Interface_0)[b15]"->"$r3 = $r2[b15]";
    "$r3 = $r2[b15]"->"$r4 = (compiler.c2.cr6714694.Tester_Class_3) $r3";
    "$r4 = (compiler.c2.cr6714694.Tester_Class_3) $r3"->"$l16 = $r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24>";
    "$l16 = $r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24>"->"$l17 = $l16 + 1L";
    "$l17 = $l16 + 1L"->"$r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l17";
    "$r4.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l17"->"$f1 = (float) $l16";
    "$f1 = (float) $l16"->"f5 = f4 * $f1";
    "f5 = f4 * $f1"->"$d2 = <compiler.c2.cr6714694.Tester: double var_36>";
    "$d2 = <compiler.c2.cr6714694.Tester: double var_36>"->"$d1 = (double) b15";
    "$d1 = (double) b15"->"$d3 = $d2 / $d1";
    "$d3 = $d2 / $d1"->"<compiler.c2.cr6714694.Tester: double var_36> = $d3";
    "<compiler.c2.cr6714694.Tester: double var_36> = $d3"->"$c18 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c18 = <compiler.c2.cr6714694.Tester: char var_40>"->"$l19 = (long) $c18";
    "$l19 = (long) $c18"->"$l20 = $l19 + 3500240160155094016L";
    "$l20 = $l19 + 3500240160155094016L"->"$i21 = (int) $l20";
    "$i21 = (int) $l20"->"$c22 = (char) $i21";
    "$c22 = (char) $i21"->"<compiler.c2.cr6714694.Tester: char var_40> = $c22";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c22"->"$r5 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b15][b15]";
    "$r5 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b15][b15]"->"$r6 = $r5[b15]";
    "$r6 = $r5[b15]"->"$r7 = $r6[b15]";
    "$r7 = $r6[b15]"->"<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15";
    "<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15"->"<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15";
    "<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15"->"<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15";
    "<compiler.c2.cr6714694.Tester_Class_1: short var_7> = b15"->"<compiler.c2.cr6714694.Tester_Class_2: short var_7> = b15";
    "<compiler.c2.cr6714694.Tester_Class_2: short var_7> = b15"->"$b23 = (byte) b15";
    "$b23 = (byte) b15"->"$r7.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = $b23";
    "$r7.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = $b23"->"$i24 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>";
    "$i24 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>"->"$i25 = $i24 + 1";
    "$i25 = $i24 + 1"->"<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i25";
    "<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i25"->"i58 = i54 + -1";
    "i58 = i54 + -1"->"i59 = i58 + 1";
    "i59 = i58 + 1"->"$i26 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>";
    "$i26 = <compiler.c2.cr6714694.Tester_Class_2: int var_1>"->"$i27 = $i26 + 1";
    "$i27 = $i26 + 1"->"<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i27";
    "<compiler.c2.cr6714694.Tester_Class_2: int var_1> = $i27"->"$c30 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c30 = <compiler.c2.cr6714694.Tester: char var_40>"->"$d4 = <compiler.c2.cr6714694.Tester: double var_36>";
    "$d4 = <compiler.c2.cr6714694.Tester: double var_36>"->"$i28 = (int) $d4";
    "$i28 = (int) $d4"->"$b29 = (byte) $i28";
    "$b29 = (byte) $i28"->"$r8 = newarray (compiler.c2.cr6714694.Tester_Class_3)[$b29]";
    "$r8 = newarray (compiler.c2.cr6714694.Tester_Class_3)[$b29]"->"<compiler.c2.cr6714694.Tester: char var_40> = 120";
    "<compiler.c2.cr6714694.Tester: char var_40> = 120"->"$b32 = (byte) 120";
    "$b32 = (byte) 120"->"$r9 = $r8[$b32]";
    "$r9 = $r8[$b32]"->"$c33 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c33 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i34 = -1 * $c33";
    "$i34 = -1 * $c33"->"$b35 = (byte) $i34";
    "$b35 = (byte) $i34"->"$r9.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = $b35";
    "$r9.<compiler.c2.cr6714694.Tester_Class_3: byte var_3> = $b35"->"$b36 = 120 >> $b35";
    "$b36 = 120 >> $b35"->"$s37 = (short) $b36";
    "$s37 = (short) $b36"->"$i38 = $c30 & $s37";
    "$i38 = $c30 & $s37"->"$c39 = (char) $i38";
    "$c39 = (char) $i38"->"<compiler.c2.cr6714694.Tester: char var_40> = $c39";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c39"->"$d6 = <compiler.c2.cr6714694.Tester: double var_36>";
    "$d6 = <compiler.c2.cr6714694.Tester: double var_36>"->"f6 = 29.0F";
    "f6 = 29.0F"->"$d5 = (double) 29.0F";
    "$d5 = (double) 29.0F"->"$d7 = $d6 % $d5";
    "$d7 = $d6 % $d5"->"<compiler.c2.cr6714694.Tester: double var_36> = $d7";
    "<compiler.c2.cr6714694.Tester: double var_36> = $d7"->"<compiler.c2.cr6714694.Tester: double var_36> = 3.0507845559320084E18";
    "<compiler.c2.cr6714694.Tester: double var_36> = 3.0507845559320084E18"->"$c40 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c40 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i41 = $c40 / 0";
    "$i41 = $c40 / 0"->"$c42 = (char) $i41";
    "$c42 = (char) $i41"->"<compiler.c2.cr6714694.Tester: char var_40> = $c42";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c42"->"$i43 = $c42 * -30168";
    "$i43 = $c42 * -30168"->"$f2 = (float) $i43";
    "$f2 = (float) $i43"->"f7 = f6 + $f2";
    "f7 = f6 + $f2"->"$c44 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c44 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i45 = $c44 - 1";
    "$i45 = $c44 - 1"->"$c46 = (char) $i45";
    "$c46 = (char) $i45"->"<compiler.c2.cr6714694.Tester: char var_40> = $c46";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c46"->"f8 = f7 * 3.65879811E17F";
    "f8 = f7 * 3.65879811E17F"->"$z3 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>";
    "$z3 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>"->"<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z3";
    "<compiler.c2.cr6714694.Tester_Class_1: boolean var_4> = $z3"->"$c47 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c47 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i48 = $c47 << i56";
    "$i48 = $c47 << i56"->"$c49 = (char) $i48";
    "$c49 = (char) $i48"->"<compiler.c2.cr6714694.Tester: char var_40> = $c49";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c49"->"$c50 = <compiler.c2.cr6714694.Tester: char var_40>";
    "$c50 = <compiler.c2.cr6714694.Tester: char var_40>"->"$i51 = $c50 + 1";
    "$i51 = $c50 + 1"->"$c52 = (char) $i51";
    "$c52 = (char) $i51"->"<compiler.c2.cr6714694.Tester: char var_40> = $c52";
    "<compiler.c2.cr6714694.Tester: char var_40> = $c52"->"return 120";
}
