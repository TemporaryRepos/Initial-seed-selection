digraph "unitGraph" {
    "r0 := @parameter0: compiler.c2.Test6837094$Factory"
    "r4 := @parameter1: java.util.Set"
    "$r1 = interfaceinvoke r0.<compiler.c2.Test6837094$Factory: compiler.c2.Test6837094$Interface[] getArray()>()"
    "r2 = $r1"
    "i0 = lengthof $r1"
    "i1 = 0"
    "goto [?= (branch)]"
    "r3 = r2[i1]"
    "interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3)"
    "goto [?= i1 = i1 + 1]"
    "$r5 := @caughtexception"
    "i1 = i1 + 1"
    "if i1 < i0 goto r3 = r2[i1]"
    "return"
    "r0 := @parameter0: compiler.c2.Test6837094$Factory"->"r4 := @parameter1: java.util.Set";
    "r4 := @parameter1: java.util.Set"->"$r1 = interfaceinvoke r0.<compiler.c2.Test6837094$Factory: compiler.c2.Test6837094$Interface[] getArray()>()";
    "$r1 = interfaceinvoke r0.<compiler.c2.Test6837094$Factory: compiler.c2.Test6837094$Interface[] getArray()>()"->"r2 = $r1";
    "r2 = $r1"->"i0 = lengthof $r1";
    "i0 = lengthof $r1"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto r3 = r2[i1]";
    "r3 = r2[i1]"->"interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3)";
    "r3 = r2[i1]"->"$r5 := @caughtexception";
    "interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3)"->"goto [?= i1 = i1 + 1]";
    "interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3)"->"$r5 := @caughtexception";
    "goto [?= i1 = i1 + 1]"->"i1 = i1 + 1";
    "$r5 := @caughtexception"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto r3 = r2[i1]";
    "if i1 < i0 goto r3 = r2[i1]"->"return";
    "if i1 < i0 goto r3 = r2[i1]"->"r3 = r2[i1]";
}
