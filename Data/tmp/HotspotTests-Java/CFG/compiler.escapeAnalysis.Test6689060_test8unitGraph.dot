digraph "unitGraph" {
    "r6 := @this: compiler.escapeAnalysis.Test6689060"
    "i3 := @parameter0: int"
    "i0 := @parameter1: int"
    "i2 := @parameter2: int"
    "$r0 = new compiler.escapeAnalysis.Test6689060$Point"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (int)[i0]"
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax> = $r2"
    "$r3 = newarray (int)[i0]"
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay> = $r3"
    "b1 = 3"
    "$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>"
    "$r4[i2] = b1"
    "$r5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>"
    "$i4 = 3 * b1"
    "$i5 = $i4 + i3"
    "$r5[i2] = $i5"
    "virtualinvoke r6.<compiler.escapeAnalysis.Test6689060: void dummy()>()"
    "$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>"
    "$i7 = $r7[i2]"
    "$r8 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>"
    "$i6 = $r8[i2]"
    "$i8 = $i7 * $i6"
    "return $i8"
    "r6 := @this: compiler.escapeAnalysis.Test6689060"->"i3 := @parameter0: int";
    "i3 := @parameter0: int"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"$r0 = new compiler.escapeAnalysis.Test6689060$Point";
    "$r0 = new compiler.escapeAnalysis.Test6689060$Point"->"specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (int)[i0]";
    "$r2 = newarray (int)[i0]"->"r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax> = $r2";
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax> = $r2"->"$r3 = newarray (int)[i0]";
    "$r3 = newarray (int)[i0]"->"r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay> = $r3";
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay> = $r3"->"b1 = 3";
    "b1 = 3"->"$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>";
    "$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>"->"$r4[i2] = b1";
    "$r4[i2] = b1"->"$r5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>";
    "$r5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>"->"$i4 = 3 * b1";
    "$i4 = 3 * b1"->"$i5 = $i4 + i3";
    "$i5 = $i4 + i3"->"$r5[i2] = $i5";
    "$r5[i2] = $i5"->"virtualinvoke r6.<compiler.escapeAnalysis.Test6689060: void dummy()>()";
    "virtualinvoke r6.<compiler.escapeAnalysis.Test6689060: void dummy()>()"->"$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>";
    "$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ax>"->"$i7 = $r7[i2]";
    "$i7 = $r7[i2]"->"$r8 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>";
    "$r8 = r1.<compiler.escapeAnalysis.Test6689060$Point: int[] ay>"->"$i6 = $r8[i2]";
    "$i6 = $r8[i2]"->"$i8 = $i7 * $i6";
    "$i8 = $i7 * $i6"->"return $i8";
}
