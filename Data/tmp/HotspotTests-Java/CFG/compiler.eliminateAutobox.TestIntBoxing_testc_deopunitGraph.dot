digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"
    "$i1 = i0 & 1"
    "if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"
    "$i3 = i0 + 1"
    "$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)"
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"
    "$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "return $i2"
    "i0 := @parameter0: int"->"r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>";
    "r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"->"$i1 = i0 & 1";
    "$i1 = i0 & 1"->"if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()";
    "if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"->"$i3 = i0 + 1";
    "if $i1 != 0 goto staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"->"staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()";
    "$i3 = i0 + 1"->"$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)";
    "$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)"->"r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()";
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"->"$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"return $i2";
}
