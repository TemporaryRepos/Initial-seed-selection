digraph "unitGraph" {
    "r0 := @this: vm.compiler.jbe.hoist.hoist01.hoist01"
    "i2 = 0"
    "goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>]"
    "$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"
    "$d1 = $r2[i2]"
    "$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] aopt>"
    "$d0 = $r3[i2]"
    "$b1 = $d1 cmpl $d0"
    "if $b1 == 0 goto i2 = i2 + 1"
    "return 0"
    "i2 = i2 + 1"
    "$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"
    "$i0 = lengthof $r1"
    "if i2 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"
    "return 1"
    "r0 := @this: vm.compiler.jbe.hoist.hoist01.hoist01"->"i2 = 0";
    "i2 = 0"->"goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>]";
    "goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>]"->"$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>";
    "$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"->"$d1 = $r2[i2]";
    "$d1 = $r2[i2]"->"$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] aopt>";
    "$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] aopt>"->"$d0 = $r3[i2]";
    "$d0 = $r3[i2]"->"$b1 = $d1 cmpl $d0";
    "$b1 = $d1 cmpl $d0"->"if $b1 == 0 goto i2 = i2 + 1";
    "if $b1 == 0 goto i2 = i2 + 1"->"return 0";
    "if $b1 == 0 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>";
    "$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"->"$i0 = lengthof $r1";
    "$i0 = lengthof $r1"->"if i2 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>";
    "if i2 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"->"return 1";
    "if i2 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>"->"$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>";
}
