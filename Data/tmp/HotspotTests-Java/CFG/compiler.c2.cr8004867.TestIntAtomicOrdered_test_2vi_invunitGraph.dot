digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"
    "r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray"
    "i2 := @parameter2: int"
    "i4 := @parameter3: int"
    "i0 := @parameter4: int"
    "i6 = 0"
    "goto [?= $i1 = 97 - i0]"
    "$i3 = i6 + i0"
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)"
    "$i5 = i6 + i0"
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i5, i4)"
    "i6 = i6 + 1"
    "$i1 = 97 - i0"
    "if i6 < $i1 goto $i3 = i6 + i0"
    "return"
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"->"r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray";
    "r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"i4 := @parameter3: int";
    "i4 := @parameter3: int"->"i0 := @parameter4: int";
    "i0 := @parameter4: int"->"i6 = 0";
    "i6 = 0"->"goto [?= $i1 = 97 - i0]";
    "goto [?= $i1 = 97 - i0]"->"$i1 = 97 - i0";
    "$i3 = i6 + i0"->"virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)";
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)"->"$i5 = i6 + i0";
    "$i5 = i6 + i0"->"virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i5, i4)";
    "virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i5, i4)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i1 = 97 - i0";
    "$i1 = 97 - i0"->"if i6 < $i1 goto $i3 = i6 + i0";
    "if i6 < $i1 goto $i3 = i6 + i0"->"return";
    "if i6 < $i1 goto $i3 = i6 + i0"->"$i3 = i6 + i0";
}
