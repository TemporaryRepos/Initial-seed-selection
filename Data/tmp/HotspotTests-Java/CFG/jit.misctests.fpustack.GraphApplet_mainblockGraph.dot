digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r8 := @parameter0: java.lang.String[];
$r0 = new java.awt.Frame;
specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\");
r1 = $r0;
$r2 = new jit.misctests.fpustack.GraphApplet;
specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>();
r3 = $r2;
r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0;
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400);
$r4 = new java.awt.BorderLayout;
specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();
virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4);
virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3);
virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>();
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
staticinvoke <java.lang.Thread: void sleep(long)>(5000L);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)];
"
    "Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r7 := @caughtexception;
"
    "Block 5:
[preds: 3 4 ] [succs: ]
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>();
virtualinvoke r1.<java.awt.Frame: void dispose()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r8 := @parameter0: java.lang.String[];
$r0 = new java.awt.Frame;
specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\");
r1 = $r0;
$r2 = new jit.misctests.fpustack.GraphApplet;
specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>();
r3 = $r2;
r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0;
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400);
$r4 = new java.awt.BorderLayout;
specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();
virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4);
virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3);
virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>();
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>();
"->"Block 1:
[preds: 0 ] [succs: 2 4 ]
staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r8 := @parameter0: java.lang.String[];
$r0 = new java.awt.Frame;
specialinvoke $r0.<java.awt.Frame: void <init>(java.lang.String)>(\"GraphApplet\");
r1 = $r0;
$r2 = new jit.misctests.fpustack.GraphApplet;
specialinvoke $r2.<jit.misctests.fpustack.GraphApplet: void <init>()>();
r3 = $r2;
r3.<jit.misctests.fpustack.GraphApplet: boolean isApplet> = 0;
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void setSize(int,int)>(600, 400);
$r4 = new java.awt.BorderLayout;
specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();
virtualinvoke r1.<java.awt.Frame: void setLayout(java.awt.LayoutManager)>($r4);
virtualinvoke r1.<java.awt.Frame: java.awt.Component add(java.lang.String,java.awt.Component)>(\"Center\", r3);
virtualinvoke r1.<java.awt.Frame: void setSize(int,int)>(600, 400);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void init()>();
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(1);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void start()>();
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r7 := @caughtexception;
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
staticinvoke <java.lang.Thread: void sleep(long)>(5000L);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r7 := @caughtexception;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
staticinvoke <java.lang.Thread: void sleep(long)>(5000L);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
staticinvoke <java.lang.Thread: void sleep(long)>(5000L);
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r7 := @caughtexception;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0)];
"->"Block 5:
[preds: 3 4 ] [succs: ]
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>();
virtualinvoke r1.<java.awt.Frame: void dispose()>();
return;
";
    "Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r7 := @caughtexception;
"->"Block 5:
[preds: 3 4 ] [succs: ]
virtualinvoke r1.<java.awt.Frame: void show(boolean)>(0);
virtualinvoke r3.<jit.misctests.fpustack.GraphApplet: void stop()>();
virtualinvoke r1.<java.awt.Frame: void dispose()>();
return;
";
}
