digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.codegen.C1NullCheckOfNullStore$Foo;
specialinvoke $r0.<compiler.codegen.C1NullCheckOfNullStore$Foo: void <init>(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
r1 = $r0;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
"
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
z0 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
i1 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 8 10 ]
goto [?= (branch)];
"
    "Block 6:
[preds: 8 ] [succs: 7 10 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
i1 = i1 + 1;
"
    "Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= (branch)];
"
    "Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto return;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r2 = new java.lang.Error;
specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>(\"Expecting a NullPointerException\");
throw $r2;
"
    "Block 13:
[preds: 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.codegen.C1NullCheckOfNullStore$Foo;
specialinvoke $r0.<compiler.codegen.C1NullCheckOfNullStore$Foo: void <init>(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
r1 = $r0;
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
"->"Block 3:
[preds: 2 ] [succs: 4 10 ]
z0 = 0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1);
i0 = i0 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
z0 = 0;
"->"Block 4:
[preds: 3 ] [succs: 5 10 ]
i1 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 4 10 ]
z0 = 0;
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
i1 = 0;
"->"Block 5:
[preds: 4 ] [succs: 8 10 ]
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 10 ]
i1 = 0;
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 8 10 ]
goto [?= (branch)];
"->"Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
";
    "Block 5:
[preds: 4 ] [succs: 8 10 ]
goto [?= (branch)];
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 6:
[preds: 8 ] [succs: 7 10 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
i1 = i1 + 1;
";
    "Block 6:
[preds: 8 ] [succs: 7 10 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
i1 = i1 + 1;
"->"Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
i1 = i1 + 1;
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"->"Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= (branch)];
";
    "Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"->"Block 6:
[preds: 8 ] [succs: 7 10 ]
staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
";
    "Block 8:
[preds: 5 7 ] [succs: 9 6 10 ]
if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null);
"->"Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto return;
";
    "Block 10:
[preds: 3 4 5 8 6 7 ] [succs: 11 ]
$r3 := @caughtexception;
z0 = 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto return;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto return;
"->"Block 12:
[preds: 11 ] [succs: ]
$r2 = new java.lang.Error;
specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>(\"Expecting a NullPointerException\");
throw $r2;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto return;
"->"Block 13:
[preds: 11 ] [succs: ]
return;
";
}
