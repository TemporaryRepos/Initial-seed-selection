digraph "unitGraph" {
    "r0 := @parameter0: double[]"
    "r2 := @parameter1: double[]"
    "r3 := @parameter2: double[]"
    "r1 := @parameter3: double[]"
    "d15 := @parameter4: double"
    "i1 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$d1 = r0[i1]"
    "$d0 = r2[i1]"
    "$d2 = $d1 * $d0"
    "$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)"
    "$d5 = r0[i1]"
    "$d4 = r3[i1]"
    "$d6 = $d5 * $d4"
    "$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6)"
    "$d11 = $d3 + $d7"
    "$d9 = r2[i1]"
    "$d8 = r3[i1]"
    "$d10 = $d9 * $d8"
    "$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)"
    "$d13 = $d11 + $d12"
    "r1[i1] = $d13"
    "$d14 = r1[i1]"
    "d15 = d15 + $d14"
    "i1 = i1 + 1"
    "$i0 = lengthof r0"
    "if i1 < $i0 goto $d1 = r0[i1]"
    "return d15"
    "r0 := @parameter0: double[]"->"r2 := @parameter1: double[]";
    "r2 := @parameter1: double[]"->"r3 := @parameter2: double[]";
    "r3 := @parameter2: double[]"->"r1 := @parameter3: double[]";
    "r1 := @parameter3: double[]"->"d15 := @parameter4: double";
    "d15 := @parameter4: double"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$d1 = r0[i1]"->"$d0 = r2[i1]";
    "$d0 = r2[i1]"->"$d2 = $d1 * $d0";
    "$d2 = $d1 * $d0"->"$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)";
    "$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)"->"$d5 = r0[i1]";
    "$d5 = r0[i1]"->"$d4 = r3[i1]";
    "$d4 = r3[i1]"->"$d6 = $d5 * $d4";
    "$d6 = $d5 * $d4"->"$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6)";
    "$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6)"->"$d11 = $d3 + $d7";
    "$d11 = $d3 + $d7"->"$d9 = r2[i1]";
    "$d9 = r2[i1]"->"$d8 = r3[i1]";
    "$d8 = r3[i1]"->"$d10 = $d9 * $d8";
    "$d10 = $d9 * $d8"->"$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)";
    "$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)"->"$d13 = $d11 + $d12";
    "$d13 = $d11 + $d12"->"r1[i1] = $d13";
    "r1[i1] = $d13"->"$d14 = r1[i1]";
    "$d14 = r1[i1]"->"d15 = d15 + $d14";
    "d15 = d15 + $d14"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i1 < $i0 goto $d1 = r0[i1]";
    "if i1 < $i0 goto $d1 = r0[i1]"->"return d15";
    "if i1 < $i0 goto $d1 = r0[i1]"->"$d1 = r0[i1]";
}
