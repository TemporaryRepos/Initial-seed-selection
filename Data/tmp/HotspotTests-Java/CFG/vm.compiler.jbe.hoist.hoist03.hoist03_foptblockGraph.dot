digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @this: vm.compiler.jbe.hoist.hoist03.hoist03;
i1 = 0;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 3 ]
i3 = 0;
goto [?= (branch)];
"
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
$i0 = i1;
i1 = i1 + 1;
$r1[$i0] = 1;
i3 = i3 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
if i3 < 300 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i2 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 200 goto i3 = 0;
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @this: vm.compiler.jbe.hoist.hoist03.hoist03;
i1 = 0;
i2 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 200 goto i3 = 0;
";
    "Block 1:
[preds: 5 ] [succs: 3 ]
i3 = 0;
goto [?= (branch)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
if i3 < 300 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
";
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
$i0 = i1;
i1 = i1 + 1;
$r1[$i0] = 1;
i3 = i3 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
if i3 < 300 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
if i3 < 300 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i2 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
if i3 < 300 goto $r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
"->"Block 2:
[preds: 3 ] [succs: 3 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist03.hoist03: int[] aopt>;
$i0 = i1;
i1 = i1 + 1;
$r1[$i0] = 1;
i3 = i3 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i2 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 200 goto i3 = 0;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 200 goto i3 = 0;
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 200 goto i3 = 0;
"->"Block 1:
[preds: 5 ] [succs: 3 ]
i3 = 0;
goto [?= (branch)];
";
}
