digraph "unitGraph" {
    "r9 := @parameter0: java.lang.String[]"
    "d0 = 1.3488E-6"
    "d1 = 0.5"
    "b0 = 20"
    "$r0 = new jit.FloatingPoint.gen_math.Summ.Summ"
    "specialinvoke $r0.<jit.FloatingPoint.gen_math.Summ.Summ: void <init>()>()"
    "r1 = $r0"
    "d2 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, d1)"
    "$d3 = neg d1"
    "d4 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, $d3)"
    "d5 = 1.0 - d2"
    "$d6 = 3.0 * d4"
    "d7 = 1.0 - $d6"
    "$d9 = d5 * d5"
    "$d8 = d7 * d7"
    "d10 = $d9 + $d8"
    "d11 = staticinvoke <java.lang.Math: double sqrt(double)>(d10)"
    "$b1 = d11 cmpg d0"
    "if $b1 >= 0 goto $r2 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")"
    "goto [?= return]"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"expected error - 1.3488e-06\")"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"found - \")"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d11)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "$r7 = new nsk.share.TestFailure"
    "specialinvoke $r7.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")"
    "throw $r7"
    "return"
    "r9 := @parameter0: java.lang.String[]"->"d0 = 1.3488E-6";
    "d0 = 1.3488E-6"->"d1 = 0.5";
    "d1 = 0.5"->"b0 = 20";
    "b0 = 20"->"$r0 = new jit.FloatingPoint.gen_math.Summ.Summ";
    "$r0 = new jit.FloatingPoint.gen_math.Summ.Summ"->"specialinvoke $r0.<jit.FloatingPoint.gen_math.Summ.Summ: void <init>()>()";
    "specialinvoke $r0.<jit.FloatingPoint.gen_math.Summ.Summ: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"d2 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, d1)";
    "d2 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, d1)"->"$d3 = neg d1";
    "$d3 = neg d1"->"d4 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, $d3)";
    "d4 = virtualinvoke r1.<jit.FloatingPoint.gen_math.Summ.Summ: double sum1(int,double)>(b0, $d3)"->"d5 = 1.0 - d2";
    "d5 = 1.0 - d2"->"$d6 = 3.0 * d4";
    "$d6 = 3.0 * d4"->"d7 = 1.0 - $d6";
    "d7 = 1.0 - $d6"->"$d9 = d5 * d5";
    "$d9 = d5 * d5"->"$d8 = d7 * d7";
    "$d8 = d7 * d7"->"d10 = $d9 + $d8";
    "d10 = $d9 + $d8"->"d11 = staticinvoke <java.lang.Math: double sqrt(double)>(d10)";
    "d11 = staticinvoke <java.lang.Math: double sqrt(double)>(d10)"->"$b1 = d11 cmpg d0";
    "$b1 = d11 cmpg d0"->"if $b1 >= 0 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "if $b1 >= 0 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "if $b1 >= 0 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"expected error - 1.3488e-06\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"expected error - 1.3488e-06\")"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"found - \")";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"found - \")"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d11)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d11)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"$r7 = new nsk.share.TestFailure";
    "$r7 = new nsk.share.TestFailure"->"specialinvoke $r7.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")";
    "specialinvoke $r7.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")"->"throw $r7";
}
