digraph "unitGraph" {
    "r0 := @this: jdk.test.lib.apps.LingeredApp"
    "$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"
    "$r1 = newarray (java.lang.String)[0]"
    "r3 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($r2, $r1)"
    "staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r3)"
    "goto [?= return]"
    "$r4 := @caughtexception"
    "return"
    "r0 := @this: jdk.test.lib.apps.LingeredApp"->"$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>";
    "r0 := @this: jdk.test.lib.apps.LingeredApp"->"$r4 := @caughtexception";
    "$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"->"$r1 = newarray (java.lang.String)[0]";
    "$r2 = r0.<jdk.test.lib.apps.LingeredApp: java.lang.String lockFileName>"->"$r4 := @caughtexception";
    "$r1 = newarray (java.lang.String)[0]"->"r3 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($r2, $r1)";
    "$r1 = newarray (java.lang.String)[0]"->"$r4 := @caughtexception";
    "r3 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($r2, $r1)"->"staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r3)";
    "r3 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($r2, $r1)"->"$r4 := @caughtexception";
    "staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r3)"->"goto [?= return]";
    "staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r3)"->"$r4 := @caughtexception";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"return";
}
