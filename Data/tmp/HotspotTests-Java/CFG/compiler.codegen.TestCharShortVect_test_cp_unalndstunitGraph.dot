digraph "unitGraph" {
    "r0 := @parameter0: char[]"
    "r1 := @parameter1: char[]"
    "r2 := @parameter2: short[]"
    "r3 := @parameter3: short[]"
    "i6 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$i3 = i6 + 5"
    "$c2 = r1[i6]"
    "r0[$i3] = $c2"
    "$i5 = i6 + 5"
    "$s4 = r3[i6]"
    "r2[$i5] = $s4"
    "i6 = i6 + 1"
    "$i0 = lengthof r0"
    "$i1 = $i0 - 5"
    "if i6 < $i1 goto $i3 = i6 + 5"
    "return"
    "r0 := @parameter0: char[]"->"r1 := @parameter1: char[]";
    "r1 := @parameter1: char[]"->"r2 := @parameter2: short[]";
    "r2 := @parameter2: short[]"->"r3 := @parameter3: short[]";
    "r3 := @parameter3: short[]"->"i6 = 0";
    "i6 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$i3 = i6 + 5"->"$c2 = r1[i6]";
    "$c2 = r1[i6]"->"r0[$i3] = $c2";
    "r0[$i3] = $c2"->"$i5 = i6 + 5";
    "$i5 = i6 + 5"->"$s4 = r3[i6]";
    "$s4 = r3[i6]"->"r2[$i5] = $s4";
    "r2[$i5] = $s4"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"$i1 = $i0 - 5";
    "$i1 = $i0 - 5"->"if i6 < $i1 goto $i3 = i6 + 5";
    "if i6 < $i1 goto $i3 = i6 + 5"->"return";
    "if i6 < $i1 goto $i3 = i6 + 5"->"$i3 = i6 + 5";
}
