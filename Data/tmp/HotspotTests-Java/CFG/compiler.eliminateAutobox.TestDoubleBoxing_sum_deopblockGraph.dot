digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
d3 = 1.0;
r1 = r0;
i0 = lengthof r0;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r1[i1];
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d2 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d1);
d3 = d3 + $d2;
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto $d0 = r1[i1];
"
    "Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
return d3;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
d3 = 1.0;
r1 = r0;
i0 = lengthof r0;
i1 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto $d0 = r1[i1];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r1[i1];
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d2 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d1);
d3 = d3 + $d2;
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto $d0 = r1[i1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto $d0 = r1[i1];
"->"Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>();
return d3;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto $d0 = r1[i1];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r1[i1];
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d2 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d1);
d3 = d3 + $d2;
i1 = i1 + 1;
";
}
