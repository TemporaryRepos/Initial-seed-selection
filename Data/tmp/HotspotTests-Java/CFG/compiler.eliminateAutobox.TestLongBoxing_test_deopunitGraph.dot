digraph "unitGraph" {
    "l0 := @parameter0: long"
    "$r0 = new java.lang.Long"
    "$l1 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>(l0)"
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>($l1)"
    "r1 = $r0"
    "$l2 = l0 & 1L"
    "$b3 = $l2 cmp 0L"
    "if $b3 != 0 goto staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"
    "$l5 = l0 + 1L"
    "$l6 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l5)"
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)"
    "staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"
    "$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "return $l4"
    "l0 := @parameter0: long"->"$r0 = new java.lang.Long";
    "$r0 = new java.lang.Long"->"$l1 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>(l0)";
    "$l1 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>(l0)"->"specialinvoke $r0.<java.lang.Long: void <init>(long)>($l1)";
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>($l1)"->"r1 = $r0";
    "r1 = $r0"->"$l2 = l0 & 1L";
    "$l2 = l0 & 1L"->"$b3 = $l2 cmp 0L";
    "$b3 = $l2 cmp 0L"->"if $b3 != 0 goto staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()";
    "if $b3 != 0 goto staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"->"$l5 = l0 + 1L";
    "if $b3 != 0 goto staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"->"staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()";
    "$l5 = l0 + 1L"->"$l6 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l5)";
    "$l6 = staticinvoke <compiler.eliminateAutobox.TestLongBoxing: long foo(long)>($l5)"->"r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)";
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)"->"staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()";
    "staticinvoke <compiler.eliminateAutobox.TestLongBoxing: void dummy()>()"->"$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"return $l4";
}
