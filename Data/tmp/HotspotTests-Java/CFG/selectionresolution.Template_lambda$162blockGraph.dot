digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
$r4 = (selectionresolution.ClassData) $r3;
r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);
$r9 = (selectionresolution.ClassData) $r8;
$r10 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
$r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
$r13 = (selectionresolution.ClassData) $r12;
$r14 = $r13.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>;
r15 = $r14.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>;
$r16 = new selectionresolution.ClassData;
$r17 = new selectionresolution.MethodData;
$r18 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>;
specialinvoke $r17.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r15, $r18);
specialinvoke $r16.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, $r17);
r19 = $r16;
$r20 = new selectionresolution.MethodData;
$r22 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PRIVATE>;
$r21 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
specialinvoke $r20.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r22, $r21);
r23 = $r20;
$r24 = new selectionresolution.ClassData;
specialinvoke $r24.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r23);
r25 = $r24;
i3 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r19);
i5 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r25);
$r26 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5);
i6 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r26);
$r27 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5);
i7 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r27);
$r28 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5);
i8 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r28);
$r29 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r29.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i7, i4);
$r30 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r30.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i7, i6);
$r31 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r31.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i6, i3);
$r32 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r32.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i8, i7);
$r33 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r33.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3);
$r34 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r34.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i5, i4);
$r35 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r35.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i8, i5);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i8;
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i4;
return;
"
}
