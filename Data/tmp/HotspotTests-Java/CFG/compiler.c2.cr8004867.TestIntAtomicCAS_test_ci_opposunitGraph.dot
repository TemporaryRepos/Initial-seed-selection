digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"
    "i1 := @parameter1: int"
    "b0 = 96"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i2 = b0 - i3"
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i2, i1, -123)"
    "i3 = i3 + 1"
    "if i3 < 97 goto $i2 = b0 - i3"
    "return"
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"b0 = 96";
    "b0 = 96"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 97 goto $i2 = b0 - i3";
    "$i2 = b0 - i3"->"virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i2, i1, -123)";
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i2, i1, -123)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 97 goto $i2 = b0 - i3";
    "if i3 < 97 goto $i2 = b0 - i3"->"return";
    "if i3 < 97 goto $i2 = b0 - i3"->"$i2 = b0 - i3";
}
