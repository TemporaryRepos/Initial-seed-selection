digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @this: vm.runtime.defmeth.MethodResolutionTest;
$r1 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r7 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r6;
r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r9 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"B\");
$r10 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r10[0] = r8;
$r11 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r10);
$r12 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder concreteMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(2);
$r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r15 = (vm.runtime.defmeth.shared.builder.ConcreteClassBuilder) $r14;
r16 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r17 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder extend(vm.runtime.defmeth.shared.data.ConcreteClass)>(r16);
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder concreteMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r20 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(3);
$r21 = virtualinvoke $r20.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r22 = (vm.runtime.defmeth.shared.builder.ConcreteClassBuilder) $r21;
r23 = virtualinvoke $r22.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r24 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r25 = virtualinvoke $r24.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r8, r23, \"m\", \"()I\");
$r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(3);
$r27 = virtualinvoke $r26.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r16, r23, \"m\", \"()I\");
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(3);
$r31 = virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r33 = virtualinvoke $r32.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r23, r23, \"m\", \"()I\");
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(3);
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
return;
"
}
