digraph "unitGraph" {
    "r0 := @parameter0: long[]"
    "l6 = 1L"
    "l7 = 1L"
    "r1 = r0"
    "i0 = lengthof r0"
    "i8 = 0"
    "goto [?= (branch)]"
    "$l1 = r1[i8]"
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"
    "$l2 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "l6 = l6 + $l2"
    "$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l4 = $l3 + 1L"
    "l7 = l7 + $l4"
    "i8 = i8 + 1"
    "if i8 < i0 goto $l1 = r1[i8]"
    "$l5 = l6 + l7"
    "return $l5"
    "r0 := @parameter0: long[]"->"l6 = 1L";
    "l6 = 1L"->"l7 = 1L";
    "l7 = 1L"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < i0 goto $l1 = r1[i8]";
    "$l1 = r1[i8]"->"r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)";
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"$l2 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l2 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"l6 = l6 + $l2";
    "l6 = l6 + $l2"->"$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l4 = $l3 + 1L";
    "$l4 = $l3 + 1L"->"l7 = l7 + $l4";
    "l7 = l7 + $l4"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < i0 goto $l1 = r1[i8]";
    "if i8 < i0 goto $l1 = r1[i8]"->"$l5 = l6 + l7";
    "if i8 < i0 goto $l1 = r1[i8]"->"$l1 = r1[i8]";
    "$l5 = l6 + l7"->"return $l5";
}
