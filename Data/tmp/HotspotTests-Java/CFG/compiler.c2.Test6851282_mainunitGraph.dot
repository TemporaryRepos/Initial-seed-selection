digraph "unitGraph" {
    "r16 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "i2 = 0"
    "goto [?= (branch)]"
    "$r2 = new java.util.ArrayList"
    "specialinvoke $r2.<java.util.ArrayList: void <init>()>()"
    "r3 = $r2"
    "i3 = i2"
    "goto [?= $i0 = i2 + 1000]"
    "$r4 = new compiler.c2.Test6851282$B"
    "specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3)"
    "interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4)"
    "i3 = i3 + 1"
    "$i0 = i2 + 1000"
    "if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B"
    "$r5 = new compiler.c2.Test6851282$A"
    "$r6 = newarray (compiler.c2.Test6851282$B)[0]"
    "$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)"
    "$r8 = (compiler.c2.Test6851282$B[]) $r7"
    "specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)"
    "i2 = i2 + 1"
    "if i2 < 5000 goto $r2 = new java.util.ArrayList"
    "$r9 = new compiler.c2.Test6851282"
    "specialinvoke $r9.<compiler.c2.Test6851282: void <init>()>()"
    "$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)"
    "$r11 = (compiler.c2.Test6851282$A) $r10"
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"
    "$r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(1, $i1)"
    "$r13 = newarray (compiler.c2.Test6851282$A)[0]"
    "$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)"
    "$r15 = (compiler.c2.Test6851282$A[]) $r14"
    "virtualinvoke $r9.<compiler.c2.Test6851282: void foo(compiler.c2.Test6851282$A,compiler.c2.Test6851282$A[])>($r11, $r15)"
    "return"
    "r16 := @parameter0: java.lang.String[]"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 5000 goto $r2 = new java.util.ArrayList";
    "$r2 = new java.util.ArrayList"->"specialinvoke $r2.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r2.<java.util.ArrayList: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"i3 = i2";
    "i3 = i2"->"goto [?= $i0 = i2 + 1000]";
    "goto [?= $i0 = i2 + 1000]"->"$i0 = i2 + 1000";
    "$r4 = new compiler.c2.Test6851282$B"->"specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3)";
    "specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3)"->"interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4)";
    "interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"$i0 = i2 + 1000";
    "$i0 = i2 + 1000"->"if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B";
    "if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B"->"$r5 = new compiler.c2.Test6851282$A";
    "if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B"->"$r4 = new compiler.c2.Test6851282$B";
    "$r5 = new compiler.c2.Test6851282$A"->"$r6 = newarray (compiler.c2.Test6851282$B)[0]";
    "$r6 = newarray (compiler.c2.Test6851282$B)[0]"->"$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)";
    "$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)"->"$r8 = (compiler.c2.Test6851282$B[]) $r7";
    "$r8 = (compiler.c2.Test6851282$B[]) $r7"->"specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8)";
    "specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 5000 goto $r2 = new java.util.ArrayList";
    "if i2 < 5000 goto $r2 = new java.util.ArrayList"->"$r9 = new compiler.c2.Test6851282";
    "if i2 < 5000 goto $r2 = new java.util.ArrayList"->"$r2 = new java.util.ArrayList";
    "$r9 = new compiler.c2.Test6851282"->"specialinvoke $r9.<compiler.c2.Test6851282: void <init>()>()";
    "specialinvoke $r9.<compiler.c2.Test6851282: void <init>()>()"->"$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)";
    "$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)"->"$r11 = (compiler.c2.Test6851282$A) $r10";
    "$r11 = (compiler.c2.Test6851282$A) $r10"->"$i1 = interfaceinvoke r1.<java.util.List: int size()>()";
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"->"$r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(1, $i1)";
    "$r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(1, $i1)"->"$r13 = newarray (compiler.c2.Test6851282$A)[0]";
    "$r13 = newarray (compiler.c2.Test6851282$A)[0]"->"$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)";
    "$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13)"->"$r15 = (compiler.c2.Test6851282$A[]) $r14";
    "$r15 = (compiler.c2.Test6851282$A[]) $r14"->"virtualinvoke $r9.<compiler.c2.Test6851282: void foo(compiler.c2.Test6851282$A,compiler.c2.Test6851282$A[])>($r11, $r15)";
    "virtualinvoke $r9.<compiler.c2.Test6851282: void foo(compiler.c2.Test6851282$A,compiler.c2.Test6851282$A[])>($r11, $r15)"->"return";
}
