digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
i0 := @parameter0: int;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i3 + 1;
$i2 = i0 / $i1;
if $i2 <= 0 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"
    "Block 2:
[preds: 1 ] [succs: ]
return;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$r0[i0] = 999L;
i3 = i3 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1000 goto $i1 = i3 + 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
i0 := @parameter0: int;
i3 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1000 goto $i1 = i3 + 1;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i3 + 1;
$i2 = i0 / $i1;
if $i2 <= 0 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 2:
[preds: 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i3 + 1;
$i2 = i0 / $i1;
if $i2 <= 0 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$r0[i0] = 999L;
i3 = i3 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$r0[i0] = 999L;
i3 = i3 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1000 goto $i1 = i3 + 1;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1000 goto $i1 = i3 + 1;
"->"Block 5:
[preds: 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1000 goto $i1 = i3 + 1;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$i1 = i3 + 1;
$i2 = i0 / $i1;
if $i2 <= 0 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
";
}
