digraph "unitGraph" {
    "r0 := @parameter0: compiler.types.TestMeetExactConstantArrays$NumbersHolder"
    "r1 = virtualinvoke r0.<compiler.types.TestMeetExactConstantArrays$NumbersHolder: java.lang.Number[] getNumbers()>()"
    "i2 = 0"
    "goto [?= $i0 = lengthof r1]"
    "$r2 = r1[i2]"
    "virtualinvoke $r2.<java.lang.Number: long longValue()>()"
    "i2 = i2 + 1"
    "$i0 = lengthof r1"
    "if i2 < $i0 goto $r2 = r1[i2]"
    "return"
    "r0 := @parameter0: compiler.types.TestMeetExactConstantArrays$NumbersHolder"->"r1 = virtualinvoke r0.<compiler.types.TestMeetExactConstantArrays$NumbersHolder: java.lang.Number[] getNumbers()>()";
    "r1 = virtualinvoke r0.<compiler.types.TestMeetExactConstantArrays$NumbersHolder: java.lang.Number[] getNumbers()>()"->"i2 = 0";
    "i2 = 0"->"goto [?= $i0 = lengthof r1]";
    "goto [?= $i0 = lengthof r1]"->"$i0 = lengthof r1";
    "$r2 = r1[i2]"->"virtualinvoke $r2.<java.lang.Number: long longValue()>()";
    "virtualinvoke $r2.<java.lang.Number: long longValue()>()"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if i2 < $i0 goto $r2 = r1[i2]";
    "if i2 < $i0 goto $r2 = r1[i2]"->"return";
    "if i2 < $i0 goto $r2 = r1[i2]"->"$r2 = r1[i2]";
}
