digraph "unitGraph" {
    "r17 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.runtime.Test6863420$TOT"
    "specialinvoke $r0.<compiler.runtime.Test6863420$TOT: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void setDaemon(boolean)>(1)"
    "virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void start()>()"
    "i2 = 1"
    "goto [?= $z0 = <compiler.runtime.Test6863420: boolean done>]"
    "i3 = 1"
    "goto [?= (branch)]"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Spawning \")"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "r7 = newarray (java.lang.Thread)[i2]"
    "i4 = 0"
    "goto [?= $i0 = lengthof r7]"
    "$r8 = new compiler.runtime.Test6863420$1"
    "specialinvoke $r8.<compiler.runtime.Test6863420$1: void <init>()>()"
    "r9 = $r8"
    "$r10 = new java.lang.Thread"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r9, $r13)"
    "r7[i4] = $r10"
    "i4 = i4 + 1"
    "$i0 = lengthof r7"
    "if i4 < $i0 goto $r8 = new compiler.runtime.Test6863420$1"
    "i5 = 0"
    "goto [?= $i1 = lengthof r7]"
    "$r14 = r7[i5]"
    "virtualinvoke $r14.<java.lang.Thread: void start()>()"
    "i5 = i5 + 1"
    "$i1 = lengthof r7"
    "if i5 < $i1 goto $r14 = r7[i5]"
    "i6 = 0"
    "goto [?= $i7 = lengthof r7]"
    "$r15 = r7[i6]"
    "virtualinvoke $r15.<java.lang.Thread: void join()>()"
    "goto [?= i6 = i6 + 1]"
    "$r16 := @caughtexception"
    "i6 = i6 + 1"
    "$i7 = lengthof r7"
    "if i6 < $i7 goto $r15 = r7[i6]"
    "i3 = i3 + 1"
    "if i3 <= 1 goto $r3 = <java.lang.System: java.io.PrintStream out>"
    "i2 = i2 + 1"
    "$z0 = <compiler.runtime.Test6863420: boolean done>"
    "if $z0 != 0 goto $z1 = <compiler.runtime.Test6863420: boolean got_backward_time>"
    "if i2 <= 32 goto i3 = 1"
    "$z1 = <compiler.runtime.Test6863420: boolean got_backward_time>"
    "if $z1 == 0 goto return"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "return"
    "r17 := @parameter0: java.lang.String[]"->"$r0 = new compiler.runtime.Test6863420$TOT";
    "$r0 = new compiler.runtime.Test6863420$TOT"->"specialinvoke $r0.<compiler.runtime.Test6863420$TOT: void <init>()>()";
    "specialinvoke $r0.<compiler.runtime.Test6863420$TOT: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void setDaemon(boolean)>(1)";
    "virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void setDaemon(boolean)>(1)"->"virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void start()>()";
    "virtualinvoke r1.<compiler.runtime.Test6863420$TOT: void start()>()"->"i2 = 1";
    "i2 = 1"->"goto [?= $z0 = <compiler.runtime.Test6863420: boolean done>]";
    "goto [?= $z0 = <compiler.runtime.Test6863420: boolean done>]"->"$z0 = <compiler.runtime.Test6863420: boolean done>";
    "i3 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 <= 1 goto $r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Spawning \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Spawning \")"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"r7 = newarray (java.lang.Thread)[i2]";
    "r7 = newarray (java.lang.Thread)[i2]"->"i4 = 0";
    "i4 = 0"->"goto [?= $i0 = lengthof r7]";
    "goto [?= $i0 = lengthof r7]"->"$i0 = lengthof r7";
    "$r8 = new compiler.runtime.Test6863420$1"->"specialinvoke $r8.<compiler.runtime.Test6863420$1: void <init>()>()";
    "specialinvoke $r8.<compiler.runtime.Test6863420$1: void <init>()>()"->"r9 = $r8";
    "r9 = $r8"->"$r10 = new java.lang.Thread";
    "$r10 = new java.lang.Thread"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread\")";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r9, $r13)";
    "specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r9, $r13)"->"r7[i4] = $r10";
    "r7[i4] = $r10"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"$i0 = lengthof r7";
    "$i0 = lengthof r7"->"if i4 < $i0 goto $r8 = new compiler.runtime.Test6863420$1";
    "if i4 < $i0 goto $r8 = new compiler.runtime.Test6863420$1"->"i5 = 0";
    "if i4 < $i0 goto $r8 = new compiler.runtime.Test6863420$1"->"$r8 = new compiler.runtime.Test6863420$1";
    "i5 = 0"->"goto [?= $i1 = lengthof r7]";
    "goto [?= $i1 = lengthof r7]"->"$i1 = lengthof r7";
    "$r14 = r7[i5]"->"virtualinvoke $r14.<java.lang.Thread: void start()>()";
    "virtualinvoke $r14.<java.lang.Thread: void start()>()"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i1 = lengthof r7";
    "$i1 = lengthof r7"->"if i5 < $i1 goto $r14 = r7[i5]";
    "if i5 < $i1 goto $r14 = r7[i5]"->"i6 = 0";
    "if i5 < $i1 goto $r14 = r7[i5]"->"$r14 = r7[i5]";
    "i6 = 0"->"goto [?= $i7 = lengthof r7]";
    "goto [?= $i7 = lengthof r7]"->"$i7 = lengthof r7";
    "$r15 = r7[i6]"->"virtualinvoke $r15.<java.lang.Thread: void join()>()";
    "$r15 = r7[i6]"->"$r16 := @caughtexception";
    "virtualinvoke $r15.<java.lang.Thread: void join()>()"->"goto [?= i6 = i6 + 1]";
    "virtualinvoke $r15.<java.lang.Thread: void join()>()"->"$r16 := @caughtexception";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$r16 := @caughtexception"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i7 = lengthof r7";
    "$i7 = lengthof r7"->"if i6 < $i7 goto $r15 = r7[i6]";
    "if i6 < $i7 goto $r15 = r7[i6]"->"i3 = i3 + 1";
    "if i6 < $i7 goto $r15 = r7[i6]"->"$r15 = r7[i6]";
    "if i6 < $i7 goto $r15 = r7[i6]"->"$r16 := @caughtexception";
    "i3 = i3 + 1"->"if i3 <= 1 goto $r3 = <java.lang.System: java.io.PrintStream out>";
    "if i3 <= 1 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"i2 = i2 + 1";
    "if i3 <= 1 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "i2 = i2 + 1"->"$z0 = <compiler.runtime.Test6863420: boolean done>";
    "$z0 = <compiler.runtime.Test6863420: boolean done>"->"if $z0 != 0 goto $z1 = <compiler.runtime.Test6863420: boolean got_backward_time>";
    "if $z0 != 0 goto $z1 = <compiler.runtime.Test6863420: boolean got_backward_time>"->"if i2 <= 32 goto i3 = 1";
    "if $z0 != 0 goto $z1 = <compiler.runtime.Test6863420: boolean got_backward_time>"->"$z1 = <compiler.runtime.Test6863420: boolean got_backward_time>";
    "if i2 <= 32 goto i3 = 1"->"$z1 = <compiler.runtime.Test6863420: boolean got_backward_time>";
    "if i2 <= 32 goto i3 = 1"->"i3 = 1";
    "$z1 = <compiler.runtime.Test6863420: boolean got_backward_time>"->"if $z1 == 0 goto return";
    "if $z1 == 0 goto return"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "if $z1 == 0 goto return"->"return";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"return";
}
