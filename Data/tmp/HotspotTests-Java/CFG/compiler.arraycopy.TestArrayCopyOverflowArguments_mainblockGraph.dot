digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @parameter0: java.lang.String[];
r0 = newarray (int)[20];
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 - 1;
$i1 = i2 * $i0;
r0[i2] = $i1;
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 20 goto $i0 = i2 - 1;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
i3 = i3 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @parameter0: java.lang.String[];
r0 = newarray (int)[20];
i2 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 20 goto $i0 = i2 - 1;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 - 1;
$i1 = i2 * $i0;
r0[i2] = $i1;
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 20 goto $i0 = i2 - 1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 20 goto $i0 = i2 - 1;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 20 goto $i0 = i2 - 1;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 - 1;
$i1 = i2 * $i0;
r0[i2] = $i1;
i2 = i2 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i3 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
i3 = i3 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyOverflowArguments: int[] m1(java.lang.Object)>(r0);
i3 = i3 + 1;
";
}
