digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 11 ]
r0 := @parameter0: jit.Arrays.ArrayBounds.ArrayBounds$Foo;
i0 := @parameter1: int;
i2 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 11 ]
i3 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 9 11 ]
goto [?= (branch)];
"
    "Block 3:
[preds: 9 ] [succs: 4 11 ]
$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$i1 = $r1[i3];
"
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
i2 = i2 + $i1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 11 ]
if i3 != 0 goto i3 = i3 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5);
"
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
i3 = i3 + 1;
"
    "Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
goto [?= return i2];
"
    "Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
"
    "Block 12:
[preds: 10 11 ] [succs: ]
return i2;
"
    "Block 0:
[preds: ] [succs: 1 11 ]
r0 := @parameter0: jit.Arrays.ArrayBounds.ArrayBounds$Foo;
i0 := @parameter1: int;
i2 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 11 ]
i3 = 0;
";
    "Block 0:
[preds: ] [succs: 1 11 ]
r0 := @parameter0: jit.Arrays.ArrayBounds.ArrayBounds$Foo;
i0 := @parameter1: int;
i2 = 0;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 1:
[preds: 0 ] [succs: 2 11 ]
i3 = 0;
"->"Block 2:
[preds: 1 ] [succs: 9 11 ]
goto [?= (branch)];
";
    "Block 1:
[preds: 0 ] [succs: 2 11 ]
i3 = 0;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 2:
[preds: 1 ] [succs: 9 11 ]
goto [?= (branch)];
"->"Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
";
    "Block 2:
[preds: 1 ] [succs: 9 11 ]
goto [?= (branch)];
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 3:
[preds: 9 ] [succs: 4 11 ]
$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"->"Block 4:
[preds: 3 ] [succs: 5 11 ]
$i1 = $r1[i3];
";
    "Block 3:
[preds: 9 ] [succs: 4 11 ]
$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$i1 = $r1[i3];
"->"Block 5:
[preds: 4 ] [succs: 6 11 ]
i2 = i2 + $i1;
";
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$i1 = $r1[i3];
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
i2 = i2 + $i1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 11 ]
if i3 != 0 goto i3 = i3 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
i2 = i2 + $i1;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 11 ]
if i3 != 0 goto i3 = i3 + 1;
"->"Block 7:
[preds: 6 ] [succs: 8 11 ]
staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 11 ]
if i3 != 0 goto i3 = i3 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
i3 = i3 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 11 ]
if i3 != 0 goto i3 = i3 + 1;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5);
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
i3 = i3 + 1;
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5);
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
i3 = i3 + 1;
"->"Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
i3 = i3 + 1;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
goto [?= return i2];
";
    "Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"->"Block 3:
[preds: 9 ] [succs: 4 11 ]
$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
";
    "Block 9:
[preds: 2 8 ] [succs: 10 3 11 ]
if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>;
"->"Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
goto [?= return i2];
"->"Block 12:
[preds: 10 11 ] [succs: ]
return i2;
";
    "Block 11:
[preds: 0 1 2 9 3 4 5 6 7 8 ] [succs: 12 ]
$r2 := @caughtexception;
"->"Block 12:
[preds: 10 11 ] [succs: ]
return i2;
";
}
