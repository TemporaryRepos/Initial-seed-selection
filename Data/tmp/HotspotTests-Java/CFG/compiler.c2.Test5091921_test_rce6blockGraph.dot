digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i8 = r0[1];
<compiler.c2.Test5091921: int result> = i8;
i9 = -2147483648;
goto [?= (branch)];
"
    "Block 1:
[preds: 7 ] [succs: 2 5 ]
if i9 <= -2147483648 goto $i1 = i9 & 3;
"
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
if i9 >= 0 goto return i8;
"
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$i3 = <compiler.c2.Test5091921: int result>;
i8 = i8 + $i3;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i9 * 28;
$i5 = $i4 + 1;
if $i5 >= 0 goto return i8;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
i10 = i8 + i9;
<compiler.c2.Test5091921: int result> = i10;
$i6 = i9 & 7;
$i7 = r0[$i6];
i8 = i10 ^ $i7;
<compiler.c2.Test5091921: int result> = i8;
goto [?= i9 = i9 + 1];
"
    "Block 5:
[preds: 1 ] [succs: 6 ]
$i1 = i9 & 3;
$i2 = r0[$i1];
i8 = i8 + $i2;
<compiler.c2.Test5091921: int result> = i8;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
i9 = i9 + 1;
"
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
if i9 < i0 goto (branch);
"
    "Block 8:
[preds: 2 3 7 ] [succs: ]
return i8;
"
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i8 = r0[1];
<compiler.c2.Test5091921: int result> = i8;
i9 = -2147483648;
goto [?= (branch)];
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 ]
if i9 < i0 goto (branch);
";
    "Block 1:
[preds: 7 ] [succs: 2 5 ]
if i9 <= -2147483648 goto $i1 = i9 & 3;
"->"Block 2:
[preds: 1 ] [succs: 3 8 ]
if i9 >= 0 goto return i8;
";
    "Block 1:
[preds: 7 ] [succs: 2 5 ]
if i9 <= -2147483648 goto $i1 = i9 & 3;
"->"Block 5:
[preds: 1 ] [succs: 6 ]
$i1 = i9 & 3;
$i2 = r0[$i1];
i8 = i8 + $i2;
<compiler.c2.Test5091921: int result> = i8;
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
if i9 >= 0 goto return i8;
"->"Block 3:
[preds: 2 ] [succs: 4 8 ]
$i3 = <compiler.c2.Test5091921: int result>;
i8 = i8 + $i3;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i9 * 28;
$i5 = $i4 + 1;
if $i5 >= 0 goto return i8;
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
if i9 >= 0 goto return i8;
"->"Block 8:
[preds: 2 3 7 ] [succs: ]
return i8;
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$i3 = <compiler.c2.Test5091921: int result>;
i8 = i8 + $i3;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i9 * 28;
$i5 = $i4 + 1;
if $i5 >= 0 goto return i8;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
i10 = i8 + i9;
<compiler.c2.Test5091921: int result> = i10;
$i6 = i9 & 7;
$i7 = r0[$i6];
i8 = i10 ^ $i7;
<compiler.c2.Test5091921: int result> = i8;
goto [?= i9 = i9 + 1];
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$i3 = <compiler.c2.Test5091921: int result>;
i8 = i8 + $i3;
<compiler.c2.Test5091921: int result> = i8;
$i4 = i9 * 28;
$i5 = $i4 + 1;
if $i5 >= 0 goto return i8;
"->"Block 8:
[preds: 2 3 7 ] [succs: ]
return i8;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
i10 = i8 + i9;
<compiler.c2.Test5091921: int result> = i10;
$i6 = i9 & 7;
$i7 = r0[$i6];
i8 = i10 ^ $i7;
<compiler.c2.Test5091921: int result> = i8;
goto [?= i9 = i9 + 1];
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
i9 = i9 + 1;
";
    "Block 5:
[preds: 1 ] [succs: 6 ]
$i1 = i9 & 3;
$i2 = r0[$i1];
i8 = i8 + $i2;
<compiler.c2.Test5091921: int result> = i8;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
i9 = i9 + 1;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
i9 = i9 + 1;
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 ]
if i9 < i0 goto (branch);
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
if i9 < i0 goto (branch);
"->"Block 8:
[preds: 2 3 7 ] [succs: ]
return i8;
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
if i9 < i0 goto (branch);
"->"Block 1:
[preds: 7 ] [succs: 2 5 ]
if i9 <= -2147483648 goto $i1 = i9 & 3;
";
}
