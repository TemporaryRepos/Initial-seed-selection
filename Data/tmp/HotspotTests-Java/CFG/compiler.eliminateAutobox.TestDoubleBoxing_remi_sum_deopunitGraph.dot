digraph "unitGraph" {
    "$r0 = new java.lang.Double"
    "$d0 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(1.0)"
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0)"
    "r2 = $r0"
    "i0 = 0"
    "goto [?= (branch)]"
    "$r1 = new java.lang.Double"
    "$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"
    "$d2 = $d1 + 1.0"
    "$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)"
    "specialinvoke $r1.<java.lang.Double: void <init>(double)>($d3)"
    "r2 = $r1"
    "i0 = i0 + 1"
    "if i0 < 1000 goto $r1 = new java.lang.Double"
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"
    "$d4 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"
    "return $d4"
    "$r0 = new java.lang.Double"->"$d0 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(1.0)";
    "$d0 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(1.0)"->"specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0)";
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0)"->"r2 = $r0";
    "r2 = $r0"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 1000 goto $r1 = new java.lang.Double";
    "$r1 = new java.lang.Double"->"$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"->"$d2 = $d1 + 1.0";
    "$d2 = $d1 + 1.0"->"$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)";
    "$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)"->"specialinvoke $r1.<java.lang.Double: void <init>(double)>($d3)";
    "specialinvoke $r1.<java.lang.Double: void <init>(double)>($d3)"->"r2 = $r1";
    "r2 = $r1"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 1000 goto $r1 = new java.lang.Double";
    "if i0 < 1000 goto $r1 = new java.lang.Double"->"staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()";
    "if i0 < 1000 goto $r1 = new java.lang.Double"->"$r1 = new java.lang.Double";
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"->"$d4 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()";
    "$d4 = virtualinvoke r2.<java.lang.Double: double doubleValue()>()"->"return $d4";
}
