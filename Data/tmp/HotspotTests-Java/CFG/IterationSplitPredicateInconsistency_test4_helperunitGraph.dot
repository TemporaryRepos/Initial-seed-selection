digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "i2 := @parameter2: int"
    "r0 := @parameter3: double[]"
    "r1 := @parameter4: double[]"
    "i7 := @parameter5: int"
    "i8 = i0 - 1"
    "goto [?= (branch)]"
    "$i3 = i2 - i8"
    "$i6 = $i3 - 1"
    "$i4 = i2 - i8"
    "$i5 = $i4 - 1"
    "$d0 = r1[$i5]"
    "r0[$i6] = $d0"
    "if i8 != i7 goto <IterationSplitPredicateInconsistency: int barrier> = 66"
    "return 1"
    "<IterationSplitPredicateInconsistency: int barrier> = 66"
    "i8 = i8 + -1"
    "if i8 >= i1 goto $i3 = i2 - i8"
    "return 0"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"r0 := @parameter3: double[]";
    "r0 := @parameter3: double[]"->"r1 := @parameter4: double[]";
    "r1 := @parameter4: double[]"->"i7 := @parameter5: int";
    "i7 := @parameter5: int"->"i8 = i0 - 1";
    "i8 = i0 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= i1 goto $i3 = i2 - i8";
    "$i3 = i2 - i8"->"$i6 = $i3 - 1";
    "$i6 = $i3 - 1"->"$i4 = i2 - i8";
    "$i4 = i2 - i8"->"$i5 = $i4 - 1";
    "$i5 = $i4 - 1"->"$d0 = r1[$i5]";
    "$d0 = r1[$i5]"->"r0[$i6] = $d0";
    "r0[$i6] = $d0"->"if i8 != i7 goto <IterationSplitPredicateInconsistency: int barrier> = 66";
    "if i8 != i7 goto <IterationSplitPredicateInconsistency: int barrier> = 66"->"return 1";
    "if i8 != i7 goto <IterationSplitPredicateInconsistency: int barrier> = 66"->"<IterationSplitPredicateInconsistency: int barrier> = 66";
    "<IterationSplitPredicateInconsistency: int barrier> = 66"->"i8 = i8 + -1";
    "i8 = i8 + -1"->"if i8 >= i1 goto $i3 = i2 - i8";
    "if i8 >= i1 goto $i3 = i2 - i8"->"return 0";
    "if i8 >= i1 goto $i3 = i2 - i8"->"$i3 = i2 - i8";
}
