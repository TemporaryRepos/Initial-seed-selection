digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r35 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[70];
$r0[0] = \"simple\";
$r0[1] = \"simpleb\";
$r0[2] = \"simplec\";
$r0[3] = \"simplef\";
$r0[4] = \"simplep\";
$r0[5] = \"simple2\";
$r0[6] = \"simpleb2\";
$r0[7] = \"simplec2\";
$r0[8] = \"simplem2\";
$r0[9] = \"simplep2\";
$r0[10] = \"simple_deop\";
$r0[11] = \"simpleb_deop\";
$r0[12] = \"simplec_deop\";
$r0[13] = \"simplef_deop\";
$r0[14] = \"simplep_deop\";
$r0[15] = \"test\";
$r0[16] = \"testb\";
$r0[17] = \"testc\";
$r0[18] = \"testm\";
$r0[19] = \"testp\";
$r0[20] = \"test2\";
$r0[21] = \"testb2\";
$r0[22] = \"testc2\";
$r0[23] = \"testm2\";
$r0[24] = \"testp2\";
$r0[25] = \"test_deop\";
$r0[26] = \"testb_deop\";
$r0[27] = \"testc_deop\";
$r0[28] = \"testf_deop\";
$r0[29] = \"testp_deop\";
$r0[30] = \"sum\";
$r0[31] = \"sumb\";
$r0[32] = \"sumc\";
$r0[33] = \"sumf\";
$r0[34] = \"sump\";
$r0[35] = \"sum2\";
$r0[36] = \"sumb2\";
$r0[37] = \"sumc2\";
$r0[38] = \"summ2\";
$r0[39] = \"sump2\";
$r0[40] = \"sum_deop\";
$r0[41] = \"sumb_deop\";
$r0[42] = \"sumc_deop\";
$r0[43] = \"sumf_deop\";
$r0[44] = \"sump_deop\";
$r0[45] = \"remi_sum\";
$r0[46] = \"remi_sumb\";
$r0[47] = \"remi_sumc\";
$r0[48] = \"remi_sumf\";
$r0[49] = \"remi_sump\";
$r0[50] = \"remi_sum2\";
$r0[51] = \"remi_sumb2\";
$r0[52] = \"remi_sumc2\";
$r0[53] = \"remi_summ2\";
$r0[54] = \"remi_sump2\";
$r0[55] = \"remi_sum_deop\";
$r0[56] = \"remi_sumb_deop\";
$r0[57] = \"remi_sumc_deop\";
$r0[58] = \"remi_sumf_deop\";
$r0[59] = \"remi_sump_deop\";
$r0[60] = \"remi_sum_cond\";
$r0[61] = \"remi_sumb_cond\";
$r0[62] = \"remi_sumc_cond\";
$r0[63] = \"remi_sumf_cond\";
$r0[64] = \"remi_sump_cond\";
$r0[65] = \"remi_sum2_cond\";
$r0[66] = \"remi_sumb2_cond\";
$r0[67] = \"remi_sumc2_cond\";
$r0[68] = \"remi_summ2_cond\";
$r0[69] = \"remi_sump2_cond\";
r1 = $r0;
$r2 = newarray (float)[70];
$r2[0] = 7.1990896E7F;
$r2[1] = 7.1990896E7F;
$r2[2] = 12000.0F;
$r2[3] = 7.1990896E7F;
$r2[4] = 7.1990896E7F;
$r2[5] = 1.44E8F;
$r2[6] = 1.44E8F;
$r2[7] = 7.2014896E7F;
$r2[8] = 1.44E8F;
$r2[9] = 1.44E8F;
$r2[10] = 7.1990896E7F;
$r2[11] = 7.1990896E7F;
$r2[12] = 12000.0F;
$r2[13] = 7.1990896E7F;
$r2[14] = 7.1990896E7F;
$r2[15] = 7.2E7F;
$r2[16] = 7.2E7F;
$r2[17] = 3.6004096E7F;
$r2[18] = 7.2E7F;
$r2[19] = 7.2E7F;
$r2[20] = 1.44012288E8F;
$r2[21] = 1.44012288E8F;
$r2[22] = 7.2033096E7F;
$r2[23] = 1.44012288E8F;
$r2[24] = 1.44012288E8F;
$r2[25] = 7.2E7F;
$r2[26] = 7.2E7F;
$r2[27] = 3.6004096E7F;
$r2[28] = 7.2E7F;
$r2[29] = 7.2E7F;
$r2[30] = 499501.0F;
$r2[31] = 499501.0F;
$r2[32] = 499501.0F;
$r2[33] = 499501.0F;
$r2[34] = 499501.0F;
$r2[35] = 1000002.0F;
$r2[36] = 1000002.0F;
$r2[37] = 1000002.0F;
$r2[38] = 1000002.0F;
$r2[39] = 1000002.0F;
$r2[40] = 499501.0F;
$r2[41] = 499501.0F;
$r2[42] = 499501.0F;
$r2[43] = 499501.0F;
$r2[44] = 499501.0F;
$r2[45] = 1001.0F;
$r2[46] = 1001.0F;
$r2[47] = 1001.0F;
$r2[48] = 1001.0F;
$r2[49] = 1001.0F;
$r2[50] = 3002.0F;
$r2[51] = 3002.0F;
$r2[52] = 3002.0F;
$r2[53] = 3002.0F;
$r2[54] = 3002.0F;
$r2[55] = 1001.0F;
$r2[56] = 1001.0F;
$r2[57] = 1001.0F;
$r2[58] = 1001.0F;
$r2[59] = 1001.0F;
$r2[60] = 501.0F;
$r2[61] = 501.0F;
$r2[62] = 501.0F;
$r2[63] = 501.0F;
$r2[64] = 501.0F;
$r2[65] = 1502.0F;
$r2[66] = 1502.0F;
$r2[67] = 1502.0F;
$r2[68] = 1502.0F;
$r2[69] = 1502.0F;
r3 = $r2;
r4 = newarray (float)[70];
i31 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r4[i31] = 0.0F;
i31 = i31 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i31 < 70 goto r4[i31] = 0.0F;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i32 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$f1 = r4[0];
$f0 = (float) i32;
$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple(float)>($f0);
$f3 = $f1 + $f2;
r4[0] = $f3;
$f5 = r4[1];
$f4 = (float) i32;
$f6 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb(float)>($f4);
$f7 = $f5 + $f6;
r4[1] = $f7;
$f8 = r4[2];
$f9 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec()>();
$f10 = $f8 + $f9;
r4[2] = $f10;
$f12 = r4[3];
$f11 = (float) i32;
$f13 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef(float)>($f11);
$f14 = $f12 + $f13;
r4[3] = $f14;
$f16 = r4[4];
$f15 = (float) i32;
$r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f15);
$f17 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep(java.lang.Float)>($r5);
$f18 = $f16 + $f17;
r4[4] = $f18;
$f20 = r4[5];
$f19 = (float) i32;
$f21 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple2(float)>($f19);
$f22 = $f20 + $f21;
r4[5] = $f22;
$f24 = r4[6];
$f23 = (float) i32;
$f25 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb2(float)>($f23);
$f26 = $f24 + $f25;
r4[6] = $f26;
$f28 = r4[7];
$f27 = (float) i32;
$f29 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec2(float)>($f27);
$f30 = $f28 + $f29;
r4[7] = $f30;
$f32 = r4[8];
$f31 = (float) i32;
$f33 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplem2(float)>($f31);
$f34 = $f32 + $f33;
r4[8] = $f34;
$f36 = r4[9];
$f37 = (float) i32;
$f35 = (float) i32;
$r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f35);
$f38 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep2(float,java.lang.Float)>($f37, $r6);
$f39 = $f36 + $f38;
r4[9] = $f39;
$f41 = r4[10];
$f40 = (float) i32;
$f42 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple_deop(float)>($f40);
$f43 = $f41 + $f42;
r4[10] = $f43;
$f45 = r4[11];
$f44 = (float) i32;
$f46 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb_deop(float)>($f44);
$f47 = $f45 + $f46;
r4[11] = $f47;
$f49 = r4[12];
$f48 = (float) i32;
$f50 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec_deop(float)>($f48);
$f51 = $f49 + $f50;
r4[12] = $f51;
$f53 = r4[13];
$f52 = (float) i32;
$f54 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef_deop(float)>($f52);
$f55 = $f53 + $f54;
r4[13] = $f55;
$f57 = r4[14];
$f56 = (float) i32;
$r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f56);
$f58 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep_deop(java.lang.Float)>($r7);
$f59 = $f57 + $f58;
r4[14] = $f59;
$f61 = r4[15];
$f60 = (float) i32;
$f62 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test(float,int)>($f60, i32);
$f63 = $f61 + $f62;
r4[15] = $f63;
$f65 = r4[16];
$f64 = (float) i32;
$f66 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb(float,int)>($f64, i32);
$f67 = $f65 + $f66;
r4[16] = $f67;
$f69 = r4[17];
$f68 = (float) i32;
$f70 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc(float,int)>($f68, i32);
$f71 = $f69 + $f70;
r4[17] = $f71;
$f73 = r4[18];
$f72 = (float) i32;
$f74 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm(float,int)>($f72, i32);
$f75 = $f73 + $f74;
r4[18] = $f75;
$f77 = r4[19];
$f78 = (float) i32;
$f76 = (float) i32;
$r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f76);
$f79 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp(float,int,java.lang.Float)>($f78, i32, $r8);
$f80 = $f77 + $f79;
r4[19] = $f80;
$f82 = r4[20];
$f81 = (float) i32;
$f83 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test2(float,int)>($f81, i32);
$f84 = $f82 + $f83;
r4[20] = $f84;
$f86 = r4[21];
$f85 = (float) i32;
$f87 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb2(float,int)>($f85, i32);
$f88 = $f86 + $f87;
r4[21] = $f88;
$f90 = r4[22];
$f89 = (float) i32;
$f91 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc2(float,int)>($f89, i32);
$f92 = $f90 + $f91;
r4[22] = $f92;
$f94 = r4[23];
$f93 = (float) i32;
$f95 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm2(float,int)>($f93, i32);
$f96 = $f94 + $f95;
r4[23] = $f96;
$f98 = r4[24];
$f99 = (float) i32;
$f97 = (float) i32;
$r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f97);
$f100 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp2(float,int,java.lang.Float)>($f99, i32, $r9);
$f101 = $f98 + $f100;
r4[24] = $f101;
$f103 = r4[25];
$f102 = (float) i32;
$f104 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test_deop(float,int)>($f102, i32);
$f105 = $f103 + $f104;
r4[25] = $f105;
$f107 = r4[26];
$f106 = (float) i32;
$f108 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb_deop(float,int)>($f106, i32);
$f109 = $f107 + $f108;
r4[26] = $f109;
$f111 = r4[27];
$f110 = (float) i32;
$f112 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc_deop(float,int)>($f110, i32);
$f113 = $f111 + $f112;
r4[27] = $f113;
$f115 = r4[28];
$f114 = (float) i32;
$f116 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testf_deop(float,int)>($f114, i32);
$f117 = $f115 + $f116;
r4[28] = $f117;
$f119 = r4[29];
$f120 = (float) i32;
$f118 = (float) i32;
$r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f118);
$f121 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp_deop(float,int,java.lang.Float)>($f120, i32, $r10);
$f122 = $f119 + $f121;
r4[29] = $f122;
i32 = i32 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i32 < 12000 goto $f1 = r4[0];
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (float)[1000];
i33 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$f123 = (float) i33;
r36[i33] = $f123;
i33 = i33 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i33 < 1000 goto $f123 = (float) i33;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i34 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
r4[30] = $f124;
$f125 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb(float[])>(r36);
r4[31] = $f125;
$f126 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc(float[])>(r36);
r4[32] = $f126;
$f127 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf(float[])>(r36);
r4[33] = $f127;
$r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f128 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump(float[],java.lang.Float)>(r36, $r11);
r4[34] = $f128;
$f129 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum2(float[])>(r36);
r4[35] = $f129;
$f130 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb2(float[])>(r36);
r4[36] = $f130;
$f131 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc2(float[])>(r36);
r4[37] = $f131;
$f132 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float summ2(float[])>(r36);
r4[38] = $f132;
$r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f133 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump2(float[],java.lang.Float)>(r36, $r12);
r4[39] = $f133;
$f134 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum_deop(float[])>(r36);
r4[40] = $f134;
$f135 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb_deop(float[])>(r36);
r4[41] = $f135;
$f136 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc_deop(float[])>(r36);
r4[42] = $f136;
$f137 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf_deop(float[])>(r36);
r4[43] = $f137;
$r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f138 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump_deop(float[],java.lang.Float)>(r36, $r13);
r4[44] = $f138;
$f139 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum()>();
r4[45] = $f139;
$f140 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb()>();
r4[46] = $f140;
$f141 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc()>();
r4[47] = $f141;
$f142 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf()>();
r4[48] = $f142;
$r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f143 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump(java.lang.Float)>($r14);
r4[49] = $f143;
$f144 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2()>();
r4[50] = $f144;
$f145 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2()>();
r4[51] = $f145;
$f146 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2()>();
r4[52] = $f146;
$f147 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2()>();
r4[53] = $f147;
$r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f148 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2(java.lang.Float)>($r15);
r4[54] = $f148;
$f149 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_deop()>();
r4[55] = $f149;
$f150 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_deop()>();
r4[56] = $f150;
$f151 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_deop()>();
r4[57] = $f151;
$f152 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_deop()>();
r4[58] = $f152;
$r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f153 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_deop(java.lang.Float)>($r16);
r4[59] = $f153;
$f154 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_cond()>();
r4[60] = $f154;
$f155 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_cond()>();
r4[61] = $f155;
$f156 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_cond()>();
r4[62] = $f156;
$f157 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_cond()>();
r4[63] = $f157;
$r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f158 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_cond(java.lang.Float)>($r17);
r4[64] = $f158;
$f159 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2_cond()>();
r4[65] = $f159;
$f160 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2_cond()>();
r4[66] = $f160;
$f161 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2_cond()>();
r4[67] = $f161;
$f162 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2_cond()>();
r4[68] = $f162;
$r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f163 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2_cond(java.lang.Float)>($r18);
r4[69] = $f163;
i34 = i34 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i34 < 100 goto $f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
"
    "Block 12:
[preds: 11 ] [succs: 16 ]
i35 = 0;
i36 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$f165 = r4[i36];
$f164 = r3[i36];
$b30 = $f165 cmpl $f164;
if $b30 == 0 goto i36 = i36 + 1;
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i36];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$f166 = r4[i36];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f166);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$f167 = r3[i36];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f167);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i35 = i35 + 1;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 ]
i36 = i36 + 1;
"
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i36 < 70 goto $f165 = r4[i36];
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i35 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 18:
[preds: 17 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed \");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests.\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r34 = new java.lang.InternalError;
specialinvoke $r34.<java.lang.InternalError: void <init>()>();
throw $r34;
"
    "Block 19:
[preds: 17 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r35 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[70];
$r0[0] = \"simple\";
$r0[1] = \"simpleb\";
$r0[2] = \"simplec\";
$r0[3] = \"simplef\";
$r0[4] = \"simplep\";
$r0[5] = \"simple2\";
$r0[6] = \"simpleb2\";
$r0[7] = \"simplec2\";
$r0[8] = \"simplem2\";
$r0[9] = \"simplep2\";
$r0[10] = \"simple_deop\";
$r0[11] = \"simpleb_deop\";
$r0[12] = \"simplec_deop\";
$r0[13] = \"simplef_deop\";
$r0[14] = \"simplep_deop\";
$r0[15] = \"test\";
$r0[16] = \"testb\";
$r0[17] = \"testc\";
$r0[18] = \"testm\";
$r0[19] = \"testp\";
$r0[20] = \"test2\";
$r0[21] = \"testb2\";
$r0[22] = \"testc2\";
$r0[23] = \"testm2\";
$r0[24] = \"testp2\";
$r0[25] = \"test_deop\";
$r0[26] = \"testb_deop\";
$r0[27] = \"testc_deop\";
$r0[28] = \"testf_deop\";
$r0[29] = \"testp_deop\";
$r0[30] = \"sum\";
$r0[31] = \"sumb\";
$r0[32] = \"sumc\";
$r0[33] = \"sumf\";
$r0[34] = \"sump\";
$r0[35] = \"sum2\";
$r0[36] = \"sumb2\";
$r0[37] = \"sumc2\";
$r0[38] = \"summ2\";
$r0[39] = \"sump2\";
$r0[40] = \"sum_deop\";
$r0[41] = \"sumb_deop\";
$r0[42] = \"sumc_deop\";
$r0[43] = \"sumf_deop\";
$r0[44] = \"sump_deop\";
$r0[45] = \"remi_sum\";
$r0[46] = \"remi_sumb\";
$r0[47] = \"remi_sumc\";
$r0[48] = \"remi_sumf\";
$r0[49] = \"remi_sump\";
$r0[50] = \"remi_sum2\";
$r0[51] = \"remi_sumb2\";
$r0[52] = \"remi_sumc2\";
$r0[53] = \"remi_summ2\";
$r0[54] = \"remi_sump2\";
$r0[55] = \"remi_sum_deop\";
$r0[56] = \"remi_sumb_deop\";
$r0[57] = \"remi_sumc_deop\";
$r0[58] = \"remi_sumf_deop\";
$r0[59] = \"remi_sump_deop\";
$r0[60] = \"remi_sum_cond\";
$r0[61] = \"remi_sumb_cond\";
$r0[62] = \"remi_sumc_cond\";
$r0[63] = \"remi_sumf_cond\";
$r0[64] = \"remi_sump_cond\";
$r0[65] = \"remi_sum2_cond\";
$r0[66] = \"remi_sumb2_cond\";
$r0[67] = \"remi_sumc2_cond\";
$r0[68] = \"remi_summ2_cond\";
$r0[69] = \"remi_sump2_cond\";
r1 = $r0;
$r2 = newarray (float)[70];
$r2[0] = 7.1990896E7F;
$r2[1] = 7.1990896E7F;
$r2[2] = 12000.0F;
$r2[3] = 7.1990896E7F;
$r2[4] = 7.1990896E7F;
$r2[5] = 1.44E8F;
$r2[6] = 1.44E8F;
$r2[7] = 7.2014896E7F;
$r2[8] = 1.44E8F;
$r2[9] = 1.44E8F;
$r2[10] = 7.1990896E7F;
$r2[11] = 7.1990896E7F;
$r2[12] = 12000.0F;
$r2[13] = 7.1990896E7F;
$r2[14] = 7.1990896E7F;
$r2[15] = 7.2E7F;
$r2[16] = 7.2E7F;
$r2[17] = 3.6004096E7F;
$r2[18] = 7.2E7F;
$r2[19] = 7.2E7F;
$r2[20] = 1.44012288E8F;
$r2[21] = 1.44012288E8F;
$r2[22] = 7.2033096E7F;
$r2[23] = 1.44012288E8F;
$r2[24] = 1.44012288E8F;
$r2[25] = 7.2E7F;
$r2[26] = 7.2E7F;
$r2[27] = 3.6004096E7F;
$r2[28] = 7.2E7F;
$r2[29] = 7.2E7F;
$r2[30] = 499501.0F;
$r2[31] = 499501.0F;
$r2[32] = 499501.0F;
$r2[33] = 499501.0F;
$r2[34] = 499501.0F;
$r2[35] = 1000002.0F;
$r2[36] = 1000002.0F;
$r2[37] = 1000002.0F;
$r2[38] = 1000002.0F;
$r2[39] = 1000002.0F;
$r2[40] = 499501.0F;
$r2[41] = 499501.0F;
$r2[42] = 499501.0F;
$r2[43] = 499501.0F;
$r2[44] = 499501.0F;
$r2[45] = 1001.0F;
$r2[46] = 1001.0F;
$r2[47] = 1001.0F;
$r2[48] = 1001.0F;
$r2[49] = 1001.0F;
$r2[50] = 3002.0F;
$r2[51] = 3002.0F;
$r2[52] = 3002.0F;
$r2[53] = 3002.0F;
$r2[54] = 3002.0F;
$r2[55] = 1001.0F;
$r2[56] = 1001.0F;
$r2[57] = 1001.0F;
$r2[58] = 1001.0F;
$r2[59] = 1001.0F;
$r2[60] = 501.0F;
$r2[61] = 501.0F;
$r2[62] = 501.0F;
$r2[63] = 501.0F;
$r2[64] = 501.0F;
$r2[65] = 1502.0F;
$r2[66] = 1502.0F;
$r2[67] = 1502.0F;
$r2[68] = 1502.0F;
$r2[69] = 1502.0F;
r3 = $r2;
r4 = newarray (float)[70];
i31 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i31 < 70 goto r4[i31] = 0.0F;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r4[i31] = 0.0F;
i31 = i31 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i31 < 70 goto r4[i31] = 0.0F;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i31 < 70 goto r4[i31] = 0.0F;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i32 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i31 < 70 goto r4[i31] = 0.0F;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r4[i31] = 0.0F;
i31 = i31 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i32 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i32 < 12000 goto $f1 = r4[0];
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$f1 = r4[0];
$f0 = (float) i32;
$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple(float)>($f0);
$f3 = $f1 + $f2;
r4[0] = $f3;
$f5 = r4[1];
$f4 = (float) i32;
$f6 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb(float)>($f4);
$f7 = $f5 + $f6;
r4[1] = $f7;
$f8 = r4[2];
$f9 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec()>();
$f10 = $f8 + $f9;
r4[2] = $f10;
$f12 = r4[3];
$f11 = (float) i32;
$f13 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef(float)>($f11);
$f14 = $f12 + $f13;
r4[3] = $f14;
$f16 = r4[4];
$f15 = (float) i32;
$r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f15);
$f17 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep(java.lang.Float)>($r5);
$f18 = $f16 + $f17;
r4[4] = $f18;
$f20 = r4[5];
$f19 = (float) i32;
$f21 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple2(float)>($f19);
$f22 = $f20 + $f21;
r4[5] = $f22;
$f24 = r4[6];
$f23 = (float) i32;
$f25 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb2(float)>($f23);
$f26 = $f24 + $f25;
r4[6] = $f26;
$f28 = r4[7];
$f27 = (float) i32;
$f29 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec2(float)>($f27);
$f30 = $f28 + $f29;
r4[7] = $f30;
$f32 = r4[8];
$f31 = (float) i32;
$f33 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplem2(float)>($f31);
$f34 = $f32 + $f33;
r4[8] = $f34;
$f36 = r4[9];
$f37 = (float) i32;
$f35 = (float) i32;
$r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f35);
$f38 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep2(float,java.lang.Float)>($f37, $r6);
$f39 = $f36 + $f38;
r4[9] = $f39;
$f41 = r4[10];
$f40 = (float) i32;
$f42 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple_deop(float)>($f40);
$f43 = $f41 + $f42;
r4[10] = $f43;
$f45 = r4[11];
$f44 = (float) i32;
$f46 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb_deop(float)>($f44);
$f47 = $f45 + $f46;
r4[11] = $f47;
$f49 = r4[12];
$f48 = (float) i32;
$f50 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec_deop(float)>($f48);
$f51 = $f49 + $f50;
r4[12] = $f51;
$f53 = r4[13];
$f52 = (float) i32;
$f54 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef_deop(float)>($f52);
$f55 = $f53 + $f54;
r4[13] = $f55;
$f57 = r4[14];
$f56 = (float) i32;
$r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f56);
$f58 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep_deop(java.lang.Float)>($r7);
$f59 = $f57 + $f58;
r4[14] = $f59;
$f61 = r4[15];
$f60 = (float) i32;
$f62 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test(float,int)>($f60, i32);
$f63 = $f61 + $f62;
r4[15] = $f63;
$f65 = r4[16];
$f64 = (float) i32;
$f66 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb(float,int)>($f64, i32);
$f67 = $f65 + $f66;
r4[16] = $f67;
$f69 = r4[17];
$f68 = (float) i32;
$f70 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc(float,int)>($f68, i32);
$f71 = $f69 + $f70;
r4[17] = $f71;
$f73 = r4[18];
$f72 = (float) i32;
$f74 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm(float,int)>($f72, i32);
$f75 = $f73 + $f74;
r4[18] = $f75;
$f77 = r4[19];
$f78 = (float) i32;
$f76 = (float) i32;
$r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f76);
$f79 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp(float,int,java.lang.Float)>($f78, i32, $r8);
$f80 = $f77 + $f79;
r4[19] = $f80;
$f82 = r4[20];
$f81 = (float) i32;
$f83 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test2(float,int)>($f81, i32);
$f84 = $f82 + $f83;
r4[20] = $f84;
$f86 = r4[21];
$f85 = (float) i32;
$f87 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb2(float,int)>($f85, i32);
$f88 = $f86 + $f87;
r4[21] = $f88;
$f90 = r4[22];
$f89 = (float) i32;
$f91 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc2(float,int)>($f89, i32);
$f92 = $f90 + $f91;
r4[22] = $f92;
$f94 = r4[23];
$f93 = (float) i32;
$f95 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm2(float,int)>($f93, i32);
$f96 = $f94 + $f95;
r4[23] = $f96;
$f98 = r4[24];
$f99 = (float) i32;
$f97 = (float) i32;
$r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f97);
$f100 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp2(float,int,java.lang.Float)>($f99, i32, $r9);
$f101 = $f98 + $f100;
r4[24] = $f101;
$f103 = r4[25];
$f102 = (float) i32;
$f104 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test_deop(float,int)>($f102, i32);
$f105 = $f103 + $f104;
r4[25] = $f105;
$f107 = r4[26];
$f106 = (float) i32;
$f108 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb_deop(float,int)>($f106, i32);
$f109 = $f107 + $f108;
r4[26] = $f109;
$f111 = r4[27];
$f110 = (float) i32;
$f112 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc_deop(float,int)>($f110, i32);
$f113 = $f111 + $f112;
r4[27] = $f113;
$f115 = r4[28];
$f114 = (float) i32;
$f116 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testf_deop(float,int)>($f114, i32);
$f117 = $f115 + $f116;
r4[28] = $f117;
$f119 = r4[29];
$f120 = (float) i32;
$f118 = (float) i32;
$r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f118);
$f121 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp_deop(float,int,java.lang.Float)>($f120, i32, $r10);
$f122 = $f119 + $f121;
r4[29] = $f122;
i32 = i32 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i32 < 12000 goto $f1 = r4[0];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i32 < 12000 goto $f1 = r4[0];
"->"Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (float)[1000];
i33 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i32 < 12000 goto $f1 = r4[0];
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$f1 = r4[0];
$f0 = (float) i32;
$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple(float)>($f0);
$f3 = $f1 + $f2;
r4[0] = $f3;
$f5 = r4[1];
$f4 = (float) i32;
$f6 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb(float)>($f4);
$f7 = $f5 + $f6;
r4[1] = $f7;
$f8 = r4[2];
$f9 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec()>();
$f10 = $f8 + $f9;
r4[2] = $f10;
$f12 = r4[3];
$f11 = (float) i32;
$f13 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef(float)>($f11);
$f14 = $f12 + $f13;
r4[3] = $f14;
$f16 = r4[4];
$f15 = (float) i32;
$r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f15);
$f17 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep(java.lang.Float)>($r5);
$f18 = $f16 + $f17;
r4[4] = $f18;
$f20 = r4[5];
$f19 = (float) i32;
$f21 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple2(float)>($f19);
$f22 = $f20 + $f21;
r4[5] = $f22;
$f24 = r4[6];
$f23 = (float) i32;
$f25 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb2(float)>($f23);
$f26 = $f24 + $f25;
r4[6] = $f26;
$f28 = r4[7];
$f27 = (float) i32;
$f29 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec2(float)>($f27);
$f30 = $f28 + $f29;
r4[7] = $f30;
$f32 = r4[8];
$f31 = (float) i32;
$f33 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplem2(float)>($f31);
$f34 = $f32 + $f33;
r4[8] = $f34;
$f36 = r4[9];
$f37 = (float) i32;
$f35 = (float) i32;
$r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f35);
$f38 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep2(float,java.lang.Float)>($f37, $r6);
$f39 = $f36 + $f38;
r4[9] = $f39;
$f41 = r4[10];
$f40 = (float) i32;
$f42 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simple_deop(float)>($f40);
$f43 = $f41 + $f42;
r4[10] = $f43;
$f45 = r4[11];
$f44 = (float) i32;
$f46 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simpleb_deop(float)>($f44);
$f47 = $f45 + $f46;
r4[11] = $f47;
$f49 = r4[12];
$f48 = (float) i32;
$f50 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplec_deop(float)>($f48);
$f51 = $f49 + $f50;
r4[12] = $f51;
$f53 = r4[13];
$f52 = (float) i32;
$f54 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplef_deop(float)>($f52);
$f55 = $f53 + $f54;
r4[13] = $f55;
$f57 = r4[14];
$f56 = (float) i32;
$r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f56);
$f58 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float simplep_deop(java.lang.Float)>($r7);
$f59 = $f57 + $f58;
r4[14] = $f59;
$f61 = r4[15];
$f60 = (float) i32;
$f62 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test(float,int)>($f60, i32);
$f63 = $f61 + $f62;
r4[15] = $f63;
$f65 = r4[16];
$f64 = (float) i32;
$f66 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb(float,int)>($f64, i32);
$f67 = $f65 + $f66;
r4[16] = $f67;
$f69 = r4[17];
$f68 = (float) i32;
$f70 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc(float,int)>($f68, i32);
$f71 = $f69 + $f70;
r4[17] = $f71;
$f73 = r4[18];
$f72 = (float) i32;
$f74 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm(float,int)>($f72, i32);
$f75 = $f73 + $f74;
r4[18] = $f75;
$f77 = r4[19];
$f78 = (float) i32;
$f76 = (float) i32;
$r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f76);
$f79 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp(float,int,java.lang.Float)>($f78, i32, $r8);
$f80 = $f77 + $f79;
r4[19] = $f80;
$f82 = r4[20];
$f81 = (float) i32;
$f83 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test2(float,int)>($f81, i32);
$f84 = $f82 + $f83;
r4[20] = $f84;
$f86 = r4[21];
$f85 = (float) i32;
$f87 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb2(float,int)>($f85, i32);
$f88 = $f86 + $f87;
r4[21] = $f88;
$f90 = r4[22];
$f89 = (float) i32;
$f91 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc2(float,int)>($f89, i32);
$f92 = $f90 + $f91;
r4[22] = $f92;
$f94 = r4[23];
$f93 = (float) i32;
$f95 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testm2(float,int)>($f93, i32);
$f96 = $f94 + $f95;
r4[23] = $f96;
$f98 = r4[24];
$f99 = (float) i32;
$f97 = (float) i32;
$r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f97);
$f100 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp2(float,int,java.lang.Float)>($f99, i32, $r9);
$f101 = $f98 + $f100;
r4[24] = $f101;
$f103 = r4[25];
$f102 = (float) i32;
$f104 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float test_deop(float,int)>($f102, i32);
$f105 = $f103 + $f104;
r4[25] = $f105;
$f107 = r4[26];
$f106 = (float) i32;
$f108 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testb_deop(float,int)>($f106, i32);
$f109 = $f107 + $f108;
r4[26] = $f109;
$f111 = r4[27];
$f110 = (float) i32;
$f112 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testc_deop(float,int)>($f110, i32);
$f113 = $f111 + $f112;
r4[27] = $f113;
$f115 = r4[28];
$f114 = (float) i32;
$f116 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testf_deop(float,int)>($f114, i32);
$f117 = $f115 + $f116;
r4[28] = $f117;
$f119 = r4[29];
$f120 = (float) i32;
$f118 = (float) i32;
$r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f118);
$f121 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float testp_deop(float,int,java.lang.Float)>($f120, i32, $r10);
$f122 = $f119 + $f121;
r4[29] = $f122;
i32 = i32 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (float)[1000];
i33 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i33 < 1000 goto $f123 = (float) i33;
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$f123 = (float) i33;
r36[i33] = $f123;
i33 = i33 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i33 < 1000 goto $f123 = (float) i33;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i33 < 1000 goto $f123 = (float) i33;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i34 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i33 < 1000 goto $f123 = (float) i33;
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$f123 = (float) i33;
r36[i33] = $f123;
i33 = i33 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i34 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i34 < 100 goto $f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
r4[30] = $f124;
$f125 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb(float[])>(r36);
r4[31] = $f125;
$f126 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc(float[])>(r36);
r4[32] = $f126;
$f127 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf(float[])>(r36);
r4[33] = $f127;
$r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f128 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump(float[],java.lang.Float)>(r36, $r11);
r4[34] = $f128;
$f129 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum2(float[])>(r36);
r4[35] = $f129;
$f130 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb2(float[])>(r36);
r4[36] = $f130;
$f131 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc2(float[])>(r36);
r4[37] = $f131;
$f132 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float summ2(float[])>(r36);
r4[38] = $f132;
$r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f133 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump2(float[],java.lang.Float)>(r36, $r12);
r4[39] = $f133;
$f134 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum_deop(float[])>(r36);
r4[40] = $f134;
$f135 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb_deop(float[])>(r36);
r4[41] = $f135;
$f136 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc_deop(float[])>(r36);
r4[42] = $f136;
$f137 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf_deop(float[])>(r36);
r4[43] = $f137;
$r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f138 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump_deop(float[],java.lang.Float)>(r36, $r13);
r4[44] = $f138;
$f139 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum()>();
r4[45] = $f139;
$f140 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb()>();
r4[46] = $f140;
$f141 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc()>();
r4[47] = $f141;
$f142 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf()>();
r4[48] = $f142;
$r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f143 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump(java.lang.Float)>($r14);
r4[49] = $f143;
$f144 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2()>();
r4[50] = $f144;
$f145 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2()>();
r4[51] = $f145;
$f146 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2()>();
r4[52] = $f146;
$f147 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2()>();
r4[53] = $f147;
$r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f148 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2(java.lang.Float)>($r15);
r4[54] = $f148;
$f149 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_deop()>();
r4[55] = $f149;
$f150 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_deop()>();
r4[56] = $f150;
$f151 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_deop()>();
r4[57] = $f151;
$f152 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_deop()>();
r4[58] = $f152;
$r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f153 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_deop(java.lang.Float)>($r16);
r4[59] = $f153;
$f154 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_cond()>();
r4[60] = $f154;
$f155 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_cond()>();
r4[61] = $f155;
$f156 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_cond()>();
r4[62] = $f156;
$f157 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_cond()>();
r4[63] = $f157;
$r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f158 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_cond(java.lang.Float)>($r17);
r4[64] = $f158;
$f159 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2_cond()>();
r4[65] = $f159;
$f160 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2_cond()>();
r4[66] = $f160;
$f161 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2_cond()>();
r4[67] = $f161;
$f162 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2_cond()>();
r4[68] = $f162;
$r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f163 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2_cond(java.lang.Float)>($r18);
r4[69] = $f163;
i34 = i34 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i34 < 100 goto $f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i34 < 100 goto $f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
"->"Block 12:
[preds: 11 ] [succs: 16 ]
i35 = 0;
i36 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i34 < 100 goto $f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$f124 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum(float[])>(r36);
r4[30] = $f124;
$f125 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb(float[])>(r36);
r4[31] = $f125;
$f126 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc(float[])>(r36);
r4[32] = $f126;
$f127 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf(float[])>(r36);
r4[33] = $f127;
$r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f128 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump(float[],java.lang.Float)>(r36, $r11);
r4[34] = $f128;
$f129 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum2(float[])>(r36);
r4[35] = $f129;
$f130 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb2(float[])>(r36);
r4[36] = $f130;
$f131 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc2(float[])>(r36);
r4[37] = $f131;
$f132 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float summ2(float[])>(r36);
r4[38] = $f132;
$r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f133 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump2(float[],java.lang.Float)>(r36, $r12);
r4[39] = $f133;
$f134 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sum_deop(float[])>(r36);
r4[40] = $f134;
$f135 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumb_deop(float[])>(r36);
r4[41] = $f135;
$f136 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumc_deop(float[])>(r36);
r4[42] = $f136;
$f137 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sumf_deop(float[])>(r36);
r4[43] = $f137;
$r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f138 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float sump_deop(float[],java.lang.Float)>(r36, $r13);
r4[44] = $f138;
$f139 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum()>();
r4[45] = $f139;
$f140 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb()>();
r4[46] = $f140;
$f141 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc()>();
r4[47] = $f141;
$f142 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf()>();
r4[48] = $f142;
$r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f143 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump(java.lang.Float)>($r14);
r4[49] = $f143;
$f144 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2()>();
r4[50] = $f144;
$f145 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2()>();
r4[51] = $f145;
$f146 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2()>();
r4[52] = $f146;
$f147 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2()>();
r4[53] = $f147;
$r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f148 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2(java.lang.Float)>($r15);
r4[54] = $f148;
$f149 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_deop()>();
r4[55] = $f149;
$f150 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_deop()>();
r4[56] = $f150;
$f151 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_deop()>();
r4[57] = $f151;
$f152 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_deop()>();
r4[58] = $f152;
$r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f153 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_deop(java.lang.Float)>($r16);
r4[59] = $f153;
$f154 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum_cond()>();
r4[60] = $f154;
$f155 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb_cond()>();
r4[61] = $f155;
$f156 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc_cond()>();
r4[62] = $f156;
$f157 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumf_cond()>();
r4[63] = $f157;
$r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f158 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump_cond(java.lang.Float)>($r17);
r4[64] = $f158;
$f159 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sum2_cond()>();
r4[65] = $f159;
$f160 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumb2_cond()>();
r4[66] = $f160;
$f161 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sumc2_cond()>();
r4[67] = $f161;
$f162 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_summ2_cond()>();
r4[68] = $f162;
$r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
$f163 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float remi_sump2_cond(java.lang.Float)>($r18);
r4[69] = $f163;
i34 = i34 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 16 ]
i35 = 0;
i36 = 0;
goto [?= (branch)];
"->"Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i36 < 70 goto $f165 = r4[i36];
";
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$f165 = r4[i36];
$f164 = r3[i36];
$b30 = $f165 cmpl $f164;
if $b30 == 0 goto i36 = i36 + 1;
"->"Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i36];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$f166 = r4[i36];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f166);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$f167 = r3[i36];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f167);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i35 = i35 + 1;
";
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$f165 = r4[i36];
$f164 = r3[i36];
$b30 = $f165 cmpl $f164;
if $b30 == 0 goto i36 = i36 + 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 ]
i36 = i36 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i36];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$f166 = r4[i36];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f166);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$f167 = r3[i36];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f167);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i35 = i35 + 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 ]
i36 = i36 + 1;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 ]
i36 = i36 + 1;
"->"Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i36 < 70 goto $f165 = r4[i36];
";
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i36 < 70 goto $f165 = r4[i36];
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
if i35 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i36 < 70 goto $f165 = r4[i36];
"->"Block 13:
[preds: 16 ] [succs: 14 15 ]
$f165 = r4[i36];
$f164 = r3[i36];
$b30 = $f165 cmpl $f164;
if $b30 == 0 goto i36 = i36 + 1;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i35 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"->"Block 18:
[preds: 17 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed \");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests.\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r34 = new java.lang.InternalError;
specialinvoke $r34.<java.lang.InternalError: void <init>()>();
throw $r34;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i35 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"->"Block 19:
[preds: 17 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
";
}
