digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r2 := @parameter0: java.lang.String[];
z1 = 1;
$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>();
if $z0 == 0 goto $z2 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if z1 == 0 goto $z2 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
goto [?= z3 = $z2];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$z2 = 0;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z3 = $z2;
$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>();
if $z4 == 0 goto $z5 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
if z3 == 0 goto $z5 = 0;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z5 = 1;
goto [?= z6 = $z5];
"
    "Block 7:
[preds: 4 5 ] [succs: 8 ]
$z5 = 0;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
z6 = $z5;
$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>();
if $z7 == 0 goto $z8 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z6 == 0 goto $z8 = 0;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z8 = 1;
goto [?= z9 = $z8];
"
    "Block 11:
[preds: 8 9 ] [succs: 12 ]
$z8 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
z9 = $z8;
$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>();
if $z10 == 0 goto $z11 = 0;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if z9 == 0 goto $z11 = 0;
"
    "Block 14:
[preds: 13 ] [succs: 16 ]
$z11 = 1;
goto [?= z12 = $z11];
"
    "Block 15:
[preds: 12 13 ] [succs: 16 ]
$z11 = 0;
"
    "Block 16:
[preds: 14 15 ] [succs: 17 19 ]
z12 = $z11;
$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>();
if $z13 == 0 goto $z14 = 0;
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if z12 == 0 goto $z14 = 0;
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z14 = 1;
goto [?= z15 = $z14];
"
    "Block 19:
[preds: 16 17 ] [succs: 20 ]
$z14 = 0;
"
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
z15 = $z14;
$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>();
if $z16 == 0 goto $z17 = 0;
"
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z15 == 0 goto $z17 = 0;
"
    "Block 22:
[preds: 21 ] [succs: 24 ]
$z17 = 1;
goto [?= z18 = $z17];
"
    "Block 23:
[preds: 20 21 ] [succs: 24 ]
$z17 = 0;
"
    "Block 24:
[preds: 22 23 ] [succs: 25 27 ]
z18 = $z17;
$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>();
if $z19 == 0 goto $z20 = 0;
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if z18 == 0 goto $z20 = 0;
"
    "Block 26:
[preds: 25 ] [succs: 28 ]
$z20 = 1;
goto [?= z21 = $z20];
"
    "Block 27:
[preds: 24 25 ] [succs: 28 ]
$z20 = 0;
"
    "Block 28:
[preds: 26 27 ] [succs: 29 31 ]
z21 = $z20;
$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>();
if $z22 == 0 goto $z23 = 0;
"
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
if z21 == 0 goto $z23 = 0;
"
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z23 = 1;
goto [?= z24 = $z23];
"
    "Block 31:
[preds: 28 29 ] [succs: 32 ]
$z23 = 0;
"
    "Block 32:
[preds: 30 31 ] [succs: 33 35 ]
z24 = $z23;
$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>();
if $z25 == 0 goto $z26 = 0;
"
    "Block 33:
[preds: 32 ] [succs: 34 35 ]
if z24 == 0 goto $z26 = 0;
"
    "Block 34:
[preds: 33 ] [succs: 36 ]
$z26 = 1;
goto [?= z27 = $z26];
"
    "Block 35:
[preds: 32 33 ] [succs: 36 ]
$z26 = 0;
"
    "Block 36:
[preds: 34 35 ] [succs: 37 39 ]
z27 = $z26;
$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>();
if $z28 == 0 goto $z29 = 0;
"
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
if z27 == 0 goto $z29 = 0;
"
    "Block 38:
[preds: 37 ] [succs: 40 ]
$z29 = 1;
goto [?= z30 = $z29];
"
    "Block 39:
[preds: 36 37 ] [succs: 40 ]
$z29 = 0;
"
    "Block 40:
[preds: 38 39 ] [succs: 41 43 ]
z30 = $z29;
$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>();
if $z31 == 0 goto $z32 = 0;
"
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
if z30 == 0 goto $z32 = 0;
"
    "Block 42:
[preds: 41 ] [succs: 44 ]
$z32 = 1;
goto [?= z33 = $z32];
"
    "Block 43:
[preds: 40 41 ] [succs: 44 ]
$z32 = 0;
"
    "Block 44:
[preds: 42 43 ] [succs: 45 47 ]
z33 = $z32;
$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>();
if $z34 == 0 goto $z35 = 0;
"
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
if z33 == 0 goto $z35 = 0;
"
    "Block 46:
[preds: 45 ] [succs: 48 ]
$z35 = 1;
goto [?= z36 = $z35];
"
    "Block 47:
[preds: 44 45 ] [succs: 48 ]
$z35 = 0;
"
    "Block 48:
[preds: 46 47 ] [succs: 49 51 ]
z36 = $z35;
$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>();
if $z37 == 0 goto $z38 = 0;
"
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
if z36 == 0 goto $z38 = 0;
"
    "Block 50:
[preds: 49 ] [succs: 52 ]
$z38 = 1;
goto [?= z39 = $z38];
"
    "Block 51:
[preds: 48 49 ] [succs: 52 ]
$z38 = 0;
"
    "Block 52:
[preds: 50 51 ] [succs: 53 54 ]
z39 = $z38;
if z39 == 0 goto $r0 = new java.lang.RuntimeException;
"
    "Block 53:
[preds: 52 ] [succs: 55 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
"
    "Block 54:
[preds: 52 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\");
throw $r0;
"
    "Block 55:
[preds: 53 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r2 := @parameter0: java.lang.String[];
z1 = 1;
$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>();
if $z0 == 0 goto $z2 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if z1 == 0 goto $z2 = 0;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r2 := @parameter0: java.lang.String[];
z1 = 1;
$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>();
if $z0 == 0 goto $z2 = 0;
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$z2 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if z1 == 0 goto $z2 = 0;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
goto [?= z3 = $z2];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if z1 == 0 goto $z2 = 0;
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$z2 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
goto [?= z3 = $z2];
"->"Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z3 = $z2;
$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>();
if $z4 == 0 goto $z5 = 0;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$z2 = 0;
"->"Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z3 = $z2;
$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>();
if $z4 == 0 goto $z5 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z3 = $z2;
$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>();
if $z4 == 0 goto $z5 = 0;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
if z3 == 0 goto $z5 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z3 = $z2;
$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>();
if $z4 == 0 goto $z5 = 0;
"->"Block 7:
[preds: 4 5 ] [succs: 8 ]
$z5 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
if z3 == 0 goto $z5 = 0;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$z5 = 1;
goto [?= z6 = $z5];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
if z3 == 0 goto $z5 = 0;
"->"Block 7:
[preds: 4 5 ] [succs: 8 ]
$z5 = 0;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z5 = 1;
goto [?= z6 = $z5];
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
z6 = $z5;
$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>();
if $z7 == 0 goto $z8 = 0;
";
    "Block 7:
[preds: 4 5 ] [succs: 8 ]
$z5 = 0;
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
z6 = $z5;
$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>();
if $z7 == 0 goto $z8 = 0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
z6 = $z5;
$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>();
if $z7 == 0 goto $z8 = 0;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
if z6 == 0 goto $z8 = 0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
z6 = $z5;
$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>();
if $z7 == 0 goto $z8 = 0;
"->"Block 11:
[preds: 8 9 ] [succs: 12 ]
$z8 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z6 == 0 goto $z8 = 0;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$z8 = 1;
goto [?= z9 = $z8];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z6 == 0 goto $z8 = 0;
"->"Block 11:
[preds: 8 9 ] [succs: 12 ]
$z8 = 0;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z8 = 1;
goto [?= z9 = $z8];
"->"Block 12:
[preds: 10 11 ] [succs: 13 15 ]
z9 = $z8;
$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>();
if $z10 == 0 goto $z11 = 0;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 ]
$z8 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: 13 15 ]
z9 = $z8;
$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>();
if $z10 == 0 goto $z11 = 0;
";
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
z9 = $z8;
$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>();
if $z10 == 0 goto $z11 = 0;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
if z9 == 0 goto $z11 = 0;
";
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
z9 = $z8;
$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>();
if $z10 == 0 goto $z11 = 0;
"->"Block 15:
[preds: 12 13 ] [succs: 16 ]
$z11 = 0;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if z9 == 0 goto $z11 = 0;
"->"Block 14:
[preds: 13 ] [succs: 16 ]
$z11 = 1;
goto [?= z12 = $z11];
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
if z9 == 0 goto $z11 = 0;
"->"Block 15:
[preds: 12 13 ] [succs: 16 ]
$z11 = 0;
";
    "Block 14:
[preds: 13 ] [succs: 16 ]
$z11 = 1;
goto [?= z12 = $z11];
"->"Block 16:
[preds: 14 15 ] [succs: 17 19 ]
z12 = $z11;
$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>();
if $z13 == 0 goto $z14 = 0;
";
    "Block 15:
[preds: 12 13 ] [succs: 16 ]
$z11 = 0;
"->"Block 16:
[preds: 14 15 ] [succs: 17 19 ]
z12 = $z11;
$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>();
if $z13 == 0 goto $z14 = 0;
";
    "Block 16:
[preds: 14 15 ] [succs: 17 19 ]
z12 = $z11;
$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>();
if $z13 == 0 goto $z14 = 0;
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
if z12 == 0 goto $z14 = 0;
";
    "Block 16:
[preds: 14 15 ] [succs: 17 19 ]
z12 = $z11;
$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>();
if $z13 == 0 goto $z14 = 0;
"->"Block 19:
[preds: 16 17 ] [succs: 20 ]
$z14 = 0;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if z12 == 0 goto $z14 = 0;
"->"Block 18:
[preds: 17 ] [succs: 20 ]
$z14 = 1;
goto [?= z15 = $z14];
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if z12 == 0 goto $z14 = 0;
"->"Block 19:
[preds: 16 17 ] [succs: 20 ]
$z14 = 0;
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z14 = 1;
goto [?= z15 = $z14];
"->"Block 20:
[preds: 18 19 ] [succs: 21 23 ]
z15 = $z14;
$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>();
if $z16 == 0 goto $z17 = 0;
";
    "Block 19:
[preds: 16 17 ] [succs: 20 ]
$z14 = 0;
"->"Block 20:
[preds: 18 19 ] [succs: 21 23 ]
z15 = $z14;
$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>();
if $z16 == 0 goto $z17 = 0;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
z15 = $z14;
$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>();
if $z16 == 0 goto $z17 = 0;
"->"Block 21:
[preds: 20 ] [succs: 22 23 ]
if z15 == 0 goto $z17 = 0;
";
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
z15 = $z14;
$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>();
if $z16 == 0 goto $z17 = 0;
"->"Block 23:
[preds: 20 21 ] [succs: 24 ]
$z17 = 0;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z15 == 0 goto $z17 = 0;
"->"Block 22:
[preds: 21 ] [succs: 24 ]
$z17 = 1;
goto [?= z18 = $z17];
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z15 == 0 goto $z17 = 0;
"->"Block 23:
[preds: 20 21 ] [succs: 24 ]
$z17 = 0;
";
    "Block 22:
[preds: 21 ] [succs: 24 ]
$z17 = 1;
goto [?= z18 = $z17];
"->"Block 24:
[preds: 22 23 ] [succs: 25 27 ]
z18 = $z17;
$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>();
if $z19 == 0 goto $z20 = 0;
";
    "Block 23:
[preds: 20 21 ] [succs: 24 ]
$z17 = 0;
"->"Block 24:
[preds: 22 23 ] [succs: 25 27 ]
z18 = $z17;
$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>();
if $z19 == 0 goto $z20 = 0;
";
    "Block 24:
[preds: 22 23 ] [succs: 25 27 ]
z18 = $z17;
$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>();
if $z19 == 0 goto $z20 = 0;
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
if z18 == 0 goto $z20 = 0;
";
    "Block 24:
[preds: 22 23 ] [succs: 25 27 ]
z18 = $z17;
$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>();
if $z19 == 0 goto $z20 = 0;
"->"Block 27:
[preds: 24 25 ] [succs: 28 ]
$z20 = 0;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if z18 == 0 goto $z20 = 0;
"->"Block 26:
[preds: 25 ] [succs: 28 ]
$z20 = 1;
goto [?= z21 = $z20];
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
if z18 == 0 goto $z20 = 0;
"->"Block 27:
[preds: 24 25 ] [succs: 28 ]
$z20 = 0;
";
    "Block 26:
[preds: 25 ] [succs: 28 ]
$z20 = 1;
goto [?= z21 = $z20];
"->"Block 28:
[preds: 26 27 ] [succs: 29 31 ]
z21 = $z20;
$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>();
if $z22 == 0 goto $z23 = 0;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 ]
$z20 = 0;
"->"Block 28:
[preds: 26 27 ] [succs: 29 31 ]
z21 = $z20;
$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>();
if $z22 == 0 goto $z23 = 0;
";
    "Block 28:
[preds: 26 27 ] [succs: 29 31 ]
z21 = $z20;
$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>();
if $z22 == 0 goto $z23 = 0;
"->"Block 29:
[preds: 28 ] [succs: 30 31 ]
if z21 == 0 goto $z23 = 0;
";
    "Block 28:
[preds: 26 27 ] [succs: 29 31 ]
z21 = $z20;
$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>();
if $z22 == 0 goto $z23 = 0;
"->"Block 31:
[preds: 28 29 ] [succs: 32 ]
$z23 = 0;
";
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
if z21 == 0 goto $z23 = 0;
"->"Block 30:
[preds: 29 ] [succs: 32 ]
$z23 = 1;
goto [?= z24 = $z23];
";
    "Block 29:
[preds: 28 ] [succs: 30 31 ]
if z21 == 0 goto $z23 = 0;
"->"Block 31:
[preds: 28 29 ] [succs: 32 ]
$z23 = 0;
";
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z23 = 1;
goto [?= z24 = $z23];
"->"Block 32:
[preds: 30 31 ] [succs: 33 35 ]
z24 = $z23;
$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>();
if $z25 == 0 goto $z26 = 0;
";
    "Block 31:
[preds: 28 29 ] [succs: 32 ]
$z23 = 0;
"->"Block 32:
[preds: 30 31 ] [succs: 33 35 ]
z24 = $z23;
$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>();
if $z25 == 0 goto $z26 = 0;
";
    "Block 32:
[preds: 30 31 ] [succs: 33 35 ]
z24 = $z23;
$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>();
if $z25 == 0 goto $z26 = 0;
"->"Block 33:
[preds: 32 ] [succs: 34 35 ]
if z24 == 0 goto $z26 = 0;
";
    "Block 32:
[preds: 30 31 ] [succs: 33 35 ]
z24 = $z23;
$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>();
if $z25 == 0 goto $z26 = 0;
"->"Block 35:
[preds: 32 33 ] [succs: 36 ]
$z26 = 0;
";
    "Block 33:
[preds: 32 ] [succs: 34 35 ]
if z24 == 0 goto $z26 = 0;
"->"Block 34:
[preds: 33 ] [succs: 36 ]
$z26 = 1;
goto [?= z27 = $z26];
";
    "Block 33:
[preds: 32 ] [succs: 34 35 ]
if z24 == 0 goto $z26 = 0;
"->"Block 35:
[preds: 32 33 ] [succs: 36 ]
$z26 = 0;
";
    "Block 34:
[preds: 33 ] [succs: 36 ]
$z26 = 1;
goto [?= z27 = $z26];
"->"Block 36:
[preds: 34 35 ] [succs: 37 39 ]
z27 = $z26;
$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>();
if $z28 == 0 goto $z29 = 0;
";
    "Block 35:
[preds: 32 33 ] [succs: 36 ]
$z26 = 0;
"->"Block 36:
[preds: 34 35 ] [succs: 37 39 ]
z27 = $z26;
$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>();
if $z28 == 0 goto $z29 = 0;
";
    "Block 36:
[preds: 34 35 ] [succs: 37 39 ]
z27 = $z26;
$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>();
if $z28 == 0 goto $z29 = 0;
"->"Block 37:
[preds: 36 ] [succs: 38 39 ]
if z27 == 0 goto $z29 = 0;
";
    "Block 36:
[preds: 34 35 ] [succs: 37 39 ]
z27 = $z26;
$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>();
if $z28 == 0 goto $z29 = 0;
"->"Block 39:
[preds: 36 37 ] [succs: 40 ]
$z29 = 0;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
if z27 == 0 goto $z29 = 0;
"->"Block 38:
[preds: 37 ] [succs: 40 ]
$z29 = 1;
goto [?= z30 = $z29];
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
if z27 == 0 goto $z29 = 0;
"->"Block 39:
[preds: 36 37 ] [succs: 40 ]
$z29 = 0;
";
    "Block 38:
[preds: 37 ] [succs: 40 ]
$z29 = 1;
goto [?= z30 = $z29];
"->"Block 40:
[preds: 38 39 ] [succs: 41 43 ]
z30 = $z29;
$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>();
if $z31 == 0 goto $z32 = 0;
";
    "Block 39:
[preds: 36 37 ] [succs: 40 ]
$z29 = 0;
"->"Block 40:
[preds: 38 39 ] [succs: 41 43 ]
z30 = $z29;
$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>();
if $z31 == 0 goto $z32 = 0;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 43 ]
z30 = $z29;
$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>();
if $z31 == 0 goto $z32 = 0;
"->"Block 41:
[preds: 40 ] [succs: 42 43 ]
if z30 == 0 goto $z32 = 0;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 43 ]
z30 = $z29;
$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>();
if $z31 == 0 goto $z32 = 0;
"->"Block 43:
[preds: 40 41 ] [succs: 44 ]
$z32 = 0;
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
if z30 == 0 goto $z32 = 0;
"->"Block 42:
[preds: 41 ] [succs: 44 ]
$z32 = 1;
goto [?= z33 = $z32];
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
if z30 == 0 goto $z32 = 0;
"->"Block 43:
[preds: 40 41 ] [succs: 44 ]
$z32 = 0;
";
    "Block 42:
[preds: 41 ] [succs: 44 ]
$z32 = 1;
goto [?= z33 = $z32];
"->"Block 44:
[preds: 42 43 ] [succs: 45 47 ]
z33 = $z32;
$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>();
if $z34 == 0 goto $z35 = 0;
";
    "Block 43:
[preds: 40 41 ] [succs: 44 ]
$z32 = 0;
"->"Block 44:
[preds: 42 43 ] [succs: 45 47 ]
z33 = $z32;
$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>();
if $z34 == 0 goto $z35 = 0;
";
    "Block 44:
[preds: 42 43 ] [succs: 45 47 ]
z33 = $z32;
$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>();
if $z34 == 0 goto $z35 = 0;
"->"Block 45:
[preds: 44 ] [succs: 46 47 ]
if z33 == 0 goto $z35 = 0;
";
    "Block 44:
[preds: 42 43 ] [succs: 45 47 ]
z33 = $z32;
$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>();
if $z34 == 0 goto $z35 = 0;
"->"Block 47:
[preds: 44 45 ] [succs: 48 ]
$z35 = 0;
";
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
if z33 == 0 goto $z35 = 0;
"->"Block 46:
[preds: 45 ] [succs: 48 ]
$z35 = 1;
goto [?= z36 = $z35];
";
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
if z33 == 0 goto $z35 = 0;
"->"Block 47:
[preds: 44 45 ] [succs: 48 ]
$z35 = 0;
";
    "Block 46:
[preds: 45 ] [succs: 48 ]
$z35 = 1;
goto [?= z36 = $z35];
"->"Block 48:
[preds: 46 47 ] [succs: 49 51 ]
z36 = $z35;
$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>();
if $z37 == 0 goto $z38 = 0;
";
    "Block 47:
[preds: 44 45 ] [succs: 48 ]
$z35 = 0;
"->"Block 48:
[preds: 46 47 ] [succs: 49 51 ]
z36 = $z35;
$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>();
if $z37 == 0 goto $z38 = 0;
";
    "Block 48:
[preds: 46 47 ] [succs: 49 51 ]
z36 = $z35;
$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>();
if $z37 == 0 goto $z38 = 0;
"->"Block 49:
[preds: 48 ] [succs: 50 51 ]
if z36 == 0 goto $z38 = 0;
";
    "Block 48:
[preds: 46 47 ] [succs: 49 51 ]
z36 = $z35;
$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>();
if $z37 == 0 goto $z38 = 0;
"->"Block 51:
[preds: 48 49 ] [succs: 52 ]
$z38 = 0;
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
if z36 == 0 goto $z38 = 0;
"->"Block 50:
[preds: 49 ] [succs: 52 ]
$z38 = 1;
goto [?= z39 = $z38];
";
    "Block 49:
[preds: 48 ] [succs: 50 51 ]
if z36 == 0 goto $z38 = 0;
"->"Block 51:
[preds: 48 49 ] [succs: 52 ]
$z38 = 0;
";
    "Block 50:
[preds: 49 ] [succs: 52 ]
$z38 = 1;
goto [?= z39 = $z38];
"->"Block 52:
[preds: 50 51 ] [succs: 53 54 ]
z39 = $z38;
if z39 == 0 goto $r0 = new java.lang.RuntimeException;
";
    "Block 51:
[preds: 48 49 ] [succs: 52 ]
$z38 = 0;
"->"Block 52:
[preds: 50 51 ] [succs: 53 54 ]
z39 = $z38;
if z39 == 0 goto $r0 = new java.lang.RuntimeException;
";
    "Block 52:
[preds: 50 51 ] [succs: 53 54 ]
z39 = $z38;
if z39 == 0 goto $r0 = new java.lang.RuntimeException;
"->"Block 53:
[preds: 52 ] [succs: 55 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
";
    "Block 52:
[preds: 50 51 ] [succs: 53 54 ]
z39 = $z38;
if z39 == 0 goto $r0 = new java.lang.RuntimeException;
"->"Block 54:
[preds: 52 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\");
throw $r0;
";
    "Block 53:
[preds: 52 ] [succs: 55 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
"->"Block 55:
[preds: 53 ] [succs: ]
return;
";
}
