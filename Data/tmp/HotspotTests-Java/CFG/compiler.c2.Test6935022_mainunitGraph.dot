digraph "unitGraph" {
    "r16 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.c2.Test6935022"
    "specialinvoke $r0.<compiler.c2.Test6935022: void <init>()>()"
    "r1 = $r0"
    "i2 = 0"
    "goto [?= (branch)]"
    "i2 = i2 + 1"
    "$i0 = i2 & 1023"
    "if $i0 != 0 goto $i1 = i2 & 1023"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread=\")"
    "$r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"
    "$r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>()"
    "$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iteration: \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "$i1 = i2 & 1023"
    "specialinvoke r1.<compiler.c2.Test6935022: void loop(int,int)>(2147483647, $i1)"
    "$r10 := @caughtexception"
    "r11 = $r10"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Caught on iteration \")"
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15)"
    "virtualinvoke r11.<java.lang.Exception: void printStackTrace()>()"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "if i2 < 10000 goto i2 = i2 + 1"
    "return"
    "r16 := @parameter0: java.lang.String[]"->"$r0 = new compiler.c2.Test6935022";
    "$r0 = new compiler.c2.Test6935022"->"specialinvoke $r0.<compiler.c2.Test6935022: void <init>()>()";
    "specialinvoke $r0.<compiler.c2.Test6935022: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10000 goto i2 = i2 + 1";
    "i2 = i2 + 1"->"$i0 = i2 & 1023";
    "i2 = i2 + 1"->"$r10 := @caughtexception";
    "$i0 = i2 & 1023"->"if $i0 != 0 goto $i1 = i2 & 1023";
    "$i0 = i2 & 1023"->"$r10 := @caughtexception";
    "if $i0 != 0 goto $i1 = i2 & 1023"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 != 0 goto $i1 = i2 & 1023"->"$i1 = i2 & 1023";
    "if $i0 != 0 goto $i1 = i2 & 1023"->"$r10 := @caughtexception";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r10 := @caughtexception";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread=\")";
    "$r2 = new java.lang.StringBuilder"->"$r10 := @caughtexception";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread=\")"->"$r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Thread=\")"->"$r10 := @caughtexception";
    "$r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"$r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>()";
    "$r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"$r10 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>()"->"$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)";
    "$r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>()"->"$r10 := @caughtexception";
    "$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iteration: \")";
    "$r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"->"$r10 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iteration: \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" iteration: \")"->"$r10 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r10 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r10 := @caughtexception";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"$i1 = i2 & 1023";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"$r10 := @caughtexception";
    "$i1 = i2 & 1023"->"specialinvoke r1.<compiler.c2.Test6935022: void loop(int,int)>(2147483647, $i1)";
    "$i1 = i2 & 1023"->"$r10 := @caughtexception";
    "specialinvoke r1.<compiler.c2.Test6935022: void loop(int,int)>(2147483647, $i1)"->"goto [?= (branch)]";
    "specialinvoke r1.<compiler.c2.Test6935022: void loop(int,int)>(2147483647, $i1)"->"$r10 := @caughtexception";
    "goto [?= (branch)]"->"if i2 < 10000 goto i2 = i2 + 1";
    "$r10 := @caughtexception"->"r11 = $r10";
    "r11 = $r10"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Caught on iteration \")";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Caught on iteration \")"->"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15)";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15)"->"virtualinvoke r11.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r11.<java.lang.Exception: void printStackTrace()>()"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"if i2 < 10000 goto i2 = i2 + 1";
    "if i2 < 10000 goto i2 = i2 + 1"->"return";
    "if i2 < 10000 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "if i2 < 10000 goto i2 = i2 + 1"->"$r10 := @caughtexception";
}
