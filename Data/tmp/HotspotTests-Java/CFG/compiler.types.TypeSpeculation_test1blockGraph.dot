digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new compiler.types.TypeSpeculation$A;
specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>();
r1 = $r0;
$r2 = new compiler.types.TypeSpeculation$B;
specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>();
r3 = $r2;
$r4 = new compiler.types.TypeSpeculation$C;
specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>();
r5 = $r4;
i6 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r3);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r5);
i6 = i6 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 5000 goto staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
"
    "Block 3:
[preds: 2 ] [succs: 7 ]
i7 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 7 ] [succs: 5 6 ]
i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
$i4 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>();
if i3 == $i4 goto i7 = i7 + 1;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"test1 failed with class B\");
return 0;
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
i7 = i7 + 1;
"
    "Block 7:
[preds: 3 6 ] [succs: 8 4 ]
if i7 < 20000 goto i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
i8 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r1);
$i5 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>();
if i8 == $i5 goto return 1;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"test1 failed with class A\");
return 0;
"
    "Block 10:
[preds: 8 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new compiler.types.TypeSpeculation$A;
specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>();
r1 = $r0;
$r2 = new compiler.types.TypeSpeculation$B;
specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>();
r3 = $r2;
$r4 = new compiler.types.TypeSpeculation$C;
specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>();
r5 = $r4;
i6 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 5000 goto staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r3);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r5);
i6 = i6 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 5000 goto staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 5000 goto staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
"->"Block 3:
[preds: 2 ] [succs: 7 ]
i7 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 5000 goto staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r1);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r3);
staticinvoke <compiler.types.TypeSpeculation: int test1_invokevirtual(compiler.types.TypeSpeculation$A)>(r5);
i6 = i6 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 7 ]
i7 = 0;
goto [?= (branch)];
"->"Block 7:
[preds: 3 6 ] [succs: 8 4 ]
if i7 < 20000 goto i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
";
    "Block 4:
[preds: 7 ] [succs: 5 6 ]
i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
$i4 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>();
if i3 == $i4 goto i7 = i7 + 1;
"->"Block 5:
[preds: 4 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"test1 failed with class B\");
return 0;
";
    "Block 4:
[preds: 7 ] [succs: 5 6 ]
i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
$i4 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>();
if i3 == $i4 goto i7 = i7 + 1;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
i7 = i7 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
i7 = i7 + 1;
"->"Block 7:
[preds: 3 6 ] [succs: 8 4 ]
if i7 < 20000 goto i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
";
    "Block 7:
[preds: 3 6 ] [succs: 8 4 ]
if i7 < 20000 goto i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
i8 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r1);
$i5 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>();
if i8 == $i5 goto return 1;
";
    "Block 7:
[preds: 3 6 ] [succs: 8 4 ]
if i7 < 20000 goto i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
"->"Block 4:
[preds: 7 ] [succs: 5 6 ]
i3 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r3);
$i4 = virtualinvoke r3.<compiler.types.TypeSpeculation$B: int m()>();
if i3 == $i4 goto i7 = i7 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
i8 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r1);
$i5 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>();
if i8 == $i5 goto return 1;
"->"Block 9:
[preds: 8 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"test1 failed with class A\");
return 0;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
i8 = staticinvoke <compiler.types.TypeSpeculation: int test1_1(compiler.types.TypeSpeculation$A)>(r1);
$i5 = virtualinvoke r1.<compiler.types.TypeSpeculation$A: int m()>();
if i8 == $i5 goto return 1;
"->"Block 10:
[preds: 8 ] [succs: ]
return 1;
";
}
