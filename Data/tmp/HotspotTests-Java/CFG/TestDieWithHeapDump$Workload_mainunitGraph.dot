digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "i1 = 0"
    "goto [?= $i0 = <TestDieWithHeapDump$Workload: int COUNT>]"
    "$r0 = new java.lang.Object"
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"
    "<TestDieWithHeapDump$Workload: java.lang.Object sink> = $r0"
    "i1 = i1 + 1"
    "$i0 = <TestDieWithHeapDump$Workload: int COUNT>"
    "if i1 < $i0 goto $r0 = new java.lang.Object"
    "return"
    "r1 := @parameter0: java.lang.String[]"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = <TestDieWithHeapDump$Workload: int COUNT>]";
    "goto [?= $i0 = <TestDieWithHeapDump$Workload: int COUNT>]"->"$i0 = <TestDieWithHeapDump$Workload: int COUNT>";
    "$r0 = new java.lang.Object"->"specialinvoke $r0.<java.lang.Object: void <init>()>()";
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"->"<TestDieWithHeapDump$Workload: java.lang.Object sink> = $r0";
    "<TestDieWithHeapDump$Workload: java.lang.Object sink> = $r0"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i0 = <TestDieWithHeapDump$Workload: int COUNT>";
    "$i0 = <TestDieWithHeapDump$Workload: int COUNT>"->"if i1 < $i0 goto $r0 = new java.lang.Object";
    "if i1 < $i0 goto $r0 = new java.lang.Object"->"return";
    "if i1 < $i0 goto $r0 = new java.lang.Object"->"$r0 = new java.lang.Object";
}
