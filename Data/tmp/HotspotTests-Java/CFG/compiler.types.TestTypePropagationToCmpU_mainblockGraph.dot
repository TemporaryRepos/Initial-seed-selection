digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
r2 := @parameter0: java.lang.String[];
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 5 7 ]
goto [?= (branch)];
"
    "Block 3:
[preds: 5 ] [succs: 4 7 ]
staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"
    "Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
"
    "Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
"
    "Block 8:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
r2 := @parameter0: java.lang.String[];
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
";
    "Block 0:
[preds: ] [succs: 1 7 ]
r2 := @parameter0: java.lang.String[];
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 2:
[preds: 1 ] [succs: 5 7 ]
goto [?= (branch)];
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 2:
[preds: 1 ] [succs: 5 7 ]
goto [?= (branch)];
"->"Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
";
    "Block 2:
[preds: 1 ] [succs: 5 7 ]
goto [?= (branch)];
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 3:
[preds: 5 ] [succs: 4 7 ]
staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
";
    "Block 3:
[preds: 5 ] [succs: 4 7 ]
staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"->"Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
";
    "Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"->"Block 3:
[preds: 5 ] [succs: 4 7 ]
staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
";
    "Block 5:
[preds: 2 4 ] [succs: 6 3 7 ]
if i0 < 100000 goto staticinvoke <compiler.types.TestTypePropagationToCmpU: void test()>();
"->"Block 7:
[preds: 0 1 2 5 3 4 ] [succs: ]
$r0 := @caughtexception;
$r1 = new java.lang.RuntimeException;
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return];
"->"Block 8:
[preds: 6 ] [succs: ]
return;
";
}
