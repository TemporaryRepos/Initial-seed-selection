digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i0 = i3 & 1"
    "$i1 = $i0 << 1"
    "<compiler.c2.Test7048332: int last> = $i1"
    "i2 = staticinvoke <compiler.c2.Test7048332: int test(int,int,int,int,int,int)>(1, 2, 3, 4, 5, 6)"
    "if i2 == 1 goto i3 = i3 + 1"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED: \")"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 1\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "i3 = i3 + 1"
    "if i3 < 11000 goto $i0 = i3 & 1"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 11000 goto $i0 = i3 & 1";
    "$i0 = i3 & 1"->"$i1 = $i0 << 1";
    "$i1 = $i0 << 1"->"<compiler.c2.Test7048332: int last> = $i1";
    "<compiler.c2.Test7048332: int last> = $i1"->"i2 = staticinvoke <compiler.c2.Test7048332: int test(int,int,int,int,int,int)>(1, 2, 3, 4, 5, 6)";
    "i2 = staticinvoke <compiler.c2.Test7048332: int test(int,int,int,int,int,int)>(1, 2, 3, 4, 5, 6)"->"if i2 == 1 goto i3 = i3 + 1";
    "if i2 == 1 goto i3 = i3 + 1"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i2 == 1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED: \")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED: \")"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 1\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 1\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 11000 goto $i0 = i3 & 1";
    "if i3 < 11000 goto $i0 = i3 & 1"->"return";
    "if i3 < 11000 goto $i0 = i3 & 1"->"$i0 = i3 & 1";
}
