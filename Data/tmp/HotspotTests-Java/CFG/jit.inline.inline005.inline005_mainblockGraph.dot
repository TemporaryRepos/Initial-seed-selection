digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
d0 = 31.5;
$d1 = staticinvoke <jit.inline.inline005.inline005: double fun(double)>(d0);
$d2 = staticinvoke <jit.inline.inline005.inline005: double fun_correct(double)>(d0);
$b0 = $d1 cmpl $d2;
if $b0 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" Error: result = \");
$d3 = staticinvoke <jit.inline.inline005.inline005: double fun(double)>(d0);
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"       must be = \");
$d4 = staticinvoke <jit.inline.inline005.inline005: double fun_correct(double)>(d0);
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);
$r9 = new nsk.share.TestFailure;
specialinvoke $r9.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"TEST FAILED\");
throw $r9;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
d0 = 31.5;
$d1 = staticinvoke <jit.inline.inline005.inline005: double fun(double)>(d0);
$d2 = staticinvoke <jit.inline.inline005.inline005: double fun_correct(double)>(d0);
$b0 = $d1 cmpl $d2;
if $b0 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" Error: result = \");
$d3 = staticinvoke <jit.inline.inline005.inline005: double fun(double)>(d0);
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"       must be = \");
$d4 = staticinvoke <jit.inline.inline005.inline005: double fun_correct(double)>(d0);
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);
$r9 = new nsk.share.TestFailure;
specialinvoke $r9.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"TEST FAILED\");
throw $r9;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @parameter0: java.lang.String[];
d0 = 31.5;
$d1 = staticinvoke <jit.inline.inline005.inline005: double fun(double)>(d0);
$d2 = staticinvoke <jit.inline.inline005.inline005: double fun_correct(double)>(d0);
$b0 = $d1 cmpl $d2;
if $b0 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 0 ] [succs: ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
return;
";
}
