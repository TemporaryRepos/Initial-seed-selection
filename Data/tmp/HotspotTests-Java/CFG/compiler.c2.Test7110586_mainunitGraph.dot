digraph "unitGraph" {
    "r40 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "i1 = 0"
    "i2 = 0"
    "i3 = 0"
    "i4 = 0"
    "i5 = 0"
    "i6 = 0"
    "i7 = 0"
    "i8 = 0"
    "goto [?= (branch)]"
    "i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()"
    "i1 = staticinvoke <compiler.c2.Test7110586: int test2()>()"
    "i2 = staticinvoke <compiler.c2.Test7110586: int test3()>()"
    "i3 = staticinvoke <compiler.c2.Test7110586: int test11()>()"
    "i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>()"
    "i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>()"
    "i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>()"
    "i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>()"
    "i8 = i8 + 1"
    "if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()"
    "z0 = 0"
    "if i0 == 11 goto (branch)"
    "$r36 = <java.lang.System: java.io.PrintStream out>"
    "$r35 = new java.lang.StringBuilder"
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \")"
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39)"
    "z0 = 1"
    "if i1 == 12 goto (branch)"
    "$r31 = <java.lang.System: java.io.PrintStream out>"
    "$r30 = new java.lang.StringBuilder"
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \")"
    "$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34)"
    "if i2 == 12 goto (branch)"
    "$r26 = <java.lang.System: java.io.PrintStream out>"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \")"
    "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)"
    "if i3 == 11 goto (branch)"
    "$r21 = <java.lang.System: java.io.PrintStream out>"
    "$r20 = new java.lang.StringBuilder"
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \")"
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24)"
    "if i4 == -11 goto (branch)"
    "$r16 = <java.lang.System: java.io.PrintStream out>"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \")"
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)"
    "if i5 == -12 goto (branch)"
    "$r11 = <java.lang.System: java.io.PrintStream out>"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \")"
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "if i6 == -12 goto (branch)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \")"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "if i7 == -11 goto (branch)"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \")"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)"
    "if z0 == 0 goto return"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "return"
    "r40 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"i4 = 0";
    "i4 = 0"->"i5 = 0";
    "i5 = 0"->"i6 = 0";
    "i6 = 0"->"i7 = 0";
    "i7 = 0"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()";
    "i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()"->"i1 = staticinvoke <compiler.c2.Test7110586: int test2()>()";
    "i1 = staticinvoke <compiler.c2.Test7110586: int test2()>()"->"i2 = staticinvoke <compiler.c2.Test7110586: int test3()>()";
    "i2 = staticinvoke <compiler.c2.Test7110586: int test3()>()"->"i3 = staticinvoke <compiler.c2.Test7110586: int test11()>()";
    "i3 = staticinvoke <compiler.c2.Test7110586: int test11()>()"->"i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>()";
    "i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>()"->"i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>()";
    "i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>()"->"i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>()";
    "i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>()"->"i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>()";
    "i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>()"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()";
    "if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()"->"z0 = 0";
    "if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()"->"i0 = staticinvoke <compiler.c2.Test7110586: int test1()>()";
    "z0 = 0"->"if i0 == 11 goto (branch)";
    "if i0 == 11 goto (branch)"->"$r36 = <java.lang.System: java.io.PrintStream out>";
    "if i0 == 11 goto (branch)"->"if i1 == 12 goto (branch)";
    "$r36 = <java.lang.System: java.io.PrintStream out>"->"$r35 = new java.lang.StringBuilder";
    "$r35 = new java.lang.StringBuilder"->"specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \")";
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \")"->"$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39)";
    "virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39)"->"z0 = 1";
    "z0 = 1"->"if i1 == 12 goto (branch)";
    "if i1 == 12 goto (branch)"->"$r31 = <java.lang.System: java.io.PrintStream out>";
    "if i1 == 12 goto (branch)"->"if i2 == 12 goto (branch)";
    "$r31 = <java.lang.System: java.io.PrintStream out>"->"$r30 = new java.lang.StringBuilder";
    "$r30 = new java.lang.StringBuilder"->"specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \")";
    "specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \")"->"$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34)";
    "virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34)"->"z0 = 1";
    "z0 = 1"->"if i2 == 12 goto (branch)";
    "if i2 == 12 goto (branch)"->"$r26 = <java.lang.System: java.io.PrintStream out>";
    "if i2 == 12 goto (branch)"->"if i3 == 11 goto (branch)";
    "$r26 = <java.lang.System: java.io.PrintStream out>"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \")";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \")"->"$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\")"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)";
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)"->"z0 = 1";
    "z0 = 1"->"if i3 == 11 goto (branch)";
    "if i3 == 11 goto (branch)"->"$r21 = <java.lang.System: java.io.PrintStream out>";
    "if i3 == 11 goto (branch)"->"if i4 == -11 goto (branch)";
    "$r21 = <java.lang.System: java.io.PrintStream out>"->"$r20 = new java.lang.StringBuilder";
    "$r20 = new java.lang.StringBuilder"->"specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \")";
    "specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \")"->"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24)";
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24)"->"z0 = 1";
    "z0 = 1"->"if i4 == -11 goto (branch)";
    "if i4 == -11 goto (branch)"->"$r16 = <java.lang.System: java.io.PrintStream out>";
    "if i4 == -11 goto (branch)"->"if i5 == -12 goto (branch)";
    "$r16 = <java.lang.System: java.io.PrintStream out>"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \")";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \")"->"$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)"->"z0 = 1";
    "z0 = 1"->"if i5 == -12 goto (branch)";
    "if i5 == -12 goto (branch)"->"$r11 = <java.lang.System: java.io.PrintStream out>";
    "if i5 == -12 goto (branch)"->"if i6 == -12 goto (branch)";
    "$r11 = <java.lang.System: java.io.PrintStream out>"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \")";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \")"->"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)";
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"z0 = 1";
    "z0 = 1"->"if i6 == -12 goto (branch)";
    "if i6 == -12 goto (branch)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if i6 == -12 goto (branch)"->"if i7 == -11 goto (branch)";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \")";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \")"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"z0 = 1";
    "z0 = 1"->"if i7 == -11 goto (branch)";
    "if i7 == -11 goto (branch)"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i7 == -11 goto (branch)"->"if z0 == 0 goto return";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \")"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4)"->"z0 = 1";
    "z0 = 1"->"if z0 == 0 goto return";
    "if z0 == 0 goto return"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "if z0 == 0 goto return"->"return";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"return";
}
