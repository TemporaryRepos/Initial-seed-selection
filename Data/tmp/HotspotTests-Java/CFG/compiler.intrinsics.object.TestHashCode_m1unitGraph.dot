digraph "unitGraph" {
    "r1 := @parameter0: compiler.intrinsics.object.TestHashCode$A"
    "i1 = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()"
    "$i0 = r0.<compiler.intrinsics.object.TestHashCode$A: int i>"
    "i1 = i1 + 10000"
    "i2 = i2 + 1"
    "if i2 < 10 goto r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()"
    "return i1"
    "r1 := @parameter0: compiler.intrinsics.object.TestHashCode$A"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10 goto r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()";
    "r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()"->"$i0 = r0.<compiler.intrinsics.object.TestHashCode$A: int i>";
    "$i0 = r0.<compiler.intrinsics.object.TestHashCode$A: int i>"->"i1 = i1 + 10000";
    "i1 = i1 + 10000"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 10 goto r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()";
    "if i2 < 10 goto r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()"->"return i1";
    "if i2 < 10 goto r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()"->"r0 = staticinvoke <compiler.intrinsics.object.TestHashCode: compiler.intrinsics.object.TestHashCode$A m2()>()";
}
