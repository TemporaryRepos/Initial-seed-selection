digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i0, -123);
$i1 = i2 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, -103);
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 94 goto $i0 = i2 + 3;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i2 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 94 goto $i0 = i2 + 3;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i0, -123);
$i1 = i2 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, -103);
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 94 goto $i0 = i2 + 3;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 94 goto $i0 = i2 + 3;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 94 goto $i0 = i2 + 3;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = i2 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i0, -123);
$i1 = i2 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, -103);
i2 = i2 + 1;
";
}
