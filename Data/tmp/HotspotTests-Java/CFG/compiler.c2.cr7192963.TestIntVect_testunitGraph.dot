digraph "unitGraph" {
    "r0 = newarray (int)[997]"
    "r1 = newarray (int)[997]"
    "i22 = 0"
    "goto [?= (branch)]"
    "r1[i22] = i22"
    "i22 = i22 + 1"
    "if i22 < 997 goto r1[i22] = i22"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i23 = 0"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"
    "i23 = i23 + 1"
    "if i23 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i24 = 0"
    "i25 = 0"
    "$i1 = r0[i25]"
    "$i0 = i25 & 3"
    "$i2 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_init: \", i25, $i1, $i0)"
    "i24 = i24 + $i2"
    "i25 = i25 + 1"
    "if i25 < 997 goto $i1 = r0[i25]"
    "i26 = 0"
    "$i5 = r0[i26]"
    "$i3 = i26 & 3"
    "$i4 = i26 + $i3"
    "$i6 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addi: \", i26, $i5, $i4)"
    "i24 = i24 + $i6"
    "i26 = i26 + 1"
    "if i26 < 997 goto $i5 = r0[i26]"
    "i27 = 0"
    "$i9 = r0[i27]"
    "$i7 = i27 & 3"
    "$i8 = i27 << $i7"
    "$i10 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_lsai: \", i27, $i9, $i8)"
    "i24 = i24 + $i10"
    "i27 = i27 + 1"
    "if i27 < 997 goto $i9 = r0[i27]"
    "i28 = 0"
    "$i12 = r0[i28]"
    "$i11 = i28 & 3"
    "$i13 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_init: \", i28, $i12, $i11)"
    "i24 = i24 + $i13"
    "i28 = i28 + 1"
    "if i28 < 997 goto $i12 = r0[i28]"
    "i29 = 0"
    "$i16 = r0[i29]"
    "$i14 = i29 & 3"
    "$i15 = i29 + $i14"
    "$i17 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_addi: \", i29, $i16, $i15)"
    "i24 = i24 + $i17"
    "i29 = i29 + 1"
    "if i29 < 997 goto $i16 = r0[i29]"
    "i30 = 0"
    "$i20 = r0[i30]"
    "$i18 = i30 & 3"
    "$i19 = i30 << $i18"
    "$i21 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_lsai: \", i30, $i20, $i19)"
    "i24 = i24 + $i21"
    "i30 = i30 + 1"
    "if i30 < 997 goto $i20 = r0[i30]"
    "if i24 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "return i24"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i31 = 0"
    "i31 = i31 + 1"
    "if i31 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"
    "i32 = 0"
    "i32 = i32 + 1"
    "if i32 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"
    "i33 = 0"
    "i33 = i33 + 1"
    "if i33 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"
    "i34 = 0"
    "i34 = i34 + 1"
    "if i34 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"
    "i35 = 0"
    "i35 = i35 + 1"
    "if i35 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"
    "i36 = 0"
    "i36 = i36 + 1"
    "if i36 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"
    "r0 = newarray (int)[997]"->"r1 = newarray (int)[997]";
    "r1 = newarray (int)[997]"->"i22 = 0";
    "i22 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i22 < 997 goto r1[i22] = i22";
    "r1[i22] = i22"->"i22 = i22 + 1";
    "i22 = i22 + 1"->"if i22 < 997 goto r1[i22] = i22";
    "if i22 < 997 goto r1[i22] = i22"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if i22 < 997 goto r1[i22] = i22"->"r1[i22] = i22";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i23 = 0";
    "i23 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i23 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"->"i23 = i23 + 1";
    "i23 = i23 + 1"->"if i23 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "if i23 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if i23 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i24 = 0";
    "i24 = 0"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"i25 = 0";
    "i25 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i25 < 997 goto $i1 = r0[i25]";
    "$i1 = r0[i25]"->"$i0 = i25 & 3";
    "$i0 = i25 & 3"->"$i2 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_init: \", i25, $i1, $i0)";
    "$i2 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_init: \", i25, $i1, $i0)"->"i24 = i24 + $i2";
    "i24 = i24 + $i2"->"i25 = i25 + 1";
    "i25 = i25 + 1"->"if i25 < 997 goto $i1 = r0[i25]";
    "if i25 < 997 goto $i1 = r0[i25]"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)";
    "if i25 < 997 goto $i1 = r0[i25]"->"$i1 = r0[i25]";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"->"i26 = 0";
    "i26 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i26 < 997 goto $i5 = r0[i26]";
    "$i5 = r0[i26]"->"$i3 = i26 & 3";
    "$i3 = i26 & 3"->"$i4 = i26 + $i3";
    "$i4 = i26 + $i3"->"$i6 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addi: \", i26, $i5, $i4)";
    "$i6 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addi: \", i26, $i5, $i4)"->"i24 = i24 + $i6";
    "i24 = i24 + $i6"->"i26 = i26 + 1";
    "i26 = i26 + 1"->"if i26 < 997 goto $i5 = r0[i26]";
    "if i26 < 997 goto $i5 = r0[i26]"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)";
    "if i26 < 997 goto $i5 = r0[i26]"->"$i5 = r0[i26]";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"->"i27 = 0";
    "i27 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i27 < 997 goto $i9 = r0[i27]";
    "$i9 = r0[i27]"->"$i7 = i27 & 3";
    "$i7 = i27 & 3"->"$i8 = i27 << $i7";
    "$i8 = i27 << $i7"->"$i10 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_lsai: \", i27, $i9, $i8)";
    "$i10 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_lsai: \", i27, $i9, $i8)"->"i24 = i24 + $i10";
    "i24 = i24 + $i10"->"i27 = i27 + 1";
    "i27 = i27 + 1"->"if i27 < 997 goto $i9 = r0[i27]";
    "if i27 < 997 goto $i9 = r0[i27]"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)";
    "if i27 < 997 goto $i9 = r0[i27]"->"$i9 = r0[i27]";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"->"i28 = 0";
    "i28 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i28 < 997 goto $i12 = r0[i28]";
    "$i12 = r0[i28]"->"$i11 = i28 & 3";
    "$i11 = i28 & 3"->"$i13 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_init: \", i28, $i12, $i11)";
    "$i13 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_init: \", i28, $i12, $i11)"->"i24 = i24 + $i13";
    "i24 = i24 + $i13"->"i28 = i28 + 1";
    "i28 = i28 + 1"->"if i28 < 997 goto $i12 = r0[i28]";
    "if i28 < 997 goto $i12 = r0[i28]"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)";
    "if i28 < 997 goto $i12 = r0[i28]"->"$i12 = r0[i28]";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"->"i29 = 0";
    "i29 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i29 < 997 goto $i16 = r0[i29]";
    "$i16 = r0[i29]"->"$i14 = i29 & 3";
    "$i14 = i29 & 3"->"$i15 = i29 + $i14";
    "$i15 = i29 + $i14"->"$i17 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_addi: \", i29, $i16, $i15)";
    "$i17 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_addi: \", i29, $i16, $i15)"->"i24 = i24 + $i17";
    "i24 = i24 + $i17"->"i29 = i29 + 1";
    "i29 = i29 + 1"->"if i29 < 997 goto $i16 = r0[i29]";
    "if i29 < 997 goto $i16 = r0[i29]"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)";
    "if i29 < 997 goto $i16 = r0[i29]"->"$i16 = r0[i29]";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"->"i30 = 0";
    "i30 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i30 < 997 goto $i20 = r0[i30]";
    "$i20 = r0[i30]"->"$i18 = i30 & 3";
    "$i18 = i30 & 3"->"$i19 = i30 << $i18";
    "$i19 = i30 << $i18"->"$i21 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_lsai: \", i30, $i20, $i19)";
    "$i21 = staticinvoke <compiler.c2.cr7192963.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unrl_lsai: \", i30, $i20, $i19)"->"i24 = i24 + $i21";
    "i24 = i24 + $i21"->"i30 = i30 + 1";
    "i30 = i30 + 1"->"if i30 < 997 goto $i20 = r0[i30]";
    "if i30 < 997 goto $i20 = r0[i30]"->"if i24 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if i30 < 997 goto $i20 = r0[i30]"->"$i20 = r0[i30]";
    "if i24 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"return i24";
    "if i24 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i31 = 0";
    "i31 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i31 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"i31 = i31 + 1";
    "i31 = i31 + 1"->"if i31 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "if i31 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"i32 = 0";
    "if i31 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_init(int[])>(r0)";
    "i32 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i32 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"->"i32 = i32 + 1";
    "i32 = i32 + 1"->"if i32 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)";
    "if i32 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"->"i33 = 0";
    "if i32 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_addi(int[],int[])>(r0, r1)";
    "i33 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i33 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"->"i33 = i33 + 1";
    "i33 = i33 + 1"->"if i33 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)";
    "if i33 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"->"i34 = 0";
    "if i33 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_lsai(int[],int[])>(r0, r1)";
    "i34 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i34 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"->"i34 = i34 + 1";
    "i34 = i34 + 1"->"if i34 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)";
    "if i34 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"->"i35 = 0";
    "if i34 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_init(int[])>(r0)";
    "i35 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i35 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"->"i35 = i35 + 1";
    "i35 = i35 + 1"->"if i35 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)";
    "if i35 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"->"i36 = 0";
    "if i35 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_addi(int[],int[])>(r0, r1)";
    "i36 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i36 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"->"i36 = i36 + 1";
    "i36 = i36 + 1"->"if i36 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)";
    "if i36 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"->"return i24";
    "if i36 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestIntVect: void test_unrl_lsai(int[],int[])>(r0, r1)";
}
