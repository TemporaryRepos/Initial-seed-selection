digraph "unitGraph" {
    "r0 := @parameter0: byte[]"
    "i6 = 0"
    "goto [?= $i7 = lengthof r0]"
    "$b0 = r0[i6]"
    "$i1 = $b0 & 255"
    "if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$i4 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "$i5 = $i4 + 1"
    "<compiler.c2.TestUnsignedByteCompare: int p> = $i5"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1)"
    "goto [?= i6 = i6 + 1]"
    "$i2 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$i3 = $i2 + 1"
    "<compiler.c2.TestUnsignedByteCompare: int n> = $i3"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0)"
    "i6 = i6 + 1"
    "$i7 = lengthof r0"
    "if i6 < $i7 goto $b0 = r0[i6]"
    "return"
    "r0 := @parameter0: byte[]"->"i6 = 0";
    "i6 = 0"->"goto [?= $i7 = lengthof r0]";
    "goto [?= $i7 = lengthof r0]"->"$i7 = lengthof r0";
    "$b0 = r0[i6]"->"$i1 = $b0 & 255";
    "$i1 = $b0 & 255"->"if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i4 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i2 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "$i4 = <compiler.c2.TestUnsignedByteCompare: int p>"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"<compiler.c2.TestUnsignedByteCompare: int p> = $i5";
    "<compiler.c2.TestUnsignedByteCompare: int p> = $i5"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1)"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$i2 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i3 = $i2 + 1";
    "$i3 = $i2 + 1"->"<compiler.c2.TestUnsignedByteCompare: int n> = $i3";
    "<compiler.c2.TestUnsignedByteCompare: int n> = $i3"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i7 = lengthof r0";
    "$i7 = lengthof r0"->"if i6 < $i7 goto $b0 = r0[i6]";
    "if i6 < $i7 goto $b0 = r0[i6]"->"return";
    "if i6 < $i7 goto $b0 = r0[i6]"->"$b0 = r0[i6]";
}
