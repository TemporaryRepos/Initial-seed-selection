digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"
    "i2 := @parameter1: int"
    "i0 := @parameter2: int"
    "i4 := @parameter3: int"
    "i5 = 0"
    "goto [?= $i1 = 97 - i0]"
    "$i3 = i5 + i0"
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)"
    "i5 = i5 + 1"
    "$i1 = 97 - i0"
    "if i5 < $i1 goto $i3 = i5 + i0"
    "return"
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i4 := @parameter3: int";
    "i4 := @parameter3: int"->"i5 = 0";
    "i5 = 0"->"goto [?= $i1 = 97 - i0]";
    "goto [?= $i1 = 97 - i0]"->"$i1 = 97 - i0";
    "$i3 = i5 + i0"->"virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)";
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i3, i2)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i1 = 97 - i0";
    "$i1 = 97 - i0"->"if i5 < $i1 goto $i3 = i5 + i0";
    "if i5 < $i1 goto $i3 = i5 + i0"->"return";
    "if i5 < $i1 goto $i3 = i5 + i0"->"$i3 = i5 + i0";
}
