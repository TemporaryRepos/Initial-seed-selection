digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d8 := @parameter0: double;
b9 := @parameter1: byte;
i28 := @parameter2: int;
$i0 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>;
$i1 = $i0 - 1;
<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i1;
$z0 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>;
if $z0 == 0 goto $c2 = <compiler.c2.cr6714694.Tester: char var_40>;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$c11 = <compiler.c2.cr6714694.Tester: char var_40>;
$i12 = $c11 << -1682605056;
$c13 = (char) $i12;
<compiler.c2.cr6714694.Tester: char var_40> = $c13;
$z1 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>;
$r6 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b9][b9];
$r7 = $r6[b9];
$r8 = $r7[b9];
$r8.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = b9;
$r9 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r9;
$c14 = <compiler.c2.cr6714694.Tester: char var_40>;
$i15 = $c14 - 1;
$c16 = (char) $i15;
<compiler.c2.cr6714694.Tester: char var_40> = $c16;
$c17 = <compiler.c2.cr6714694.Tester: char var_40>;
$i18 = $c17 - 1;
$c19 = (char) $i18;
<compiler.c2.cr6714694.Tester: char var_40> = $c19;
$r10 = newmultiarray (compiler.c2.cr6714694.Tester_Class_2)[b9][b9];
$r11 = $r10[b9];
$r12 = $r11[b9];
$r13 = (compiler.c2.cr6714694.Tester_Class_3) $r12;
$l20 = $r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$d6 = (double) $l20;
$d4 = <compiler.c2.cr6714694.Tester: double var_36>;
$l23 = (long) b9;
$i21 = b9 ^ -1;
$l22 = (long) $i21;
$l24 = $l23 * $l22;
$d3 = (double) $l24;
$d5 = $d4 * $d3;
<compiler.c2.cr6714694.Tester: double var_36> = $d5;
$d7 = $d6 * $d5;
$l25 = (long) $d7;
$r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l25;
$r14 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r14;
$r15 = newarray (compiler.c2.cr6714694.Tester_Class_3)[b9];
$r16 = $r15[b9];
$l26 = $r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$l27 = $l26 + 1L;
$r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l27;
goto [?= $c6 = <compiler.c2.cr6714694.Tester: char var_40>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$c2 = <compiler.c2.cr6714694.Tester: char var_40>;
$i3 = $c2 + 1;
$c4 = (char) $i3;
<compiler.c2.cr6714694.Tester: char var_40> = $c4;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$c6 = <compiler.c2.cr6714694.Tester: char var_40>;
$c5 = <compiler.c2.cr6714694.Tester: char var_40>;
$i7 = $c6 << $c5;
$c8 = (char) $i7;
<compiler.c2.cr6714694.Tester: char var_40> = $c8;
i29 = i28 + 1;
$d1 = <compiler.c2.cr6714694.Tester: double var_36>;
$d0 = (double) b9;
$d2 = $d1 / $d0;
<compiler.c2.cr6714694.Tester: double var_36> = $d2;
$r0 = new java.lang.StringBuilder;
$r1 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"xhi\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();
i30 = i29 + 1;
$c10 = <compiler.c2.cr6714694.Tester: char var_40>;
return $c10;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d8 := @parameter0: double;
b9 := @parameter1: byte;
i28 := @parameter2: int;
$i0 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>;
$i1 = $i0 - 1;
<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i1;
$z0 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>;
if $z0 == 0 goto $c2 = <compiler.c2.cr6714694.Tester: char var_40>;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$c11 = <compiler.c2.cr6714694.Tester: char var_40>;
$i12 = $c11 << -1682605056;
$c13 = (char) $i12;
<compiler.c2.cr6714694.Tester: char var_40> = $c13;
$z1 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>;
$r6 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b9][b9];
$r7 = $r6[b9];
$r8 = $r7[b9];
$r8.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = b9;
$r9 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r9;
$c14 = <compiler.c2.cr6714694.Tester: char var_40>;
$i15 = $c14 - 1;
$c16 = (char) $i15;
<compiler.c2.cr6714694.Tester: char var_40> = $c16;
$c17 = <compiler.c2.cr6714694.Tester: char var_40>;
$i18 = $c17 - 1;
$c19 = (char) $i18;
<compiler.c2.cr6714694.Tester: char var_40> = $c19;
$r10 = newmultiarray (compiler.c2.cr6714694.Tester_Class_2)[b9][b9];
$r11 = $r10[b9];
$r12 = $r11[b9];
$r13 = (compiler.c2.cr6714694.Tester_Class_3) $r12;
$l20 = $r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$d6 = (double) $l20;
$d4 = <compiler.c2.cr6714694.Tester: double var_36>;
$l23 = (long) b9;
$i21 = b9 ^ -1;
$l22 = (long) $i21;
$l24 = $l23 * $l22;
$d3 = (double) $l24;
$d5 = $d4 * $d3;
<compiler.c2.cr6714694.Tester: double var_36> = $d5;
$d7 = $d6 * $d5;
$l25 = (long) $d7;
$r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l25;
$r14 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r14;
$r15 = newarray (compiler.c2.cr6714694.Tester_Class_3)[b9];
$r16 = $r15[b9];
$l26 = $r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$l27 = $l26 + 1L;
$r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l27;
goto [?= $c6 = <compiler.c2.cr6714694.Tester: char var_40>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d8 := @parameter0: double;
b9 := @parameter1: byte;
i28 := @parameter2: int;
$i0 = <compiler.c2.cr6714694.Tester_Class_3: int var_1>;
$i1 = $i0 - 1;
<compiler.c2.cr6714694.Tester_Class_3: int var_1> = $i1;
$z0 = <compiler.c2.cr6714694.Tester_Class_1: boolean var_4>;
if $z0 == 0 goto $c2 = <compiler.c2.cr6714694.Tester: char var_40>;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$c2 = <compiler.c2.cr6714694.Tester: char var_40>;
$i3 = $c2 + 1;
$c4 = (char) $i3;
<compiler.c2.cr6714694.Tester: char var_40> = $c4;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$c11 = <compiler.c2.cr6714694.Tester: char var_40>;
$i12 = $c11 << -1682605056;
$c13 = (char) $i12;
<compiler.c2.cr6714694.Tester: char var_40> = $c13;
$z1 = <compiler.c2.cr6714694.Tester_Class_2: boolean var_4>;
$r6 = newmultiarray (compiler.c2.cr6714694.Tester_Class_1)[b9][b9];
$r7 = $r6[b9];
$r8 = $r7[b9];
$r8.<compiler.c2.cr6714694.Tester_Class_1: byte var_3> = b9;
$r9 = <compiler.c2.cr6714694.Tester_Class_3: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r9;
$c14 = <compiler.c2.cr6714694.Tester: char var_40>;
$i15 = $c14 - 1;
$c16 = (char) $i15;
<compiler.c2.cr6714694.Tester: char var_40> = $c16;
$c17 = <compiler.c2.cr6714694.Tester: char var_40>;
$i18 = $c17 - 1;
$c19 = (char) $i18;
<compiler.c2.cr6714694.Tester: char var_40> = $c19;
$r10 = newmultiarray (compiler.c2.cr6714694.Tester_Class_2)[b9][b9];
$r11 = $r10[b9];
$r12 = $r11[b9];
$r13 = (compiler.c2.cr6714694.Tester_Class_3) $r12;
$l20 = $r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$d6 = (double) $l20;
$d4 = <compiler.c2.cr6714694.Tester: double var_36>;
$l23 = (long) b9;
$i21 = b9 ^ -1;
$l22 = (long) $i21;
$l24 = $l23 * $l22;
$d3 = (double) $l24;
$d5 = $d4 * $d3;
<compiler.c2.cr6714694.Tester: double var_36> = $d5;
$d7 = $d6 * $d5;
$l25 = (long) $d7;
$r13.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l25;
$r14 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r14;
$r15 = newarray (compiler.c2.cr6714694.Tester_Class_3)[b9];
$r16 = $r15[b9];
$l26 = $r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24>;
$l27 = $l26 + 1L;
$r16.<compiler.c2.cr6714694.Tester_Class_3: long var_24> = $l27;
goto [?= $c6 = <compiler.c2.cr6714694.Tester: char var_40>];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$c6 = <compiler.c2.cr6714694.Tester: char var_40>;
$c5 = <compiler.c2.cr6714694.Tester: char var_40>;
$i7 = $c6 << $c5;
$c8 = (char) $i7;
<compiler.c2.cr6714694.Tester: char var_40> = $c8;
i29 = i28 + 1;
$d1 = <compiler.c2.cr6714694.Tester: double var_36>;
$d0 = (double) b9;
$d2 = $d1 / $d0;
<compiler.c2.cr6714694.Tester: double var_36> = $d2;
$r0 = new java.lang.StringBuilder;
$r1 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"xhi\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();
i30 = i29 + 1;
$c10 = <compiler.c2.cr6714694.Tester: char var_40>;
return $c10;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$c2 = <compiler.c2.cr6714694.Tester: char var_40>;
$i3 = $c2 + 1;
$c4 = (char) $i3;
<compiler.c2.cr6714694.Tester: char var_40> = $c4;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$c6 = <compiler.c2.cr6714694.Tester: char var_40>;
$c5 = <compiler.c2.cr6714694.Tester: char var_40>;
$i7 = $c6 << $c5;
$c8 = (char) $i7;
<compiler.c2.cr6714694.Tester: char var_40> = $c8;
i29 = i28 + 1;
$d1 = <compiler.c2.cr6714694.Tester: double var_36>;
$d0 = (double) b9;
$d2 = $d1 / $d0;
<compiler.c2.cr6714694.Tester: double var_36> = $d2;
$r0 = new java.lang.StringBuilder;
$r1 = <compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19>;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
<compiler.c2.cr6714694.Tester_Class_2: java.lang.String var_19> = $r1;
$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);
$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"xhi\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();
i30 = i29 + 1;
$c10 = <compiler.c2.cr6714694.Tester: char var_40>;
return $c10;
";
}
