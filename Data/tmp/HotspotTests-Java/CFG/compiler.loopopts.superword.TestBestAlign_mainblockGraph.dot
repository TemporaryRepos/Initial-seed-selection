digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r3 := @parameter0: java.lang.String[];
<compiler.loopopts.superword.TestBestAlign: int limit> = 64;
$r0 = newarray (boolean)[8];
<compiler.loopopts.superword.TestBestAlign: boolean[] boolArray> = $r0;
$i0 = <compiler.loopopts.superword.TestBestAlign: int limit>;
$i1 = $i0 + 4;
$r1 = newarray (int)[$i1];
<compiler.loopopts.superword.TestBestAlign: int[] intArray> = $r1;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i2 = i3 % 1000000;
if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3);
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
i3 = i3 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 10000000 goto $i2 = i3 % 1000000;
"
    "Block 5:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
r3 := @parameter0: java.lang.String[];
<compiler.loopopts.superword.TestBestAlign: int limit> = 64;
$r0 = newarray (boolean)[8];
<compiler.loopopts.superword.TestBestAlign: boolean[] boolArray> = $r0;
$i0 = <compiler.loopopts.superword.TestBestAlign: int limit>;
$i1 = $i0 + 4;
$r1 = newarray (int)[$i1];
<compiler.loopopts.superword.TestBestAlign: int[] intArray> = $r1;
i3 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 10000000 goto $i2 = i3 % 1000000;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i2 = i3 % 1000000;
if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3);
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$i2 = i3 % 1000000;
if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
i3 = i3 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3);
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
i3 = i3 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
i3 = i3 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 10000000 goto $i2 = i3 % 1000000;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 10000000 goto $i2 = i3 % 1000000;
"->"Block 5:
[preds: 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 10000000 goto $i2 = i3 % 1000000;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$i2 = i3 % 1000000;
if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>();
";
}
