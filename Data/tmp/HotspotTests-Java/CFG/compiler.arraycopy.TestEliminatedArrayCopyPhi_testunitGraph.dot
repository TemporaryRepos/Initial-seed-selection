digraph "unitGraph" {
    "r1 := @parameter0: int[]"
    "z0 := @parameter1: boolean"
    "z1 := @parameter2: boolean"
    "r0 = newarray (int)[10]"
    "if z0 == 0 goto (branch)"
    "$i0 = lengthof r1"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i0)"
    "if z1 == 0 goto return"
    "<compiler.arraycopy.TestEliminatedArrayCopyPhi: int[] escaped> = r0"
    "return"
    "r1 := @parameter0: int[]"->"z0 := @parameter1: boolean";
    "z0 := @parameter1: boolean"->"z1 := @parameter2: boolean";
    "z1 := @parameter2: boolean"->"r0 = newarray (int)[10]";
    "r0 = newarray (int)[10]"->"if z0 == 0 goto (branch)";
    "if z0 == 0 goto (branch)"->"$i0 = lengthof r1";
    "if z0 == 0 goto (branch)"->"if z1 == 0 goto return";
    "$i0 = lengthof r1"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i0)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i0)"->"if z1 == 0 goto return";
    "if z1 == 0 goto return"->"<compiler.arraycopy.TestEliminatedArrayCopyPhi: int[] escaped> = r0";
    "if z1 == 0 goto return"->"return";
    "<compiler.arraycopy.TestEliminatedArrayCopyPhi: int[] escaped> = r0"->"return";
}
