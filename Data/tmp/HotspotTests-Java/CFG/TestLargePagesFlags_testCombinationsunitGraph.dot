digraph "unitGraph" {
    "$r0 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)"
    "if $z0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$z1 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r2)"
    "if $z1 != 0 goto $r3 = new TestLargePagesFlags$FlagTester"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseHugeTLBFSAndUseSHMCombination\")"
    "return"
    "$r3 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r3.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r4 = newarray (TestLargePagesFlags$Flag)[3]"
    "$r5 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r4[0] = $r5"
    "$r6 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r4[1] = $r6"
    "$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$r4[2] = $r7"
    "$r8 = virtualinvoke $r3.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r4)"
    "$r9 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r9[0] = $r10"
    "$r11 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r9[1] = $r11"
    "$r12 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r9[2] = $r12"
    "$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r9[3] = $r13"
    "virtualinvoke $r8.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r9)"
    "$r14 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r14.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r15 = newarray (TestLargePagesFlags$Flag)[3]"
    "$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r15[0] = $r16"
    "$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r15[1] = $r17"
    "$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$r15[2] = $r18"
    "$r19 = virtualinvoke $r14.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r15)"
    "$r20 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r21 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r20[0] = $r21"
    "$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r20[1] = $r22"
    "$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r20[2] = $r23"
    "$r24 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$r20[3] = $r24"
    "virtualinvoke $r19.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r20)"
    "$r25 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r25.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r26 = newarray (TestLargePagesFlags$Flag)[3]"
    "$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r26[0] = $r27"
    "$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r26[1] = $r28"
    "$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r26[2] = $r29"
    "$r30 = virtualinvoke $r25.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r26)"
    "$r31 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r31[0] = $r32"
    "$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r31[1] = $r33"
    "$r34 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r31[2] = $r34"
    "$r35 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r31[3] = $r35"
    "virtualinvoke $r30.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r31)"
    "$r36 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r36.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r37 = newarray (TestLargePagesFlags$Flag)[3]"
    "$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r37[0] = $r38"
    "$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r37[1] = $r39"
    "$r40 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r37[2] = $r40"
    "$r41 = virtualinvoke $r36.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r37)"
    "$r42 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r43 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"
    "$r42[0] = $r43"
    "$r44 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r42[1] = $r44"
    "$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r42[2] = $r45"
    "$r46 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r42[3] = $r46"
    "virtualinvoke $r41.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r42)"
    "$r47 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$z2 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r47)"
    "if $z2 != 0 goto $r48 = new TestLargePagesFlags$FlagTester"
    "$r48 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r48.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r49 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r50 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r49[0] = $r50"
    "$r51 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r49[1] = $r51"
    "$r52 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r49[2] = $r52"
    "$r53 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$r49[3] = $r53"
    "$r54 = virtualinvoke $r48.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r49)"
    "$r55 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r56 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r55[0] = $r56"
    "$r57 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r55[1] = $r57"
    "$r58 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r55[2] = $r58"
    "$r59 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r55[3] = $r59"
    "virtualinvoke $r54.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r55)"
    "$r60 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r60.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r61 = newarray (TestLargePagesFlags$Flag)[3]"
    "$r62 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r61[0] = $r62"
    "$r63 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"
    "$r61[1] = $r63"
    "$r64 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"
    "$r61[2] = $r64"
    "$r65 = virtualinvoke $r60.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r61)"
    "$r66 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r67 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r66[0] = $r67"
    "$r68 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r66[1] = $r68"
    "$r69 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r66[2] = $r69"
    "$r70 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r66[3] = $r70"
    "virtualinvoke $r65.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r66)"
    "$r0 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)";
    "$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)"->"if $z0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"->"$r2 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "if $z0 == 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$z1 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r2)";
    "$z1 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r2)"->"if $z1 != 0 goto $r3 = new TestLargePagesFlags$FlagTester";
    "if $z1 != 0 goto $r3 = new TestLargePagesFlags$FlagTester"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 != 0 goto $r3 = new TestLargePagesFlags$FlagTester"->"$r3 = new TestLargePagesFlags$FlagTester";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseHugeTLBFSAndUseSHMCombination\")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseHugeTLBFSAndUseSHMCombination\")"->"return";
    "$r3 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r3.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r3.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r4 = newarray (TestLargePagesFlags$Flag)[3]";
    "$r4 = newarray (TestLargePagesFlags$Flag)[3]"->"$r5 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r5 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r4[0] = $r5";
    "$r4[0] = $r5"->"$r6 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r6 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r4[1] = $r6";
    "$r4[1] = $r6"->"$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)";
    "$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$r4[2] = $r7";
    "$r4[2] = $r7"->"$r8 = virtualinvoke $r3.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r4)";
    "$r8 = virtualinvoke $r3.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r4)"->"$r9 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r9 = newarray (TestLargePagesFlags$Flag)[4]"->"$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r9[0] = $r10";
    "$r9[0] = $r10"->"$r11 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r11 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r9[1] = $r11";
    "$r9[1] = $r11"->"$r12 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r12 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r9[2] = $r12";
    "$r9[2] = $r12"->"$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r9[3] = $r13";
    "$r9[3] = $r13"->"virtualinvoke $r8.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r9)";
    "virtualinvoke $r8.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r9)"->"$r14 = new TestLargePagesFlags$FlagTester";
    "$r14 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r14.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r14.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r15 = newarray (TestLargePagesFlags$Flag)[3]";
    "$r15 = newarray (TestLargePagesFlags$Flag)[3]"->"$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r15[0] = $r16";
    "$r15[0] = $r16"->"$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r15[1] = $r17";
    "$r15[1] = $r17"->"$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)";
    "$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$r15[2] = $r18";
    "$r15[2] = $r18"->"$r19 = virtualinvoke $r14.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r15)";
    "$r19 = virtualinvoke $r14.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r15)"->"$r20 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r20 = newarray (TestLargePagesFlags$Flag)[4]"->"$r21 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r21 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r20[0] = $r21";
    "$r20[0] = $r21"->"$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r20[1] = $r22";
    "$r20[1] = $r22"->"$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r20[2] = $r23";
    "$r20[2] = $r23"->"$r24 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)";
    "$r24 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$r20[3] = $r24";
    "$r20[3] = $r24"->"virtualinvoke $r19.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r20)";
    "virtualinvoke $r19.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r20)"->"$r25 = new TestLargePagesFlags$FlagTester";
    "$r25 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r25.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r25.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r26 = newarray (TestLargePagesFlags$Flag)[3]";
    "$r26 = newarray (TestLargePagesFlags$Flag)[3]"->"$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r26[0] = $r27";
    "$r26[0] = $r27"->"$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r26[1] = $r28";
    "$r26[1] = $r28"->"$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r26[2] = $r29";
    "$r26[2] = $r29"->"$r30 = virtualinvoke $r25.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r26)";
    "$r30 = virtualinvoke $r25.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r26)"->"$r31 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r31 = newarray (TestLargePagesFlags$Flag)[4]"->"$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r31[0] = $r32";
    "$r31[0] = $r32"->"$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r31[1] = $r33";
    "$r31[1] = $r33"->"$r34 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r34 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r31[2] = $r34";
    "$r31[2] = $r34"->"$r35 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r35 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r31[3] = $r35";
    "$r31[3] = $r35"->"virtualinvoke $r30.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r31)";
    "virtualinvoke $r30.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r31)"->"$r36 = new TestLargePagesFlags$FlagTester";
    "$r36 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r36.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r36.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r37 = newarray (TestLargePagesFlags$Flag)[3]";
    "$r37 = newarray (TestLargePagesFlags$Flag)[3]"->"$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r37[0] = $r38";
    "$r37[0] = $r38"->"$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r37[1] = $r39";
    "$r37[1] = $r39"->"$r40 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r40 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r37[2] = $r40";
    "$r37[2] = $r40"->"$r41 = virtualinvoke $r36.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r37)";
    "$r41 = virtualinvoke $r36.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r37)"->"$r42 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r42 = newarray (TestLargePagesFlags$Flag)[4]"->"$r43 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)";
    "$r43 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"->"$r42[0] = $r43";
    "$r42[0] = $r43"->"$r44 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r44 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r42[1] = $r44";
    "$r42[1] = $r44"->"$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r42[2] = $r45";
    "$r42[2] = $r45"->"$r46 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r46 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r42[3] = $r46";
    "$r42[3] = $r46"->"virtualinvoke $r41.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r42)";
    "virtualinvoke $r41.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r42)"->"$r47 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r47 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$z2 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r47)";
    "$z2 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r47)"->"if $z2 != 0 goto $r48 = new TestLargePagesFlags$FlagTester";
    "if $z2 != 0 goto $r48 = new TestLargePagesFlags$FlagTester"->"return";
    "if $z2 != 0 goto $r48 = new TestLargePagesFlags$FlagTester"->"$r48 = new TestLargePagesFlags$FlagTester";
    "$r48 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r48.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r48.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r49 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r49 = newarray (TestLargePagesFlags$Flag)[4]"->"$r50 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r50 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r49[0] = $r50";
    "$r49[0] = $r50"->"$r51 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r51 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r49[1] = $r51";
    "$r49[1] = $r51"->"$r52 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r52 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r49[2] = $r52";
    "$r49[2] = $r52"->"$r53 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)";
    "$r53 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$r49[3] = $r53";
    "$r49[3] = $r53"->"$r54 = virtualinvoke $r48.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r49)";
    "$r54 = virtualinvoke $r48.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r49)"->"$r55 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r55 = newarray (TestLargePagesFlags$Flag)[4]"->"$r56 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r56 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r55[0] = $r56";
    "$r55[0] = $r56"->"$r57 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r57 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r55[1] = $r57";
    "$r55[1] = $r57"->"$r58 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r58 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r55[2] = $r58";
    "$r55[2] = $r58"->"$r59 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r59 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r55[3] = $r59";
    "$r55[3] = $r59"->"virtualinvoke $r54.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r55)";
    "virtualinvoke $r54.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r55)"->"$r60 = new TestLargePagesFlags$FlagTester";
    "$r60 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r60.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r60.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r61 = newarray (TestLargePagesFlags$Flag)[3]";
    "$r61 = newarray (TestLargePagesFlags$Flag)[3]"->"$r62 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r62 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r61[0] = $r62";
    "$r61[0] = $r62"->"$r63 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)";
    "$r63 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(1)"->"$r61[1] = $r63";
    "$r61[1] = $r63"->"$r64 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)";
    "$r64 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(1)"->"$r61[2] = $r64";
    "$r61[2] = $r64"->"$r65 = virtualinvoke $r60.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r61)";
    "$r65 = virtualinvoke $r60.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r61)"->"$r66 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r66 = newarray (TestLargePagesFlags$Flag)[4]"->"$r67 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r67 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r66[0] = $r67";
    "$r66[0] = $r67"->"$r68 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r68 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r66[1] = $r68";
    "$r66[1] = $r68"->"$r69 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r69 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r66[2] = $r69";
    "$r66[2] = $r69"->"$r70 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r70 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r66[3] = $r70";
    "$r66[3] = $r70"->"virtualinvoke $r65.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r66)";
    "virtualinvoke $r65.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r66)"->"return";
}
