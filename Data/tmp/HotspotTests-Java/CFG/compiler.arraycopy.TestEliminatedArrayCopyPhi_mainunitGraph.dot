digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[10]"
    "i1 = 0"
    "goto [?= (branch)]"
    "$i0 = i1 % 2"
    "if $i0 != 0 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)]"
    "$z0 = 0"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)"
    "i1 = i1 + 1"
    "if i1 < 20000 goto $i0 = i1 % 2"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[10]";
    "r0 = newarray (int)[10]"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 20000 goto $i0 = i1 % 2";
    "$i0 = i1 % 2"->"if $i0 != 0 goto $z0 = 0";
    "if $i0 != 0 goto $z0 = 0"->"$z0 = 1";
    "if $i0 != 0 goto $z0 = 0"->"$z0 = 0";
    "$z0 = 1"->"goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)]";
    "goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)]"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)";
    "$z0 = 0"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyPhi: void test(int[],boolean,boolean)>(r0, $z0, 0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 20000 goto $i0 = i1 % 2";
    "if i1 < 20000 goto $i0 = i1 % 2"->"return";
    "if i1 < 20000 goto $i0 = i1 % 2"->"$i0 = i1 % 2";
}
