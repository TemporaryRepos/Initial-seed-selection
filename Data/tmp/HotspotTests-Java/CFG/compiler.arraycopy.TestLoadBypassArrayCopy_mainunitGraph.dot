digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[10]"
    "r0[0] = 66"
    "i2 = 0"
    "goto [?= (branch)]"
    "i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)"
    "$i1 = r0[0]"
    "if i0 == $i1 goto i2 = i2 + 1"
    "$r1 = new java.lang.RuntimeException"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"test failed\")"
    "throw $r1"
    "i2 = i2 + 1"
    "if i2 < 20000 goto i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[10]";
    "r0 = newarray (int)[10]"->"r0[0] = 66";
    "r0[0] = 66"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 20000 goto i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)";
    "i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)"->"$i1 = r0[0]";
    "$i1 = r0[0]"->"if i0 == $i1 goto i2 = i2 + 1";
    "if i0 == $i1 goto i2 = i2 + 1"->"$r1 = new java.lang.RuntimeException";
    "if i0 == $i1 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r1 = new java.lang.RuntimeException"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"test failed\")";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"test failed\")"->"throw $r1";
    "i2 = i2 + 1"->"if i2 < 20000 goto i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)";
    "if i2 < 20000 goto i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)"->"return";
    "if i2 < 20000 goto i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)"->"i0 = staticinvoke <compiler.arraycopy.TestLoadBypassArrayCopy: int test(int[],int,boolean)>(r0, 10, 0)";
}
