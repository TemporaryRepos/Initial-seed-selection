digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "i1 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"
    "i1 = i1 + 1"
    "if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"
    "$r0 = new compiler.profiling.TestMethodHandleInvokesIntrinsic"
    "specialinvoke $r0.<compiler.profiling.TestMethodHandleInvokesIntrinsic: void <init>()>()"
    "r7 = $r0"
    "i2 = 0"
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"
    "i2 = i2 + 1"
    "if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"
    "goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]"
    "$r3 := @caughtexception"
    "r8 = $r3"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception\")"
    "virtualinvoke r8.<java.lang.Throwable: void printStackTrace()>()"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"TEST FAILED\", r8)"
    "throw $r5"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"i1 = 0";
    "r6 := @parameter0: java.lang.String[]"->"$r3 := @caughtexception";
    "i1 = 0"->"goto [?= (branch)]";
    "i1 = 0"->"$r3 := @caughtexception";
    "goto [?= (branch)]"->"if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()";
    "goto [?= (branch)]"->"$r3 := @caughtexception";
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"->"i1 = i1 + 1";
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"->"$r3 := @caughtexception";
    "i1 = i1 + 1"->"if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()";
    "i1 = i1 + 1"->"$r3 := @caughtexception";
    "if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"->"$r0 = new compiler.profiling.TestMethodHandleInvokesIntrinsic";
    "if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"->"staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()";
    "if i1 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: long m1()>()"->"$r3 := @caughtexception";
    "$r0 = new compiler.profiling.TestMethodHandleInvokesIntrinsic"->"specialinvoke $r0.<compiler.profiling.TestMethodHandleInvokesIntrinsic: void <init>()>()";
    "$r0 = new compiler.profiling.TestMethodHandleInvokesIntrinsic"->"$r3 := @caughtexception";
    "specialinvoke $r0.<compiler.profiling.TestMethodHandleInvokesIntrinsic: void <init>()>()"->"r7 = $r0";
    "specialinvoke $r0.<compiler.profiling.TestMethodHandleInvokesIntrinsic: void <init>()>()"->"$r3 := @caughtexception";
    "r7 = $r0"->"i2 = 0";
    "r7 = $r0"->"$r3 := @caughtexception";
    "i2 = 0"->"goto [?= (branch)]";
    "i2 = 0"->"$r3 := @caughtexception";
    "goto [?= (branch)]"->"if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)";
    "goto [?= (branch)]"->"$r3 := @caughtexception";
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"->"i2 = i2 + 1";
    "staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"->"$r3 := @caughtexception";
    "i2 = i2 + 1"->"if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)";
    "i2 = i2 + 1"->"$r3 := @caughtexception";
    "if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"->"goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]";
    "if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"->"staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)";
    "if i2 < 20000 goto staticinvoke <compiler.profiling.TestMethodHandleInvokesIntrinsic: java.lang.Class m2(java.lang.Object)>(r7)"->"$r3 := @caughtexception";
    "goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r3 := @caughtexception"->"r8 = $r3";
    "r8 = $r3"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Unexpected exception\")"->"virtualinvoke r8.<java.lang.Throwable: void printStackTrace()>()";
    "virtualinvoke r8.<java.lang.Throwable: void printStackTrace()>()"->"$r5 = new java.lang.RuntimeException";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"TEST FAILED\", r8)";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"TEST FAILED\", r8)"->"throw $r5";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"return";
}
