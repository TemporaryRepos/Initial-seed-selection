digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
i0 := @parameter1: int;
i1 = 96;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
i1 = i1 + -1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
i0 := @parameter1: int;
i1 = 96;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
i1 = i1 + -1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 >= 0 goto virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>(i1, i0, -123);
i1 = i1 + -1;
";
}
