digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, -150.0)"
    "$d1 = -1.0 * $d0"
    "f0 = (float) $d1"
    "$d2 = (double) f0"
    "$b0 = $d2 cmpl -0.0"
    "if $b0 == 0 goto return"
    "$r0 = new nsk.share.TestFailure"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"f != -0.0 (\")"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)"
    "throw $r0"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, -150.0)";
    "$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, -150.0)"->"$d1 = -1.0 * $d0";
    "$d1 = -1.0 * $d0"->"f0 = (float) $d1";
    "f0 = (float) $d1"->"$d2 = (double) f0";
    "$d2 = (double) f0"->"$b0 = $d2 cmpl -0.0";
    "$b0 = $d2 cmpl -0.0"->"if $b0 == 0 goto return";
    "if $b0 == 0 goto return"->"$r0 = new nsk.share.TestFailure";
    "if $b0 == 0 goto return"->"return";
    "$r0 = new nsk.share.TestFailure"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"f != -0.0 (\")";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"f != -0.0 (\")"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>($r4)"->"throw $r0";
}
