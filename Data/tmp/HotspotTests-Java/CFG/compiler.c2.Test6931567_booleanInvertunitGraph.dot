digraph "unitGraph" {
    "i0 := @parameter0: int"
    "z0 = 0"
    "z1 = 0"
    "i1 = 0"
    "goto [?= (branch)]"
    "if z0 == 0 goto $z2 = 1"
    "$z2 = 0"
    "goto [?= z0 = $z2]"
    "$z2 = 1"
    "z0 = $z2"
    "i1 = i1 + 1"
    "if i1 < i0 goto (branch)"
    "i2 = 0"
    "z1 = z1 ^ 1"
    "i2 = i2 + 1"
    "if i2 < i0 goto z1 = z1 ^ 1"
    "if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\")"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "goto [?= return]"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\")"
    "return"
    "i0 := @parameter0: int"->"z0 = 0";
    "z0 = 0"->"z1 = 0";
    "z1 = 0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto (branch)";
    "if z0 == 0 goto $z2 = 1"->"$z2 = 0";
    "if z0 == 0 goto $z2 = 1"->"$z2 = 1";
    "$z2 = 0"->"goto [?= z0 = $z2]";
    "goto [?= z0 = $z2]"->"z0 = $z2";
    "$z2 = 1"->"z0 = $z2";
    "z0 = $z2"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto (branch)";
    "if i1 < i0 goto (branch)"->"i2 = 0";
    "if i1 < i0 goto (branch)"->"if z0 == 0 goto $z2 = 1";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < i0 goto z1 = z1 ^ 1";
    "z1 = z1 ^ 1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < i0 goto z1 = z1 ^ 1";
    "if i2 < i0 goto z1 = z1 ^ 1"->"if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < i0 goto z1 = z1 ^ 1"->"z1 = z1 ^ 1";
    "if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\")";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\")"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\")"->"return";
}
