digraph "unitGraph" {
    "d0 := @parameter0: double"
    "i0 := @parameter1: int"
    "r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)"
    "$i1 = i0 & 1"
    "if $i1 != 0 goto $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"
    "$r0 = new java.lang.Double"
    "$d2 = d0 + 1.0"
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2)"
    "r1 = $r0"
    "$d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"
    "return $d1"
    "d0 := @parameter0: double"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)";
    "r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)"->"$i1 = i0 & 1";
    "$i1 = i0 & 1"->"if $i1 != 0 goto $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "if $i1 != 0 goto $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"$r0 = new java.lang.Double";
    "if $i1 != 0 goto $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"$d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "$r0 = new java.lang.Double"->"$d2 = d0 + 1.0";
    "$d2 = d0 + 1.0"->"specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2)";
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2)"->"r1 = $r0";
    "r1 = $r0"->"$d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"return $d1";
}
