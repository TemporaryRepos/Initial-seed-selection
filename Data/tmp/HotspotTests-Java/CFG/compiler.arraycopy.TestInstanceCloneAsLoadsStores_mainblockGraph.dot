digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new compiler.arraycopy.TestInstanceCloneAsLoadsStores;
specialinvoke $r0.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void <init>()>();
r1 = $r0;
$r2 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\");
$r3 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m2\");
$r4 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$E e>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r4, \"m3\");
$r5 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r5, \"m4\");
$r6 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r6, \"m5\");
$r7 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$F f>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r7, \"m6\");
$r8 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$G g>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r8, \"m7\");
$r9 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$K k>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r9, \"m8\");
$z0 = r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\");
throw $r10;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new compiler.arraycopy.TestInstanceCloneAsLoadsStores;
specialinvoke $r0.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void <init>()>();
r1 = $r0;
$r2 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\");
$r3 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m2\");
$r4 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$E e>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r4, \"m3\");
$r5 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r5, \"m4\");
$r6 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r6, \"m5\");
$r7 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$F f>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r7, \"m6\");
$r8 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$G g>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r8, \"m7\");
$r9 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$K k>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r9, \"m8\");
$z0 = r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\");
throw $r10;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new compiler.arraycopy.TestInstanceCloneAsLoadsStores;
specialinvoke $r0.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void <init>()>();
r1 = $r0;
$r2 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\");
$r3 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$D d>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m2\");
$r4 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$E e>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r4, \"m3\");
$r5 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r5, \"m4\");
$r6 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$A a>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r6, \"m5\");
$r7 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$F f>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r7, \"m6\");
$r8 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$G g>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r8, \"m7\");
$r9 = <compiler.arraycopy.TestInstanceCloneAsLoadsStores: compiler.arraycopy.TestInstanceCloneUtils$K k>;
virtualinvoke r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r9, \"m8\");
$z0 = r1.<compiler.arraycopy.TestInstanceCloneAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
