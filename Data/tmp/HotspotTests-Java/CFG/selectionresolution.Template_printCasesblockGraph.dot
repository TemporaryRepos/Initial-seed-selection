digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @this: selectionresolution.Template;
r11 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
i1 = 1;
$r1 = <java.lang.System: java.io.PrintStream err>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Template \");
$r3 = r2.<selectionresolution.Template: java.lang.String name>;
$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\n\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r7 = r2.<selectionresolution.Template: java.util.Collection cases>;
r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.util.function.Consumer) $r9;
r12 = virtualinvoke r11.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r10.<java.util.function.Consumer: void accept(java.lang.Object)>(r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Case \");
$i0 = i1;
i1 = i1 + 1;
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r17 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>(r12);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @this: selectionresolution.Template;
r11 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
i1 = 1;
$r1 = <java.lang.System: java.io.PrintStream err>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Template \");
$r3 = r2.<selectionresolution.Template: java.lang.String name>;
$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\n\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r7 = r2.<selectionresolution.Template: java.util.Collection cases>;
r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.util.function.Consumer) $r9;
r12 = virtualinvoke r11.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r10.<java.util.function.Consumer: void accept(java.lang.Object)>(r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Case \");
$i0 = i1;
i1 = i1 + 1;
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r17 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>(r12);
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.util.function.Consumer) $r9;
r12 = virtualinvoke r11.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r10.<java.util.function.Consumer: void accept(java.lang.Object)>(r12);
$r14 = <java.lang.System: java.io.PrintStream err>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Case \");
$i0 = i1;
i1 = i1 + 1;
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r17 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>(r12);
";
}
