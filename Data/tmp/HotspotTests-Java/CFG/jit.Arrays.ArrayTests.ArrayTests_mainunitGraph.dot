digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "z1 = 1"
    "$r0 = new jit.Arrays.ArrayTests.ArrayTests"
    "specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>()"
    "r1 = $r0"
    "$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>()"
    "z2 = z1 & $z0"
    "if z2 == 0 goto $r2 = new nsk.share.TestFailure"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\")"
    "goto [?= return]"
    "$r2 = new nsk.share.TestFailure"
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Error in read/write array tests!\")"
    "throw $r2"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"z1 = 1";
    "z1 = 1"->"$r0 = new jit.Arrays.ArrayTests.ArrayTests";
    "$r0 = new jit.Arrays.ArrayTests.ArrayTests"->"specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>()";
    "specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>()";
    "$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>()"->"z2 = z1 & $z0";
    "z2 = z1 & $z0"->"if z2 == 0 goto $r2 = new nsk.share.TestFailure";
    "if z2 == 0 goto $r2 = new nsk.share.TestFailure"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if z2 == 0 goto $r2 = new nsk.share.TestFailure"->"$r2 = new nsk.share.TestFailure";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 = new nsk.share.TestFailure"->"specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Error in read/write array tests!\")";
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Error in read/write array tests!\")"->"throw $r2";
}
