digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L);
r1 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger pow(int)>(2);
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
$r3 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r2);
staticinvoke <compiler.intrinsics.bigInteger.TestMultiplyToLenReturnProfile: java.math.BigInteger m(java.math.BigInteger,java.math.BigInteger)>(r1, $r3);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L);
r1 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger pow(int)>(2);
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
$r3 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r2);
staticinvoke <compiler.intrinsics.bigInteger.TestMultiplyToLenReturnProfile: java.math.BigInteger m(java.math.BigInteger,java.math.BigInteger)>(r1, $r3);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);
$r3 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r2);
staticinvoke <compiler.intrinsics.bigInteger.TestMultiplyToLenReturnProfile: java.math.BigInteger m(java.math.BigInteger,java.math.BigInteger)>(r1, $r3);
i0 = i0 + 1;
";
}
