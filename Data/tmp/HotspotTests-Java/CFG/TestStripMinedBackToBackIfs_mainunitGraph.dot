digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)"
    "i0 = i0 + 1"
    "if i0 < 20000 goto staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 20000 goto staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)";
    "staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 20000 goto staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)";
    "if i0 < 20000 goto staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)"->"return";
    "if i0 < 20000 goto staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)"->"staticinvoke <TestStripMinedBackToBackIfs: double test(int)>(100)";
}
