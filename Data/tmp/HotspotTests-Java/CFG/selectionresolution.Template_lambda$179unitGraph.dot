digraph "unitGraph" {
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"
    "$r4 = (selectionresolution.ClassData) $r3"
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"
    "$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)"
    "$r9 = (selectionresolution.ClassData) $r8"
    "$r10 = new selectionresolution.MethodData"
    "$r12 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"
    "$r11 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"
    "specialinvoke $r10.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r12, $r11)"
    "r13 = $r10"
    "$r14 = new selectionresolution.MethodData"
    "$r16 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PACKAGE>"
    "$r15 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"
    "specialinvoke $r14.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r16, $r15)"
    "r17 = $r14"
    "$r18 = new selectionresolution.ClassData"
    "specialinvoke $r18.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r13)"
    "r19 = $r18"
    "$r20 = new selectionresolution.ClassData"
    "$r21 = <selectionresolution.ClassData$Package: selectionresolution.ClassData$Package OTHER>"
    "specialinvoke $r20.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>($r21, r17)"
    "r22 = $r20"
    "i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>"
    "i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r19)"
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r22)"
    "$r23 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r23.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i2)"
    "$r24 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r24.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i4"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i4"
    "return"
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"->"$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)";
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"->"$r4 = (selectionresolution.ClassData) $r3";
    "$r4 = (selectionresolution.ClassData) $r3"->"r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>";
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"->"$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)";
    "$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)"->"$r9 = (selectionresolution.ClassData) $r8";
    "$r9 = (selectionresolution.ClassData) $r8"->"$r10 = new selectionresolution.MethodData";
    "$r10 = new selectionresolution.MethodData"->"$r12 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>";
    "$r12 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"->"$r11 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>";
    "$r11 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"->"specialinvoke $r10.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r12, $r11)";
    "specialinvoke $r10.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r12, $r11)"->"r13 = $r10";
    "r13 = $r10"->"$r14 = new selectionresolution.MethodData";
    "$r14 = new selectionresolution.MethodData"->"$r16 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PACKAGE>";
    "$r16 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PACKAGE>"->"$r15 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>";
    "$r15 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"->"specialinvoke $r14.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r16, $r15)";
    "specialinvoke $r14.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r16, $r15)"->"r17 = $r14";
    "r17 = $r14"->"$r18 = new selectionresolution.ClassData";
    "$r18 = new selectionresolution.ClassData"->"specialinvoke $r18.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r13)";
    "specialinvoke $r18.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r13)"->"r19 = $r18";
    "r19 = $r18"->"$r20 = new selectionresolution.ClassData";
    "$r20 = new selectionresolution.ClassData"->"$r21 = <selectionresolution.ClassData$Package: selectionresolution.ClassData$Package OTHER>";
    "$r21 = <selectionresolution.ClassData$Package: selectionresolution.ClassData$Package OTHER>"->"specialinvoke $r20.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>($r21, r17)";
    "specialinvoke $r20.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>($r21, r17)"->"r22 = $r20";
    "r22 = $r20"->"i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>";
    "i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>"->"i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r19)";
    "i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r19)"->"i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r22)";
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r22)"->"$r23 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r23 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r23.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i2)";
    "virtualinvoke $r23.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i2)"->"$r24 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r24 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r24.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)";
    "virtualinvoke $r24.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i4";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i4"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i4";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i4"->"return";
}
