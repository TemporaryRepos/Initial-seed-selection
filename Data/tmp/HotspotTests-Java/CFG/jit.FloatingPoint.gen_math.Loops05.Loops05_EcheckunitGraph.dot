digraph "unitGraph" {
    "r10 := @this: jit.FloatingPoint.gen_math.Loops05.Loops05"
    "d0 := @parameter0: double"
    "d1 := @parameter1: double"
    "$b0 = d0 cmpg d1"
    "if $b0 >= 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")"
    "goto [?= return]"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected error: \")"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"   found error: \")"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "$r8 = new nsk.share.TestFailure"
    "specialinvoke $r8.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")"
    "throw $r8"
    "return"
    "r10 := @this: jit.FloatingPoint.gen_math.Loops05.Loops05"->"d0 := @parameter0: double";
    "d0 := @parameter0: double"->"d1 := @parameter1: double";
    "d1 := @parameter1: double"->"$b0 = d0 cmpg d1";
    "$b0 = d0 cmpg d1"->"if $b0 >= 0 goto $r1 = <java.lang.System: java.io.PrintStream out>";
    "if $b0 >= 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "if $b0 >= 0 goto $r1 = <java.lang.System: java.io.PrintStream out>"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected error: \")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected error: \")"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3)"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"   found error: \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"   found error: \")"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"$r8 = new nsk.share.TestFailure";
    "$r8 = new nsk.share.TestFailure"->"specialinvoke $r8.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")";
    "specialinvoke $r8.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\")"->"throw $r8";
}
