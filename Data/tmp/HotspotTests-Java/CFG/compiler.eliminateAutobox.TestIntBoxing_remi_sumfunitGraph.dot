digraph "unitGraph" {
    "r0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer foob(int)>(1)"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i1 = $i0 + 1"
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "i3 = i3 + 1"
    "if i3 < 1000 goto $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "return $i2"
    "r0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer foob(int)>(1)"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 1000 goto $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 1000 goto $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "if i3 < 1000 goto $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "if i3 < 1000 goto $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"return $i2";
}
