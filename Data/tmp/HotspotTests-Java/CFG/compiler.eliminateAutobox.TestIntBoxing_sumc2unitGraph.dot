digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "r5 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"
    "r1 = r0"
    "i0 = lengthof r0"
    "i13 = 0"
    "goto [?= (branch)]"
    "$i1 = r1[i13]"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i4 = $i2 + $i3"
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"
    "$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"
    "$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"
    "$i8 = $i6 + $i7"
    "$i9 = $i5 + $i8"
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)"
    "i13 = i13 + 1"
    "if i13 < i0 goto $i1 = r1[i13]"
    "$i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"
    "$i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"
    "$i12 = $i10 + $i11"
    "return $i12"
    "r0 := @parameter0: int[]"->"r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"r5 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>";
    "r5 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i13 = 0";
    "i13 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 < i0 goto $i1 = r1[i13]";
    "$i1 = r1[i13]"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"->"$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i4 = $i2 + $i3";
    "$i4 = $i2 + $i3"->"r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>()";
    "$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"->"$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>";
    "$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"->"$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()";
    "$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"->"$i8 = $i6 + $i7";
    "$i8 = $i6 + $i7"->"$i9 = $i5 + $i8";
    "$i9 = $i5 + $i8"->"r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)";
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"if i13 < i0 goto $i1 = r1[i13]";
    "if i13 < i0 goto $i1 = r1[i13]"->"$i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>()";
    "if i13 < i0 goto $i1 = r1[i13]"->"$i1 = r1[i13]";
    "$i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"->"$i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>()";
    "$i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"->"$i12 = $i10 + $i11";
    "$i12 = $i10 + $i11"->"return $i12";
}
