digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i8 = r0[1]"
    "<compiler.c2.Test5091921: int result> = i8"
    "i9 = -2147483648"
    "goto [?= (branch)]"
    "if i9 <= -2147483648 goto $i1 = i9 & 3"
    "if i9 >= 0 goto return i8"
    "$i3 = <compiler.c2.Test5091921: int result>"
    "i8 = i8 + $i3"
    "$i4 = i9 * 28"
    "$i5 = $i4 + 1"
    "if $i5 >= 0 goto return i8"
    "i10 = i8 + i9"
    "<compiler.c2.Test5091921: int result> = i10"
    "$i6 = i9 & 7"
    "$i7 = r0[$i6]"
    "i8 = i10 ^ $i7"
    "goto [?= i9 = i9 + 1]"
    "$i1 = i9 & 3"
    "$i2 = r0[$i1]"
    "i8 = i8 + $i2"
    "i9 = i9 + 1"
    "if i9 < i0 goto (branch)"
    "return i8"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i8 = r0[1]";
    "i8 = r0[1]"->"<compiler.c2.Test5091921: int result> = i8";
    "<compiler.c2.Test5091921: int result> = i8"->"i9 = -2147483648";
    "i9 = -2147483648"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 < i0 goto (branch)";
    "if i9 <= -2147483648 goto $i1 = i9 & 3"->"if i9 >= 0 goto return i8";
    "if i9 <= -2147483648 goto $i1 = i9 & 3"->"$i1 = i9 & 3";
    "if i9 >= 0 goto return i8"->"$i3 = <compiler.c2.Test5091921: int result>";
    "if i9 >= 0 goto return i8"->"return i8";
    "$i3 = <compiler.c2.Test5091921: int result>"->"i8 = i8 + $i3";
    "i8 = i8 + $i3"->"<compiler.c2.Test5091921: int result> = i8";
    "<compiler.c2.Test5091921: int result> = i8"->"$i4 = i9 * 28";
    "$i4 = i9 * 28"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"if $i5 >= 0 goto return i8";
    "if $i5 >= 0 goto return i8"->"i10 = i8 + i9";
    "if $i5 >= 0 goto return i8"->"return i8";
    "i10 = i8 + i9"->"<compiler.c2.Test5091921: int result> = i10";
    "<compiler.c2.Test5091921: int result> = i10"->"$i6 = i9 & 7";
    "$i6 = i9 & 7"->"$i7 = r0[$i6]";
    "$i7 = r0[$i6]"->"i8 = i10 ^ $i7";
    "i8 = i10 ^ $i7"->"<compiler.c2.Test5091921: int result> = i8";
    "<compiler.c2.Test5091921: int result> = i8"->"goto [?= i9 = i9 + 1]";
    "goto [?= i9 = i9 + 1]"->"i9 = i9 + 1";
    "$i1 = i9 & 3"->"$i2 = r0[$i1]";
    "$i2 = r0[$i1]"->"i8 = i8 + $i2";
    "i8 = i8 + $i2"->"<compiler.c2.Test5091921: int result> = i8";
    "<compiler.c2.Test5091921: int result> = i8"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"if i9 < i0 goto (branch)";
    "if i9 < i0 goto (branch)"->"return i8";
    "if i9 < i0 goto (branch)"->"if i9 <= -2147483648 goto $i1 = i9 & 3";
}
