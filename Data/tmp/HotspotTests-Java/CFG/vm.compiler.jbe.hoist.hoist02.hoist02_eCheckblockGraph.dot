digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: vm.compiler.jbe.hoist.hoist02.hoist02;
i5 = 0;
goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i2 = $r2[i5];
$r3 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i1 = $r3[i5];
if $i2 == $i1 goto i5 = i5 + 1;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a[\");
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r8 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i3 = $r8[i5];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; aopt[\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r13 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i4 = $r13[i5];
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r15);
return 0;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i5 = i5 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i0 = lengthof $r1;
if i5 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
"
    "Block 5:
[preds: 4 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: vm.compiler.jbe.hoist.hoist02.hoist02;
i5 = 0;
goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i0 = lengthof $r1;
if i5 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i2 = $r2[i5];
$r3 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i1 = $r3[i5];
if $i2 == $i1 goto i5 = i5 + 1;
"->"Block 2:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a[\");
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r8 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i3 = $r8[i5];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; aopt[\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r13 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i4 = $r13[i5];
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r15);
return 0;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i2 = $r2[i5];
$r3 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i1 = $r3[i5];
if $i2 == $i1 goto i5 = i5 + 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i5 = i5 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i5 = i5 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i0 = lengthof $r1;
if i5 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i0 = lengthof $r1;
if i5 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
"->"Block 5:
[preds: 4 ] [succs: ]
return 1;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i0 = lengthof $r1;
if i5 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] a>;
$i2 = $r2[i5];
$r3 = r0.<vm.compiler.jbe.hoist.hoist02.hoist02: int[] aopt>;
$i1 = $r3[i5];
if $i2 == $i1 goto i5 = i5 + 1;
";
}
