digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r1 := @parameter0: java.lang.String[];
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i0 = i1 * 10;
if i0 >= 0 goto i1 = i1 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
staticinvoke <jit.init.init02.inittest: void foo(int)>(i0);
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i1 = i1 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i1 < 10 goto i0 = i1 * 10;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z0 = <jit.init.init02.init02: boolean failed>;
if $z0 == 0 goto return;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r0 = new nsk.share.TestFailure;
specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"\n\nInitializing inittest, test FAILS\n\");
throw $r0;
"
    "Block 7:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
r1 := @parameter0: java.lang.String[];
i1 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i1 < 10 goto i0 = i1 * 10;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i0 = i1 * 10;
if i0 >= 0 goto i1 = i1 + 1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
staticinvoke <jit.init.init02.inittest: void foo(int)>(i0);
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
i0 = i1 * 10;
if i0 >= 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i1 = i1 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
staticinvoke <jit.init.init02.inittest: void foo(int)>(i0);
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i1 = i1 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i1 = i1 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i1 < 10 goto i0 = i1 * 10;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i1 < 10 goto i0 = i1 * 10;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$z0 = <jit.init.init02.init02: boolean failed>;
if $z0 == 0 goto return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i1 < 10 goto i0 = i1 * 10;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
i0 = i1 * 10;
if i0 >= 0 goto i1 = i1 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z0 = <jit.init.init02.init02: boolean failed>;
if $z0 == 0 goto return;
"->"Block 6:
[preds: 5 ] [succs: ]
$r0 = new nsk.share.TestFailure;
specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"\n\nInitializing inittest, test FAILS\n\");
throw $r0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$z0 = <jit.init.init02.init02: boolean failed>;
if $z0 == 0 goto return;
"->"Block 7:
[preds: 5 ] [succs: ]
return;
";
}
