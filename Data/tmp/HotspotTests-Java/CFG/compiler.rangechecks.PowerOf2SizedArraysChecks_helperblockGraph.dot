digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r7 := @parameter0: java.lang.String;
r3 := @parameter1: java.util.function.BiFunction;
r0 := @parameter2: int[];
r1 := @parameter3: int[];
r8 := @parameter4: boolean[][];
i4 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 1:
[preds: 5 ] [succs: 3 ]
i1 = r0[i4];
i5 = 0;
goto [?= $i2 = lengthof r1];
"
    "Block 2:
[preds: 3 ] [succs: 3 ]
i3 = r1[i5];
r2 = newarray (int)[i3];
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r5 = interfaceinvoke r3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r4, r2);
$r6 = (java.lang.Boolean) $r5;
z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();
$r9 = r8[i4];
$z1 = $r9[i5];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,int,boolean,boolean)>(r7, i1, i3, $z1, z0);
i5 = i5 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i2 = lengthof r1;
if i5 < $i2 goto i3 = r1[i5];
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i4 = i4 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i0 = lengthof r0;
if i4 < $i0 goto i1 = r0[i4];
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r7 := @parameter0: java.lang.String;
r3 := @parameter1: java.util.function.BiFunction;
r0 := @parameter2: int[];
r1 := @parameter3: int[];
r8 := @parameter4: boolean[][];
i4 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i0 = lengthof r0;
if i4 < $i0 goto i1 = r0[i4];
";
    "Block 1:
[preds: 5 ] [succs: 3 ]
i1 = r0[i4];
i5 = 0;
goto [?= $i2 = lengthof r1];
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i2 = lengthof r1;
if i5 < $i2 goto i3 = r1[i5];
";
    "Block 2:
[preds: 3 ] [succs: 3 ]
i3 = r1[i5];
r2 = newarray (int)[i3];
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r5 = interfaceinvoke r3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r4, r2);
$r6 = (java.lang.Boolean) $r5;
z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();
$r9 = r8[i4];
$z1 = $r9[i5];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,int,boolean,boolean)>(r7, i1, i3, $z1, z0);
i5 = i5 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i2 = lengthof r1;
if i5 < $i2 goto i3 = r1[i5];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i2 = lengthof r1;
if i5 < $i2 goto i3 = r1[i5];
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i4 = i4 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i2 = lengthof r1;
if i5 < $i2 goto i3 = r1[i5];
"->"Block 2:
[preds: 3 ] [succs: 3 ]
i3 = r1[i5];
r2 = newarray (int)[i3];
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
$r5 = interfaceinvoke r3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r4, r2);
$r6 = (java.lang.Boolean) $r5;
z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();
$r9 = r8[i4];
$z1 = $r9[i5];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,int,boolean,boolean)>(r7, i1, i3, $z1, z0);
i5 = i5 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i4 = i4 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i0 = lengthof r0;
if i4 < $i0 goto i1 = r0[i4];
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i0 = lengthof r0;
if i4 < $i0 goto i1 = r0[i4];
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i0 = lengthof r0;
if i4 < $i0 goto i1 = r0[i4];
"->"Block 1:
[preds: 5 ] [succs: 3 ]
i1 = r0[i4];
i5 = 0;
goto [?= $i2 = lengthof r1];
";
}
