digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String;
r0 := @parameter1: java.lang.instrument.Instrumentation;
$z0 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isRetransformClassesSupported()>();
if $z0 != 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Class retransformation is not supported.\");
return;
"
    "Block 2:
[preds: 0 ] [succs: 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Calling lambda to ensure that lambda forms were created\");
$r2 = <Agent: java.lang.Runnable lambda>;
interfaceinvoke $r2.<java.lang.Runnable: void run()>();
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Registering class file transformer\");
$r4 = new Agent;
specialinvoke $r4.<Agent: void <init>()>();
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void addTransformer(java.lang.instrument.ClassFileTransformer)>($r4);
$r5 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: java.lang.Class[] getAllLoadedClasses()>();
r6 = $r5;
i0 = lengthof $r5;
i1 = 0;
goto [?= (branch)];
"
    "Block 3:
[preds: 12 ] [succs: 4 11 ]
r7 = r6[i1];
$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"LambdaForm\");
if $z1 == 0 goto i1 = i1 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$z2 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isModifiableClass(java.lang.Class)>(r7);
if $z2 == 0 goto i1 = i1 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = newarray (java.lang.Object)[1];
$r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$r9[0] = $r11;
virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"We\'ve found a modifiable lambda form: %s%n\", $r9);
"
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$r13 = newarray (java.lang.Class)[1];
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r13[0] = r7;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void retransformClasses(java.lang.Class[])>($r13);
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= i1 = i1 + 1];
"
    "Block 10:
[preds: 5 6 7 8 ] [succs: ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = new java.lang.AssertionError;
specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>(\"Modification of modifiable class caused UnmodifiableClassException\", r16);
throw $r17;
"
    "Block 11:
[preds: 3 4 9 ] [succs: 12 ]
i1 = i1 + 1;
"
    "Block 12:
[preds: 2 11 ] [succs: 13 3 ]
if i1 < i0 goto r7 = r6[i1];
"
    "Block 13:
[preds: 12 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String;
r0 := @parameter1: java.lang.instrument.Instrumentation;
$z0 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isRetransformClassesSupported()>();
if $z0 != 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Class retransformation is not supported.\");
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r18 := @parameter0: java.lang.String;
r0 := @parameter1: java.lang.instrument.Instrumentation;
$z0 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isRetransformClassesSupported()>();
if $z0 != 0 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 0 ] [succs: 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Calling lambda to ensure that lambda forms were created\");
$r2 = <Agent: java.lang.Runnable lambda>;
interfaceinvoke $r2.<java.lang.Runnable: void run()>();
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Registering class file transformer\");
$r4 = new Agent;
specialinvoke $r4.<Agent: void <init>()>();
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void addTransformer(java.lang.instrument.ClassFileTransformer)>($r4);
$r5 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: java.lang.Class[] getAllLoadedClasses()>();
r6 = $r5;
i0 = lengthof $r5;
i1 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 ] [succs: 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Calling lambda to ensure that lambda forms were created\");
$r2 = <Agent: java.lang.Runnable lambda>;
interfaceinvoke $r2.<java.lang.Runnable: void run()>();
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Registering class file transformer\");
$r4 = new Agent;
specialinvoke $r4.<Agent: void <init>()>();
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void addTransformer(java.lang.instrument.ClassFileTransformer)>($r4);
$r5 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: java.lang.Class[] getAllLoadedClasses()>();
r6 = $r5;
i0 = lengthof $r5;
i1 = 0;
goto [?= (branch)];
"->"Block 12:
[preds: 2 11 ] [succs: 13 3 ]
if i1 < i0 goto r7 = r6[i1];
";
    "Block 3:
[preds: 12 ] [succs: 4 11 ]
r7 = r6[i1];
$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"LambdaForm\");
if $z1 == 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 11 ]
$z2 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isModifiableClass(java.lang.Class)>(r7);
if $z2 == 0 goto i1 = i1 + 1;
";
    "Block 3:
[preds: 12 ] [succs: 4 11 ]
r7 = r6[i1];
$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"LambdaForm\");
if $z1 == 0 goto i1 = i1 + 1;
"->"Block 11:
[preds: 3 4 9 ] [succs: 12 ]
i1 = i1 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$z2 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isModifiableClass(java.lang.Class)>(r7);
if $z2 == 0 goto i1 = i1 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 10 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = newarray (java.lang.Object)[1];
$r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$r9[0] = $r11;
virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"We\'ve found a modifiable lambda form: %s%n\", $r9);
";
    "Block 4:
[preds: 3 ] [succs: 5 11 ]
$z2 = interfaceinvoke r0.<java.lang.instrument.Instrumentation: boolean isModifiableClass(java.lang.Class)>(r7);
if $z2 == 0 goto i1 = i1 + 1;
"->"Block 11:
[preds: 3 4 9 ] [succs: 12 ]
i1 = i1 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = newarray (java.lang.Object)[1];
$r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$r9[0] = $r11;
virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"We\'ve found a modifiable lambda form: %s%n\", $r9);
"->"Block 6:
[preds: 5 ] [succs: 7 10 ]
$r13 = newarray (java.lang.Class)[1];
";
    "Block 5:
[preds: 4 ] [succs: 6 10 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = newarray (java.lang.Object)[1];
$r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$r9[0] = $r11;
virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"We\'ve found a modifiable lambda form: %s%n\", $r9);
"->"Block 10:
[preds: 5 6 7 8 ] [succs: ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = new java.lang.AssertionError;
specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>(\"Modification of modifiable class caused UnmodifiableClassException\", r16);
throw $r17;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$r13 = newarray (java.lang.Class)[1];
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
$r13[0] = r7;
";
    "Block 6:
[preds: 5 ] [succs: 7 10 ]
$r13 = newarray (java.lang.Class)[1];
"->"Block 10:
[preds: 5 6 7 8 ] [succs: ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = new java.lang.AssertionError;
specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>(\"Modification of modifiable class caused UnmodifiableClassException\", r16);
throw $r17;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r13[0] = r7;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void retransformClasses(java.lang.Class[])>($r13);
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$r13[0] = r7;
"->"Block 10:
[preds: 5 6 7 8 ] [succs: ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = new java.lang.AssertionError;
specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>(\"Modification of modifiable class caused UnmodifiableClassException\", r16);
throw $r17;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void retransformClasses(java.lang.Class[])>($r13);
"->"Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= i1 = i1 + 1];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
interfaceinvoke r0.<java.lang.instrument.Instrumentation: void retransformClasses(java.lang.Class[])>($r13);
"->"Block 10:
[preds: 5 6 7 8 ] [succs: ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = new java.lang.AssertionError;
specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>(\"Modification of modifiable class caused UnmodifiableClassException\", r16);
throw $r17;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
goto [?= i1 = i1 + 1];
"->"Block 11:
[preds: 3 4 9 ] [succs: 12 ]
i1 = i1 + 1;
";
    "Block 11:
[preds: 3 4 9 ] [succs: 12 ]
i1 = i1 + 1;
"->"Block 12:
[preds: 2 11 ] [succs: 13 3 ]
if i1 < i0 goto r7 = r6[i1];
";
    "Block 12:
[preds: 2 11 ] [succs: 13 3 ]
if i1 < i0 goto r7 = r6[i1];
"->"Block 13:
[preds: 12 ] [succs: ]
return;
";
    "Block 12:
[preds: 2 11 ] [succs: 13 3 ]
if i1 < i0 goto r7 = r6[i1];
"->"Block 3:
[preds: 12 ] [succs: 4 11 ]
r7 = r6[i1];
$r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
$z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"LambdaForm\");
if $z1 == 0 goto i1 = i1 + 1;
";
}
