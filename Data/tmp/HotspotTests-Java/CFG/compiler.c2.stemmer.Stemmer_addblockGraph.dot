digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
r3 := @parameter0: char[];
i0 := @parameter1: int;
$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i3 = $i1 + i0;
$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i2 = lengthof $r1;
if $i3 < $i2 goto i13 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i8 = $i7 + i0;
$i9 = $i8 + 50;
r5 = newarray (char)[$i9];
i12 = 0;
goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>];
"
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$c11 = $r4[i12];
r5[i12] = $c11;
i12 = i12 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>;
if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5;
"
    "Block 5:
[preds: 0 4 ] [succs: 7 ]
i13 = 0;
goto [?= (branch)];
"
    "Block 6:
[preds: 7 ] [succs: 7 ]
$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i5 = $i4 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i> = $i5;
$c6 = r3[i13];
$r2[$i4] = $c6;
i13 = i13 + 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 6 ]
if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"
    "Block 8:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
r3 := @parameter0: char[];
i0 := @parameter1: int;
$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i3 = $i1 + i0;
$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i2 = lengthof $r1;
if $i3 < $i2 goto i13 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i8 = $i7 + i0;
$i9 = $i8 + 50;
r5 = newarray (char)[$i9];
i12 = 0;
goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>];
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
r3 := @parameter0: char[];
i0 := @parameter1: int;
$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i3 = $i1 + i0;
$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i2 = lengthof $r1;
if $i3 < $i2 goto i13 = 0;
"->"Block 5:
[preds: 0 4 ] [succs: 7 ]
i13 = 0;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i8 = $i7 + i0;
$i9 = $i8 + 50;
r5 = newarray (char)[$i9];
i12 = 0;
goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>];
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>;
if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
";
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$c11 = $r4[i12];
r5[i12] = $c11;
i12 = i12 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>;
if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>;
if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>;
if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"->"Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$c11 = $r4[i12];
r5[i12] = $c11;
i12 = i12 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5;
"->"Block 5:
[preds: 0 4 ] [succs: 7 ]
i13 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 0 4 ] [succs: 7 ]
i13 = 0;
goto [?= (branch)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 6 ]
if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
";
    "Block 6:
[preds: 7 ] [succs: 7 ]
$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i5 = $i4 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i> = $i5;
$c6 = r3[i13];
$r2[$i4] = $c6;
i13 = i13 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 6 ]
if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 6 ]
if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"->"Block 8:
[preds: 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 6 ]
if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
"->"Block 6:
[preds: 7 ] [succs: 7 ]
$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>;
$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i5 = $i4 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i> = $i5;
$c6 = r3[i13];
$r2[$i4] = $c6;
i13 = i13 + 1;
";
}
