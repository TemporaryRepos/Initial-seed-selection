digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.arraycopy.TestEliminateArrayCopy$CloneTests"
    "specialinvoke $r0.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void <init>()>()"
    "r1 = $r0"
    "$r2 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>"
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\")"
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>(null, \"m2\")"
    "$r3 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>"
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m3\")"
    "$r4 = new compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests"
    "specialinvoke $r4.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void <init>()>()"
    "r5 = $r4"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m1\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m2\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m3\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m4\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m5\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m6\")"
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m7\")"
    "$z0 = r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: boolean success>"
    "if $z0 == 0 goto $r6 = new java.lang.RuntimeException"
    "$z1 = r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: boolean success>"
    "if $z1 != 0 goto i0 = 0"
    "$r6 = new java.lang.RuntimeException"
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\")"
    "throw $r6"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"
    "i0 = i0 + 1"
    "if i0 < 7000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"
    "$r8 = <compiler.arraycopy.TestEliminateArrayCopy: java.lang.Object[] m1_array>"
    "$r7 = new java.lang.Object"
    "specialinvoke $r7.<java.lang.Object: void <init>()>()"
    "$r8[0] = $r7"
    "i1 = 0"
    "i1 = i1 + 1"
    "if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"
    "<compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element> = 0"
    "$z2 = <compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element>"
    "if $z2 == 0 goto return"
    "$r9 = new java.lang.RuntimeException"
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"OptimizePtrCompare test failed\")"
    "throw $r9"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$r0 = new compiler.arraycopy.TestEliminateArrayCopy$CloneTests";
    "$r0 = new compiler.arraycopy.TestEliminateArrayCopy$CloneTests"->"specialinvoke $r0.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void <init>()>()";
    "specialinvoke $r0.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>";
    "$r2 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>"->"virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\")";
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r2, \"m1\")"->"virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>(null, \"m2\")";
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>(null, \"m2\")"->"$r3 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>";
    "$r3 = <compiler.arraycopy.TestEliminateArrayCopy$CloneTests: compiler.arraycopy.TestInstanceCloneUtils$E e>"->"virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m3\")";
    "virtualinvoke r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: void doTest(compiler.arraycopy.TestInstanceCloneUtils$Base,java.lang.String)>($r3, \"m3\")"->"$r4 = new compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests";
    "$r4 = new compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests"->"specialinvoke $r4.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void <init>()>()";
    "specialinvoke $r4.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m1\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m1\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m2\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m2\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m3\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m3\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m4\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m4\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m5\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m5\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m6\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m6\")"->"virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m7\")";
    "virtualinvoke r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: void doTest(java.lang.String)>(\"m7\")"->"$z0 = r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: boolean success>";
    "$z0 = r1.<compiler.arraycopy.TestEliminateArrayCopy$CloneTests: boolean success>"->"if $z0 == 0 goto $r6 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r6 = new java.lang.RuntimeException"->"$z1 = r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: boolean success>";
    "if $z0 == 0 goto $r6 = new java.lang.RuntimeException"->"$r6 = new java.lang.RuntimeException";
    "$z1 = r5.<compiler.arraycopy.TestEliminateArrayCopy$ArrayCopyTests: boolean success>"->"if $z1 != 0 goto i0 = 0";
    "if $z1 != 0 goto i0 = 0"->"$r6 = new java.lang.RuntimeException";
    "if $z1 != 0 goto i0 = 0"->"i0 = 0";
    "$r6 = new java.lang.RuntimeException"->"specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\")";
    "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\")"->"throw $r6";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 7000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 7000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "if i0 < 7000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"$r8 = <compiler.arraycopy.TestEliminateArrayCopy: java.lang.Object[] m1_array>";
    "if i0 < 7000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "$r8 = <compiler.arraycopy.TestEliminateArrayCopy: java.lang.Object[] m1_array>"->"$r7 = new java.lang.Object";
    "$r7 = new java.lang.Object"->"specialinvoke $r7.<java.lang.Object: void <init>()>()";
    "specialinvoke $r7.<java.lang.Object: void <init>()>()"->"$r8[0] = $r7";
    "$r8[0] = $r7"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"<compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element> = 0";
    "if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "<compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element> = 0"->"staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)";
    "staticinvoke <compiler.arraycopy.TestEliminateArrayCopy: void m1(int)>(0)"->"$z2 = <compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element>";
    "$z2 = <compiler.arraycopy.TestEliminateArrayCopy: boolean m1_array_null_element>"->"if $z2 == 0 goto return";
    "if $z2 == 0 goto return"->"$r9 = new java.lang.RuntimeException";
    "if $z2 == 0 goto return"->"return";
    "$r9 = new java.lang.RuntimeException"->"specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"OptimizePtrCompare test failed\")";
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"OptimizePtrCompare test failed\")"->"throw $r9";
}
