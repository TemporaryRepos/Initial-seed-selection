digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "d0 = 0.01"
    "r0 = newmultiarray (double)[500][500]"
    "d1 = 500.0"
    "d2 = 1.0 / d1"
    "d3 = 1.0 / d1"
    "$r1 = new jit.FloatingPoint.gen_math.Loops01.Loops01"
    "specialinvoke $r1.<jit.FloatingPoint.gen_math.Loops01.Loops01: void <init>()>()"
    "r2 = $r1"
    "i0 = 0"
    "goto [?= (branch)]"
    "i1 = 0"
    "$d4 = (double) i0"
    "d5 = $d4 * d2"
    "$d6 = (double) i1"
    "d7 = $d6 * d3"
    "$d9 = d5 * d5"
    "$d8 = d7 * d7"
    "$d10 = $d9 + $d8"
    "d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)"
    "$d12 = 4.0 * d5"
    "$d13 = staticinvoke <java.lang.Math: double sin(double)>($d12)"
    "$d14 = 4.0 * d7"
    "$d15 = staticinvoke <java.lang.Math: double cos(double)>($d14)"
    "d16 = $d13 + $d15"
    "$d17 = 2.0 + d16"
    "d18 = d11 * $d17"
    "$r3 = r0[i0]"
    "$r3[i1] = d18"
    "i1 = i1 + 1"
    "if i1 < 500 goto $d4 = (double) i0"
    "i0 = i0 + 1"
    "if i0 < 500 goto i1 = 0"
    "d21 = virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: double Norma(int,double[][])>(500, r0)"
    "$d19 = 2.5 - d21"
    "d20 = staticinvoke <java.lang.Math: double abs(double)>($d19)"
    "virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: void Echeck(double,double)>(d20, d0)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"d0 = 0.01";
    "d0 = 0.01"->"r0 = newmultiarray (double)[500][500]";
    "r0 = newmultiarray (double)[500][500]"->"d1 = 500.0";
    "d1 = 500.0"->"d2 = 1.0 / d1";
    "d2 = 1.0 / d1"->"d3 = 1.0 / d1";
    "d3 = 1.0 / d1"->"$r1 = new jit.FloatingPoint.gen_math.Loops01.Loops01";
    "$r1 = new jit.FloatingPoint.gen_math.Loops01.Loops01"->"specialinvoke $r1.<jit.FloatingPoint.gen_math.Loops01.Loops01: void <init>()>()";
    "specialinvoke $r1.<jit.FloatingPoint.gen_math.Loops01.Loops01: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 500 goto i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 500 goto $d4 = (double) i0";
    "$d4 = (double) i0"->"d5 = $d4 * d2";
    "d5 = $d4 * d2"->"$d6 = (double) i1";
    "$d6 = (double) i1"->"d7 = $d6 * d3";
    "d7 = $d6 * d3"->"$d9 = d5 * d5";
    "$d9 = d5 * d5"->"$d8 = d7 * d7";
    "$d8 = d7 * d7"->"$d10 = $d9 + $d8";
    "$d10 = $d9 + $d8"->"d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)";
    "d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10)"->"$d12 = 4.0 * d5";
    "$d12 = 4.0 * d5"->"$d13 = staticinvoke <java.lang.Math: double sin(double)>($d12)";
    "$d13 = staticinvoke <java.lang.Math: double sin(double)>($d12)"->"$d14 = 4.0 * d7";
    "$d14 = 4.0 * d7"->"$d15 = staticinvoke <java.lang.Math: double cos(double)>($d14)";
    "$d15 = staticinvoke <java.lang.Math: double cos(double)>($d14)"->"d16 = $d13 + $d15";
    "d16 = $d13 + $d15"->"$d17 = 2.0 + d16";
    "$d17 = 2.0 + d16"->"d18 = d11 * $d17";
    "d18 = d11 * $d17"->"$r3 = r0[i0]";
    "$r3 = r0[i0]"->"$r3[i1] = d18";
    "$r3[i1] = d18"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 500 goto $d4 = (double) i0";
    "if i1 < 500 goto $d4 = (double) i0"->"i0 = i0 + 1";
    "if i1 < 500 goto $d4 = (double) i0"->"$d4 = (double) i0";
    "i0 = i0 + 1"->"if i0 < 500 goto i1 = 0";
    "if i0 < 500 goto i1 = 0"->"d21 = virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: double Norma(int,double[][])>(500, r0)";
    "if i0 < 500 goto i1 = 0"->"i1 = 0";
    "d21 = virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: double Norma(int,double[][])>(500, r0)"->"$d19 = 2.5 - d21";
    "$d19 = 2.5 - d21"->"d20 = staticinvoke <java.lang.Math: double abs(double)>($d19)";
    "d20 = staticinvoke <java.lang.Math: double abs(double)>($d19)"->"virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: void Echeck(double,double)>(d20, d0)";
    "virtualinvoke r2.<jit.FloatingPoint.gen_math.Loops01.Loops01: void Echeck(double,double)>(d20, d0)"->"return";
}
