digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "z4 = 1"
    "i48 = 0"
    "goto [?= (branch)]"
    "$i0 = i48 % 2"
    "if $i0 != 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)]"
    "$z5 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)"
    "$i1 = i48 % 2"
    "if $i1 != 0 goto $z6 = 0"
    "$z6 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)]"
    "$z6 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)"
    "$i2 = i48 % 2"
    "if $i2 != 0 goto $z7 = 0"
    "$z7 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)]"
    "$z7 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0)"
    "i48 = i48 + 1"
    "if i48 < 20000 goto $i0 = i48 % 2"
    "<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1)"
    "$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>"
    "if $z0 != 0 goto i49 = 0"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\")"
    "z4 = 0"
    "i49 = 0"
    "$i12 = i49 % 2"
    "if $i12 != 0 goto $z8 = 0"
    "$z8 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)]"
    "$z8 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)"
    "$i13 = i49 % 2"
    "if $i13 != 0 goto $z9 = 0"
    "$z9 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)]"
    "$z9 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)"
    "$i14 = i49 % 2"
    "if $i14 != 0 goto $z10 = 0"
    "$z10 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)]"
    "$z10 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0)"
    "i49 = i49 + 1"
    "if i49 < 20000 goto $i12 = i49 % 2"
    "<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1)"
    "$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>"
    "if $z1 != 0 goto i50 = 0"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\")"
    "i50 = 0"
    "$i24 = i50 % 2"
    "if $i24 != 0 goto $z11 = 0"
    "$z11 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)]"
    "$z11 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)"
    "$i25 = i50 % 2"
    "if $i25 != 0 goto $z12 = 0"
    "$z12 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)]"
    "$z12 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)"
    "$i26 = i50 % 2"
    "if $i26 != 0 goto $z13 = 0"
    "$z13 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)]"
    "$z13 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0)"
    "i50 = i50 + 1"
    "if i50 < 20000 goto $i24 = i50 % 2"
    "<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1)"
    "$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>"
    "if $z2 != 0 goto i51 = 0"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\")"
    "i51 = 0"
    "$i36 = i51 % 2"
    "if $i36 != 0 goto $z14 = 0"
    "$z14 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)]"
    "$z14 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)"
    "$i37 = i51 % 2"
    "if $i37 != 0 goto $z15 = 0"
    "$z15 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)]"
    "$z15 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)"
    "$i38 = i51 % 2"
    "if $i38 != 0 goto $z16 = 0"
    "$z16 = 1"
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)]"
    "$z16 = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0)"
    "i51 = i51 + 1"
    "if i51 < 20000 goto $i36 = i51 % 2"
    "<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0"
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1)"
    "$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>"
    "if $z3 != 0 goto (branch)"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\")"
    "if z4 != 0 goto return"
    "$r0 = new java.lang.RuntimeException"
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Some tests failed\")"
    "throw $r0"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"z4 = 1";
    "z4 = 1"->"i48 = 0";
    "i48 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i48 < 20000 goto $i0 = i48 % 2";
    "$i0 = i48 % 2"->"if $i0 != 0 goto $z5 = 0";
    "if $i0 != 0 goto $z5 = 0"->"$z5 = 1";
    "if $i0 != 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)";
    "$z5 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)"->"$i1 = i48 % 2";
    "$i1 = i48 % 2"->"if $i1 != 0 goto $z6 = 0";
    "if $i1 != 0 goto $z6 = 0"->"$z6 = 1";
    "if $i1 != 0 goto $z6 = 0"->"$z6 = 0";
    "$z6 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)";
    "$z6 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)"->"$i2 = i48 % 2";
    "$i2 = i48 % 2"->"if $i2 != 0 goto $z7 = 0";
    "if $i2 != 0 goto $z7 = 0"->"$z7 = 1";
    "if $i2 != 0 goto $z7 = 0"->"$z7 = 0";
    "$z7 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)";
    "$z7 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0)"->"i48 = i48 + 1";
    "i48 = i48 + 1"->"if i48 < 20000 goto $i0 = i48 % 2";
    "if i48 < 20000 goto $i0 = i48 % 2"->"<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0";
    "if i48 < 20000 goto $i0 = i48 % 2"->"$i0 = i48 % 2";
    "<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1)"->"$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>";
    "$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>"->"if $z0 != 0 goto i49 = 0";
    "if $z0 != 0 goto i49 = 0"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto i49 = 0"->"i49 = 0";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\")"->"z4 = 0";
    "z4 = 0"->"i49 = 0";
    "i49 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i49 < 20000 goto $i12 = i49 % 2";
    "$i12 = i49 % 2"->"if $i12 != 0 goto $z8 = 0";
    "if $i12 != 0 goto $z8 = 0"->"$z8 = 1";
    "if $i12 != 0 goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)";
    "$z8 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)"->"$i13 = i49 % 2";
    "$i13 = i49 % 2"->"if $i13 != 0 goto $z9 = 0";
    "if $i13 != 0 goto $z9 = 0"->"$z9 = 1";
    "if $i13 != 0 goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)";
    "$z9 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)"->"$i14 = i49 % 2";
    "$i14 = i49 % 2"->"if $i14 != 0 goto $z10 = 0";
    "if $i14 != 0 goto $z10 = 0"->"$z10 = 1";
    "if $i14 != 0 goto $z10 = 0"->"$z10 = 0";
    "$z10 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)";
    "$z10 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0)"->"i49 = i49 + 1";
    "i49 = i49 + 1"->"if i49 < 20000 goto $i12 = i49 % 2";
    "if i49 < 20000 goto $i12 = i49 % 2"->"<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0";
    "if i49 < 20000 goto $i12 = i49 % 2"->"$i12 = i49 % 2";
    "<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1)"->"$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>";
    "$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>"->"if $z1 != 0 goto i50 = 0";
    "if $z1 != 0 goto i50 = 0"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 != 0 goto i50 = 0"->"i50 = 0";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\")"->"z4 = 0";
    "z4 = 0"->"i50 = 0";
    "i50 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i50 < 20000 goto $i24 = i50 % 2";
    "$i24 = i50 % 2"->"if $i24 != 0 goto $z11 = 0";
    "if $i24 != 0 goto $z11 = 0"->"$z11 = 1";
    "if $i24 != 0 goto $z11 = 0"->"$z11 = 0";
    "$z11 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)";
    "$z11 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)"->"$i25 = i50 % 2";
    "$i25 = i50 % 2"->"if $i25 != 0 goto $z12 = 0";
    "if $i25 != 0 goto $z12 = 0"->"$z12 = 1";
    "if $i25 != 0 goto $z12 = 0"->"$z12 = 0";
    "$z12 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)";
    "$z12 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)"->"$i26 = i50 % 2";
    "$i26 = i50 % 2"->"if $i26 != 0 goto $z13 = 0";
    "if $i26 != 0 goto $z13 = 0"->"$z13 = 1";
    "if $i26 != 0 goto $z13 = 0"->"$z13 = 0";
    "$z13 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)";
    "$z13 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0)"->"i50 = i50 + 1";
    "i50 = i50 + 1"->"if i50 < 20000 goto $i24 = i50 % 2";
    "if i50 < 20000 goto $i24 = i50 % 2"->"<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0";
    "if i50 < 20000 goto $i24 = i50 % 2"->"$i24 = i50 % 2";
    "<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1)"->"$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>";
    "$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>"->"if $z2 != 0 goto i51 = 0";
    "if $z2 != 0 goto i51 = 0"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if $z2 != 0 goto i51 = 0"->"i51 = 0";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\")"->"z4 = 0";
    "z4 = 0"->"i51 = 0";
    "i51 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i51 < 20000 goto $i36 = i51 % 2";
    "$i36 = i51 % 2"->"if $i36 != 0 goto $z14 = 0";
    "if $i36 != 0 goto $z14 = 0"->"$z14 = 1";
    "if $i36 != 0 goto $z14 = 0"->"$z14 = 0";
    "$z14 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)";
    "$z14 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)"->"$i37 = i51 % 2";
    "$i37 = i51 % 2"->"if $i37 != 0 goto $z15 = 0";
    "if $i37 != 0 goto $z15 = 0"->"$z15 = 1";
    "if $i37 != 0 goto $z15 = 0"->"$z15 = 0";
    "$z15 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)";
    "$z15 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)"->"$i38 = i51 % 2";
    "$i38 = i51 % 2"->"if $i38 != 0 goto $z16 = 0";
    "if $i38 != 0 goto $z16 = 0"->"$z16 = 1";
    "if $i38 != 0 goto $z16 = 0"->"$z16 = 0";
    "$z16 = 1"->"goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)]";
    "goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)]"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)";
    "$z16 = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0)"->"i51 = i51 + 1";
    "i51 = i51 + 1"->"if i51 < 20000 goto $i36 = i51 % 2";
    "if i51 < 20000 goto $i36 = i51 % 2"->"<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0";
    "if i51 < 20000 goto $i36 = i51 % 2"->"$i36 = i51 % 2";
    "<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0"->"staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1)";
    "staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1)"->"$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>";
    "$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>"->"if $z3 != 0 goto (branch)";
    "if $z3 != 0 goto (branch)"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if $z3 != 0 goto (branch)"->"if z4 != 0 goto return";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\")"->"z4 = 0";
    "z4 = 0"->"if z4 != 0 goto return";
    "if z4 != 0 goto return"->"$r0 = new java.lang.RuntimeException";
    "if z4 != 0 goto return"->"return";
    "$r0 = new java.lang.RuntimeException"->"specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Some tests failed\")";
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Some tests failed\")"->"throw $r0";
}
