digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 5 goto $r1 = r0[0];
"
    "Block 1:
[preds: 0 ] [succs: ]
$r79 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>(\"Usage: java TestGCOld <size> <work> <ratio> <mutation> <steps>\");
$r80 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>(\"  where <size> is the live storage in megabytes\");
$r81 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>(\"        <work> is the mutator work per step (arbitrary units)\");
$r82 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>(\"        <ratio> is the ratio of short-lived to long-lived allocation\");
$r83 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>(\"        <mutation> is the mutations per step\");
$r84 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>(\"        <steps> is the number of steps\");
return;
"
    "Block 2:
[preds: 0 ] [succs: 4 ]
$r1 = r0[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);
<TestGCOld: int size> = $i1;
$r2 = r0[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
<TestGCOld: int workUnits> = $i2;
$r3 = r0[2];
$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
<TestGCOld: int promoteRate> = $i3;
$r4 = r0[3];
$i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
<TestGCOld: int ptrMutRate> = $i4;
$r5 = r0[4];
$i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
<TestGCOld: int steps> = $i5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
$i6 = <TestGCOld: int size>;
$r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes of live storage\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
$i7 = <TestGCOld: int workUnits>;
$r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
$r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" work units per step\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"promotion ratio is 1:\");
$i8 = <TestGCOld: int promoteRate>;
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"pointer mutation rate is \");
$i9 = <TestGCOld: int ptrMutRate>;
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r23);
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
$i10 = <TestGCOld: int steps>;
$r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);
specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" steps\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);
staticinvoke <TestGCOld: void init()>();
<TestGCOld: long youngBytes> = 0L;
<TestGCOld: long nodes> = 0L;
$r29 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"Initialization complete...\");
l11 = 0L;
i28 = 0;
goto [?= $i12 = <TestGCOld: int steps>];
"
    "Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <TestGCOld: void doStep(long)>(1000000L);
i28 = i28 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i12 = <TestGCOld: int steps>;
if i28 < $i12 goto staticinvoke <TestGCOld: void doStep(long)>(1000000L);
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
l29 = 0L;
$l13 = l29 - l11;
$f0 = (float) $l13;
f1 = $f0 / 1000.0F;
r30 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(1);
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"\nTook \");
$d0 = (double) f1;
$r33 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d0);
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sec in steady state.\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(2);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Allocated \");
$i14 = <TestGCOld: int steps>;
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb of young gen garbage\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (= \");
$i15 = <TestGCOld: int steps>;
$f2 = (float) $i15;
$f3 = $f2 / f1;
$d1 = (double) $f3;
$r42 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d1);
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r47 = <java.lang.System: java.io.PrintStream out>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually allocated \");
$l16 = <TestGCOld: long youngBytes>;
$f4 = (float) $l16;
$f5 = $f4 / 1000000.0F;
$d2 = (double) $f5;
$r48 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d2);
$r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51);
$i17 = <TestGCOld: int steps>;
$f7 = (float) $i17;
$i18 = <TestGCOld: int promoteRate>;
$f6 = (float) $i18;
f8 = $f7 / $f6;
$r53 = <java.lang.System: java.io.PrintStream out>;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Promoted \");
$r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb (= \");
$f9 = f8 / f1;
$d3 = (double) $f9;
$r56 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d3);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r61 = <java.lang.System: java.io.PrintStream out>;
$r60 = new java.lang.StringBuilder;
specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually promoted \");
$l19 = <TestGCOld: long nodes>;
$l20 = $l19 * 20L;
$f10 = (float) $l20;
$f11 = $f10 / 1000000.0F;
$d4 = (double) $f11;
$r62 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d4);
$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r65);
$i21 = <TestGCOld: int ptrMutRate>;
if $i21 == 0 goto $r67 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r72 = <java.lang.System: java.io.PrintStream out>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Mutated \");
$l26 = <TestGCOld: long actuallyMut>;
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" pointers (= \");
$l27 = <TestGCOld: long actuallyMut>;
$f12 = (float) $l27;
$f13 = $f12 / f1;
$d5 = (double) $f13;
$r75 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d5);
$r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ptrs/sec)\");
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r78);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
$r67 = <java.lang.System: java.io.PrintStream out>;
$r66 = new java.lang.StringBuilder;
specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Checksum = \");
$l24 = <TestGCOld: long mutatorSum>;
$r68 = <TestGCOld: int[] aexport>;
$i22 = lengthof $r68;
$l23 = (long) $i22;
$l25 = $l24 + $l23;
$r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 5 goto $r1 = r0[0];
"->"Block 1:
[preds: 0 ] [succs: ]
$r79 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>(\"Usage: java TestGCOld <size> <work> <ratio> <mutation> <steps>\");
$r80 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>(\"  where <size> is the live storage in megabytes\");
$r81 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>(\"        <work> is the mutator work per step (arbitrary units)\");
$r82 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>(\"        <ratio> is the ratio of short-lived to long-lived allocation\");
$r83 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>(\"        <mutation> is the mutations per step\");
$r84 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>(\"        <steps> is the number of steps\");
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 5 goto $r1 = r0[0];
"->"Block 2:
[preds: 0 ] [succs: 4 ]
$r1 = r0[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);
<TestGCOld: int size> = $i1;
$r2 = r0[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
<TestGCOld: int workUnits> = $i2;
$r3 = r0[2];
$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
<TestGCOld: int promoteRate> = $i3;
$r4 = r0[3];
$i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
<TestGCOld: int ptrMutRate> = $i4;
$r5 = r0[4];
$i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
<TestGCOld: int steps> = $i5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
$i6 = <TestGCOld: int size>;
$r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes of live storage\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
$i7 = <TestGCOld: int workUnits>;
$r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
$r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" work units per step\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"promotion ratio is 1:\");
$i8 = <TestGCOld: int promoteRate>;
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"pointer mutation rate is \");
$i9 = <TestGCOld: int ptrMutRate>;
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r23);
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
$i10 = <TestGCOld: int steps>;
$r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);
specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" steps\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);
staticinvoke <TestGCOld: void init()>();
<TestGCOld: long youngBytes> = 0L;
<TestGCOld: long nodes> = 0L;
$r29 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"Initialization complete...\");
l11 = 0L;
i28 = 0;
goto [?= $i12 = <TestGCOld: int steps>];
";
    "Block 2:
[preds: 0 ] [succs: 4 ]
$r1 = r0[0];
$i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);
<TestGCOld: int size> = $i1;
$r2 = r0[1];
$i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
<TestGCOld: int workUnits> = $i2;
$r3 = r0[2];
$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
<TestGCOld: int promoteRate> = $i3;
$r4 = r0[3];
$i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
<TestGCOld: int ptrMutRate> = $i4;
$r5 = r0[4];
$i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
<TestGCOld: int steps> = $i5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
$i6 = <TestGCOld: int size>;
$r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes of live storage\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
$i7 = <TestGCOld: int workUnits>;
$r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
$r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" work units per step\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"promotion ratio is 1:\");
$i8 = <TestGCOld: int promoteRate>;
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"pointer mutation rate is \");
$i9 = <TestGCOld: int ptrMutRate>;
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r23);
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
$i10 = <TestGCOld: int steps>;
$r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);
specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" steps\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);
staticinvoke <TestGCOld: void init()>();
<TestGCOld: long youngBytes> = 0L;
<TestGCOld: long nodes> = 0L;
$r29 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>(\"Initialization complete...\");
l11 = 0L;
i28 = 0;
goto [?= $i12 = <TestGCOld: int steps>];
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i12 = <TestGCOld: int steps>;
if i28 < $i12 goto staticinvoke <TestGCOld: void doStep(long)>(1000000L);
";
    "Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <TestGCOld: void doStep(long)>(1000000L);
i28 = i28 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i12 = <TestGCOld: int steps>;
if i28 < $i12 goto staticinvoke <TestGCOld: void doStep(long)>(1000000L);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i12 = <TestGCOld: int steps>;
if i28 < $i12 goto staticinvoke <TestGCOld: void doStep(long)>(1000000L);
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
l29 = 0L;
$l13 = l29 - l11;
$f0 = (float) $l13;
f1 = $f0 / 1000.0F;
r30 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(1);
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"\nTook \");
$d0 = (double) f1;
$r33 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d0);
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sec in steady state.\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(2);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Allocated \");
$i14 = <TestGCOld: int steps>;
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb of young gen garbage\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (= \");
$i15 = <TestGCOld: int steps>;
$f2 = (float) $i15;
$f3 = $f2 / f1;
$d1 = (double) $f3;
$r42 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d1);
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r47 = <java.lang.System: java.io.PrintStream out>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually allocated \");
$l16 = <TestGCOld: long youngBytes>;
$f4 = (float) $l16;
$f5 = $f4 / 1000000.0F;
$d2 = (double) $f5;
$r48 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d2);
$r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51);
$i17 = <TestGCOld: int steps>;
$f7 = (float) $i17;
$i18 = <TestGCOld: int promoteRate>;
$f6 = (float) $i18;
f8 = $f7 / $f6;
$r53 = <java.lang.System: java.io.PrintStream out>;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Promoted \");
$r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb (= \");
$f9 = f8 / f1;
$d3 = (double) $f9;
$r56 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d3);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r61 = <java.lang.System: java.io.PrintStream out>;
$r60 = new java.lang.StringBuilder;
specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually promoted \");
$l19 = <TestGCOld: long nodes>;
$l20 = $l19 * 20L;
$f10 = (float) $l20;
$f11 = $f10 / 1000000.0F;
$d4 = (double) $f11;
$r62 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d4);
$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r65);
$i21 = <TestGCOld: int ptrMutRate>;
if $i21 == 0 goto $r67 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i12 = <TestGCOld: int steps>;
if i28 < $i12 goto staticinvoke <TestGCOld: void doStep(long)>(1000000L);
"->"Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <TestGCOld: void doStep(long)>(1000000L);
i28 = i28 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
l29 = 0L;
$l13 = l29 - l11;
$f0 = (float) $l13;
f1 = $f0 / 1000.0F;
r30 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(1);
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"\nTook \");
$d0 = (double) f1;
$r33 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d0);
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sec in steady state.\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(2);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Allocated \");
$i14 = <TestGCOld: int steps>;
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb of young gen garbage\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (= \");
$i15 = <TestGCOld: int steps>;
$f2 = (float) $i15;
$f3 = $f2 / f1;
$d1 = (double) $f3;
$r42 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d1);
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r47 = <java.lang.System: java.io.PrintStream out>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually allocated \");
$l16 = <TestGCOld: long youngBytes>;
$f4 = (float) $l16;
$f5 = $f4 / 1000000.0F;
$d2 = (double) $f5;
$r48 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d2);
$r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51);
$i17 = <TestGCOld: int steps>;
$f7 = (float) $i17;
$i18 = <TestGCOld: int promoteRate>;
$f6 = (float) $i18;
f8 = $f7 / $f6;
$r53 = <java.lang.System: java.io.PrintStream out>;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Promoted \");
$r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb (= \");
$f9 = f8 / f1;
$d3 = (double) $f9;
$r56 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d3);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r61 = <java.lang.System: java.io.PrintStream out>;
$r60 = new java.lang.StringBuilder;
specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually promoted \");
$l19 = <TestGCOld: long nodes>;
$l20 = $l19 * 20L;
$f10 = (float) $l20;
$f11 = $f10 / 1000000.0F;
$d4 = (double) $f11;
$r62 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d4);
$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r65);
$i21 = <TestGCOld: int ptrMutRate>;
if $i21 == 0 goto $r67 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r72 = <java.lang.System: java.io.PrintStream out>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Mutated \");
$l26 = <TestGCOld: long actuallyMut>;
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" pointers (= \");
$l27 = <TestGCOld: long actuallyMut>;
$f12 = (float) $l27;
$f13 = $f12 / f1;
$d5 = (double) $f13;
$r75 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d5);
$r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ptrs/sec)\");
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r78);
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
l29 = 0L;
$l13 = l29 - l11;
$f0 = (float) $l13;
f1 = $f0 / 1000.0F;
r30 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(1);
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"\nTook \");
$d0 = (double) f1;
$r33 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d0);
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sec in steady state.\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);
virtualinvoke r30.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(2);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Allocated \");
$i14 = <TestGCOld: int steps>;
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb of young gen garbage\");
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (= \");
$i15 = <TestGCOld: int steps>;
$f2 = (float) $i15;
$f3 = $f2 / f1;
$d1 = (double) $f3;
$r42 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d1);
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r45);
$r47 = <java.lang.System: java.io.PrintStream out>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually allocated \");
$l16 = <TestGCOld: long youngBytes>;
$f4 = (float) $l16;
$f5 = $f4 / 1000000.0F;
$d2 = (double) $f5;
$r48 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d2);
$r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51);
$i17 = <TestGCOld: int steps>;
$f7 = (float) $i17;
$i18 = <TestGCOld: int promoteRate>;
$f6 = (float) $i18;
f8 = $f7 / $f6;
$r53 = <java.lang.System: java.io.PrintStream out>;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Promoted \");
$r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb (= \");
$f9 = f8 / f1;
$d3 = (double) $f9;
$r56 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d3);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Mb/sec)\");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r59);
$r61 = <java.lang.System: java.io.PrintStream out>;
$r60 = new java.lang.StringBuilder;
specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"    (actually promoted \");
$l19 = <TestGCOld: long nodes>;
$l20 = $l19 * 20L;
$f10 = (float) $l20;
$f11 = $f10 / 1000000.0F;
$d4 = (double) $f11;
$r62 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d4);
$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" megabytes)\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r65);
$i21 = <TestGCOld: int ptrMutRate>;
if $i21 == 0 goto $r67 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 5 6 ] [succs: ]
$r67 = <java.lang.System: java.io.PrintStream out>;
$r66 = new java.lang.StringBuilder;
specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Checksum = \");
$l24 = <TestGCOld: long mutatorSum>;
$r68 = <TestGCOld: int[] aexport>;
$i22 = lengthof $r68;
$l23 = (long) $i22;
$l25 = $l24 + $l23;
$r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r72 = <java.lang.System: java.io.PrintStream out>;
$r71 = new java.lang.StringBuilder;
specialinvoke $r71.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Mutated \");
$l26 = <TestGCOld: long actuallyMut>;
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" pointers (= \");
$l27 = <TestGCOld: long actuallyMut>;
$f12 = (float) $l27;
$f13 = $f12 / f1;
$d5 = (double) $f13;
$r75 = virtualinvoke r30.<java.text.NumberFormat: java.lang.String format(double)>($d5);
$r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ptrs/sec)\");
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r78);
"->"Block 7:
[preds: 5 6 ] [succs: ]
$r67 = <java.lang.System: java.io.PrintStream out>;
$r66 = new java.lang.StringBuilder;
specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Checksum = \");
$l24 = <TestGCOld: long mutatorSum>;
$r68 = <TestGCOld: int[] aexport>;
$i22 = lengthof $r68;
$l23 = (long) $i22;
$l25 = $l24 + $l23;
$r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);
return;
";
}
