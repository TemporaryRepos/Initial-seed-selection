digraph "unitGraph" {
    "$r3 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"
    "$r0 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"
    "$i1 = lengthof $r0"
    "$r1 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"
    "$r2 = $r1[0]"
    "$i0 = lengthof $r2"
    "i2 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int array2DWork(int[][],int,int)>($r3, $i1, $i0)"
    "if i2 != 235 goto $r4 = new nsk.share.TestFailure"
    "$i4 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>"
    "if $i4 == 31 goto return"
    "$r4 = new nsk.share.TestFailure"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"array2D test failed (sum = \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; global = \")"
    "$i3 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>($r10)"
    "throw $r4"
    "return"
    "$r3 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"->"$r0 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>";
    "$r0 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"->"$i1 = lengthof $r0";
    "$i1 = lengthof $r0"->"$r1 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>";
    "$r1 = <jit.Arrays.ArrayBounds.ArrayBounds: int[][] aa>"->"$r2 = $r1[0]";
    "$r2 = $r1[0]"->"$i0 = lengthof $r2";
    "$i0 = lengthof $r2"->"i2 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int array2DWork(int[][],int,int)>($r3, $i1, $i0)";
    "i2 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int array2DWork(int[][],int,int)>($r3, $i1, $i0)"->"if i2 != 235 goto $r4 = new nsk.share.TestFailure";
    "if i2 != 235 goto $r4 = new nsk.share.TestFailure"->"$i4 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>";
    "if i2 != 235 goto $r4 = new nsk.share.TestFailure"->"$r4 = new nsk.share.TestFailure";
    "$i4 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>"->"if $i4 == 31 goto return";
    "if $i4 == 31 goto return"->"$r4 = new nsk.share.TestFailure";
    "if $i4 == 31 goto return"->"return";
    "$r4 = new nsk.share.TestFailure"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"array2D test failed (sum = \")";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"array2D test failed (sum = \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; global = \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; global = \")"->"$i3 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>";
    "$i3 = <jit.Arrays.ArrayBounds.ArrayBounds: int global>"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>($r10)";
    "specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>($r10)"->"throw $r4";
}
