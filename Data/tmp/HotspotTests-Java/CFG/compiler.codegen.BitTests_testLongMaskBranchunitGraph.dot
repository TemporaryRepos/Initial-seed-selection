digraph "unitGraph" {
    "r0 := @this: compiler.codegen.BitTests"
    "l4 := @parameter0: long"
    "l1 := @parameter1: long"
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$l2 = $l0 & l1"
    "$b3 = $l2 cmp 0L"
    "if $b3 == 0 goto return l4"
    "l4 = l4 + 1L"
    "return l4"
    "r0 := @this: compiler.codegen.BitTests"->"l4 := @parameter0: long";
    "l4 := @parameter0: long"->"l1 := @parameter1: long";
    "l1 := @parameter1: long"->"$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$l2 = $l0 & l1";
    "$l2 = $l0 & l1"->"$b3 = $l2 cmp 0L";
    "$b3 = $l2 cmp 0L"->"if $b3 == 0 goto return l4";
    "if $b3 == 0 goto return l4"->"l4 = l4 + 1L";
    "if $b3 == 0 goto return l4"->"return l4";
    "l4 = l4 + 1L"->"return l4";
}
