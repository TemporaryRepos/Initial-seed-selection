digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.io.DataInputStream;
r1 := @parameter1: java.lang.String[];
r3 := @parameter2: java.util.Collection;
i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 2 6 ]
$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
r2 = r1[$i1];
i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\");
if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
i5 = 0;
goto [?= (branch)];
"
    "Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
i5 = i5 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i4 = i4 + 1];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
i4 = i4 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
"
    "Block 9:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @parameter0: java.io.DataInputStream;
r1 := @parameter1: java.lang.String[];
r3 := @parameter2: java.util.Collection;
i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
i4 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
";
    "Block 1:
[preds: 8 ] [succs: 2 6 ]
$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
r2 = r1[$i1];
i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\");
if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
"->"Block 2:
[preds: 1 ] [succs: 4 ]
i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
i5 = 0;
goto [?= (branch)];
";
    "Block 1:
[preds: 8 ] [succs: 2 6 ]
$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
r2 = r1[$i1];
i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\");
if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
"->"Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
i5 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
";
    "Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
i5 = i5 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i4 = i4 + 1];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
"->"Block 3:
[preds: 4 ] [succs: 4 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3);
i5 = i5 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i4 = i4 + 1];
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
i4 = i4 + 1;
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
i4 = i4 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
i4 = i4 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
"->"Block 9:
[preds: 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
"->"Block 1:
[preds: 8 ] [succs: 2 6 ]
$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();
r2 = r1[$i1];
i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\");
if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2);
";
}
