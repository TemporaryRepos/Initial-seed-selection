digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i7 = 0"
    "goto [?= $i8 = lengthof r0]"
    "$i1 = i7 - 1"
    "$i0 = lengthof r0"
    "$i3 = $i1 + $i0"
    "$i2 = lengthof r0"
    "i4 = $i3 % $i2"
    "$i5 = r0[i7]"
    "if $i5 == i4 goto i7 = i7 + 1"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Error: src[\")"
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] should be \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"
    "$i6 = r0[i7]"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8)"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "i7 = i7 + 1"
    "$i8 = lengthof r0"
    "if i7 < $i8 goto $i1 = i7 - 1"
    "return"
    "r0 := @parameter0: int[]"->"i7 = 0";
    "i7 = 0"->"goto [?= $i8 = lengthof r0]";
    "goto [?= $i8 = lengthof r0]"->"$i8 = lengthof r0";
    "$i1 = i7 - 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"$i3 = $i1 + $i0";
    "$i3 = $i1 + $i0"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"i4 = $i3 % $i2";
    "i4 = $i3 % $i2"->"$i5 = r0[i7]";
    "$i5 = r0[i7]"->"if $i5 == i4 goto i7 = i7 + 1";
    "if $i5 == i4 goto i7 = i7 + 1"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if $i5 == i4 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Error: src[\")";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Error: src[\")"->"$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)";
    "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] should be \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] should be \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" instead of \")"->"$i6 = r0[i7]";
    "$i6 = r0[i7]"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8)"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"$i8 = lengthof r0";
    "$i8 = lengthof r0"->"if i7 < $i8 goto $i1 = i7 - 1";
    "if i7 < $i8 goto $i1 = i7 - 1"->"return";
    "if i7 < $i8 goto $i1 = i7 - 1"->"$i1 = i7 - 1";
}
