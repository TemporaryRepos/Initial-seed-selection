digraph "unitGraph" {
    "r14 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[262144]"
    "r1 = newarray (int)[262144]"
    "r2 = newarray (int)[262144]"
    "r3 = newarray (int)[262144]"
    "staticinvoke <compiler.loopopts.superword.SumRed_Int: void sumReductionInit(int[],int[],int[])>(r0, r1, r2)"
    "i1 = 0"
    "i0 = 262144000"
    "i2 = 0"
    "goto [?= (branch)]"
    "i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)"
    "i2 = i2 + 1"
    "if i2 < 2000 goto i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)"
    "if i1 != i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Success\")"
    "goto [?= return]"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid sum of elements variable in total: \")"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected value = \")"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"
    "$r12 = new java.lang.Exception"
    "specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"Failed\")"
    "throw $r12"
    "return"
    "r14 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[262144]";
    "r0 = newarray (int)[262144]"->"r1 = newarray (int)[262144]";
    "r1 = newarray (int)[262144]"->"r2 = newarray (int)[262144]";
    "r2 = newarray (int)[262144]"->"r3 = newarray (int)[262144]";
    "r3 = newarray (int)[262144]"->"staticinvoke <compiler.loopopts.superword.SumRed_Int: void sumReductionInit(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.loopopts.superword.SumRed_Int: void sumReductionInit(int[],int[],int[])>(r0, r1, r2)"->"i1 = 0";
    "i1 = 0"->"i0 = 262144000";
    "i0 = 262144000"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 2000 goto i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)";
    "i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 2000 goto i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)";
    "if i2 < 2000 goto i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)"->"if i1 != i0 goto $r5 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < 2000 goto i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)"->"i1 = staticinvoke <compiler.loopopts.superword.SumRed_Int: int sumReductionImplement(int[],int[],int[],int[],int)>(r0, r1, r2, r3, i1)";
    "if i1 != i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "if i1 != i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Success\")";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Success\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid sum of elements variable in total: \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid sum of elements variable in total: \")"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected value = \")";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected value = \")"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"$r12 = new java.lang.Exception";
    "$r12 = new java.lang.Exception"->"specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"Failed\")";
    "specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>(\"Failed\")"->"throw $r12";
}
