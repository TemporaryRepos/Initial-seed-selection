digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.c2.IsInstanceTest$BaseInterfaceImpl"
    "specialinvoke $r0.<compiler.c2.IsInstanceTest$BaseInterfaceImpl: void <init>(compiler.c2.IsInstanceTest$BaseInterfaceImpl)>(null)"
    "r1 = $r0"
    "i0 = 0"
    "goto [?= (branch)]"
    "$r2 = newarray (java.lang.Class)[1]"
    "$r2[0] = class \"Lcompiler/c2/IsInstanceTest$ExtendedInterface;\""
    "$z0 = staticinvoke <compiler.c2.IsInstanceTest: boolean isInstanceOf(compiler.c2.IsInstanceTest$BaseInterface,java.lang.Class[])>(r1, $r2)"
    "if $z0 == 0 goto i0 = i0 + 1"
    "$r3 = new java.lang.AssertionError"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed at index:\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6)"
    "throw $r3"
    "i0 = i0 + 1"
    "if i0 < 100000 goto $r2 = newarray (java.lang.Class)[1]"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new compiler.c2.IsInstanceTest$BaseInterfaceImpl";
    "$r0 = new compiler.c2.IsInstanceTest$BaseInterfaceImpl"->"specialinvoke $r0.<compiler.c2.IsInstanceTest$BaseInterfaceImpl: void <init>(compiler.c2.IsInstanceTest$BaseInterfaceImpl)>(null)";
    "specialinvoke $r0.<compiler.c2.IsInstanceTest$BaseInterfaceImpl: void <init>(compiler.c2.IsInstanceTest$BaseInterfaceImpl)>(null)"->"r1 = $r0";
    "r1 = $r0"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 100000 goto $r2 = newarray (java.lang.Class)[1]";
    "$r2 = newarray (java.lang.Class)[1]"->"$r2[0] = class \"Lcompiler/c2/IsInstanceTest$ExtendedInterface;\"";
    "$r2[0] = class \"Lcompiler/c2/IsInstanceTest$ExtendedInterface;\""->"$z0 = staticinvoke <compiler.c2.IsInstanceTest: boolean isInstanceOf(compiler.c2.IsInstanceTest$BaseInterface,java.lang.Class[])>(r1, $r2)";
    "$z0 = staticinvoke <compiler.c2.IsInstanceTest: boolean isInstanceOf(compiler.c2.IsInstanceTest$BaseInterface,java.lang.Class[])>(r1, $r2)"->"if $z0 == 0 goto i0 = i0 + 1";
    "if $z0 == 0 goto i0 = i0 + 1"->"$r3 = new java.lang.AssertionError";
    "if $z0 == 0 goto i0 = i0 + 1"->"i0 = i0 + 1";
    "$r3 = new java.lang.AssertionError"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed at index:\")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed at index:\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6)";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6)"->"throw $r3";
    "i0 = i0 + 1"->"if i0 < 100000 goto $r2 = newarray (java.lang.Class)[1]";
    "if i0 < 100000 goto $r2 = newarray (java.lang.Class)[1]"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i0 < 100000 goto $r2 = newarray (java.lang.Class)[1]"->"$r2 = newarray (java.lang.Class)[1]";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")"->"return";
}
