digraph "unitGraph" {
    "r5 := @this: compiler.escapeAnalysis.Test6726999"
    "i0 := @parameter0: int"
    "r0 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]"
    "i1 = i0 & 3"
    "i11 = 0"
    "goto [?= (branch)]"
    "$r1 = new compiler.escapeAnalysis.Test6726999$Point"
    "specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"
    "r0[i11] = $r1"
    "i11 = i11 + 1"
    "if i11 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"
    "b12 = 3"
    "i2 = i0 & 1"
    "$r2 = r0[i2]"
    "if $r2 != null goto $r3 = r0[i2]"
    "$i8 = 3 * b12"
    "$i9 = $i8 + i0"
    "$i10 = $i9 * b12"
    "return $i10"
    "$r3 = r0[i2]"
    "$r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12"
    "$r4 = r0[i2]"
    "$i3 = 3 * b12"
    "$i4 = $i3 + i0"
    "$r4.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4"
    "virtualinvoke r5.<compiler.escapeAnalysis.Test6726999: void dummy()>()"
    "$r6 = r0[i2]"
    "$i6 = $r6.<compiler.escapeAnalysis.Test6726999$Point: int x>"
    "$r7 = r0[0]"
    "$i5 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int y>"
    "$i7 = $i6 * $i5"
    "return $i7"
    "r5 := @this: compiler.escapeAnalysis.Test6726999"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"r0 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]";
    "r0 = newarray (compiler.escapeAnalysis.Test6726999$Point)[3]"->"i1 = i0 & 3";
    "i1 = i0 & 3"->"i11 = 0";
    "i11 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "$r1 = new compiler.escapeAnalysis.Test6726999$Point"->"specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()";
    "specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"->"r0[i11] = $r1";
    "r0[i11] = $r1"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"if i11 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "if i11 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"->"b12 = 3";
    "if i11 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"->"$r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "b12 = 3"->"i2 = i0 & 1";
    "i2 = i0 & 1"->"$r2 = r0[i2]";
    "$r2 = r0[i2]"->"if $r2 != null goto $r3 = r0[i2]";
    "if $r2 != null goto $r3 = r0[i2]"->"$i8 = 3 * b12";
    "if $r2 != null goto $r3 = r0[i2]"->"$r3 = r0[i2]";
    "$i8 = 3 * b12"->"$i9 = $i8 + i0";
    "$i9 = $i8 + i0"->"$i10 = $i9 * b12";
    "$i10 = $i9 * b12"->"return $i10";
    "$r3 = r0[i2]"->"$r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12";
    "$r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b12"->"$r4 = r0[i2]";
    "$r4 = r0[i2]"->"$i3 = 3 * b12";
    "$i3 = 3 * b12"->"$i4 = $i3 + i0";
    "$i4 = $i3 + i0"->"$r4.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4";
    "$r4.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i4"->"virtualinvoke r5.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r5.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"$r6 = r0[i2]";
    "$r6 = r0[i2]"->"$i6 = $r6.<compiler.escapeAnalysis.Test6726999$Point: int x>";
    "$i6 = $r6.<compiler.escapeAnalysis.Test6726999$Point: int x>"->"$r7 = r0[0]";
    "$r7 = r0[0]"->"$i5 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int y>";
    "$i5 = $r7.<compiler.escapeAnalysis.Test6726999$Point: int y>"->"$i7 = $i6 * $i5";
    "$i7 = $i6 * $i5"->"return $i7";
}
