digraph "unitGraph" {
    "$r0 = new java.lang.Integer"
    "$i0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>(1)"
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i0)"
    "r2 = $r0"
    "i5 = 0"
    "goto [?= (branch)]"
    "$r1 = new java.lang.Integer"
    "$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i2 = $i1 + 1"
    "$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2)"
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i3)"
    "r2 = $r1"
    "i5 = i5 + 1"
    "if i5 < 1000 goto $r1 = new java.lang.Integer"
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"
    "$i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "return $i4"
    "$r0 = new java.lang.Integer"->"$i0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>(1)";
    "$i0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>(1)"->"specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i0)";
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i0)"->"r2 = $r0";
    "r2 = $r0"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 1000 goto $r1 = new java.lang.Integer";
    "$r1 = new java.lang.Integer"->"$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i2 = $i1 + 1";
    "$i2 = $i1 + 1"->"$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2)";
    "$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2)"->"specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i3)";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i3)"->"r2 = $r1";
    "r2 = $r1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 1000 goto $r1 = new java.lang.Integer";
    "if i5 < 1000 goto $r1 = new java.lang.Integer"->"staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()";
    "if i5 < 1000 goto $r1 = new java.lang.Integer"->"$r1 = new java.lang.Integer";
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"->"$i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"return $i4";
}
