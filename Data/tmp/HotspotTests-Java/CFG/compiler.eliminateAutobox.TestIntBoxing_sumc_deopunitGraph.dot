digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"
    "r1 = r0"
    "i0 = lengthof r0"
    "i7 = 0"
    "goto [?= (branch)]"
    "$i1 = r1[i7]"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)"
    "$i5 = $i2 + $i4"
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "i7 = i7 + 1"
    "if i7 < i0 goto $i1 = r1[i7]"
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"
    "$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "return $i6"
    "r0 := @parameter0: int[]"->"r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>";
    "r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < i0 goto $i1 = r1[i7]";
    "$i1 = r1[i7]"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)";
    "$i4 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i3)"->"$i5 = $i2 + $i4";
    "$i5 = $i2 + $i4"->"r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < i0 goto $i1 = r1[i7]";
    "if i7 < i0 goto $i1 = r1[i7]"->"staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()";
    "if i7 < i0 goto $i1 = r1[i7]"->"$i1 = r1[i7]";
    "staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>()"->"$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"return $i6";
}
