digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r8 := @parameter0: java.lang.String[];
r0 = newarray (int)[10];
r1 = newarray (int)[10];
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = newarray (int)[1];
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i1 = 0];
"
    "Block 6:
[preds: 2 3 4 ] [succs: 7 ]
$r7 := @caughtexception;
"
    "Block 7:
[preds: 5 6 ] [succs: 9 ]
i1 = 0;
goto [?= (branch)];
"
    "Block 8:
[preds: 9 ] [succs: 9 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i1 = i1 + 1;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 8 ]
if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
z0 = 0;
"
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r3 = newarray (int)[1];
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0);
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= (branch)];
"
    "Block 14:
[preds: 10 11 12 ] [succs: 15 ]
$r6 := @caughtexception;
z0 = 1;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto $r4 = new java.lang.RuntimeException;
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
"
    "Block 17:
[preds: 15 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\");
throw $r4;
"
    "Block 18:
[preds: 16 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r8 := @parameter0: java.lang.String[];
r0 = newarray (int)[10];
r1 = newarray (int)[10];
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = newarray (int)[1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i0 = i0 + 1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 6 ]
if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 ]
$r7 := @caughtexception;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = newarray (int)[1];
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = newarray (int)[1];
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 ]
$r7 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i1 = 0];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 ]
$r7 := @caughtexception;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= i1 = 0];
"->"Block 7:
[preds: 5 6 ] [succs: 9 ]
i1 = 0;
goto [?= (branch)];
";
    "Block 6:
[preds: 2 3 4 ] [succs: 7 ]
$r7 := @caughtexception;
"->"Block 7:
[preds: 5 6 ] [succs: 9 ]
i1 = 0;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 6 ] [succs: 9 ]
i1 = 0;
goto [?= (branch)];
"->"Block 9:
[preds: 7 8 ] [succs: 10 8 ]
if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
";
    "Block 8:
[preds: 9 ] [succs: 9 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i1 = i1 + 1;
"->"Block 9:
[preds: 7 8 ] [succs: 10 8 ]
if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
";
    "Block 9:
[preds: 7 8 ] [succs: 10 8 ]
if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"->"Block 10:
[preds: 9 ] [succs: 11 14 ]
z0 = 0;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 8 ]
if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
"->"Block 8:
[preds: 9 ] [succs: 9 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0);
i1 = i1 + 1;
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
z0 = 0;
"->"Block 11:
[preds: 10 ] [succs: 12 14 ]
$r3 = newarray (int)[1];
";
    "Block 10:
[preds: 9 ] [succs: 11 14 ]
z0 = 0;
"->"Block 14:
[preds: 10 11 12 ] [succs: 15 ]
$r6 := @caughtexception;
z0 = 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r3 = newarray (int)[1];
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0);
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r3 = newarray (int)[1];
"->"Block 14:
[preds: 10 11 12 ] [succs: 15 ]
$r6 := @caughtexception;
z0 = 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0);
"->"Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= (branch)];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0);
"->"Block 14:
[preds: 10 11 12 ] [succs: 15 ]
$r6 := @caughtexception;
z0 = 1;
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
goto [?= (branch)];
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto $r4 = new java.lang.RuntimeException;
";
    "Block 14:
[preds: 10 11 12 ] [succs: 15 ]
$r6 := @caughtexception;
z0 = 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto $r4 = new java.lang.RuntimeException;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto $r4 = new java.lang.RuntimeException;
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if z0 == 0 goto $r4 = new java.lang.RuntimeException;
"->"Block 17:
[preds: 15 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\");
throw $r4;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\");
goto [?= return];
"->"Block 18:
[preds: 16 ] [succs: ]
return;
";
}
