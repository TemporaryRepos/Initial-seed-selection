digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new vm.compiler.share.Random;
specialinvoke $r0.<vm.compiler.share.Random: void <init>(int)>(11);
r1 = newarray (int)[100];
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = r1[0];
$i1 = $i0 + 1;
r1[0] = $i1;
i3 = i3 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 1000 goto $i0 = r1[0];
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$i2 = r1[i4];
$r3 = staticinvoke <vm.compiler.share.Random: java.lang.String times(int)>($i2);
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);
i4 = i4 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new vm.compiler.share.Random;
specialinvoke $r0.<vm.compiler.share.Random: void <init>(int)>(11);
r1 = newarray (int)[100];
i3 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 1000 goto $i0 = r1[0];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = r1[0];
$i1 = $i0 + 1;
r1[0] = $i1;
i3 = i3 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 1000 goto $i0 = r1[0];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 1000 goto $i0 = r1[0];
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 1000 goto $i0 = r1[0];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = r1[0];
$i1 = $i0 + 1;
r1[0] = $i1;
i3 = i3 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$i2 = r1[i4];
$r3 = staticinvoke <vm.compiler.share.Random: java.lang.String times(int)>($i2);
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);
i4 = i4 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$i2 = r1[i4];
$r3 = staticinvoke <vm.compiler.share.Random: java.lang.String times(int)>($i2);
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);
i4 = i4 + 1;
";
}
