digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 3 ]
r1 := @parameter0: selectionresolution.MethodData$Access;
r2 := @parameter1: selectionresolution.MethodData$Context;
r5 := @parameter2: selectionresolution.ClassData$Package;
r8 := @parameter3: selectionresolution.Template$Kind;
r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder;
$r0 = new selectionresolution.MethodData;
specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2);
r3 = $r0;
$r4 = new selectionresolution.ClassData;
specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3);
r6 = $r4;
$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>();
$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>();
$i1 = $r7[$i0];
tableswitch($i1) {     case 1: goto $i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto $i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto return; };
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i3;
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i2;
"
    "Block 3:
[preds: 0 1 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 3 ]
r1 := @parameter0: selectionresolution.MethodData$Access;
r2 := @parameter1: selectionresolution.MethodData$Context;
r5 := @parameter2: selectionresolution.ClassData$Package;
r8 := @parameter3: selectionresolution.Template$Kind;
r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder;
$r0 = new selectionresolution.MethodData;
specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2);
r3 = $r0;
$r4 = new selectionresolution.ClassData;
specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3);
r6 = $r4;
$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>();
$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>();
$i1 = $r7[$i0];
tableswitch($i1) {     case 1: goto $i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto $i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto return; };
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i3;
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 3 ]
r1 := @parameter0: selectionresolution.MethodData$Access;
r2 := @parameter1: selectionresolution.MethodData$Context;
r5 := @parameter2: selectionresolution.ClassData$Package;
r8 := @parameter3: selectionresolution.Template$Kind;
r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder;
$r0 = new selectionresolution.MethodData;
specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2);
r3 = $r0;
$r4 = new selectionresolution.ClassData;
specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3);
r6 = $r4;
$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>();
$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>();
$i1 = $r7[$i0];
tableswitch($i1) {     case 1: goto $i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto $i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto return; };
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i2;
";
    "Block 0:
[preds: ] [succs: 1 2 3 ]
r1 := @parameter0: selectionresolution.MethodData$Access;
r2 := @parameter1: selectionresolution.MethodData$Context;
r5 := @parameter2: selectionresolution.ClassData$Package;
r8 := @parameter3: selectionresolution.Template$Kind;
r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder;
$r0 = new selectionresolution.MethodData;
specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2);
r3 = $r0;
$r4 = new selectionresolution.ClassData;
specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3);
r6 = $r4;
$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>();
$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>();
$i1 = $r7[$i0];
tableswitch($i1) {     case 1: goto $i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto $i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto return; };
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i3;
goto [?= return];
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);
r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = $i2;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
}
