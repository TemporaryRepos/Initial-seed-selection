digraph "unitGraph" {
    "r0 := @parameter0: compiler.loopopts.TestPredicateLostDependency$A"
    "f2 = 0.0F"
    "r1 = newarray (float)[10]"
    "i2 = 0"
    "goto [?= (branch)]"
    "$z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()"
    "if $z0 == 0 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)"
    "r1 = null"
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)"
    "i1 = lengthof r1"
    "z2 = 0"
    "i3 = 9"
    "i3 = i3 + 1"
    "if i3 < i1 goto i3 = i3 + 1"
    "if i3 != 10 goto $f0 = r1[0]"
    "$f0 = r1[0]"
    "f3 = f2 + $f0"
    "$f1 = r1[1]"
    "f2 = f3 + $f1"
    "i2 = i2 + 1"
    "if i2 < 10 goto $z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()"
    "return f2"
    "r0 := @parameter0: compiler.loopopts.TestPredicateLostDependency$A"->"f2 = 0.0F";
    "f2 = 0.0F"->"r1 = newarray (float)[10]";
    "r1 = newarray (float)[10]"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10 goto $z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()";
    "$z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()"->"if $z0 == 0 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)";
    "if $z0 == 0 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)"->"r1 = null";
    "if $z0 == 0 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)"->"staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)";
    "r1 = null"->"staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)";
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: int m3(float[])>(r1)"->"i1 = lengthof r1";
    "i1 = lengthof r1"->"z2 = 0";
    "z2 = 0"->"i3 = 9";
    "i3 = 9"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < i1 goto i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < i1 goto i3 = i3 + 1";
    "if i3 < i1 goto i3 = i3 + 1"->"if i3 != 10 goto $f0 = r1[0]";
    "if i3 < i1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "if i3 != 10 goto $f0 = r1[0]"->"$f0 = r1[0]";
    "$f0 = r1[0]"->"f3 = f2 + $f0";
    "f3 = f2 + $f0"->"$f1 = r1[1]";
    "$f1 = r1[1]"->"f2 = f3 + $f1";
    "f2 = f3 + $f1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 10 goto $z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()";
    "if i2 < 10 goto $z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()"->"return f2";
    "if i2 < 10 goto $z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()"->"$z0 = staticinvoke <compiler.loopopts.TestPredicateLostDependency: boolean m2()>()";
}
