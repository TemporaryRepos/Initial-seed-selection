digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @this: compiler.loopopts.TestMoveStoresOutOfLoops;
r1 := @parameter0: java.lang.String;
r5 := @parameter1: java.lang.Runnable;
r9 := @parameter2: java.util.function.Function;
$r2 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: java.util.HashMap tests>;
$r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
r4 = (java.lang.reflect.Method) $r3;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 2 4 ]
interfaceinvoke r5.<java.lang.Runnable: void run()>();
$r6 = newarray (java.lang.Object)[1];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r6[0] = $r7;
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);
$z0 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z0 == 0 goto $z2 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r10 = interfaceinvoke r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r11 = (java.lang.Boolean) $r10;
$z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z2 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2];
"
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
$z2 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2;
$z3 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z3 != 0 goto i0 = i0 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 9 ]
goto [?= return];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
i0 = i0 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20000 goto interfaceinvoke r5.<java.lang.Runnable: void run()>();
"
    "Block 9:
[preds: 6 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r0 := @this: compiler.loopopts.TestMoveStoresOutOfLoops;
r1 := @parameter0: java.lang.String;
r5 := @parameter1: java.lang.Runnable;
r9 := @parameter2: java.util.function.Function;
$r2 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: java.util.HashMap tests>;
$r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
r4 = (java.lang.reflect.Method) $r3;
i0 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20000 goto interfaceinvoke r5.<java.lang.Runnable: void run()>();
";
    "Block 1:
[preds: 8 ] [succs: 2 4 ]
interfaceinvoke r5.<java.lang.Runnable: void run()>();
$r6 = newarray (java.lang.Object)[1];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r6[0] = $r7;
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);
$z0 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z0 == 0 goto $z2 = 0;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r10 = interfaceinvoke r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r11 = (java.lang.Boolean) $r10;
$z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z2 = 0;
";
    "Block 1:
[preds: 8 ] [succs: 2 4 ]
interfaceinvoke r5.<java.lang.Runnable: void run()>();
$r6 = newarray (java.lang.Object)[1];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r6[0] = $r7;
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);
$z0 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z0 == 0 goto $z2 = 0;
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
$z2 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r10 = interfaceinvoke r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r11 = (java.lang.Boolean) $r10;
$z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z2 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r10 = interfaceinvoke r9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r11 = (java.lang.Boolean) $r10;
$z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z2 = 0;
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
$z2 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z2 = 1;
goto [?= r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2;
$z3 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z3 != 0 goto i0 = i0 + 1;
";
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
$z2 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2;
$z3 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z3 != 0 goto i0 = i0 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2;
$z3 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z3 != 0 goto i0 = i0 + 1;
"->"Block 6:
[preds: 5 ] [succs: 9 ]
goto [?= return];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success> = $z2;
$z3 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z3 != 0 goto i0 = i0 + 1;
"->"Block 7:
[preds: 5 ] [succs: 8 ]
i0 = i0 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 9 ]
goto [?= return];
"->"Block 9:
[preds: 6 8 ] [succs: ]
return;
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
i0 = i0 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20000 goto interfaceinvoke r5.<java.lang.Runnable: void run()>();
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20000 goto interfaceinvoke r5.<java.lang.Runnable: void run()>();
"->"Block 9:
[preds: 6 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i0 < 20000 goto interfaceinvoke r5.<java.lang.Runnable: void run()>();
"->"Block 1:
[preds: 8 ] [succs: 2 4 ]
interfaceinvoke r5.<java.lang.Runnable: void run()>();
$r6 = newarray (java.lang.Object)[1];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r6[0] = $r7;
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);
$z0 = r0.<compiler.loopopts.TestMoveStoresOutOfLoops: boolean success>;
if $z0 == 0 goto $z2 = 0;
";
}
