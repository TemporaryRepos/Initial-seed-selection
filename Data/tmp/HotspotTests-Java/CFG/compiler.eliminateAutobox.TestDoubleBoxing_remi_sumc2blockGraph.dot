digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 = <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double ibc>;
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
$r0 = <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double ibc>;
$d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();
$d2 = $d0 + $d1;
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
$d3 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d4 = $d3 + 2.0;
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 1000 goto $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
$d6 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d7 = $d5 + $d6;
return $d7;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 = <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double ibc>;
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 1000 goto $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
$r0 = <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double ibc>;
$d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();
$d2 = $d0 + $d1;
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
$d3 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d4 = $d3 + 2.0;
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 1000 goto $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 1000 goto $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
$d6 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d7 = $d5 + $d6;
return $d7;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 1000 goto $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();
$r0 = <compiler.eliminateAutobox.TestDoubleBoxing: java.lang.Double ibc>;
$d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();
$d2 = $d0 + $d1;
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
$d3 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();
$d4 = $d3 + 2.0;
r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
i0 = i0 + 1;
";
}
