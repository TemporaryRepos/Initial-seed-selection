digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r7 := @parameter0: java.lang.String[];
i3 = 0;
goto [?= $i0 = <TestManyThreads: int COUNT>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r0 = new java.lang.Thread;
$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>();
specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);
r2 = $r0;
virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r2.<java.lang.Thread: void start()>();
i3 = i3 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = <TestManyThreads: int COUNT>;
if i3 < $i0 goto $r0 = new java.lang.Thread;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>];
"
    "Block 4:
[preds: 6 ] [succs: 5 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r3 = <TestManyThreads: java.lang.Throwable failed>;
if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>;
"
    "Block 6:
[preds: 5 ] [succs: 7 4 ]
$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();
$i2 = <TestManyThreads: int COUNT>;
if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
$r4 = <TestManyThreads: java.lang.Throwable failed>;
if $r4 == null goto return;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r5 = <TestManyThreads: java.lang.Throwable failed>;
throw $r5;
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r7 := @parameter0: java.lang.String[];
i3 = 0;
goto [?= $i0 = <TestManyThreads: int COUNT>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = <TestManyThreads: int COUNT>;
if i3 < $i0 goto $r0 = new java.lang.Thread;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r0 = new java.lang.Thread;
$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>();
specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);
r2 = $r0;
virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r2.<java.lang.Thread: void start()>();
i3 = i3 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = <TestManyThreads: int COUNT>;
if i3 < $i0 goto $r0 = new java.lang.Thread;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = <TestManyThreads: int COUNT>;
if i3 < $i0 goto $r0 = new java.lang.Thread;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = <TestManyThreads: int COUNT>;
if i3 < $i0 goto $r0 = new java.lang.Thread;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r0 = new java.lang.Thread;
$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>();
specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);
r2 = $r0;
virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r2.<java.lang.Thread: void start()>();
i3 = i3 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r3 = <TestManyThreads: java.lang.Throwable failed>;
if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>;
";
    "Block 4:
[preds: 6 ] [succs: 5 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r3 = <TestManyThreads: java.lang.Throwable failed>;
if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r3 = <TestManyThreads: java.lang.Throwable failed>;
if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>;
"->"Block 6:
[preds: 5 ] [succs: 7 4 ]
$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();
$i2 = <TestManyThreads: int COUNT>;
if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
$r3 = <TestManyThreads: java.lang.Throwable failed>;
if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
$r4 = <TestManyThreads: java.lang.Throwable failed>;
if $r4 == null goto return;
";
    "Block 6:
[preds: 5 ] [succs: 7 4 ]
$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();
$i2 = <TestManyThreads: int COUNT>;
if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
$r4 = <TestManyThreads: java.lang.Throwable failed>;
if $r4 == null goto return;
";
    "Block 6:
[preds: 5 ] [succs: 7 4 ]
$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>;
$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();
$i2 = <TestManyThreads: int COUNT>;
if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"->"Block 4:
[preds: 6 ] [succs: 5 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
$r4 = <TestManyThreads: java.lang.Throwable failed>;
if $r4 == null goto return;
"->"Block 8:
[preds: 7 ] [succs: ]
$r5 = <TestManyThreads: java.lang.Throwable failed>;
throw $r5;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
$r4 = <TestManyThreads: java.lang.Throwable failed>;
if $r4 == null goto return;
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
}
