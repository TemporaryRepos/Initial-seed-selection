digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.RedefineTest;
$r1 = r0.<vm.runtime.defmeth.RedefineTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$r3 = \"REFLECTION\";
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z0 != 0 goto $r4 = new nsk.share.TestFailure;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = \"INVOKE_WITH_ARGS\";
$z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z1 == 0 goto return;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
$r4 = new nsk.share.TestFailure;
specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"RedefineTest isn\'t applicable to reflection-based execution scenario (REDEFINE & INVOKE_WITH_ARGS).\");
throw $r4;
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.RedefineTest;
$r1 = r0.<vm.runtime.defmeth.RedefineTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$r3 = \"REFLECTION\";
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z0 != 0 goto $r4 = new nsk.share.TestFailure;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = \"INVOKE_WITH_ARGS\";
$z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z1 == 0 goto return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.RedefineTest;
$r1 = r0.<vm.runtime.defmeth.RedefineTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$r3 = \"REFLECTION\";
$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z0 != 0 goto $r4 = new nsk.share.TestFailure;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r4 = new nsk.share.TestFailure;
specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"RedefineTest isn\'t applicable to reflection-based execution scenario (REDEFINE & INVOKE_WITH_ARGS).\");
throw $r4;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = \"INVOKE_WITH_ARGS\";
$z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z1 == 0 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r4 = new nsk.share.TestFailure;
specialinvoke $r4.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"RedefineTest isn\'t applicable to reflection-based execution scenario (REDEFINE & INVOKE_WITH_ARGS).\");
throw $r4;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = \"INVOKE_WITH_ARGS\";
$z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
if $z1 == 0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
}
