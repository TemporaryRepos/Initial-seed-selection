digraph "unitGraph" {
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"
    "$r4 = (selectionresolution.ClassData) $r3"
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"
    "$r6 = new selectionresolution.MethodData"
    "$r8 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"
    "$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context STATIC>"
    "specialinvoke $r6.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r8, $r7)"
    "r9 = $r6"
    "$r10 = new selectionresolution.ClassData"
    "specialinvoke $r10.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r9)"
    "r11 = $r10"
    "i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>"
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r11)"
    "$r12 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"
    "i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r12)"
    "$r13 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r13)"
    "$r14 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"
    "i5 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r14)"
    "$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"
    "$r16 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r16.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)"
    "$r17 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r17.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i1)"
    "$r18 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r18.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)"
    "$r19 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r19.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i5, i4)"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i5"
    "return"
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"->"$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)";
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"->"$r4 = (selectionresolution.ClassData) $r3";
    "$r4 = (selectionresolution.ClassData) $r3"->"r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>";
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"->"$r6 = new selectionresolution.MethodData";
    "$r6 = new selectionresolution.MethodData"->"$r8 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>";
    "$r8 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"->"$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context STATIC>";
    "$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context STATIC>"->"specialinvoke $r6.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r8, $r7)";
    "specialinvoke $r6.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r8, $r7)"->"r9 = $r6";
    "r9 = $r6"->"$r10 = new selectionresolution.ClassData";
    "$r10 = new selectionresolution.ClassData"->"specialinvoke $r10.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r9)";
    "specialinvoke $r10.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r9)"->"r11 = $r10";
    "r11 = $r10"->"i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>";
    "i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>"->"i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r11)";
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r11)"->"$r12 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)";
    "$r12 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"->"i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r12)";
    "i3 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r12)"->"$r13 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)";
    "$r13 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"->"i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r13)";
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r13)"->"$r14 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)";
    "$r14 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"->"i5 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r14)";
    "i5 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>($r14)"->"$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)";
    "virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"->"$r16 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r16 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r16.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)";
    "virtualinvoke $r16.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)"->"$r17 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r17 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r17.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i1)";
    "virtualinvoke $r17.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i3, i1)"->"$r18 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r18 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r18.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)";
    "virtualinvoke $r18.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)"->"$r19 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r19 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r19.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i5, i4)";
    "virtualinvoke $r19.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i5, i4)"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i5";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i5"->"return";
}
