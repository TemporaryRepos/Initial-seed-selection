digraph "unitGraph" {
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"
    "$r4 = (selectionresolution.ClassData) $r3"
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"
    "$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)"
    "r9 = (selectionresolution.ClassData) $r8"
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r9)"
    "i3 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r10 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r10)"
    "$r11 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r11.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"
    "$r12 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r12.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref> = i4"
    "return"
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"->"$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)";
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"->"$r4 = (selectionresolution.ClassData) $r3";
    "$r4 = (selectionresolution.ClassData) $r3"->"r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>";
    "r5 = $r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"->"$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r6 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)";
    "$r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7)"->"r9 = (selectionresolution.ClassData) $r8";
    "r9 = (selectionresolution.ClassData) $r8"->"i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r9)";
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r9)"->"i3 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "i3 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r10 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)";
    "$r10 = staticinvoke <selectionresolution.Template: selectionresolution.ClassData emptyClass(selectionresolution.ClassData$Package)>(r5)"->"i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r10)";
    "i4 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>($r10)"->"$r11 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r11 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r11.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)";
    "virtualinvoke $r11.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i3)"->"$r12 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r12 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r12.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)";
    "virtualinvoke $r12.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i4, i2)"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref> = i4";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref> = i4"->"return";
}
