digraph "unitGraph" {
    "r2 := @this: compiler.escapeAnalysis.Test6726999"
    "i0 := @parameter0: int"
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"
    "r3 = $r0"
    "i1 = i0 & 3"
    "i7 = 0"
    "goto [?= (branch)]"
    "$r1 = new compiler.escapeAnalysis.Test6726999$Point"
    "specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"
    "r3 = $r1"
    "i7 = i7 + 1"
    "if i7 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"
    "b8 = 3"
    "r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b8"
    "$i2 = 3 * b8"
    "$i3 = $i2 + i0"
    "r3.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3"
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"
    "$i5 = r3.<compiler.escapeAnalysis.Test6726999$Point: int x>"
    "$i4 = r3.<compiler.escapeAnalysis.Test6726999$Point: int y>"
    "$i6 = $i5 * $i4"
    "return $i6"
    "r2 := @this: compiler.escapeAnalysis.Test6726999"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"$r0 = new compiler.escapeAnalysis.Test6726999$Point";
    "$r0 = new compiler.escapeAnalysis.Test6726999$Point"->"specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"->"r3 = $r0";
    "r3 = $r0"->"i1 = i0 & 3";
    "i1 = i0 & 3"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "$r1 = new compiler.escapeAnalysis.Test6726999$Point"->"specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()";
    "specialinvoke $r1.<compiler.escapeAnalysis.Test6726999$Point: void <init>()>()"->"r3 = $r1";
    "r3 = $r1"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "if i7 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"->"b8 = 3";
    "if i7 < i1 goto $r1 = new compiler.escapeAnalysis.Test6726999$Point"->"$r1 = new compiler.escapeAnalysis.Test6726999$Point";
    "b8 = 3"->"r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b8";
    "r3.<compiler.escapeAnalysis.Test6726999$Point: int x> = b8"->"$i2 = 3 * b8";
    "$i2 = 3 * b8"->"$i3 = $i2 + i0";
    "$i3 = $i2 + i0"->"r3.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3";
    "r3.<compiler.escapeAnalysis.Test6726999$Point: int y> = $i3"->"virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()";
    "virtualinvoke r2.<compiler.escapeAnalysis.Test6726999: void dummy()>()"->"$i5 = r3.<compiler.escapeAnalysis.Test6726999$Point: int x>";
    "$i5 = r3.<compiler.escapeAnalysis.Test6726999$Point: int x>"->"$i4 = r3.<compiler.escapeAnalysis.Test6726999$Point: int y>";
    "$i4 = r3.<compiler.escapeAnalysis.Test6726999$Point: int y>"->"$i6 = $i5 * $i4";
    "$i6 = $i5 * $i4"->"return $i6";
}
