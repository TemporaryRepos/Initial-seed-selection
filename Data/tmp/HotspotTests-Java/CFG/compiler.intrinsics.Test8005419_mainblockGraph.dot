digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r58 := @parameter0: java.lang.String[];
$i0 = <compiler.intrinsics.Test8005419: int SIZE>;
r0 = newarray (char)[$i0];
$i1 = <compiler.intrinsics.Test8005419: int SIZE>;
r1 = newarray (char)[$i1];
i23 = 16;
goto [?= $i2 = <compiler.intrinsics.Test8005419: int SIZE>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$c3 = (char) i23;
r0[i23] = $c3;
$c4 = (char) i23;
r1[i23] = $c4;
i23 = i23 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i2 = <compiler.intrinsics.Test8005419: int SIZE>;
if i23 < $i2 goto $c3 = (char) i23;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);
r59 = $r2;
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);
r60 = $r3;
z0 = 0;
i24 = 0;
i25 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i5;
i25 = i25 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i25 < 10000 goto $i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i26 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i6;
i26 = i26 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i26 < 10000 goto $i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i27 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i7;
i27 = i27 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i27 < 10000 goto $i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i24 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
z0 = 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Start testing\");
i28 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r59);
if i28 == 0 goto i29 = 1;
"
    "Block 15:
[preds: 14 ] [succs: 16 ]
z0 = 1;
$r54 = <java.lang.System: java.io.PrintStream out>;
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed same: result = \");
$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);
"
    "Block 16:
[preds: 14 15 ] [succs: 20 ]
i29 = 1;
goto [?= $i31 = <compiler.intrinsics.Test8005419: int SIZE>];
"
    "Block 17:
[preds: 20 ] [succs: 18 19 ]
$r5 = new java.lang.String;
specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i29);
r61 = $r5;
$r6 = new java.lang.String;
specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i29);
r62 = $r6;
i30 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r61, r62);
if i30 == 0 goto i29 = i29 + 1;
"
    "Block 18:
[preds: 17 ] [succs: 19 ]
z0 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed equals s1[\");
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
"
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
i29 = i29 + 1;
"
    "Block 20:
[preds: 16 19 ] [succs: 21 17 ]
$i31 = <compiler.intrinsics.Test8005419: int SIZE>;
if i29 <= $i31 goto $r5 = new java.lang.String;
"
    "Block 21:
[preds: 20 ] [succs: 28 ]
i32 = 1;
goto [?= $i8 = <compiler.intrinsics.Test8005419: int SIZE>];
"
    "Block 22:
[preds: 28 ] [succs: 26 ]
$r16 = new java.lang.String;
specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i32);
r63 = $r16;
i33 = 1;
goto [?= $i35 = <compiler.intrinsics.Test8005419: int SIZE>];
"
    "Block 23:
[preds: 26 ] [succs: 24 25 ]
$r17 = new java.lang.String;
specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i33);
r64 = $r17;
i34 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r63, r64);
$i9 = i32 - i33;
if i34 == $i9 goto i33 = i33 + 1;
"
    "Block 24:
[preds: 23 ] [succs: 25 ]
z0 = 1;
$r19 = <java.lang.System: java.io.PrintStream out>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff size s1[\");
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i34);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$i10 = i32 - i33;
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r27);
"
    "Block 25:
[preds: 23 24 ] [succs: 26 ]
i33 = i33 + 1;
"
    "Block 26:
[preds: 22 25 ] [succs: 27 23 ]
$i35 = <compiler.intrinsics.Test8005419: int SIZE>;
if i33 <= $i35 goto $r17 = new java.lang.String;
"
    "Block 27:
[preds: 26 ] [succs: 28 ]
i32 = i32 + 1;
"
    "Block 28:
[preds: 21 27 ] [succs: 29 22 ]
$i8 = <compiler.intrinsics.Test8005419: int SIZE>;
if i32 <= $i8 goto $r16 = new java.lang.String;
"
    "Block 29:
[preds: 28 ] [succs: 38 ]
i36 = 1;
goto [?= $i11 = <compiler.intrinsics.Test8005419: int SIZE>];
"
    "Block 30:
[preds: 38 ] [succs: 36 ]
$r28 = new java.lang.String;
specialinvoke $r28.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i36);
r65 = $r28;
i37 = 0;
goto [?= (branch)];
"
    "Block 31:
[preds: 36 ] [succs: 32 33 ]
$c12 = r1[i37];
$i13 = $c12 - 3;
$c14 = (char) $i13;
r1[i37] = $c14;
$r29 = new java.lang.String;
specialinvoke $r29.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i36);
r66 = $r29;
i38 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r65, r66);
$c16 = r0[i37];
$c15 = r1[i37];
i39 = $c16 - $c15;
if i38 == i39 goto i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
"
    "Block 32:
[preds: 31 ] [succs: 33 ]
z0 = 1;
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s1[\");
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i39);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r50);
"
    "Block 33:
[preds: 31 32 ] [succs: 34 35 ]
i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
$c18 = r1[i37];
$c17 = r0[i37];
i41 = $c18 - $c17;
if i40 == i41 goto $c19 = r1[i37];
"
    "Block 34:
[preds: 33 ] [succs: 35 ]
z0 = 1;
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s2[\");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s1[\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r39);
"
    "Block 35:
[preds: 33 34 ] [succs: 36 ]
$c19 = r1[i37];
$i20 = $c19 + 3;
$c21 = (char) $i20;
r1[i37] = $c21;
i37 = i37 + 1;
"
    "Block 36:
[preds: 30 35 ] [succs: 37 31 ]
if i37 < i36 goto $c12 = r1[i37];
"
    "Block 37:
[preds: 36 ] [succs: 38 ]
i36 = i36 + 1;
"
    "Block 38:
[preds: 29 37 ] [succs: 39 30 ]
$i11 = <compiler.intrinsics.Test8005419: int SIZE>;
if i36 <= $i11 goto $r28 = new java.lang.String;
"
    "Block 39:
[preds: 38 ] [succs: 40 41 ]
if z0 == 0 goto $r51 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 40:
[preds: 39 ] [succs: 41 ]
$r52 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
staticinvoke <java.lang.System: void exit(int)>(97);
"
    "Block 41:
[preds: 39 40 ] [succs: ]
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r58 := @parameter0: java.lang.String[];
$i0 = <compiler.intrinsics.Test8005419: int SIZE>;
r0 = newarray (char)[$i0];
$i1 = <compiler.intrinsics.Test8005419: int SIZE>;
r1 = newarray (char)[$i1];
i23 = 16;
goto [?= $i2 = <compiler.intrinsics.Test8005419: int SIZE>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i2 = <compiler.intrinsics.Test8005419: int SIZE>;
if i23 < $i2 goto $c3 = (char) i23;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$c3 = (char) i23;
r0[i23] = $c3;
$c4 = (char) i23;
r1[i23] = $c4;
i23 = i23 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i2 = <compiler.intrinsics.Test8005419: int SIZE>;
if i23 < $i2 goto $c3 = (char) i23;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i2 = <compiler.intrinsics.Test8005419: int SIZE>;
if i23 < $i2 goto $c3 = (char) i23;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);
r59 = $r2;
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);
r60 = $r3;
z0 = 0;
i24 = 0;
i25 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i2 = <compiler.intrinsics.Test8005419: int SIZE>;
if i23 < $i2 goto $c3 = (char) i23;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$c3 = (char) i23;
r0[i23] = $c3;
$c4 = (char) i23;
r1[i23] = $c4;
i23 = i23 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);
r59 = $r2;
$r3 = new java.lang.String;
specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);
r60 = $r3;
z0 = 0;
i24 = 0;
i25 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i25 < 10000 goto $i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i5;
i25 = i25 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i25 < 10000 goto $i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i25 < 10000 goto $i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i26 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i25 < 10000 goto $i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$i5 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i5;
i25 = i25 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i26 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i26 < 10000 goto $i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i6;
i26 = i26 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i26 < 10000 goto $i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i26 < 10000 goto $i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i27 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i26 < 10000 goto $i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i6;
i26 = i26 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i27 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i27 < 10000 goto $i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i7;
i27 = i27 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i27 < 10000 goto $i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i27 < 10000 goto $i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
if i24 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i27 < 10000 goto $i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r60);
i24 = i24 + $i7;
i27 = i27 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i24 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 13:
[preds: 12 ] [succs: 14 ]
z0 = 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
if i24 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Start testing\");
i28 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r59);
if i28 == 0 goto i29 = 1;
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
z0 = 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Start testing\");
i28 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r59);
if i28 == 0 goto i29 = 1;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Start testing\");
i28 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r59);
if i28 == 0 goto i29 = 1;
"->"Block 15:
[preds: 14 ] [succs: 16 ]
z0 = 1;
$r54 = <java.lang.System: java.io.PrintStream out>;
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed same: result = \");
$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Start testing\");
i28 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r59, r59);
if i28 == 0 goto i29 = 1;
"->"Block 16:
[preds: 14 15 ] [succs: 20 ]
i29 = 1;
goto [?= $i31 = <compiler.intrinsics.Test8005419: int SIZE>];
";
    "Block 15:
[preds: 14 ] [succs: 16 ]
z0 = 1;
$r54 = <java.lang.System: java.io.PrintStream out>;
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed same: result = \");
$r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);
"->"Block 16:
[preds: 14 15 ] [succs: 20 ]
i29 = 1;
goto [?= $i31 = <compiler.intrinsics.Test8005419: int SIZE>];
";
    "Block 16:
[preds: 14 15 ] [succs: 20 ]
i29 = 1;
goto [?= $i31 = <compiler.intrinsics.Test8005419: int SIZE>];
"->"Block 20:
[preds: 16 19 ] [succs: 21 17 ]
$i31 = <compiler.intrinsics.Test8005419: int SIZE>;
if i29 <= $i31 goto $r5 = new java.lang.String;
";
    "Block 17:
[preds: 20 ] [succs: 18 19 ]
$r5 = new java.lang.String;
specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i29);
r61 = $r5;
$r6 = new java.lang.String;
specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i29);
r62 = $r6;
i30 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r61, r62);
if i30 == 0 goto i29 = i29 + 1;
"->"Block 18:
[preds: 17 ] [succs: 19 ]
z0 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed equals s1[\");
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
";
    "Block 17:
[preds: 20 ] [succs: 18 19 ]
$r5 = new java.lang.String;
specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i29);
r61 = $r5;
$r6 = new java.lang.String;
specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i29);
r62 = $r6;
i30 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r61, r62);
if i30 == 0 goto i29 = i29 + 1;
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
i29 = i29 + 1;
";
    "Block 18:
[preds: 17 ] [succs: 19 ]
z0 = 1;
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed equals s1[\");
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected 0\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
i29 = i29 + 1;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
i29 = i29 + 1;
"->"Block 20:
[preds: 16 19 ] [succs: 21 17 ]
$i31 = <compiler.intrinsics.Test8005419: int SIZE>;
if i29 <= $i31 goto $r5 = new java.lang.String;
";
    "Block 20:
[preds: 16 19 ] [succs: 21 17 ]
$i31 = <compiler.intrinsics.Test8005419: int SIZE>;
if i29 <= $i31 goto $r5 = new java.lang.String;
"->"Block 21:
[preds: 20 ] [succs: 28 ]
i32 = 1;
goto [?= $i8 = <compiler.intrinsics.Test8005419: int SIZE>];
";
    "Block 20:
[preds: 16 19 ] [succs: 21 17 ]
$i31 = <compiler.intrinsics.Test8005419: int SIZE>;
if i29 <= $i31 goto $r5 = new java.lang.String;
"->"Block 17:
[preds: 20 ] [succs: 18 19 ]
$r5 = new java.lang.String;
specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i29);
r61 = $r5;
$r6 = new java.lang.String;
specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i29);
r62 = $r6;
i30 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r61, r62);
if i30 == 0 goto i29 = i29 + 1;
";
    "Block 21:
[preds: 20 ] [succs: 28 ]
i32 = 1;
goto [?= $i8 = <compiler.intrinsics.Test8005419: int SIZE>];
"->"Block 28:
[preds: 21 27 ] [succs: 29 22 ]
$i8 = <compiler.intrinsics.Test8005419: int SIZE>;
if i32 <= $i8 goto $r16 = new java.lang.String;
";
    "Block 22:
[preds: 28 ] [succs: 26 ]
$r16 = new java.lang.String;
specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i32);
r63 = $r16;
i33 = 1;
goto [?= $i35 = <compiler.intrinsics.Test8005419: int SIZE>];
"->"Block 26:
[preds: 22 25 ] [succs: 27 23 ]
$i35 = <compiler.intrinsics.Test8005419: int SIZE>;
if i33 <= $i35 goto $r17 = new java.lang.String;
";
    "Block 23:
[preds: 26 ] [succs: 24 25 ]
$r17 = new java.lang.String;
specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i33);
r64 = $r17;
i34 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r63, r64);
$i9 = i32 - i33;
if i34 == $i9 goto i33 = i33 + 1;
"->"Block 24:
[preds: 23 ] [succs: 25 ]
z0 = 1;
$r19 = <java.lang.System: java.io.PrintStream out>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff size s1[\");
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i34);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$i10 = i32 - i33;
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r27);
";
    "Block 23:
[preds: 26 ] [succs: 24 25 ]
$r17 = new java.lang.String;
specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i33);
r64 = $r17;
i34 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r63, r64);
$i9 = i32 - i33;
if i34 == $i9 goto i33 = i33 + 1;
"->"Block 25:
[preds: 23 24 ] [succs: 26 ]
i33 = i33 + 1;
";
    "Block 24:
[preds: 23 ] [succs: 25 ]
z0 = 1;
$r19 = <java.lang.System: java.io.PrintStream out>;
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff size s1[\");
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i34);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$i10 = i32 - i33;
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r27);
"->"Block 25:
[preds: 23 24 ] [succs: 26 ]
i33 = i33 + 1;
";
    "Block 25:
[preds: 23 24 ] [succs: 26 ]
i33 = i33 + 1;
"->"Block 26:
[preds: 22 25 ] [succs: 27 23 ]
$i35 = <compiler.intrinsics.Test8005419: int SIZE>;
if i33 <= $i35 goto $r17 = new java.lang.String;
";
    "Block 26:
[preds: 22 25 ] [succs: 27 23 ]
$i35 = <compiler.intrinsics.Test8005419: int SIZE>;
if i33 <= $i35 goto $r17 = new java.lang.String;
"->"Block 27:
[preds: 26 ] [succs: 28 ]
i32 = i32 + 1;
";
    "Block 26:
[preds: 22 25 ] [succs: 27 23 ]
$i35 = <compiler.intrinsics.Test8005419: int SIZE>;
if i33 <= $i35 goto $r17 = new java.lang.String;
"->"Block 23:
[preds: 26 ] [succs: 24 25 ]
$r17 = new java.lang.String;
specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i33);
r64 = $r17;
i34 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r63, r64);
$i9 = i32 - i33;
if i34 == $i9 goto i33 = i33 + 1;
";
    "Block 27:
[preds: 26 ] [succs: 28 ]
i32 = i32 + 1;
"->"Block 28:
[preds: 21 27 ] [succs: 29 22 ]
$i8 = <compiler.intrinsics.Test8005419: int SIZE>;
if i32 <= $i8 goto $r16 = new java.lang.String;
";
    "Block 28:
[preds: 21 27 ] [succs: 29 22 ]
$i8 = <compiler.intrinsics.Test8005419: int SIZE>;
if i32 <= $i8 goto $r16 = new java.lang.String;
"->"Block 29:
[preds: 28 ] [succs: 38 ]
i36 = 1;
goto [?= $i11 = <compiler.intrinsics.Test8005419: int SIZE>];
";
    "Block 28:
[preds: 21 27 ] [succs: 29 22 ]
$i8 = <compiler.intrinsics.Test8005419: int SIZE>;
if i32 <= $i8 goto $r16 = new java.lang.String;
"->"Block 22:
[preds: 28 ] [succs: 26 ]
$r16 = new java.lang.String;
specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i32);
r63 = $r16;
i33 = 1;
goto [?= $i35 = <compiler.intrinsics.Test8005419: int SIZE>];
";
    "Block 29:
[preds: 28 ] [succs: 38 ]
i36 = 1;
goto [?= $i11 = <compiler.intrinsics.Test8005419: int SIZE>];
"->"Block 38:
[preds: 29 37 ] [succs: 39 30 ]
$i11 = <compiler.intrinsics.Test8005419: int SIZE>;
if i36 <= $i11 goto $r28 = new java.lang.String;
";
    "Block 30:
[preds: 38 ] [succs: 36 ]
$r28 = new java.lang.String;
specialinvoke $r28.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i36);
r65 = $r28;
i37 = 0;
goto [?= (branch)];
"->"Block 36:
[preds: 30 35 ] [succs: 37 31 ]
if i37 < i36 goto $c12 = r1[i37];
";
    "Block 31:
[preds: 36 ] [succs: 32 33 ]
$c12 = r1[i37];
$i13 = $c12 - 3;
$c14 = (char) $i13;
r1[i37] = $c14;
$r29 = new java.lang.String;
specialinvoke $r29.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i36);
r66 = $r29;
i38 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r65, r66);
$c16 = r0[i37];
$c15 = r1[i37];
i39 = $c16 - $c15;
if i38 == i39 goto i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
"->"Block 32:
[preds: 31 ] [succs: 33 ]
z0 = 1;
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s1[\");
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i39);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r50);
";
    "Block 31:
[preds: 36 ] [succs: 32 33 ]
$c12 = r1[i37];
$i13 = $c12 - 3;
$c14 = (char) $i13;
r1[i37] = $c14;
$r29 = new java.lang.String;
specialinvoke $r29.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i36);
r66 = $r29;
i38 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r65, r66);
$c16 = r0[i37];
$c15 = r1[i37];
i39 = $c16 - $c15;
if i38 == i39 goto i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
"->"Block 33:
[preds: 31 32 ] [succs: 34 35 ]
i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
$c18 = r1[i37];
$c17 = r0[i37];
i41 = $c18 - $c17;
if i40 == i41 goto $c19 = r1[i37];
";
    "Block 32:
[preds: 31 ] [succs: 33 ]
z0 = 1;
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s1[\");
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s2[\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i39);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r50);
"->"Block 33:
[preds: 31 32 ] [succs: 34 35 ]
i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
$c18 = r1[i37];
$c17 = r0[i37];
i41 = $c18 - $c17;
if i40 == i41 goto $c19 = r1[i37];
";
    "Block 33:
[preds: 31 32 ] [succs: 34 35 ]
i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
$c18 = r1[i37];
$c17 = r0[i37];
i41 = $c18 - $c17;
if i40 == i41 goto $c19 = r1[i37];
"->"Block 34:
[preds: 33 ] [succs: 35 ]
z0 = 1;
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s2[\");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s1[\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r39);
";
    "Block 33:
[preds: 31 32 ] [succs: 34 35 ]
i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
$c18 = r1[i37];
$c17 = r0[i37];
i41 = $c18 - $c17;
if i40 == i41 goto $c19 = r1[i37];
"->"Block 35:
[preds: 33 34 ] [succs: 36 ]
$c19 = r1[i37];
$i20 = $c19 + 3;
$c21 = (char) $i20;
r1[i37] = $c21;
i37 = i37 + 1;
";
    "Block 34:
[preds: 33 ] [succs: 35 ]
z0 = 1;
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed diff char s2[\");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"], s1[\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: result = \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", expected \");
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r39);
"->"Block 35:
[preds: 33 34 ] [succs: 36 ]
$c19 = r1[i37];
$i20 = $c19 + 3;
$c21 = (char) $i20;
r1[i37] = $c21;
i37 = i37 + 1;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 ]
$c19 = r1[i37];
$i20 = $c19 + 3;
$c21 = (char) $i20;
r1[i37] = $c21;
i37 = i37 + 1;
"->"Block 36:
[preds: 30 35 ] [succs: 37 31 ]
if i37 < i36 goto $c12 = r1[i37];
";
    "Block 36:
[preds: 30 35 ] [succs: 37 31 ]
if i37 < i36 goto $c12 = r1[i37];
"->"Block 37:
[preds: 36 ] [succs: 38 ]
i36 = i36 + 1;
";
    "Block 36:
[preds: 30 35 ] [succs: 37 31 ]
if i37 < i36 goto $c12 = r1[i37];
"->"Block 31:
[preds: 36 ] [succs: 32 33 ]
$c12 = r1[i37];
$i13 = $c12 - 3;
$c14 = (char) $i13;
r1[i37] = $c14;
$r29 = new java.lang.String;
specialinvoke $r29.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i36);
r66 = $r29;
i38 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r65, r66);
$c16 = r0[i37];
$c15 = r1[i37];
i39 = $c16 - $c15;
if i38 == i39 goto i40 = staticinvoke <compiler.intrinsics.Test8005419: int test(java.lang.String,java.lang.String)>(r66, r65);
";
    "Block 37:
[preds: 36 ] [succs: 38 ]
i36 = i36 + 1;
"->"Block 38:
[preds: 29 37 ] [succs: 39 30 ]
$i11 = <compiler.intrinsics.Test8005419: int SIZE>;
if i36 <= $i11 goto $r28 = new java.lang.String;
";
    "Block 38:
[preds: 29 37 ] [succs: 39 30 ]
$i11 = <compiler.intrinsics.Test8005419: int SIZE>;
if i36 <= $i11 goto $r28 = new java.lang.String;
"->"Block 39:
[preds: 38 ] [succs: 40 41 ]
if z0 == 0 goto $r51 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 38:
[preds: 29 37 ] [succs: 39 30 ]
$i11 = <compiler.intrinsics.Test8005419: int SIZE>;
if i36 <= $i11 goto $r28 = new java.lang.String;
"->"Block 30:
[preds: 38 ] [succs: 36 ]
$r28 = new java.lang.String;
specialinvoke $r28.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i36);
r65 = $r28;
i37 = 0;
goto [?= (branch)];
";
    "Block 39:
[preds: 38 ] [succs: 40 41 ]
if z0 == 0 goto $r51 = <java.lang.System: java.io.PrintStream out>;
"->"Block 40:
[preds: 39 ] [succs: 41 ]
$r52 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
staticinvoke <java.lang.System: void exit(int)>(97);
";
    "Block 39:
[preds: 38 ] [succs: 40 41 ]
if z0 == 0 goto $r51 = <java.lang.System: java.io.PrintStream out>;
"->"Block 41:
[preds: 39 40 ] [succs: ]
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
return;
";
    "Block 40:
[preds: 39 ] [succs: 41 ]
$r52 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
staticinvoke <java.lang.System: void exit(int)>(97);
"->"Block 41:
[preds: 39 40 ] [succs: ]
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
return;
";
}
