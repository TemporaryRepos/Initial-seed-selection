digraph "unitGraph" {
    "r0 = newarray (short)[997]"
    "r1 = newarray (short)[997]"
    "r2 = newarray (short)[997]"
    "r3 = newarray (short)[997]"
    "r4 = newarray (short)[997]"
    "r5 = newarray (int)[498]"
    "r6 = newarray (long)[249]"
    "i485 = 0"
    "i486 = 0"
    "goto [?= (branch)]"
    "$i0 = 32267 + i486"
    "s487 = (short) $i0"
    "i485 = i485 + s487"
    "r1[i486] = s487"
    "r2[i486] = 7"
    "r3[i486] = -7"
    "r4[i486] = -18639"
    "i486 = i486 + 1"
    "if i486 < 997 goto $i0 = 32267 + i486"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i488 = 0"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"
    "i488 = i488 + 1"
    "if i488 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i489 = 0"
    "i490 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"
    "if i490 == i485 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"
    "$r11 = <java.lang.System: java.io.PrintStream err>"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i490)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i485)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15)"
    "i489 = i489 + 1"
    "i491 = 0"
    "$s6 = r0[i491]"
    "$i2 = 32267 + i491"
    "$s3 = (short) $i2"
    "$i4 = $s3 + 7"
    "$s5 = (short) $i4"
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addc: \", i491, $s6, $s5)"
    "i489 = i489 + $i7"
    "i491 = i491 + 1"
    "if i491 < 997 goto $s6 = r0[i491]"
    "i492 = 0"
    "$s12 = r0[i492]"
    "$i8 = 32267 + i492"
    "$s9 = (short) $i8"
    "$i10 = $s9 + 7"
    "$s11 = (short) $i10"
    "$i13 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addv: \", i492, $s12, $s11)"
    "i489 = i489 + $i13"
    "i492 = i492 + 1"
    "if i492 < 997 goto $s12 = r0[i492]"
    "i493 = 0"
    "$s18 = r0[i493]"
    "$i14 = 32267 + i493"
    "$s15 = (short) $i14"
    "$i16 = $s15 + 7"
    "$s17 = (short) $i16"
    "$i19 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_adda: \", i493, $s18, $s17)"
    "i489 = i489 + $i19"
    "i493 = i493 + 1"
    "if i493 < 997 goto $s18 = r0[i493]"
    "i494 = 0"
    "$s24 = r0[i494]"
    "$i20 = 32267 + i494"
    "$s21 = (short) $i20"
    "$i22 = $s21 - 7"
    "$s23 = (short) $i22"
    "$i25 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subc: \", i494, $s24, $s23)"
    "i489 = i489 + $i25"
    "i494 = i494 + 1"
    "if i494 < 997 goto $s24 = r0[i494]"
    "i495 = 0"
    "$s30 = r0[i495]"
    "$i26 = 32267 + i495"
    "$s27 = (short) $i26"
    "$i28 = $s27 - 7"
    "$s29 = (short) $i28"
    "$i31 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subv: \", i495, $s30, $s29)"
    "i489 = i489 + $i31"
    "i495 = i495 + 1"
    "if i495 < 997 goto $s30 = r0[i495]"
    "i496 = 0"
    "$s36 = r0[i496]"
    "$i32 = 32267 + i496"
    "$s33 = (short) $i32"
    "$i34 = $s33 - 7"
    "$s35 = (short) $i34"
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_suba: \", i496, $s36, $s35)"
    "i489 = i489 + $i37"
    "i496 = i496 + 1"
    "if i496 < 997 goto $s36 = r0[i496]"
    "i497 = 0"
    "$s42 = r0[i497]"
    "$i38 = 32267 + i497"
    "$s39 = (short) $i38"
    "$i40 = $s39 * 7"
    "$s41 = (short) $i40"
    "$i43 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc: \", i497, $s42, $s41)"
    "i489 = i489 + $i43"
    "i497 = i497 + 1"
    "if i497 < 997 goto $s42 = r0[i497]"
    "i498 = 0"
    "$s48 = r0[i498]"
    "$i44 = 32267 + i498"
    "$s45 = (short) $i44"
    "$i46 = $s45 * 7"
    "$s47 = (short) $i46"
    "$i49 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv: \", i498, $s48, $s47)"
    "i489 = i489 + $i49"
    "i498 = i498 + 1"
    "if i498 < 997 goto $s48 = r0[i498]"
    "i499 = 0"
    "$s54 = r0[i499]"
    "$i50 = 32267 + i499"
    "$s51 = (short) $i50"
    "$i52 = $s51 * 7"
    "$s53 = (short) $i52"
    "$i55 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula: \", i499, $s54, $s53)"
    "i489 = i489 + $i55"
    "i499 = i499 + 1"
    "if i499 < 997 goto $s54 = r0[i499]"
    "i500 = 0"
    "$s60 = r0[i500]"
    "$i56 = 32267 + i500"
    "$s57 = (short) $i56"
    "$i58 = $s57 / 7"
    "$s59 = (short) $i58"
    "$i61 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc: \", i500, $s60, $s59)"
    "i489 = i489 + $i61"
    "i500 = i500 + 1"
    "if i500 < 997 goto $s60 = r0[i500]"
    "i501 = 0"
    "$s66 = r0[i501]"
    "$i62 = 32267 + i501"
    "$s63 = (short) $i62"
    "$i64 = $s63 / 7"
    "$s65 = (short) $i64"
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv: \", i501, $s66, $s65)"
    "i489 = i489 + $i67"
    "i501 = i501 + 1"
    "if i501 < 997 goto $s66 = r0[i501]"
    "i502 = 0"
    "$s72 = r0[i502]"
    "$i68 = 32267 + i502"
    "$s69 = (short) $i68"
    "$i70 = $s69 / 7"
    "$s71 = (short) $i70"
    "$i73 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva: \", i502, $s72, $s71)"
    "i489 = i489 + $i73"
    "i502 = i502 + 1"
    "if i502 < 997 goto $s72 = r0[i502]"
    "i503 = 0"
    "$s78 = r0[i503]"
    "$i74 = 32267 + i503"
    "$s75 = (short) $i74"
    "$i76 = $s75 * -7"
    "$s77 = (short) $i76"
    "$i79 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc_n: \", i503, $s78, $s77)"
    "i489 = i489 + $i79"
    "i503 = i503 + 1"
    "if i503 < 997 goto $s78 = r0[i503]"
    "i504 = 0"
    "$s84 = r0[i504]"
    "$i80 = 32267 + i504"
    "$s81 = (short) $i80"
    "$i82 = $s81 * -7"
    "$s83 = (short) $i82"
    "$i85 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv_n: \", i504, $s84, $s83)"
    "i489 = i489 + $i85"
    "i504 = i504 + 1"
    "if i504 < 997 goto $s84 = r0[i504]"
    "i505 = 0"
    "$s90 = r0[i505]"
    "$i86 = 32267 + i505"
    "$s87 = (short) $i86"
    "$i88 = $s87 * -7"
    "$s89 = (short) $i88"
    "$i91 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula_n: \", i505, $s90, $s89)"
    "i489 = i489 + $i91"
    "i505 = i505 + 1"
    "if i505 < 997 goto $s90 = r0[i505]"
    "i506 = 0"
    "$s96 = r0[i506]"
    "$i92 = 32267 + i506"
    "$s93 = (short) $i92"
    "$i94 = $s93 / -7"
    "$s95 = (short) $i94"
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc_n: \", i506, $s96, $s95)"
    "i489 = i489 + $i97"
    "i506 = i506 + 1"
    "if i506 < 997 goto $s96 = r0[i506]"
    "i507 = 0"
    "$s102 = r0[i507]"
    "$i98 = 32267 + i507"
    "$s99 = (short) $i98"
    "$i100 = $s99 / -7"
    "$s101 = (short) $i100"
    "$i103 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv_n: \", i507, $s102, $s101)"
    "i489 = i489 + $i103"
    "i507 = i507 + 1"
    "if i507 < 997 goto $s102 = r0[i507]"
    "i508 = 0"
    "$s108 = r0[i508]"
    "$i104 = 32267 + i508"
    "$s105 = (short) $i104"
    "$i106 = $s105 / -7"
    "$s107 = (short) $i106"
    "$i109 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva_n: \", i508, $s108, $s107)"
    "i489 = i489 + $i109"
    "i508 = i508 + 1"
    "if i508 < 997 goto $s108 = r0[i508]"
    "i509 = 0"
    "$s114 = r0[i509]"
    "$i110 = 32267 + i509"
    "$s111 = (short) $i110"
    "$i112 = $s111 & 46897"
    "$s113 = (short) $i112"
    "$i115 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andc: \", i509, $s114, $s113)"
    "i489 = i489 + $i115"
    "i509 = i509 + 1"
    "if i509 < 997 goto $s114 = r0[i509]"
    "i510 = 0"
    "$s120 = r0[i510]"
    "$i116 = 32267 + i510"
    "$s117 = (short) $i116"
    "$i118 = $s117 & 46897"
    "$s119 = (short) $i118"
    "$i121 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andv: \", i510, $s120, $s119)"
    "i489 = i489 + $i121"
    "i510 = i510 + 1"
    "if i510 < 997 goto $s120 = r0[i510]"
    "i511 = 0"
    "$s126 = r0[i511]"
    "$i122 = 32267 + i511"
    "$s123 = (short) $i122"
    "$i124 = $s123 & 46897"
    "$s125 = (short) $i124"
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_anda: \", i511, $s126, $s125)"
    "i489 = i489 + $i127"
    "i511 = i511 + 1"
    "if i511 < 997 goto $s126 = r0[i511]"
    "i512 = 0"
    "$s132 = r0[i512]"
    "$i128 = 32267 + i512"
    "$s129 = (short) $i128"
    "$i130 = $s129 | 46897"
    "$s131 = (short) $i130"
    "$i133 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orc: \", i512, $s132, $s131)"
    "i489 = i489 + $i133"
    "i512 = i512 + 1"
    "if i512 < 997 goto $s132 = r0[i512]"
    "i513 = 0"
    "$s138 = r0[i513]"
    "$i134 = 32267 + i513"
    "$s135 = (short) $i134"
    "$i136 = $s135 | 46897"
    "$s137 = (short) $i136"
    "$i139 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orv: \", i513, $s138, $s137)"
    "i489 = i489 + $i139"
    "i513 = i513 + 1"
    "if i513 < 997 goto $s138 = r0[i513]"
    "i514 = 0"
    "$s144 = r0[i514]"
    "$i140 = 32267 + i514"
    "$s141 = (short) $i140"
    "$i142 = $s141 | 46897"
    "$s143 = (short) $i142"
    "$i145 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_ora: \", i514, $s144, $s143)"
    "i489 = i489 + $i145"
    "i514 = i514 + 1"
    "if i514 < 997 goto $s144 = r0[i514]"
    "i515 = 0"
    "$s150 = r0[i515]"
    "$i146 = 32267 + i515"
    "$s147 = (short) $i146"
    "$i148 = $s147 ^ 46897"
    "$s149 = (short) $i148"
    "$i151 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorc: \", i515, $s150, $s149)"
    "i489 = i489 + $i151"
    "i515 = i515 + 1"
    "if i515 < 997 goto $s150 = r0[i515]"
    "i516 = 0"
    "$s156 = r0[i516]"
    "$i152 = 32267 + i516"
    "$s153 = (short) $i152"
    "$i154 = $s153 ^ 46897"
    "$s155 = (short) $i154"
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorv: \", i516, $s156, $s155)"
    "i489 = i489 + $i157"
    "i516 = i516 + 1"
    "if i516 < 997 goto $s156 = r0[i516]"
    "i517 = 0"
    "$s162 = r0[i517]"
    "$i158 = 32267 + i517"
    "$s159 = (short) $i158"
    "$i160 = $s159 ^ 46897"
    "$s161 = (short) $i160"
    "$i163 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xora: \", i517, $s162, $s161)"
    "i489 = i489 + $i163"
    "i517 = i517 + 1"
    "if i517 < 997 goto $s162 = r0[i517]"
    "i518 = 0"
    "$s168 = r0[i518]"
    "$i164 = 32267 + i518"
    "$s165 = (short) $i164"
    "$i166 = $s165 << 7"
    "$s167 = (short) $i166"
    "$i169 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc: \", i518, $s168, $s167)"
    "i489 = i489 + $i169"
    "i518 = i518 + 1"
    "if i518 < 997 goto $s168 = r0[i518]"
    "i519 = 0"
    "$s174 = r0[i519]"
    "$i170 = 32267 + i519"
    "$s171 = (short) $i170"
    "$i172 = $s171 << 7"
    "$s173 = (short) $i172"
    "$i175 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv: \", i519, $s174, $s173)"
    "i489 = i489 + $i175"
    "i519 = i519 + 1"
    "if i519 < 997 goto $s174 = r0[i519]"
    "i520 = 0"
    "$s180 = r0[i520]"
    "$i176 = 32267 + i520"
    "$s177 = (short) $i176"
    "$i178 = $s177 >>> 7"
    "$s179 = (short) $i178"
    "$i181 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc: \", i520, $s180, $s179)"
    "i489 = i489 + $i181"
    "i520 = i520 + 1"
    "if i520 < 997 goto $s180 = r0[i520]"
    "i521 = 0"
    "$s186 = r0[i521]"
    "$i182 = 32267 + i521"
    "$s183 = (short) $i182"
    "$i184 = $s183 >>> 7"
    "$s185 = (short) $i184"
    "$i187 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv: \", i521, $s186, $s185)"
    "i489 = i489 + $i187"
    "i521 = i521 + 1"
    "if i521 < 997 goto $s186 = r0[i521]"
    "i522 = 0"
    "$s192 = r0[i522]"
    "$i188 = 32267 + i522"
    "$s189 = (short) $i188"
    "$i190 = $s189 >> 7"
    "$s191 = (short) $i190"
    "$i193 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac: \", i522, $s192, $s191)"
    "i489 = i489 + $i193"
    "i522 = i522 + 1"
    "if i522 < 997 goto $s192 = r0[i522]"
    "i523 = 0"
    "$s198 = r0[i523]"
    "$i194 = 32267 + i523"
    "$s195 = (short) $i194"
    "$i196 = $s195 >> 7"
    "$s197 = (short) $i196"
    "$i199 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav: \", i523, $s198, $s197)"
    "i489 = i489 + $i199"
    "i523 = i523 + 1"
    "if i523 < 997 goto $s198 = r0[i523]"
    "i524 = 0"
    "$s204 = r0[i524]"
    "$i200 = 32267 + i524"
    "$s201 = (short) $i200"
    "$i202 = $s201 << -7"
    "$s203 = (short) $i202"
    "$i205 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_n: \", i524, $s204, $s203)"
    "i489 = i489 + $i205"
    "i524 = i524 + 1"
    "if i524 < 997 goto $s204 = r0[i524]"
    "i525 = 0"
    "$s210 = r0[i525]"
    "$i206 = 32267 + i525"
    "$s207 = (short) $i206"
    "$i208 = $s207 << -7"
    "$s209 = (short) $i208"
    "$i211 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_n: \", i525, $s210, $s209)"
    "i489 = i489 + $i211"
    "i525 = i525 + 1"
    "if i525 < 997 goto $s210 = r0[i525]"
    "i526 = 0"
    "$s216 = r0[i526]"
    "$i212 = 32267 + i526"
    "$s213 = (short) $i212"
    "$i214 = $s213 >>> -7"
    "$s215 = (short) $i214"
    "$i217 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_n: \", i526, $s216, $s215)"
    "i489 = i489 + $i217"
    "i526 = i526 + 1"
    "if i526 < 997 goto $s216 = r0[i526]"
    "i527 = 0"
    "$s222 = r0[i527]"
    "$i218 = 32267 + i527"
    "$s219 = (short) $i218"
    "$i220 = $s219 >>> -7"
    "$s221 = (short) $i220"
    "$i223 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_n: \", i527, $s222, $s221)"
    "i489 = i489 + $i223"
    "i527 = i527 + 1"
    "if i527 < 997 goto $s222 = r0[i527]"
    "i528 = 0"
    "$s228 = r0[i528]"
    "$i224 = 32267 + i528"
    "$s225 = (short) $i224"
    "$i226 = $s225 >> -7"
    "$s227 = (short) $i226"
    "$i229 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_n: \", i528, $s228, $s227)"
    "i489 = i489 + $i229"
    "i528 = i528 + 1"
    "if i528 < 997 goto $s228 = r0[i528]"
    "i529 = 0"
    "$s234 = r0[i529]"
    "$i230 = 32267 + i529"
    "$s231 = (short) $i230"
    "$i232 = $s231 >> -7"
    "$s233 = (short) $i232"
    "$i235 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_n: \", i529, $s234, $s233)"
    "i489 = i489 + $i235"
    "i529 = i529 + 1"
    "if i529 < 997 goto $s234 = r0[i529]"
    "i530 = 0"
    "$s240 = r0[i530]"
    "$i236 = 32267 + i530"
    "$s237 = (short) $i236"
    "$i238 = $s237 << 16"
    "$s239 = (short) $i238"
    "$i241 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_o: \", i530, $s240, $s239)"
    "i489 = i489 + $i241"
    "i530 = i530 + 1"
    "if i530 < 997 goto $s240 = r0[i530]"
    "i531 = 0"
    "$s246 = r0[i531]"
    "$i242 = 32267 + i531"
    "$s243 = (short) $i242"
    "$i244 = $s243 << 16"
    "$s245 = (short) $i244"
    "$i247 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_o: \", i531, $s246, $s245)"
    "i489 = i489 + $i247"
    "i531 = i531 + 1"
    "if i531 < 997 goto $s246 = r0[i531]"
    "i532 = 0"
    "$s252 = r0[i532]"
    "$i248 = 32267 + i532"
    "$s249 = (short) $i248"
    "$i250 = $s249 >>> 16"
    "$s251 = (short) $i250"
    "$i253 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_o: \", i532, $s252, $s251)"
    "i489 = i489 + $i253"
    "i532 = i532 + 1"
    "if i532 < 997 goto $s252 = r0[i532]"
    "i533 = 0"
    "$s258 = r0[i533]"
    "$i254 = 32267 + i533"
    "$s255 = (short) $i254"
    "$i256 = $s255 >>> 16"
    "$s257 = (short) $i256"
    "$i259 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_o: \", i533, $s258, $s257)"
    "i489 = i489 + $i259"
    "i533 = i533 + 1"
    "if i533 < 997 goto $s258 = r0[i533]"
    "i534 = 0"
    "$s264 = r0[i534]"
    "$i260 = 32267 + i534"
    "$s261 = (short) $i260"
    "$i262 = $s261 >> 16"
    "$s263 = (short) $i262"
    "$i265 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_o: \", i534, $s264, $s263)"
    "i489 = i489 + $i265"
    "i534 = i534 + 1"
    "if i534 < 997 goto $s264 = r0[i534]"
    "i535 = 0"
    "$s270 = r0[i535]"
    "$i266 = 32267 + i535"
    "$s267 = (short) $i266"
    "$i268 = $s267 >> 16"
    "$s269 = (short) $i268"
    "$i271 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_o: \", i535, $s270, $s269)"
    "i489 = i489 + $i271"
    "i535 = i535 + 1"
    "if i535 < 997 goto $s270 = r0[i535]"
    "i536 = 0"
    "$s276 = r0[i536]"
    "$i272 = 32267 + i536"
    "$s273 = (short) $i272"
    "$i274 = $s273 << -16"
    "$s275 = (short) $i274"
    "$i277 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_on: \", i536, $s276, $s275)"
    "i489 = i489 + $i277"
    "i536 = i536 + 1"
    "if i536 < 997 goto $s276 = r0[i536]"
    "i537 = 0"
    "$s282 = r0[i537]"
    "$i278 = 32267 + i537"
    "$s279 = (short) $i278"
    "$i280 = $s279 << -16"
    "$s281 = (short) $i280"
    "$i283 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_on: \", i537, $s282, $s281)"
    "i489 = i489 + $i283"
    "i537 = i537 + 1"
    "if i537 < 997 goto $s282 = r0[i537]"
    "i538 = 0"
    "$s288 = r0[i538]"
    "$i284 = 32267 + i538"
    "$s285 = (short) $i284"
    "$i286 = $s285 >>> -16"
    "$s287 = (short) $i286"
    "$i289 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_on: \", i538, $s288, $s287)"
    "i489 = i489 + $i289"
    "i538 = i538 + 1"
    "if i538 < 997 goto $s288 = r0[i538]"
    "i539 = 0"
    "$s294 = r0[i539]"
    "$i290 = 32267 + i539"
    "$s291 = (short) $i290"
    "$i292 = $s291 >>> -16"
    "$s293 = (short) $i292"
    "$i295 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_on: \", i539, $s294, $s293)"
    "i489 = i489 + $i295"
    "i539 = i539 + 1"
    "if i539 < 997 goto $s294 = r0[i539]"
    "i540 = 0"
    "$s300 = r0[i540]"
    "$i296 = 32267 + i540"
    "$s297 = (short) $i296"
    "$i298 = $s297 >> -16"
    "$s299 = (short) $i298"
    "$i301 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_on: \", i540, $s300, $s299)"
    "i489 = i489 + $i301"
    "i540 = i540 + 1"
    "if i540 < 997 goto $s300 = r0[i540]"
    "i541 = 0"
    "$s306 = r0[i541]"
    "$i302 = 32267 + i541"
    "$s303 = (short) $i302"
    "$i304 = $s303 >> -16"
    "$s305 = (short) $i304"
    "$i307 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_on: \", i541, $s306, $s305)"
    "i489 = i489 + $i307"
    "i541 = i541 + 1"
    "if i541 < 997 goto $s306 = r0[i541]"
    "i542 = 0"
    "$s313 = r0[i542]"
    "$i308 = 32267 + i542"
    "$s309 = (short) $i308"
    "$i310 = $s309 + 32267"
    "$i311 = $i310 << 7"
    "$s312 = (short) $i311"
    "$i314 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_add: \", i542, $s313, $s312)"
    "i489 = i489 + $i314"
    "i542 = i542 + 1"
    "if i542 < 997 goto $s313 = r0[i542]"
    "i543 = 0"
    "$s320 = r0[i543]"
    "$i315 = 32267 + i543"
    "$s316 = (short) $i315"
    "$i317 = $s316 + 32267"
    "$i318 = $i317 << 7"
    "$s319 = (short) $i318"
    "$i321 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_add: \", i543, $s320, $s319)"
    "i489 = i489 + $i321"
    "i543 = i543 + 1"
    "if i543 < 997 goto $s320 = r0[i543]"
    "i544 = 0"
    "$s327 = r0[i544]"
    "$i322 = 32267 + i544"
    "$s323 = (short) $i322"
    "$i324 = $s323 + 32267"
    "$i325 = $i324 >>> 7"
    "$s326 = (short) $i325"
    "$i328 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_add: \", i544, $s327, $s326)"
    "i489 = i489 + $i328"
    "i544 = i544 + 1"
    "if i544 < 997 goto $s327 = r0[i544]"
    "i545 = 0"
    "$s334 = r0[i545]"
    "$i329 = 32267 + i545"
    "$s330 = (short) $i329"
    "$i331 = $s330 + 32267"
    "$i332 = $i331 >>> 7"
    "$s333 = (short) $i332"
    "$i335 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_add: \", i545, $s334, $s333)"
    "i489 = i489 + $i335"
    "i545 = i545 + 1"
    "if i545 < 997 goto $s334 = r0[i545]"
    "i546 = 0"
    "$s341 = r0[i546]"
    "$i336 = 32267 + i546"
    "$s337 = (short) $i336"
    "$i338 = $s337 + 32267"
    "$i339 = $i338 >> 7"
    "$s340 = (short) $i339"
    "$i342 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_add: \", i546, $s341, $s340)"
    "i489 = i489 + $i342"
    "i546 = i546 + 1"
    "if i546 < 997 goto $s341 = r0[i546]"
    "i547 = 0"
    "$s348 = r0[i547]"
    "$i343 = 32267 + i547"
    "$s344 = (short) $i343"
    "$i345 = $s344 + 32267"
    "$i346 = $i345 >> 7"
    "$s347 = (short) $i346"
    "$i349 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_add: \", i547, $s348, $s347)"
    "i489 = i489 + $i349"
    "i547 = i547 + 1"
    "if i547 < 997 goto $s348 = r0[i547]"
    "i548 = 0"
    "$s355 = r0[i548]"
    "$i350 = 32267 + i548"
    "$s351 = (short) $i350"
    "$i352 = $s351 & 46897"
    "$i353 = $i352 << 7"
    "$s354 = (short) $i353"
    "$i356 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_and: \", i548, $s355, $s354)"
    "i489 = i489 + $i356"
    "i548 = i548 + 1"
    "if i548 < 997 goto $s355 = r0[i548]"
    "i549 = 0"
    "$s362 = r0[i549]"
    "$i357 = 32267 + i549"
    "$s358 = (short) $i357"
    "$i359 = $s358 & 46897"
    "$i360 = $i359 << 7"
    "$s361 = (short) $i360"
    "$i363 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_and: \", i549, $s362, $s361)"
    "i489 = i489 + $i363"
    "i549 = i549 + 1"
    "if i549 < 997 goto $s362 = r0[i549]"
    "i550 = 0"
    "$s369 = r0[i550]"
    "$i364 = 32267 + i550"
    "$s365 = (short) $i364"
    "$i366 = $s365 & 46897"
    "$i367 = $i366 >>> 7"
    "$s368 = (short) $i367"
    "$i370 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_and: \", i550, $s369, $s368)"
    "i489 = i489 + $i370"
    "i550 = i550 + 1"
    "if i550 < 997 goto $s369 = r0[i550]"
    "i551 = 0"
    "$s376 = r0[i551]"
    "$i371 = 32267 + i551"
    "$s372 = (short) $i371"
    "$i373 = $s372 & 46897"
    "$i374 = $i373 >>> 7"
    "$s375 = (short) $i374"
    "$i377 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_and: \", i551, $s376, $s375)"
    "i489 = i489 + $i377"
    "i551 = i551 + 1"
    "if i551 < 997 goto $s376 = r0[i551]"
    "i552 = 0"
    "$s383 = r0[i552]"
    "$i378 = 32267 + i552"
    "$s379 = (short) $i378"
    "$i380 = $s379 & 46897"
    "$i381 = $i380 >> 7"
    "$s382 = (short) $i381"
    "$i384 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_and: \", i552, $s383, $s382)"
    "i489 = i489 + $i384"
    "i552 = i552 + 1"
    "if i552 < 997 goto $s383 = r0[i552]"
    "i553 = 0"
    "$s390 = r0[i553]"
    "$i385 = 32267 + i553"
    "$s386 = (short) $i385"
    "$i387 = $s386 & 46897"
    "$i388 = $i387 >> 7"
    "$s389 = (short) $i388"
    "$i391 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_and: \", i553, $s390, $s389)"
    "i489 = i489 + $i391"
    "i553 = i553 + 1"
    "if i553 < 997 goto $s390 = r0[i553]"
    "i554 = 0"
    "$i400 = r5[i554]"
    "$i392 = 2 * i554"
    "$i393 = 32267 + $i392"
    "$i398 = $i393 & 65535"
    "$i394 = 2 * i554"
    "$i395 = 32267 + $i394"
    "$i396 = $i395 + 1"
    "$i397 = $i396 << 16"
    "$i399 = $i398 | $i397"
    "$i401 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2: \", i554, $i400, $i399)"
    "i489 = i489 + $i401"
    "i554 = i554 + 1"
    "if i554 < 498 goto $i400 = r5[i554]"
    "i555 = 0"
    "r0[i555] = -1"
    "i555 = i555 + 1"
    "if i555 < 997 goto r0[i555] = -1"
    "i556 = 0"
    "$s404 = r0[i556]"
    "$i402 = 32267 + i556"
    "$s403 = (short) $i402"
    "$i405 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2: \", i556, $s404, $s403)"
    "i489 = i489 + $i405"
    "i556 = i556 + 1"
    "if i556 < 996 goto $s404 = r0[i556]"
    "i557 = 0"
    "$i414 = r5[i557]"
    "$i406 = 2 * i557"
    "$i407 = 32267 + $i406"
    "$i408 = $i407 + 1"
    "$i412 = $i408 & 65535"
    "$i409 = 2 * i557"
    "$i410 = 32267 + $i409"
    "$i411 = $i410 << 16"
    "$i413 = $i412 | $i411"
    "$i415 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2_swap: \", i557, $i414, $i413)"
    "i489 = i489 + $i415"
    "i557 = i557 + 1"
    "if i557 < 498 goto $i414 = r5[i557]"
    "i558 = 0"
    "r0[i558] = -1"
    "i558 = i558 + 1"
    "if i558 < 997 goto r0[i558] = -1"
    "i559 = 0"
    "$s418 = r0[i559]"
    "$i416 = 32267 + i559"
    "$s417 = (short) $i416"
    "$i419 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2_swap: \", i559, $s418, $s417)"
    "i489 = i489 + $i419"
    "i559 = i559 + 1"
    "if i559 < 996 goto $s418 = r0[i559]"
    "i560 = 0"
    "$l446 = r6[i560]"
    "$i420 = 4 * i560"
    "$i421 = 32267 + $i420"
    "$i422 = $i421 + 0"
    "$l423 = (long) $i422"
    "$l430 = $l423 & 65535L"
    "$i424 = 4 * i560"
    "$i425 = 32267 + $i424"
    "$i426 = $i425 + 1"
    "$l427 = (long) $i426"
    "$l428 = $l427 & 65535L"
    "$l429 = $l428 << 16"
    "$l437 = $l430 | $l429"
    "$i431 = 4 * i560"
    "$i432 = 32267 + $i431"
    "$i433 = $i432 + 2"
    "$l434 = (long) $i433"
    "$l435 = $l434 & 65535L"
    "$l436 = $l435 << 32"
    "$l444 = $l437 | $l436"
    "$i438 = 4 * i560"
    "$i439 = 32267 + $i438"
    "$i440 = $i439 + 3"
    "$l441 = (long) $i440"
    "$l442 = $l441 & 65535L"
    "$l443 = $l442 << 48"
    "$l445 = $l444 | $l443"
    "$i447 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4: \", i560, $l446, $l445)"
    "i489 = i489 + $i447"
    "i560 = i560 + 1"
    "if i560 < 249 goto $l446 = r6[i560]"
    "i561 = 0"
    "r0[i561] = -1"
    "i561 = i561 + 1"
    "if i561 < 997 goto r0[i561] = -1"
    "i562 = 0"
    "$s450 = r0[i562]"
    "$i448 = 32267 + i562"
    "$s449 = (short) $i448"
    "$i451 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4: \", i562, $s450, $s449)"
    "i489 = i489 + $i451"
    "i562 = i562 + 1"
    "if i562 < 996 goto $s450 = r0[i562]"
    "i563 = 0"
    "$l478 = r6[i563]"
    "$i452 = 4 * i563"
    "$i453 = 32267 + $i452"
    "$i454 = $i453 + 3"
    "$l455 = (long) $i454"
    "$l462 = $l455 & 65535L"
    "$i456 = 4 * i563"
    "$i457 = 32267 + $i456"
    "$i458 = $i457 + 2"
    "$l459 = (long) $i458"
    "$l460 = $l459 & 65535L"
    "$l461 = $l460 << 16"
    "$l469 = $l462 | $l461"
    "$i463 = 4 * i563"
    "$i464 = 32267 + $i463"
    "$i465 = $i464 + 1"
    "$l466 = (long) $i465"
    "$l467 = $l466 & 65535L"
    "$l468 = $l467 << 32"
    "$l476 = $l469 | $l468"
    "$i470 = 4 * i563"
    "$i471 = 32267 + $i470"
    "$i472 = $i471 + 0"
    "$l473 = (long) $i472"
    "$l474 = $l473 & 65535L"
    "$l475 = $l474 << 48"
    "$l477 = $l476 | $l475"
    "$i479 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4_swap: \", i563, $l478, $l477)"
    "i489 = i489 + $i479"
    "i563 = i563 + 1"
    "if i563 < 249 goto $l478 = r6[i563]"
    "i564 = 0"
    "r0[i564] = -1"
    "i564 = i564 + 1"
    "if i564 < 997 goto r0[i564] = -1"
    "i565 = 0"
    "$s482 = r0[i565]"
    "$i480 = 32267 + i565"
    "$s481 = (short) $i480"
    "$i483 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4_swap: \", i565, $s482, $s481)"
    "i489 = i489 + $i483"
    "i565 = i565 + 1"
    "if i565 < 996 goto $s482 = r0[i565]"
    "if i489 <= 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"
    "return i489"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i566 = 0"
    "i566 = i566 + 1"
    "if i566 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"
    "i567 = 0"
    "i567 = i567 + 1"
    "if i567 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"
    "i568 = 0"
    "i568 = i568 + 1"
    "if i568 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"
    "i569 = 0"
    "i569 = i569 + 1"
    "if i569 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"
    "i570 = 0"
    "i570 = i570 + 1"
    "if i570 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"
    "i571 = 0"
    "i571 = i571 + 1"
    "if i571 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"
    "i572 = 0"
    "i572 = i572 + 1"
    "if i572 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"
    "i573 = 0"
    "i573 = i573 + 1"
    "if i573 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"
    "i574 = 0"
    "i574 = i574 + 1"
    "if i574 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"
    "i575 = 0"
    "i575 = i575 + 1"
    "if i575 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"
    "i576 = 0"
    "i576 = i576 + 1"
    "if i576 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"
    "i577 = 0"
    "i577 = i577 + 1"
    "if i577 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"
    "i578 = 0"
    "i578 = i578 + 1"
    "if i578 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"
    "i579 = 0"
    "i579 = i579 + 1"
    "if i579 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"
    "i580 = 0"
    "i580 = i580 + 1"
    "if i580 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"
    "i581 = 0"
    "i581 = i581 + 1"
    "if i581 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"
    "i582 = 0"
    "i582 = i582 + 1"
    "if i582 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"
    "i583 = 0"
    "i583 = i583 + 1"
    "if i583 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"
    "i584 = 0"
    "i584 = i584 + 1"
    "if i584 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"
    "i585 = 0"
    "i585 = i585 + 1"
    "if i585 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"
    "i586 = 0"
    "i586 = i586 + 1"
    "if i586 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"
    "i587 = 0"
    "i587 = i587 + 1"
    "if i587 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"
    "i588 = 0"
    "i588 = i588 + 1"
    "if i588 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"
    "i589 = 0"
    "i589 = i589 + 1"
    "if i589 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"
    "i590 = 0"
    "i590 = i590 + 1"
    "if i590 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"
    "i591 = 0"
    "i591 = i591 + 1"
    "if i591 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"
    "i592 = 0"
    "i592 = i592 + 1"
    "if i592 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"
    "i593 = 0"
    "i593 = i593 + 1"
    "if i593 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"
    "i594 = 0"
    "i594 = i594 + 1"
    "if i594 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"
    "i595 = 0"
    "i595 = i595 + 1"
    "if i595 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"
    "i596 = 0"
    "i596 = i596 + 1"
    "if i596 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"
    "i597 = 0"
    "i597 = i597 + 1"
    "if i597 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"
    "i598 = 0"
    "i598 = i598 + 1"
    "if i598 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"
    "i599 = 0"
    "i599 = i599 + 1"
    "if i599 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"
    "i600 = 0"
    "i600 = i600 + 1"
    "if i600 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"
    "i601 = 0"
    "i601 = i601 + 1"
    "if i601 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"
    "i602 = 0"
    "i602 = i602 + 1"
    "if i602 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"
    "i603 = 0"
    "i603 = i603 + 1"
    "if i603 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"
    "i604 = 0"
    "i604 = i604 + 1"
    "if i604 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"
    "i605 = 0"
    "i605 = i605 + 1"
    "if i605 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"
    "i606 = 0"
    "i606 = i606 + 1"
    "if i606 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"
    "i607 = 0"
    "i607 = i607 + 1"
    "if i607 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"
    "i608 = 0"
    "i608 = i608 + 1"
    "if i608 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"
    "i609 = 0"
    "i609 = i609 + 1"
    "if i609 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"
    "i610 = 0"
    "i610 = i610 + 1"
    "if i610 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"
    "i611 = 0"
    "i611 = i611 + 1"
    "if i611 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"
    "i612 = 0"
    "i612 = i612 + 1"
    "if i612 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"
    "i613 = 0"
    "i613 = i613 + 1"
    "if i613 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"
    "i614 = 0"
    "i614 = i614 + 1"
    "if i614 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"
    "i615 = 0"
    "i615 = i615 + 1"
    "if i615 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"
    "i616 = 0"
    "i616 = i616 + 1"
    "if i616 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"
    "i617 = 0"
    "i617 = i617 + 1"
    "if i617 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"
    "i618 = 0"
    "i618 = i618 + 1"
    "if i618 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"
    "i619 = 0"
    "i619 = i619 + 1"
    "if i619 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"
    "i620 = 0"
    "i620 = i620 + 1"
    "if i620 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"
    "i621 = 0"
    "i621 = i621 + 1"
    "if i621 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"
    "i622 = 0"
    "i622 = i622 + 1"
    "if i622 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"
    "i623 = 0"
    "i623 = i623 + 1"
    "if i623 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"
    "i624 = 0"
    "i624 = i624 + 1"
    "if i624 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"
    "i625 = 0"
    "i625 = i625 + 1"
    "if i625 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"
    "i626 = 0"
    "i626 = i626 + 1"
    "if i626 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"
    "i627 = 0"
    "i627 = i627 + 1"
    "if i627 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"
    "i628 = 0"
    "i628 = i628 + 1"
    "if i628 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"
    "i629 = 0"
    "i629 = i629 + 1"
    "if i629 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"
    "i630 = 0"
    "i630 = i630 + 1"
    "if i630 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"
    "i631 = 0"
    "i631 = i631 + 1"
    "if i631 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"
    "i632 = 0"
    "i632 = i632 + 1"
    "if i632 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"
    "i633 = 0"
    "i633 = i633 + 1"
    "if i633 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"
    "i634 = 0"
    "i634 = i634 + 1"
    "if i634 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"
    "i635 = 0"
    "i635 = i635 + 1"
    "if i635 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"
    "i636 = 0"
    "i636 = i636 + 1"
    "if i636 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"
    "i637 = 0"
    "i637 = i637 + 1"
    "if i637 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"
    "r0 = newarray (short)[997]"->"r1 = newarray (short)[997]";
    "r1 = newarray (short)[997]"->"r2 = newarray (short)[997]";
    "r2 = newarray (short)[997]"->"r3 = newarray (short)[997]";
    "r3 = newarray (short)[997]"->"r4 = newarray (short)[997]";
    "r4 = newarray (short)[997]"->"r5 = newarray (int)[498]";
    "r5 = newarray (int)[498]"->"r6 = newarray (long)[249]";
    "r6 = newarray (long)[249]"->"i485 = 0";
    "i485 = 0"->"i486 = 0";
    "i486 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i486 < 997 goto $i0 = 32267 + i486";
    "$i0 = 32267 + i486"->"s487 = (short) $i0";
    "s487 = (short) $i0"->"i485 = i485 + s487";
    "i485 = i485 + s487"->"r1[i486] = s487";
    "r1[i486] = s487"->"r2[i486] = 7";
    "r2[i486] = 7"->"r3[i486] = -7";
    "r3[i486] = -7"->"r4[i486] = -18639";
    "r4[i486] = -18639"->"i486 = i486 + 1";
    "i486 = i486 + 1"->"if i486 < 997 goto $i0 = 32267 + i486";
    "if i486 < 997 goto $i0 = 32267 + i486"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i486 < 997 goto $i0 = 32267 + i486"->"$i0 = 32267 + i486";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i488 = 0";
    "i488 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i488 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"->"i488 = i488 + 1";
    "i488 = i488 + 1"->"if i488 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "if i488 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "if i488 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i489 = 0";
    "i489 = 0"->"i490 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "i490 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"if i490 == i485 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "if i490 == i485 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"$r11 = <java.lang.System: java.io.PrintStream err>";
    "if i490 == i485 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "$r11 = <java.lang.System: java.io.PrintStream err>"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"->"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i490)";
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i490)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i485)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i485)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15)";
    "virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15)"->"i489 = i489 + 1";
    "i489 = i489 + 1"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"i491 = 0";
    "i491 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i491 < 997 goto $s6 = r0[i491]";
    "$s6 = r0[i491]"->"$i2 = 32267 + i491";
    "$i2 = 32267 + i491"->"$s3 = (short) $i2";
    "$s3 = (short) $i2"->"$i4 = $s3 + 7";
    "$i4 = $s3 + 7"->"$s5 = (short) $i4";
    "$s5 = (short) $i4"->"$i7 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addc: \", i491, $s6, $s5)";
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addc: \", i491, $s6, $s5)"->"i489 = i489 + $i7";
    "i489 = i489 + $i7"->"i491 = i491 + 1";
    "i491 = i491 + 1"->"if i491 < 997 goto $s6 = r0[i491]";
    "if i491 < 997 goto $s6 = r0[i491]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)";
    "if i491 < 997 goto $s6 = r0[i491]"->"$s6 = r0[i491]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"->"i492 = 0";
    "i492 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i492 < 997 goto $s12 = r0[i492]";
    "$s12 = r0[i492]"->"$i8 = 32267 + i492";
    "$i8 = 32267 + i492"->"$s9 = (short) $i8";
    "$s9 = (short) $i8"->"$i10 = $s9 + 7";
    "$i10 = $s9 + 7"->"$s11 = (short) $i10";
    "$s11 = (short) $i10"->"$i13 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addv: \", i492, $s12, $s11)";
    "$i13 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addv: \", i492, $s12, $s11)"->"i489 = i489 + $i13";
    "i489 = i489 + $i13"->"i492 = i492 + 1";
    "i492 = i492 + 1"->"if i492 < 997 goto $s12 = r0[i492]";
    "if i492 < 997 goto $s12 = r0[i492]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)";
    "if i492 < 997 goto $s12 = r0[i492]"->"$s12 = r0[i492]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"->"i493 = 0";
    "i493 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i493 < 997 goto $s18 = r0[i493]";
    "$s18 = r0[i493]"->"$i14 = 32267 + i493";
    "$i14 = 32267 + i493"->"$s15 = (short) $i14";
    "$s15 = (short) $i14"->"$i16 = $s15 + 7";
    "$i16 = $s15 + 7"->"$s17 = (short) $i16";
    "$s17 = (short) $i16"->"$i19 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_adda: \", i493, $s18, $s17)";
    "$i19 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_adda: \", i493, $s18, $s17)"->"i489 = i489 + $i19";
    "i489 = i489 + $i19"->"i493 = i493 + 1";
    "i493 = i493 + 1"->"if i493 < 997 goto $s18 = r0[i493]";
    "if i493 < 997 goto $s18 = r0[i493]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)";
    "if i493 < 997 goto $s18 = r0[i493]"->"$s18 = r0[i493]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"->"i494 = 0";
    "i494 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i494 < 997 goto $s24 = r0[i494]";
    "$s24 = r0[i494]"->"$i20 = 32267 + i494";
    "$i20 = 32267 + i494"->"$s21 = (short) $i20";
    "$s21 = (short) $i20"->"$i22 = $s21 - 7";
    "$i22 = $s21 - 7"->"$s23 = (short) $i22";
    "$s23 = (short) $i22"->"$i25 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subc: \", i494, $s24, $s23)";
    "$i25 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subc: \", i494, $s24, $s23)"->"i489 = i489 + $i25";
    "i489 = i489 + $i25"->"i494 = i494 + 1";
    "i494 = i494 + 1"->"if i494 < 997 goto $s24 = r0[i494]";
    "if i494 < 997 goto $s24 = r0[i494]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)";
    "if i494 < 997 goto $s24 = r0[i494]"->"$s24 = r0[i494]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"->"i495 = 0";
    "i495 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i495 < 997 goto $s30 = r0[i495]";
    "$s30 = r0[i495]"->"$i26 = 32267 + i495";
    "$i26 = 32267 + i495"->"$s27 = (short) $i26";
    "$s27 = (short) $i26"->"$i28 = $s27 - 7";
    "$i28 = $s27 - 7"->"$s29 = (short) $i28";
    "$s29 = (short) $i28"->"$i31 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subv: \", i495, $s30, $s29)";
    "$i31 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_subv: \", i495, $s30, $s29)"->"i489 = i489 + $i31";
    "i489 = i489 + $i31"->"i495 = i495 + 1";
    "i495 = i495 + 1"->"if i495 < 997 goto $s30 = r0[i495]";
    "if i495 < 997 goto $s30 = r0[i495]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)";
    "if i495 < 997 goto $s30 = r0[i495]"->"$s30 = r0[i495]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"->"i496 = 0";
    "i496 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i496 < 997 goto $s36 = r0[i496]";
    "$s36 = r0[i496]"->"$i32 = 32267 + i496";
    "$i32 = 32267 + i496"->"$s33 = (short) $i32";
    "$s33 = (short) $i32"->"$i34 = $s33 - 7";
    "$i34 = $s33 - 7"->"$s35 = (short) $i34";
    "$s35 = (short) $i34"->"$i37 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_suba: \", i496, $s36, $s35)";
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_suba: \", i496, $s36, $s35)"->"i489 = i489 + $i37";
    "i489 = i489 + $i37"->"i496 = i496 + 1";
    "i496 = i496 + 1"->"if i496 < 997 goto $s36 = r0[i496]";
    "if i496 < 997 goto $s36 = r0[i496]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)";
    "if i496 < 997 goto $s36 = r0[i496]"->"$s36 = r0[i496]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"->"i497 = 0";
    "i497 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i497 < 997 goto $s42 = r0[i497]";
    "$s42 = r0[i497]"->"$i38 = 32267 + i497";
    "$i38 = 32267 + i497"->"$s39 = (short) $i38";
    "$s39 = (short) $i38"->"$i40 = $s39 * 7";
    "$i40 = $s39 * 7"->"$s41 = (short) $i40";
    "$s41 = (short) $i40"->"$i43 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc: \", i497, $s42, $s41)";
    "$i43 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc: \", i497, $s42, $s41)"->"i489 = i489 + $i43";
    "i489 = i489 + $i43"->"i497 = i497 + 1";
    "i497 = i497 + 1"->"if i497 < 997 goto $s42 = r0[i497]";
    "if i497 < 997 goto $s42 = r0[i497]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)";
    "if i497 < 997 goto $s42 = r0[i497]"->"$s42 = r0[i497]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"->"i498 = 0";
    "i498 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i498 < 997 goto $s48 = r0[i498]";
    "$s48 = r0[i498]"->"$i44 = 32267 + i498";
    "$i44 = 32267 + i498"->"$s45 = (short) $i44";
    "$s45 = (short) $i44"->"$i46 = $s45 * 7";
    "$i46 = $s45 * 7"->"$s47 = (short) $i46";
    "$s47 = (short) $i46"->"$i49 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv: \", i498, $s48, $s47)";
    "$i49 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv: \", i498, $s48, $s47)"->"i489 = i489 + $i49";
    "i489 = i489 + $i49"->"i498 = i498 + 1";
    "i498 = i498 + 1"->"if i498 < 997 goto $s48 = r0[i498]";
    "if i498 < 997 goto $s48 = r0[i498]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)";
    "if i498 < 997 goto $s48 = r0[i498]"->"$s48 = r0[i498]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"->"i499 = 0";
    "i499 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i499 < 997 goto $s54 = r0[i499]";
    "$s54 = r0[i499]"->"$i50 = 32267 + i499";
    "$i50 = 32267 + i499"->"$s51 = (short) $i50";
    "$s51 = (short) $i50"->"$i52 = $s51 * 7";
    "$i52 = $s51 * 7"->"$s53 = (short) $i52";
    "$s53 = (short) $i52"->"$i55 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula: \", i499, $s54, $s53)";
    "$i55 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula: \", i499, $s54, $s53)"->"i489 = i489 + $i55";
    "i489 = i489 + $i55"->"i499 = i499 + 1";
    "i499 = i499 + 1"->"if i499 < 997 goto $s54 = r0[i499]";
    "if i499 < 997 goto $s54 = r0[i499]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)";
    "if i499 < 997 goto $s54 = r0[i499]"->"$s54 = r0[i499]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"->"i500 = 0";
    "i500 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i500 < 997 goto $s60 = r0[i500]";
    "$s60 = r0[i500]"->"$i56 = 32267 + i500";
    "$i56 = 32267 + i500"->"$s57 = (short) $i56";
    "$s57 = (short) $i56"->"$i58 = $s57 / 7";
    "$i58 = $s57 / 7"->"$s59 = (short) $i58";
    "$s59 = (short) $i58"->"$i61 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc: \", i500, $s60, $s59)";
    "$i61 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc: \", i500, $s60, $s59)"->"i489 = i489 + $i61";
    "i489 = i489 + $i61"->"i500 = i500 + 1";
    "i500 = i500 + 1"->"if i500 < 997 goto $s60 = r0[i500]";
    "if i500 < 997 goto $s60 = r0[i500]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)";
    "if i500 < 997 goto $s60 = r0[i500]"->"$s60 = r0[i500]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"->"i501 = 0";
    "i501 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i501 < 997 goto $s66 = r0[i501]";
    "$s66 = r0[i501]"->"$i62 = 32267 + i501";
    "$i62 = 32267 + i501"->"$s63 = (short) $i62";
    "$s63 = (short) $i62"->"$i64 = $s63 / 7";
    "$i64 = $s63 / 7"->"$s65 = (short) $i64";
    "$s65 = (short) $i64"->"$i67 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv: \", i501, $s66, $s65)";
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv: \", i501, $s66, $s65)"->"i489 = i489 + $i67";
    "i489 = i489 + $i67"->"i501 = i501 + 1";
    "i501 = i501 + 1"->"if i501 < 997 goto $s66 = r0[i501]";
    "if i501 < 997 goto $s66 = r0[i501]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)";
    "if i501 < 997 goto $s66 = r0[i501]"->"$s66 = r0[i501]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"->"i502 = 0";
    "i502 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i502 < 997 goto $s72 = r0[i502]";
    "$s72 = r0[i502]"->"$i68 = 32267 + i502";
    "$i68 = 32267 + i502"->"$s69 = (short) $i68";
    "$s69 = (short) $i68"->"$i70 = $s69 / 7";
    "$i70 = $s69 / 7"->"$s71 = (short) $i70";
    "$s71 = (short) $i70"->"$i73 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva: \", i502, $s72, $s71)";
    "$i73 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva: \", i502, $s72, $s71)"->"i489 = i489 + $i73";
    "i489 = i489 + $i73"->"i502 = i502 + 1";
    "i502 = i502 + 1"->"if i502 < 997 goto $s72 = r0[i502]";
    "if i502 < 997 goto $s72 = r0[i502]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)";
    "if i502 < 997 goto $s72 = r0[i502]"->"$s72 = r0[i502]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"->"i503 = 0";
    "i503 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i503 < 997 goto $s78 = r0[i503]";
    "$s78 = r0[i503]"->"$i74 = 32267 + i503";
    "$i74 = 32267 + i503"->"$s75 = (short) $i74";
    "$s75 = (short) $i74"->"$i76 = $s75 * -7";
    "$i76 = $s75 * -7"->"$s77 = (short) $i76";
    "$s77 = (short) $i76"->"$i79 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc_n: \", i503, $s78, $s77)";
    "$i79 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulc_n: \", i503, $s78, $s77)"->"i489 = i489 + $i79";
    "i489 = i489 + $i79"->"i503 = i503 + 1";
    "i503 = i503 + 1"->"if i503 < 997 goto $s78 = r0[i503]";
    "if i503 < 997 goto $s78 = r0[i503]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)";
    "if i503 < 997 goto $s78 = r0[i503]"->"$s78 = r0[i503]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"->"i504 = 0";
    "i504 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i504 < 997 goto $s84 = r0[i504]";
    "$s84 = r0[i504]"->"$i80 = 32267 + i504";
    "$i80 = 32267 + i504"->"$s81 = (short) $i80";
    "$s81 = (short) $i80"->"$i82 = $s81 * -7";
    "$i82 = $s81 * -7"->"$s83 = (short) $i82";
    "$s83 = (short) $i82"->"$i85 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv_n: \", i504, $s84, $s83)";
    "$i85 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mulv_n: \", i504, $s84, $s83)"->"i489 = i489 + $i85";
    "i489 = i489 + $i85"->"i504 = i504 + 1";
    "i504 = i504 + 1"->"if i504 < 997 goto $s84 = r0[i504]";
    "if i504 < 997 goto $s84 = r0[i504]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)";
    "if i504 < 997 goto $s84 = r0[i504]"->"$s84 = r0[i504]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"->"i505 = 0";
    "i505 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i505 < 997 goto $s90 = r0[i505]";
    "$s90 = r0[i505]"->"$i86 = 32267 + i505";
    "$i86 = 32267 + i505"->"$s87 = (short) $i86";
    "$s87 = (short) $i86"->"$i88 = $s87 * -7";
    "$i88 = $s87 * -7"->"$s89 = (short) $i88";
    "$s89 = (short) $i88"->"$i91 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula_n: \", i505, $s90, $s89)";
    "$i91 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_mula_n: \", i505, $s90, $s89)"->"i489 = i489 + $i91";
    "i489 = i489 + $i91"->"i505 = i505 + 1";
    "i505 = i505 + 1"->"if i505 < 997 goto $s90 = r0[i505]";
    "if i505 < 997 goto $s90 = r0[i505]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)";
    "if i505 < 997 goto $s90 = r0[i505]"->"$s90 = r0[i505]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"->"i506 = 0";
    "i506 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i506 < 997 goto $s96 = r0[i506]";
    "$s96 = r0[i506]"->"$i92 = 32267 + i506";
    "$i92 = 32267 + i506"->"$s93 = (short) $i92";
    "$s93 = (short) $i92"->"$i94 = $s93 / -7";
    "$i94 = $s93 / -7"->"$s95 = (short) $i94";
    "$s95 = (short) $i94"->"$i97 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc_n: \", i506, $s96, $s95)";
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divc_n: \", i506, $s96, $s95)"->"i489 = i489 + $i97";
    "i489 = i489 + $i97"->"i506 = i506 + 1";
    "i506 = i506 + 1"->"if i506 < 997 goto $s96 = r0[i506]";
    "if i506 < 997 goto $s96 = r0[i506]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)";
    "if i506 < 997 goto $s96 = r0[i506]"->"$s96 = r0[i506]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"->"i507 = 0";
    "i507 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i507 < 997 goto $s102 = r0[i507]";
    "$s102 = r0[i507]"->"$i98 = 32267 + i507";
    "$i98 = 32267 + i507"->"$s99 = (short) $i98";
    "$s99 = (short) $i98"->"$i100 = $s99 / -7";
    "$i100 = $s99 / -7"->"$s101 = (short) $i100";
    "$s101 = (short) $i100"->"$i103 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv_n: \", i507, $s102, $s101)";
    "$i103 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_divv_n: \", i507, $s102, $s101)"->"i489 = i489 + $i103";
    "i489 = i489 + $i103"->"i507 = i507 + 1";
    "i507 = i507 + 1"->"if i507 < 997 goto $s102 = r0[i507]";
    "if i507 < 997 goto $s102 = r0[i507]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)";
    "if i507 < 997 goto $s102 = r0[i507]"->"$s102 = r0[i507]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"->"i508 = 0";
    "i508 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i508 < 997 goto $s108 = r0[i508]";
    "$s108 = r0[i508]"->"$i104 = 32267 + i508";
    "$i104 = 32267 + i508"->"$s105 = (short) $i104";
    "$s105 = (short) $i104"->"$i106 = $s105 / -7";
    "$i106 = $s105 / -7"->"$s107 = (short) $i106";
    "$s107 = (short) $i106"->"$i109 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva_n: \", i508, $s108, $s107)";
    "$i109 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_diva_n: \", i508, $s108, $s107)"->"i489 = i489 + $i109";
    "i489 = i489 + $i109"->"i508 = i508 + 1";
    "i508 = i508 + 1"->"if i508 < 997 goto $s108 = r0[i508]";
    "if i508 < 997 goto $s108 = r0[i508]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)";
    "if i508 < 997 goto $s108 = r0[i508]"->"$s108 = r0[i508]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"->"i509 = 0";
    "i509 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i509 < 997 goto $s114 = r0[i509]";
    "$s114 = r0[i509]"->"$i110 = 32267 + i509";
    "$i110 = 32267 + i509"->"$s111 = (short) $i110";
    "$s111 = (short) $i110"->"$i112 = $s111 & 46897";
    "$i112 = $s111 & 46897"->"$s113 = (short) $i112";
    "$s113 = (short) $i112"->"$i115 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andc: \", i509, $s114, $s113)";
    "$i115 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andc: \", i509, $s114, $s113)"->"i489 = i489 + $i115";
    "i489 = i489 + $i115"->"i509 = i509 + 1";
    "i509 = i509 + 1"->"if i509 < 997 goto $s114 = r0[i509]";
    "if i509 < 997 goto $s114 = r0[i509]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)";
    "if i509 < 997 goto $s114 = r0[i509]"->"$s114 = r0[i509]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"->"i510 = 0";
    "i510 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i510 < 997 goto $s120 = r0[i510]";
    "$s120 = r0[i510]"->"$i116 = 32267 + i510";
    "$i116 = 32267 + i510"->"$s117 = (short) $i116";
    "$s117 = (short) $i116"->"$i118 = $s117 & 46897";
    "$i118 = $s117 & 46897"->"$s119 = (short) $i118";
    "$s119 = (short) $i118"->"$i121 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andv: \", i510, $s120, $s119)";
    "$i121 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_andv: \", i510, $s120, $s119)"->"i489 = i489 + $i121";
    "i489 = i489 + $i121"->"i510 = i510 + 1";
    "i510 = i510 + 1"->"if i510 < 997 goto $s120 = r0[i510]";
    "if i510 < 997 goto $s120 = r0[i510]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)";
    "if i510 < 997 goto $s120 = r0[i510]"->"$s120 = r0[i510]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"->"i511 = 0";
    "i511 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i511 < 997 goto $s126 = r0[i511]";
    "$s126 = r0[i511]"->"$i122 = 32267 + i511";
    "$i122 = 32267 + i511"->"$s123 = (short) $i122";
    "$s123 = (short) $i122"->"$i124 = $s123 & 46897";
    "$i124 = $s123 & 46897"->"$s125 = (short) $i124";
    "$s125 = (short) $i124"->"$i127 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_anda: \", i511, $s126, $s125)";
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_anda: \", i511, $s126, $s125)"->"i489 = i489 + $i127";
    "i489 = i489 + $i127"->"i511 = i511 + 1";
    "i511 = i511 + 1"->"if i511 < 997 goto $s126 = r0[i511]";
    "if i511 < 997 goto $s126 = r0[i511]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)";
    "if i511 < 997 goto $s126 = r0[i511]"->"$s126 = r0[i511]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"->"i512 = 0";
    "i512 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i512 < 997 goto $s132 = r0[i512]";
    "$s132 = r0[i512]"->"$i128 = 32267 + i512";
    "$i128 = 32267 + i512"->"$s129 = (short) $i128";
    "$s129 = (short) $i128"->"$i130 = $s129 | 46897";
    "$i130 = $s129 | 46897"->"$s131 = (short) $i130";
    "$s131 = (short) $i130"->"$i133 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orc: \", i512, $s132, $s131)";
    "$i133 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orc: \", i512, $s132, $s131)"->"i489 = i489 + $i133";
    "i489 = i489 + $i133"->"i512 = i512 + 1";
    "i512 = i512 + 1"->"if i512 < 997 goto $s132 = r0[i512]";
    "if i512 < 997 goto $s132 = r0[i512]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)";
    "if i512 < 997 goto $s132 = r0[i512]"->"$s132 = r0[i512]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"->"i513 = 0";
    "i513 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i513 < 997 goto $s138 = r0[i513]";
    "$s138 = r0[i513]"->"$i134 = 32267 + i513";
    "$i134 = 32267 + i513"->"$s135 = (short) $i134";
    "$s135 = (short) $i134"->"$i136 = $s135 | 46897";
    "$i136 = $s135 | 46897"->"$s137 = (short) $i136";
    "$s137 = (short) $i136"->"$i139 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orv: \", i513, $s138, $s137)";
    "$i139 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_orv: \", i513, $s138, $s137)"->"i489 = i489 + $i139";
    "i489 = i489 + $i139"->"i513 = i513 + 1";
    "i513 = i513 + 1"->"if i513 < 997 goto $s138 = r0[i513]";
    "if i513 < 997 goto $s138 = r0[i513]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)";
    "if i513 < 997 goto $s138 = r0[i513]"->"$s138 = r0[i513]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"->"i514 = 0";
    "i514 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i514 < 997 goto $s144 = r0[i514]";
    "$s144 = r0[i514]"->"$i140 = 32267 + i514";
    "$i140 = 32267 + i514"->"$s141 = (short) $i140";
    "$s141 = (short) $i140"->"$i142 = $s141 | 46897";
    "$i142 = $s141 | 46897"->"$s143 = (short) $i142";
    "$s143 = (short) $i142"->"$i145 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_ora: \", i514, $s144, $s143)";
    "$i145 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_ora: \", i514, $s144, $s143)"->"i489 = i489 + $i145";
    "i489 = i489 + $i145"->"i514 = i514 + 1";
    "i514 = i514 + 1"->"if i514 < 997 goto $s144 = r0[i514]";
    "if i514 < 997 goto $s144 = r0[i514]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)";
    "if i514 < 997 goto $s144 = r0[i514]"->"$s144 = r0[i514]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"->"i515 = 0";
    "i515 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i515 < 997 goto $s150 = r0[i515]";
    "$s150 = r0[i515]"->"$i146 = 32267 + i515";
    "$i146 = 32267 + i515"->"$s147 = (short) $i146";
    "$s147 = (short) $i146"->"$i148 = $s147 ^ 46897";
    "$i148 = $s147 ^ 46897"->"$s149 = (short) $i148";
    "$s149 = (short) $i148"->"$i151 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorc: \", i515, $s150, $s149)";
    "$i151 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorc: \", i515, $s150, $s149)"->"i489 = i489 + $i151";
    "i489 = i489 + $i151"->"i515 = i515 + 1";
    "i515 = i515 + 1"->"if i515 < 997 goto $s150 = r0[i515]";
    "if i515 < 997 goto $s150 = r0[i515]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)";
    "if i515 < 997 goto $s150 = r0[i515]"->"$s150 = r0[i515]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"->"i516 = 0";
    "i516 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i516 < 997 goto $s156 = r0[i516]";
    "$s156 = r0[i516]"->"$i152 = 32267 + i516";
    "$i152 = 32267 + i516"->"$s153 = (short) $i152";
    "$s153 = (short) $i152"->"$i154 = $s153 ^ 46897";
    "$i154 = $s153 ^ 46897"->"$s155 = (short) $i154";
    "$s155 = (short) $i154"->"$i157 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorv: \", i516, $s156, $s155)";
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xorv: \", i516, $s156, $s155)"->"i489 = i489 + $i157";
    "i489 = i489 + $i157"->"i516 = i516 + 1";
    "i516 = i516 + 1"->"if i516 < 997 goto $s156 = r0[i516]";
    "if i516 < 997 goto $s156 = r0[i516]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)";
    "if i516 < 997 goto $s156 = r0[i516]"->"$s156 = r0[i516]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"->"i517 = 0";
    "i517 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i517 < 997 goto $s162 = r0[i517]";
    "$s162 = r0[i517]"->"$i158 = 32267 + i517";
    "$i158 = 32267 + i517"->"$s159 = (short) $i158";
    "$s159 = (short) $i158"->"$i160 = $s159 ^ 46897";
    "$i160 = $s159 ^ 46897"->"$s161 = (short) $i160";
    "$s161 = (short) $i160"->"$i163 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xora: \", i517, $s162, $s161)";
    "$i163 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_xora: \", i517, $s162, $s161)"->"i489 = i489 + $i163";
    "i489 = i489 + $i163"->"i517 = i517 + 1";
    "i517 = i517 + 1"->"if i517 < 997 goto $s162 = r0[i517]";
    "if i517 < 997 goto $s162 = r0[i517]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)";
    "if i517 < 997 goto $s162 = r0[i517]"->"$s162 = r0[i517]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"->"i518 = 0";
    "i518 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i518 < 997 goto $s168 = r0[i518]";
    "$s168 = r0[i518]"->"$i164 = 32267 + i518";
    "$i164 = 32267 + i518"->"$s165 = (short) $i164";
    "$s165 = (short) $i164"->"$i166 = $s165 << 7";
    "$i166 = $s165 << 7"->"$s167 = (short) $i166";
    "$s167 = (short) $i166"->"$i169 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc: \", i518, $s168, $s167)";
    "$i169 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc: \", i518, $s168, $s167)"->"i489 = i489 + $i169";
    "i489 = i489 + $i169"->"i518 = i518 + 1";
    "i518 = i518 + 1"->"if i518 < 997 goto $s168 = r0[i518]";
    "if i518 < 997 goto $s168 = r0[i518]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)";
    "if i518 < 997 goto $s168 = r0[i518]"->"$s168 = r0[i518]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"->"i519 = 0";
    "i519 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i519 < 997 goto $s174 = r0[i519]";
    "$s174 = r0[i519]"->"$i170 = 32267 + i519";
    "$i170 = 32267 + i519"->"$s171 = (short) $i170";
    "$s171 = (short) $i170"->"$i172 = $s171 << 7";
    "$i172 = $s171 << 7"->"$s173 = (short) $i172";
    "$s173 = (short) $i172"->"$i175 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv: \", i519, $s174, $s173)";
    "$i175 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv: \", i519, $s174, $s173)"->"i489 = i489 + $i175";
    "i489 = i489 + $i175"->"i519 = i519 + 1";
    "i519 = i519 + 1"->"if i519 < 997 goto $s174 = r0[i519]";
    "if i519 < 997 goto $s174 = r0[i519]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)";
    "if i519 < 997 goto $s174 = r0[i519]"->"$s174 = r0[i519]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"->"i520 = 0";
    "i520 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i520 < 997 goto $s180 = r0[i520]";
    "$s180 = r0[i520]"->"$i176 = 32267 + i520";
    "$i176 = 32267 + i520"->"$s177 = (short) $i176";
    "$s177 = (short) $i176"->"$i178 = $s177 >>> 7";
    "$i178 = $s177 >>> 7"->"$s179 = (short) $i178";
    "$s179 = (short) $i178"->"$i181 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc: \", i520, $s180, $s179)";
    "$i181 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc: \", i520, $s180, $s179)"->"i489 = i489 + $i181";
    "i489 = i489 + $i181"->"i520 = i520 + 1";
    "i520 = i520 + 1"->"if i520 < 997 goto $s180 = r0[i520]";
    "if i520 < 997 goto $s180 = r0[i520]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)";
    "if i520 < 997 goto $s180 = r0[i520]"->"$s180 = r0[i520]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"->"i521 = 0";
    "i521 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i521 < 997 goto $s186 = r0[i521]";
    "$s186 = r0[i521]"->"$i182 = 32267 + i521";
    "$i182 = 32267 + i521"->"$s183 = (short) $i182";
    "$s183 = (short) $i182"->"$i184 = $s183 >>> 7";
    "$i184 = $s183 >>> 7"->"$s185 = (short) $i184";
    "$s185 = (short) $i184"->"$i187 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv: \", i521, $s186, $s185)";
    "$i187 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv: \", i521, $s186, $s185)"->"i489 = i489 + $i187";
    "i489 = i489 + $i187"->"i521 = i521 + 1";
    "i521 = i521 + 1"->"if i521 < 997 goto $s186 = r0[i521]";
    "if i521 < 997 goto $s186 = r0[i521]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)";
    "if i521 < 997 goto $s186 = r0[i521]"->"$s186 = r0[i521]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"->"i522 = 0";
    "i522 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i522 < 997 goto $s192 = r0[i522]";
    "$s192 = r0[i522]"->"$i188 = 32267 + i522";
    "$i188 = 32267 + i522"->"$s189 = (short) $i188";
    "$s189 = (short) $i188"->"$i190 = $s189 >> 7";
    "$i190 = $s189 >> 7"->"$s191 = (short) $i190";
    "$s191 = (short) $i190"->"$i193 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac: \", i522, $s192, $s191)";
    "$i193 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac: \", i522, $s192, $s191)"->"i489 = i489 + $i193";
    "i489 = i489 + $i193"->"i522 = i522 + 1";
    "i522 = i522 + 1"->"if i522 < 997 goto $s192 = r0[i522]";
    "if i522 < 997 goto $s192 = r0[i522]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)";
    "if i522 < 997 goto $s192 = r0[i522]"->"$s192 = r0[i522]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"->"i523 = 0";
    "i523 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i523 < 997 goto $s198 = r0[i523]";
    "$s198 = r0[i523]"->"$i194 = 32267 + i523";
    "$i194 = 32267 + i523"->"$s195 = (short) $i194";
    "$s195 = (short) $i194"->"$i196 = $s195 >> 7";
    "$i196 = $s195 >> 7"->"$s197 = (short) $i196";
    "$s197 = (short) $i196"->"$i199 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav: \", i523, $s198, $s197)";
    "$i199 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav: \", i523, $s198, $s197)"->"i489 = i489 + $i199";
    "i489 = i489 + $i199"->"i523 = i523 + 1";
    "i523 = i523 + 1"->"if i523 < 997 goto $s198 = r0[i523]";
    "if i523 < 997 goto $s198 = r0[i523]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)";
    "if i523 < 997 goto $s198 = r0[i523]"->"$s198 = r0[i523]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"->"i524 = 0";
    "i524 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i524 < 997 goto $s204 = r0[i524]";
    "$s204 = r0[i524]"->"$i200 = 32267 + i524";
    "$i200 = 32267 + i524"->"$s201 = (short) $i200";
    "$s201 = (short) $i200"->"$i202 = $s201 << -7";
    "$i202 = $s201 << -7"->"$s203 = (short) $i202";
    "$s203 = (short) $i202"->"$i205 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_n: \", i524, $s204, $s203)";
    "$i205 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_n: \", i524, $s204, $s203)"->"i489 = i489 + $i205";
    "i489 = i489 + $i205"->"i524 = i524 + 1";
    "i524 = i524 + 1"->"if i524 < 997 goto $s204 = r0[i524]";
    "if i524 < 997 goto $s204 = r0[i524]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)";
    "if i524 < 997 goto $s204 = r0[i524]"->"$s204 = r0[i524]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"->"i525 = 0";
    "i525 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i525 < 997 goto $s210 = r0[i525]";
    "$s210 = r0[i525]"->"$i206 = 32267 + i525";
    "$i206 = 32267 + i525"->"$s207 = (short) $i206";
    "$s207 = (short) $i206"->"$i208 = $s207 << -7";
    "$i208 = $s207 << -7"->"$s209 = (short) $i208";
    "$s209 = (short) $i208"->"$i211 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_n: \", i525, $s210, $s209)";
    "$i211 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_n: \", i525, $s210, $s209)"->"i489 = i489 + $i211";
    "i489 = i489 + $i211"->"i525 = i525 + 1";
    "i525 = i525 + 1"->"if i525 < 997 goto $s210 = r0[i525]";
    "if i525 < 997 goto $s210 = r0[i525]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)";
    "if i525 < 997 goto $s210 = r0[i525]"->"$s210 = r0[i525]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"->"i526 = 0";
    "i526 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i526 < 997 goto $s216 = r0[i526]";
    "$s216 = r0[i526]"->"$i212 = 32267 + i526";
    "$i212 = 32267 + i526"->"$s213 = (short) $i212";
    "$s213 = (short) $i212"->"$i214 = $s213 >>> -7";
    "$i214 = $s213 >>> -7"->"$s215 = (short) $i214";
    "$s215 = (short) $i214"->"$i217 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_n: \", i526, $s216, $s215)";
    "$i217 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_n: \", i526, $s216, $s215)"->"i489 = i489 + $i217";
    "i489 = i489 + $i217"->"i526 = i526 + 1";
    "i526 = i526 + 1"->"if i526 < 997 goto $s216 = r0[i526]";
    "if i526 < 997 goto $s216 = r0[i526]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)";
    "if i526 < 997 goto $s216 = r0[i526]"->"$s216 = r0[i526]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"->"i527 = 0";
    "i527 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i527 < 997 goto $s222 = r0[i527]";
    "$s222 = r0[i527]"->"$i218 = 32267 + i527";
    "$i218 = 32267 + i527"->"$s219 = (short) $i218";
    "$s219 = (short) $i218"->"$i220 = $s219 >>> -7";
    "$i220 = $s219 >>> -7"->"$s221 = (short) $i220";
    "$s221 = (short) $i220"->"$i223 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_n: \", i527, $s222, $s221)";
    "$i223 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_n: \", i527, $s222, $s221)"->"i489 = i489 + $i223";
    "i489 = i489 + $i223"->"i527 = i527 + 1";
    "i527 = i527 + 1"->"if i527 < 997 goto $s222 = r0[i527]";
    "if i527 < 997 goto $s222 = r0[i527]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)";
    "if i527 < 997 goto $s222 = r0[i527]"->"$s222 = r0[i527]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"->"i528 = 0";
    "i528 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i528 < 997 goto $s228 = r0[i528]";
    "$s228 = r0[i528]"->"$i224 = 32267 + i528";
    "$i224 = 32267 + i528"->"$s225 = (short) $i224";
    "$s225 = (short) $i224"->"$i226 = $s225 >> -7";
    "$i226 = $s225 >> -7"->"$s227 = (short) $i226";
    "$s227 = (short) $i226"->"$i229 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_n: \", i528, $s228, $s227)";
    "$i229 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_n: \", i528, $s228, $s227)"->"i489 = i489 + $i229";
    "i489 = i489 + $i229"->"i528 = i528 + 1";
    "i528 = i528 + 1"->"if i528 < 997 goto $s228 = r0[i528]";
    "if i528 < 997 goto $s228 = r0[i528]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)";
    "if i528 < 997 goto $s228 = r0[i528]"->"$s228 = r0[i528]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"->"i529 = 0";
    "i529 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i529 < 997 goto $s234 = r0[i529]";
    "$s234 = r0[i529]"->"$i230 = 32267 + i529";
    "$i230 = 32267 + i529"->"$s231 = (short) $i230";
    "$s231 = (short) $i230"->"$i232 = $s231 >> -7";
    "$i232 = $s231 >> -7"->"$s233 = (short) $i232";
    "$s233 = (short) $i232"->"$i235 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_n: \", i529, $s234, $s233)";
    "$i235 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_n: \", i529, $s234, $s233)"->"i489 = i489 + $i235";
    "i489 = i489 + $i235"->"i529 = i529 + 1";
    "i529 = i529 + 1"->"if i529 < 997 goto $s234 = r0[i529]";
    "if i529 < 997 goto $s234 = r0[i529]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)";
    "if i529 < 997 goto $s234 = r0[i529]"->"$s234 = r0[i529]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"->"i530 = 0";
    "i530 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i530 < 997 goto $s240 = r0[i530]";
    "$s240 = r0[i530]"->"$i236 = 32267 + i530";
    "$i236 = 32267 + i530"->"$s237 = (short) $i236";
    "$s237 = (short) $i236"->"$i238 = $s237 << 16";
    "$i238 = $s237 << 16"->"$s239 = (short) $i238";
    "$s239 = (short) $i238"->"$i241 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_o: \", i530, $s240, $s239)";
    "$i241 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_o: \", i530, $s240, $s239)"->"i489 = i489 + $i241";
    "i489 = i489 + $i241"->"i530 = i530 + 1";
    "i530 = i530 + 1"->"if i530 < 997 goto $s240 = r0[i530]";
    "if i530 < 997 goto $s240 = r0[i530]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)";
    "if i530 < 997 goto $s240 = r0[i530]"->"$s240 = r0[i530]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"->"i531 = 0";
    "i531 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i531 < 997 goto $s246 = r0[i531]";
    "$s246 = r0[i531]"->"$i242 = 32267 + i531";
    "$i242 = 32267 + i531"->"$s243 = (short) $i242";
    "$s243 = (short) $i242"->"$i244 = $s243 << 16";
    "$i244 = $s243 << 16"->"$s245 = (short) $i244";
    "$s245 = (short) $i244"->"$i247 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_o: \", i531, $s246, $s245)";
    "$i247 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_o: \", i531, $s246, $s245)"->"i489 = i489 + $i247";
    "i489 = i489 + $i247"->"i531 = i531 + 1";
    "i531 = i531 + 1"->"if i531 < 997 goto $s246 = r0[i531]";
    "if i531 < 997 goto $s246 = r0[i531]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)";
    "if i531 < 997 goto $s246 = r0[i531]"->"$s246 = r0[i531]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"->"i532 = 0";
    "i532 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i532 < 997 goto $s252 = r0[i532]";
    "$s252 = r0[i532]"->"$i248 = 32267 + i532";
    "$i248 = 32267 + i532"->"$s249 = (short) $i248";
    "$s249 = (short) $i248"->"$i250 = $s249 >>> 16";
    "$i250 = $s249 >>> 16"->"$s251 = (short) $i250";
    "$s251 = (short) $i250"->"$i253 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_o: \", i532, $s252, $s251)";
    "$i253 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_o: \", i532, $s252, $s251)"->"i489 = i489 + $i253";
    "i489 = i489 + $i253"->"i532 = i532 + 1";
    "i532 = i532 + 1"->"if i532 < 997 goto $s252 = r0[i532]";
    "if i532 < 997 goto $s252 = r0[i532]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)";
    "if i532 < 997 goto $s252 = r0[i532]"->"$s252 = r0[i532]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"->"i533 = 0";
    "i533 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i533 < 997 goto $s258 = r0[i533]";
    "$s258 = r0[i533]"->"$i254 = 32267 + i533";
    "$i254 = 32267 + i533"->"$s255 = (short) $i254";
    "$s255 = (short) $i254"->"$i256 = $s255 >>> 16";
    "$i256 = $s255 >>> 16"->"$s257 = (short) $i256";
    "$s257 = (short) $i256"->"$i259 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_o: \", i533, $s258, $s257)";
    "$i259 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_o: \", i533, $s258, $s257)"->"i489 = i489 + $i259";
    "i489 = i489 + $i259"->"i533 = i533 + 1";
    "i533 = i533 + 1"->"if i533 < 997 goto $s258 = r0[i533]";
    "if i533 < 997 goto $s258 = r0[i533]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)";
    "if i533 < 997 goto $s258 = r0[i533]"->"$s258 = r0[i533]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"->"i534 = 0";
    "i534 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i534 < 997 goto $s264 = r0[i534]";
    "$s264 = r0[i534]"->"$i260 = 32267 + i534";
    "$i260 = 32267 + i534"->"$s261 = (short) $i260";
    "$s261 = (short) $i260"->"$i262 = $s261 >> 16";
    "$i262 = $s261 >> 16"->"$s263 = (short) $i262";
    "$s263 = (short) $i262"->"$i265 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_o: \", i534, $s264, $s263)";
    "$i265 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_o: \", i534, $s264, $s263)"->"i489 = i489 + $i265";
    "i489 = i489 + $i265"->"i534 = i534 + 1";
    "i534 = i534 + 1"->"if i534 < 997 goto $s264 = r0[i534]";
    "if i534 < 997 goto $s264 = r0[i534]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)";
    "if i534 < 997 goto $s264 = r0[i534]"->"$s264 = r0[i534]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"->"i535 = 0";
    "i535 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i535 < 997 goto $s270 = r0[i535]";
    "$s270 = r0[i535]"->"$i266 = 32267 + i535";
    "$i266 = 32267 + i535"->"$s267 = (short) $i266";
    "$s267 = (short) $i266"->"$i268 = $s267 >> 16";
    "$i268 = $s267 >> 16"->"$s269 = (short) $i268";
    "$s269 = (short) $i268"->"$i271 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_o: \", i535, $s270, $s269)";
    "$i271 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_o: \", i535, $s270, $s269)"->"i489 = i489 + $i271";
    "i489 = i489 + $i271"->"i535 = i535 + 1";
    "i535 = i535 + 1"->"if i535 < 997 goto $s270 = r0[i535]";
    "if i535 < 997 goto $s270 = r0[i535]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)";
    "if i535 < 997 goto $s270 = r0[i535]"->"$s270 = r0[i535]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"->"i536 = 0";
    "i536 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i536 < 997 goto $s276 = r0[i536]";
    "$s276 = r0[i536]"->"$i272 = 32267 + i536";
    "$i272 = 32267 + i536"->"$s273 = (short) $i272";
    "$s273 = (short) $i272"->"$i274 = $s273 << -16";
    "$i274 = $s273 << -16"->"$s275 = (short) $i274";
    "$s275 = (short) $i274"->"$i277 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_on: \", i536, $s276, $s275)";
    "$i277 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_on: \", i536, $s276, $s275)"->"i489 = i489 + $i277";
    "i489 = i489 + $i277"->"i536 = i536 + 1";
    "i536 = i536 + 1"->"if i536 < 997 goto $s276 = r0[i536]";
    "if i536 < 997 goto $s276 = r0[i536]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)";
    "if i536 < 997 goto $s276 = r0[i536]"->"$s276 = r0[i536]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"->"i537 = 0";
    "i537 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i537 < 997 goto $s282 = r0[i537]";
    "$s282 = r0[i537]"->"$i278 = 32267 + i537";
    "$i278 = 32267 + i537"->"$s279 = (short) $i278";
    "$s279 = (short) $i278"->"$i280 = $s279 << -16";
    "$i280 = $s279 << -16"->"$s281 = (short) $i280";
    "$s281 = (short) $i280"->"$i283 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_on: \", i537, $s282, $s281)";
    "$i283 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_on: \", i537, $s282, $s281)"->"i489 = i489 + $i283";
    "i489 = i489 + $i283"->"i537 = i537 + 1";
    "i537 = i537 + 1"->"if i537 < 997 goto $s282 = r0[i537]";
    "if i537 < 997 goto $s282 = r0[i537]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)";
    "if i537 < 997 goto $s282 = r0[i537]"->"$s282 = r0[i537]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"->"i538 = 0";
    "i538 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i538 < 997 goto $s288 = r0[i538]";
    "$s288 = r0[i538]"->"$i284 = 32267 + i538";
    "$i284 = 32267 + i538"->"$s285 = (short) $i284";
    "$s285 = (short) $i284"->"$i286 = $s285 >>> -16";
    "$i286 = $s285 >>> -16"->"$s287 = (short) $i286";
    "$s287 = (short) $i286"->"$i289 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_on: \", i538, $s288, $s287)";
    "$i289 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_on: \", i538, $s288, $s287)"->"i489 = i489 + $i289";
    "i489 = i489 + $i289"->"i538 = i538 + 1";
    "i538 = i538 + 1"->"if i538 < 997 goto $s288 = r0[i538]";
    "if i538 < 997 goto $s288 = r0[i538]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)";
    "if i538 < 997 goto $s288 = r0[i538]"->"$s288 = r0[i538]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"->"i539 = 0";
    "i539 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i539 < 997 goto $s294 = r0[i539]";
    "$s294 = r0[i539]"->"$i290 = 32267 + i539";
    "$i290 = 32267 + i539"->"$s291 = (short) $i290";
    "$s291 = (short) $i290"->"$i292 = $s291 >>> -16";
    "$i292 = $s291 >>> -16"->"$s293 = (short) $i292";
    "$s293 = (short) $i292"->"$i295 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_on: \", i539, $s294, $s293)";
    "$i295 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_on: \", i539, $s294, $s293)"->"i489 = i489 + $i295";
    "i489 = i489 + $i295"->"i539 = i539 + 1";
    "i539 = i539 + 1"->"if i539 < 997 goto $s294 = r0[i539]";
    "if i539 < 997 goto $s294 = r0[i539]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)";
    "if i539 < 997 goto $s294 = r0[i539]"->"$s294 = r0[i539]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"->"i540 = 0";
    "i540 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i540 < 997 goto $s300 = r0[i540]";
    "$s300 = r0[i540]"->"$i296 = 32267 + i540";
    "$i296 = 32267 + i540"->"$s297 = (short) $i296";
    "$s297 = (short) $i296"->"$i298 = $s297 >> -16";
    "$i298 = $s297 >> -16"->"$s299 = (short) $i298";
    "$s299 = (short) $i298"->"$i301 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_on: \", i540, $s300, $s299)";
    "$i301 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_on: \", i540, $s300, $s299)"->"i489 = i489 + $i301";
    "i489 = i489 + $i301"->"i540 = i540 + 1";
    "i540 = i540 + 1"->"if i540 < 997 goto $s300 = r0[i540]";
    "if i540 < 997 goto $s300 = r0[i540]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)";
    "if i540 < 997 goto $s300 = r0[i540]"->"$s300 = r0[i540]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"->"i541 = 0";
    "i541 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i541 < 997 goto $s306 = r0[i541]";
    "$s306 = r0[i541]"->"$i302 = 32267 + i541";
    "$i302 = 32267 + i541"->"$s303 = (short) $i302";
    "$s303 = (short) $i302"->"$i304 = $s303 >> -16";
    "$i304 = $s303 >> -16"->"$s305 = (short) $i304";
    "$s305 = (short) $i304"->"$i307 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_on: \", i541, $s306, $s305)";
    "$i307 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_on: \", i541, $s306, $s305)"->"i489 = i489 + $i307";
    "i489 = i489 + $i307"->"i541 = i541 + 1";
    "i541 = i541 + 1"->"if i541 < 997 goto $s306 = r0[i541]";
    "if i541 < 997 goto $s306 = r0[i541]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)";
    "if i541 < 997 goto $s306 = r0[i541]"->"$s306 = r0[i541]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"->"i542 = 0";
    "i542 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i542 < 997 goto $s313 = r0[i542]";
    "$s313 = r0[i542]"->"$i308 = 32267 + i542";
    "$i308 = 32267 + i542"->"$s309 = (short) $i308";
    "$s309 = (short) $i308"->"$i310 = $s309 + 32267";
    "$i310 = $s309 + 32267"->"$i311 = $i310 << 7";
    "$i311 = $i310 << 7"->"$s312 = (short) $i311";
    "$s312 = (short) $i311"->"$i314 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_add: \", i542, $s313, $s312)";
    "$i314 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_add: \", i542, $s313, $s312)"->"i489 = i489 + $i314";
    "i489 = i489 + $i314"->"i542 = i542 + 1";
    "i542 = i542 + 1"->"if i542 < 997 goto $s313 = r0[i542]";
    "if i542 < 997 goto $s313 = r0[i542]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)";
    "if i542 < 997 goto $s313 = r0[i542]"->"$s313 = r0[i542]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"->"i543 = 0";
    "i543 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i543 < 997 goto $s320 = r0[i543]";
    "$s320 = r0[i543]"->"$i315 = 32267 + i543";
    "$i315 = 32267 + i543"->"$s316 = (short) $i315";
    "$s316 = (short) $i315"->"$i317 = $s316 + 32267";
    "$i317 = $s316 + 32267"->"$i318 = $i317 << 7";
    "$i318 = $i317 << 7"->"$s319 = (short) $i318";
    "$s319 = (short) $i318"->"$i321 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_add: \", i543, $s320, $s319)";
    "$i321 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_add: \", i543, $s320, $s319)"->"i489 = i489 + $i321";
    "i489 = i489 + $i321"->"i543 = i543 + 1";
    "i543 = i543 + 1"->"if i543 < 997 goto $s320 = r0[i543]";
    "if i543 < 997 goto $s320 = r0[i543]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)";
    "if i543 < 997 goto $s320 = r0[i543]"->"$s320 = r0[i543]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"->"i544 = 0";
    "i544 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i544 < 997 goto $s327 = r0[i544]";
    "$s327 = r0[i544]"->"$i322 = 32267 + i544";
    "$i322 = 32267 + i544"->"$s323 = (short) $i322";
    "$s323 = (short) $i322"->"$i324 = $s323 + 32267";
    "$i324 = $s323 + 32267"->"$i325 = $i324 >>> 7";
    "$i325 = $i324 >>> 7"->"$s326 = (short) $i325";
    "$s326 = (short) $i325"->"$i328 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_add: \", i544, $s327, $s326)";
    "$i328 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_add: \", i544, $s327, $s326)"->"i489 = i489 + $i328";
    "i489 = i489 + $i328"->"i544 = i544 + 1";
    "i544 = i544 + 1"->"if i544 < 997 goto $s327 = r0[i544]";
    "if i544 < 997 goto $s327 = r0[i544]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)";
    "if i544 < 997 goto $s327 = r0[i544]"->"$s327 = r0[i544]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"->"i545 = 0";
    "i545 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i545 < 997 goto $s334 = r0[i545]";
    "$s334 = r0[i545]"->"$i329 = 32267 + i545";
    "$i329 = 32267 + i545"->"$s330 = (short) $i329";
    "$s330 = (short) $i329"->"$i331 = $s330 + 32267";
    "$i331 = $s330 + 32267"->"$i332 = $i331 >>> 7";
    "$i332 = $i331 >>> 7"->"$s333 = (short) $i332";
    "$s333 = (short) $i332"->"$i335 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_add: \", i545, $s334, $s333)";
    "$i335 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_add: \", i545, $s334, $s333)"->"i489 = i489 + $i335";
    "i489 = i489 + $i335"->"i545 = i545 + 1";
    "i545 = i545 + 1"->"if i545 < 997 goto $s334 = r0[i545]";
    "if i545 < 997 goto $s334 = r0[i545]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)";
    "if i545 < 997 goto $s334 = r0[i545]"->"$s334 = r0[i545]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"->"i546 = 0";
    "i546 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i546 < 997 goto $s341 = r0[i546]";
    "$s341 = r0[i546]"->"$i336 = 32267 + i546";
    "$i336 = 32267 + i546"->"$s337 = (short) $i336";
    "$s337 = (short) $i336"->"$i338 = $s337 + 32267";
    "$i338 = $s337 + 32267"->"$i339 = $i338 >> 7";
    "$i339 = $i338 >> 7"->"$s340 = (short) $i339";
    "$s340 = (short) $i339"->"$i342 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_add: \", i546, $s341, $s340)";
    "$i342 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_add: \", i546, $s341, $s340)"->"i489 = i489 + $i342";
    "i489 = i489 + $i342"->"i546 = i546 + 1";
    "i546 = i546 + 1"->"if i546 < 997 goto $s341 = r0[i546]";
    "if i546 < 997 goto $s341 = r0[i546]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)";
    "if i546 < 997 goto $s341 = r0[i546]"->"$s341 = r0[i546]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"->"i547 = 0";
    "i547 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i547 < 997 goto $s348 = r0[i547]";
    "$s348 = r0[i547]"->"$i343 = 32267 + i547";
    "$i343 = 32267 + i547"->"$s344 = (short) $i343";
    "$s344 = (short) $i343"->"$i345 = $s344 + 32267";
    "$i345 = $s344 + 32267"->"$i346 = $i345 >> 7";
    "$i346 = $i345 >> 7"->"$s347 = (short) $i346";
    "$s347 = (short) $i346"->"$i349 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_add: \", i547, $s348, $s347)";
    "$i349 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_add: \", i547, $s348, $s347)"->"i489 = i489 + $i349";
    "i489 = i489 + $i349"->"i547 = i547 + 1";
    "i547 = i547 + 1"->"if i547 < 997 goto $s348 = r0[i547]";
    "if i547 < 997 goto $s348 = r0[i547]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)";
    "if i547 < 997 goto $s348 = r0[i547]"->"$s348 = r0[i547]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"->"i548 = 0";
    "i548 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i548 < 997 goto $s355 = r0[i548]";
    "$s355 = r0[i548]"->"$i350 = 32267 + i548";
    "$i350 = 32267 + i548"->"$s351 = (short) $i350";
    "$s351 = (short) $i350"->"$i352 = $s351 & 46897";
    "$i352 = $s351 & 46897"->"$i353 = $i352 << 7";
    "$i353 = $i352 << 7"->"$s354 = (short) $i353";
    "$s354 = (short) $i353"->"$i356 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_and: \", i548, $s355, $s354)";
    "$i356 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllc_and: \", i548, $s355, $s354)"->"i489 = i489 + $i356";
    "i489 = i489 + $i356"->"i548 = i548 + 1";
    "i548 = i548 + 1"->"if i548 < 997 goto $s355 = r0[i548]";
    "if i548 < 997 goto $s355 = r0[i548]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)";
    "if i548 < 997 goto $s355 = r0[i548]"->"$s355 = r0[i548]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"->"i549 = 0";
    "i549 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i549 < 997 goto $s362 = r0[i549]";
    "$s362 = r0[i549]"->"$i357 = 32267 + i549";
    "$i357 = 32267 + i549"->"$s358 = (short) $i357";
    "$s358 = (short) $i357"->"$i359 = $s358 & 46897";
    "$i359 = $s358 & 46897"->"$i360 = $i359 << 7";
    "$i360 = $i359 << 7"->"$s361 = (short) $i360";
    "$s361 = (short) $i360"->"$i363 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_and: \", i549, $s362, $s361)";
    "$i363 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_sllv_and: \", i549, $s362, $s361)"->"i489 = i489 + $i363";
    "i489 = i489 + $i363"->"i549 = i549 + 1";
    "i549 = i549 + 1"->"if i549 < 997 goto $s362 = r0[i549]";
    "if i549 < 997 goto $s362 = r0[i549]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)";
    "if i549 < 997 goto $s362 = r0[i549]"->"$s362 = r0[i549]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"->"i550 = 0";
    "i550 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i550 < 997 goto $s369 = r0[i550]";
    "$s369 = r0[i550]"->"$i364 = 32267 + i550";
    "$i364 = 32267 + i550"->"$s365 = (short) $i364";
    "$s365 = (short) $i364"->"$i366 = $s365 & 46897";
    "$i366 = $s365 & 46897"->"$i367 = $i366 >>> 7";
    "$i367 = $i366 >>> 7"->"$s368 = (short) $i367";
    "$s368 = (short) $i367"->"$i370 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_and: \", i550, $s369, $s368)";
    "$i370 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlc_and: \", i550, $s369, $s368)"->"i489 = i489 + $i370";
    "i489 = i489 + $i370"->"i550 = i550 + 1";
    "i550 = i550 + 1"->"if i550 < 997 goto $s369 = r0[i550]";
    "if i550 < 997 goto $s369 = r0[i550]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)";
    "if i550 < 997 goto $s369 = r0[i550]"->"$s369 = r0[i550]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"->"i551 = 0";
    "i551 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i551 < 997 goto $s376 = r0[i551]";
    "$s376 = r0[i551]"->"$i371 = 32267 + i551";
    "$i371 = 32267 + i551"->"$s372 = (short) $i371";
    "$s372 = (short) $i371"->"$i373 = $s372 & 46897";
    "$i373 = $s372 & 46897"->"$i374 = $i373 >>> 7";
    "$i374 = $i373 >>> 7"->"$s375 = (short) $i374";
    "$s375 = (short) $i374"->"$i377 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_and: \", i551, $s376, $s375)";
    "$i377 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srlv_and: \", i551, $s376, $s375)"->"i489 = i489 + $i377";
    "i489 = i489 + $i377"->"i551 = i551 + 1";
    "i551 = i551 + 1"->"if i551 < 997 goto $s376 = r0[i551]";
    "if i551 < 997 goto $s376 = r0[i551]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)";
    "if i551 < 997 goto $s376 = r0[i551]"->"$s376 = r0[i551]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"->"i552 = 0";
    "i552 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i552 < 997 goto $s383 = r0[i552]";
    "$s383 = r0[i552]"->"$i378 = 32267 + i552";
    "$i378 = 32267 + i552"->"$s379 = (short) $i378";
    "$s379 = (short) $i378"->"$i380 = $s379 & 46897";
    "$i380 = $s379 & 46897"->"$i381 = $i380 >> 7";
    "$i381 = $i380 >> 7"->"$s382 = (short) $i381";
    "$s382 = (short) $i381"->"$i384 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_and: \", i552, $s383, $s382)";
    "$i384 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srac_and: \", i552, $s383, $s382)"->"i489 = i489 + $i384";
    "i489 = i489 + $i384"->"i552 = i552 + 1";
    "i552 = i552 + 1"->"if i552 < 997 goto $s383 = r0[i552]";
    "if i552 < 997 goto $s383 = r0[i552]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)";
    "if i552 < 997 goto $s383 = r0[i552]"->"$s383 = r0[i552]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"->"i553 = 0";
    "i553 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i553 < 997 goto $s390 = r0[i553]";
    "$s390 = r0[i553]"->"$i385 = 32267 + i553";
    "$i385 = 32267 + i553"->"$s386 = (short) $i385";
    "$s386 = (short) $i385"->"$i387 = $s386 & 46897";
    "$i387 = $s386 & 46897"->"$i388 = $i387 >> 7";
    "$i388 = $i387 >> 7"->"$s389 = (short) $i388";
    "$s389 = (short) $i388"->"$i391 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_and: \", i553, $s390, $s389)";
    "$i391 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_srav_and: \", i553, $s390, $s389)"->"i489 = i489 + $i391";
    "i489 = i489 + $i391"->"i553 = i553 + 1";
    "i553 = i553 + 1"->"if i553 < 997 goto $s390 = r0[i553]";
    "if i553 < 997 goto $s390 = r0[i553]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)";
    "if i553 < 997 goto $s390 = r0[i553]"->"$s390 = r0[i553]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"->"i554 = 0";
    "i554 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i554 < 498 goto $i400 = r5[i554]";
    "$i400 = r5[i554]"->"$i392 = 2 * i554";
    "$i392 = 2 * i554"->"$i393 = 32267 + $i392";
    "$i393 = 32267 + $i392"->"$i398 = $i393 & 65535";
    "$i398 = $i393 & 65535"->"$i394 = 2 * i554";
    "$i394 = 2 * i554"->"$i395 = 32267 + $i394";
    "$i395 = 32267 + $i394"->"$i396 = $i395 + 1";
    "$i396 = $i395 + 1"->"$i397 = $i396 << 16";
    "$i397 = $i396 << 16"->"$i399 = $i398 | $i397";
    "$i399 = $i398 | $i397"->"$i401 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2: \", i554, $i400, $i399)";
    "$i401 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2: \", i554, $i400, $i399)"->"i489 = i489 + $i401";
    "i489 = i489 + $i401"->"i554 = i554 + 1";
    "i554 = i554 + 1"->"if i554 < 498 goto $i400 = r5[i554]";
    "if i554 < 498 goto $i400 = r5[i554]"->"i555 = 0";
    "if i554 < 498 goto $i400 = r5[i554]"->"$i400 = r5[i554]";
    "i555 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i555 < 997 goto r0[i555] = -1";
    "r0[i555] = -1"->"i555 = i555 + 1";
    "i555 = i555 + 1"->"if i555 < 997 goto r0[i555] = -1";
    "if i555 < 997 goto r0[i555] = -1"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)";
    "if i555 < 997 goto r0[i555] = -1"->"r0[i555] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"->"i556 = 0";
    "i556 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i556 < 996 goto $s404 = r0[i556]";
    "$s404 = r0[i556]"->"$i402 = 32267 + i556";
    "$i402 = 32267 + i556"->"$s403 = (short) $i402";
    "$s403 = (short) $i402"->"$i405 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2: \", i556, $s404, $s403)";
    "$i405 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2: \", i556, $s404, $s403)"->"i489 = i489 + $i405";
    "i489 = i489 + $i405"->"i556 = i556 + 1";
    "i556 = i556 + 1"->"if i556 < 996 goto $s404 = r0[i556]";
    "if i556 < 996 goto $s404 = r0[i556]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)";
    "if i556 < 996 goto $s404 = r0[i556]"->"$s404 = r0[i556]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"->"i557 = 0";
    "i557 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i557 < 498 goto $i414 = r5[i557]";
    "$i414 = r5[i557]"->"$i406 = 2 * i557";
    "$i406 = 2 * i557"->"$i407 = 32267 + $i406";
    "$i407 = 32267 + $i406"->"$i408 = $i407 + 1";
    "$i408 = $i407 + 1"->"$i412 = $i408 & 65535";
    "$i412 = $i408 & 65535"->"$i409 = 2 * i557";
    "$i409 = 2 * i557"->"$i410 = 32267 + $i409";
    "$i410 = 32267 + $i409"->"$i411 = $i410 << 16";
    "$i411 = $i410 << 16"->"$i413 = $i412 | $i411";
    "$i413 = $i412 | $i411"->"$i415 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2_swap: \", i557, $i414, $i413)";
    "$i415 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,int,int)>(\"test_pack2_swap: \", i557, $i414, $i413)"->"i489 = i489 + $i415";
    "i489 = i489 + $i415"->"i557 = i557 + 1";
    "i557 = i557 + 1"->"if i557 < 498 goto $i414 = r5[i557]";
    "if i557 < 498 goto $i414 = r5[i557]"->"i558 = 0";
    "if i557 < 498 goto $i414 = r5[i557]"->"$i414 = r5[i557]";
    "i558 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i558 < 997 goto r0[i558] = -1";
    "r0[i558] = -1"->"i558 = i558 + 1";
    "i558 = i558 + 1"->"if i558 < 997 goto r0[i558] = -1";
    "if i558 < 997 goto r0[i558] = -1"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)";
    "if i558 < 997 goto r0[i558] = -1"->"r0[i558] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"->"i559 = 0";
    "i559 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i559 < 996 goto $s418 = r0[i559]";
    "$s418 = r0[i559]"->"$i416 = 32267 + i559";
    "$i416 = 32267 + i559"->"$s417 = (short) $i416";
    "$s417 = (short) $i416"->"$i419 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2_swap: \", i559, $s418, $s417)";
    "$i419 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack2_swap: \", i559, $s418, $s417)"->"i489 = i489 + $i419";
    "i489 = i489 + $i419"->"i559 = i559 + 1";
    "i559 = i559 + 1"->"if i559 < 996 goto $s418 = r0[i559]";
    "if i559 < 996 goto $s418 = r0[i559]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)";
    "if i559 < 996 goto $s418 = r0[i559]"->"$s418 = r0[i559]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"->"i560 = 0";
    "i560 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i560 < 249 goto $l446 = r6[i560]";
    "$l446 = r6[i560]"->"$i420 = 4 * i560";
    "$i420 = 4 * i560"->"$i421 = 32267 + $i420";
    "$i421 = 32267 + $i420"->"$i422 = $i421 + 0";
    "$i422 = $i421 + 0"->"$l423 = (long) $i422";
    "$l423 = (long) $i422"->"$l430 = $l423 & 65535L";
    "$l430 = $l423 & 65535L"->"$i424 = 4 * i560";
    "$i424 = 4 * i560"->"$i425 = 32267 + $i424";
    "$i425 = 32267 + $i424"->"$i426 = $i425 + 1";
    "$i426 = $i425 + 1"->"$l427 = (long) $i426";
    "$l427 = (long) $i426"->"$l428 = $l427 & 65535L";
    "$l428 = $l427 & 65535L"->"$l429 = $l428 << 16";
    "$l429 = $l428 << 16"->"$l437 = $l430 | $l429";
    "$l437 = $l430 | $l429"->"$i431 = 4 * i560";
    "$i431 = 4 * i560"->"$i432 = 32267 + $i431";
    "$i432 = 32267 + $i431"->"$i433 = $i432 + 2";
    "$i433 = $i432 + 2"->"$l434 = (long) $i433";
    "$l434 = (long) $i433"->"$l435 = $l434 & 65535L";
    "$l435 = $l434 & 65535L"->"$l436 = $l435 << 32";
    "$l436 = $l435 << 32"->"$l444 = $l437 | $l436";
    "$l444 = $l437 | $l436"->"$i438 = 4 * i560";
    "$i438 = 4 * i560"->"$i439 = 32267 + $i438";
    "$i439 = 32267 + $i438"->"$i440 = $i439 + 3";
    "$i440 = $i439 + 3"->"$l441 = (long) $i440";
    "$l441 = (long) $i440"->"$l442 = $l441 & 65535L";
    "$l442 = $l441 & 65535L"->"$l443 = $l442 << 48";
    "$l443 = $l442 << 48"->"$l445 = $l444 | $l443";
    "$l445 = $l444 | $l443"->"$i447 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4: \", i560, $l446, $l445)";
    "$i447 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4: \", i560, $l446, $l445)"->"i489 = i489 + $i447";
    "i489 = i489 + $i447"->"i560 = i560 + 1";
    "i560 = i560 + 1"->"if i560 < 249 goto $l446 = r6[i560]";
    "if i560 < 249 goto $l446 = r6[i560]"->"i561 = 0";
    "if i560 < 249 goto $l446 = r6[i560]"->"$l446 = r6[i560]";
    "i561 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i561 < 997 goto r0[i561] = -1";
    "r0[i561] = -1"->"i561 = i561 + 1";
    "i561 = i561 + 1"->"if i561 < 997 goto r0[i561] = -1";
    "if i561 < 997 goto r0[i561] = -1"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)";
    "if i561 < 997 goto r0[i561] = -1"->"r0[i561] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"->"i562 = 0";
    "i562 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i562 < 996 goto $s450 = r0[i562]";
    "$s450 = r0[i562]"->"$i448 = 32267 + i562";
    "$i448 = 32267 + i562"->"$s449 = (short) $i448";
    "$s449 = (short) $i448"->"$i451 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4: \", i562, $s450, $s449)";
    "$i451 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4: \", i562, $s450, $s449)"->"i489 = i489 + $i451";
    "i489 = i489 + $i451"->"i562 = i562 + 1";
    "i562 = i562 + 1"->"if i562 < 996 goto $s450 = r0[i562]";
    "if i562 < 996 goto $s450 = r0[i562]"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)";
    "if i562 < 996 goto $s450 = r0[i562]"->"$s450 = r0[i562]";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"->"i563 = 0";
    "i563 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i563 < 249 goto $l478 = r6[i563]";
    "$l478 = r6[i563]"->"$i452 = 4 * i563";
    "$i452 = 4 * i563"->"$i453 = 32267 + $i452";
    "$i453 = 32267 + $i452"->"$i454 = $i453 + 3";
    "$i454 = $i453 + 3"->"$l455 = (long) $i454";
    "$l455 = (long) $i454"->"$l462 = $l455 & 65535L";
    "$l462 = $l455 & 65535L"->"$i456 = 4 * i563";
    "$i456 = 4 * i563"->"$i457 = 32267 + $i456";
    "$i457 = 32267 + $i456"->"$i458 = $i457 + 2";
    "$i458 = $i457 + 2"->"$l459 = (long) $i458";
    "$l459 = (long) $i458"->"$l460 = $l459 & 65535L";
    "$l460 = $l459 & 65535L"->"$l461 = $l460 << 16";
    "$l461 = $l460 << 16"->"$l469 = $l462 | $l461";
    "$l469 = $l462 | $l461"->"$i463 = 4 * i563";
    "$i463 = 4 * i563"->"$i464 = 32267 + $i463";
    "$i464 = 32267 + $i463"->"$i465 = $i464 + 1";
    "$i465 = $i464 + 1"->"$l466 = (long) $i465";
    "$l466 = (long) $i465"->"$l467 = $l466 & 65535L";
    "$l467 = $l466 & 65535L"->"$l468 = $l467 << 32";
    "$l468 = $l467 << 32"->"$l476 = $l469 | $l468";
    "$l476 = $l469 | $l468"->"$i470 = 4 * i563";
    "$i470 = 4 * i563"->"$i471 = 32267 + $i470";
    "$i471 = 32267 + $i470"->"$i472 = $i471 + 0";
    "$i472 = $i471 + 0"->"$l473 = (long) $i472";
    "$l473 = (long) $i472"->"$l474 = $l473 & 65535L";
    "$l474 = $l473 & 65535L"->"$l475 = $l474 << 48";
    "$l475 = $l474 << 48"->"$l477 = $l476 | $l475";
    "$l477 = $l476 | $l475"->"$i479 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4_swap: \", i563, $l478, $l477)";
    "$i479 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,long,long)>(\"test_pack4_swap: \", i563, $l478, $l477)"->"i489 = i489 + $i479";
    "i489 = i489 + $i479"->"i563 = i563 + 1";
    "i563 = i563 + 1"->"if i563 < 249 goto $l478 = r6[i563]";
    "if i563 < 249 goto $l478 = r6[i563]"->"i564 = 0";
    "if i563 < 249 goto $l478 = r6[i563]"->"$l478 = r6[i563]";
    "i564 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i564 < 997 goto r0[i564] = -1";
    "r0[i564] = -1"->"i564 = i564 + 1";
    "i564 = i564 + 1"->"if i564 < 997 goto r0[i564] = -1";
    "if i564 < 997 goto r0[i564] = -1"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)";
    "if i564 < 997 goto r0[i564] = -1"->"r0[i564] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"->"i565 = 0";
    "i565 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i565 < 996 goto $s482 = r0[i565]";
    "$s482 = r0[i565]"->"$i480 = 32267 + i565";
    "$i480 = 32267 + i565"->"$s481 = (short) $i480";
    "$s481 = (short) $i480"->"$i483 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4_swap: \", i565, $s482, $s481)";
    "$i483 = staticinvoke <compiler.c2.cr6340864.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unpack4_swap: \", i565, $s482, $s481)"->"i489 = i489 + $i483";
    "i489 = i489 + $i483"->"i565 = i565 + 1";
    "i565 = i565 + 1"->"if i565 < 996 goto $s482 = r0[i565]";
    "if i565 < 996 goto $s482 = r0[i565]"->"if i489 <= 0 goto $r9 = <java.lang.System: java.io.PrintStream out>";
    "if i565 < 996 goto $s482 = r0[i565]"->"$s482 = r0[i565]";
    "if i489 <= 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"->"return i489";
    "if i489 <= 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i566 = 0";
    "i566 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i566 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"i566 = i566 + 1";
    "i566 = i566 + 1"->"if i566 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "if i566 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"i567 = 0";
    "if i566 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: int test_sum(short[])>(r1)";
    "i567 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i567 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"i567 = i567 + 1";
    "i567 = i567 + 1"->"if i567 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "if i567 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"i568 = 0";
    "if i567 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addc(short[],short[])>(r0, r1)";
    "i568 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i568 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"->"i568 = i568 + 1";
    "i568 = i568 + 1"->"if i568 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)";
    "if i568 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"->"i569 = 0";
    "if i568 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_addv(short[],short[],short)>(r0, r1, 7)";
    "i569 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i569 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"->"i569 = i569 + 1";
    "i569 = i569 + 1"->"if i569 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)";
    "if i569 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"->"i570 = 0";
    "if i569 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_adda(short[],short[],short[])>(r0, r1, r2)";
    "i570 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i570 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"->"i570 = i570 + 1";
    "i570 = i570 + 1"->"if i570 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)";
    "if i570 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"->"i571 = 0";
    "if i570 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subc(short[],short[])>(r0, r1)";
    "i571 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i571 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"->"i571 = i571 + 1";
    "i571 = i571 + 1"->"if i571 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)";
    "if i571 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"->"i572 = 0";
    "if i571 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_subv(short[],short[],short)>(r0, r1, 7)";
    "i572 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i572 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"->"i572 = i572 + 1";
    "i572 = i572 + 1"->"if i572 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)";
    "if i572 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"->"i573 = 0";
    "if i572 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_suba(short[],short[],short[])>(r0, r1, r2)";
    "i573 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i573 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"->"i573 = i573 + 1";
    "i573 = i573 + 1"->"if i573 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)";
    "if i573 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"->"i574 = 0";
    "if i573 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc(short[],short[])>(r0, r1)";
    "i574 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i574 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"->"i574 = i574 + 1";
    "i574 = i574 + 1"->"if i574 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)";
    "if i574 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"->"i575 = 0";
    "if i574 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, 7)";
    "i575 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i575 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"->"i575 = i575 + 1";
    "i575 = i575 + 1"->"if i575 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)";
    "if i575 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"->"i576 = 0";
    "if i575 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r2)";
    "i576 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i576 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"->"i576 = i576 + 1";
    "i576 = i576 + 1"->"if i576 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)";
    "if i576 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"->"i577 = 0";
    "if i576 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc(short[],short[])>(r0, r1)";
    "i577 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i577 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"->"i577 = i577 + 1";
    "i577 = i577 + 1"->"if i577 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)";
    "if i577 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"->"i578 = 0";
    "if i577 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, 7)";
    "i578 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i578 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"->"i578 = i578 + 1";
    "i578 = i578 + 1"->"if i578 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)";
    "if i578 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"->"i579 = 0";
    "if i578 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r2)";
    "i579 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i579 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"->"i579 = i579 + 1";
    "i579 = i579 + 1"->"if i579 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)";
    "if i579 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"->"i580 = 0";
    "if i579 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulc_n(short[],short[])>(r0, r1)";
    "i580 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i580 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"->"i580 = i580 + 1";
    "i580 = i580 + 1"->"if i580 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)";
    "if i580 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"->"i581 = 0";
    "if i580 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mulv(short[],short[],short)>(r0, r1, -7)";
    "i581 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i581 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"->"i581 = i581 + 1";
    "i581 = i581 + 1"->"if i581 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)";
    "if i581 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"->"i582 = 0";
    "if i581 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_mula(short[],short[],short[])>(r0, r1, r3)";
    "i582 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i582 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"->"i582 = i582 + 1";
    "i582 = i582 + 1"->"if i582 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)";
    "if i582 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"->"i583 = 0";
    "if i582 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divc_n(short[],short[])>(r0, r1)";
    "i583 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i583 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"->"i583 = i583 + 1";
    "i583 = i583 + 1"->"if i583 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)";
    "if i583 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"->"i584 = 0";
    "if i583 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_divv(short[],short[],short)>(r0, r1, -7)";
    "i584 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i584 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"->"i584 = i584 + 1";
    "i584 = i584 + 1"->"if i584 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)";
    "if i584 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"->"i585 = 0";
    "if i584 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_diva(short[],short[],short[])>(r0, r1, r3)";
    "i585 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i585 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"->"i585 = i585 + 1";
    "i585 = i585 + 1"->"if i585 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)";
    "if i585 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"->"i586 = 0";
    "if i585 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andc(short[],short[])>(r0, r1)";
    "i586 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i586 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"->"i586 = i586 + 1";
    "i586 = i586 + 1"->"if i586 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)";
    "if i586 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"->"i587 = 0";
    "if i586 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_andv(short[],short[],short)>(r0, r1, -18639)";
    "i587 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i587 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"->"i587 = i587 + 1";
    "i587 = i587 + 1"->"if i587 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)";
    "if i587 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"->"i588 = 0";
    "if i587 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_anda(short[],short[],short[])>(r0, r1, r4)";
    "i588 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i588 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"->"i588 = i588 + 1";
    "i588 = i588 + 1"->"if i588 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)";
    "if i588 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"->"i589 = 0";
    "if i588 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orc(short[],short[])>(r0, r1)";
    "i589 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i589 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"->"i589 = i589 + 1";
    "i589 = i589 + 1"->"if i589 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)";
    "if i589 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"->"i590 = 0";
    "if i589 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_orv(short[],short[],short)>(r0, r1, -18639)";
    "i590 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i590 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"->"i590 = i590 + 1";
    "i590 = i590 + 1"->"if i590 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)";
    "if i590 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"->"i591 = 0";
    "if i590 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_ora(short[],short[],short[])>(r0, r1, r4)";
    "i591 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i591 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"->"i591 = i591 + 1";
    "i591 = i591 + 1"->"if i591 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)";
    "if i591 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"->"i592 = 0";
    "if i591 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorc(short[],short[])>(r0, r1)";
    "i592 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i592 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"->"i592 = i592 + 1";
    "i592 = i592 + 1"->"if i592 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)";
    "if i592 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"->"i593 = 0";
    "if i592 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xorv(short[],short[],short)>(r0, r1, -18639)";
    "i593 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i593 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"->"i593 = i593 + 1";
    "i593 = i593 + 1"->"if i593 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)";
    "if i593 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"->"i594 = 0";
    "if i593 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_xora(short[],short[],short[])>(r0, r1, r4)";
    "i594 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i594 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"->"i594 = i594 + 1";
    "i594 = i594 + 1"->"if i594 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)";
    "if i594 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"->"i595 = 0";
    "if i594 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc(short[],short[])>(r0, r1)";
    "i595 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i595 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"->"i595 = i595 + 1";
    "i595 = i595 + 1"->"if i595 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)";
    "if i595 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"->"i596 = 0";
    "if i595 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 7)";
    "i596 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i596 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"->"i596 = i596 + 1";
    "i596 = i596 + 1"->"if i596 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)";
    "if i596 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"->"i597 = 0";
    "if i596 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc(short[],short[])>(r0, r1)";
    "i597 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i597 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"->"i597 = i597 + 1";
    "i597 = i597 + 1"->"if i597 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)";
    "if i597 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"->"i598 = 0";
    "if i597 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 7)";
    "i598 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i598 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"->"i598 = i598 + 1";
    "i598 = i598 + 1"->"if i598 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)";
    "if i598 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"->"i599 = 0";
    "if i598 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac(short[],short[])>(r0, r1)";
    "i599 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i599 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"->"i599 = i599 + 1";
    "i599 = i599 + 1"->"if i599 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)";
    "if i599 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"->"i600 = 0";
    "if i599 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 7)";
    "i600 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i600 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"->"i600 = i600 + 1";
    "i600 = i600 + 1"->"if i600 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)";
    "if i600 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"->"i601 = 0";
    "if i600 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_n(short[],short[])>(r0, r1)";
    "i601 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i601 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"->"i601 = i601 + 1";
    "i601 = i601 + 1"->"if i601 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)";
    "if i601 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"->"i602 = 0";
    "if i601 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -7)";
    "i602 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i602 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"->"i602 = i602 + 1";
    "i602 = i602 + 1"->"if i602 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)";
    "if i602 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"->"i603 = 0";
    "if i602 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_n(short[],short[])>(r0, r1)";
    "i603 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i603 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"->"i603 = i603 + 1";
    "i603 = i603 + 1"->"if i603 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)";
    "if i603 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"->"i604 = 0";
    "if i603 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -7)";
    "i604 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i604 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"->"i604 = i604 + 1";
    "i604 = i604 + 1"->"if i604 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)";
    "if i604 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"->"i605 = 0";
    "if i604 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_n(short[],short[])>(r0, r1)";
    "i605 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i605 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"->"i605 = i605 + 1";
    "i605 = i605 + 1"->"if i605 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)";
    "if i605 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"->"i606 = 0";
    "if i605 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -7)";
    "i606 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i606 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"->"i606 = i606 + 1";
    "i606 = i606 + 1"->"if i606 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)";
    "if i606 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"->"i607 = 0";
    "if i606 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_o(short[],short[])>(r0, r1)";
    "i607 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i607 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"->"i607 = i607 + 1";
    "i607 = i607 + 1"->"if i607 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)";
    "if i607 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"->"i608 = 0";
    "if i607 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, 16)";
    "i608 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i608 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"->"i608 = i608 + 1";
    "i608 = i608 + 1"->"if i608 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)";
    "if i608 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"->"i609 = 0";
    "if i608 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_o(short[],short[])>(r0, r1)";
    "i609 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i609 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"->"i609 = i609 + 1";
    "i609 = i609 + 1"->"if i609 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)";
    "if i609 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"->"i610 = 0";
    "if i609 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, 16)";
    "i610 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i610 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"->"i610 = i610 + 1";
    "i610 = i610 + 1"->"if i610 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)";
    "if i610 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"->"i611 = 0";
    "if i610 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_o(short[],short[])>(r0, r1)";
    "i611 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i611 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"->"i611 = i611 + 1";
    "i611 = i611 + 1"->"if i611 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)";
    "if i611 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"->"i612 = 0";
    "if i611 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, 16)";
    "i612 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i612 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"->"i612 = i612 + 1";
    "i612 = i612 + 1"->"if i612 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)";
    "if i612 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"->"i613 = 0";
    "if i612 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_on(short[],short[])>(r0, r1)";
    "i613 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i613 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"->"i613 = i613 + 1";
    "i613 = i613 + 1"->"if i613 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)";
    "if i613 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"->"i614 = 0";
    "if i613 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv(short[],short[],int)>(r0, r1, -16)";
    "i614 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i614 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"->"i614 = i614 + 1";
    "i614 = i614 + 1"->"if i614 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)";
    "if i614 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"->"i615 = 0";
    "if i614 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_on(short[],short[])>(r0, r1)";
    "i615 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i615 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"->"i615 = i615 + 1";
    "i615 = i615 + 1"->"if i615 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)";
    "if i615 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"->"i616 = 0";
    "if i615 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv(short[],short[],int)>(r0, r1, -16)";
    "i616 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i616 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"->"i616 = i616 + 1";
    "i616 = i616 + 1"->"if i616 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)";
    "if i616 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"->"i617 = 0";
    "if i616 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_on(short[],short[])>(r0, r1)";
    "i617 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i617 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"->"i617 = i617 + 1";
    "i617 = i617 + 1"->"if i617 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)";
    "if i617 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"->"i618 = 0";
    "if i617 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav(short[],short[],int)>(r0, r1, -16)";
    "i618 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i618 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"->"i618 = i618 + 1";
    "i618 = i618 + 1"->"if i618 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)";
    "if i618 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"->"i619 = 0";
    "if i618 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_add(short[],short[])>(r0, r1)";
    "i619 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i619 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"->"i619 = i619 + 1";
    "i619 = i619 + 1"->"if i619 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)";
    "if i619 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"->"i620 = 0";
    "if i619 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_add(short[],short[],int)>(r0, r1, 32267)";
    "i620 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i620 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"->"i620 = i620 + 1";
    "i620 = i620 + 1"->"if i620 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)";
    "if i620 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"->"i621 = 0";
    "if i620 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_add(short[],short[])>(r0, r1)";
    "i621 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i621 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"->"i621 = i621 + 1";
    "i621 = i621 + 1"->"if i621 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)";
    "if i621 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"->"i622 = 0";
    "if i621 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_add(short[],short[],int)>(r0, r1, 32267)";
    "i622 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i622 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"->"i622 = i622 + 1";
    "i622 = i622 + 1"->"if i622 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)";
    "if i622 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"->"i623 = 0";
    "if i622 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_add(short[],short[])>(r0, r1)";
    "i623 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i623 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"->"i623 = i623 + 1";
    "i623 = i623 + 1"->"if i623 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)";
    "if i623 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"->"i624 = 0";
    "if i623 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_add(short[],short[],int)>(r0, r1, 32267)";
    "i624 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i624 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"->"i624 = i624 + 1";
    "i624 = i624 + 1"->"if i624 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)";
    "if i624 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"->"i625 = 0";
    "if i624 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllc_and(short[],short[])>(r0, r1)";
    "i625 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i625 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"->"i625 = i625 + 1";
    "i625 = i625 + 1"->"if i625 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)";
    "if i625 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"->"i626 = 0";
    "if i625 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_sllv_and(short[],short[],int)>(r0, r1, 46897)";
    "i626 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i626 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"->"i626 = i626 + 1";
    "i626 = i626 + 1"->"if i626 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)";
    "if i626 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"->"i627 = 0";
    "if i626 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlc_and(short[],short[])>(r0, r1)";
    "i627 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i627 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"->"i627 = i627 + 1";
    "i627 = i627 + 1"->"if i627 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)";
    "if i627 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"->"i628 = 0";
    "if i627 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srlv_and(short[],short[],int)>(r0, r1, 46897)";
    "i628 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i628 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"->"i628 = i628 + 1";
    "i628 = i628 + 1"->"if i628 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)";
    "if i628 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"->"i629 = 0";
    "if i628 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srac_and(short[],short[])>(r0, r1)";
    "i629 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i629 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"->"i629 = i629 + 1";
    "i629 = i629 + 1"->"if i629 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)";
    "if i629 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"->"i630 = 0";
    "if i629 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_srav_and(short[],short[],int)>(r0, r1, 46897)";
    "i630 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i630 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"->"i630 = i630 + 1";
    "i630 = i630 + 1"->"if i630 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)";
    "if i630 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"->"i631 = 0";
    "if i630 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2(int[],short[])>(r5, r1)";
    "i631 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i631 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"->"i631 = i631 + 1";
    "i631 = i631 + 1"->"if i631 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)";
    "if i631 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"->"i632 = 0";
    "if i631 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2(short[],int[])>(r0, r5)";
    "i632 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i632 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"->"i632 = i632 + 1";
    "i632 = i632 + 1"->"if i632 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)";
    "if i632 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"->"i633 = 0";
    "if i632 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack2_swap(int[],short[])>(r5, r1)";
    "i633 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i633 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"->"i633 = i633 + 1";
    "i633 = i633 + 1"->"if i633 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)";
    "if i633 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"->"i634 = 0";
    "if i633 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack2_swap(short[],int[])>(r0, r5)";
    "i634 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i634 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"->"i634 = i634 + 1";
    "i634 = i634 + 1"->"if i634 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)";
    "if i634 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"->"i635 = 0";
    "if i634 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4(long[],short[])>(r6, r1)";
    "i635 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i635 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"->"i635 = i635 + 1";
    "i635 = i635 + 1"->"if i635 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)";
    "if i635 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"->"i636 = 0";
    "if i635 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4(short[],long[])>(r0, r6)";
    "i636 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i636 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"->"i636 = i636 + 1";
    "i636 = i636 + 1"->"if i636 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)";
    "if i636 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"->"i637 = 0";
    "if i636 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_pack4_swap(long[],short[])>(r6, r1)";
    "i637 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i637 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)";
    "staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"->"i637 = i637 + 1";
    "i637 = i637 + 1"->"if i637 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)";
    "if i637 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"->"return i489";
    "if i637 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)"->"staticinvoke <compiler.c2.cr6340864.TestShortVect: void test_unpack4_swap(short[],long[])>(r0, r6)";
}
