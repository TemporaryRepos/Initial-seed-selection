digraph "unitGraph" {
    "r0 := @this: jit.FloatingPoint.gen_math.Summ.Summ"
    "i0 := @parameter0: int"
    "d0 := @parameter1: double"
    "d1 = 0.5"
    "d2 = 0.0"
    "i1 = 1"
    "goto [?= (branch)]"
    "d2 = d2 + d1"
    "d1 = d1 * d0"
    "i1 = i1 + 1"
    "if i1 <= i0 goto d2 = d2 + d1"
    "return d2"
    "r0 := @this: jit.FloatingPoint.gen_math.Summ.Summ"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"d0 := @parameter1: double";
    "d0 := @parameter1: double"->"d1 = 0.5";
    "d1 = 0.5"->"d2 = 0.0";
    "d2 = 0.0"->"i1 = 1";
    "i1 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 <= i0 goto d2 = d2 + d1";
    "d2 = d2 + d1"->"d1 = d1 * d0";
    "d1 = d1 * d0"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 <= i0 goto d2 = d2 + d1";
    "if i1 <= i0 goto d2 = d2 + d1"->"return d2";
    "if i1 <= i0 goto d2 = d2 + d1"->"d2 = d2 + d1";
}
