digraph "unitGraph" {
    "r0 = newarray (int)[997]"
    "r1 = newarray (int)[997]"
    "r2 = newarray (int)[997]"
    "r3 = newarray (int)[997]"
    "r4 = newarray (int)[997]"
    "r5 = newarray (long)[498]"
    "i296 = 0"
    "i297 = 0"
    "goto [?= (branch)]"
    "i298 = 2147483147 + i297"
    "i296 = i296 + i298"
    "r1[i297] = i298"
    "r2[i297] = 15"
    "r3[i297] = -15"
    "r4[i297] = -327092431"
    "i297 = i297 + 1"
    "if i297 < 997 goto i298 = 2147483147 + i297"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i299 = 0"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"
    "i299 = i299 + 1"
    "if i299 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i300 = 0"
    "i301 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"
    "if i301 == i296 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"
    "$r10 = <java.lang.System: java.io.PrintStream err>"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i301)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i296)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "i300 = i300 + 1"
    "i302 = 0"
    "$i3 = r0[i302]"
    "$i1 = 2147483147 + i302"
    "$i2 = $i1 + 15"
    "$i4 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addc: \", i302, $i3, $i2)"
    "i300 = i300 + $i4"
    "i302 = i302 + 1"
    "if i302 < 997 goto $i3 = r0[i302]"
    "i303 = 0"
    "$i7 = r0[i303]"
    "$i5 = 2147483147 + i303"
    "$i6 = $i5 + 15"
    "$i8 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addv: \", i303, $i7, $i6)"
    "i300 = i300 + $i8"
    "i303 = i303 + 1"
    "if i303 < 997 goto $i7 = r0[i303]"
    "i304 = 0"
    "$i11 = r0[i304]"
    "$i9 = 2147483147 + i304"
    "$i10 = $i9 + 15"
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_adda: \", i304, $i11, $i10)"
    "i300 = i300 + $i12"
    "i304 = i304 + 1"
    "if i304 < 997 goto $i11 = r0[i304]"
    "i305 = 0"
    "$i15 = r0[i305]"
    "$i13 = 2147483147 + i305"
    "$i14 = $i13 - 15"
    "$i16 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subc: \", i305, $i15, $i14)"
    "i300 = i300 + $i16"
    "i305 = i305 + 1"
    "if i305 < 997 goto $i15 = r0[i305]"
    "i306 = 0"
    "$i19 = r0[i306]"
    "$i17 = 2147483147 + i306"
    "$i18 = $i17 - 15"
    "$i20 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subv: \", i306, $i19, $i18)"
    "i300 = i300 + $i20"
    "i306 = i306 + 1"
    "if i306 < 997 goto $i19 = r0[i306]"
    "i307 = 0"
    "$i23 = r0[i307]"
    "$i21 = 2147483147 + i307"
    "$i22 = $i21 - 15"
    "$i24 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_suba: \", i307, $i23, $i22)"
    "i300 = i300 + $i24"
    "i307 = i307 + 1"
    "if i307 < 997 goto $i23 = r0[i307]"
    "i308 = 0"
    "$i27 = r0[i308]"
    "$i25 = 2147483147 + i308"
    "$i26 = $i25 * 15"
    "$i28 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc: \", i308, $i27, $i26)"
    "i300 = i300 + $i28"
    "i308 = i308 + 1"
    "if i308 < 997 goto $i27 = r0[i308]"
    "i309 = 0"
    "$i31 = r0[i309]"
    "$i29 = 2147483147 + i309"
    "$i30 = $i29 * 15"
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv: \", i309, $i31, $i30)"
    "i300 = i300 + $i32"
    "i309 = i309 + 1"
    "if i309 < 997 goto $i31 = r0[i309]"
    "i310 = 0"
    "$i35 = r0[i310]"
    "$i33 = 2147483147 + i310"
    "$i34 = $i33 * 15"
    "$i36 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula: \", i310, $i35, $i34)"
    "i300 = i300 + $i36"
    "i310 = i310 + 1"
    "if i310 < 997 goto $i35 = r0[i310]"
    "i311 = 0"
    "$i39 = r0[i311]"
    "$i37 = 2147483147 + i311"
    "$i38 = $i37 / 15"
    "$i40 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc: \", i311, $i39, $i38)"
    "i300 = i300 + $i40"
    "i311 = i311 + 1"
    "if i311 < 997 goto $i39 = r0[i311]"
    "i312 = 0"
    "$i43 = r0[i312]"
    "$i41 = 2147483147 + i312"
    "$i42 = $i41 / 15"
    "$i44 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv: \", i312, $i43, $i42)"
    "i300 = i300 + $i44"
    "i312 = i312 + 1"
    "if i312 < 997 goto $i43 = r0[i312]"
    "i313 = 0"
    "$i47 = r0[i313]"
    "$i45 = 2147483147 + i313"
    "$i46 = $i45 / 15"
    "$i48 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva: \", i313, $i47, $i46)"
    "i300 = i300 + $i48"
    "i313 = i313 + 1"
    "if i313 < 997 goto $i47 = r0[i313]"
    "i314 = 0"
    "$i51 = r0[i314]"
    "$i49 = 2147483147 + i314"
    "$i50 = $i49 * -15"
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc_n: \", i314, $i51, $i50)"
    "i300 = i300 + $i52"
    "i314 = i314 + 1"
    "if i314 < 997 goto $i51 = r0[i314]"
    "i315 = 0"
    "$i55 = r0[i315]"
    "$i53 = 2147483147 + i315"
    "$i54 = $i53 * -15"
    "$i56 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv_n: \", i315, $i55, $i54)"
    "i300 = i300 + $i56"
    "i315 = i315 + 1"
    "if i315 < 997 goto $i55 = r0[i315]"
    "i316 = 0"
    "$i59 = r0[i316]"
    "$i57 = 2147483147 + i316"
    "$i58 = $i57 * -15"
    "$i60 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula_n: \", i316, $i59, $i58)"
    "i300 = i300 + $i60"
    "i316 = i316 + 1"
    "if i316 < 997 goto $i59 = r0[i316]"
    "i317 = 0"
    "$i63 = r0[i317]"
    "$i61 = 2147483147 + i317"
    "$i62 = $i61 / -15"
    "$i64 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc_n: \", i317, $i63, $i62)"
    "i300 = i300 + $i64"
    "i317 = i317 + 1"
    "if i317 < 997 goto $i63 = r0[i317]"
    "i318 = 0"
    "$i67 = r0[i318]"
    "$i65 = 2147483147 + i318"
    "$i66 = $i65 / -15"
    "$i68 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv_n: \", i318, $i67, $i66)"
    "i300 = i300 + $i68"
    "i318 = i318 + 1"
    "if i318 < 997 goto $i67 = r0[i318]"
    "i319 = 0"
    "$i71 = r0[i319]"
    "$i69 = 2147483147 + i319"
    "$i70 = $i69 / -15"
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva_n: \", i319, $i71, $i70)"
    "i300 = i300 + $i72"
    "i319 = i319 + 1"
    "if i319 < 997 goto $i71 = r0[i319]"
    "i320 = 0"
    "$i75 = r0[i320]"
    "$i73 = 2147483147 + i320"
    "$i74 = $i73 & -327092431"
    "$i76 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andc: \", i320, $i75, $i74)"
    "i300 = i300 + $i76"
    "i320 = i320 + 1"
    "if i320 < 997 goto $i75 = r0[i320]"
    "i321 = 0"
    "$i79 = r0[i321]"
    "$i77 = 2147483147 + i321"
    "$i78 = $i77 & -327092431"
    "$i80 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andv: \", i321, $i79, $i78)"
    "i300 = i300 + $i80"
    "i321 = i321 + 1"
    "if i321 < 997 goto $i79 = r0[i321]"
    "i322 = 0"
    "$i83 = r0[i322]"
    "$i81 = 2147483147 + i322"
    "$i82 = $i81 & -327092431"
    "$i84 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_anda: \", i322, $i83, $i82)"
    "i300 = i300 + $i84"
    "i322 = i322 + 1"
    "if i322 < 997 goto $i83 = r0[i322]"
    "i323 = 0"
    "$i87 = r0[i323]"
    "$i85 = 2147483147 + i323"
    "$i86 = $i85 | -327092431"
    "$i88 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orc: \", i323, $i87, $i86)"
    "i300 = i300 + $i88"
    "i323 = i323 + 1"
    "if i323 < 997 goto $i87 = r0[i323]"
    "i324 = 0"
    "$i91 = r0[i324]"
    "$i89 = 2147483147 + i324"
    "$i90 = $i89 | -327092431"
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orv: \", i324, $i91, $i90)"
    "i300 = i300 + $i92"
    "i324 = i324 + 1"
    "if i324 < 997 goto $i91 = r0[i324]"
    "i325 = 0"
    "$i95 = r0[i325]"
    "$i93 = 2147483147 + i325"
    "$i94 = $i93 | -327092431"
    "$i96 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_ora: \", i325, $i95, $i94)"
    "i300 = i300 + $i96"
    "i325 = i325 + 1"
    "if i325 < 997 goto $i95 = r0[i325]"
    "i326 = 0"
    "$i99 = r0[i326]"
    "$i97 = 2147483147 + i326"
    "$i98 = $i97 ^ -327092431"
    "$i100 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorc: \", i326, $i99, $i98)"
    "i300 = i300 + $i100"
    "i326 = i326 + 1"
    "if i326 < 997 goto $i99 = r0[i326]"
    "i327 = 0"
    "$i103 = r0[i327]"
    "$i101 = 2147483147 + i327"
    "$i102 = $i101 ^ -327092431"
    "$i104 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorv: \", i327, $i103, $i102)"
    "i300 = i300 + $i104"
    "i327 = i327 + 1"
    "if i327 < 997 goto $i103 = r0[i327]"
    "i328 = 0"
    "$i107 = r0[i328]"
    "$i105 = 2147483147 + i328"
    "$i106 = $i105 ^ -327092431"
    "$i108 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xora: \", i328, $i107, $i106)"
    "i300 = i300 + $i108"
    "i328 = i328 + 1"
    "if i328 < 997 goto $i107 = r0[i328]"
    "i329 = 0"
    "$i111 = r0[i329]"
    "$i109 = 2147483147 + i329"
    "$i110 = $i109 << 15"
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc: \", i329, $i111, $i110)"
    "i300 = i300 + $i112"
    "i329 = i329 + 1"
    "if i329 < 997 goto $i111 = r0[i329]"
    "i330 = 0"
    "$i115 = r0[i330]"
    "$i113 = 2147483147 + i330"
    "$i114 = $i113 << 15"
    "$i116 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv: \", i330, $i115, $i114)"
    "i300 = i300 + $i116"
    "i330 = i330 + 1"
    "if i330 < 997 goto $i115 = r0[i330]"
    "i331 = 0"
    "$i119 = r0[i331]"
    "$i117 = 2147483147 + i331"
    "$i118 = $i117 >>> 15"
    "$i120 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc: \", i331, $i119, $i118)"
    "i300 = i300 + $i120"
    "i331 = i331 + 1"
    "if i331 < 997 goto $i119 = r0[i331]"
    "i332 = 0"
    "$i123 = r0[i332]"
    "$i121 = 2147483147 + i332"
    "$i122 = $i121 >>> 15"
    "$i124 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv: \", i332, $i123, $i122)"
    "i300 = i300 + $i124"
    "i332 = i332 + 1"
    "if i332 < 997 goto $i123 = r0[i332]"
    "i333 = 0"
    "$i127 = r0[i333]"
    "$i125 = 2147483147 + i333"
    "$i126 = $i125 >> 15"
    "$i128 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac: \", i333, $i127, $i126)"
    "i300 = i300 + $i128"
    "i333 = i333 + 1"
    "if i333 < 997 goto $i127 = r0[i333]"
    "i334 = 0"
    "$i131 = r0[i334]"
    "$i129 = 2147483147 + i334"
    "$i130 = $i129 >> 15"
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav: \", i334, $i131, $i130)"
    "i300 = i300 + $i132"
    "i334 = i334 + 1"
    "if i334 < 997 goto $i131 = r0[i334]"
    "i335 = 0"
    "$i135 = r0[i335]"
    "$i133 = 2147483147 + i335"
    "$i134 = $i133 << -15"
    "$i136 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_n: \", i335, $i135, $i134)"
    "i300 = i300 + $i136"
    "i335 = i335 + 1"
    "if i335 < 997 goto $i135 = r0[i335]"
    "i336 = 0"
    "$i139 = r0[i336]"
    "$i137 = 2147483147 + i336"
    "$i138 = $i137 << -15"
    "$i140 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_n: \", i336, $i139, $i138)"
    "i300 = i300 + $i140"
    "i336 = i336 + 1"
    "if i336 < 997 goto $i139 = r0[i336]"
    "i337 = 0"
    "$i143 = r0[i337]"
    "$i141 = 2147483147 + i337"
    "$i142 = $i141 >>> -15"
    "$i144 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_n: \", i337, $i143, $i142)"
    "i300 = i300 + $i144"
    "i337 = i337 + 1"
    "if i337 < 997 goto $i143 = r0[i337]"
    "i338 = 0"
    "$i147 = r0[i338]"
    "$i145 = 2147483147 + i338"
    "$i146 = $i145 >>> -15"
    "$i148 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_n: \", i338, $i147, $i146)"
    "i300 = i300 + $i148"
    "i338 = i338 + 1"
    "if i338 < 997 goto $i147 = r0[i338]"
    "i339 = 0"
    "$i151 = r0[i339]"
    "$i149 = 2147483147 + i339"
    "$i150 = $i149 >> -15"
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_n: \", i339, $i151, $i150)"
    "i300 = i300 + $i152"
    "i339 = i339 + 1"
    "if i339 < 997 goto $i151 = r0[i339]"
    "i340 = 0"
    "$i155 = r0[i340]"
    "$i153 = 2147483147 + i340"
    "$i154 = $i153 >> -15"
    "$i156 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_n: \", i340, $i155, $i154)"
    "i300 = i300 + $i156"
    "i340 = i340 + 1"
    "if i340 < 997 goto $i155 = r0[i340]"
    "i341 = 0"
    "$i159 = r0[i341]"
    "$i157 = 2147483147 + i341"
    "$i158 = $i157 << 32"
    "$i160 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_o: \", i341, $i159, $i158)"
    "i300 = i300 + $i160"
    "i341 = i341 + 1"
    "if i341 < 997 goto $i159 = r0[i341]"
    "i342 = 0"
    "$i163 = r0[i342]"
    "$i161 = 2147483147 + i342"
    "$i162 = $i161 << 32"
    "$i164 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_o: \", i342, $i163, $i162)"
    "i300 = i300 + $i164"
    "i342 = i342 + 1"
    "if i342 < 997 goto $i163 = r0[i342]"
    "i343 = 0"
    "$i167 = r0[i343]"
    "$i165 = 2147483147 + i343"
    "$i166 = $i165 >>> 32"
    "$i168 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_o: \", i343, $i167, $i166)"
    "i300 = i300 + $i168"
    "i343 = i343 + 1"
    "if i343 < 997 goto $i167 = r0[i343]"
    "i344 = 0"
    "$i171 = r0[i344]"
    "$i169 = 2147483147 + i344"
    "$i170 = $i169 >>> 32"
    "$i172 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_o: \", i344, $i171, $i170)"
    "i300 = i300 + $i172"
    "i344 = i344 + 1"
    "if i344 < 997 goto $i171 = r0[i344]"
    "i345 = 0"
    "$i175 = r0[i345]"
    "$i173 = 2147483147 + i345"
    "$i174 = $i173 >> 32"
    "$i176 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_o: \", i345, $i175, $i174)"
    "i300 = i300 + $i176"
    "i345 = i345 + 1"
    "if i345 < 997 goto $i175 = r0[i345]"
    "i346 = 0"
    "$i179 = r0[i346]"
    "$i177 = 2147483147 + i346"
    "$i178 = $i177 >> 32"
    "$i180 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_o: \", i346, $i179, $i178)"
    "i300 = i300 + $i180"
    "i346 = i346 + 1"
    "if i346 < 997 goto $i179 = r0[i346]"
    "i347 = 0"
    "$i183 = r0[i347]"
    "$i181 = 2147483147 + i347"
    "$i182 = $i181 << -32"
    "$i184 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_on: \", i347, $i183, $i182)"
    "i300 = i300 + $i184"
    "i347 = i347 + 1"
    "if i347 < 997 goto $i183 = r0[i347]"
    "i348 = 0"
    "$i187 = r0[i348]"
    "$i185 = 2147483147 + i348"
    "$i186 = $i185 << -32"
    "$i188 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_on: \", i348, $i187, $i186)"
    "i300 = i300 + $i188"
    "i348 = i348 + 1"
    "if i348 < 997 goto $i187 = r0[i348]"
    "i349 = 0"
    "$i191 = r0[i349]"
    "$i189 = 2147483147 + i349"
    "$i190 = $i189 >>> -32"
    "$i192 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_on: \", i349, $i191, $i190)"
    "i300 = i300 + $i192"
    "i349 = i349 + 1"
    "if i349 < 997 goto $i191 = r0[i349]"
    "i350 = 0"
    "$i195 = r0[i350]"
    "$i193 = 2147483147 + i350"
    "$i194 = $i193 >>> -32"
    "$i196 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_on: \", i350, $i195, $i194)"
    "i300 = i300 + $i196"
    "i350 = i350 + 1"
    "if i350 < 997 goto $i195 = r0[i350]"
    "i351 = 0"
    "$i199 = r0[i351]"
    "$i197 = 2147483147 + i351"
    "$i198 = $i197 >> -32"
    "$i200 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_on: \", i351, $i199, $i198)"
    "i300 = i300 + $i200"
    "i351 = i351 + 1"
    "if i351 < 997 goto $i199 = r0[i351]"
    "i352 = 0"
    "$i203 = r0[i352]"
    "$i201 = 2147483147 + i352"
    "$i202 = $i201 >> -32"
    "$i204 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_on: \", i352, $i203, $i202)"
    "i300 = i300 + $i204"
    "i352 = i352 + 1"
    "if i352 < 997 goto $i203 = r0[i352]"
    "i353 = 0"
    "$i208 = r0[i353]"
    "$i205 = 2147483147 + i353"
    "$i206 = $i205 + 2147483147"
    "$i207 = $i206 << 15"
    "$i209 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_add: \", i353, $i208, $i207)"
    "i300 = i300 + $i209"
    "i353 = i353 + 1"
    "if i353 < 997 goto $i208 = r0[i353]"
    "i354 = 0"
    "$i213 = r0[i354]"
    "$i210 = 2147483147 + i354"
    "$i211 = $i210 + 2147483147"
    "$i212 = $i211 << 15"
    "$i214 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_add: \", i354, $i213, $i212)"
    "i300 = i300 + $i214"
    "i354 = i354 + 1"
    "if i354 < 997 goto $i213 = r0[i354]"
    "i355 = 0"
    "$i218 = r0[i355]"
    "$i215 = 2147483147 + i355"
    "$i216 = $i215 + 2147483147"
    "$i217 = $i216 >>> 15"
    "$i219 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_add: \", i355, $i218, $i217)"
    "i300 = i300 + $i219"
    "i355 = i355 + 1"
    "if i355 < 997 goto $i218 = r0[i355]"
    "i356 = 0"
    "$i223 = r0[i356]"
    "$i220 = 2147483147 + i356"
    "$i221 = $i220 + 2147483147"
    "$i222 = $i221 >>> 15"
    "$i224 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_add: \", i356, $i223, $i222)"
    "i300 = i300 + $i224"
    "i356 = i356 + 1"
    "if i356 < 997 goto $i223 = r0[i356]"
    "i357 = 0"
    "$i228 = r0[i357]"
    "$i225 = 2147483147 + i357"
    "$i226 = $i225 + 2147483147"
    "$i227 = $i226 >> 15"
    "$i229 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_add: \", i357, $i228, $i227)"
    "i300 = i300 + $i229"
    "i357 = i357 + 1"
    "if i357 < 997 goto $i228 = r0[i357]"
    "i358 = 0"
    "$i233 = r0[i358]"
    "$i230 = 2147483147 + i358"
    "$i231 = $i230 + 2147483147"
    "$i232 = $i231 >> 15"
    "$i234 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_add: \", i358, $i233, $i232)"
    "i300 = i300 + $i234"
    "i358 = i358 + 1"
    "if i358 < 997 goto $i233 = r0[i358]"
    "i359 = 0"
    "$i238 = r0[i359]"
    "$i235 = 2147483147 + i359"
    "$i236 = $i235 & -327092431"
    "$i237 = $i236 << 15"
    "$i239 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_and: \", i359, $i238, $i237)"
    "i300 = i300 + $i239"
    "i359 = i359 + 1"
    "if i359 < 997 goto $i238 = r0[i359]"
    "i360 = 0"
    "$i243 = r0[i360]"
    "$i240 = 2147483147 + i360"
    "$i241 = $i240 & -327092431"
    "$i242 = $i241 << 15"
    "$i244 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_and: \", i360, $i243, $i242)"
    "i300 = i300 + $i244"
    "i360 = i360 + 1"
    "if i360 < 997 goto $i243 = r0[i360]"
    "i361 = 0"
    "$i248 = r0[i361]"
    "$i245 = 2147483147 + i361"
    "$i246 = $i245 & -327092431"
    "$i247 = $i246 >>> 15"
    "$i249 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_and: \", i361, $i248, $i247)"
    "i300 = i300 + $i249"
    "i361 = i361 + 1"
    "if i361 < 997 goto $i248 = r0[i361]"
    "i362 = 0"
    "$i253 = r0[i362]"
    "$i250 = 2147483147 + i362"
    "$i251 = $i250 & -327092431"
    "$i252 = $i251 >>> 15"
    "$i254 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_and: \", i362, $i253, $i252)"
    "i300 = i300 + $i254"
    "i362 = i362 + 1"
    "if i362 < 997 goto $i253 = r0[i362]"
    "i363 = 0"
    "$i258 = r0[i363]"
    "$i255 = 2147483147 + i363"
    "$i256 = $i255 & -327092431"
    "$i257 = $i256 >> 15"
    "$i259 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_and: \", i363, $i258, $i257)"
    "i300 = i300 + $i259"
    "i363 = i363 + 1"
    "if i363 < 997 goto $i258 = r0[i363]"
    "i364 = 0"
    "$i263 = r0[i364]"
    "$i260 = 2147483147 + i364"
    "$i261 = $i260 & -327092431"
    "$i262 = $i261 >> 15"
    "$i264 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_and: \", i364, $i263, $i262)"
    "i300 = i300 + $i264"
    "i364 = i364 + 1"
    "if i364 < 997 goto $i263 = r0[i364]"
    "i365 = 0"
    "$l275 = r5[i365]"
    "$i265 = 2 * i365"
    "$i266 = 2147483147 + $i265"
    "$l267 = (long) $i266"
    "$l273 = $l267 & 4294967295L"
    "$i268 = 2 * i365"
    "$i269 = 2147483147 + $i268"
    "$i270 = $i269 + 1"
    "$l271 = (long) $i270"
    "$l272 = $l271 << 32"
    "$l274 = $l273 | $l272"
    "$i276 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2: \", i365, $l275, $l274)"
    "i300 = i300 + $i276"
    "i365 = i365 + 1"
    "if i365 < 498 goto $l275 = r5[i365]"
    "i366 = 0"
    "r0[i366] = -1"
    "i366 = i366 + 1"
    "if i366 < 997 goto r0[i366] = -1"
    "i367 = 0"
    "$i278 = r0[i367]"
    "$i277 = 2147483147 + i367"
    "$i279 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2: \", i367, $i278, $i277)"
    "i300 = i300 + $i279"
    "i367 = i367 + 1"
    "if i367 < 996 goto $i278 = r0[i367]"
    "i368 = 0"
    "$l290 = r5[i368]"
    "$i280 = 2 * i368"
    "$i281 = 2147483147 + $i280"
    "$i282 = $i281 + 1"
    "$l283 = (long) $i282"
    "$l288 = $l283 & 4294967295L"
    "$i284 = 2 * i368"
    "$i285 = 2147483147 + $i284"
    "$l286 = (long) $i285"
    "$l287 = $l286 << 32"
    "$l289 = $l288 | $l287"
    "$i291 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2_swap: \", i368, $l290, $l289)"
    "i300 = i300 + $i291"
    "i368 = i368 + 1"
    "if i368 < 498 goto $l290 = r5[i368]"
    "i369 = 0"
    "r0[i369] = -1"
    "i369 = i369 + 1"
    "if i369 < 997 goto r0[i369] = -1"
    "i370 = 0"
    "$i293 = r0[i370]"
    "$i292 = 2147483147 + i370"
    "$i294 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2_swap: \", i370, $i293, $i292)"
    "i300 = i300 + $i294"
    "i370 = i370 + 1"
    "if i370 < 996 goto $i293 = r0[i370]"
    "if i300 <= 0 goto $r8 = <java.lang.System: java.io.PrintStream out>"
    "return i300"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i371 = 0"
    "i371 = i371 + 1"
    "if i371 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"
    "i372 = 0"
    "i372 = i372 + 1"
    "if i372 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"
    "i373 = 0"
    "i373 = i373 + 1"
    "if i373 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"
    "i374 = 0"
    "i374 = i374 + 1"
    "if i374 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"
    "i375 = 0"
    "i375 = i375 + 1"
    "if i375 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"
    "i376 = 0"
    "i376 = i376 + 1"
    "if i376 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"
    "i377 = 0"
    "i377 = i377 + 1"
    "if i377 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"
    "i378 = 0"
    "i378 = i378 + 1"
    "if i378 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"
    "i379 = 0"
    "i379 = i379 + 1"
    "if i379 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"
    "i380 = 0"
    "i380 = i380 + 1"
    "if i380 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"
    "i381 = 0"
    "i381 = i381 + 1"
    "if i381 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"
    "i382 = 0"
    "i382 = i382 + 1"
    "if i382 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"
    "i383 = 0"
    "i383 = i383 + 1"
    "if i383 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"
    "i384 = 0"
    "i384 = i384 + 1"
    "if i384 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"
    "i385 = 0"
    "i385 = i385 + 1"
    "if i385 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"
    "i386 = 0"
    "i386 = i386 + 1"
    "if i386 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"
    "i387 = 0"
    "i387 = i387 + 1"
    "if i387 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"
    "i388 = 0"
    "i388 = i388 + 1"
    "if i388 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"
    "i389 = 0"
    "i389 = i389 + 1"
    "if i389 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"
    "i390 = 0"
    "i390 = i390 + 1"
    "if i390 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"
    "i391 = 0"
    "i391 = i391 + 1"
    "if i391 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"
    "i392 = 0"
    "i392 = i392 + 1"
    "if i392 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"
    "i393 = 0"
    "i393 = i393 + 1"
    "if i393 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"
    "i394 = 0"
    "i394 = i394 + 1"
    "if i394 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"
    "i395 = 0"
    "i395 = i395 + 1"
    "if i395 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"
    "i396 = 0"
    "i396 = i396 + 1"
    "if i396 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"
    "i397 = 0"
    "i397 = i397 + 1"
    "if i397 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"
    "i398 = 0"
    "i398 = i398 + 1"
    "if i398 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"
    "i399 = 0"
    "i399 = i399 + 1"
    "if i399 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"
    "i400 = 0"
    "i400 = i400 + 1"
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"
    "i401 = 0"
    "i401 = i401 + 1"
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"
    "i402 = 0"
    "i402 = i402 + 1"
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"
    "i403 = 0"
    "i403 = i403 + 1"
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"
    "i404 = 0"
    "i404 = i404 + 1"
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"
    "i405 = 0"
    "i405 = i405 + 1"
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"
    "i406 = 0"
    "i406 = i406 + 1"
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"
    "i407 = 0"
    "i407 = i407 + 1"
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"
    "i408 = 0"
    "i408 = i408 + 1"
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"
    "i409 = 0"
    "i409 = i409 + 1"
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"
    "i410 = 0"
    "i410 = i410 + 1"
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"
    "i411 = 0"
    "i411 = i411 + 1"
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"
    "i412 = 0"
    "i412 = i412 + 1"
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"
    "i413 = 0"
    "i413 = i413 + 1"
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"
    "i414 = 0"
    "i414 = i414 + 1"
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"
    "i415 = 0"
    "i415 = i415 + 1"
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"
    "i416 = 0"
    "i416 = i416 + 1"
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"
    "i417 = 0"
    "i417 = i417 + 1"
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"
    "i418 = 0"
    "i418 = i418 + 1"
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"
    "i419 = 0"
    "i419 = i419 + 1"
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"
    "i420 = 0"
    "i420 = i420 + 1"
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"
    "i421 = 0"
    "i421 = i421 + 1"
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"
    "i422 = 0"
    "i422 = i422 + 1"
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"
    "i423 = 0"
    "i423 = i423 + 1"
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"
    "i424 = 0"
    "i424 = i424 + 1"
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"
    "i425 = 0"
    "i425 = i425 + 1"
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"
    "i426 = 0"
    "i426 = i426 + 1"
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"
    "i427 = 0"
    "i427 = i427 + 1"
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"
    "i428 = 0"
    "i428 = i428 + 1"
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"
    "i429 = 0"
    "i429 = i429 + 1"
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"
    "i430 = 0"
    "i430 = i430 + 1"
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"
    "i431 = 0"
    "i431 = i431 + 1"
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"
    "i432 = 0"
    "i432 = i432 + 1"
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"
    "i433 = 0"
    "i433 = i433 + 1"
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"
    "i434 = 0"
    "i434 = i434 + 1"
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"
    "i435 = 0"
    "i435 = i435 + 1"
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"
    "i436 = 0"
    "i436 = i436 + 1"
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"
    "i437 = 0"
    "i437 = i437 + 1"
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"
    "i438 = 0"
    "i438 = i438 + 1"
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"
    "r0 = newarray (int)[997]"->"r1 = newarray (int)[997]";
    "r1 = newarray (int)[997]"->"r2 = newarray (int)[997]";
    "r2 = newarray (int)[997]"->"r3 = newarray (int)[997]";
    "r3 = newarray (int)[997]"->"r4 = newarray (int)[997]";
    "r4 = newarray (int)[997]"->"r5 = newarray (long)[498]";
    "r5 = newarray (long)[498]"->"i296 = 0";
    "i296 = 0"->"i297 = 0";
    "i297 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i297 < 997 goto i298 = 2147483147 + i297";
    "i298 = 2147483147 + i297"->"i296 = i296 + i298";
    "i296 = i296 + i298"->"r1[i297] = i298";
    "r1[i297] = i298"->"r2[i297] = 15";
    "r2[i297] = 15"->"r3[i297] = -15";
    "r3[i297] = -15"->"r4[i297] = -327092431";
    "r4[i297] = -327092431"->"i297 = i297 + 1";
    "i297 = i297 + 1"->"if i297 < 997 goto i298 = 2147483147 + i297";
    "if i297 < 997 goto i298 = 2147483147 + i297"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if i297 < 997 goto i298 = 2147483147 + i297"->"i298 = 2147483147 + i297";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i299 = 0";
    "i299 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i299 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"->"i299 = i299 + 1";
    "i299 = i299 + 1"->"if i299 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "if i299 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i299 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i300 = 0";
    "i300 = 0"->"i301 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "i301 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"if i301 == i296 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "if i301 == i296 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"$r10 = <java.lang.System: java.io.PrintStream err>";
    "if i301 == i296 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "$r10 = <java.lang.System: java.io.PrintStream err>"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i301)";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i301)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i296)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i296)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"i300 = i300 + 1";
    "i300 = i300 + 1"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"i302 = 0";
    "i302 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i302 < 997 goto $i3 = r0[i302]";
    "$i3 = r0[i302]"->"$i1 = 2147483147 + i302";
    "$i1 = 2147483147 + i302"->"$i2 = $i1 + 15";
    "$i2 = $i1 + 15"->"$i4 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addc: \", i302, $i3, $i2)";
    "$i4 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addc: \", i302, $i3, $i2)"->"i300 = i300 + $i4";
    "i300 = i300 + $i4"->"i302 = i302 + 1";
    "i302 = i302 + 1"->"if i302 < 997 goto $i3 = r0[i302]";
    "if i302 < 997 goto $i3 = r0[i302]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)";
    "if i302 < 997 goto $i3 = r0[i302]"->"$i3 = r0[i302]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"->"i303 = 0";
    "i303 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i303 < 997 goto $i7 = r0[i303]";
    "$i7 = r0[i303]"->"$i5 = 2147483147 + i303";
    "$i5 = 2147483147 + i303"->"$i6 = $i5 + 15";
    "$i6 = $i5 + 15"->"$i8 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addv: \", i303, $i7, $i6)";
    "$i8 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_addv: \", i303, $i7, $i6)"->"i300 = i300 + $i8";
    "i300 = i300 + $i8"->"i303 = i303 + 1";
    "i303 = i303 + 1"->"if i303 < 997 goto $i7 = r0[i303]";
    "if i303 < 997 goto $i7 = r0[i303]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)";
    "if i303 < 997 goto $i7 = r0[i303]"->"$i7 = r0[i303]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"->"i304 = 0";
    "i304 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i304 < 997 goto $i11 = r0[i304]";
    "$i11 = r0[i304]"->"$i9 = 2147483147 + i304";
    "$i9 = 2147483147 + i304"->"$i10 = $i9 + 15";
    "$i10 = $i9 + 15"->"$i12 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_adda: \", i304, $i11, $i10)";
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_adda: \", i304, $i11, $i10)"->"i300 = i300 + $i12";
    "i300 = i300 + $i12"->"i304 = i304 + 1";
    "i304 = i304 + 1"->"if i304 < 997 goto $i11 = r0[i304]";
    "if i304 < 997 goto $i11 = r0[i304]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)";
    "if i304 < 997 goto $i11 = r0[i304]"->"$i11 = r0[i304]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"->"i305 = 0";
    "i305 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i305 < 997 goto $i15 = r0[i305]";
    "$i15 = r0[i305]"->"$i13 = 2147483147 + i305";
    "$i13 = 2147483147 + i305"->"$i14 = $i13 - 15";
    "$i14 = $i13 - 15"->"$i16 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subc: \", i305, $i15, $i14)";
    "$i16 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subc: \", i305, $i15, $i14)"->"i300 = i300 + $i16";
    "i300 = i300 + $i16"->"i305 = i305 + 1";
    "i305 = i305 + 1"->"if i305 < 997 goto $i15 = r0[i305]";
    "if i305 < 997 goto $i15 = r0[i305]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)";
    "if i305 < 997 goto $i15 = r0[i305]"->"$i15 = r0[i305]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"->"i306 = 0";
    "i306 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i306 < 997 goto $i19 = r0[i306]";
    "$i19 = r0[i306]"->"$i17 = 2147483147 + i306";
    "$i17 = 2147483147 + i306"->"$i18 = $i17 - 15";
    "$i18 = $i17 - 15"->"$i20 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subv: \", i306, $i19, $i18)";
    "$i20 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_subv: \", i306, $i19, $i18)"->"i300 = i300 + $i20";
    "i300 = i300 + $i20"->"i306 = i306 + 1";
    "i306 = i306 + 1"->"if i306 < 997 goto $i19 = r0[i306]";
    "if i306 < 997 goto $i19 = r0[i306]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)";
    "if i306 < 997 goto $i19 = r0[i306]"->"$i19 = r0[i306]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"->"i307 = 0";
    "i307 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i307 < 997 goto $i23 = r0[i307]";
    "$i23 = r0[i307]"->"$i21 = 2147483147 + i307";
    "$i21 = 2147483147 + i307"->"$i22 = $i21 - 15";
    "$i22 = $i21 - 15"->"$i24 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_suba: \", i307, $i23, $i22)";
    "$i24 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_suba: \", i307, $i23, $i22)"->"i300 = i300 + $i24";
    "i300 = i300 + $i24"->"i307 = i307 + 1";
    "i307 = i307 + 1"->"if i307 < 997 goto $i23 = r0[i307]";
    "if i307 < 997 goto $i23 = r0[i307]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)";
    "if i307 < 997 goto $i23 = r0[i307]"->"$i23 = r0[i307]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"->"i308 = 0";
    "i308 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i308 < 997 goto $i27 = r0[i308]";
    "$i27 = r0[i308]"->"$i25 = 2147483147 + i308";
    "$i25 = 2147483147 + i308"->"$i26 = $i25 * 15";
    "$i26 = $i25 * 15"->"$i28 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc: \", i308, $i27, $i26)";
    "$i28 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc: \", i308, $i27, $i26)"->"i300 = i300 + $i28";
    "i300 = i300 + $i28"->"i308 = i308 + 1";
    "i308 = i308 + 1"->"if i308 < 997 goto $i27 = r0[i308]";
    "if i308 < 997 goto $i27 = r0[i308]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)";
    "if i308 < 997 goto $i27 = r0[i308]"->"$i27 = r0[i308]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"->"i309 = 0";
    "i309 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i309 < 997 goto $i31 = r0[i309]";
    "$i31 = r0[i309]"->"$i29 = 2147483147 + i309";
    "$i29 = 2147483147 + i309"->"$i30 = $i29 * 15";
    "$i30 = $i29 * 15"->"$i32 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv: \", i309, $i31, $i30)";
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv: \", i309, $i31, $i30)"->"i300 = i300 + $i32";
    "i300 = i300 + $i32"->"i309 = i309 + 1";
    "i309 = i309 + 1"->"if i309 < 997 goto $i31 = r0[i309]";
    "if i309 < 997 goto $i31 = r0[i309]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)";
    "if i309 < 997 goto $i31 = r0[i309]"->"$i31 = r0[i309]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"->"i310 = 0";
    "i310 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i310 < 997 goto $i35 = r0[i310]";
    "$i35 = r0[i310]"->"$i33 = 2147483147 + i310";
    "$i33 = 2147483147 + i310"->"$i34 = $i33 * 15";
    "$i34 = $i33 * 15"->"$i36 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula: \", i310, $i35, $i34)";
    "$i36 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula: \", i310, $i35, $i34)"->"i300 = i300 + $i36";
    "i300 = i300 + $i36"->"i310 = i310 + 1";
    "i310 = i310 + 1"->"if i310 < 997 goto $i35 = r0[i310]";
    "if i310 < 997 goto $i35 = r0[i310]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)";
    "if i310 < 997 goto $i35 = r0[i310]"->"$i35 = r0[i310]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"->"i311 = 0";
    "i311 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i311 < 997 goto $i39 = r0[i311]";
    "$i39 = r0[i311]"->"$i37 = 2147483147 + i311";
    "$i37 = 2147483147 + i311"->"$i38 = $i37 / 15";
    "$i38 = $i37 / 15"->"$i40 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc: \", i311, $i39, $i38)";
    "$i40 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc: \", i311, $i39, $i38)"->"i300 = i300 + $i40";
    "i300 = i300 + $i40"->"i311 = i311 + 1";
    "i311 = i311 + 1"->"if i311 < 997 goto $i39 = r0[i311]";
    "if i311 < 997 goto $i39 = r0[i311]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)";
    "if i311 < 997 goto $i39 = r0[i311]"->"$i39 = r0[i311]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"->"i312 = 0";
    "i312 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i312 < 997 goto $i43 = r0[i312]";
    "$i43 = r0[i312]"->"$i41 = 2147483147 + i312";
    "$i41 = 2147483147 + i312"->"$i42 = $i41 / 15";
    "$i42 = $i41 / 15"->"$i44 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv: \", i312, $i43, $i42)";
    "$i44 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv: \", i312, $i43, $i42)"->"i300 = i300 + $i44";
    "i300 = i300 + $i44"->"i312 = i312 + 1";
    "i312 = i312 + 1"->"if i312 < 997 goto $i43 = r0[i312]";
    "if i312 < 997 goto $i43 = r0[i312]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)";
    "if i312 < 997 goto $i43 = r0[i312]"->"$i43 = r0[i312]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"->"i313 = 0";
    "i313 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i313 < 997 goto $i47 = r0[i313]";
    "$i47 = r0[i313]"->"$i45 = 2147483147 + i313";
    "$i45 = 2147483147 + i313"->"$i46 = $i45 / 15";
    "$i46 = $i45 / 15"->"$i48 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva: \", i313, $i47, $i46)";
    "$i48 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva: \", i313, $i47, $i46)"->"i300 = i300 + $i48";
    "i300 = i300 + $i48"->"i313 = i313 + 1";
    "i313 = i313 + 1"->"if i313 < 997 goto $i47 = r0[i313]";
    "if i313 < 997 goto $i47 = r0[i313]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)";
    "if i313 < 997 goto $i47 = r0[i313]"->"$i47 = r0[i313]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"->"i314 = 0";
    "i314 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i314 < 997 goto $i51 = r0[i314]";
    "$i51 = r0[i314]"->"$i49 = 2147483147 + i314";
    "$i49 = 2147483147 + i314"->"$i50 = $i49 * -15";
    "$i50 = $i49 * -15"->"$i52 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc_n: \", i314, $i51, $i50)";
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulc_n: \", i314, $i51, $i50)"->"i300 = i300 + $i52";
    "i300 = i300 + $i52"->"i314 = i314 + 1";
    "i314 = i314 + 1"->"if i314 < 997 goto $i51 = r0[i314]";
    "if i314 < 997 goto $i51 = r0[i314]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)";
    "if i314 < 997 goto $i51 = r0[i314]"->"$i51 = r0[i314]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"->"i315 = 0";
    "i315 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i315 < 997 goto $i55 = r0[i315]";
    "$i55 = r0[i315]"->"$i53 = 2147483147 + i315";
    "$i53 = 2147483147 + i315"->"$i54 = $i53 * -15";
    "$i54 = $i53 * -15"->"$i56 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv_n: \", i315, $i55, $i54)";
    "$i56 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mulv_n: \", i315, $i55, $i54)"->"i300 = i300 + $i56";
    "i300 = i300 + $i56"->"i315 = i315 + 1";
    "i315 = i315 + 1"->"if i315 < 997 goto $i55 = r0[i315]";
    "if i315 < 997 goto $i55 = r0[i315]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)";
    "if i315 < 997 goto $i55 = r0[i315]"->"$i55 = r0[i315]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"->"i316 = 0";
    "i316 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i316 < 997 goto $i59 = r0[i316]";
    "$i59 = r0[i316]"->"$i57 = 2147483147 + i316";
    "$i57 = 2147483147 + i316"->"$i58 = $i57 * -15";
    "$i58 = $i57 * -15"->"$i60 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula_n: \", i316, $i59, $i58)";
    "$i60 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_mula_n: \", i316, $i59, $i58)"->"i300 = i300 + $i60";
    "i300 = i300 + $i60"->"i316 = i316 + 1";
    "i316 = i316 + 1"->"if i316 < 997 goto $i59 = r0[i316]";
    "if i316 < 997 goto $i59 = r0[i316]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)";
    "if i316 < 997 goto $i59 = r0[i316]"->"$i59 = r0[i316]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"->"i317 = 0";
    "i317 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i317 < 997 goto $i63 = r0[i317]";
    "$i63 = r0[i317]"->"$i61 = 2147483147 + i317";
    "$i61 = 2147483147 + i317"->"$i62 = $i61 / -15";
    "$i62 = $i61 / -15"->"$i64 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc_n: \", i317, $i63, $i62)";
    "$i64 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divc_n: \", i317, $i63, $i62)"->"i300 = i300 + $i64";
    "i300 = i300 + $i64"->"i317 = i317 + 1";
    "i317 = i317 + 1"->"if i317 < 997 goto $i63 = r0[i317]";
    "if i317 < 997 goto $i63 = r0[i317]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)";
    "if i317 < 997 goto $i63 = r0[i317]"->"$i63 = r0[i317]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"->"i318 = 0";
    "i318 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i318 < 997 goto $i67 = r0[i318]";
    "$i67 = r0[i318]"->"$i65 = 2147483147 + i318";
    "$i65 = 2147483147 + i318"->"$i66 = $i65 / -15";
    "$i66 = $i65 / -15"->"$i68 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv_n: \", i318, $i67, $i66)";
    "$i68 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_divv_n: \", i318, $i67, $i66)"->"i300 = i300 + $i68";
    "i300 = i300 + $i68"->"i318 = i318 + 1";
    "i318 = i318 + 1"->"if i318 < 997 goto $i67 = r0[i318]";
    "if i318 < 997 goto $i67 = r0[i318]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)";
    "if i318 < 997 goto $i67 = r0[i318]"->"$i67 = r0[i318]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"->"i319 = 0";
    "i319 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i319 < 997 goto $i71 = r0[i319]";
    "$i71 = r0[i319]"->"$i69 = 2147483147 + i319";
    "$i69 = 2147483147 + i319"->"$i70 = $i69 / -15";
    "$i70 = $i69 / -15"->"$i72 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva_n: \", i319, $i71, $i70)";
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_diva_n: \", i319, $i71, $i70)"->"i300 = i300 + $i72";
    "i300 = i300 + $i72"->"i319 = i319 + 1";
    "i319 = i319 + 1"->"if i319 < 997 goto $i71 = r0[i319]";
    "if i319 < 997 goto $i71 = r0[i319]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)";
    "if i319 < 997 goto $i71 = r0[i319]"->"$i71 = r0[i319]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"->"i320 = 0";
    "i320 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i320 < 997 goto $i75 = r0[i320]";
    "$i75 = r0[i320]"->"$i73 = 2147483147 + i320";
    "$i73 = 2147483147 + i320"->"$i74 = $i73 & -327092431";
    "$i74 = $i73 & -327092431"->"$i76 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andc: \", i320, $i75, $i74)";
    "$i76 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andc: \", i320, $i75, $i74)"->"i300 = i300 + $i76";
    "i300 = i300 + $i76"->"i320 = i320 + 1";
    "i320 = i320 + 1"->"if i320 < 997 goto $i75 = r0[i320]";
    "if i320 < 997 goto $i75 = r0[i320]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)";
    "if i320 < 997 goto $i75 = r0[i320]"->"$i75 = r0[i320]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"->"i321 = 0";
    "i321 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i321 < 997 goto $i79 = r0[i321]";
    "$i79 = r0[i321]"->"$i77 = 2147483147 + i321";
    "$i77 = 2147483147 + i321"->"$i78 = $i77 & -327092431";
    "$i78 = $i77 & -327092431"->"$i80 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andv: \", i321, $i79, $i78)";
    "$i80 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_andv: \", i321, $i79, $i78)"->"i300 = i300 + $i80";
    "i300 = i300 + $i80"->"i321 = i321 + 1";
    "i321 = i321 + 1"->"if i321 < 997 goto $i79 = r0[i321]";
    "if i321 < 997 goto $i79 = r0[i321]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)";
    "if i321 < 997 goto $i79 = r0[i321]"->"$i79 = r0[i321]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"->"i322 = 0";
    "i322 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i322 < 997 goto $i83 = r0[i322]";
    "$i83 = r0[i322]"->"$i81 = 2147483147 + i322";
    "$i81 = 2147483147 + i322"->"$i82 = $i81 & -327092431";
    "$i82 = $i81 & -327092431"->"$i84 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_anda: \", i322, $i83, $i82)";
    "$i84 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_anda: \", i322, $i83, $i82)"->"i300 = i300 + $i84";
    "i300 = i300 + $i84"->"i322 = i322 + 1";
    "i322 = i322 + 1"->"if i322 < 997 goto $i83 = r0[i322]";
    "if i322 < 997 goto $i83 = r0[i322]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)";
    "if i322 < 997 goto $i83 = r0[i322]"->"$i83 = r0[i322]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"->"i323 = 0";
    "i323 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i323 < 997 goto $i87 = r0[i323]";
    "$i87 = r0[i323]"->"$i85 = 2147483147 + i323";
    "$i85 = 2147483147 + i323"->"$i86 = $i85 | -327092431";
    "$i86 = $i85 | -327092431"->"$i88 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orc: \", i323, $i87, $i86)";
    "$i88 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orc: \", i323, $i87, $i86)"->"i300 = i300 + $i88";
    "i300 = i300 + $i88"->"i323 = i323 + 1";
    "i323 = i323 + 1"->"if i323 < 997 goto $i87 = r0[i323]";
    "if i323 < 997 goto $i87 = r0[i323]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)";
    "if i323 < 997 goto $i87 = r0[i323]"->"$i87 = r0[i323]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"->"i324 = 0";
    "i324 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i324 < 997 goto $i91 = r0[i324]";
    "$i91 = r0[i324]"->"$i89 = 2147483147 + i324";
    "$i89 = 2147483147 + i324"->"$i90 = $i89 | -327092431";
    "$i90 = $i89 | -327092431"->"$i92 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orv: \", i324, $i91, $i90)";
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_orv: \", i324, $i91, $i90)"->"i300 = i300 + $i92";
    "i300 = i300 + $i92"->"i324 = i324 + 1";
    "i324 = i324 + 1"->"if i324 < 997 goto $i91 = r0[i324]";
    "if i324 < 997 goto $i91 = r0[i324]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)";
    "if i324 < 997 goto $i91 = r0[i324]"->"$i91 = r0[i324]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"->"i325 = 0";
    "i325 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i325 < 997 goto $i95 = r0[i325]";
    "$i95 = r0[i325]"->"$i93 = 2147483147 + i325";
    "$i93 = 2147483147 + i325"->"$i94 = $i93 | -327092431";
    "$i94 = $i93 | -327092431"->"$i96 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_ora: \", i325, $i95, $i94)";
    "$i96 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_ora: \", i325, $i95, $i94)"->"i300 = i300 + $i96";
    "i300 = i300 + $i96"->"i325 = i325 + 1";
    "i325 = i325 + 1"->"if i325 < 997 goto $i95 = r0[i325]";
    "if i325 < 997 goto $i95 = r0[i325]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)";
    "if i325 < 997 goto $i95 = r0[i325]"->"$i95 = r0[i325]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"->"i326 = 0";
    "i326 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i326 < 997 goto $i99 = r0[i326]";
    "$i99 = r0[i326]"->"$i97 = 2147483147 + i326";
    "$i97 = 2147483147 + i326"->"$i98 = $i97 ^ -327092431";
    "$i98 = $i97 ^ -327092431"->"$i100 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorc: \", i326, $i99, $i98)";
    "$i100 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorc: \", i326, $i99, $i98)"->"i300 = i300 + $i100";
    "i300 = i300 + $i100"->"i326 = i326 + 1";
    "i326 = i326 + 1"->"if i326 < 997 goto $i99 = r0[i326]";
    "if i326 < 997 goto $i99 = r0[i326]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)";
    "if i326 < 997 goto $i99 = r0[i326]"->"$i99 = r0[i326]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"->"i327 = 0";
    "i327 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i327 < 997 goto $i103 = r0[i327]";
    "$i103 = r0[i327]"->"$i101 = 2147483147 + i327";
    "$i101 = 2147483147 + i327"->"$i102 = $i101 ^ -327092431";
    "$i102 = $i101 ^ -327092431"->"$i104 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorv: \", i327, $i103, $i102)";
    "$i104 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xorv: \", i327, $i103, $i102)"->"i300 = i300 + $i104";
    "i300 = i300 + $i104"->"i327 = i327 + 1";
    "i327 = i327 + 1"->"if i327 < 997 goto $i103 = r0[i327]";
    "if i327 < 997 goto $i103 = r0[i327]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)";
    "if i327 < 997 goto $i103 = r0[i327]"->"$i103 = r0[i327]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"->"i328 = 0";
    "i328 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i328 < 997 goto $i107 = r0[i328]";
    "$i107 = r0[i328]"->"$i105 = 2147483147 + i328";
    "$i105 = 2147483147 + i328"->"$i106 = $i105 ^ -327092431";
    "$i106 = $i105 ^ -327092431"->"$i108 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xora: \", i328, $i107, $i106)";
    "$i108 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_xora: \", i328, $i107, $i106)"->"i300 = i300 + $i108";
    "i300 = i300 + $i108"->"i328 = i328 + 1";
    "i328 = i328 + 1"->"if i328 < 997 goto $i107 = r0[i328]";
    "if i328 < 997 goto $i107 = r0[i328]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)";
    "if i328 < 997 goto $i107 = r0[i328]"->"$i107 = r0[i328]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"->"i329 = 0";
    "i329 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i329 < 997 goto $i111 = r0[i329]";
    "$i111 = r0[i329]"->"$i109 = 2147483147 + i329";
    "$i109 = 2147483147 + i329"->"$i110 = $i109 << 15";
    "$i110 = $i109 << 15"->"$i112 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc: \", i329, $i111, $i110)";
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc: \", i329, $i111, $i110)"->"i300 = i300 + $i112";
    "i300 = i300 + $i112"->"i329 = i329 + 1";
    "i329 = i329 + 1"->"if i329 < 997 goto $i111 = r0[i329]";
    "if i329 < 997 goto $i111 = r0[i329]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)";
    "if i329 < 997 goto $i111 = r0[i329]"->"$i111 = r0[i329]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"->"i330 = 0";
    "i330 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i330 < 997 goto $i115 = r0[i330]";
    "$i115 = r0[i330]"->"$i113 = 2147483147 + i330";
    "$i113 = 2147483147 + i330"->"$i114 = $i113 << 15";
    "$i114 = $i113 << 15"->"$i116 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv: \", i330, $i115, $i114)";
    "$i116 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv: \", i330, $i115, $i114)"->"i300 = i300 + $i116";
    "i300 = i300 + $i116"->"i330 = i330 + 1";
    "i330 = i330 + 1"->"if i330 < 997 goto $i115 = r0[i330]";
    "if i330 < 997 goto $i115 = r0[i330]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)";
    "if i330 < 997 goto $i115 = r0[i330]"->"$i115 = r0[i330]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"->"i331 = 0";
    "i331 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i331 < 997 goto $i119 = r0[i331]";
    "$i119 = r0[i331]"->"$i117 = 2147483147 + i331";
    "$i117 = 2147483147 + i331"->"$i118 = $i117 >>> 15";
    "$i118 = $i117 >>> 15"->"$i120 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc: \", i331, $i119, $i118)";
    "$i120 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc: \", i331, $i119, $i118)"->"i300 = i300 + $i120";
    "i300 = i300 + $i120"->"i331 = i331 + 1";
    "i331 = i331 + 1"->"if i331 < 997 goto $i119 = r0[i331]";
    "if i331 < 997 goto $i119 = r0[i331]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)";
    "if i331 < 997 goto $i119 = r0[i331]"->"$i119 = r0[i331]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"->"i332 = 0";
    "i332 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i332 < 997 goto $i123 = r0[i332]";
    "$i123 = r0[i332]"->"$i121 = 2147483147 + i332";
    "$i121 = 2147483147 + i332"->"$i122 = $i121 >>> 15";
    "$i122 = $i121 >>> 15"->"$i124 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv: \", i332, $i123, $i122)";
    "$i124 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv: \", i332, $i123, $i122)"->"i300 = i300 + $i124";
    "i300 = i300 + $i124"->"i332 = i332 + 1";
    "i332 = i332 + 1"->"if i332 < 997 goto $i123 = r0[i332]";
    "if i332 < 997 goto $i123 = r0[i332]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)";
    "if i332 < 997 goto $i123 = r0[i332]"->"$i123 = r0[i332]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"->"i333 = 0";
    "i333 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i333 < 997 goto $i127 = r0[i333]";
    "$i127 = r0[i333]"->"$i125 = 2147483147 + i333";
    "$i125 = 2147483147 + i333"->"$i126 = $i125 >> 15";
    "$i126 = $i125 >> 15"->"$i128 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac: \", i333, $i127, $i126)";
    "$i128 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac: \", i333, $i127, $i126)"->"i300 = i300 + $i128";
    "i300 = i300 + $i128"->"i333 = i333 + 1";
    "i333 = i333 + 1"->"if i333 < 997 goto $i127 = r0[i333]";
    "if i333 < 997 goto $i127 = r0[i333]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)";
    "if i333 < 997 goto $i127 = r0[i333]"->"$i127 = r0[i333]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"->"i334 = 0";
    "i334 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i334 < 997 goto $i131 = r0[i334]";
    "$i131 = r0[i334]"->"$i129 = 2147483147 + i334";
    "$i129 = 2147483147 + i334"->"$i130 = $i129 >> 15";
    "$i130 = $i129 >> 15"->"$i132 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav: \", i334, $i131, $i130)";
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav: \", i334, $i131, $i130)"->"i300 = i300 + $i132";
    "i300 = i300 + $i132"->"i334 = i334 + 1";
    "i334 = i334 + 1"->"if i334 < 997 goto $i131 = r0[i334]";
    "if i334 < 997 goto $i131 = r0[i334]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)";
    "if i334 < 997 goto $i131 = r0[i334]"->"$i131 = r0[i334]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"->"i335 = 0";
    "i335 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i335 < 997 goto $i135 = r0[i335]";
    "$i135 = r0[i335]"->"$i133 = 2147483147 + i335";
    "$i133 = 2147483147 + i335"->"$i134 = $i133 << -15";
    "$i134 = $i133 << -15"->"$i136 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_n: \", i335, $i135, $i134)";
    "$i136 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_n: \", i335, $i135, $i134)"->"i300 = i300 + $i136";
    "i300 = i300 + $i136"->"i335 = i335 + 1";
    "i335 = i335 + 1"->"if i335 < 997 goto $i135 = r0[i335]";
    "if i335 < 997 goto $i135 = r0[i335]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)";
    "if i335 < 997 goto $i135 = r0[i335]"->"$i135 = r0[i335]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"->"i336 = 0";
    "i336 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i336 < 997 goto $i139 = r0[i336]";
    "$i139 = r0[i336]"->"$i137 = 2147483147 + i336";
    "$i137 = 2147483147 + i336"->"$i138 = $i137 << -15";
    "$i138 = $i137 << -15"->"$i140 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_n: \", i336, $i139, $i138)";
    "$i140 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_n: \", i336, $i139, $i138)"->"i300 = i300 + $i140";
    "i300 = i300 + $i140"->"i336 = i336 + 1";
    "i336 = i336 + 1"->"if i336 < 997 goto $i139 = r0[i336]";
    "if i336 < 997 goto $i139 = r0[i336]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)";
    "if i336 < 997 goto $i139 = r0[i336]"->"$i139 = r0[i336]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"->"i337 = 0";
    "i337 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i337 < 997 goto $i143 = r0[i337]";
    "$i143 = r0[i337]"->"$i141 = 2147483147 + i337";
    "$i141 = 2147483147 + i337"->"$i142 = $i141 >>> -15";
    "$i142 = $i141 >>> -15"->"$i144 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_n: \", i337, $i143, $i142)";
    "$i144 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_n: \", i337, $i143, $i142)"->"i300 = i300 + $i144";
    "i300 = i300 + $i144"->"i337 = i337 + 1";
    "i337 = i337 + 1"->"if i337 < 997 goto $i143 = r0[i337]";
    "if i337 < 997 goto $i143 = r0[i337]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)";
    "if i337 < 997 goto $i143 = r0[i337]"->"$i143 = r0[i337]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"->"i338 = 0";
    "i338 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i338 < 997 goto $i147 = r0[i338]";
    "$i147 = r0[i338]"->"$i145 = 2147483147 + i338";
    "$i145 = 2147483147 + i338"->"$i146 = $i145 >>> -15";
    "$i146 = $i145 >>> -15"->"$i148 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_n: \", i338, $i147, $i146)";
    "$i148 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_n: \", i338, $i147, $i146)"->"i300 = i300 + $i148";
    "i300 = i300 + $i148"->"i338 = i338 + 1";
    "i338 = i338 + 1"->"if i338 < 997 goto $i147 = r0[i338]";
    "if i338 < 997 goto $i147 = r0[i338]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)";
    "if i338 < 997 goto $i147 = r0[i338]"->"$i147 = r0[i338]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"->"i339 = 0";
    "i339 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i339 < 997 goto $i151 = r0[i339]";
    "$i151 = r0[i339]"->"$i149 = 2147483147 + i339";
    "$i149 = 2147483147 + i339"->"$i150 = $i149 >> -15";
    "$i150 = $i149 >> -15"->"$i152 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_n: \", i339, $i151, $i150)";
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_n: \", i339, $i151, $i150)"->"i300 = i300 + $i152";
    "i300 = i300 + $i152"->"i339 = i339 + 1";
    "i339 = i339 + 1"->"if i339 < 997 goto $i151 = r0[i339]";
    "if i339 < 997 goto $i151 = r0[i339]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)";
    "if i339 < 997 goto $i151 = r0[i339]"->"$i151 = r0[i339]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"->"i340 = 0";
    "i340 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i340 < 997 goto $i155 = r0[i340]";
    "$i155 = r0[i340]"->"$i153 = 2147483147 + i340";
    "$i153 = 2147483147 + i340"->"$i154 = $i153 >> -15";
    "$i154 = $i153 >> -15"->"$i156 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_n: \", i340, $i155, $i154)";
    "$i156 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_n: \", i340, $i155, $i154)"->"i300 = i300 + $i156";
    "i300 = i300 + $i156"->"i340 = i340 + 1";
    "i340 = i340 + 1"->"if i340 < 997 goto $i155 = r0[i340]";
    "if i340 < 997 goto $i155 = r0[i340]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)";
    "if i340 < 997 goto $i155 = r0[i340]"->"$i155 = r0[i340]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"->"i341 = 0";
    "i341 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i341 < 997 goto $i159 = r0[i341]";
    "$i159 = r0[i341]"->"$i157 = 2147483147 + i341";
    "$i157 = 2147483147 + i341"->"$i158 = $i157 << 32";
    "$i158 = $i157 << 32"->"$i160 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_o: \", i341, $i159, $i158)";
    "$i160 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_o: \", i341, $i159, $i158)"->"i300 = i300 + $i160";
    "i300 = i300 + $i160"->"i341 = i341 + 1";
    "i341 = i341 + 1"->"if i341 < 997 goto $i159 = r0[i341]";
    "if i341 < 997 goto $i159 = r0[i341]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)";
    "if i341 < 997 goto $i159 = r0[i341]"->"$i159 = r0[i341]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"->"i342 = 0";
    "i342 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i342 < 997 goto $i163 = r0[i342]";
    "$i163 = r0[i342]"->"$i161 = 2147483147 + i342";
    "$i161 = 2147483147 + i342"->"$i162 = $i161 << 32";
    "$i162 = $i161 << 32"->"$i164 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_o: \", i342, $i163, $i162)";
    "$i164 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_o: \", i342, $i163, $i162)"->"i300 = i300 + $i164";
    "i300 = i300 + $i164"->"i342 = i342 + 1";
    "i342 = i342 + 1"->"if i342 < 997 goto $i163 = r0[i342]";
    "if i342 < 997 goto $i163 = r0[i342]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)";
    "if i342 < 997 goto $i163 = r0[i342]"->"$i163 = r0[i342]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"->"i343 = 0";
    "i343 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i343 < 997 goto $i167 = r0[i343]";
    "$i167 = r0[i343]"->"$i165 = 2147483147 + i343";
    "$i165 = 2147483147 + i343"->"$i166 = $i165 >>> 32";
    "$i166 = $i165 >>> 32"->"$i168 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_o: \", i343, $i167, $i166)";
    "$i168 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_o: \", i343, $i167, $i166)"->"i300 = i300 + $i168";
    "i300 = i300 + $i168"->"i343 = i343 + 1";
    "i343 = i343 + 1"->"if i343 < 997 goto $i167 = r0[i343]";
    "if i343 < 997 goto $i167 = r0[i343]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)";
    "if i343 < 997 goto $i167 = r0[i343]"->"$i167 = r0[i343]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"->"i344 = 0";
    "i344 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i344 < 997 goto $i171 = r0[i344]";
    "$i171 = r0[i344]"->"$i169 = 2147483147 + i344";
    "$i169 = 2147483147 + i344"->"$i170 = $i169 >>> 32";
    "$i170 = $i169 >>> 32"->"$i172 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_o: \", i344, $i171, $i170)";
    "$i172 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_o: \", i344, $i171, $i170)"->"i300 = i300 + $i172";
    "i300 = i300 + $i172"->"i344 = i344 + 1";
    "i344 = i344 + 1"->"if i344 < 997 goto $i171 = r0[i344]";
    "if i344 < 997 goto $i171 = r0[i344]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)";
    "if i344 < 997 goto $i171 = r0[i344]"->"$i171 = r0[i344]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"->"i345 = 0";
    "i345 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i345 < 997 goto $i175 = r0[i345]";
    "$i175 = r0[i345]"->"$i173 = 2147483147 + i345";
    "$i173 = 2147483147 + i345"->"$i174 = $i173 >> 32";
    "$i174 = $i173 >> 32"->"$i176 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_o: \", i345, $i175, $i174)";
    "$i176 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_o: \", i345, $i175, $i174)"->"i300 = i300 + $i176";
    "i300 = i300 + $i176"->"i345 = i345 + 1";
    "i345 = i345 + 1"->"if i345 < 997 goto $i175 = r0[i345]";
    "if i345 < 997 goto $i175 = r0[i345]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)";
    "if i345 < 997 goto $i175 = r0[i345]"->"$i175 = r0[i345]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"->"i346 = 0";
    "i346 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i346 < 997 goto $i179 = r0[i346]";
    "$i179 = r0[i346]"->"$i177 = 2147483147 + i346";
    "$i177 = 2147483147 + i346"->"$i178 = $i177 >> 32";
    "$i178 = $i177 >> 32"->"$i180 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_o: \", i346, $i179, $i178)";
    "$i180 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_o: \", i346, $i179, $i178)"->"i300 = i300 + $i180";
    "i300 = i300 + $i180"->"i346 = i346 + 1";
    "i346 = i346 + 1"->"if i346 < 997 goto $i179 = r0[i346]";
    "if i346 < 997 goto $i179 = r0[i346]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)";
    "if i346 < 997 goto $i179 = r0[i346]"->"$i179 = r0[i346]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"->"i347 = 0";
    "i347 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i347 < 997 goto $i183 = r0[i347]";
    "$i183 = r0[i347]"->"$i181 = 2147483147 + i347";
    "$i181 = 2147483147 + i347"->"$i182 = $i181 << -32";
    "$i182 = $i181 << -32"->"$i184 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_on: \", i347, $i183, $i182)";
    "$i184 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_on: \", i347, $i183, $i182)"->"i300 = i300 + $i184";
    "i300 = i300 + $i184"->"i347 = i347 + 1";
    "i347 = i347 + 1"->"if i347 < 997 goto $i183 = r0[i347]";
    "if i347 < 997 goto $i183 = r0[i347]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)";
    "if i347 < 997 goto $i183 = r0[i347]"->"$i183 = r0[i347]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"->"i348 = 0";
    "i348 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i348 < 997 goto $i187 = r0[i348]";
    "$i187 = r0[i348]"->"$i185 = 2147483147 + i348";
    "$i185 = 2147483147 + i348"->"$i186 = $i185 << -32";
    "$i186 = $i185 << -32"->"$i188 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_on: \", i348, $i187, $i186)";
    "$i188 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_on: \", i348, $i187, $i186)"->"i300 = i300 + $i188";
    "i300 = i300 + $i188"->"i348 = i348 + 1";
    "i348 = i348 + 1"->"if i348 < 997 goto $i187 = r0[i348]";
    "if i348 < 997 goto $i187 = r0[i348]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)";
    "if i348 < 997 goto $i187 = r0[i348]"->"$i187 = r0[i348]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"->"i349 = 0";
    "i349 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i349 < 997 goto $i191 = r0[i349]";
    "$i191 = r0[i349]"->"$i189 = 2147483147 + i349";
    "$i189 = 2147483147 + i349"->"$i190 = $i189 >>> -32";
    "$i190 = $i189 >>> -32"->"$i192 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_on: \", i349, $i191, $i190)";
    "$i192 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_on: \", i349, $i191, $i190)"->"i300 = i300 + $i192";
    "i300 = i300 + $i192"->"i349 = i349 + 1";
    "i349 = i349 + 1"->"if i349 < 997 goto $i191 = r0[i349]";
    "if i349 < 997 goto $i191 = r0[i349]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)";
    "if i349 < 997 goto $i191 = r0[i349]"->"$i191 = r0[i349]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"->"i350 = 0";
    "i350 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i350 < 997 goto $i195 = r0[i350]";
    "$i195 = r0[i350]"->"$i193 = 2147483147 + i350";
    "$i193 = 2147483147 + i350"->"$i194 = $i193 >>> -32";
    "$i194 = $i193 >>> -32"->"$i196 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_on: \", i350, $i195, $i194)";
    "$i196 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_on: \", i350, $i195, $i194)"->"i300 = i300 + $i196";
    "i300 = i300 + $i196"->"i350 = i350 + 1";
    "i350 = i350 + 1"->"if i350 < 997 goto $i195 = r0[i350]";
    "if i350 < 997 goto $i195 = r0[i350]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)";
    "if i350 < 997 goto $i195 = r0[i350]"->"$i195 = r0[i350]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"->"i351 = 0";
    "i351 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i351 < 997 goto $i199 = r0[i351]";
    "$i199 = r0[i351]"->"$i197 = 2147483147 + i351";
    "$i197 = 2147483147 + i351"->"$i198 = $i197 >> -32";
    "$i198 = $i197 >> -32"->"$i200 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_on: \", i351, $i199, $i198)";
    "$i200 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_on: \", i351, $i199, $i198)"->"i300 = i300 + $i200";
    "i300 = i300 + $i200"->"i351 = i351 + 1";
    "i351 = i351 + 1"->"if i351 < 997 goto $i199 = r0[i351]";
    "if i351 < 997 goto $i199 = r0[i351]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)";
    "if i351 < 997 goto $i199 = r0[i351]"->"$i199 = r0[i351]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"->"i352 = 0";
    "i352 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i352 < 997 goto $i203 = r0[i352]";
    "$i203 = r0[i352]"->"$i201 = 2147483147 + i352";
    "$i201 = 2147483147 + i352"->"$i202 = $i201 >> -32";
    "$i202 = $i201 >> -32"->"$i204 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_on: \", i352, $i203, $i202)";
    "$i204 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_on: \", i352, $i203, $i202)"->"i300 = i300 + $i204";
    "i300 = i300 + $i204"->"i352 = i352 + 1";
    "i352 = i352 + 1"->"if i352 < 997 goto $i203 = r0[i352]";
    "if i352 < 997 goto $i203 = r0[i352]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)";
    "if i352 < 997 goto $i203 = r0[i352]"->"$i203 = r0[i352]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"->"i353 = 0";
    "i353 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i353 < 997 goto $i208 = r0[i353]";
    "$i208 = r0[i353]"->"$i205 = 2147483147 + i353";
    "$i205 = 2147483147 + i353"->"$i206 = $i205 + 2147483147";
    "$i206 = $i205 + 2147483147"->"$i207 = $i206 << 15";
    "$i207 = $i206 << 15"->"$i209 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_add: \", i353, $i208, $i207)";
    "$i209 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_add: \", i353, $i208, $i207)"->"i300 = i300 + $i209";
    "i300 = i300 + $i209"->"i353 = i353 + 1";
    "i353 = i353 + 1"->"if i353 < 997 goto $i208 = r0[i353]";
    "if i353 < 997 goto $i208 = r0[i353]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i353 < 997 goto $i208 = r0[i353]"->"$i208 = r0[i353]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i354 = 0";
    "i354 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i354 < 997 goto $i213 = r0[i354]";
    "$i213 = r0[i354]"->"$i210 = 2147483147 + i354";
    "$i210 = 2147483147 + i354"->"$i211 = $i210 + 2147483147";
    "$i211 = $i210 + 2147483147"->"$i212 = $i211 << 15";
    "$i212 = $i211 << 15"->"$i214 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_add: \", i354, $i213, $i212)";
    "$i214 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_add: \", i354, $i213, $i212)"->"i300 = i300 + $i214";
    "i300 = i300 + $i214"->"i354 = i354 + 1";
    "i354 = i354 + 1"->"if i354 < 997 goto $i213 = r0[i354]";
    "if i354 < 997 goto $i213 = r0[i354]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)";
    "if i354 < 997 goto $i213 = r0[i354]"->"$i213 = r0[i354]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"->"i355 = 0";
    "i355 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i355 < 997 goto $i218 = r0[i355]";
    "$i218 = r0[i355]"->"$i215 = 2147483147 + i355";
    "$i215 = 2147483147 + i355"->"$i216 = $i215 + 2147483147";
    "$i216 = $i215 + 2147483147"->"$i217 = $i216 >>> 15";
    "$i217 = $i216 >>> 15"->"$i219 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_add: \", i355, $i218, $i217)";
    "$i219 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_add: \", i355, $i218, $i217)"->"i300 = i300 + $i219";
    "i300 = i300 + $i219"->"i355 = i355 + 1";
    "i355 = i355 + 1"->"if i355 < 997 goto $i218 = r0[i355]";
    "if i355 < 997 goto $i218 = r0[i355]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i355 < 997 goto $i218 = r0[i355]"->"$i218 = r0[i355]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i356 = 0";
    "i356 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i356 < 997 goto $i223 = r0[i356]";
    "$i223 = r0[i356]"->"$i220 = 2147483147 + i356";
    "$i220 = 2147483147 + i356"->"$i221 = $i220 + 2147483147";
    "$i221 = $i220 + 2147483147"->"$i222 = $i221 >>> 15";
    "$i222 = $i221 >>> 15"->"$i224 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_add: \", i356, $i223, $i222)";
    "$i224 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_add: \", i356, $i223, $i222)"->"i300 = i300 + $i224";
    "i300 = i300 + $i224"->"i356 = i356 + 1";
    "i356 = i356 + 1"->"if i356 < 997 goto $i223 = r0[i356]";
    "if i356 < 997 goto $i223 = r0[i356]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)";
    "if i356 < 997 goto $i223 = r0[i356]"->"$i223 = r0[i356]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"->"i357 = 0";
    "i357 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i357 < 997 goto $i228 = r0[i357]";
    "$i228 = r0[i357]"->"$i225 = 2147483147 + i357";
    "$i225 = 2147483147 + i357"->"$i226 = $i225 + 2147483147";
    "$i226 = $i225 + 2147483147"->"$i227 = $i226 >> 15";
    "$i227 = $i226 >> 15"->"$i229 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_add: \", i357, $i228, $i227)";
    "$i229 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_add: \", i357, $i228, $i227)"->"i300 = i300 + $i229";
    "i300 = i300 + $i229"->"i357 = i357 + 1";
    "i357 = i357 + 1"->"if i357 < 997 goto $i228 = r0[i357]";
    "if i357 < 997 goto $i228 = r0[i357]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i357 < 997 goto $i228 = r0[i357]"->"$i228 = r0[i357]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"->"i358 = 0";
    "i358 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i358 < 997 goto $i233 = r0[i358]";
    "$i233 = r0[i358]"->"$i230 = 2147483147 + i358";
    "$i230 = 2147483147 + i358"->"$i231 = $i230 + 2147483147";
    "$i231 = $i230 + 2147483147"->"$i232 = $i231 >> 15";
    "$i232 = $i231 >> 15"->"$i234 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_add: \", i358, $i233, $i232)";
    "$i234 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_add: \", i358, $i233, $i232)"->"i300 = i300 + $i234";
    "i300 = i300 + $i234"->"i358 = i358 + 1";
    "i358 = i358 + 1"->"if i358 < 997 goto $i233 = r0[i358]";
    "if i358 < 997 goto $i233 = r0[i358]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)";
    "if i358 < 997 goto $i233 = r0[i358]"->"$i233 = r0[i358]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"->"i359 = 0";
    "i359 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i359 < 997 goto $i238 = r0[i359]";
    "$i238 = r0[i359]"->"$i235 = 2147483147 + i359";
    "$i235 = 2147483147 + i359"->"$i236 = $i235 & -327092431";
    "$i236 = $i235 & -327092431"->"$i237 = $i236 << 15";
    "$i237 = $i236 << 15"->"$i239 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_and: \", i359, $i238, $i237)";
    "$i239 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllc_and: \", i359, $i238, $i237)"->"i300 = i300 + $i239";
    "i300 = i300 + $i239"->"i359 = i359 + 1";
    "i359 = i359 + 1"->"if i359 < 997 goto $i238 = r0[i359]";
    "if i359 < 997 goto $i238 = r0[i359]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i359 < 997 goto $i238 = r0[i359]"->"$i238 = r0[i359]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"->"i360 = 0";
    "i360 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i360 < 997 goto $i243 = r0[i360]";
    "$i243 = r0[i360]"->"$i240 = 2147483147 + i360";
    "$i240 = 2147483147 + i360"->"$i241 = $i240 & -327092431";
    "$i241 = $i240 & -327092431"->"$i242 = $i241 << 15";
    "$i242 = $i241 << 15"->"$i244 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_and: \", i360, $i243, $i242)";
    "$i244 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_sllv_and: \", i360, $i243, $i242)"->"i300 = i300 + $i244";
    "i300 = i300 + $i244"->"i360 = i360 + 1";
    "i360 = i360 + 1"->"if i360 < 997 goto $i243 = r0[i360]";
    "if i360 < 997 goto $i243 = r0[i360]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)";
    "if i360 < 997 goto $i243 = r0[i360]"->"$i243 = r0[i360]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"->"i361 = 0";
    "i361 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i361 < 997 goto $i248 = r0[i361]";
    "$i248 = r0[i361]"->"$i245 = 2147483147 + i361";
    "$i245 = 2147483147 + i361"->"$i246 = $i245 & -327092431";
    "$i246 = $i245 & -327092431"->"$i247 = $i246 >>> 15";
    "$i247 = $i246 >>> 15"->"$i249 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_and: \", i361, $i248, $i247)";
    "$i249 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlc_and: \", i361, $i248, $i247)"->"i300 = i300 + $i249";
    "i300 = i300 + $i249"->"i361 = i361 + 1";
    "i361 = i361 + 1"->"if i361 < 997 goto $i248 = r0[i361]";
    "if i361 < 997 goto $i248 = r0[i361]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i361 < 997 goto $i248 = r0[i361]"->"$i248 = r0[i361]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"->"i362 = 0";
    "i362 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i362 < 997 goto $i253 = r0[i362]";
    "$i253 = r0[i362]"->"$i250 = 2147483147 + i362";
    "$i250 = 2147483147 + i362"->"$i251 = $i250 & -327092431";
    "$i251 = $i250 & -327092431"->"$i252 = $i251 >>> 15";
    "$i252 = $i251 >>> 15"->"$i254 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_and: \", i362, $i253, $i252)";
    "$i254 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srlv_and: \", i362, $i253, $i252)"->"i300 = i300 + $i254";
    "i300 = i300 + $i254"->"i362 = i362 + 1";
    "i362 = i362 + 1"->"if i362 < 997 goto $i253 = r0[i362]";
    "if i362 < 997 goto $i253 = r0[i362]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)";
    "if i362 < 997 goto $i253 = r0[i362]"->"$i253 = r0[i362]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"->"i363 = 0";
    "i363 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i363 < 997 goto $i258 = r0[i363]";
    "$i258 = r0[i363]"->"$i255 = 2147483147 + i363";
    "$i255 = 2147483147 + i363"->"$i256 = $i255 & -327092431";
    "$i256 = $i255 & -327092431"->"$i257 = $i256 >> 15";
    "$i257 = $i256 >> 15"->"$i259 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_and: \", i363, $i258, $i257)";
    "$i259 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srac_and: \", i363, $i258, $i257)"->"i300 = i300 + $i259";
    "i300 = i300 + $i259"->"i363 = i363 + 1";
    "i363 = i363 + 1"->"if i363 < 997 goto $i258 = r0[i363]";
    "if i363 < 997 goto $i258 = r0[i363]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i363 < 997 goto $i258 = r0[i363]"->"$i258 = r0[i363]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"->"i364 = 0";
    "i364 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i364 < 997 goto $i263 = r0[i364]";
    "$i263 = r0[i364]"->"$i260 = 2147483147 + i364";
    "$i260 = 2147483147 + i364"->"$i261 = $i260 & -327092431";
    "$i261 = $i260 & -327092431"->"$i262 = $i261 >> 15";
    "$i262 = $i261 >> 15"->"$i264 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_and: \", i364, $i263, $i262)";
    "$i264 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_srav_and: \", i364, $i263, $i262)"->"i300 = i300 + $i264";
    "i300 = i300 + $i264"->"i364 = i364 + 1";
    "i364 = i364 + 1"->"if i364 < 997 goto $i263 = r0[i364]";
    "if i364 < 997 goto $i263 = r0[i364]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)";
    "if i364 < 997 goto $i263 = r0[i364]"->"$i263 = r0[i364]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"->"i365 = 0";
    "i365 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i365 < 498 goto $l275 = r5[i365]";
    "$l275 = r5[i365]"->"$i265 = 2 * i365";
    "$i265 = 2 * i365"->"$i266 = 2147483147 + $i265";
    "$i266 = 2147483147 + $i265"->"$l267 = (long) $i266";
    "$l267 = (long) $i266"->"$l273 = $l267 & 4294967295L";
    "$l273 = $l267 & 4294967295L"->"$i268 = 2 * i365";
    "$i268 = 2 * i365"->"$i269 = 2147483147 + $i268";
    "$i269 = 2147483147 + $i268"->"$i270 = $i269 + 1";
    "$i270 = $i269 + 1"->"$l271 = (long) $i270";
    "$l271 = (long) $i270"->"$l272 = $l271 << 32";
    "$l272 = $l271 << 32"->"$l274 = $l273 | $l272";
    "$l274 = $l273 | $l272"->"$i276 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2: \", i365, $l275, $l274)";
    "$i276 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2: \", i365, $l275, $l274)"->"i300 = i300 + $i276";
    "i300 = i300 + $i276"->"i365 = i365 + 1";
    "i365 = i365 + 1"->"if i365 < 498 goto $l275 = r5[i365]";
    "if i365 < 498 goto $l275 = r5[i365]"->"i366 = 0";
    "if i365 < 498 goto $l275 = r5[i365]"->"$l275 = r5[i365]";
    "i366 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i366 < 997 goto r0[i366] = -1";
    "r0[i366] = -1"->"i366 = i366 + 1";
    "i366 = i366 + 1"->"if i366 < 997 goto r0[i366] = -1";
    "if i366 < 997 goto r0[i366] = -1"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)";
    "if i366 < 997 goto r0[i366] = -1"->"r0[i366] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"->"i367 = 0";
    "i367 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i367 < 996 goto $i278 = r0[i367]";
    "$i278 = r0[i367]"->"$i277 = 2147483147 + i367";
    "$i277 = 2147483147 + i367"->"$i279 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2: \", i367, $i278, $i277)";
    "$i279 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2: \", i367, $i278, $i277)"->"i300 = i300 + $i279";
    "i300 = i300 + $i279"->"i367 = i367 + 1";
    "i367 = i367 + 1"->"if i367 < 996 goto $i278 = r0[i367]";
    "if i367 < 996 goto $i278 = r0[i367]"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)";
    "if i367 < 996 goto $i278 = r0[i367]"->"$i278 = r0[i367]";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"->"i368 = 0";
    "i368 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i368 < 498 goto $l290 = r5[i368]";
    "$l290 = r5[i368]"->"$i280 = 2 * i368";
    "$i280 = 2 * i368"->"$i281 = 2147483147 + $i280";
    "$i281 = 2147483147 + $i280"->"$i282 = $i281 + 1";
    "$i282 = $i281 + 1"->"$l283 = (long) $i282";
    "$l283 = (long) $i282"->"$l288 = $l283 & 4294967295L";
    "$l288 = $l283 & 4294967295L"->"$i284 = 2 * i368";
    "$i284 = 2 * i368"->"$i285 = 2147483147 + $i284";
    "$i285 = 2147483147 + $i284"->"$l286 = (long) $i285";
    "$l286 = (long) $i285"->"$l287 = $l286 << 32";
    "$l287 = $l286 << 32"->"$l289 = $l288 | $l287";
    "$l289 = $l288 | $l287"->"$i291 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2_swap: \", i368, $l290, $l289)";
    "$i291 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,long,long)>(\"test_pack2_swap: \", i368, $l290, $l289)"->"i300 = i300 + $i291";
    "i300 = i300 + $i291"->"i368 = i368 + 1";
    "i368 = i368 + 1"->"if i368 < 498 goto $l290 = r5[i368]";
    "if i368 < 498 goto $l290 = r5[i368]"->"i369 = 0";
    "if i368 < 498 goto $l290 = r5[i368]"->"$l290 = r5[i368]";
    "i369 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i369 < 997 goto r0[i369] = -1";
    "r0[i369] = -1"->"i369 = i369 + 1";
    "i369 = i369 + 1"->"if i369 < 997 goto r0[i369] = -1";
    "if i369 < 997 goto r0[i369] = -1"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)";
    "if i369 < 997 goto r0[i369] = -1"->"r0[i369] = -1";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"->"i370 = 0";
    "i370 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i370 < 996 goto $i293 = r0[i370]";
    "$i293 = r0[i370]"->"$i292 = 2147483147 + i370";
    "$i292 = 2147483147 + i370"->"$i294 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2_swap: \", i370, $i293, $i292)";
    "$i294 = staticinvoke <compiler.c2.cr6340864.TestIntVect: int verify(java.lang.String,int,int,int)>(\"test_unpack2_swap: \", i370, $i293, $i292)"->"i300 = i300 + $i294";
    "i300 = i300 + $i294"->"i370 = i370 + 1";
    "i370 = i370 + 1"->"if i370 < 996 goto $i293 = r0[i370]";
    "if i370 < 996 goto $i293 = r0[i370]"->"if i300 <= 0 goto $r8 = <java.lang.System: java.io.PrintStream out>";
    "if i370 < 996 goto $i293 = r0[i370]"->"$i293 = r0[i370]";
    "if i300 <= 0 goto $r8 = <java.lang.System: java.io.PrintStream out>"->"return i300";
    "if i300 <= 0 goto $r8 = <java.lang.System: java.io.PrintStream out>"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i371 = 0";
    "i371 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i371 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"i371 = i371 + 1";
    "i371 = i371 + 1"->"if i371 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "if i371 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"i372 = 0";
    "if i371 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: int test_sum(int[])>(r1)";
    "i372 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i372 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"i372 = i372 + 1";
    "i372 = i372 + 1"->"if i372 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "if i372 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"i373 = 0";
    "if i372 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addc(int[],int[])>(r0, r1)";
    "i373 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i373 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"->"i373 = i373 + 1";
    "i373 = i373 + 1"->"if i373 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)";
    "if i373 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"->"i374 = 0";
    "if i373 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_addv(int[],int[],int)>(r0, r1, 15)";
    "i374 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i374 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"->"i374 = i374 + 1";
    "i374 = i374 + 1"->"if i374 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)";
    "if i374 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"->"i375 = 0";
    "if i374 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_adda(int[],int[],int[])>(r0, r1, r2)";
    "i375 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i375 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"->"i375 = i375 + 1";
    "i375 = i375 + 1"->"if i375 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)";
    "if i375 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"->"i376 = 0";
    "if i375 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subc(int[],int[])>(r0, r1)";
    "i376 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i376 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"->"i376 = i376 + 1";
    "i376 = i376 + 1"->"if i376 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)";
    "if i376 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"->"i377 = 0";
    "if i376 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_subv(int[],int[],int)>(r0, r1, 15)";
    "i377 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i377 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"->"i377 = i377 + 1";
    "i377 = i377 + 1"->"if i377 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)";
    "if i377 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"->"i378 = 0";
    "if i377 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_suba(int[],int[],int[])>(r0, r1, r2)";
    "i378 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i378 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"->"i378 = i378 + 1";
    "i378 = i378 + 1"->"if i378 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)";
    "if i378 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"->"i379 = 0";
    "if i378 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc(int[],int[])>(r0, r1)";
    "i379 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i379 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"->"i379 = i379 + 1";
    "i379 = i379 + 1"->"if i379 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)";
    "if i379 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"->"i380 = 0";
    "if i379 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, 15)";
    "i380 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i380 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"->"i380 = i380 + 1";
    "i380 = i380 + 1"->"if i380 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)";
    "if i380 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"->"i381 = 0";
    "if i380 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r2)";
    "i381 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i381 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"->"i381 = i381 + 1";
    "i381 = i381 + 1"->"if i381 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)";
    "if i381 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"->"i382 = 0";
    "if i381 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc(int[],int[])>(r0, r1)";
    "i382 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i382 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"->"i382 = i382 + 1";
    "i382 = i382 + 1"->"if i382 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)";
    "if i382 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"->"i383 = 0";
    "if i382 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, 15)";
    "i383 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i383 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"->"i383 = i383 + 1";
    "i383 = i383 + 1"->"if i383 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)";
    "if i383 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"->"i384 = 0";
    "if i383 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r2)";
    "i384 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i384 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"->"i384 = i384 + 1";
    "i384 = i384 + 1"->"if i384 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)";
    "if i384 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"->"i385 = 0";
    "if i384 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulc_n(int[],int[])>(r0, r1)";
    "i385 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i385 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"->"i385 = i385 + 1";
    "i385 = i385 + 1"->"if i385 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)";
    "if i385 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"->"i386 = 0";
    "if i385 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mulv(int[],int[],int)>(r0, r1, -15)";
    "i386 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i386 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"->"i386 = i386 + 1";
    "i386 = i386 + 1"->"if i386 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)";
    "if i386 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"->"i387 = 0";
    "if i386 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_mula(int[],int[],int[])>(r0, r1, r3)";
    "i387 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i387 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"->"i387 = i387 + 1";
    "i387 = i387 + 1"->"if i387 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)";
    "if i387 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"->"i388 = 0";
    "if i387 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divc_n(int[],int[])>(r0, r1)";
    "i388 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i388 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"->"i388 = i388 + 1";
    "i388 = i388 + 1"->"if i388 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)";
    "if i388 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"->"i389 = 0";
    "if i388 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_divv(int[],int[],int)>(r0, r1, -15)";
    "i389 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i389 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"->"i389 = i389 + 1";
    "i389 = i389 + 1"->"if i389 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)";
    "if i389 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"->"i390 = 0";
    "if i389 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_diva(int[],int[],int[])>(r0, r1, r3)";
    "i390 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i390 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"->"i390 = i390 + 1";
    "i390 = i390 + 1"->"if i390 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)";
    "if i390 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"->"i391 = 0";
    "if i390 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andc(int[],int[])>(r0, r1)";
    "i391 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i391 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"->"i391 = i391 + 1";
    "i391 = i391 + 1"->"if i391 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)";
    "if i391 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"->"i392 = 0";
    "if i391 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_andv(int[],int[],int)>(r0, r1, -327092431)";
    "i392 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i392 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"->"i392 = i392 + 1";
    "i392 = i392 + 1"->"if i392 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)";
    "if i392 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"->"i393 = 0";
    "if i392 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_anda(int[],int[],int[])>(r0, r1, r4)";
    "i393 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i393 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"->"i393 = i393 + 1";
    "i393 = i393 + 1"->"if i393 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)";
    "if i393 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"->"i394 = 0";
    "if i393 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orc(int[],int[])>(r0, r1)";
    "i394 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i394 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"->"i394 = i394 + 1";
    "i394 = i394 + 1"->"if i394 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)";
    "if i394 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"->"i395 = 0";
    "if i394 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_orv(int[],int[],int)>(r0, r1, -327092431)";
    "i395 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i395 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"->"i395 = i395 + 1";
    "i395 = i395 + 1"->"if i395 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)";
    "if i395 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"->"i396 = 0";
    "if i395 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_ora(int[],int[],int[])>(r0, r1, r4)";
    "i396 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i396 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"->"i396 = i396 + 1";
    "i396 = i396 + 1"->"if i396 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)";
    "if i396 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"->"i397 = 0";
    "if i396 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorc(int[],int[])>(r0, r1)";
    "i397 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i397 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"->"i397 = i397 + 1";
    "i397 = i397 + 1"->"if i397 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)";
    "if i397 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"->"i398 = 0";
    "if i397 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xorv(int[],int[],int)>(r0, r1, -327092431)";
    "i398 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i398 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"->"i398 = i398 + 1";
    "i398 = i398 + 1"->"if i398 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)";
    "if i398 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"->"i399 = 0";
    "if i398 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_xora(int[],int[],int[])>(r0, r1, r4)";
    "i399 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i399 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"->"i399 = i399 + 1";
    "i399 = i399 + 1"->"if i399 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)";
    "if i399 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"->"i400 = 0";
    "if i399 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc(int[],int[])>(r0, r1)";
    "i400 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"->"i400 = i400 + 1";
    "i400 = i400 + 1"->"if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)";
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"->"i401 = 0";
    "if i400 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 15)";
    "i401 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"->"i401 = i401 + 1";
    "i401 = i401 + 1"->"if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)";
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"->"i402 = 0";
    "if i401 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc(int[],int[])>(r0, r1)";
    "i402 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"->"i402 = i402 + 1";
    "i402 = i402 + 1"->"if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)";
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"->"i403 = 0";
    "if i402 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 15)";
    "i403 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"->"i403 = i403 + 1";
    "i403 = i403 + 1"->"if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)";
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"->"i404 = 0";
    "if i403 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac(int[],int[])>(r0, r1)";
    "i404 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"->"i404 = i404 + 1";
    "i404 = i404 + 1"->"if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)";
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"->"i405 = 0";
    "if i404 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 15)";
    "i405 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"->"i405 = i405 + 1";
    "i405 = i405 + 1"->"if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)";
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"->"i406 = 0";
    "if i405 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_n(int[],int[])>(r0, r1)";
    "i406 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"->"i406 = i406 + 1";
    "i406 = i406 + 1"->"if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)";
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"->"i407 = 0";
    "if i406 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -15)";
    "i407 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"->"i407 = i407 + 1";
    "i407 = i407 + 1"->"if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)";
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"->"i408 = 0";
    "if i407 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_n(int[],int[])>(r0, r1)";
    "i408 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"->"i408 = i408 + 1";
    "i408 = i408 + 1"->"if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)";
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"->"i409 = 0";
    "if i408 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -15)";
    "i409 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"->"i409 = i409 + 1";
    "i409 = i409 + 1"->"if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)";
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"->"i410 = 0";
    "if i409 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_n(int[],int[])>(r0, r1)";
    "i410 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"->"i410 = i410 + 1";
    "i410 = i410 + 1"->"if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)";
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"->"i411 = 0";
    "if i410 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -15)";
    "i411 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"->"i411 = i411 + 1";
    "i411 = i411 + 1"->"if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)";
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"->"i412 = 0";
    "if i411 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_o(int[],int[])>(r0, r1)";
    "i412 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"->"i412 = i412 + 1";
    "i412 = i412 + 1"->"if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)";
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"->"i413 = 0";
    "if i412 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, 32)";
    "i413 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"->"i413 = i413 + 1";
    "i413 = i413 + 1"->"if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)";
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"->"i414 = 0";
    "if i413 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_o(int[],int[])>(r0, r1)";
    "i414 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"->"i414 = i414 + 1";
    "i414 = i414 + 1"->"if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)";
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"->"i415 = 0";
    "if i414 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, 32)";
    "i415 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"->"i415 = i415 + 1";
    "i415 = i415 + 1"->"if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)";
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"->"i416 = 0";
    "if i415 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_o(int[],int[])>(r0, r1)";
    "i416 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"->"i416 = i416 + 1";
    "i416 = i416 + 1"->"if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)";
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"->"i417 = 0";
    "if i416 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, 32)";
    "i417 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"->"i417 = i417 + 1";
    "i417 = i417 + 1"->"if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)";
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"->"i418 = 0";
    "if i417 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_on(int[],int[])>(r0, r1)";
    "i418 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"->"i418 = i418 + 1";
    "i418 = i418 + 1"->"if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)";
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"->"i419 = 0";
    "if i418 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv(int[],int[],int)>(r0, r1, -32)";
    "i419 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"->"i419 = i419 + 1";
    "i419 = i419 + 1"->"if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)";
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"->"i420 = 0";
    "if i419 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_on(int[],int[])>(r0, r1)";
    "i420 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"->"i420 = i420 + 1";
    "i420 = i420 + 1"->"if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)";
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"->"i421 = 0";
    "if i420 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv(int[],int[],int)>(r0, r1, -32)";
    "i421 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"->"i421 = i421 + 1";
    "i421 = i421 + 1"->"if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)";
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"->"i422 = 0";
    "if i421 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_on(int[],int[])>(r0, r1)";
    "i422 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"->"i422 = i422 + 1";
    "i422 = i422 + 1"->"if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)";
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"->"i423 = 0";
    "if i422 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav(int[],int[],int)>(r0, r1, -32)";
    "i423 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"->"i423 = i423 + 1";
    "i423 = i423 + 1"->"if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)";
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"->"i424 = 0";
    "if i423 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_add(int[],int[])>(r0, r1)";
    "i424 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i424 = i424 + 1";
    "i424 = i424 + 1"->"if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i425 = 0";
    "if i424 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "i425 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"->"i425 = i425 + 1";
    "i425 = i425 + 1"->"if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)";
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"->"i426 = 0";
    "if i425 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_add(int[],int[])>(r0, r1)";
    "i426 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i426 = i426 + 1";
    "i426 = i426 + 1"->"if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"->"i427 = 0";
    "if i426 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_add(int[],int[],int)>(r0, r1, 2147483147)";
    "i427 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"->"i427 = i427 + 1";
    "i427 = i427 + 1"->"if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)";
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"->"i428 = 0";
    "if i427 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_add(int[],int[])>(r0, r1)";
    "i428 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"->"i428 = i428 + 1";
    "i428 = i428 + 1"->"if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)";
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"->"i429 = 0";
    "if i428 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_add(int[],int[],int)>(r0, r1, 2147483147)";
    "i429 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"->"i429 = i429 + 1";
    "i429 = i429 + 1"->"if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)";
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"->"i430 = 0";
    "if i429 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllc_and(int[],int[])>(r0, r1)";
    "i430 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"->"i430 = i430 + 1";
    "i430 = i430 + 1"->"if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"->"i431 = 0";
    "if i430 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_sllv_and(int[],int[],int)>(r0, r1, -327092431)";
    "i431 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"->"i431 = i431 + 1";
    "i431 = i431 + 1"->"if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)";
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"->"i432 = 0";
    "if i431 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlc_and(int[],int[])>(r0, r1)";
    "i432 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"->"i432 = i432 + 1";
    "i432 = i432 + 1"->"if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"->"i433 = 0";
    "if i432 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srlv_and(int[],int[],int)>(r0, r1, -327092431)";
    "i433 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"->"i433 = i433 + 1";
    "i433 = i433 + 1"->"if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)";
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"->"i434 = 0";
    "if i433 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srac_and(int[],int[])>(r0, r1)";
    "i434 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"->"i434 = i434 + 1";
    "i434 = i434 + 1"->"if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)";
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"->"i435 = 0";
    "if i434 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_srav_and(int[],int[],int)>(r0, r1, -327092431)";
    "i435 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"->"i435 = i435 + 1";
    "i435 = i435 + 1"->"if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)";
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"->"i436 = 0";
    "if i435 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2(long[],int[])>(r5, r1)";
    "i436 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"->"i436 = i436 + 1";
    "i436 = i436 + 1"->"if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)";
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"->"i437 = 0";
    "if i436 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2(int[],long[])>(r0, r5)";
    "i437 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"->"i437 = i437 + 1";
    "i437 = i437 + 1"->"if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)";
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"->"i438 = 0";
    "if i437 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_pack2_swap(long[],int[])>(r5, r1)";
    "i438 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)";
    "staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"->"i438 = i438 + 1";
    "i438 = i438 + 1"->"if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)";
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"->"return i300";
    "if i438 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)"->"staticinvoke <compiler.c2.cr6340864.TestIntVect: void test_unpack2_swap(int[],long[])>(r0, r5)";
}
