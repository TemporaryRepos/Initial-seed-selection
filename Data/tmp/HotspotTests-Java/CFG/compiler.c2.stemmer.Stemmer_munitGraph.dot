digraph "unitGraph" {
    "r0 := @this: compiler.c2.stemmer.Stemmer"
    "i2 = 0"
    "i3 = 0"
    "$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>"
    "if i3 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)"
    "return i2"
    "$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)"
    "if $z0 != 0 goto i3 = i3 + 1"
    "goto [?= i4 = i3 + 1]"
    "i3 = i3 + 1"
    "goto [?= $i0 = r0.<compiler.c2.stemmer.Stemmer: int j>]"
    "i4 = i3 + 1"
    "$i5 = r0.<compiler.c2.stemmer.Stemmer: int j>"
    "if i4 <= $i5 goto $z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)"
    "$z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)"
    "if $z1 == 0 goto i4 = i4 + 1"
    "goto [?= i6 = i4 + 1]"
    "i4 = i4 + 1"
    "goto [?= $i5 = r0.<compiler.c2.stemmer.Stemmer: int j>]"
    "i6 = i4 + 1"
    "i2 = i2 + 1"
    "$i1 = r0.<compiler.c2.stemmer.Stemmer: int j>"
    "if i6 <= $i1 goto $z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)"
    "$z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)"
    "if $z2 != 0 goto i6 = i6 + 1"
    "goto [?= i4 = i6 + 1]"
    "i6 = i6 + 1"
    "goto [?= $i1 = r0.<compiler.c2.stemmer.Stemmer: int j>]"
    "i4 = i6 + 1"
    "r0 := @this: compiler.c2.stemmer.Stemmer"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>"->"if i3 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)";
    "if i3 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)"->"return i2";
    "if i3 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)"->"$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)";
    "$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i3)"->"if $z0 != 0 goto i3 = i3 + 1";
    "if $z0 != 0 goto i3 = i3 + 1"->"goto [?= i4 = i3 + 1]";
    "if $z0 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "goto [?= i4 = i3 + 1]"->"i4 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = r0.<compiler.c2.stemmer.Stemmer: int j>]";
    "goto [?= $i0 = r0.<compiler.c2.stemmer.Stemmer: int j>]"->"$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "i4 = i3 + 1"->"$i5 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "$i5 = r0.<compiler.c2.stemmer.Stemmer: int j>"->"if i4 <= $i5 goto $z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)";
    "if i4 <= $i5 goto $z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)"->"return i2";
    "if i4 <= $i5 goto $z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)"->"$z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)";
    "$z1 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i4)"->"if $z1 == 0 goto i4 = i4 + 1";
    "if $z1 == 0 goto i4 = i4 + 1"->"goto [?= i6 = i4 + 1]";
    "if $z1 == 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "goto [?= i6 = i4 + 1]"->"i6 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i5 = r0.<compiler.c2.stemmer.Stemmer: int j>]";
    "goto [?= $i5 = r0.<compiler.c2.stemmer.Stemmer: int j>]"->"$i5 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "i6 = i4 + 1"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$i1 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "$i1 = r0.<compiler.c2.stemmer.Stemmer: int j>"->"if i6 <= $i1 goto $z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)";
    "if i6 <= $i1 goto $z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)"->"return i2";
    "if i6 <= $i1 goto $z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)"->"$z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)";
    "$z2 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i6)"->"if $z2 != 0 goto i6 = i6 + 1";
    "if $z2 != 0 goto i6 = i6 + 1"->"goto [?= i4 = i6 + 1]";
    "if $z2 != 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "goto [?= i4 = i6 + 1]"->"i4 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= $i1 = r0.<compiler.c2.stemmer.Stemmer: int j>]";
    "goto [?= $i1 = r0.<compiler.c2.stemmer.Stemmer: int j>]"->"$i1 = r0.<compiler.c2.stemmer.Stemmer: int j>";
    "i4 = i6 + 1"->"goto [?= $i5 = r0.<compiler.c2.stemmer.Stemmer: int j>]";
    "goto [?= $i5 = r0.<compiler.c2.stemmer.Stemmer: int j>]"->"$i5 = r0.<compiler.c2.stemmer.Stemmer: int j>";
}
