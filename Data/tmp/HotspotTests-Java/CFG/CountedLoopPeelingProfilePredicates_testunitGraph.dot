digraph "unitGraph" {
    "i1 := @parameter0: int"
    "r1 := @parameter1: boolean[]"
    "z1 := @parameter2: boolean"
    "r0 := @parameter3: boolean[]"
    "i0 := @parameter4: int"
    "i2 = 0"
    "goto [?= (branch)]"
    "$z0 = r0[i2]"
    "if $z0 == 0 goto i2 = i2 + i0"
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(i1, r1, z1)"
    "i2 = i2 + i0"
    "if i2 < 100 goto $z0 = r0[i2]"
    "return"
    "i1 := @parameter0: int"->"r1 := @parameter1: boolean[]";
    "r1 := @parameter1: boolean[]"->"z1 := @parameter2: boolean";
    "z1 := @parameter2: boolean"->"r0 := @parameter3: boolean[]";
    "r0 := @parameter3: boolean[]"->"i0 := @parameter4: int";
    "i0 := @parameter4: int"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 100 goto $z0 = r0[i2]";
    "$z0 = r0[i2]"->"if $z0 == 0 goto i2 = i2 + i0";
    "if $z0 == 0 goto i2 = i2 + i0"->"staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(i1, r1, z1)";
    "if $z0 == 0 goto i2 = i2 + i0"->"i2 = i2 + i0";
    "staticinvoke <CountedLoopPeelingProfilePredicates: void test_helper(int,boolean[],boolean)>(i1, r1, z1)"->"i2 = i2 + i0";
    "i2 = i2 + i0"->"if i2 < 100 goto $z0 = r0[i2]";
    "if i2 < 100 goto $z0 = r0[i2]"->"return";
    "if i2 < 100 goto $z0 = r0[i2]"->"$z0 = r0[i2]";
}
