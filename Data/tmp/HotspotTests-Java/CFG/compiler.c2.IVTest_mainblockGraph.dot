digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
s0 = 1024;
i1 = 500000;
i9 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i9 % s0;
<compiler.c2.IVTest: int paddedSize> = $i2;
$i3 = <compiler.c2.IVTest: int paddedSize>;
$r0 = newarray (byte)[$i3];
staticinvoke <compiler.c2.IVTest: void padV15(byte[])>($r0);
i9 = i9 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i9 < i1 goto $i2 = i9 % s0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i10 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i4 = i10 % s0;
<compiler.c2.IVTest: int paddedSize> = $i4;
$i5 = <compiler.c2.IVTest: int paddedSize>;
staticinvoke <compiler.c2.IVTest: void padV15_2(int)>($i5);
i10 = i10 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i10 < i1 goto $i4 = i10 % s0;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i11 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = i11 % s0;
<compiler.c2.IVTest: int paddedSize> = $i6;
staticinvoke <compiler.c2.IVTest: void padV15_3()>();
i11 = i11 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i11 < i1 goto $i6 = i11 % s0;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i12 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = i12 % s0;
<compiler.c2.IVTest: int paddedSize> = $i7;
staticinvoke <compiler.c2.IVTest: void padV15_4()>();
i12 = i12 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i12 < i1 goto $i7 = i12 % s0;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
i13 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 14 ] [succs: 14 ]
$i8 = i13 % s0;
<compiler.c2.IVTest: int paddedSize> = $i8;
staticinvoke <compiler.c2.IVTest: void padV15_5()>();
i13 = i13 + 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i13 < i1 goto $i8 = i13 % s0;
"
    "Block 15:
[preds: 14 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
s0 = 1024;
i1 = 500000;
i9 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i9 < i1 goto $i2 = i9 % s0;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i9 % s0;
<compiler.c2.IVTest: int paddedSize> = $i2;
$i3 = <compiler.c2.IVTest: int paddedSize>;
$r0 = newarray (byte)[$i3];
staticinvoke <compiler.c2.IVTest: void padV15(byte[])>($r0);
i9 = i9 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i9 < i1 goto $i2 = i9 % s0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i9 < i1 goto $i2 = i9 % s0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i10 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i9 < i1 goto $i2 = i9 % s0;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i9 % s0;
<compiler.c2.IVTest: int paddedSize> = $i2;
$i3 = <compiler.c2.IVTest: int paddedSize>;
$r0 = newarray (byte)[$i3];
staticinvoke <compiler.c2.IVTest: void padV15(byte[])>($r0);
i9 = i9 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i10 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i10 < i1 goto $i4 = i10 % s0;
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i4 = i10 % s0;
<compiler.c2.IVTest: int paddedSize> = $i4;
$i5 = <compiler.c2.IVTest: int paddedSize>;
staticinvoke <compiler.c2.IVTest: void padV15_2(int)>($i5);
i10 = i10 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i10 < i1 goto $i4 = i10 % s0;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i10 < i1 goto $i4 = i10 % s0;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i11 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i10 < i1 goto $i4 = i10 % s0;
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$i4 = i10 % s0;
<compiler.c2.IVTest: int paddedSize> = $i4;
$i5 = <compiler.c2.IVTest: int paddedSize>;
staticinvoke <compiler.c2.IVTest: void padV15_2(int)>($i5);
i10 = i10 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i11 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i11 < i1 goto $i6 = i11 % s0;
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = i11 % s0;
<compiler.c2.IVTest: int paddedSize> = $i6;
staticinvoke <compiler.c2.IVTest: void padV15_3()>();
i11 = i11 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i11 < i1 goto $i6 = i11 % s0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i11 < i1 goto $i6 = i11 % s0;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i12 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i11 < i1 goto $i6 = i11 % s0;
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$i6 = i11 % s0;
<compiler.c2.IVTest: int paddedSize> = $i6;
staticinvoke <compiler.c2.IVTest: void padV15_3()>();
i11 = i11 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i12 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i12 < i1 goto $i7 = i12 % s0;
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = i12 % s0;
<compiler.c2.IVTest: int paddedSize> = $i7;
staticinvoke <compiler.c2.IVTest: void padV15_4()>();
i12 = i12 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i12 < i1 goto $i7 = i12 % s0;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i12 < i1 goto $i7 = i12 % s0;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
i13 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i12 < i1 goto $i7 = i12 % s0;
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$i7 = i12 % s0;
<compiler.c2.IVTest: int paddedSize> = $i7;
staticinvoke <compiler.c2.IVTest: void padV15_4()>();
i12 = i12 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
i13 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i13 < i1 goto $i8 = i13 % s0;
";
    "Block 13:
[preds: 14 ] [succs: 14 ]
$i8 = i13 % s0;
<compiler.c2.IVTest: int paddedSize> = $i8;
staticinvoke <compiler.c2.IVTest: void padV15_5()>();
i13 = i13 + 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i13 < i1 goto $i8 = i13 % s0;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i13 < i1 goto $i8 = i13 % s0;
"->"Block 15:
[preds: 14 ] [succs: ]
return;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i13 < i1 goto $i8 = i13 % s0;
"->"Block 13:
[preds: 14 ] [succs: 14 ]
$i8 = i13 % s0;
<compiler.c2.IVTest: int paddedSize> = $i8;
staticinvoke <compiler.c2.IVTest: void padV15_5()>();
i13 = i13 + 1;
";
}
