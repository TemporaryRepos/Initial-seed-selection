digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: int[];
i4 = 0;
goto [?= $i6 = lengthof r0];
"
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
r2 = (int[]) $r1;
$i1 = r0[i4];
$i0 = r2[i4];
if $i1 == $i0 goto i4 = i4 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \");
i5 = 0;
goto [?= $i2 = lengthof r2];
"
    "Block 3:
[preds: 4 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$i3 = r2[i5];
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7);
i5 = i5 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i2 = lengthof r2;
if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println()>();
staticinvoke <java.lang.System: void exit(int)>(97);
"
    "Block 6:
[preds: 1 5 ] [succs: 7 ]
i4 = i4 + 1;
"
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
$i6 = lengthof r0;
if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
"
    "Block 8:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: int[];
i4 = 0;
goto [?= $i6 = lengthof r0];
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 ]
$i6 = lengthof r0;
if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
";
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
r2 = (int[]) $r1;
$i1 = r0[i4];
$i0 = r2[i4];
if $i1 == $i0 goto i4 = i4 + 1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \");
i5 = 0;
goto [?= $i2 = lengthof r2];
";
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
r2 = (int[]) $r1;
$i1 = r0[i4];
$i0 = r2[i4];
if $i1 == $i0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 1 5 ] [succs: 7 ]
i4 = i4 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \");
i5 = 0;
goto [?= $i2 = lengthof r2];
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i2 = lengthof r2;
if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 4 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$i3 = r2[i5];
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7);
i5 = i5 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i2 = lengthof r2;
if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i2 = lengthof r2;
if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println()>();
staticinvoke <java.lang.System: void exit(int)>(97);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
$i2 = lengthof r2;
if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 4 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \");
$i3 = r2[i5];
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7);
i5 = i5 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println()>();
staticinvoke <java.lang.System: void exit(int)>(97);
"->"Block 6:
[preds: 1 5 ] [succs: 7 ]
i4 = i4 + 1;
";
    "Block 6:
[preds: 1 5 ] [succs: 7 ]
i4 = i4 + 1;
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 ]
$i6 = lengthof r0;
if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
$i6 = lengthof r0;
if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
"->"Block 8:
[preds: 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 ]
$i6 = lengthof r0;
if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
"->"Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
r2 = (int[]) $r1;
$i1 = r0[i4];
$i0 = r2[i4];
if $i1 == $i0 goto i4 = i4 + 1;
";
}
