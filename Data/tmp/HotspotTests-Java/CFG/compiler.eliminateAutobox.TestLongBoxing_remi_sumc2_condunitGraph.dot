digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)"
    "i9 = 0"
    "goto [?= (branch)]"
    "$i0 = i9 & 1"
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"
    "$l4 = virtualinvoke $r0.<java.lang.Long: long longValue()>()"
    "$l5 = $l3 + $l4"
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)"
    "goto [?= i9 = i9 + 1]"
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l2 = $l1 + 2L"
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"
    "i9 = i9 + 1"
    "if i9 < 1000 goto $i0 = i9 & 1"
    "$l6 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "$l7 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l8 = $l6 + $l7"
    "return $l8"
    "r1 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"->"r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)";
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)"->"i9 = 0";
    "i9 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 < 1000 goto $i0 = i9 & 1";
    "$i0 = i9 & 1"->"if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>";
    "$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"->"$l4 = virtualinvoke $r0.<java.lang.Long: long longValue()>()";
    "$l4 = virtualinvoke $r0.<java.lang.Long: long longValue()>()"->"$l5 = $l3 + $l4";
    "$l5 = $l3 + $l4"->"r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)";
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)"->"goto [?= i9 = i9 + 1]";
    "goto [?= i9 = i9 + 1]"->"i9 = i9 + 1";
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l2 = $l1 + 2L";
    "$l2 = $l1 + 2L"->"r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)";
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"if i9 < 1000 goto $i0 = i9 & 1";
    "if i9 < 1000 goto $i0 = i9 & 1"->"$l6 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "if i9 < 1000 goto $i0 = i9 & 1"->"$i0 = i9 & 1";
    "$l6 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"$l7 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l7 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l8 = $l6 + $l7";
    "$l8 = $l6 + $l7"->"return $l8";
}
