digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 8 ]
r2 := @parameter0: compiler.escapeAnalysis.TestEABadMergeMem$Box;
r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box;
i0 := @parameter2: int;
i1 := @parameter3: int;
i2 := @parameter4: int;
z0 := @parameter5: boolean;
z1 := @parameter6: boolean;
$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box;
specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>();
r1 = $r0;
r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0;
r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1;
r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2;
staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>();
z2 = 0;
if z0 == 0 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 6 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 2:
[preds: 6 ] [succs: 3 4 ]
if z1 == 0 goto $f0 = (float) i5;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$f1 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1;
goto [?= i5 = i5 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$f0 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i5 = i5 + 1;
"
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i5 < 100 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
z2 = 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 10 ]
if z2 == 0 goto return 87;
"
    "Block 9:
[preds: 8 ] [succs: ]
$i4 = r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>;
$i3 = r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>;
i6 = $i4 + $i3;
staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>();
return i6;
"
    "Block 10:
[preds: 8 ] [succs: ]
return 87;
"
    "Block 0:
[preds: ] [succs: 1 8 ]
r2 := @parameter0: compiler.escapeAnalysis.TestEABadMergeMem$Box;
r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box;
i0 := @parameter2: int;
i1 := @parameter3: int;
i2 := @parameter4: int;
z0 := @parameter5: boolean;
z1 := @parameter6: boolean;
$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box;
specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>();
r1 = $r0;
r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0;
r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1;
r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2;
staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>();
z2 = 0;
if z0 == 0 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 6 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 0:
[preds: ] [succs: 1 8 ]
r2 := @parameter0: compiler.escapeAnalysis.TestEABadMergeMem$Box;
r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box;
i0 := @parameter2: int;
i1 := @parameter3: int;
i2 := @parameter4: int;
z0 := @parameter5: boolean;
z1 := @parameter6: boolean;
$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box;
specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>();
r1 = $r0;
r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0;
r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1;
r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2;
staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>();
z2 = 0;
if z0 == 0 goto (branch);
"->"Block 8:
[preds: 0 7 ] [succs: 9 10 ]
if z2 == 0 goto return 87;
";
    "Block 1:
[preds: 0 ] [succs: 6 ]
i5 = 0;
goto [?= (branch)];
"->"Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i5 < 100 goto (branch);
";
    "Block 2:
[preds: 6 ] [succs: 3 4 ]
if z1 == 0 goto $f0 = (float) i5;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$f1 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1;
goto [?= i5 = i5 + 1];
";
    "Block 2:
[preds: 6 ] [succs: 3 4 ]
if z1 == 0 goto $f0 = (float) i5;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$f0 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$f1 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1;
goto [?= i5 = i5 + 1];
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i5 = i5 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$f0 = (float) i5;
<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0;
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i5 = i5 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i5 = i5 + 1;
"->"Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i5 < 100 goto (branch);
";
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i5 < 100 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 8 ]
z2 = 1;
";
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i5 < 100 goto (branch);
"->"Block 2:
[preds: 6 ] [succs: 3 4 ]
if z1 == 0 goto $f0 = (float) i5;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
z2 = 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 10 ]
if z2 == 0 goto return 87;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 10 ]
if z2 == 0 goto return 87;
"->"Block 9:
[preds: 8 ] [succs: ]
$i4 = r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>;
$i3 = r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>;
i6 = $i4 + $i3;
staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>();
return i6;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 10 ]
if z2 == 0 goto return 87;
"->"Block 10:
[preds: 8 ] [succs: ]
return 87;
";
}
