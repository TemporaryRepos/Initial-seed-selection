digraph "unitGraph" {
    "r2 := @this: compiler.escapeAnalysis.Test6689060"
    "i0 := @parameter0: int"
    "$r0 = new compiler.escapeAnalysis.Test6689060$Point"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()"
    "r1 = $r0"
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3"
    "i8 = 0"
    "goto [?= (branch)]"
    "$i1 = i8 & 1"
    "if $i1 != 1 goto i8 = i8 + 1"
    "$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>"
    "$i3 = $i2 + 4"
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3"
    "i8 = i8 + 1"
    "if i8 < i0 goto $i1 = i8 & 1"
    "$i5 = 3 * i0"
    "$i4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>"
    "$i6 = $i5 + $i4"
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i6"
    "$i7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>"
    "return $i7"
    "r2 := @this: compiler.escapeAnalysis.Test6689060"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"$r0 = new compiler.escapeAnalysis.Test6689060$Point";
    "$r0 = new compiler.escapeAnalysis.Test6689060$Point"->"specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3";
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < i0 goto $i1 = i8 & 1";
    "$i1 = i8 & 1"->"if $i1 != 1 goto i8 = i8 + 1";
    "if $i1 != 1 goto i8 = i8 + 1"->"$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>";
    "if $i1 != 1 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$i2 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>"->"$i3 = $i2 + 4";
    "$i3 = $i2 + 4"->"r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3";
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = $i3"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < i0 goto $i1 = i8 & 1";
    "if i8 < i0 goto $i1 = i8 & 1"->"$i5 = 3 * i0";
    "if i8 < i0 goto $i1 = i8 & 1"->"$i1 = i8 & 1";
    "$i5 = 3 * i0"->"$i4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>";
    "$i4 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>"->"$i6 = $i5 + $i4";
    "$i6 = $i5 + $i4"->"r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i6";
    "r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i6"->"$i7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>";
    "$i7 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>"->"return $i7";
}
