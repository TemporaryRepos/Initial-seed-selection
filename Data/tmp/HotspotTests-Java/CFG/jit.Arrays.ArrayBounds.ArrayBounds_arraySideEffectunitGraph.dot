digraph "unitGraph" {
    "r0 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int[] aplIota(int)>(10)"
    "$r1 = new jit.Arrays.ArrayBounds.ArrayBounds$Foo"
    "specialinvoke $r1.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: void <init>(jit.Arrays.ArrayBounds.ArrayBounds$Foo)>(null)"
    "r2 = $r1"
    "r2.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a> = r0"
    "i0 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int arraySideEffectWork(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r2, 10)"
    "if i0 == 10 goto return"
    "$r3 = new nsk.share.TestFailure"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Array side effect test failed (\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>($r7)"
    "throw $r3"
    "return"
    "r0 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int[] aplIota(int)>(10)"->"$r1 = new jit.Arrays.ArrayBounds.ArrayBounds$Foo";
    "$r1 = new jit.Arrays.ArrayBounds.ArrayBounds$Foo"->"specialinvoke $r1.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: void <init>(jit.Arrays.ArrayBounds.ArrayBounds$Foo)>(null)";
    "specialinvoke $r1.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: void <init>(jit.Arrays.ArrayBounds.ArrayBounds$Foo)>(null)"->"r2 = $r1";
    "r2 = $r1"->"r2.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a> = r0";
    "r2.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a> = r0"->"i0 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int arraySideEffectWork(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r2, 10)";
    "i0 = staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: int arraySideEffectWork(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r2, 10)"->"if i0 == 10 goto return";
    "if i0 == 10 goto return"->"$r3 = new nsk.share.TestFailure";
    "if i0 == 10 goto return"->"return";
    "$r3 = new nsk.share.TestFailure"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Array side effect test failed (\")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Array side effect test failed (\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>($r7)";
    "specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>($r7)"->"throw $r3";
}
