digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r11 := @parameter0: java.lang.String[];
z0 = 0;
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
$i0 = r12.<compiler.c2.Test8007294: int i1>;
if $i0 != 100 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i4 = r12.<compiler.c2.Test8007294: int i2>;
if $i4 == 10 goto i5 = i5 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 6 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test1 obj.i1 = \");
$i1 = r12.<compiler.c2.Test8007294: int i1>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", obj.i2 = \");
$i2 = r12.<compiler.c2.Test8007294: int i2>;
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
z0 = 1;
goto [?= i6 = 0];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
i5 = i5 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i5 < 20000 goto r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
"
    "Block 6:
[preds: 3 5 ] [succs: 10 ]
i6 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 10 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
i7 = staticinvoke <compiler.c2.Test8007294: int test2(int)>(1);
if i7 == 2 goto i6 = i6 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 11 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test2 = \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
i6 = i6 + 1;
"
    "Block 10:
[preds: 6 9 ] [succs: 11 7 ]
if i6 < 20000 goto staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
"
    "Block 11:
[preds: 8 10 ] [succs: 12 13 ]
if z0 == 0 goto $r10 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
"
    "Block 14:
[preds: 12 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r11 := @parameter0: java.lang.String[];
z0 = 0;
i5 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i5 < 20000 goto r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
$i0 = r12.<compiler.c2.Test8007294: int i1>;
if $i0 != 100 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i4 = r12.<compiler.c2.Test8007294: int i2>;
if $i4 == 10 goto i5 = i5 + 1;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
$i0 = r12.<compiler.c2.Test8007294: int i1>;
if $i0 != 100 goto $r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 2 ] [succs: 6 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test1 obj.i1 = \");
$i1 = r12.<compiler.c2.Test8007294: int i1>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", obj.i2 = \");
$i2 = r12.<compiler.c2.Test8007294: int i2>;
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
z0 = 1;
goto [?= i6 = 0];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i4 = r12.<compiler.c2.Test8007294: int i2>;
if $i4 == 10 goto i5 = i5 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 6 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test1 obj.i1 = \");
$i1 = r12.<compiler.c2.Test8007294: int i1>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", obj.i2 = \");
$i2 = r12.<compiler.c2.Test8007294: int i2>;
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
z0 = 1;
goto [?= i6 = 0];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i4 = r12.<compiler.c2.Test8007294: int i2>;
if $i4 == 10 goto i5 = i5 + 1;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
i5 = i5 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 6 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test1 obj.i1 = \");
$i1 = r12.<compiler.c2.Test8007294: int i1>;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", obj.i2 = \");
$i2 = r12.<compiler.c2.Test8007294: int i2>;
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
z0 = 1;
goto [?= i6 = 0];
"->"Block 6:
[preds: 3 5 ] [succs: 10 ]
i6 = 0;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
i5 = i5 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i5 < 20000 goto r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i5 < 20000 goto r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
"->"Block 6:
[preds: 3 5 ] [succs: 10 ]
i6 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i5 < 20000 goto r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
r12 = staticinvoke <compiler.c2.Test8007294: compiler.c2.Test8007294 test1()>();
$i0 = r12.<compiler.c2.Test8007294: int i1>;
if $i0 != 100 goto $r1 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 3 5 ] [succs: 10 ]
i6 = 0;
goto [?= (branch)];
"->"Block 10:
[preds: 6 9 ] [succs: 11 7 ]
if i6 < 20000 goto staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
";
    "Block 7:
[preds: 10 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
i7 = staticinvoke <compiler.c2.Test8007294: int test2(int)>(1);
if i7 == 2 goto i6 = i6 + 1;
"->"Block 8:
[preds: 7 ] [succs: 11 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test2 = \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 10 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
i7 = staticinvoke <compiler.c2.Test8007294: int test2(int)>(1);
if i7 == 2 goto i6 = i6 + 1;
"->"Block 9:
[preds: 7 ] [succs: 10 ]
i6 = i6 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 11 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"FAILED test2 = \");
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
goto [?= (branch)];
"->"Block 11:
[preds: 8 10 ] [succs: 12 13 ]
if z0 == 0 goto $r10 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
i6 = i6 + 1;
"->"Block 10:
[preds: 6 9 ] [succs: 11 7 ]
if i6 < 20000 goto staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
";
    "Block 10:
[preds: 6 9 ] [succs: 11 7 ]
if i6 < 20000 goto staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
"->"Block 11:
[preds: 8 10 ] [succs: 12 13 ]
if z0 == 0 goto $r10 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 10:
[preds: 6 9 ] [succs: 11 7 ]
if i6 < 20000 goto staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
"->"Block 7:
[preds: 10 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8007294: int test2(int)>(0);
i7 = staticinvoke <compiler.c2.Test8007294: int test2(int)>(1);
if i7 == 2 goto i6 = i6 + 1;
";
    "Block 11:
[preds: 8 10 ] [succs: 12 13 ]
if z0 == 0 goto $r10 = <java.lang.System: java.io.PrintStream out>;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
";
    "Block 11:
[preds: 8 10 ] [succs: 12 13 ]
if z0 == 0 goto $r10 = <java.lang.System: java.io.PrintStream out>;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
"->"Block 14:
[preds: 12 13 ] [succs: ]
return;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
"->"Block 14:
[preds: 12 13 ] [succs: ]
return;
";
}
