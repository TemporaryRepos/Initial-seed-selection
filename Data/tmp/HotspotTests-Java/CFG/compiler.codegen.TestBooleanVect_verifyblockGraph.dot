digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return 0;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream err>;
$r0 = new java.lang.StringBuilder;
$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
return 1;
"
    "Block 2:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return 0;
"->"Block 1:
[preds: 0 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream err>;
$r0 = new java.lang.StringBuilder;
$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r10);
return 1;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return 0;
"->"Block 2:
[preds: 0 ] [succs: ]
return 0;
";
}
