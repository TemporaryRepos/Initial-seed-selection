digraph "unitGraph" {
    "r19 := @parameter0: java.lang.String[]"
    "$i0 = <CancellableThreadTest: int THREADPAIRS>"
    "r0 = newarray (java.lang.Thread)[$i0]"
    "$i1 = <CancellableThreadTest: int THREADPAIRS>"
    "r1 = newarray (Canceller)[$i1]"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Running with \")"
    "$i2 = <CancellableThreadTest: int THREADPAIRS>"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" thread pairs\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "i5 = 0"
    "goto [?= $i3 = <CancellableThreadTest: int THREADPAIRS>]"
    "$r7 = new Canceller"
    "specialinvoke $r7.<Canceller: void <init>(int)>(i5)"
    "r1[i5] = $r7"
    "$r8 = new java.lang.Thread"
    "$r9 = r1[i5]"
    "specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)"
    "r0[i5] = $r8"
    "$r10 = r0[i5]"
    "virtualinvoke $r10.<java.lang.Thread: void start()>()"
    "i5 = i5 + 1"
    "$i3 = <CancellableThreadTest: int THREADPAIRS>"
    "if i5 < $i3 goto $r7 = new Canceller"
    "i6 = 0"
    "goto [?= $i4 = <CancellableThreadTest: int THREADPAIRS>]"
    "$r11 = r0[i6]"
    "virtualinvoke $r11.<java.lang.Thread: void join()>()"
    "goto [?= $r12 = r1[i6]]"
    "$r18 := @caughtexception"
    "$r12 = r1[i6]"
    "$z0 = $r12.<Canceller: boolean failed>"
    "if $z0 == 0 goto i6 = i6 + 1"
    "$r13 = new java.lang.RuntimeException"
    "$r14 = new java.lang.StringBuilder"
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" Test failed in \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" th pair. See error messages above.\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)"
    "throw $r13"
    "i6 = i6 + 1"
    "$i4 = <CancellableThreadTest: int THREADPAIRS>"
    "if i6 < $i4 goto $r11 = r0[i6]"
    "return"
    "r19 := @parameter0: java.lang.String[]"->"$i0 = <CancellableThreadTest: int THREADPAIRS>";
    "$i0 = <CancellableThreadTest: int THREADPAIRS>"->"r0 = newarray (java.lang.Thread)[$i0]";
    "r0 = newarray (java.lang.Thread)[$i0]"->"$i1 = <CancellableThreadTest: int THREADPAIRS>";
    "$i1 = <CancellableThreadTest: int THREADPAIRS>"->"r1 = newarray (Canceller)[$i1]";
    "r1 = newarray (Canceller)[$i1]"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Running with \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Running with \")"->"$i2 = <CancellableThreadTest: int THREADPAIRS>";
    "$i2 = <CancellableThreadTest: int THREADPAIRS>"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" thread pairs\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" thread pairs\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"i5 = 0";
    "i5 = 0"->"goto [?= $i3 = <CancellableThreadTest: int THREADPAIRS>]";
    "goto [?= $i3 = <CancellableThreadTest: int THREADPAIRS>]"->"$i3 = <CancellableThreadTest: int THREADPAIRS>";
    "$r7 = new Canceller"->"specialinvoke $r7.<Canceller: void <init>(int)>(i5)";
    "specialinvoke $r7.<Canceller: void <init>(int)>(i5)"->"r1[i5] = $r7";
    "r1[i5] = $r7"->"$r8 = new java.lang.Thread";
    "$r8 = new java.lang.Thread"->"$r9 = r1[i5]";
    "$r9 = r1[i5]"->"specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)";
    "specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)"->"r0[i5] = $r8";
    "r0[i5] = $r8"->"$r10 = r0[i5]";
    "$r10 = r0[i5]"->"virtualinvoke $r10.<java.lang.Thread: void start()>()";
    "virtualinvoke $r10.<java.lang.Thread: void start()>()"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i3 = <CancellableThreadTest: int THREADPAIRS>";
    "$i3 = <CancellableThreadTest: int THREADPAIRS>"->"if i5 < $i3 goto $r7 = new Canceller";
    "if i5 < $i3 goto $r7 = new Canceller"->"i6 = 0";
    "if i5 < $i3 goto $r7 = new Canceller"->"$r7 = new Canceller";
    "i6 = 0"->"goto [?= $i4 = <CancellableThreadTest: int THREADPAIRS>]";
    "goto [?= $i4 = <CancellableThreadTest: int THREADPAIRS>]"->"$i4 = <CancellableThreadTest: int THREADPAIRS>";
    "$r11 = r0[i6]"->"virtualinvoke $r11.<java.lang.Thread: void join()>()";
    "$r11 = r0[i6]"->"$r18 := @caughtexception";
    "virtualinvoke $r11.<java.lang.Thread: void join()>()"->"goto [?= $r12 = r1[i6]]";
    "virtualinvoke $r11.<java.lang.Thread: void join()>()"->"$r18 := @caughtexception";
    "goto [?= $r12 = r1[i6]]"->"$r12 = r1[i6]";
    "$r18 := @caughtexception"->"$r12 = r1[i6]";
    "$r12 = r1[i6]"->"$z0 = $r12.<Canceller: boolean failed>";
    "$z0 = $r12.<Canceller: boolean failed>"->"if $z0 == 0 goto i6 = i6 + 1";
    "if $z0 == 0 goto i6 = i6 + 1"->"$r13 = new java.lang.RuntimeException";
    "if $z0 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r13 = new java.lang.RuntimeException"->"$r14 = new java.lang.StringBuilder";
    "$r14 = new java.lang.StringBuilder"->"specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" Test failed in \")";
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" Test failed in \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" th pair. See error messages above.\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" th pair. See error messages above.\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)";
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)"->"throw $r13";
    "i6 = i6 + 1"->"$i4 = <CancellableThreadTest: int THREADPAIRS>";
    "$i4 = <CancellableThreadTest: int THREADPAIRS>"->"if i6 < $i4 goto $r11 = r0[i6]";
    "if i6 < $i4 goto $r11 = r0[i6]"->"return";
    "if i6 < $i4 goto $r11 = r0[i6]"->"$r11 = r0[i6]";
    "if i6 < $i4 goto $r11 = r0[i6]"->"$r18 := @caughtexception";
}
