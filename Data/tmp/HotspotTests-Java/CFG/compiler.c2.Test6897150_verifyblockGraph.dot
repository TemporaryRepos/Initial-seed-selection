digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
$i2 = i1 - 1;
if i0 == $i2 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected: \");
$i3 = i1 - 1;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Actual  : \");
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);
staticinvoke <java.lang.System: void exit(int)>(97);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
$i2 = i1 - 1;
if i0 == $i2 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected: \");
$i3 = i1 - 1;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Actual  : \");
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);
staticinvoke <java.lang.System: void exit(int)>(97);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i1 := @parameter0: int;
i0 := @parameter1: int;
$i2 = i1 - 1;
if i0 == $i2 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Expected: \");
$i3 = i1 - 1;
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Actual  : \");
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);
staticinvoke <java.lang.System: void exit(int)>(97);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
