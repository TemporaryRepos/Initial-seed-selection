digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = <compiler.floatingpoint.ModNaN: double[][] bad>;
r2 = $r0;
i0 = lengthof $r0;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r3 = r2[i1];
d0 = r3[0];
d1 = r3[1];
d2 = d0 % d1;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d2);
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto r3 = r2[i1];
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r1 = <compiler.floatingpoint.ModNaN: double[][] good>;
r4 = $r1;
i2 = lengthof $r1;
i3 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
r5 = r4[i3];
d3 = r5[0];
d4 = r5[1];
d5 = d3 % d4;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d5);
i3 = i3 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < i2 goto r5 = r4[i3];
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = <compiler.floatingpoint.ModNaN: double[][] bad>;
r2 = $r0;
i0 = lengthof $r0;
i1 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto r3 = r2[i1];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r3 = r2[i1];
d0 = r3[0];
d1 = r3[1];
d2 = d0 % d1;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d2);
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto r3 = r2[i1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto r3 = r2[i1];
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r1 = <compiler.floatingpoint.ModNaN: double[][] good>;
r4 = $r1;
i2 = lengthof $r1;
i3 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < i0 goto r3 = r2[i1];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r3 = r2[i1];
d0 = r3[0];
d1 = r3[1];
d2 = d0 % d1;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d2);
i1 = i1 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r1 = <compiler.floatingpoint.ModNaN: double[][] good>;
r4 = $r1;
i2 = lengthof $r1;
i3 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < i2 goto r5 = r4[i3];
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
r5 = r4[i3];
d3 = r5[0];
d4 = r5[1];
d5 = d3 % d4;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d5);
i3 = i3 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < i2 goto r5 = r4[i3];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < i2 goto r5 = r4[i3];
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i3 < i2 goto r5 = r4[i3];
"->"Block 4:
[preds: 5 ] [succs: 5 ]
r5 = r4[i3];
d3 = r5[0];
d4 = r5[1];
d5 = d3 % d4;
staticinvoke <compiler.floatingpoint.ModNaN: void check(double)>(d5);
i3 = i3 + 1;
";
}
