digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "i1 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)"
    "i1 = i1 + 1"
    "if i1 < 42 goto staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)"
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test2()>()"
    "r2 = newarray (int)[8]"
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test3(int[])>(r2)"
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test4(int[],boolean)>(r2, 0)"
    "staticinvoke <compiler.loopopts.TestOverunrolling: int test5(int[])>(r2)"
    "return"
    "r1 := @parameter0: java.lang.String[]"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 42 goto staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)";
    "staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 42 goto staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)";
    "if i1 < 42 goto staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)"->"staticinvoke <compiler.loopopts.TestOverunrolling: void test2()>()";
    "if i1 < 42 goto staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)"->"staticinvoke <compiler.loopopts.TestOverunrolling: java.lang.Object test1(int)>(i1)";
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test2()>()"->"r2 = newarray (int)[8]";
    "r2 = newarray (int)[8]"->"staticinvoke <compiler.loopopts.TestOverunrolling: void test3(int[])>(r2)";
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test3(int[])>(r2)"->"staticinvoke <compiler.loopopts.TestOverunrolling: void test4(int[],boolean)>(r2, 0)";
    "staticinvoke <compiler.loopopts.TestOverunrolling: void test4(int[],boolean)>(r2, 0)"->"staticinvoke <compiler.loopopts.TestOverunrolling: int test5(int[])>(r2)";
    "staticinvoke <compiler.loopopts.TestOverunrolling: int test5(int[])>(r2)"->"return";
}
