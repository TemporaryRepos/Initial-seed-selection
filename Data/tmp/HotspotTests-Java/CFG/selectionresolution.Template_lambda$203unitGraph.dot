digraph "unitGraph" {
    "r1 := @parameter0: selectionresolution.MethodData$Access"
    "r2 := @parameter1: selectionresolution.MethodData$Context"
    "r5 := @parameter2: selectionresolution.ClassData$Package"
    "r8 := @parameter3: selectionresolution.Template$Kind"
    "r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder"
    "$r0 = new selectionresolution.MethodData"
    "specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2)"
    "r3 = $r0"
    "$r4 = new selectionresolution.ClassData"
    "specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3)"
    "r6 = $r4"
    "i2 = -1"
    "$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>()"
    "$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>()"
    "$i1 = $r7[$i0]"
    "tableswitch($i1) {     case 1: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>; }"
    "i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6)"
    "goto [?= $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>]"
    "i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6)"
    "$r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "$i3 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "virtualinvoke $r10.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, $i3)"
    "return"
    "r1 := @parameter0: selectionresolution.MethodData$Access"->"r2 := @parameter1: selectionresolution.MethodData$Context";
    "r2 := @parameter1: selectionresolution.MethodData$Context"->"r5 := @parameter2: selectionresolution.ClassData$Package";
    "r5 := @parameter2: selectionresolution.ClassData$Package"->"r8 := @parameter3: selectionresolution.Template$Kind";
    "r8 := @parameter3: selectionresolution.Template$Kind"->"r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder";
    "r9 := @parameter4: selectionresolution.SelectionResolutionTestCase$Builder"->"$r0 = new selectionresolution.MethodData";
    "$r0 = new selectionresolution.MethodData"->"specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2)";
    "specialinvoke $r0.<selectionresolution.MethodData: void <init>(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>(r1, r2)"->"r3 = $r0";
    "r3 = $r0"->"$r4 = new selectionresolution.ClassData";
    "$r4 = new selectionresolution.ClassData"->"specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3)";
    "specialinvoke $r4.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r3)"->"r6 = $r4";
    "r6 = $r4"->"i2 = -1";
    "i2 = -1"->"$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>()";
    "$r7 = staticinvoke <selectionresolution.Template: int[] $SWITCH_TABLE$selectionresolution$Template$Kind()>()"->"$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>()";
    "$i0 = virtualinvoke r8.<selectionresolution.Template$Kind: int ordinal()>()"->"$i1 = $r7[$i0]";
    "$i1 = $r7[$i0]"->"tableswitch($i1) {     case 1: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>; }";
    "tableswitch($i1) {     case 1: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>; }"->"i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6)";
    "tableswitch($i1) {     case 1: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>; }"->"i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6)";
    "tableswitch($i1) {     case 1: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6);     case 2: goto i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6);     default: goto $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>; }"->"$r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r6)"->"goto [?= $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>]";
    "goto [?= $r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>]"->"$r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "i2 = virtualinvoke r9.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r6)"->"$r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r10 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"$i3 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i3 = r9.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"virtualinvoke $r10.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, $i3)";
    "virtualinvoke $r10.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, $i3)"->"return";
}
