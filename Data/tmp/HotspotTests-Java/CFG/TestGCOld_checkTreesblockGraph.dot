digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
$r0 = <TestGCOld: TreeNode[] trees>;
i0 = lengthof $r0;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$r1 = <TestGCOld: TreeNode[] trees>;
r2 = $r1[i3];
i1 = staticinvoke <TestGCOld: int height(TreeNode)>(r2);
i2 = staticinvoke <TestGCOld: int shortestPath(TreeNode)>(r2);
if i1 != 14 goto $r4 = <java.lang.System: java.io.PrintStream err>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 14 goto i3 = i3 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"*****BUG: \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i3 = i3 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i3 < i0 goto $r1 = <TestGCOld: TreeNode[] trees>;
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
$r0 = <TestGCOld: TreeNode[] trees>;
i0 = lengthof $r0;
i3 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i3 < i0 goto $r1 = <TestGCOld: TreeNode[] trees>;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$r1 = <TestGCOld: TreeNode[] trees>;
r2 = $r1[i3];
i1 = staticinvoke <TestGCOld: int height(TreeNode)>(r2);
i2 = staticinvoke <TestGCOld: int shortestPath(TreeNode)>(r2);
if i1 != 14 goto $r4 = <java.lang.System: java.io.PrintStream err>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 14 goto i3 = i3 + 1;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$r1 = <TestGCOld: TreeNode[] trees>;
r2 = $r1[i3];
i1 = staticinvoke <TestGCOld: int height(TreeNode)>(r2);
i2 = staticinvoke <TestGCOld: int shortestPath(TreeNode)>(r2);
if i1 != 14 goto $r4 = <java.lang.System: java.io.PrintStream err>;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"*****BUG: \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 14 goto i3 = i3 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"*****BUG: \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i2 == 14 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i3 = i3 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream err>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"*****BUG: \");
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i3 = i3 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i3 = i3 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i3 < i0 goto $r1 = <TestGCOld: TreeNode[] trees>;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i3 < i0 goto $r1 = <TestGCOld: TreeNode[] trees>;
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i3 < i0 goto $r1 = <TestGCOld: TreeNode[] trees>;
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$r1 = <TestGCOld: TreeNode[] trees>;
r2 = $r1[i3];
i1 = staticinvoke <TestGCOld: int height(TreeNode)>(r2);
i2 = staticinvoke <TestGCOld: int shortestPath(TreeNode)>(r2);
if i1 != 14 goto $r4 = <java.lang.System: java.io.PrintStream err>;
";
}
