digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i8 := @parameter0: int;
i9 := @parameter1: int;
i10 := @parameter2: int;
i11 := @parameter3: int;
i12 := @parameter4: int;
i13 := @parameter5: int;
$i1 = <compiler.c2.Test7048332: int last>;
$i0 = <compiler.c2.Test7048332: int first>;
if $i1 < $i0 goto $i3 = <compiler.c2.Test7048332: int last>;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = <compiler.c2.Test7048332: int last>;
$i6 = <compiler.c2.Test7048332: int first>;
i14 = $i7 - $i6;
goto [?= return i14];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = <compiler.c2.Test7048332: int last>;
$i2 = <compiler.c2.Test7048332: int first>;
$i5 = $i3 - $i2;
$i4 = <compiler.c2.Test7048332: int capacity>;
i14 = $i5 + $i4;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
return i14;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i8 := @parameter0: int;
i9 := @parameter1: int;
i10 := @parameter2: int;
i11 := @parameter3: int;
i12 := @parameter4: int;
i13 := @parameter5: int;
$i1 = <compiler.c2.Test7048332: int last>;
$i0 = <compiler.c2.Test7048332: int first>;
if $i1 < $i0 goto $i3 = <compiler.c2.Test7048332: int last>;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = <compiler.c2.Test7048332: int last>;
$i6 = <compiler.c2.Test7048332: int first>;
i14 = $i7 - $i6;
goto [?= return i14];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i8 := @parameter0: int;
i9 := @parameter1: int;
i10 := @parameter2: int;
i11 := @parameter3: int;
i12 := @parameter4: int;
i13 := @parameter5: int;
$i1 = <compiler.c2.Test7048332: int last>;
$i0 = <compiler.c2.Test7048332: int first>;
if $i1 < $i0 goto $i3 = <compiler.c2.Test7048332: int last>;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = <compiler.c2.Test7048332: int last>;
$i2 = <compiler.c2.Test7048332: int first>;
$i5 = $i3 - $i2;
$i4 = <compiler.c2.Test7048332: int capacity>;
i14 = $i5 + $i4;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$i7 = <compiler.c2.Test7048332: int last>;
$i6 = <compiler.c2.Test7048332: int first>;
i14 = $i7 - $i6;
goto [?= return i14];
"->"Block 3:
[preds: 1 2 ] [succs: ]
return i14;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = <compiler.c2.Test7048332: int last>;
$i2 = <compiler.c2.Test7048332: int first>;
$i5 = $i3 - $i2;
$i4 = <compiler.c2.Test7048332: int capacity>;
i14 = $i5 + $i4;
"->"Block 3:
[preds: 1 2 ] [succs: ]
return i14;
";
}
