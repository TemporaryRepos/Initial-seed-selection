digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"
    "i5 = 0"
    "goto [?= (branch)]"
    "$i0 = i5 & 1"
    "if $i0 != 0 goto i5 = i5 + 1"
    "$l1 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"
    "$l2 = virtualinvoke $r0.<java.lang.Long: long longValue()>()"
    "$l3 = $l1 + $l2"
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)"
    "i5 = i5 + 1"
    "if i5 < 1000 goto $i0 = i5 & 1"
    "$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "return $l4"
    "r1 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 1000 goto $i0 = i5 & 1";
    "$i0 = i5 & 1"->"if $i0 != 0 goto i5 = i5 + 1";
    "if $i0 != 0 goto i5 = i5 + 1"->"$l1 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "if $i0 != 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$l1 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>";
    "$r0 = <compiler.eliminateAutobox.TestLongBoxing: java.lang.Long ibc>"->"$l2 = virtualinvoke $r0.<java.lang.Long: long longValue()>()";
    "$l2 = virtualinvoke $r0.<java.lang.Long: long longValue()>()"->"$l3 = $l1 + $l2";
    "$l3 = $l1 + $l2"->"r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)";
    "r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 1000 goto $i0 = i5 & 1";
    "if i5 < 1000 goto $i0 = i5 & 1"->"$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "if i5 < 1000 goto $i0 = i5 & 1"->"$i0 = i5 & 1";
    "$l4 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"return $l4";
}
