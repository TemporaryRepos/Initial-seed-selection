digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "z0 = 1"
    "i4 = 0"
    "goto [?= (branch)]"
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$l1 = $r0[i4]"
    "$l0 = (long) i4"
    "$b2 = $l1 cmp $l0"
    "if $b2 == 0 goto i4 = i4 + 1"
    "z0 = 0"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)"
    "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"
    "$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "$l3 = $r8[i4]"
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "i4 = i4 + 1"
    "if i4 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"
    "return z0"
    "r2 := @parameter0: java.lang.String"->"z0 = 1";
    "z0 = 1"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$l1 = $r0[i4]";
    "$l1 = $r0[i4]"->"$l0 = (long) i4";
    "$l0 = (long) i4"->"$b2 = $l1 cmp $l0";
    "$b2 = $l1 cmp $l0"->"if $b2 == 0 goto i4 = i4 + 1";
    "if $b2 == 0 goto i4 = i4 + 1"->"z0 = 0";
    "if $b2 == 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "z0 = 0"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)";
    "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)"->"$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\")";
    "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"->"$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$l3 = $r8[i4]";
    "$l3 = $r8[i4]"->"$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3)";
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
    "if i4 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"return z0";
    "if i4 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>"->"$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>";
}
