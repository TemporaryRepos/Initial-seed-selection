digraph "unitGraph" {
    "r0 := @parameter0: byte[]"
    "r1 := @parameter1: byte[]"
    "b2 := @parameter2: byte"
    "b4 := @parameter3: byte"
    "i6 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$i3 = i6 + 3"
    "r0[$i3] = b2"
    "$i5 = i6 + 3"
    "r1[$i5] = b4"
    "i6 = i6 + 1"
    "$i0 = lengthof r0"
    "$i1 = $i0 - 3"
    "if i6 < $i1 goto $i3 = i6 + 3"
    "return"
    "r0 := @parameter0: byte[]"->"r1 := @parameter1: byte[]";
    "r1 := @parameter1: byte[]"->"b2 := @parameter2: byte";
    "b2 := @parameter2: byte"->"b4 := @parameter3: byte";
    "b4 := @parameter3: byte"->"i6 = 0";
    "i6 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$i3 = i6 + 3"->"r0[$i3] = b2";
    "r0[$i3] = b2"->"$i5 = i6 + 3";
    "$i5 = i6 + 3"->"r1[$i5] = b4";
    "r1[$i5] = b4"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"$i1 = $i0 - 3";
    "$i1 = $i0 - 3"->"if i6 < $i1 goto $i3 = i6 + 3";
    "if i6 < $i1 goto $i3 = i6 + 3"->"return";
    "if i6 < $i1 goto $i3 = i6 + 3"->"$i3 = i6 + 3";
}
