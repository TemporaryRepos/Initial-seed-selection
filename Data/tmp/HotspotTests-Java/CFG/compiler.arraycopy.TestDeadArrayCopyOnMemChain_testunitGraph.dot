digraph "unitGraph" {
    "i0 := @parameter0: int"
    "z0 := @parameter1: boolean"
    "r0 = newarray (java.lang.Object)[10]"
    "r1 = newarray (java.lang.Object)[10]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10)"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "if z0 == 0 goto return"
    "staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1)"
    "return"
    "i0 := @parameter0: int"->"z0 := @parameter1: boolean";
    "z0 := @parameter1: boolean"->"r0 = newarray (java.lang.Object)[10]";
    "r0 = newarray (java.lang.Object)[10]"->"r1 = newarray (java.lang.Object)[10]";
    "r1 = newarray (java.lang.Object)[10]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10)";
    "r1 = newarray (java.lang.Object)[10]"->"$r2 := @caughtexception";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10)"->"goto [?= return]";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10)"->"$r2 := @caughtexception";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"if z0 == 0 goto return";
    "if z0 == 0 goto return"->"staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1)";
    "if z0 == 0 goto return"->"return";
    "staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1)"->"return";
}
