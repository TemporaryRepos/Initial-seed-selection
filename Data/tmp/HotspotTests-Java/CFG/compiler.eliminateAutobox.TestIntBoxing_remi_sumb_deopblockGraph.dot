digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$i0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>(1);
r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2);
r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
i5 = i5 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 1000 goto $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>();
$i4 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
return $i4;
"
    "Block 0:
[preds: ] [succs: 2 ]
$i0 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>(1);
r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
i5 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 1000 goto $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2);
r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
i5 = i5 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 1000 goto $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 1000 goto $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
"->"Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestIntBoxing: void dummy()>();
$i4 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
return $i4;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 1000 goto $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$i3 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int foo(int)>($i2);
r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
i5 = i5 + 1;
";
}
