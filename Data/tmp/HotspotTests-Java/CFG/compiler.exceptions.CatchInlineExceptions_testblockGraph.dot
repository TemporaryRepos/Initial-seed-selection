digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <compiler.exceptions.CatchInlineExceptions: void foo(int)>(i0);
"
    "Block 2:
[preds: 1 ] [succs: 8 ]
goto [?= return];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r0 := @caughtexception;
r1 = $r0;
$z0 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception1;
if $z0 == 0 goto $z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
"
    "Block 4:
[preds: 3 ] [succs: 7 ]
$i3 = <compiler.exceptions.CatchInlineExceptions: int counter1>;
$i4 = $i3 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter1> = $i4;
goto [?= $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
if $z1 == 0 goto $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i1 = <compiler.exceptions.CatchInlineExceptions: int counter2>;
$i2 = $i1 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter2> = $i2;
"
    "Block 7:
[preds: 4 5 6 ] [succs: ]
$i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
$i6 = $i5 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter> = $i6;
throw r1;
"
    "Block 8:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <compiler.exceptions.CatchInlineExceptions: void foo(int)>(i0);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r0 := @caughtexception;
r1 = $r0;
$z0 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception1;
if $z0 == 0 goto $z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <compiler.exceptions.CatchInlineExceptions: void foo(int)>(i0);
"->"Block 2:
[preds: 1 ] [succs: 8 ]
goto [?= return];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <compiler.exceptions.CatchInlineExceptions: void foo(int)>(i0);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r0 := @caughtexception;
r1 = $r0;
$z0 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception1;
if $z0 == 0 goto $z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
";
    "Block 2:
[preds: 1 ] [succs: 8 ]
goto [?= return];
"->"Block 8:
[preds: 2 ] [succs: ]
return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r0 := @caughtexception;
r1 = $r0;
$z0 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception1;
if $z0 == 0 goto $z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
"->"Block 4:
[preds: 3 ] [succs: 7 ]
$i3 = <compiler.exceptions.CatchInlineExceptions: int counter1>;
$i4 = $i3 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter1> = $i4;
goto [?= $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>];
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r0 := @caughtexception;
r1 = $r0;
$z0 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception1;
if $z0 == 0 goto $z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
if $z1 == 0 goto $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
";
    "Block 4:
[preds: 3 ] [succs: 7 ]
$i3 = <compiler.exceptions.CatchInlineExceptions: int counter1>;
$i4 = $i3 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter1> = $i4;
goto [?= $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>];
"->"Block 7:
[preds: 4 5 6 ] [succs: ]
$i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
$i6 = $i5 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter> = $i6;
throw r1;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
if $z1 == 0 goto $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$i1 = <compiler.exceptions.CatchInlineExceptions: int counter2>;
$i2 = $i1 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter2> = $i2;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = r1 instanceof compiler.exceptions.CatchInlineExceptions$Exception2;
if $z1 == 0 goto $i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
"->"Block 7:
[preds: 4 5 6 ] [succs: ]
$i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
$i6 = $i5 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter> = $i6;
throw r1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i1 = <compiler.exceptions.CatchInlineExceptions: int counter2>;
$i2 = $i1 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter2> = $i2;
"->"Block 7:
[preds: 4 5 6 ] [succs: ]
$i5 = <compiler.exceptions.CatchInlineExceptions: int counter>;
$i6 = $i5 + 1;
<compiler.exceptions.CatchInlineExceptions: int counter> = $i6;
throw r1;
";
}
