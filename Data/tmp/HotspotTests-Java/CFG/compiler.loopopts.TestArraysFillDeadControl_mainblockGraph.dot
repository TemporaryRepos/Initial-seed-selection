digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r0 = newarray (int)[2];
i0 = <compiler.loopopts.TestArraysFillDeadControl: int i>;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, 1);
$i1 = 1 + i0;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, $i1);
staticinvoke <compiler.loopopts.TestArraysFillDeadControl: void dont_inline()>();
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 200000 goto r0 = newarray (int)[2];
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r1 := @parameter0: java.lang.String[];
i2 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 200000 goto r0 = newarray (int)[2];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r0 = newarray (int)[2];
i0 = <compiler.loopopts.TestArraysFillDeadControl: int i>;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, 1);
$i1 = 1 + i0;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, $i1);
staticinvoke <compiler.loopopts.TestArraysFillDeadControl: void dont_inline()>();
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 200000 goto r0 = newarray (int)[2];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 200000 goto r0 = newarray (int)[2];
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 200000 goto r0 = newarray (int)[2];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r0 = newarray (int)[2];
i0 = <compiler.loopopts.TestArraysFillDeadControl: int i>;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, 1);
$i1 = 1 + i0;
staticinvoke <java.util.Arrays: void fill(int[],int)>(r0, $i1);
staticinvoke <compiler.loopopts.TestArraysFillDeadControl: void dont_inline()>();
i2 = i2 + 1;
";
}
