digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "$i2 = i0 + i1"
    "r0 = newarray (byte)[$i2]"
    "i7 = 0"
    "goto [?= (branch)]"
    "$b3 = (byte) i7"
    "r0[i7] = $b3"
    "i7 = i7 + 1"
    "if i7 < i1 goto $b3 = (byte) i7"
    "i8 = i1"
    "goto [?= $i4 = lengthof r0]"
    "$i5 = i8 - i1"
    "$b6 = (byte) $i5"
    "r0[i8] = $b6"
    "i8 = i8 + 1"
    "$i4 = lengthof r0"
    "if i8 < $i4 goto $i5 = i8 - i1"
    "return r0"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"$i2 = i0 + i1";
    "$i2 = i0 + i1"->"r0 = newarray (byte)[$i2]";
    "r0 = newarray (byte)[$i2]"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < i1 goto $b3 = (byte) i7";
    "$b3 = (byte) i7"->"r0[i7] = $b3";
    "r0[i7] = $b3"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < i1 goto $b3 = (byte) i7";
    "if i7 < i1 goto $b3 = (byte) i7"->"i8 = i1";
    "if i7 < i1 goto $b3 = (byte) i7"->"$b3 = (byte) i7";
    "i8 = i1"->"goto [?= $i4 = lengthof r0]";
    "goto [?= $i4 = lengthof r0]"->"$i4 = lengthof r0";
    "$i5 = i8 - i1"->"$b6 = (byte) $i5";
    "$b6 = (byte) $i5"->"r0[i8] = $b6";
    "r0[i8] = $b6"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"if i8 < $i4 goto $i5 = i8 - i1";
    "if i8 < $i4 goto $i5 = i8 - i1"->"return r0";
    "if i8 < $i4 goto $i5 = i8 - i1"->"$i5 = i8 - i1";
}
