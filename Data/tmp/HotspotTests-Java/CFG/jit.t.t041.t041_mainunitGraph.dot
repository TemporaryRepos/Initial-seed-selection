digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "r5 = \"Now now\""
    "$r0 = new java.lang.StringBuilder"
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5)"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Brown Cow?\")"
    "r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"Now now, Brown Cow?\")"
    "if $z0 != 0 goto return"
    "$r3 = new nsk.share.TestFailure"
    "specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r3"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"r5 = \"Now now\"";
    "r5 = \"Now now\""->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5)";
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5)"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Brown Cow?\")";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Brown Cow?\")"->"r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"Now now, Brown Cow?\")";
    "$z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(\"Now now, Brown Cow?\")"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r3 = new nsk.share.TestFailure";
    "if $z0 != 0 goto return"->"return";
    "$r3 = new nsk.share.TestFailure"->"specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r3.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r3";
}
