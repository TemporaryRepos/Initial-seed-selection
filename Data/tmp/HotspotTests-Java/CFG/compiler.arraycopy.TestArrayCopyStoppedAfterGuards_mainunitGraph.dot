digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new java.lang.Object"
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"
    "r1 = newarray (int)[10]"
    "r2 = newarray (int)[10]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, 10)"
    "staticinvoke <compiler.arraycopy.TestArrayCopyStoppedAfterGuards: void test()>()"
    "goto [?= return]"
    "$r3 := @caughtexception"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new java.lang.Object";
    "$r0 = new java.lang.Object"->"specialinvoke $r0.<java.lang.Object: void <init>()>()";
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"->"r1 = newarray (int)[10]";
    "r1 = newarray (int)[10]"->"r2 = newarray (int)[10]";
    "r2 = newarray (int)[10]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, 10)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, 10)"->"staticinvoke <compiler.arraycopy.TestArrayCopyStoppedAfterGuards: void test()>()";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, 10)"->"$r3 := @caughtexception";
    "staticinvoke <compiler.arraycopy.TestArrayCopyStoppedAfterGuards: void test()>()"->"goto [?= return]";
    "staticinvoke <compiler.arraycopy.TestArrayCopyStoppedAfterGuards: void test()>()"->"$r3 := @caughtexception";
    "goto [?= return]"->"return";
    "$r3 := @caughtexception"->"return";
}
