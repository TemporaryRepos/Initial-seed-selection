digraph "unitGraph" {
    "r0 := @this: compiler.vectorization.TestPopCountVector"
    "i4 = 0"
    "goto [?= (branch)]"
    "$r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>"
    "$i0 = $r1[i4]"
    "i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0)"
    "$r2 = r0.<compiler.vectorization.TestPopCountVector: int[] output>"
    "$i2 = $r2[i4]"
    "if $i2 == i1 goto i4 = i4 + 1"
    "$r3 = new java.lang.RuntimeException"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid result: output[\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"
    "$r7 = r0.<compiler.vectorization.TestPopCountVector: int[] output>"
    "$i3 = $r7[i4]"
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)"
    "throw $r3"
    "i4 = i4 + 1"
    "if i4 < 1024 goto $r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>"
    "return"
    "r0 := @this: compiler.vectorization.TestPopCountVector"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 1024 goto $r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>";
    "$r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>"->"$i0 = $r1[i4]";
    "$i0 = $r1[i4]"->"i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0)";
    "i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0)"->"$r2 = r0.<compiler.vectorization.TestPopCountVector: int[] output>";
    "$r2 = r0.<compiler.vectorization.TestPopCountVector: int[] output>"->"$i2 = $r2[i4]";
    "$i2 = $r2[i4]"->"if $i2 == i1 goto i4 = i4 + 1";
    "if $i2 == i1 goto i4 = i4 + 1"->"$r3 = new java.lang.RuntimeException";
    "if $i2 == i1 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r3 = new java.lang.RuntimeException"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid result: output[\")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid result: output[\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"->"$r7 = r0.<compiler.vectorization.TestPopCountVector: int[] output>";
    "$r7 = r0.<compiler.vectorization.TestPopCountVector: int[] output>"->"$i3 = $r7[i4]";
    "$i3 = $r7[i4]"->"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11)"->"throw $r3";
    "i4 = i4 + 1"->"if i4 < 1024 goto $r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>";
    "if i4 < 1024 goto $r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>"->"return";
    "if i4 < 1024 goto $r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>"->"$r1 = r0.<compiler.vectorization.TestPopCountVector: int[] input>";
}
