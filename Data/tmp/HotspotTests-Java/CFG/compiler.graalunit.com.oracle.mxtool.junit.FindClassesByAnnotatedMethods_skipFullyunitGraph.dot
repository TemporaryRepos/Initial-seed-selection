digraph "unitGraph" {
    "r0 := @parameter0: java.io.DataInputStream"
    "i0 := @parameter1: int"
    "l8 = 0L"
    "$l1 = (long) i0"
    "$l2 = $l1 - l8"
    "l3 = virtualinvoke r0.<java.io.DataInputStream: long skip(long)>($l2)"
    "l8 = l8 + l3"
    "$b4 = l3 cmp 0L"
    "if $b4 != 0 goto $l9 = (long) i0"
    "$l5 = (long) i0"
    "$b6 = l8 cmp $l5"
    "if $b6 == 0 goto $l9 = (long) i0"
    "$i7 = virtualinvoke r0.<java.io.DataInputStream: int read()>()"
    "if $i7 != -1 goto l8 = l8 + 1L"
    "$r1 = new java.io.IOException"
    "specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>(\"truncated stream\")"
    "throw $r1"
    "l8 = l8 + 1L"
    "$l9 = (long) i0"
    "$b10 = l8 cmp $l9"
    "if $b10 != 0 goto $l1 = (long) i0"
    "return"
    "r0 := @parameter0: java.io.DataInputStream"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"l8 = 0L";
    "l8 = 0L"->"$l1 = (long) i0";
    "$l1 = (long) i0"->"$l2 = $l1 - l8";
    "$l2 = $l1 - l8"->"l3 = virtualinvoke r0.<java.io.DataInputStream: long skip(long)>($l2)";
    "l3 = virtualinvoke r0.<java.io.DataInputStream: long skip(long)>($l2)"->"l8 = l8 + l3";
    "l8 = l8 + l3"->"$b4 = l3 cmp 0L";
    "$b4 = l3 cmp 0L"->"if $b4 != 0 goto $l9 = (long) i0";
    "if $b4 != 0 goto $l9 = (long) i0"->"$l5 = (long) i0";
    "if $b4 != 0 goto $l9 = (long) i0"->"$l9 = (long) i0";
    "$l5 = (long) i0"->"$b6 = l8 cmp $l5";
    "$b6 = l8 cmp $l5"->"if $b6 == 0 goto $l9 = (long) i0";
    "if $b6 == 0 goto $l9 = (long) i0"->"$i7 = virtualinvoke r0.<java.io.DataInputStream: int read()>()";
    "if $b6 == 0 goto $l9 = (long) i0"->"$l9 = (long) i0";
    "$i7 = virtualinvoke r0.<java.io.DataInputStream: int read()>()"->"if $i7 != -1 goto l8 = l8 + 1L";
    "if $i7 != -1 goto l8 = l8 + 1L"->"$r1 = new java.io.IOException";
    "if $i7 != -1 goto l8 = l8 + 1L"->"l8 = l8 + 1L";
    "$r1 = new java.io.IOException"->"specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>(\"truncated stream\")";
    "specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>(\"truncated stream\")"->"throw $r1";
    "l8 = l8 + 1L"->"$l9 = (long) i0";
    "$l9 = (long) i0"->"$b10 = l8 cmp $l9";
    "$b10 = l8 cmp $l9"->"if $b10 != 0 goto $l1 = (long) i0";
    "if $b10 != 0 goto $l1 = (long) i0"->"return";
    "if $b10 != 0 goto $l1 = (long) i0"->"$l1 = (long) i0";
}
