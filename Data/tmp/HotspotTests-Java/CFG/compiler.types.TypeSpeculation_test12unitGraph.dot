digraph "unitGraph" {
    "$r0 = new java.lang.Object"
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"
    "r1 = $r0"
    "$r2 = new compiler.types.TypeSpeculation$B"
    "specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()"
    "r3 = $r2"
    "$r4 = new compiler.types.TypeSpeculation$C"
    "specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()"
    "r5 = $r4"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)"
    "staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0)"
    "staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1)"
    "i0 = i0 + 1"
    "if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)"
    "return 1"
    "$r0 = new java.lang.Object"->"specialinvoke $r0.<java.lang.Object: void <init>()>()";
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new compiler.types.TypeSpeculation$B";
    "$r2 = new compiler.types.TypeSpeculation$B"->"specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()";
    "specialinvoke $r2.<compiler.types.TypeSpeculation$B: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new compiler.types.TypeSpeculation$C";
    "$r4 = new compiler.types.TypeSpeculation$C"->"specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()";
    "specialinvoke $r4.<compiler.types.TypeSpeculation$C: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)"->"staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r5, 0)"->"staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1)";
    "staticinvoke <compiler.types.TypeSpeculation: void test12_2(java.lang.Object,boolean)>(r1, 1)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)";
    "if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)"->"return 1";
    "if i0 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)"->"staticinvoke <compiler.types.TypeSpeculation: void test12_1(compiler.types.TypeSpeculation$I,boolean)>(r3, 0)";
}
