digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
f0 = (float) $d0;
$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24);
f1 = (float) $d1;
$f2 = f0 + f1;
$f3 = $f2 + f0;
$b0 = $f3 cmpl f1;
if $b0 != 0 goto $r0 = new nsk.share.TestFailure;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\");
goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)];
"
    "Block 2:
[preds: 0 ] [succs: ]
$r0 = new nsk.share.TestFailure;
specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\");
throw $r0;
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53);
$d4 = d2 + d3;
$d5 = $d4 + d2;
$b1 = $d5 cmpl d3;
if $b1 != 0 goto $r2 = new nsk.share.TestFailure;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\");
goto [?= return];
"
    "Block 5:
[preds: 3 ] [succs: ]
$r2 = new nsk.share.TestFailure;
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\");
throw $r2;
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
f0 = (float) $d0;
$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24);
f1 = (float) $d1;
$f2 = f0 + f1;
$f3 = $f2 + f0;
$b0 = $f3 cmpl f1;
if $b0 != 0 goto $r0 = new nsk.share.TestFailure;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\");
goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
f0 = (float) $d0;
$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24);
f1 = (float) $d1;
$f2 = f0 + f1;
$f3 = $f2 + f0;
$b0 = $f3 cmpl f1;
if $b0 != 0 goto $r0 = new nsk.share.TestFailure;
"->"Block 2:
[preds: 0 ] [succs: ]
$r0 = new nsk.share.TestFailure;
specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\");
throw $r0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\");
goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)];
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53);
$d4 = d2 + d3;
$d5 = $d4 + d2;
$b1 = $d5 cmpl d3;
if $b1 != 0 goto $r2 = new nsk.share.TestFailure;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53);
$d4 = d2 + d3;
$d5 = $d4 + d2;
$b1 = $d5 cmpl d3;
if $b1 != 0 goto $r2 = new nsk.share.TestFailure;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\");
goto [?= return];
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0);
d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53);
$d4 = d2 + d3;
$d5 = $d4 + d2;
$b1 = $d5 cmpl d3;
if $b1 != 0 goto $r2 = new nsk.share.TestFailure;
"->"Block 5:
[preds: 3 ] [succs: ]
$r2 = new nsk.share.TestFailure;
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\");
throw $r2;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\");
goto [?= return];
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
}
