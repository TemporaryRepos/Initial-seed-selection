digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: int[];
r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
r5 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
r1 = r0;
i0 = lengthof r0;
i13 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r1[i13];
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
$i8 = $i6 + $i7;
$i9 = $i5 + $i8;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r1[i13];
"
    "Block 3:
[preds: 2 ] [succs: ]
$i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i12 = $i10 + $i11;
return $i12;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: int[];
r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
r5 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
r1 = r0;
i0 = lengthof r0;
i13 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r1[i13];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r1[i13];
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
$i8 = $i6 + $i7;
$i9 = $i5 + $i8;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r1[i13];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r1[i13];
"->"Block 3:
[preds: 2 ] [succs: ]
$i10 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i12 = $i10 + $i11;
return $i12;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i13 < i0 goto $i1 = r1[i13];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = r1[i13];
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i4 = $i2 + $i3;
r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$r3 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
$i8 = $i6 + $i7;
$i9 = $i5 + $i8;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
i13 = i13 + 1;
";
}
