digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$i1 = i0 + 1"
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = i0 & 1"
    "if $i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i6 = i0 + 1"
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"
    "$i7 = i0 + 2"
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)"
    "$i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>()"
    "$i5 = $i3 + $i4"
    "return $i5"
    "i0 := @parameter0: int"->"r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$i1 = i0 + 1";
    "$i1 = i0 + 1"->"r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = i0 & 1";
    "$i2 = i0 & 1"->"if $i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "if $i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i6 = i0 + 1";
    "if $i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i6 = i0 + 1"->"r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)";
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"->"$i7 = i0 + 2";
    "$i7 = i0 + 2"->"r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)";
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)"->"$i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>()"->"$i5 = $i3 + $i4";
    "$i5 = $i3 + $i4"->"return $i5";
}
