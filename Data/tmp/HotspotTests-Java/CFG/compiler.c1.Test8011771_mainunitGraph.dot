digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[10]"
    "r1 = newarray (int)[10]"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"
    "i0 = i0 + 1"
    "if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"
    "$r2 = newarray (int)[1]"
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0)"
    "goto [?= i1 = 0]"
    "$r7 := @caughtexception"
    "i1 = 0"
    "i1 = i1 + 1"
    "if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"
    "z0 = 0"
    "$r3 = newarray (int)[1]"
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0)"
    "$r6 := @caughtexception"
    "z0 = 1"
    "if z0 == 0 goto $r4 = new java.lang.RuntimeException"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "goto [?= return]"
    "$r4 = new java.lang.RuntimeException"
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")"
    "throw $r4"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[10]";
    "r0 = newarray (int)[10]"->"r1 = newarray (int)[10]";
    "r1 = newarray (int)[10]"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"$r2 = newarray (int)[1]";
    "if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "if i0 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"$r7 := @caughtexception";
    "$r2 = newarray (int)[1]"->"staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0)";
    "$r2 = newarray (int)[1]"->"$r7 := @caughtexception";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0)"->"goto [?= i1 = 0]";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>($r2, null, 0)"->"$r7 := @caughtexception";
    "goto [?= i1 = 0]"->"i1 = 0";
    "$r7 := @caughtexception"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"z0 = 0";
    "if i1 < 5000 goto staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)"->"staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, r1, 0)";
    "z0 = 0"->"$r3 = newarray (int)[1]";
    "z0 = 0"->"$r6 := @caughtexception";
    "$r3 = newarray (int)[1]"->"staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0)";
    "$r3 = newarray (int)[1]"->"$r6 := @caughtexception";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0)"->"goto [?= (branch)]";
    "staticinvoke <compiler.c1.Test8011771: void m(int[],int[],int)>(r0, $r3, 0)"->"$r6 := @caughtexception";
    "goto [?= (branch)]"->"if z0 == 0 goto $r4 = new java.lang.RuntimeException";
    "$r6 := @caughtexception"->"z0 = 1";
    "z0 = 1"->"if z0 == 0 goto $r4 = new java.lang.RuntimeException";
    "if z0 == 0 goto $r4 = new java.lang.RuntimeException"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if z0 == 0 goto $r4 = new java.lang.RuntimeException"->"$r4 = new java.lang.RuntimeException";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r4 = new java.lang.RuntimeException"->"specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")";
    "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")"->"throw $r4";
}
