digraph "unitGraph" {
    "$r0 = <TestGCOld: TreeNode[] trees>"
    "$i0 = lengthof $r0"
    "i1 = $i0 - 1"
    "$r1 = <TestGCOld: TreeNode[] trees>"
    "$i2 = lengthof $r1"
    "i3 = $i2 - 2"
    "b4 = 13"
    "i9 = 0"
    "$r2 = <TestGCOld: TreeNode[] trees>"
    "r6 = $r2[i1]"
    "$r3 = <TestGCOld: TreeNode[] trees>"
    "r7 = $r3[i3]"
    "i10 = 0"
    "goto [?= (branch)]"
    "$i5 = i9 & 1"
    "if $i5 != 0 goto r6 = r6.<TreeNode: TreeNode right>"
    "r6 = r6.<TreeNode: TreeNode left>"
    "r7 = r7.<TreeNode: TreeNode left>"
    "goto [?= i9 = i9 >> 1]"
    "r6 = r6.<TreeNode: TreeNode right>"
    "r7 = r7.<TreeNode: TreeNode right>"
    "i9 = i9 >> 1"
    "i10 = i10 + 1"
    "if i10 < b4 goto $i5 = i9 & 1"
    "$i6 = i9 & 1"
    "if $i6 != 0 goto r9 = r6.<TreeNode: TreeNode right>"
    "r8 = r6.<TreeNode: TreeNode left>"
    "$r5 = r7.<TreeNode: TreeNode left>"
    "r6.<TreeNode: TreeNode left> = $r5"
    "r7.<TreeNode: TreeNode left> = r8"
    "goto [?= $l7 = <TestGCOld: long actuallyMut>]"
    "r9 = r6.<TreeNode: TreeNode right>"
    "$r4 = r7.<TreeNode: TreeNode right>"
    "r6.<TreeNode: TreeNode right> = $r4"
    "r7.<TreeNode: TreeNode right> = r9"
    "$l7 = <TestGCOld: long actuallyMut>"
    "$l8 = $l7 + 2L"
    "<TestGCOld: long actuallyMut> = $l8"
    "return"
    "$r0 = <TestGCOld: TreeNode[] trees>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"i1 = $i0 - 1";
    "i1 = $i0 - 1"->"$r1 = <TestGCOld: TreeNode[] trees>";
    "$r1 = <TestGCOld: TreeNode[] trees>"->"$i2 = lengthof $r1";
    "$i2 = lengthof $r1"->"i3 = $i2 - 2";
    "i3 = $i2 - 2"->"b4 = 13";
    "b4 = 13"->"i9 = 0";
    "i9 = 0"->"$r2 = <TestGCOld: TreeNode[] trees>";
    "$r2 = <TestGCOld: TreeNode[] trees>"->"r6 = $r2[i1]";
    "r6 = $r2[i1]"->"$r3 = <TestGCOld: TreeNode[] trees>";
    "$r3 = <TestGCOld: TreeNode[] trees>"->"r7 = $r3[i3]";
    "r7 = $r3[i3]"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < b4 goto $i5 = i9 & 1";
    "$i5 = i9 & 1"->"if $i5 != 0 goto r6 = r6.<TreeNode: TreeNode right>";
    "if $i5 != 0 goto r6 = r6.<TreeNode: TreeNode right>"->"r6 = r6.<TreeNode: TreeNode left>";
    "if $i5 != 0 goto r6 = r6.<TreeNode: TreeNode right>"->"r6 = r6.<TreeNode: TreeNode right>";
    "r6 = r6.<TreeNode: TreeNode left>"->"r7 = r7.<TreeNode: TreeNode left>";
    "r7 = r7.<TreeNode: TreeNode left>"->"goto [?= i9 = i9 >> 1]";
    "goto [?= i9 = i9 >> 1]"->"i9 = i9 >> 1";
    "r6 = r6.<TreeNode: TreeNode right>"->"r7 = r7.<TreeNode: TreeNode right>";
    "r7 = r7.<TreeNode: TreeNode right>"->"i9 = i9 >> 1";
    "i9 = i9 >> 1"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < b4 goto $i5 = i9 & 1";
    "if i10 < b4 goto $i5 = i9 & 1"->"$i6 = i9 & 1";
    "if i10 < b4 goto $i5 = i9 & 1"->"$i5 = i9 & 1";
    "$i6 = i9 & 1"->"if $i6 != 0 goto r9 = r6.<TreeNode: TreeNode right>";
    "if $i6 != 0 goto r9 = r6.<TreeNode: TreeNode right>"->"r8 = r6.<TreeNode: TreeNode left>";
    "if $i6 != 0 goto r9 = r6.<TreeNode: TreeNode right>"->"r9 = r6.<TreeNode: TreeNode right>";
    "r8 = r6.<TreeNode: TreeNode left>"->"$r5 = r7.<TreeNode: TreeNode left>";
    "$r5 = r7.<TreeNode: TreeNode left>"->"r6.<TreeNode: TreeNode left> = $r5";
    "r6.<TreeNode: TreeNode left> = $r5"->"r7.<TreeNode: TreeNode left> = r8";
    "r7.<TreeNode: TreeNode left> = r8"->"goto [?= $l7 = <TestGCOld: long actuallyMut>]";
    "goto [?= $l7 = <TestGCOld: long actuallyMut>]"->"$l7 = <TestGCOld: long actuallyMut>";
    "r9 = r6.<TreeNode: TreeNode right>"->"$r4 = r7.<TreeNode: TreeNode right>";
    "$r4 = r7.<TreeNode: TreeNode right>"->"r6.<TreeNode: TreeNode right> = $r4";
    "r6.<TreeNode: TreeNode right> = $r4"->"r7.<TreeNode: TreeNode right> = r9";
    "r7.<TreeNode: TreeNode right> = r9"->"$l7 = <TestGCOld: long actuallyMut>";
    "$l7 = <TestGCOld: long actuallyMut>"->"$l8 = $l7 + 2L";
    "$l8 = $l7 + 2L"->"<TestGCOld: long actuallyMut> = $l8";
    "<TestGCOld: long actuallyMut> = $l8"->"return";
}
