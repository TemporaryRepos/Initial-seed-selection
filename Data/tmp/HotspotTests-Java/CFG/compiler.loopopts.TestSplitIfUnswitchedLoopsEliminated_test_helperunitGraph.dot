digraph "unitGraph" {
    "i1 := @parameter0: int"
    "z0 := @parameter1: boolean"
    "r0 = null"
    "i3 = 3"
    "goto [?= (branch)]"
    "if z0 == 0 goto r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>"
    "goto [?= i3 = i3 + 1]"
    "r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>"
    "$i0 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>"
    "i3 = i3 + 1"
    "if i3 < 10 goto (branch)"
    "if i1 == 4 goto (branch)"
    "r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aaa>"
    "if r0 == null goto return 0"
    "$i2 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>"
    "return $i2"
    "return 0"
    "i1 := @parameter0: int"->"z0 := @parameter1: boolean";
    "z0 := @parameter1: boolean"->"r0 = null";
    "r0 = null"->"i3 = 3";
    "i3 = 3"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 10 goto (branch)";
    "if z0 == 0 goto r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>"->"r0 = null";
    "if z0 == 0 goto r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>"->"r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>";
    "r0 = null"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>"->"$i0 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>";
    "$i0 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 10 goto (branch)";
    "if i3 < 10 goto (branch)"->"if i1 == 4 goto (branch)";
    "if i3 < 10 goto (branch)"->"if z0 == 0 goto r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aa>";
    "if i1 == 4 goto (branch)"->"r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aaa>";
    "if i1 == 4 goto (branch)"->"if r0 == null goto return 0";
    "r0 = <compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated: compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A aaa>"->"if r0 == null goto return 0";
    "if r0 == null goto return 0"->"$i2 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>";
    "if r0 == null goto return 0"->"return 0";
    "$i2 = r0.<compiler.loopopts.TestSplitIfUnswitchedLoopsEliminated$A: int f>"->"return $i2";
}
