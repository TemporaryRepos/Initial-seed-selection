digraph "unitGraph" {
    "r24 := @parameter0: java.lang.String[]"
    "i0 = 19088743"
    "i1 = -1985229329"
    "$r0 = new compiler.codegen.BMI1$MemI"
    "specialinvoke $r0.<compiler.codegen.BMI1$MemI: void <init>(int)>(i1)"
    "r1 = $r0"
    "l2 = 81985526925837671L"
    "l3 = -8526495040805286417L"
    "$r2 = new compiler.codegen.BMI1$MemL"
    "specialinvoke $r2.<compiler.codegen.BMI1$MemL: void <init>(long)>(l3)"
    "r3 = $r2"
    "i12 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"
    "i13 = 0"
    "goto [?= (branch)]"
    "i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"
    "if i14 == i12 goto i13 = i13 + 1"
    "$r4 = new java.lang.Error"
    "specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with register failed\")"
    "throw $r4"
    "i13 = i13 + 1"
    "if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"
    "l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"
    "i16 = 0"
    "l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"
    "$b4 = l17 cmp l15"
    "if $b4 == 0 goto i16 = i16 + 1"
    "$r5 = new java.lang.Error"
    "specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with register failed\")"
    "throw $r5"
    "i16 = i16 + 1"
    "if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"
    "i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"
    "i19 = 0"
    "i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"
    "if i20 == i18 goto i19 = i19 + 1"
    "$r6 = new java.lang.Error"
    "specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with memory failed\")"
    "throw $r6"
    "i19 = i19 + 1"
    "if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"
    "l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"
    "i22 = 0"
    "l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"
    "$b5 = l23 cmp l21"
    "if $b5 == 0 goto i22 = i22 + 1"
    "$r7 = new java.lang.Error"
    "specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with memory failed\")"
    "throw $r7"
    "i22 = i22 + 1"
    "if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"
    "i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"
    "i25 = 0"
    "i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"
    "if i26 == i24 goto i25 = i25 + 1"
    "$r8 = new java.lang.Error"
    "specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with register failed\")"
    "throw $r8"
    "i25 = i25 + 1"
    "if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"
    "l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"
    "i28 = 0"
    "l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"
    "$b6 = l29 cmp l27"
    "if $b6 == 0 goto i28 = i28 + 1"
    "$r9 = new java.lang.Error"
    "specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with register failed\")"
    "throw $r9"
    "i28 = i28 + 1"
    "if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"
    "i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"
    "i31 = 0"
    "i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"
    "if i32 == i30 goto i31 = i31 + 1"
    "$r10 = new java.lang.Error"
    "specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with memory failed\")"
    "throw $r10"
    "i31 = i31 + 1"
    "if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"
    "l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"
    "i34 = 0"
    "l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"
    "$b7 = l35 cmp l33"
    "if $b7 == 0 goto i34 = i34 + 1"
    "$r11 = new java.lang.Error"
    "specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with memory failed\")"
    "throw $r11"
    "i34 = i34 + 1"
    "if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"
    "i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"
    "i37 = 0"
    "i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"
    "if i38 == i36 goto i37 = i37 + 1"
    "$r12 = new java.lang.Error"
    "specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with register failed\")"
    "throw $r12"
    "i37 = i37 + 1"
    "if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"
    "l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"
    "i40 = 0"
    "l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"
    "$b8 = l41 cmp l39"
    "if $b8 == 0 goto i40 = i40 + 1"
    "$r13 = new java.lang.Error"
    "specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with register failed\")"
    "throw $r13"
    "i40 = i40 + 1"
    "if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"
    "i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"
    "i43 = 0"
    "i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"
    "if i44 == i42 goto i43 = i43 + 1"
    "$r14 = new java.lang.Error"
    "specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with memory failed\")"
    "throw $r14"
    "i43 = i43 + 1"
    "if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"
    "l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"
    "i46 = 0"
    "l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"
    "$b9 = l47 cmp l45"
    "if $b9 == 0 goto i46 = i46 + 1"
    "$r15 = new java.lang.Error"
    "specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with memory failed\")"
    "throw $r15"
    "i46 = i46 + 1"
    "if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"
    "i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"
    "i49 = 0"
    "i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"
    "if i50 == i48 goto i49 = i49 + 1"
    "$r16 = new java.lang.Error"
    "specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with register failed\")"
    "throw $r16"
    "i49 = i49 + 1"
    "if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"
    "l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"
    "i52 = 0"
    "l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"
    "$b10 = l53 cmp l51"
    "if $b10 == 0 goto i52 = i52 + 1"
    "$r17 = new java.lang.Error"
    "specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with register failed\")"
    "throw $r17"
    "i52 = i52 + 1"
    "if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"
    "i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"
    "i55 = 0"
    "i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"
    "if i56 == i54 goto i55 = i55 + 1"
    "$r18 = new java.lang.Error"
    "specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with memory failed\")"
    "throw $r18"
    "i55 = i55 + 1"
    "if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"
    "l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"
    "i58 = 0"
    "l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"
    "$b11 = l59 cmp l57"
    "if $b11 == 0 goto i58 = i58 + 1"
    "$r19 = new java.lang.Error"
    "specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with memory failed\")"
    "throw $r19"
    "i58 = i58 + 1"
    "if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"
    "i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"
    "i61 = 0"
    "i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"
    "if i62 == i60 goto i61 = i61 + 1"
    "$r20 = new java.lang.Error"
    "specialinvoke $r20.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntl failed\")"
    "throw $r20"
    "i61 = i61 + 1"
    "if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"
    "i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"
    "i64 = 0"
    "i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"
    "if i65 == i63 goto i64 = i64 + 1"
    "$r21 = new java.lang.Error"
    "specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntq failed\")"
    "throw $r21"
    "i64 = i64 + 1"
    "if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"
    "i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"
    "i67 = 0"
    "i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"
    "if i68 == i66 goto i67 = i67 + 1"
    "$r22 = new java.lang.Error"
    "specialinvoke $r22.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntl failed\")"
    "throw $r22"
    "i67 = i67 + 1"
    "if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"
    "i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"
    "i70 = 0"
    "i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"
    "if i71 == i69 goto i70 = i70 + 1"
    "$r23 = new java.lang.Error"
    "specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntq failed\")"
    "throw $r23"
    "i70 = i70 + 1"
    "if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"
    "return"
    "r24 := @parameter0: java.lang.String[]"->"i0 = 19088743";
    "i0 = 19088743"->"i1 = -1985229329";
    "i1 = -1985229329"->"$r0 = new compiler.codegen.BMI1$MemI";
    "$r0 = new compiler.codegen.BMI1$MemI"->"specialinvoke $r0.<compiler.codegen.BMI1$MemI: void <init>(int)>(i1)";
    "specialinvoke $r0.<compiler.codegen.BMI1$MemI: void <init>(int)>(i1)"->"r1 = $r0";
    "r1 = $r0"->"l2 = 81985526925837671L";
    "l2 = 81985526925837671L"->"l3 = -8526495040805286417L";
    "l3 = -8526495040805286417L"->"$r2 = new compiler.codegen.BMI1$MemL";
    "$r2 = new compiler.codegen.BMI1$MemL"->"specialinvoke $r2.<compiler.codegen.BMI1$MemL: void <init>(long)>(l3)";
    "specialinvoke $r2.<compiler.codegen.BMI1$MemL: void <init>(long)>(l3)"->"r3 = $r2";
    "r3 = $r2"->"i12 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)";
    "i12 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"->"i13 = 0";
    "i13 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)";
    "i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"->"if i14 == i12 goto i13 = i13 + 1";
    "if i14 == i12 goto i13 = i13 + 1"->"$r4 = new java.lang.Error";
    "if i14 == i12 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$r4 = new java.lang.Error"->"specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with register failed\")";
    "specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with register failed\")"->"throw $r4";
    "i13 = i13 + 1"->"if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)";
    "if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"->"l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)";
    "if i13 < 1000000 goto i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)"->"i14 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,int)>(i0, i1)";
    "l15 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"->"i16 = 0";
    "i16 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)";
    "l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"->"$b4 = l17 cmp l15";
    "$b4 = l17 cmp l15"->"if $b4 == 0 goto i16 = i16 + 1";
    "if $b4 == 0 goto i16 = i16 + 1"->"$r5 = new java.lang.Error";
    "if $b4 == 0 goto i16 = i16 + 1"->"i16 = i16 + 1";
    "$r5 = new java.lang.Error"->"specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with register failed\")";
    "specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with register failed\")"->"throw $r5";
    "i16 = i16 + 1"->"if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)";
    "if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"->"i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)";
    "if i16 < 1000000 goto l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)"->"l17 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,long)>(l2, l3)";
    "i18 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"->"i19 = 0";
    "i19 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)";
    "i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"->"if i20 == i18 goto i19 = i19 + 1";
    "if i20 == i18 goto i19 = i19 + 1"->"$r6 = new java.lang.Error";
    "if i20 == i18 goto i19 = i19 + 1"->"i19 = i19 + 1";
    "$r6 = new java.lang.Error"->"specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with memory failed\")";
    "specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>(\"andnl with memory failed\")"->"throw $r6";
    "i19 = i19 + 1"->"if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)";
    "if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"->"l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)";
    "if i19 < 1000000 goto i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)"->"i20 = staticinvoke <compiler.codegen.BMI1$BMITests: int andnl(int,compiler.codegen.BMI1$MemI)>(i0, r1)";
    "l21 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"->"i22 = 0";
    "i22 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)";
    "l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"->"$b5 = l23 cmp l21";
    "$b5 = l23 cmp l21"->"if $b5 == 0 goto i22 = i22 + 1";
    "if $b5 == 0 goto i22 = i22 + 1"->"$r7 = new java.lang.Error";
    "if $b5 == 0 goto i22 = i22 + 1"->"i22 = i22 + 1";
    "$r7 = new java.lang.Error"->"specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with memory failed\")";
    "specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>(\"andnq with memory failed\")"->"throw $r7";
    "i22 = i22 + 1"->"if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)";
    "if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"->"i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)";
    "if i22 < 1000000 goto l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)"->"l23 = staticinvoke <compiler.codegen.BMI1$BMITests: long andnq(long,compiler.codegen.BMI1$MemL)>(l2, r3)";
    "i24 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"->"i25 = 0";
    "i25 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)";
    "i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"->"if i26 == i24 goto i25 = i25 + 1";
    "if i26 == i24 goto i25 = i25 + 1"->"$r8 = new java.lang.Error";
    "if i26 == i24 goto i25 = i25 + 1"->"i25 = i25 + 1";
    "$r8 = new java.lang.Error"->"specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with register failed\")";
    "specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with register failed\")"->"throw $r8";
    "i25 = i25 + 1"->"if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)";
    "if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"->"l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)";
    "if i25 < 1000000 goto i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)"->"i26 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(int)>(i0)";
    "l27 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"->"i28 = 0";
    "i28 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)";
    "l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"->"$b6 = l29 cmp l27";
    "$b6 = l29 cmp l27"->"if $b6 == 0 goto i28 = i28 + 1";
    "if $b6 == 0 goto i28 = i28 + 1"->"$r9 = new java.lang.Error";
    "if $b6 == 0 goto i28 = i28 + 1"->"i28 = i28 + 1";
    "$r9 = new java.lang.Error"->"specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with register failed\")";
    "specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with register failed\")"->"throw $r9";
    "i28 = i28 + 1"->"if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)";
    "if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"->"i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)";
    "if i28 < 1000000 goto l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)"->"l29 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(long)>(l2)";
    "i30 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"->"i31 = 0";
    "i31 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)";
    "i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"->"if i32 == i30 goto i31 = i31 + 1";
    "if i32 == i30 goto i31 = i31 + 1"->"$r10 = new java.lang.Error";
    "if i32 == i30 goto i31 = i31 + 1"->"i31 = i31 + 1";
    "$r10 = new java.lang.Error"->"specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with memory failed\")";
    "specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"blsil with memory failed\")"->"throw $r10";
    "i31 = i31 + 1"->"if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)";
    "if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"->"l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i31 < 1000000 goto i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)"->"i32 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsil(compiler.codegen.BMI1$MemI)>(r1)";
    "l33 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"->"i34 = 0";
    "i34 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)";
    "l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"->"$b7 = l35 cmp l33";
    "$b7 = l35 cmp l33"->"if $b7 == 0 goto i34 = i34 + 1";
    "if $b7 == 0 goto i34 = i34 + 1"->"$r11 = new java.lang.Error";
    "if $b7 == 0 goto i34 = i34 + 1"->"i34 = i34 + 1";
    "$r11 = new java.lang.Error"->"specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with memory failed\")";
    "specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>(\"blsiq with memory failed\")"->"throw $r11";
    "i34 = i34 + 1"->"if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"->"i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)";
    "if i34 < 1000000 goto l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)"->"l35 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsiq(compiler.codegen.BMI1$MemL)>(r3)";
    "i36 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"->"i37 = 0";
    "i37 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)";
    "i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"->"if i38 == i36 goto i37 = i37 + 1";
    "if i38 == i36 goto i37 = i37 + 1"->"$r12 = new java.lang.Error";
    "if i38 == i36 goto i37 = i37 + 1"->"i37 = i37 + 1";
    "$r12 = new java.lang.Error"->"specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with register failed\")";
    "specialinvoke $r12.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with register failed\")"->"throw $r12";
    "i37 = i37 + 1"->"if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)";
    "if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"->"l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)";
    "if i37 < 1000000 goto i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)"->"i38 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(int)>(i0)";
    "l39 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"->"i40 = 0";
    "i40 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)";
    "l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"->"$b8 = l41 cmp l39";
    "$b8 = l41 cmp l39"->"if $b8 == 0 goto i40 = i40 + 1";
    "if $b8 == 0 goto i40 = i40 + 1"->"$r13 = new java.lang.Error";
    "if $b8 == 0 goto i40 = i40 + 1"->"i40 = i40 + 1";
    "$r13 = new java.lang.Error"->"specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with register failed\")";
    "specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with register failed\")"->"throw $r13";
    "i40 = i40 + 1"->"if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)";
    "if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"->"i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)";
    "if i40 < 1000000 goto l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)"->"l41 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(long)>(l2)";
    "i42 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"->"i43 = 0";
    "i43 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)";
    "i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"->"if i44 == i42 goto i43 = i43 + 1";
    "if i44 == i42 goto i43 = i43 + 1"->"$r14 = new java.lang.Error";
    "if i44 == i42 goto i43 = i43 + 1"->"i43 = i43 + 1";
    "$r14 = new java.lang.Error"->"specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with memory failed\")";
    "specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskl with memory failed\")"->"throw $r14";
    "i43 = i43 + 1"->"if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)";
    "if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"->"l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i43 < 1000000 goto i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)"->"i44 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsmskl(compiler.codegen.BMI1$MemI)>(r1)";
    "l45 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"->"i46 = 0";
    "i46 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)";
    "l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"->"$b9 = l47 cmp l45";
    "$b9 = l47 cmp l45"->"if $b9 == 0 goto i46 = i46 + 1";
    "if $b9 == 0 goto i46 = i46 + 1"->"$r15 = new java.lang.Error";
    "if $b9 == 0 goto i46 = i46 + 1"->"i46 = i46 + 1";
    "$r15 = new java.lang.Error"->"specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with memory failed\")";
    "specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>(\"blsmskq with memory failed\")"->"throw $r15";
    "i46 = i46 + 1"->"if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"->"i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)";
    "if i46 < 1000000 goto l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)"->"l47 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsmskq(compiler.codegen.BMI1$MemL)>(r3)";
    "i48 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"->"i49 = 0";
    "i49 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)";
    "i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"->"if i50 == i48 goto i49 = i49 + 1";
    "if i50 == i48 goto i49 = i49 + 1"->"$r16 = new java.lang.Error";
    "if i50 == i48 goto i49 = i49 + 1"->"i49 = i49 + 1";
    "$r16 = new java.lang.Error"->"specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with register failed\")";
    "specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with register failed\")"->"throw $r16";
    "i49 = i49 + 1"->"if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)";
    "if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"->"l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)";
    "if i49 < 1000000 goto i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)"->"i50 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(int)>(i0)";
    "l51 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"->"i52 = 0";
    "i52 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)";
    "l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"->"$b10 = l53 cmp l51";
    "$b10 = l53 cmp l51"->"if $b10 == 0 goto i52 = i52 + 1";
    "if $b10 == 0 goto i52 = i52 + 1"->"$r17 = new java.lang.Error";
    "if $b10 == 0 goto i52 = i52 + 1"->"i52 = i52 + 1";
    "$r17 = new java.lang.Error"->"specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with register failed\")";
    "specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with register failed\")"->"throw $r17";
    "i52 = i52 + 1"->"if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)";
    "if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"->"i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)";
    "if i52 < 1000000 goto l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)"->"l53 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(long)>(l2)";
    "i54 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"->"i55 = 0";
    "i55 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)";
    "i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"->"if i56 == i54 goto i55 = i55 + 1";
    "if i56 == i54 goto i55 = i55 + 1"->"$r18 = new java.lang.Error";
    "if i56 == i54 goto i55 = i55 + 1"->"i55 = i55 + 1";
    "$r18 = new java.lang.Error"->"specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with memory failed\")";
    "specialinvoke $r18.<java.lang.Error: void <init>(java.lang.String)>(\"blsrl with memory failed\")"->"throw $r18";
    "i55 = i55 + 1"->"if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)";
    "if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"->"l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i55 < 1000000 goto i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)"->"i56 = staticinvoke <compiler.codegen.BMI1$BMITests: int blsrl(compiler.codegen.BMI1$MemI)>(r1)";
    "l57 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"->"i58 = 0";
    "i58 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)";
    "l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"->"$b11 = l59 cmp l57";
    "$b11 = l59 cmp l57"->"if $b11 == 0 goto i58 = i58 + 1";
    "if $b11 == 0 goto i58 = i58 + 1"->"$r19 = new java.lang.Error";
    "if $b11 == 0 goto i58 = i58 + 1"->"i58 = i58 + 1";
    "$r19 = new java.lang.Error"->"specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with memory failed\")";
    "specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>(\"blsrq with memory failed\")"->"throw $r19";
    "i58 = i58 + 1"->"if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)";
    "if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"->"i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)";
    "if i58 < 1000000 goto l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)"->"l59 = staticinvoke <compiler.codegen.BMI1$BMITests: long blsrq(compiler.codegen.BMI1$MemL)>(r3)";
    "i60 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"->"i61 = 0";
    "i61 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)";
    "i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"->"if i62 == i60 goto i61 = i61 + 1";
    "if i62 == i60 goto i61 = i61 + 1"->"$r20 = new java.lang.Error";
    "if i62 == i60 goto i61 = i61 + 1"->"i61 = i61 + 1";
    "$r20 = new java.lang.Error"->"specialinvoke $r20.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntl failed\")";
    "specialinvoke $r20.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntl failed\")"->"throw $r20";
    "i61 = i61 + 1"->"if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)";
    "if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"->"i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)";
    "if i61 < 1000000 goto i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)"->"i62 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntl(int)>(i0)";
    "i63 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"->"i64 = 0";
    "i64 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)";
    "i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"->"if i65 == i63 goto i64 = i64 + 1";
    "if i65 == i63 goto i64 = i64 + 1"->"$r21 = new java.lang.Error";
    "if i65 == i63 goto i64 = i64 + 1"->"i64 = i64 + 1";
    "$r21 = new java.lang.Error"->"specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntq failed\")";
    "specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>(\"lzcntq failed\")"->"throw $r21";
    "i64 = i64 + 1"->"if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)";
    "if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"->"i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)";
    "if i64 < 1000000 goto i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)"->"i65 = staticinvoke <compiler.codegen.BMI1$BMITests: int lzcntq(long)>(l2)";
    "i66 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"->"i67 = 0";
    "i67 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)";
    "i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"->"if i68 == i66 goto i67 = i67 + 1";
    "if i68 == i66 goto i67 = i67 + 1"->"$r22 = new java.lang.Error";
    "if i68 == i66 goto i67 = i67 + 1"->"i67 = i67 + 1";
    "$r22 = new java.lang.Error"->"specialinvoke $r22.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntl failed\")";
    "specialinvoke $r22.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntl failed\")"->"throw $r22";
    "i67 = i67 + 1"->"if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)";
    "if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"->"i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)";
    "if i67 < 1000000 goto i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)"->"i68 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntl(int)>(i0)";
    "i69 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"->"i70 = 0";
    "i70 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)";
    "i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"->"if i71 == i69 goto i70 = i70 + 1";
    "if i71 == i69 goto i70 = i70 + 1"->"$r23 = new java.lang.Error";
    "if i71 == i69 goto i70 = i70 + 1"->"i70 = i70 + 1";
    "$r23 = new java.lang.Error"->"specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntq failed\")";
    "specialinvoke $r23.<java.lang.Error: void <init>(java.lang.String)>(\"tzcntq failed\")"->"throw $r23";
    "i70 = i70 + 1"->"if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)";
    "if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"->"return";
    "if i70 < 1000000 goto i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)"->"i71 = staticinvoke <compiler.codegen.BMI1$BMITests: int tzcntq(long)>(l2)";
}
