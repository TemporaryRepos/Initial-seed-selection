digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
z1 = 1;
$r0 = new jit.Arrays.ArrayTests.ArrayTests;
specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>();
z2 = z1 & $z0;
if z2 == 0 goto $r2 = new nsk.share.TestFailure;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\");
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: ]
$r2 = new nsk.share.TestFailure;
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Error in read/write array tests!\");
throw $r2;
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
z1 = 1;
$r0 = new jit.Arrays.ArrayTests.ArrayTests;
specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>();
z2 = z1 & $z0;
if z2 == 0 goto $r2 = new nsk.share.TestFailure;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\");
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String[];
z1 = 1;
$r0 = new jit.Arrays.ArrayTests.ArrayTests;
specialinvoke $r0.<jit.Arrays.ArrayTests.ArrayTests: void <init>()>();
r1 = $r0;
$z0 = virtualinvoke r1.<jit.Arrays.ArrayTests.ArrayTests: boolean execute()>();
z2 = z1 & $z0;
if z2 == 0 goto $r2 = new nsk.share.TestFailure;
"->"Block 2:
[preds: 0 ] [succs: ]
$r2 = new nsk.share.TestFailure;
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Error in read/write array tests!\");
throw $r2;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Array read/write testsOK (srm 10/22/96)\");
goto [?= return];
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
}
