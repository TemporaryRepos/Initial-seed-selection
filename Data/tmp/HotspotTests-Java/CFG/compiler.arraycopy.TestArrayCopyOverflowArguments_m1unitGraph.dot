digraph "unitGraph" {
    "r0 := @parameter0: java.lang.Object"
    "if r0 != null goto r1 = newarray (int)[10]"
    "return null"
    "r1 = newarray (int)[10]"
    "$i0 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"
    "$i2 = 8 + $i0"
    "$i1 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"
    "i3 = $i2 + $i1"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, 0, 10)"
    "goto [?= return r1]"
    "$r2 := @caughtexception"
    "return r1"
    "r0 := @parameter0: java.lang.Object"->"if r0 != null goto r1 = newarray (int)[10]";
    "if r0 != null goto r1 = newarray (int)[10]"->"return null";
    "if r0 != null goto r1 = newarray (int)[10]"->"r1 = newarray (int)[10]";
    "r1 = newarray (int)[10]"->"$i0 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>";
    "r1 = newarray (int)[10]"->"$r2 := @caughtexception";
    "$i0 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"->"$i2 = 8 + $i0";
    "$i0 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"->"$r2 := @caughtexception";
    "$i2 = 8 + $i0"->"$i1 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>";
    "$i2 = 8 + $i0"->"$r2 := @caughtexception";
    "$i1 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"->"i3 = $i2 + $i1";
    "$i1 = <compiler.arraycopy.TestArrayCopyOverflowArguments: int mod>"->"$r2 := @caughtexception";
    "i3 = $i2 + $i1"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, 0, 10)";
    "i3 = $i2 + $i1"->"$r2 := @caughtexception";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, 0, 10)"->"goto [?= return r1]";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, 0, 10)"->"$r2 := @caughtexception";
    "goto [?= return r1]"->"return r1";
    "$r2 := @caughtexception"->"return r1";
}
