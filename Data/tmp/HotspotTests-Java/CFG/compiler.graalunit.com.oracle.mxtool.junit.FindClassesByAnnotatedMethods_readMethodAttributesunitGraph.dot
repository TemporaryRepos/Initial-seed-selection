digraph "unitGraph" {
    "r0 := @parameter0: java.io.DataInputStream"
    "r1 := @parameter1: java.lang.String[]"
    "r3 := @parameter2: java.util.Collection"
    "i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"
    "i4 = 0"
    "goto [?= (branch)]"
    "$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"
    "r2 = r1[$i1]"
    "i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>()"
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\")"
    "if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)"
    "i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"
    "i5 = 0"
    "staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)"
    "i5 = i5 + 1"
    "if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)"
    "goto [?= i4 = i4 + 1]"
    "staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)"
    "i4 = i4 + 1"
    "if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"
    "return"
    "r0 := @parameter0: java.io.DataInputStream"->"r1 := @parameter1: java.lang.String[]";
    "r1 := @parameter1: java.lang.String[]"->"r3 := @parameter2: java.util.Collection";
    "r3 := @parameter2: java.util.Collection"->"i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()";
    "i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()";
    "$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"->"r2 = r1[$i1]";
    "r2 = r1[$i1]"->"i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>()";
    "i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>()"->"$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\")";
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"RuntimeVisibleAnnotations\")"->"if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)";
    "if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)"->"i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()";
    "if $z0 == 0 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)"->"staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)";
    "i3 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)";
    "staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)";
    "if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)"->"goto [?= i4 = i4 + 1]";
    "if i5 != i3 goto staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)"->"staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void readAnnotation(java.io.DataInputStream,java.lang.String[],java.util.Collection)>(r0, r1, r3)";
    "goto [?= i4 = i4 + 1]"->"i4 = i4 + 1";
    "staticinvoke <compiler.graalunit.com.oracle.mxtool.junit.FindClassesByAnnotatedMethods: void skipFully(java.io.DataInputStream,int)>(r0, i2)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()";
    "if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"->"return";
    "if i4 < i0 goto $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()"->"$i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>()";
}
