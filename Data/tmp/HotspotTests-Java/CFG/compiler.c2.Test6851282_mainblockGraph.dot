digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r16 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 3 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
i3 = i2;
goto [?= $i0 = i2 + 1000];
"
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = new compiler.c2.Test6851282$B;
specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4);
i3 = i3 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i0 = i2 + 1000;
if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = new compiler.c2.Test6851282$A;
$r6 = newarray (compiler.c2.Test6851282$B)[0];
$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
$r8 = (compiler.c2.Test6851282$B[]) $r7;
specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
i2 = i2 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 5000 goto $r2 = new java.util.ArrayList;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r9 = new compiler.c2.Test6851282;
specialinvoke $r9.<compiler.c2.Test6851282: void <init>()>();
$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);
$r11 = (compiler.c2.Test6851282$A) $r10;
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
$r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(1, $i1);
$r13 = newarray (compiler.c2.Test6851282$A)[0];
$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);
$r15 = (compiler.c2.Test6851282$A[]) $r14;
virtualinvoke $r9.<compiler.c2.Test6851282: void foo(compiler.c2.Test6851282$A,compiler.c2.Test6851282$A[])>($r11, $r15);
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r16 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i2 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 5000 goto $r2 = new java.util.ArrayList;
";
    "Block 1:
[preds: 5 ] [succs: 3 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
i3 = i2;
goto [?= $i0 = i2 + 1000];
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i0 = i2 + 1000;
if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B;
";
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = new compiler.c2.Test6851282$B;
specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4);
i3 = i3 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i0 = i2 + 1000;
if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i0 = i2 + 1000;
if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = new compiler.c2.Test6851282$A;
$r6 = newarray (compiler.c2.Test6851282$B)[0];
$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
$r8 = (compiler.c2.Test6851282$B[]) $r7;
specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
i2 = i2 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i0 = i2 + 1000;
if i3 < $i0 goto $r4 = new compiler.c2.Test6851282$B;
"->"Block 2:
[preds: 3 ] [succs: 3 ]
$r4 = new compiler.c2.Test6851282$B;
specialinvoke $r4.<compiler.c2.Test6851282$B: void <init>(int)>(i3);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4);
i3 = i3 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = new compiler.c2.Test6851282$A;
$r6 = newarray (compiler.c2.Test6851282$B)[0];
$r7 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
$r8 = (compiler.c2.Test6851282$B[]) $r7;
specialinvoke $r5.<compiler.c2.Test6851282$A: void <init>(compiler.c2.Test6851282$B[])>($r8);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
i2 = i2 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 5000 goto $r2 = new java.util.ArrayList;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 5000 goto $r2 = new java.util.ArrayList;
"->"Block 6:
[preds: 5 ] [succs: ]
$r9 = new compiler.c2.Test6851282;
specialinvoke $r9.<compiler.c2.Test6851282: void <init>()>();
$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);
$r11 = (compiler.c2.Test6851282$A) $r10;
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
$r12 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(1, $i1);
$r13 = newarray (compiler.c2.Test6851282$A)[0];
$r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);
$r15 = (compiler.c2.Test6851282$A[]) $r14;
virtualinvoke $r9.<compiler.c2.Test6851282: void foo(compiler.c2.Test6851282$A,compiler.c2.Test6851282$A[])>($r11, $r15);
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i2 < 5000 goto $r2 = new java.util.ArrayList;
"->"Block 1:
[preds: 5 ] [succs: 3 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
i3 = i2;
goto [?= $i0 = i2 + 1000];
";
}
