digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i1 = 100"
    "$i0 = lengthof r0"
    "if $i0 == 1 goto $r1 = r0[0]"
    "$r16 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Incorrect number of arguments\")"
    "staticinvoke <java.lang.System: void exit(int)>(1)"
    "$r1 = r0[0]"
    "i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"
    "goto [?= (branch)]"
    "$r17 := @caughtexception"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid argument format\")"
    "if i1 >= 1 goto $r2 = new compiler.c2.InterruptedTest$1"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Threshold must be at least 1\")"
    "$r2 = new compiler.c2.InterruptedTest$1"
    "specialinvoke $r2.<compiler.c2.InterruptedTest$1: void <init>(java.lang.String)>(\"worker\")"
    "r3 = $r2"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: starts a worker thread...\")"
    "virtualinvoke r3.<java.lang.Thread: void start()>()"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 5 seconds after starting the worker thread\")"
    "virtualinvoke r3.<java.lang.Thread: void join(long)>(5000L)"
    "i2 = 0"
    "goto [?= $z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()]"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: interrupts the worker thread...\")"
    "virtualinvoke r3.<java.lang.Thread: void interrupt()>()"
    "$z0 = virtualinvoke r3.<java.lang.Thread: boolean isInterrupted()>()"
    "if $z0 == 0 goto i2 = i2 + 1"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: worker thread is interrupted\")"
    "i2 = i2 + 1"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 1 second for the worker thread to die...\")"
    "virtualinvoke r3.<java.lang.Thread: void join(long)>(1000L)"
    "$z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()"
    "if $z1 == 0 goto (branch)"
    "if i2 < i1 goto $r12 = <java.lang.System: java.io.PrintStream out>"
    "if i2 != i1 goto $r6 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Main thread: the worker thread did not die after \")"
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" seconds have elapsed\")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11)"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: bye\")"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i1 = 100";
    "i1 = 100"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 == 1 goto $r1 = r0[0]";
    "if $i0 == 1 goto $r1 = r0[0]"->"$r16 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 == 1 goto $r1 = r0[0]"->"$r1 = r0[0]";
    "if $i0 == 1 goto $r1 = r0[0]"->"$r17 := @caughtexception";
    "$r16 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Incorrect number of arguments\")";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Incorrect number of arguments\")"->"staticinvoke <java.lang.System: void exit(int)>(1)";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"$r1 = r0[0]";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"$r17 := @caughtexception";
    "$r1 = r0[0]"->"i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)";
    "$r1 = r0[0]"->"$r17 := @caughtexception";
    "i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"->"goto [?= (branch)]";
    "i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"->"$r17 := @caughtexception";
    "goto [?= (branch)]"->"if i1 >= 1 goto $r2 = new compiler.c2.InterruptedTest$1";
    "$r17 := @caughtexception"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid argument format\")";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid argument format\")"->"staticinvoke <java.lang.System: void exit(int)>(1)";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"if i1 >= 1 goto $r2 = new compiler.c2.InterruptedTest$1";
    "if i1 >= 1 goto $r2 = new compiler.c2.InterruptedTest$1"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= 1 goto $r2 = new compiler.c2.InterruptedTest$1"->"$r2 = new compiler.c2.InterruptedTest$1";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Threshold must be at least 1\")";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Threshold must be at least 1\")"->"staticinvoke <java.lang.System: void exit(int)>(1)";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"$r2 = new compiler.c2.InterruptedTest$1";
    "$r2 = new compiler.c2.InterruptedTest$1"->"specialinvoke $r2.<compiler.c2.InterruptedTest$1: void <init>(java.lang.String)>(\"worker\")";
    "specialinvoke $r2.<compiler.c2.InterruptedTest$1: void <init>(java.lang.String)>(\"worker\")"->"r3 = $r2";
    "r3 = $r2"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: starts a worker thread...\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: starts a worker thread...\")"->"virtualinvoke r3.<java.lang.Thread: void start()>()";
    "virtualinvoke r3.<java.lang.Thread: void start()>()"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 5 seconds after starting the worker thread\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 5 seconds after starting the worker thread\")"->"virtualinvoke r3.<java.lang.Thread: void join(long)>(5000L)";
    "virtualinvoke r3.<java.lang.Thread: void join(long)>(5000L)"->"i2 = 0";
    "i2 = 0"->"goto [?= $z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()]";
    "goto [?= $z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()]"->"$z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: interrupts the worker thread...\")";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: interrupts the worker thread...\")"->"virtualinvoke r3.<java.lang.Thread: void interrupt()>()";
    "virtualinvoke r3.<java.lang.Thread: void interrupt()>()"->"$z0 = virtualinvoke r3.<java.lang.Thread: boolean isInterrupted()>()";
    "$z0 = virtualinvoke r3.<java.lang.Thread: boolean isInterrupted()>()"->"if $z0 == 0 goto i2 = i2 + 1";
    "if $z0 == 0 goto i2 = i2 + 1"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: worker thread is interrupted\")";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: worker thread is interrupted\")"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 1 second for the worker thread to die...\")";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: waits 1 second for the worker thread to die...\")"->"virtualinvoke r3.<java.lang.Thread: void join(long)>(1000L)";
    "virtualinvoke r3.<java.lang.Thread: void join(long)>(1000L)"->"$z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()";
    "$z1 = virtualinvoke r3.<java.lang.Thread: boolean isAlive()>()"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"if i2 < i1 goto $r12 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 == 0 goto (branch)"->"if i2 != i1 goto $r6 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < i1 goto $r12 = <java.lang.System: java.io.PrintStream out>"->"if i2 != i1 goto $r6 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < i1 goto $r12 = <java.lang.System: java.io.PrintStream out>"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "if i2 != i1 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "if i2 != i1 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Main thread: the worker thread did not die after \")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Main thread: the worker thread did not die after \")"->"$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" seconds have elapsed\")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" seconds have elapsed\")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: bye\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Main thread: bye\")"->"return";
}
