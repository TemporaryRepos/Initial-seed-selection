digraph "unitGraph" {
    "r29 := @parameter0: java.lang.String[]"
    "i7 = -128"
    "goto [?= (branch)]"
    "$r0 = newarray (byte)[1]"
    "$b0 = (byte) i7"
    "$r0[0] = $b0"
    "r30 = $r0"
    "l8 = staticinvoke <compiler.c2.Test8000805: long loadB2L_mask8(byte[])>(r30)"
    "l9 = staticinvoke <compiler.c2.Test8000805: long _loadB2L_mask8(byte[])>(r30)"
    "$b1 = l8 cmp l9"
    "if $b1 == 0 goto i7 = i7 + 1"
    "$r1 = new java.lang.InternalError"
    "$r2 = newarray (java.lang.Object)[2]"
    "$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8)"
    "$r2[0] = $r3"
    "$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9)"
    "$r2[1] = $r4"
    "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadB2L_mask8 failed: %x != %x\", $r2)"
    "specialinvoke $r1.<java.lang.InternalError: void <init>(java.lang.String)>($r5)"
    "throw $r1"
    "i7 = i7 + 1"
    "if i7 < 127 goto $r0 = newarray (byte)[1]"
    "i10 = -32768"
    "$r6 = newarray (short)[1]"
    "$s2 = (short) i10"
    "$r6[0] = $s2"
    "r31 = $r6"
    "$r7 = newarray (char)[1]"
    "$c3 = (char) i10"
    "$r7[0] = $c3"
    "r32 = $r7"
    "l11 = staticinvoke <compiler.c2.Test8000805: long loadS2LmaskFF(short[])>(r31)"
    "l12 = staticinvoke <compiler.c2.Test8000805: long _loadS2LmaskFF(short[])>(r31)"
    "$b4 = l11 cmp l12"
    "if $b4 == 0 goto l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)"
    "$r23 = new java.lang.InternalError"
    "$r24 = newarray (java.lang.Object)[2]"
    "$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11)"
    "$r24[0] = $r25"
    "$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l12)"
    "$r24[1] = $r26"
    "$r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2LmaskFF failed: %x != %x\", $r24)"
    "specialinvoke $r23.<java.lang.InternalError: void <init>(java.lang.String)>($r27)"
    "throw $r23"
    "l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)"
    "l14 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask16(short[])>(r31)"
    "$b5 = l13 cmp l14"
    "if $b5 == 0 goto l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)"
    "$r18 = new java.lang.InternalError"
    "$r19 = newarray (java.lang.Object)[2]"
    "$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13)"
    "$r19[0] = $r20"
    "$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14)"
    "$r19[1] = $r21"
    "$r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask16 failed: %x != %x\", $r19)"
    "specialinvoke $r18.<java.lang.InternalError: void <init>(java.lang.String)>($r22)"
    "throw $r18"
    "l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)"
    "l16 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask13(short[])>(r31)"
    "$b6 = l15 cmp l16"
    "if $b6 == 0 goto i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)"
    "$r13 = new java.lang.InternalError"
    "$r14 = newarray (java.lang.Object)[2]"
    "$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15)"
    "$r14[0] = $r15"
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16)"
    "$r14[1] = $r16"
    "$r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask13 failed: %x != %x\", $r14)"
    "specialinvoke $r13.<java.lang.InternalError: void <init>(java.lang.String)>($r17)"
    "throw $r13"
    "i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)"
    "i18 = staticinvoke <compiler.c2.Test8000805: int _loadUS_signExt(char[])>(r32)"
    "if i17 == i18 goto i10 = i10 + 1"
    "$r8 = new java.lang.InternalError"
    "$r9 = newarray (java.lang.Object)[2]"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17)"
    "$r9[0] = $r10"
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18)"
    "$r9[1] = $r11"
    "$r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadUS_signExt failed: %x != %x\", $r9)"
    "specialinvoke $r8.<java.lang.InternalError: void <init>(java.lang.String)>($r12)"
    "throw $r8"
    "i10 = i10 + 1"
    "if i10 < 32767 goto $r6 = newarray (short)[1]"
    "$r28 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED.\")"
    "return"
    "r29 := @parameter0: java.lang.String[]"->"i7 = -128";
    "i7 = -128"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 127 goto $r0 = newarray (byte)[1]";
    "$r0 = newarray (byte)[1]"->"$b0 = (byte) i7";
    "$b0 = (byte) i7"->"$r0[0] = $b0";
    "$r0[0] = $b0"->"r30 = $r0";
    "r30 = $r0"->"l8 = staticinvoke <compiler.c2.Test8000805: long loadB2L_mask8(byte[])>(r30)";
    "l8 = staticinvoke <compiler.c2.Test8000805: long loadB2L_mask8(byte[])>(r30)"->"l9 = staticinvoke <compiler.c2.Test8000805: long _loadB2L_mask8(byte[])>(r30)";
    "l9 = staticinvoke <compiler.c2.Test8000805: long _loadB2L_mask8(byte[])>(r30)"->"$b1 = l8 cmp l9";
    "$b1 = l8 cmp l9"->"if $b1 == 0 goto i7 = i7 + 1";
    "if $b1 == 0 goto i7 = i7 + 1"->"$r1 = new java.lang.InternalError";
    "if $b1 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r1 = new java.lang.InternalError"->"$r2 = newarray (java.lang.Object)[2]";
    "$r2 = newarray (java.lang.Object)[2]"->"$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8)";
    "$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8)"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9)";
    "$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9)"->"$r2[1] = $r4";
    "$r2[1] = $r4"->"$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadB2L_mask8 failed: %x != %x\", $r2)";
    "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadB2L_mask8 failed: %x != %x\", $r2)"->"specialinvoke $r1.<java.lang.InternalError: void <init>(java.lang.String)>($r5)";
    "specialinvoke $r1.<java.lang.InternalError: void <init>(java.lang.String)>($r5)"->"throw $r1";
    "i7 = i7 + 1"->"if i7 < 127 goto $r0 = newarray (byte)[1]";
    "if i7 < 127 goto $r0 = newarray (byte)[1]"->"i10 = -32768";
    "if i7 < 127 goto $r0 = newarray (byte)[1]"->"$r0 = newarray (byte)[1]";
    "i10 = -32768"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < 32767 goto $r6 = newarray (short)[1]";
    "$r6 = newarray (short)[1]"->"$s2 = (short) i10";
    "$s2 = (short) i10"->"$r6[0] = $s2";
    "$r6[0] = $s2"->"r31 = $r6";
    "r31 = $r6"->"$r7 = newarray (char)[1]";
    "$r7 = newarray (char)[1]"->"$c3 = (char) i10";
    "$c3 = (char) i10"->"$r7[0] = $c3";
    "$r7[0] = $c3"->"r32 = $r7";
    "r32 = $r7"->"l11 = staticinvoke <compiler.c2.Test8000805: long loadS2LmaskFF(short[])>(r31)";
    "l11 = staticinvoke <compiler.c2.Test8000805: long loadS2LmaskFF(short[])>(r31)"->"l12 = staticinvoke <compiler.c2.Test8000805: long _loadS2LmaskFF(short[])>(r31)";
    "l12 = staticinvoke <compiler.c2.Test8000805: long _loadS2LmaskFF(short[])>(r31)"->"$b4 = l11 cmp l12";
    "$b4 = l11 cmp l12"->"if $b4 == 0 goto l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)";
    "if $b4 == 0 goto l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)"->"$r23 = new java.lang.InternalError";
    "if $b4 == 0 goto l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)"->"l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)";
    "$r23 = new java.lang.InternalError"->"$r24 = newarray (java.lang.Object)[2]";
    "$r24 = newarray (java.lang.Object)[2]"->"$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11)";
    "$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11)"->"$r24[0] = $r25";
    "$r24[0] = $r25"->"$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l12)";
    "$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l12)"->"$r24[1] = $r26";
    "$r24[1] = $r26"->"$r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2LmaskFF failed: %x != %x\", $r24)";
    "$r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2LmaskFF failed: %x != %x\", $r24)"->"specialinvoke $r23.<java.lang.InternalError: void <init>(java.lang.String)>($r27)";
    "specialinvoke $r23.<java.lang.InternalError: void <init>(java.lang.String)>($r27)"->"throw $r23";
    "l13 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask16(short[])>(r31)"->"l14 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask16(short[])>(r31)";
    "l14 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask16(short[])>(r31)"->"$b5 = l13 cmp l14";
    "$b5 = l13 cmp l14"->"if $b5 == 0 goto l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)";
    "if $b5 == 0 goto l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)"->"$r18 = new java.lang.InternalError";
    "if $b5 == 0 goto l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)"->"l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)";
    "$r18 = new java.lang.InternalError"->"$r19 = newarray (java.lang.Object)[2]";
    "$r19 = newarray (java.lang.Object)[2]"->"$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13)";
    "$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13)"->"$r19[0] = $r20";
    "$r19[0] = $r20"->"$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14)";
    "$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14)"->"$r19[1] = $r21";
    "$r19[1] = $r21"->"$r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask16 failed: %x != %x\", $r19)";
    "$r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask16 failed: %x != %x\", $r19)"->"specialinvoke $r18.<java.lang.InternalError: void <init>(java.lang.String)>($r22)";
    "specialinvoke $r18.<java.lang.InternalError: void <init>(java.lang.String)>($r22)"->"throw $r18";
    "l15 = staticinvoke <compiler.c2.Test8000805: long loadS2Lmask13(short[])>(r31)"->"l16 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask13(short[])>(r31)";
    "l16 = staticinvoke <compiler.c2.Test8000805: long _loadS2Lmask13(short[])>(r31)"->"$b6 = l15 cmp l16";
    "$b6 = l15 cmp l16"->"if $b6 == 0 goto i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)";
    "if $b6 == 0 goto i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)"->"$r13 = new java.lang.InternalError";
    "if $b6 == 0 goto i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)"->"i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)";
    "$r13 = new java.lang.InternalError"->"$r14 = newarray (java.lang.Object)[2]";
    "$r14 = newarray (java.lang.Object)[2]"->"$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15)";
    "$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15)"->"$r14[0] = $r15";
    "$r14[0] = $r15"->"$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16)";
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16)"->"$r14[1] = $r16";
    "$r14[1] = $r16"->"$r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask13 failed: %x != %x\", $r14)";
    "$r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadS2Lmask13 failed: %x != %x\", $r14)"->"specialinvoke $r13.<java.lang.InternalError: void <init>(java.lang.String)>($r17)";
    "specialinvoke $r13.<java.lang.InternalError: void <init>(java.lang.String)>($r17)"->"throw $r13";
    "i17 = staticinvoke <compiler.c2.Test8000805: int loadUS_signExt(char[])>(r32)"->"i18 = staticinvoke <compiler.c2.Test8000805: int _loadUS_signExt(char[])>(r32)";
    "i18 = staticinvoke <compiler.c2.Test8000805: int _loadUS_signExt(char[])>(r32)"->"if i17 == i18 goto i10 = i10 + 1";
    "if i17 == i18 goto i10 = i10 + 1"->"$r8 = new java.lang.InternalError";
    "if i17 == i18 goto i10 = i10 + 1"->"i10 = i10 + 1";
    "$r8 = new java.lang.InternalError"->"$r9 = newarray (java.lang.Object)[2]";
    "$r9 = newarray (java.lang.Object)[2]"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17)"->"$r9[0] = $r10";
    "$r9[0] = $r10"->"$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18)";
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18)"->"$r9[1] = $r11";
    "$r9[1] = $r11"->"$r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadUS_signExt failed: %x != %x\", $r9)";
    "$r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"loadUS_signExt failed: %x != %x\", $r9)"->"specialinvoke $r8.<java.lang.InternalError: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r8.<java.lang.InternalError: void <init>(java.lang.String)>($r12)"->"throw $r8";
    "i10 = i10 + 1"->"if i10 < 32767 goto $r6 = newarray (short)[1]";
    "if i10 < 32767 goto $r6 = newarray (short)[1]"->"$r28 = <java.lang.System: java.io.PrintStream out>";
    "if i10 < 32767 goto $r6 = newarray (short)[1]"->"$r6 = newarray (short)[1]";
    "$r28 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED.\")";
    "virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED.\")"->"return";
}
