digraph "unitGraph" {
    "r0 := @this: compiler.codegen.BitTests"
    "l2 := @parameter0: long"
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$i1 = (int) $l0"
    "if $i1 >= 0 goto return l2"
    "l2 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l2)"
    "return l2"
    "r0 := @this: compiler.codegen.BitTests"->"l2 := @parameter0: long";
    "l2 := @parameter0: long"->"$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$i1 = (int) $l0";
    "$i1 = (int) $l0"->"if $i1 >= 0 goto return l2";
    "if $i1 >= 0 goto return l2"->"l2 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l2)";
    "if $i1 >= 0 goto return l2"->"return l2";
    "l2 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l2)"->"return l2";
}
