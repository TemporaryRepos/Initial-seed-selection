digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new jit.deoptimization.test04.A;
specialinvoke $r0.<jit.deoptimization.test04.A: void <init>()>();
r1 = $r0;
i1 = -1;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
i1 = i1 + $i0;
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 1 goto $i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i1 == 1 goto return;
"
    "Block 4:
[preds: 3 ] [succs: ]
$r2 = new nsk.share.TestFailure;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"result : \");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" must equal 1\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>($r6);
throw $r2;
"
    "Block 5:
[preds: 3 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new jit.deoptimization.test04.A;
specialinvoke $r0.<jit.deoptimization.test04.A: void <init>()>();
r1 = $r0;
i1 = -1;
i2 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 1 goto $i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
i1 = i1 + $i0;
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 1 goto $i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 1 goto $i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
if i1 == 1 goto return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i2 < 1 goto $i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = virtualinvoke r1.<jit.deoptimization.test04.A: int used_alot()>();
i1 = i1 + $i0;
i2 = i2 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i1 == 1 goto return;
"->"Block 4:
[preds: 3 ] [succs: ]
$r2 = new nsk.share.TestFailure;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"result : \");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" must equal 1\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>($r6);
throw $r2;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i1 == 1 goto return;
"->"Block 5:
[preds: 3 ] [succs: ]
return;
";
}
