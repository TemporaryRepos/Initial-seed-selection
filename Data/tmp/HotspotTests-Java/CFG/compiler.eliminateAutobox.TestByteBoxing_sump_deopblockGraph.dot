digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: byte[];
r4 := @parameter1: java.lang.Byte;
r1 = r0;
i0 = lengthof r0;
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$b1 = r1[i8];
r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);
$b2 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>();
$b3 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>();
$r3 = staticinvoke <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte foob(byte)>($b3);
$b4 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();
$i5 = $b2 + $b4;
$b6 = (byte) $i5;
r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);
i8 = i8 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < i0 goto $b1 = r1[i8];
"
    "Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestByteBoxing: void dummy()>();
$b7 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>();
return $b7;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: byte[];
r4 := @parameter1: java.lang.Byte;
r1 = r0;
i0 = lengthof r0;
i8 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < i0 goto $b1 = r1[i8];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$b1 = r1[i8];
r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);
$b2 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>();
$b3 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>();
$r3 = staticinvoke <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte foob(byte)>($b3);
$b4 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();
$i5 = $b2 + $b4;
$b6 = (byte) $i5;
r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);
i8 = i8 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < i0 goto $b1 = r1[i8];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < i0 goto $b1 = r1[i8];
"->"Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestByteBoxing: void dummy()>();
$b7 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>();
return $b7;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < i0 goto $b1 = r1[i8];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$b1 = r1[i8];
r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);
$b2 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>();
$b3 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>();
$r3 = staticinvoke <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte foob(byte)>($b3);
$b4 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();
$i5 = $b2 + $b4;
$b6 = (byte) $i5;
r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);
i8 = i8 + 1;
";
}
