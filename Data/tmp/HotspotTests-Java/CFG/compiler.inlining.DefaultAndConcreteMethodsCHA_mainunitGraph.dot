digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "i2 = 0"
    "goto [?= (branch)]"
    "$r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C"
    "specialinvoke $r0.<compiler.inlining.DefaultAndConcreteMethodsCHA$C: void <init>()>()"
    "i0 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r0)"
    "if i0 == 0 goto $r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D"
    "$r6 = new java.lang.Error"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"C.m didn\'t invoke I.m: id \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r9)"
    "throw $r6"
    "$r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D"
    "specialinvoke $r1.<compiler.inlining.DefaultAndConcreteMethodsCHA$D: void <init>()>()"
    "i1 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r1)"
    "if i1 == 1 goto i2 = i2 + 1"
    "$r2 = new java.lang.Error"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"D.m didn\'t invoke D.m: id \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r5)"
    "throw $r2"
    "i2 = i2 + 1"
    "if i2 < 10000 goto $r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10000 goto $r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C";
    "$r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C"->"specialinvoke $r0.<compiler.inlining.DefaultAndConcreteMethodsCHA$C: void <init>()>()";
    "specialinvoke $r0.<compiler.inlining.DefaultAndConcreteMethodsCHA$C: void <init>()>()"->"i0 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r0)";
    "i0 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r0)"->"if i0 == 0 goto $r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D";
    "if i0 == 0 goto $r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D"->"$r6 = new java.lang.Error";
    "if i0 == 0 goto $r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D"->"$r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D";
    "$r6 = new java.lang.Error"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"C.m didn\'t invoke I.m: id \")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"C.m didn\'t invoke I.m: id \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r9)";
    "specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r9)"->"throw $r6";
    "$r1 = new compiler.inlining.DefaultAndConcreteMethodsCHA$D"->"specialinvoke $r1.<compiler.inlining.DefaultAndConcreteMethodsCHA$D: void <init>()>()";
    "specialinvoke $r1.<compiler.inlining.DefaultAndConcreteMethodsCHA$D: void <init>()>()"->"i1 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r1)";
    "i1 = staticinvoke <compiler.inlining.DefaultAndConcreteMethodsCHA: int test(compiler.inlining.DefaultAndConcreteMethodsCHA$A)>($r1)"->"if i1 == 1 goto i2 = i2 + 1";
    "if i1 == 1 goto i2 = i2 + 1"->"$r2 = new java.lang.Error";
    "if i1 == 1 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r2 = new java.lang.Error"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"D.m didn\'t invoke D.m: id \")";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"D.m didn\'t invoke D.m: id \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r5)";
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r5)"->"throw $r2";
    "i2 = i2 + 1"->"if i2 < 10000 goto $r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C";
    "if i2 < 10000 goto $r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C"->"return";
    "if i2 < 10000 goto $r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C"->"$r0 = new compiler.inlining.DefaultAndConcreteMethodsCHA$C";
}
