digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 6 ]
r0 := @parameter0: compiler.c2.Test6837094$Factory;
r4 := @parameter1: java.util.Set;
$r1 = interfaceinvoke r0.<compiler.c2.Test6837094$Factory: compiler.c2.Test6837094$Interface[] getArray()>();
r2 = $r1;
i0 = lengthof $r1;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
r3 = r2[i1];
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= i1 = i1 + 1];
"
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
$r5 := @caughtexception;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i1 = i1 + 1;
"
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i1 < i0 goto r3 = r2[i1];
"
    "Block 7:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 6 ]
r0 := @parameter0: compiler.c2.Test6837094$Factory;
r4 := @parameter1: java.util.Set;
$r1 = interfaceinvoke r0.<compiler.c2.Test6837094$Factory: compiler.c2.Test6837094$Interface[] getArray()>();
r2 = $r1;
i0 = lengthof $r1;
i1 = 0;
goto [?= (branch)];
"->"Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i1 < i0 goto r3 = r2[i1];
";
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
r3 = r2[i1];
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);
";
    "Block 1:
[preds: 6 ] [succs: 2 4 ]
r3 = r2[i1];
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
$r5 := @caughtexception;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= i1 = i1 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
$r5 := @caughtexception;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= i1 = i1 + 1];
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i1 = i1 + 1;
";
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
$r5 := @caughtexception;
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i1 = i1 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i1 = i1 + 1;
"->"Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i1 < i0 goto r3 = r2[i1];
";
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i1 < i0 goto r3 = r2[i1];
"->"Block 7:
[preds: 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 0 5 ] [succs: 7 1 ]
if i1 < i0 goto r3 = r2[i1];
"->"Block 1:
[preds: 6 ] [succs: 2 4 ]
r3 = r2[i1];
";
}
