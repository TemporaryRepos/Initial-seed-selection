digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.codegen.C1NullCheckOfNullStore$Foo"
    "specialinvoke $r0.<compiler.codegen.C1NullCheckOfNullStore$Foo: void <init>(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"
    "r1 = $r0"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)"
    "i0 = i0 + 1"
    "if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)"
    "z0 = 0"
    "i1 = 0"
    "staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"
    "i1 = i1 + 1"
    "if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"
    "$r3 := @caughtexception"
    "z0 = 1"
    "if z0 != 0 goto return"
    "$r2 = new java.lang.Error"
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>(\"Expecting a NullPointerException\")"
    "throw $r2"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new compiler.codegen.C1NullCheckOfNullStore$Foo";
    "$r0 = new compiler.codegen.C1NullCheckOfNullStore$Foo"->"specialinvoke $r0.<compiler.codegen.C1NullCheckOfNullStore$Foo: void <init>(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)";
    "specialinvoke $r0.<compiler.codegen.C1NullCheckOfNullStore$Foo: void <init>(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"r1 = $r0";
    "r1 = $r0"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)";
    "staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)";
    "if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)"->"z0 = 0";
    "if i0 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)"->"staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(r1)";
    "z0 = 0"->"i1 = 0";
    "z0 = 0"->"$r3 := @caughtexception";
    "i1 = 0"->"goto [?= (branch)]";
    "i1 = 0"->"$r3 := @caughtexception";
    "goto [?= (branch)]"->"if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)";
    "goto [?= (branch)]"->"$r3 := @caughtexception";
    "staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"i1 = i1 + 1";
    "staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"$r3 := @caughtexception";
    "i1 = i1 + 1"->"if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)";
    "i1 = i1 + 1"->"$r3 := @caughtexception";
    "if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"goto [?= (branch)]";
    "if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)";
    "if i1 < 10000 goto staticinvoke <compiler.codegen.C1NullCheckOfNullStore: void test(compiler.codegen.C1NullCheckOfNullStore$Foo)>(null)"->"$r3 := @caughtexception";
    "goto [?= (branch)]"->"if z0 != 0 goto return";
    "$r3 := @caughtexception"->"z0 = 1";
    "z0 = 1"->"if z0 != 0 goto return";
    "if z0 != 0 goto return"->"$r2 = new java.lang.Error";
    "if z0 != 0 goto return"->"return";
    "$r2 = new java.lang.Error"->"specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>(\"Expecting a NullPointerException\")";
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>(\"Expecting a NullPointerException\")"->"throw $r2";
}
