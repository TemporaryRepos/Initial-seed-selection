digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r17 := @parameter0: java.lang.String[];
r0 = newarray (int)[256];
r1 = newarray (int)[256];
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r1[i4] = i4;
i4 = i4 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 256 goto r1[i4] = i4;
"
    "Block 3:
[preds: 2 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 14 ] [succs: 8 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0);
z0 = 1;
i6 = 0;
i7 = 0;
goto [?= (branch)];
"
    "Block 5:
[preds: 8 ] [succs: 6 7 ]
$i1 = r1[i7];
i6 = i6 + $i1;
$i2 = r0[i7];
if $i2 == i6 goto i7 = i7 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \");
$i3 = r0[i7];
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
i7 = i7 + 1;
"
    "Block 8:
[preds: 4 7 ] [succs: 9 5 ]
if i7 < 256 goto $i1 = r1[i7];
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i6 == i0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \");
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);
"
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto i5 = i5 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r10;
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
i5 = i5 + 1;
"
    "Block 14:
[preds: 3 13 ] [succs: 15 4 ]
if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
"
    "Block 15:
[preds: 14 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r17 := @parameter0: java.lang.String[];
r0 = newarray (int)[256];
r1 = newarray (int)[256];
i4 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 256 goto r1[i4] = i4;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r1[i4] = i4;
i4 = i4 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 256 goto r1[i4] = i4;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 256 goto r1[i4] = i4;
"->"Block 3:
[preds: 2 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 256 goto r1[i4] = i4;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r1[i4] = i4;
i4 = i4 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 3 13 ] [succs: 15 4 ]
if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
";
    "Block 4:
[preds: 14 ] [succs: 8 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0);
z0 = 1;
i6 = 0;
i7 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 4 7 ] [succs: 9 5 ]
if i7 < 256 goto $i1 = r1[i7];
";
    "Block 5:
[preds: 8 ] [succs: 6 7 ]
$i1 = r1[i7];
i6 = i6 + $i1;
$i2 = r0[i7];
if $i2 == i6 goto i7 = i7 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \");
$i3 = r0[i7];
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 0;
";
    "Block 5:
[preds: 8 ] [succs: 6 7 ]
$i1 = r1[i7];
i6 = i6 + $i1;
$i2 = r0[i7];
if $i2 == i6 goto i7 = i7 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
i7 = i7 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \");
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \");
$i3 = r0[i7];
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
i7 = i7 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
i7 = i7 + 1;
"->"Block 8:
[preds: 4 7 ] [succs: 9 5 ]
if i7 < 256 goto $i1 = r1[i7];
";
    "Block 8:
[preds: 4 7 ] [succs: 9 5 ]
if i7 < 256 goto $i1 = r1[i7];
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
if i6 == i0 goto (branch);
";
    "Block 8:
[preds: 4 7 ] [succs: 9 5 ]
if i7 < 256 goto $i1 = r1[i7];
"->"Block 5:
[preds: 8 ] [succs: 6 7 ]
$i1 = r1[i7];
i6 = i6 + $i1;
$i2 = r0[i7];
if $i2 == i6 goto i7 = i7 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i6 == i0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 11 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \");
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if i6 == i0 goto (branch);
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto i5 = i5 + 1;
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \");
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto i5 = i5 + 1;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto i5 = i5 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
$r10 = new java.lang.RuntimeException;
specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\");
throw $r10;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if z0 != 0 goto i5 = i5 + 1;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
i5 = i5 + 1;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
i5 = i5 + 1;
"->"Block 14:
[preds: 3 13 ] [succs: 15 4 ]
if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
";
    "Block 14:
[preds: 3 13 ] [succs: 15 4 ]
if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
"->"Block 15:
[preds: 14 ] [succs: ]
return;
";
    "Block 14:
[preds: 3 13 ] [succs: 15 4 ]
if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
"->"Block 4:
[preds: 14 ] [succs: 8 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256);
i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0);
z0 = 1;
i6 = 0;
i7 = 0;
goto [?= (branch)];
";
}
