digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "i2 := @parameter2: int"
    "z0 := @parameter3: boolean"
    "if z0 == 0 goto return"
    "if i0 < i1 goto <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1"
    "$i3 = i2 - 1"
    "if i0 <= $i3 goto return"
    "<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1"
    "return"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"z0 := @parameter3: boolean";
    "z0 := @parameter3: boolean"->"if z0 == 0 goto return";
    "if z0 == 0 goto return"->"if i0 < i1 goto <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1";
    "if z0 == 0 goto return"->"return";
    "if i0 < i1 goto <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1"->"$i3 = i2 - 1";
    "if i0 < i1 goto <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1"->"<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1";
    "$i3 = i2 - 1"->"if i0 <= $i3 goto return";
    "if i0 <= $i3 goto return"->"<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1";
    "if i0 <= $i3 goto return"->"return";
    "<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 1"->"return";
}
