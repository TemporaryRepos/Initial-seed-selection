digraph "unitGraph" {
    "r0 := @this: vm.runtime.defmeth.AccessibilityFlagsTest"
    "r3 := @parameter0: vm.runtime.defmeth.shared.data.Clazz"
    "$r1 = r0.<vm.runtime.defmeth.AccessibilityFlagsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>"
    "$r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>()"
    "r4 = virtualinvoke $r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TestBuilder register(vm.runtime.defmeth.shared.data.Clazz)>(r3)"
    "$r5 = virtualinvoke r4.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()"
    "$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder loadClass(vm.runtime.defmeth.shared.data.Clazz)>(r3)"
    "$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder ignoreResult()>()"
    "$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>()"
    "virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>()"
    "return"
    "r0 := @this: vm.runtime.defmeth.AccessibilityFlagsTest"->"r3 := @parameter0: vm.runtime.defmeth.shared.data.Clazz";
    "r3 := @parameter0: vm.runtime.defmeth.shared.data.Clazz"->"$r1 = r0.<vm.runtime.defmeth.AccessibilityFlagsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>";
    "$r1 = r0.<vm.runtime.defmeth.AccessibilityFlagsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>"->"$r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>()";
    "$r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>()"->"r4 = virtualinvoke $r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TestBuilder register(vm.runtime.defmeth.shared.data.Clazz)>(r3)";
    "r4 = virtualinvoke $r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TestBuilder register(vm.runtime.defmeth.shared.data.Clazz)>(r3)"->"$r5 = virtualinvoke r4.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()";
    "$r5 = virtualinvoke r4.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()"->"$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder loadClass(vm.runtime.defmeth.shared.data.Clazz)>(r3)";
    "$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder loadClass(vm.runtime.defmeth.shared.data.Clazz)>(r3)"->"$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder ignoreResult()>()";
    "$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder ignoreResult()>()"->"$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>()";
    "$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>()"->"virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>()";
    "virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>()"->"return";
}
