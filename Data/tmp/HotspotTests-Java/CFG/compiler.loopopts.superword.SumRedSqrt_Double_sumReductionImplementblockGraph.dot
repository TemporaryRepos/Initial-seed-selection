digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
r2 := @parameter1: double[];
r3 := @parameter2: double[];
r1 := @parameter3: double[];
d15 := @parameter4: double;
i1 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d1 = r0[i1];
$d0 = r2[i1];
$d2 = $d1 * $d0;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = r0[i1];
$d4 = r3[i1];
$d6 = $d5 * $d4;
$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);
$d11 = $d3 + $d7;
$d9 = r2[i1];
$d8 = r3[i1];
$d10 = $d9 * $d8;
$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);
$d13 = $d11 + $d12;
r1[i1] = $d13;
$d14 = r1[i1];
d15 = d15 + $d14;
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d1 = r0[i1];
"
    "Block 3:
[preds: 2 ] [succs: ]
return d15;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
r2 := @parameter1: double[];
r3 := @parameter2: double[];
r1 := @parameter3: double[];
d15 := @parameter4: double;
i1 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d1 = r0[i1];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d1 = r0[i1];
$d0 = r2[i1];
$d2 = $d1 * $d0;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = r0[i1];
$d4 = r3[i1];
$d6 = $d5 * $d4;
$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);
$d11 = $d3 + $d7;
$d9 = r2[i1];
$d8 = r3[i1];
$d10 = $d9 * $d8;
$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);
$d13 = $d11 + $d12;
r1[i1] = $d13;
$d14 = r1[i1];
d15 = d15 + $d14;
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d1 = r0[i1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d1 = r0[i1];
"->"Block 3:
[preds: 2 ] [succs: ]
return d15;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d1 = r0[i1];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d1 = r0[i1];
$d0 = r2[i1];
$d2 = $d1 * $d0;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = r0[i1];
$d4 = r3[i1];
$d6 = $d5 * $d4;
$d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);
$d11 = $d3 + $d7;
$d9 = r2[i1];
$d8 = r3[i1];
$d10 = $d9 * $d8;
$d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);
$d13 = $d11 + $d12;
r1[i1] = $d13;
$d14 = r1[i1];
d15 = d15 + $d14;
i1 = i1 + 1;
";
}
