digraph "unitGraph" {
    "r1 := @this: jit.FloatingPoint.gen_math.Filtering.Filtering"
    "i0 := @parameter0: int"
    "r0 := @parameter1: double[]"
    "d4 = 0.0"
    "d0 = (double) i0"
    "i1 = 0"
    "goto [?= (branch)]"
    "$d2 = r0[i1]"
    "$d1 = r0[i1]"
    "d3 = $d2 * $d1"
    "d4 = d4 + d3"
    "i1 = i1 + 1"
    "if i1 < i0 goto $d2 = r0[i1]"
    "d5 = d4 / d0"
    "return d5"
    "r1 := @this: jit.FloatingPoint.gen_math.Filtering.Filtering"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"r0 := @parameter1: double[]";
    "r0 := @parameter1: double[]"->"d4 = 0.0";
    "d4 = 0.0"->"d0 = (double) i0";
    "d0 = (double) i0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto $d2 = r0[i1]";
    "$d2 = r0[i1]"->"$d1 = r0[i1]";
    "$d1 = r0[i1]"->"d3 = $d2 * $d1";
    "d3 = $d2 * $d1"->"d4 = d4 + d3";
    "d4 = d4 + d3"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto $d2 = r0[i1]";
    "if i1 < i0 goto $d2 = r0[i1]"->"d5 = d4 / d0";
    "if i1 < i0 goto $d2 = r0[i1]"->"$d2 = r0[i1]";
    "d5 = d4 / d0"->"return d5";
}
