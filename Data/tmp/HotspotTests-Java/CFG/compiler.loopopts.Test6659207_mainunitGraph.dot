digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "i1 = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "$i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)"
    "i1 = i1 + $i0"
    "i2 = i2 + 1"
    "if i2 < 100000 goto $i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(int)>(i1)"
    "return"
    "r1 := @parameter0: java.lang.String[]"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 100000 goto $i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)";
    "$i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)"->"i1 = i1 + $i0";
    "i1 = i1 + $i0"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 100000 goto $i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)";
    "if i2 < 100000 goto $i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < 100000 goto $i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)"->"$i0 = staticinvoke <compiler.loopopts.Test6659207: int test(int)>(10)";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(int)>(i1)";
    "virtualinvoke $r0.<java.io.PrintStream: void println(int)>(i1)"->"return";
}
