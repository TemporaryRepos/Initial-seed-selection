digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i0 := @parameter2: int;
i2 := @parameter3: int;
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = i4 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i1, -123, i0);
$i3 = i4 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i3, -103, i2);
i4 = i4 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 94 goto $i1 = i4 + 3;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i0 := @parameter2: int;
i2 := @parameter3: int;
i4 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 94 goto $i1 = i4 + 3;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = i4 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i1, -123, i0);
$i3 = i4 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i3, -103, i2);
i4 = i4 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 94 goto $i1 = i4 + 3;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 94 goto $i1 = i4 + 3;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 94 goto $i1 = i4 + 3;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i1 = i4 + 3;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i1, -123, i0);
$i3 = i4 + 3;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: boolean compareAndSet(int,int,int)>($i3, -103, i2);
i4 = i4 + 1;
";
}
