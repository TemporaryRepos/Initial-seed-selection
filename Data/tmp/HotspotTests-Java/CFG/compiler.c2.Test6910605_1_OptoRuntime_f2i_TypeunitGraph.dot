digraph "unitGraph" {
    "r2 := @parameter0: java.io.PrintStream"
    "b0 = 2"
    "b1 = 3"
    "i5 = 0"
    "i6 = 0"
    "r11 = newmultiarray (int)[b0][b1]"
    "goto [?= (branch)]"
    "$r0 = r11[i5]"
    "$i2 = i5 + 1"
    "$f1 = (float) $i2"
    "$i3 = i6 + 1"
    "$f0 = (float) $i3"
    "$f2 = $f1 / $f0"
    "$i4 = (int) $f2"
    "$r0[i6] = $i4"
    "i6 = i6 + 1"
    "if i6 < b1 goto $r0 = r11[i5]"
    "i5 = i5 + 1"
    "if i5 < b0 goto i6 = 0"
    "goto [?= return 0]"
    "$r1 := @caughtexception"
    "r12 = $r1"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Unexpected exception \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r5)"
    "virtualinvoke r12.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2)"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"j=\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", k=\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "return 1"
    "return 0"
    "r2 := @parameter0: java.io.PrintStream"->"b0 = 2";
    "b0 = 2"->"b1 = 3";
    "b1 = 3"->"i5 = 0";
    "i5 = 0"->"i6 = 0";
    "i6 = 0"->"r11 = newmultiarray (int)[b0][b1]";
    "i6 = 0"->"$r1 := @caughtexception";
    "r11 = newmultiarray (int)[b0][b1]"->"i5 = 0";
    "r11 = newmultiarray (int)[b0][b1]"->"$r1 := @caughtexception";
    "i5 = 0"->"goto [?= (branch)]";
    "i5 = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i5 < b0 goto i6 = 0";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "i6 = 0"->"goto [?= (branch)]";
    "i6 = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i6 < b1 goto $r0 = r11[i5]";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "$r0 = r11[i5]"->"$i2 = i5 + 1";
    "$r0 = r11[i5]"->"$r1 := @caughtexception";
    "$i2 = i5 + 1"->"$f1 = (float) $i2";
    "$i2 = i5 + 1"->"$r1 := @caughtexception";
    "$f1 = (float) $i2"->"$i3 = i6 + 1";
    "$f1 = (float) $i2"->"$r1 := @caughtexception";
    "$i3 = i6 + 1"->"$f0 = (float) $i3";
    "$i3 = i6 + 1"->"$r1 := @caughtexception";
    "$f0 = (float) $i3"->"$f2 = $f1 / $f0";
    "$f0 = (float) $i3"->"$r1 := @caughtexception";
    "$f2 = $f1 / $f0"->"$i4 = (int) $f2";
    "$f2 = $f1 / $f0"->"$r1 := @caughtexception";
    "$i4 = (int) $f2"->"$r0[i6] = $i4";
    "$i4 = (int) $f2"->"$r1 := @caughtexception";
    "$r0[i6] = $i4"->"i6 = i6 + 1";
    "$r0[i6] = $i4"->"$r1 := @caughtexception";
    "i6 = i6 + 1"->"if i6 < b1 goto $r0 = r11[i5]";
    "i6 = i6 + 1"->"$r1 := @caughtexception";
    "if i6 < b1 goto $r0 = r11[i5]"->"i5 = i5 + 1";
    "if i6 < b1 goto $r0 = r11[i5]"->"$r0 = r11[i5]";
    "if i6 < b1 goto $r0 = r11[i5]"->"$r1 := @caughtexception";
    "i5 = i5 + 1"->"if i5 < b0 goto i6 = 0";
    "i5 = i5 + 1"->"$r1 := @caughtexception";
    "if i5 < b0 goto i6 = 0"->"goto [?= return 0]";
    "if i5 < b0 goto i6 = 0"->"i6 = 0";
    "if i5 < b0 goto i6 = 0"->"$r1 := @caughtexception";
    "goto [?= return 0]"->"return 0";
    "$r1 := @caughtexception"->"r12 = $r1";
    "r12 = $r1"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Unexpected exception \")";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Unexpected exception \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r5)";
    "virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r5)"->"virtualinvoke r12.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2)";
    "virtualinvoke r12.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r2)"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"j=\")";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"j=\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", k=\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", k=\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"return 1";
}
