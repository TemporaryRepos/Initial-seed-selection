digraph "unitGraph" {
    "$r0 = new compiler.types.TypeSpeculation$A"
    "specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()"
    "r1 = $r0"
    "i1 = 0"
    "goto [?= (branch)]"
    "$i0 = i1 % 2"
    "if $i0 != 0 goto staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)"
    "staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 1)"
    "goto [?= i1 = i1 + 1]"
    "staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)"
    "i1 = i1 + 1"
    "if i1 < 20000 goto $i0 = i1 % 2"
    "return 1"
    "$r0 = new compiler.types.TypeSpeculation$A"->"specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()";
    "specialinvoke $r0.<compiler.types.TypeSpeculation$A: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 20000 goto $i0 = i1 % 2";
    "$i0 = i1 % 2"->"if $i0 != 0 goto staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)";
    "if $i0 != 0 goto staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)"->"staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 1)";
    "if $i0 != 0 goto staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)"->"staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 1)"->"goto [?= i1 = i1 + 1]";
    "goto [?= i1 = i1 + 1]"->"i1 = i1 + 1";
    "staticinvoke <compiler.types.TypeSpeculation: java.lang.Object test9_1(java.lang.Object,boolean)>(r1, 0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 20000 goto $i0 = i1 % 2";
    "if i1 < 20000 goto $i0 = i1 % 2"->"return 1";
    "if i1 < 20000 goto $i0 = i1 % 2"->"$i0 = i1 % 2";
}
