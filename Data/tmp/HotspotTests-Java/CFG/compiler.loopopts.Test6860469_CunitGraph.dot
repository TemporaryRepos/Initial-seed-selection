digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i4 := @parameter1: int"
    "i5 = -1"
    "i6 = 17"
    "if i0 == 0 goto (branch)"
    "if i0 >= i6 goto (branch)"
    "i6 = i0"
    "if i0 <= i5 goto (branch)"
    "i5 = i0"
    "if i4 <= i5 goto (branch)"
    "i4 = i5"
    "if i6 <= i4 goto $i1 = i5 - i4"
    "i6 = i4"
    "$i1 = i5 - i4"
    "i7 = 1 >> $i1"
    "goto [?= (branch)]"
    "$i2 = 32 - i4"
    "i3 = i7 << $i2"
    "$r0 = <compiler.loopopts.Test6860469: int[] fl>"
    "$r0[i3] = i5"
    "i7 = i7 + 1"
    "if i7 <= 0 goto $i2 = 32 - i4"
    "return i6"
    "i0 := @parameter0: int"->"i4 := @parameter1: int";
    "i4 := @parameter1: int"->"i5 = -1";
    "i5 = -1"->"i6 = 17";
    "i6 = 17"->"if i0 == 0 goto (branch)";
    "if i0 == 0 goto (branch)"->"if i0 >= i6 goto (branch)";
    "if i0 == 0 goto (branch)"->"if i4 <= i5 goto (branch)";
    "if i0 >= i6 goto (branch)"->"i6 = i0";
    "if i0 >= i6 goto (branch)"->"if i0 <= i5 goto (branch)";
    "i6 = i0"->"if i0 <= i5 goto (branch)";
    "if i0 <= i5 goto (branch)"->"i5 = i0";
    "if i0 <= i5 goto (branch)"->"if i4 <= i5 goto (branch)";
    "i5 = i0"->"if i4 <= i5 goto (branch)";
    "if i4 <= i5 goto (branch)"->"i4 = i5";
    "if i4 <= i5 goto (branch)"->"if i6 <= i4 goto $i1 = i5 - i4";
    "i4 = i5"->"if i6 <= i4 goto $i1 = i5 - i4";
    "if i6 <= i4 goto $i1 = i5 - i4"->"i6 = i4";
    "if i6 <= i4 goto $i1 = i5 - i4"->"$i1 = i5 - i4";
    "i6 = i4"->"$i1 = i5 - i4";
    "$i1 = i5 - i4"->"i7 = 1 >> $i1";
    "i7 = 1 >> $i1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 <= 0 goto $i2 = 32 - i4";
    "$i2 = 32 - i4"->"i3 = i7 << $i2";
    "i3 = i7 << $i2"->"$r0 = <compiler.loopopts.Test6860469: int[] fl>";
    "$r0 = <compiler.loopopts.Test6860469: int[] fl>"->"$r0[i3] = i5";
    "$r0[i3] = i5"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 <= 0 goto $i2 = 32 - i4";
    "if i7 <= 0 goto $i2 = 32 - i4"->"return i6";
    "if i7 <= 0 goto $i2 = 32 - i4"->"$i2 = 32 - i4";
}
