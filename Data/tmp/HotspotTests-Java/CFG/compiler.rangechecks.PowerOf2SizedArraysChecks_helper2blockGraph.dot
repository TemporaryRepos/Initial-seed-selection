digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String;
r2 := @parameter1: java.util.function.Function;
r0 := @parameter2: int[];
r6 := @parameter3: boolean[];
i2 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
i1 = r0[i2];
r1 = newarray (int)[i1];
$r3 = interfaceinvoke r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r4 = (java.lang.Boolean) $r3;
z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
$z1 = r6[i2];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,boolean,boolean)>(r5, i1, $z1, z0);
i2 = i2 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto i1 = r0[i2];
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r5 := @parameter0: java.lang.String;
r2 := @parameter1: java.util.function.Function;
r0 := @parameter2: int[];
r6 := @parameter3: boolean[];
i2 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto i1 = r0[i2];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
i1 = r0[i2];
r1 = newarray (int)[i1];
$r3 = interfaceinvoke r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r4 = (java.lang.Boolean) $r3;
z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
$z1 = r6[i2];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,boolean,boolean)>(r5, i1, $z1, z0);
i2 = i2 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto i1 = r0[i2];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto i1 = r0[i2];
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i2 < $i0 goto i1 = r0[i2];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
i1 = r0[i2];
r1 = newarray (int)[i1];
$r3 = interfaceinvoke r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);
$r4 = (java.lang.Boolean) $r3;
z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
$z1 = r6[i2];
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void check_result(java.lang.String,int,boolean,boolean)>(r5, i1, $z1, z0);
i2 = i2 + 1;
";
}
