digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @parameter0: java.lang.String[];
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i1 % 2;
if $i0 != 0 goto $b2 = -1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$b2 = 0;
goto [?= staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$b2 = -1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0);
i1 = i1 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < 20000 goto $i0 = i1 % 2;
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @parameter0: java.lang.String[];
i1 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < 20000 goto $i0 = i1 % 2;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i1 % 2;
if $i0 != 0 goto $b2 = -1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$b2 = 0;
goto [?= staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0)];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i1 % 2;
if $i0 != 0 goto $b2 = -1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$b2 = -1;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$b2 = 0;
goto [?= staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0)];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0);
i1 = i1 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$b2 = -1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0);
i1 = i1 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test(int,boolean)>($b2, 0);
i1 = i1 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < 20000 goto $i0 = i1 % 2;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < 20000 goto $i0 = i1 % 2;
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < 20000 goto $i0 = i1 % 2;
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i1 % 2;
if $i0 != 0 goto $b2 = -1;
";
}
