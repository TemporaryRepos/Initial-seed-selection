digraph "unitGraph" {
    "r0 := @this: compiler.escapeAnalysis.Test6775880"
    "r8 = \"\""
    "i1 = 0"
    "goto [?= $i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>]"
    "if i1 == 0 goto $r1 = new java.lang.StringBuilder"
    "$r5 = new java.lang.StringBuilder"
    "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6)"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"
    "r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r1 = new java.lang.StringBuilder"
    "$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2)"
    "$r3 = r0.<compiler.escapeAnalysis.Test6775880: int[] b>"
    "$i0 = $r3[i1]"
    "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"
    "r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i1 = i1 + 1"
    "$i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>"
    "if i1 < $i2 goto (branch)"
    "return r8"
    "r0 := @this: compiler.escapeAnalysis.Test6775880"->"r8 = \"\"";
    "r8 = \"\""->"i1 = 0";
    "i1 = 0"->"goto [?= $i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>]";
    "goto [?= $i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>]"->"$i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>";
    "if i1 == 0 goto $r1 = new java.lang.StringBuilder"->"$r5 = new java.lang.StringBuilder";
    "if i1 == 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)";
    "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6)"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"->"r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)";
    "$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8)"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2)";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2)"->"$r3 = r0.<compiler.escapeAnalysis.Test6775880: int[] b>";
    "$r3 = r0.<compiler.escapeAnalysis.Test6775880: int[] b>"->"$i0 = $r3[i1]";
    "$i0 = $r3[i1]"->"$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)";
    "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>";
    "$i2 = r0.<compiler.escapeAnalysis.Test6775880: int cnt>"->"if i1 < $i2 goto (branch)";
    "if i1 < $i2 goto (branch)"->"return r8";
    "if i1 < $i2 goto (branch)"->"if i1 == 0 goto $r1 = new java.lang.StringBuilder";
}
