digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
$r0 = new compiler.c1.TestDeoptInt$A;
specialinvoke $r0.<compiler.c1.TestDeoptInt$A: void <init>(int)>(10);
r1 = $r0;
$i1 = r1.<compiler.c1.TestDeoptInt$A: int vl>;
i2 = i0 + $i1;
if i2 == 20 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a (= \");
$i3 = r1.<compiler.c1.TestDeoptInt$A: int vl>;
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") + b (= \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = c (= \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != 20\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = new java.lang.InternalError;
specialinvoke $r11.<java.lang.InternalError: void <init>()>();
throw $r11;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
$r0 = new compiler.c1.TestDeoptInt$A;
specialinvoke $r0.<compiler.c1.TestDeoptInt$A: void <init>(int)>(10);
r1 = $r0;
$i1 = r1.<compiler.c1.TestDeoptInt$A: int vl>;
i2 = i0 + $i1;
if i2 == 20 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"a (= \");
$i3 = r1.<compiler.c1.TestDeoptInt$A: int vl>;
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") + b (= \");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") = c (= \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") != 20\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = new java.lang.InternalError;
specialinvoke $r11.<java.lang.InternalError: void <init>()>();
throw $r11;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
$r0 = new compiler.c1.TestDeoptInt$A;
specialinvoke $r0.<compiler.c1.TestDeoptInt$A: void <init>(int)>(10);
r1 = $r0;
$i1 = r1.<compiler.c1.TestDeoptInt$A: int vl>;
i2 = i0 + $i1;
if i2 == 20 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
