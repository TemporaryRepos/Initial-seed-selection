digraph "unitGraph" {
    "r1 := @parameter0: compiler.arraycopy.TestArrayCopyMacro$A[]"
    "r2 := @parameter1: java.lang.Object"
    "i0 = 1"
    "goto [?= (branch)]"
    "i0 = i0 * 4"
    "if i0 < 3 goto i0 = i0 * 4"
    "$r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]"
    "r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>($r0, r2, i0)"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, 10)"
    "return r3"
    "r1 := @parameter0: compiler.arraycopy.TestArrayCopyMacro$A[]"->"r2 := @parameter1: java.lang.Object";
    "r2 := @parameter1: java.lang.Object"->"i0 = 1";
    "i0 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 3 goto i0 = i0 * 4";
    "i0 = i0 * 4"->"if i0 < 3 goto i0 = i0 * 4";
    "if i0 < 3 goto i0 = i0 * 4"->"$r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]";
    "if i0 < 3 goto i0 = i0 * 4"->"i0 = i0 * 4";
    "$r0 = newarray (compiler.arraycopy.TestArrayCopyMacro$A)[10]"->"r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>($r0, r2, i0)";
    "r3 = staticinvoke <compiler.arraycopy.TestArrayCopyMacro: java.lang.Object m2(java.lang.Object,java.lang.Object,int)>($r0, r2, i0)"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, 10)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, 10)"->"return r3";
}
