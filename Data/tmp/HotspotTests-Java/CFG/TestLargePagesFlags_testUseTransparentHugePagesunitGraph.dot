digraph "unitGraph" {
    "$r0 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)"
    "if $z0 != 0 goto $r1 = new TestLargePagesFlags$FlagTester"
    "$r46 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseTransparentHugePages\")"
    "return"
    "$r1 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r1.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r2 = newarray (TestLargePagesFlags$Flag)[2]"
    "$r3 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"
    "$r2[0] = $r3"
    "$r4 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r2[1] = $r4"
    "$r5 = virtualinvoke $r1.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r2)"
    "$r6 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"
    "$r6[0] = $r7"
    "$r8 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r6[1] = $r8"
    "$r9 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r6[2] = $r9"
    "$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r6[3] = $r10"
    "virtualinvoke $r5.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r6)"
    "$r11 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r11.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r12 = newarray (TestLargePagesFlags$Flag)[1]"
    "$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r12[0] = $r13"
    "$r14 = virtualinvoke $r11.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r12)"
    "$r15 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r15[0] = $r16"
    "$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r15[1] = $r17"
    "$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r15[2] = $r18"
    "$r19 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r15[3] = $r19"
    "virtualinvoke $r14.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r15)"
    "$r20 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r20.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r21 = newarray (TestLargePagesFlags$Flag)[2]"
    "$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r21[0] = $r22"
    "$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r21[1] = $r23"
    "$r24 = virtualinvoke $r20.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r21)"
    "$r25 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r26 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r25[0] = $r26"
    "$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"
    "$r25[1] = $r27"
    "$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r25[2] = $r28"
    "$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r25[3] = $r29"
    "virtualinvoke $r24.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r25)"
    "$r30 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r30.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r31 = newarray (TestLargePagesFlags$Flag)[2]"
    "$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r31[0] = $r32"
    "$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r31[1] = $r33"
    "$r34 = virtualinvoke $r30.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r31)"
    "$r35 = newarray (TestLargePagesFlags$Flag)[4]"
    "$r36 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"
    "$r35[0] = $r36"
    "$r37 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r35[1] = $r37"
    "$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"
    "$r35[2] = $r38"
    "$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"
    "$r35[3] = $r39"
    "virtualinvoke $r34.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r35)"
    "$r40 = new TestLargePagesFlags$FlagTester"
    "specialinvoke $r40.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"
    "$r41 = newarray (TestLargePagesFlags$Flag)[1]"
    "$r42 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"
    "$r41[0] = $r42"
    "$r43 = virtualinvoke $r40.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r41)"
    "$r44 = newarray (TestLargePagesFlags$Flag)[1]"
    "$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"
    "$r44[0] = $r45"
    "virtualinvoke $r43.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r44)"
    "$r0 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)";
    "$z0 = staticinvoke <TestLargePagesFlags: boolean canUse(TestLargePagesFlags$Flag)>($r0)"->"if $z0 != 0 goto $r1 = new TestLargePagesFlags$FlagTester";
    "if $z0 != 0 goto $r1 = new TestLargePagesFlags$FlagTester"->"$r46 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r1 = new TestLargePagesFlags$FlagTester"->"$r1 = new TestLargePagesFlags$FlagTester";
    "$r46 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseTransparentHugePages\")";
    "virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>(\"Skipping testUseTransparentHugePages\")"->"return";
    "$r1 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r1.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r1.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r2 = newarray (TestLargePagesFlags$Flag)[2]";
    "$r2 = newarray (TestLargePagesFlags$Flag)[2]"->"$r3 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)";
    "$r3 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"$r4 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r4 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r2[1] = $r4";
    "$r2[1] = $r4"->"$r5 = virtualinvoke $r1.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r2)";
    "$r5 = virtualinvoke $r1.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r2)"->"$r6 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r6 = newarray (TestLargePagesFlags$Flag)[4]"->"$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)";
    "$r7 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"->"$r6[0] = $r7";
    "$r6[0] = $r7"->"$r8 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r8 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r6[1] = $r8";
    "$r6[1] = $r8"->"$r9 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r9 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r6[2] = $r9";
    "$r6[2] = $r9"->"$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r10 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r6[3] = $r10";
    "$r6[3] = $r10"->"virtualinvoke $r5.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r6)";
    "virtualinvoke $r5.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r6)"->"$r11 = new TestLargePagesFlags$FlagTester";
    "$r11 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r11.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r11.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r12 = newarray (TestLargePagesFlags$Flag)[1]";
    "$r12 = newarray (TestLargePagesFlags$Flag)[1]"->"$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r13 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r12[0] = $r13";
    "$r12[0] = $r13"->"$r14 = virtualinvoke $r11.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r12)";
    "$r14 = virtualinvoke $r11.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r12)"->"$r15 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r15 = newarray (TestLargePagesFlags$Flag)[4]"->"$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r16 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r15[0] = $r16";
    "$r15[0] = $r16"->"$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r17 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r15[1] = $r17";
    "$r15[1] = $r17"->"$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r18 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r15[2] = $r18";
    "$r15[2] = $r18"->"$r19 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r19 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r15[3] = $r19";
    "$r15[3] = $r19"->"virtualinvoke $r14.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r15)";
    "virtualinvoke $r14.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r15)"->"$r20 = new TestLargePagesFlags$FlagTester";
    "$r20 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r20.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r20.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r21 = newarray (TestLargePagesFlags$Flag)[2]";
    "$r21 = newarray (TestLargePagesFlags$Flag)[2]"->"$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r22 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r21[0] = $r22";
    "$r21[0] = $r22"->"$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r23 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r21[1] = $r23";
    "$r21[1] = $r23"->"$r24 = virtualinvoke $r20.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r21)";
    "$r24 = virtualinvoke $r20.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r21)"->"$r25 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r25 = newarray (TestLargePagesFlags$Flag)[4]"->"$r26 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r26 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r25[0] = $r26";
    "$r25[0] = $r26"->"$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)";
    "$r27 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(1)"->"$r25[1] = $r27";
    "$r25[1] = $r27"->"$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r28 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r25[2] = $r28";
    "$r25[2] = $r28"->"$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r29 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r25[3] = $r29";
    "$r25[3] = $r29"->"virtualinvoke $r24.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r25)";
    "virtualinvoke $r24.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r25)"->"$r30 = new TestLargePagesFlags$FlagTester";
    "$r30 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r30.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r30.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r31 = newarray (TestLargePagesFlags$Flag)[2]";
    "$r31 = newarray (TestLargePagesFlags$Flag)[2]"->"$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r32 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r31[0] = $r32";
    "$r31[0] = $r32"->"$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r33 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r31[1] = $r33";
    "$r31[1] = $r33"->"$r34 = virtualinvoke $r30.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r31)";
    "$r34 = virtualinvoke $r30.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r31)"->"$r35 = newarray (TestLargePagesFlags$Flag)[4]";
    "$r35 = newarray (TestLargePagesFlags$Flag)[4]"->"$r36 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)";
    "$r36 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(0)"->"$r35[0] = $r36";
    "$r35[0] = $r36"->"$r37 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r37 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r35[1] = $r37";
    "$r35[1] = $r37"->"$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)";
    "$r38 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseHugeTLBFS(boolean)>(0)"->"$r35[2] = $r38";
    "$r35[2] = $r38"->"$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)";
    "$r39 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseSHM(boolean)>(0)"->"$r35[3] = $r39";
    "$r35[3] = $r39"->"virtualinvoke $r34.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r35)";
    "virtualinvoke $r34.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r35)"->"$r40 = new TestLargePagesFlags$FlagTester";
    "$r40 = new TestLargePagesFlags$FlagTester"->"specialinvoke $r40.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)";
    "specialinvoke $r40.<TestLargePagesFlags$FlagTester: void <init>(TestLargePagesFlags$FlagTester)>(null)"->"$r41 = newarray (TestLargePagesFlags$Flag)[1]";
    "$r41 = newarray (TestLargePagesFlags$Flag)[1]"->"$r42 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)";
    "$r42 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseLargePages(boolean)>(1)"->"$r41[0] = $r42";
    "$r41[0] = $r42"->"$r43 = virtualinvoke $r40.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r41)";
    "$r43 = virtualinvoke $r40.<TestLargePagesFlags$FlagTester: TestLargePagesFlags$FlagTester use(TestLargePagesFlags$Flag[])>($r41)"->"$r44 = newarray (TestLargePagesFlags$Flag)[1]";
    "$r44 = newarray (TestLargePagesFlags$Flag)[1]"->"$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)";
    "$r45 = staticinvoke <TestLargePagesFlags: TestLargePagesFlags$Flag UseTransparentHugePages(boolean)>(0)"->"$r44[0] = $r45";
    "$r44[0] = $r45"->"virtualinvoke $r43.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r44)";
    "virtualinvoke $r43.<TestLargePagesFlags$FlagTester: void expect(TestLargePagesFlags$Flag[])>($r44)"->"return";
}
