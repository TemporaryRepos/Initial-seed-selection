digraph "unitGraph" {
    "$r0 = new java.lang.Long"
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)"
    "r4 = $r0"
    "$r1 = new java.lang.Long"
    "specialinvoke $r1.<java.lang.Long: void <init>(long)>(1L)"
    "r5 = $r1"
    "i8 = 0"
    "goto [?= (branch)]"
    "$i0 = i8 & 1"
    "if $i0 != 0 goto $r2 = new java.lang.Long"
    "$r3 = new java.lang.Long"
    "$l3 = virtualinvoke r4.<java.lang.Long: long longValue()>()"
    "$l4 = $l3 + 1L"
    "specialinvoke $r3.<java.lang.Long: void <init>(long)>($l4)"
    "r4 = $r3"
    "goto [?= i8 = i8 + 1]"
    "$r2 = new java.lang.Long"
    "$l1 = virtualinvoke r5.<java.lang.Long: long longValue()>()"
    "$l2 = $l1 + 2L"
    "specialinvoke $r2.<java.lang.Long: void <init>(long)>($l2)"
    "r5 = $r2"
    "i8 = i8 + 1"
    "if i8 < 1000 goto $i0 = i8 & 1"
    "$l5 = virtualinvoke r4.<java.lang.Long: long longValue()>()"
    "$l6 = virtualinvoke r5.<java.lang.Long: long longValue()>()"
    "$l7 = $l5 + $l6"
    "return $l7"
    "$r0 = new java.lang.Long"->"specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)";
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)"->"r4 = $r0";
    "r4 = $r0"->"$r1 = new java.lang.Long";
    "$r1 = new java.lang.Long"->"specialinvoke $r1.<java.lang.Long: void <init>(long)>(1L)";
    "specialinvoke $r1.<java.lang.Long: void <init>(long)>(1L)"->"r5 = $r1";
    "r5 = $r1"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 1000 goto $i0 = i8 & 1";
    "$i0 = i8 & 1"->"if $i0 != 0 goto $r2 = new java.lang.Long";
    "if $i0 != 0 goto $r2 = new java.lang.Long"->"$r3 = new java.lang.Long";
    "if $i0 != 0 goto $r2 = new java.lang.Long"->"$r2 = new java.lang.Long";
    "$r3 = new java.lang.Long"->"$l3 = virtualinvoke r4.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke r4.<java.lang.Long: long longValue()>()"->"$l4 = $l3 + 1L";
    "$l4 = $l3 + 1L"->"specialinvoke $r3.<java.lang.Long: void <init>(long)>($l4)";
    "specialinvoke $r3.<java.lang.Long: void <init>(long)>($l4)"->"r4 = $r3";
    "r4 = $r3"->"goto [?= i8 = i8 + 1]";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "$r2 = new java.lang.Long"->"$l1 = virtualinvoke r5.<java.lang.Long: long longValue()>()";
    "$l1 = virtualinvoke r5.<java.lang.Long: long longValue()>()"->"$l2 = $l1 + 2L";
    "$l2 = $l1 + 2L"->"specialinvoke $r2.<java.lang.Long: void <init>(long)>($l2)";
    "specialinvoke $r2.<java.lang.Long: void <init>(long)>($l2)"->"r5 = $r2";
    "r5 = $r2"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < 1000 goto $i0 = i8 & 1";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$l5 = virtualinvoke r4.<java.lang.Long: long longValue()>()";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$i0 = i8 & 1";
    "$l5 = virtualinvoke r4.<java.lang.Long: long longValue()>()"->"$l6 = virtualinvoke r5.<java.lang.Long: long longValue()>()";
    "$l6 = virtualinvoke r5.<java.lang.Long: long longValue()>()"->"$l7 = $l5 + $l6";
    "$l7 = $l5 + $l6"->"return $l7";
}
