digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 8 ]
r17 := @parameter0: java.lang.String[];
b0 = 50;
d0 = 0.001;
r0 = newmultiarray (double)[b0][b0][b0];
r1 = newmultiarray (double)[b0][b0][b0];
r2 = newmultiarray (double)[b0][b0][b0];
$r3 = new jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d;
specialinvoke $r3.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: void <init>()>();
r4 = $r3;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 8 ] [succs: 6 ]
i3 = 0;
goto [?= (branch)];
"
    "Block 2:
[preds: 6 ] [succs: 4 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 3:
[preds: 4 ] [succs: 4 ]
d1 = (double) i2;
d2 = staticinvoke <java.lang.Math: double sin(double)>(d1);
d3 = (double) i3;
d4 = staticinvoke <java.lang.Math: double cos(double)>(d3);
d5 = (double) i4;
d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);
$r5 = r0[i2];
$r6 = $r5[i3];
$d8 = d2 * d2;
$d7 = d4 * d4;
$d9 = $d8 + $d7;
$d10 = d6 * $d9;
$r6[i4] = $d10;
i4 = i4 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i4 < b0 goto d1 = (double) i2;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
"
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i3 < b0 goto i4 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
i2 = i2 + 1;
"
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i2 < b0 goto i3 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 17 ] [succs: 15 ]
i6 = 0;
goto [?= (branch)];
"
    "Block 11:
[preds: 15 ] [succs: 13 ]
i7 = 0;
goto [?= (branch)];
"
    "Block 12:
[preds: 13 ] [succs: 13 ]
$r7 = r1[i5];
$r10 = $r7[i6];
$r8 = r0[i7];
$r9 = $r8[i6];
$d11 = $r9[i5];
$r10[i7] = $d11;
$r11 = r2[i5];
$r14 = $r11[i6];
$r12 = r0[i7];
$r13 = $r12[i5];
$d12 = $r13[i6];
$r14[i7] = $d12;
i7 = i7 + 1;
"
    "Block 13:
[preds: 11 12 ] [succs: 14 12 ]
if i7 < b0 goto $r7 = r1[i5];
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
i6 = i6 + 1;
"
    "Block 15:
[preds: 10 14 ] [succs: 16 11 ]
if i6 < b0 goto i7 = 0;
"
    "Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
"
    "Block 17:
[preds: 9 16 ] [succs: 18 10 ]
if i5 < b0 goto i6 = 0;
"
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
d18 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r0);
d19 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r1);
d13 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r2);
$d14 = d18 + d19;
d15 = $d14 + d13;
$d16 = 105.0 - d15;
d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$b1 = d17 cmpg d0;
if $b1 >= 0 goto $r15 = new nsk.share.TestFailure;
"
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\");
goto [?= return];
"
    "Block 20:
[preds: 18 ] [succs: ]
$r15 = new nsk.share.TestFailure;
specialinvoke $r15.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\");
throw $r15;
"
    "Block 21:
[preds: 19 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 8 ]
r17 := @parameter0: java.lang.String[];
b0 = 50;
d0 = 0.001;
r0 = newmultiarray (double)[b0][b0][b0];
r1 = newmultiarray (double)[b0][b0][b0];
r2 = newmultiarray (double)[b0][b0][b0];
$r3 = new jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d;
specialinvoke $r3.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: void <init>()>();
r4 = $r3;
i2 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i2 < b0 goto i3 = 0;
";
    "Block 1:
[preds: 8 ] [succs: 6 ]
i3 = 0;
goto [?= (branch)];
"->"Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i3 < b0 goto i4 = 0;
";
    "Block 2:
[preds: 6 ] [succs: 4 ]
i4 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i4 < b0 goto d1 = (double) i2;
";
    "Block 3:
[preds: 4 ] [succs: 4 ]
d1 = (double) i2;
d2 = staticinvoke <java.lang.Math: double sin(double)>(d1);
d3 = (double) i3;
d4 = staticinvoke <java.lang.Math: double cos(double)>(d3);
d5 = (double) i4;
d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);
$r5 = r0[i2];
$r6 = $r5[i3];
$d8 = d2 * d2;
$d7 = d4 * d4;
$d9 = $d8 + $d7;
$d10 = d6 * $d9;
$r6[i4] = $d10;
i4 = i4 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i4 < b0 goto d1 = (double) i2;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i4 < b0 goto d1 = (double) i2;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 3 ]
if i4 < b0 goto d1 = (double) i2;
"->"Block 3:
[preds: 4 ] [succs: 4 ]
d1 = (double) i2;
d2 = staticinvoke <java.lang.Math: double sin(double)>(d1);
d3 = (double) i3;
d4 = staticinvoke <java.lang.Math: double cos(double)>(d3);
d5 = (double) i4;
d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);
$r5 = r0[i2];
$r6 = $r5[i3];
$d8 = d2 * d2;
$d7 = d4 * d4;
$d9 = $d8 + $d7;
$d10 = d6 * $d9;
$r6[i4] = $d10;
i4 = i4 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
"->"Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i3 < b0 goto i4 = 0;
";
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i3 < b0 goto i4 = 0;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
i2 = i2 + 1;
";
    "Block 6:
[preds: 1 5 ] [succs: 7 2 ]
if i3 < b0 goto i4 = 0;
"->"Block 2:
[preds: 6 ] [succs: 4 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
i2 = i2 + 1;
"->"Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i2 < b0 goto i3 = 0;
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i2 < b0 goto i3 = 0;
"->"Block 9:
[preds: 8 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 0 7 ] [succs: 9 1 ]
if i2 < b0 goto i3 = 0;
"->"Block 1:
[preds: 8 ] [succs: 6 ]
i3 = 0;
goto [?= (branch)];
";
    "Block 9:
[preds: 8 ] [succs: 17 ]
i5 = 0;
goto [?= (branch)];
"->"Block 17:
[preds: 9 16 ] [succs: 18 10 ]
if i5 < b0 goto i6 = 0;
";
    "Block 10:
[preds: 17 ] [succs: 15 ]
i6 = 0;
goto [?= (branch)];
"->"Block 15:
[preds: 10 14 ] [succs: 16 11 ]
if i6 < b0 goto i7 = 0;
";
    "Block 11:
[preds: 15 ] [succs: 13 ]
i7 = 0;
goto [?= (branch)];
"->"Block 13:
[preds: 11 12 ] [succs: 14 12 ]
if i7 < b0 goto $r7 = r1[i5];
";
    "Block 12:
[preds: 13 ] [succs: 13 ]
$r7 = r1[i5];
$r10 = $r7[i6];
$r8 = r0[i7];
$r9 = $r8[i6];
$d11 = $r9[i5];
$r10[i7] = $d11;
$r11 = r2[i5];
$r14 = $r11[i6];
$r12 = r0[i7];
$r13 = $r12[i5];
$d12 = $r13[i6];
$r14[i7] = $d12;
i7 = i7 + 1;
"->"Block 13:
[preds: 11 12 ] [succs: 14 12 ]
if i7 < b0 goto $r7 = r1[i5];
";
    "Block 13:
[preds: 11 12 ] [succs: 14 12 ]
if i7 < b0 goto $r7 = r1[i5];
"->"Block 14:
[preds: 13 ] [succs: 15 ]
i6 = i6 + 1;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 12 ]
if i7 < b0 goto $r7 = r1[i5];
"->"Block 12:
[preds: 13 ] [succs: 13 ]
$r7 = r1[i5];
$r10 = $r7[i6];
$r8 = r0[i7];
$r9 = $r8[i6];
$d11 = $r9[i5];
$r10[i7] = $d11;
$r11 = r2[i5];
$r14 = $r11[i6];
$r12 = r0[i7];
$r13 = $r12[i5];
$d12 = $r13[i6];
$r14[i7] = $d12;
i7 = i7 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
i6 = i6 + 1;
"->"Block 15:
[preds: 10 14 ] [succs: 16 11 ]
if i6 < b0 goto i7 = 0;
";
    "Block 15:
[preds: 10 14 ] [succs: 16 11 ]
if i6 < b0 goto i7 = 0;
"->"Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
";
    "Block 15:
[preds: 10 14 ] [succs: 16 11 ]
if i6 < b0 goto i7 = 0;
"->"Block 11:
[preds: 15 ] [succs: 13 ]
i7 = 0;
goto [?= (branch)];
";
    "Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
"->"Block 17:
[preds: 9 16 ] [succs: 18 10 ]
if i5 < b0 goto i6 = 0;
";
    "Block 17:
[preds: 9 16 ] [succs: 18 10 ]
if i5 < b0 goto i6 = 0;
"->"Block 18:
[preds: 17 ] [succs: 19 20 ]
d18 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r0);
d19 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r1);
d13 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r2);
$d14 = d18 + d19;
d15 = $d14 + d13;
$d16 = 105.0 - d15;
d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$b1 = d17 cmpg d0;
if $b1 >= 0 goto $r15 = new nsk.share.TestFailure;
";
    "Block 17:
[preds: 9 16 ] [succs: 18 10 ]
if i5 < b0 goto i6 = 0;
"->"Block 10:
[preds: 17 ] [succs: 15 ]
i6 = 0;
goto [?= (branch)];
";
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
d18 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r0);
d19 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r1);
d13 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r2);
$d14 = d18 + d19;
d15 = $d14 + d13;
$d16 = 105.0 - d15;
d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$b1 = d17 cmpg d0;
if $b1 >= 0 goto $r15 = new nsk.share.TestFailure;
"->"Block 19:
[preds: 18 ] [succs: 21 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\");
goto [?= return];
";
    "Block 18:
[preds: 17 ] [succs: 19 20 ]
d18 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r0);
d19 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r1);
d13 = virtualinvoke r4.<jit.FloatingPoint.gen_math.Matrix_3d.Matrix_3d: double trace_matrix(int,double[][][])>(b0, r2);
$d14 = d18 + d19;
d15 = $d14 + d13;
$d16 = 105.0 - d15;
d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$b1 = d17 cmpg d0;
if $b1 >= 0 goto $r15 = new nsk.share.TestFailure;
"->"Block 20:
[preds: 18 ] [succs: ]
$r15 = new nsk.share.TestFailure;
specialinvoke $r15.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"test FAIL\");
throw $r15;
";
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"test PASS\");
goto [?= return];
"->"Block 21:
[preds: 19 ] [succs: ]
return;
";
}
