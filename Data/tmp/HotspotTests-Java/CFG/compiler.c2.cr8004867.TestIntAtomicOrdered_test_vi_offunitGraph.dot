digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"
    "i0 := @parameter1: int"
    "i2 := @parameter2: int"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i1 = i3 + 3"
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, i0)"
    "i3 = i3 + 1"
    "if i3 < 94 goto $i1 = i3 + 3"
    "return"
    "r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 94 goto $i1 = i3 + 3";
    "$i1 = i3 + 3"->"virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, i0)";
    "virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i1, i0)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 94 goto $i1 = i3 + 3";
    "if i3 < 94 goto $i1 = i3 + 3"->"return";
    "if i3 < 94 goto $i1 = i3 + 3"->"$i1 = i3 + 3";
}
