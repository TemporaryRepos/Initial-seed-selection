digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"
    "i6 = 0"
    "goto [?= (branch)]"
    "$i0 = i6 & 1"
    "if $i0 != 0 goto i6 = i6 + 1"
    "$b1 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"
    "$b2 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()"
    "$i3 = $b1 + $b2"
    "$b4 = (byte) $i3"
    "r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4)"
    "i6 = i6 + 1"
    "if i6 < 1000 goto $i0 = i6 & 1"
    "$b5 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"
    "return $b5"
    "r1 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 1000 goto $i0 = i6 & 1";
    "$i0 = i6 & 1"->"if $i0 != 0 goto i6 = i6 + 1";
    "if $i0 != 0 goto i6 = i6 + 1"->"$b1 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()";
    "if $i0 != 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$b1 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"->"$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>";
    "$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"->"$b2 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()";
    "$b2 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()"->"$i3 = $b1 + $b2";
    "$i3 = $b1 + $b2"->"$b4 = (byte) $i3";
    "$b4 = (byte) $i3"->"r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4)";
    "r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 1000 goto $i0 = i6 & 1";
    "if i6 < 1000 goto $i0 = i6 & 1"->"$b5 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()";
    "if i6 < 1000 goto $i0 = i6 & 1"->"$i0 = i6 & 1";
    "$b5 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"->"return $b5";
}
