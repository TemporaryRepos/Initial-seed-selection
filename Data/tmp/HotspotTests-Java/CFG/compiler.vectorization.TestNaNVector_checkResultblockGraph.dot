digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: compiler.vectorization.TestNaNVector;
i0 := @parameter0: int;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c1 = $r1[i3];
if $c1 == i0 goto i3 = i3 + 1;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid result: array[\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r6 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c2 = $r6[i3];
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r2;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i3 = i3 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1024 goto $r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
"
    "Block 5:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: compiler.vectorization.TestNaNVector;
i0 := @parameter0: int;
i3 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1024 goto $r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c1 = $r1[i3];
if $c1 == i0 goto i3 = i3 + 1;
"->"Block 2:
[preds: 1 ] [succs: ]
$r2 = new java.lang.RuntimeException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Invalid result: array[\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r6 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c2 = $r6[i3];
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r2;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c1 = $r1[i3];
if $c1 == i0 goto i3 = i3 + 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i3 = i3 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i3 = i3 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1024 goto $r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1024 goto $r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
"->"Block 5:
[preds: 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i3 < 1024 goto $r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$r1 = r0.<compiler.vectorization.TestNaNVector: char[] array>;
$c1 = $r1[i3];
if $c1 == i0 goto i3 = i3 + 1;
";
}
