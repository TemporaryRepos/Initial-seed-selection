digraph "unitGraph" {
    "r0 := @this: compiler.codegen.BitTests"
    "l6 := @parameter0: long"
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$i1 = (int) $l0"
    "$i2 = $i1 & 134217728"
    "if $i2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"
    "$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$i4 = (int) $l3"
    "$i5 = $i4 & 134217728"
    "if $i5 == 0 goto return l6"
    "return l6"
    "r0 := @this: compiler.codegen.BitTests"->"l6 := @parameter0: long";
    "l6 := @parameter0: long"->"$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$i1 = (int) $l0";
    "$i1 = (int) $l0"->"$i2 = $i1 & 134217728";
    "$i2 = $i1 & 134217728"->"if $i2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "if $i2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)";
    "if $i2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"->"$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$i4 = (int) $l3";
    "$i4 = (int) $l3"->"$i5 = $i4 & 134217728";
    "$i5 = $i4 & 134217728"->"if $i5 == 0 goto return l6";
    "if $i5 == 0 goto return l6"->"l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)";
    "if $i5 == 0 goto return l6"->"return l6";
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"->"return l6";
}
