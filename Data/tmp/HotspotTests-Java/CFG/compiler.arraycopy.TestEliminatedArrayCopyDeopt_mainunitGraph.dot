digraph "unitGraph" {
    "r9 := @parameter0: java.lang.String[]"
    "z10 = 1"
    "$r0 = new compiler.arraycopy.TestEliminatedArrayCopyDeopt$A"
    "specialinvoke $r0.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: void <init>()>()"
    "r1 = $r0"
    "r1.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: int f0> = 66"
    "i3 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)"
    "i3 = i3 + 1"
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)"
    "$z1 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 1)"
    "if $z1 != 0 goto i4 = 0"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"m1 failed\")"
    "z10 = 0"
    "i4 = 0"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)"
    "i4 = i4 + 1"
    "if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)"
    "$z3 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(1)"
    "if $z3 != 0 goto r10 = newarray (int)[10]"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"m2 failed\")"
    "r10 = newarray (int)[10]"
    "i5 = 0"
    "goto [?= $i0 = lengthof r10]"
    "$i1 = 66 + i5"
    "r10[i5] = $i1"
    "i5 = i5 + 1"
    "$i0 = lengthof r10"
    "if i5 < $i0 goto $i1 = 66 + i5"
    "i6 = 0"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)"
    "i6 = i6 + 1"
    "if i6 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)"
    "$z5 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 1)"
    "if $z5 != 0 goto i7 = 0"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"m3 failed\")"
    "i7 = 0"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)"
    "i7 = i7 + 1"
    "if i7 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)"
    "$z7 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 1)"
    "if $z7 != 0 goto i8 = 0"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")"
    "i8 = 0"
    "$i2 = i8 % 2"
    "if $i2 != 0 goto $z11 = 0"
    "$z11 = 1"
    "goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)]"
    "$z11 = 0"
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)"
    "i8 = i8 + 1"
    "if i8 < 20000 goto $i2 = i8 % 2"
    "$z9 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, 1, 1)"
    "if $z9 != 0 goto (branch)"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")"
    "if z10 != 0 goto return"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r3"
    "return"
    "r9 := @parameter0: java.lang.String[]"->"z10 = 1";
    "z10 = 1"->"$r0 = new compiler.arraycopy.TestEliminatedArrayCopyDeopt$A";
    "$r0 = new compiler.arraycopy.TestEliminatedArrayCopyDeopt$A"->"specialinvoke $r0.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: void <init>()>()";
    "specialinvoke $r0.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r1.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: int f0> = 66";
    "r1.<compiler.arraycopy.TestEliminatedArrayCopyDeopt$A: int f0> = 66"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)";
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)"->"$z1 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 1)";
    "if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 0)";
    "$z1 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m1(compiler.arraycopy.TestEliminatedArrayCopyDeopt$A,boolean)>(r1, 1)"->"if $z1 != 0 goto i4 = 0";
    "if $z1 != 0 goto i4 = 0"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 != 0 goto i4 = 0"->"i4 = 0";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"m1 failed\")";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(\"m1 failed\")"->"z10 = 0";
    "z10 = 0"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)";
    "if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)"->"$z3 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(1)";
    "if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(0)";
    "$z3 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m2(boolean)>(1)"->"if $z3 != 0 goto r10 = newarray (int)[10]";
    "if $z3 != 0 goto r10 = newarray (int)[10]"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if $z3 != 0 goto r10 = newarray (int)[10]"->"r10 = newarray (int)[10]";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"m2 failed\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"m2 failed\")"->"z10 = 0";
    "z10 = 0"->"r10 = newarray (int)[10]";
    "r10 = newarray (int)[10]"->"i5 = 0";
    "i5 = 0"->"goto [?= $i0 = lengthof r10]";
    "goto [?= $i0 = lengthof r10]"->"$i0 = lengthof r10";
    "$i1 = 66 + i5"->"r10[i5] = $i1";
    "r10[i5] = $i1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i0 = lengthof r10";
    "$i0 = lengthof r10"->"if i5 < $i0 goto $i1 = 66 + i5";
    "if i5 < $i0 goto $i1 = 66 + i5"->"i6 = 0";
    "if i5 < $i0 goto $i1 = 66 + i5"->"$i1 = 66 + i5";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)";
    "if i6 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)"->"$z5 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 1)";
    "if i6 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 0)";
    "$z5 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m3(int[],boolean)>(r10, 1)"->"if $z5 != 0 goto i7 = 0";
    "if $z5 != 0 goto i7 = 0"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if $z5 != 0 goto i7 = 0"->"i7 = 0";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"m3 failed\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"m3 failed\")"->"z10 = 0";
    "z10 = 0"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)";
    "if i7 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)"->"$z7 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 1)";
    "if i7 < 20000 goto staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 0)";
    "$z7 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m4(int[],boolean)>(r10, 1)"->"if $z7 != 0 goto i8 = 0";
    "if $z7 != 0 goto i8 = 0"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if $z7 != 0 goto i8 = 0"->"i8 = 0";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")"->"z10 = 0";
    "z10 = 0"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 20000 goto $i2 = i8 % 2";
    "$i2 = i8 % 2"->"if $i2 != 0 goto $z11 = 0";
    "if $i2 != 0 goto $z11 = 0"->"$z11 = 1";
    "if $i2 != 0 goto $z11 = 0"->"$z11 = 0";
    "$z11 = 1"->"goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)]";
    "goto [?= staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)]"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)";
    "$z11 = 0"->"staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)";
    "staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, $z11, 0)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < 20000 goto $i2 = i8 % 2";
    "if i8 < 20000 goto $i2 = i8 % 2"->"$z9 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, 1, 1)";
    "if i8 < 20000 goto $i2 = i8 % 2"->"$i2 = i8 % 2";
    "$z9 = staticinvoke <compiler.arraycopy.TestEliminatedArrayCopyDeopt: boolean m5(int[],boolean,boolean)>(r10, 1, 1)"->"if $z9 != 0 goto (branch)";
    "if $z9 != 0 goto (branch)"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if $z9 != 0 goto (branch)"->"if z10 != 0 goto return";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"m4 failed\")"->"z10 = 0";
    "z10 = 0"->"if z10 != 0 goto return";
    "if z10 != 0 goto return"->"$r3 = new java.lang.RuntimeException";
    "if z10 != 0 goto return"->"return";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r3";
}
