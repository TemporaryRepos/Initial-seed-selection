digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 = newarray (double)[997];
r1 = newarray (double)[997];
i16 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = (double) i16;
r1[i16] = $d0;
i16 = i16 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i16 < 997 goto $d0 = (double) i16;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\");
i17 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i17 = i17 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i17 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\");
i18 = 0;
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i19 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$d2 = r0[i19];
$i0 = i19 & 3;
$d1 = (double) $i0;
$i1 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_init: \", i19, $d2, $d1);
i18 = i18 + $i1;
i19 = i19 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i19 < 997 goto $d2 = r0[i19];
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i20 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$d4 = r0[i20];
$i2 = i20 & 3;
$i3 = i20 + $i2;
$d3 = (double) $i3;
$i4 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addi: \", i20, $d4, $d3);
i18 = i18 + $i4;
i20 = i20 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i20 < 997 goto $d4 = r0[i20];
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i21 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 14 ] [succs: 14 ]
$d8 = r0[i21];
$d6 = (double) i21;
$i5 = i21 & 3;
$i6 = $i5 + 1;
$d5 = (double) $i6;
$d7 = $d6 / $d5;
$i7 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divi: \", i21, $d8, $d7);
i18 = i18 + $i7;
i21 = i21 + 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i21 < 997 goto $d8 = r0[i21];
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i22 = 0;
goto [?= (branch)];
"
    "Block 16:
[preds: 17 ] [succs: 17 ]
$d10 = r0[i22];
$i8 = i22 & 3;
$d9 = (double) $i8;
$i9 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_init: \", i22, $d10, $d9);
i18 = i18 + $i9;
i22 = i22 + 1;
"
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i22 < 997 goto $d10 = r0[i22];
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i23 = 0;
goto [?= (branch)];
"
    "Block 19:
[preds: 20 ] [succs: 20 ]
$d12 = r0[i23];
$i10 = i23 & 3;
$i11 = i23 + $i10;
$d11 = (double) $i11;
$i12 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_addi: \", i23, $d12, $d11);
i18 = i18 + $i12;
i23 = i23 + 1;
"
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i23 < 997 goto $d12 = r0[i23];
"
    "Block 21:
[preds: 20 ] [succs: 23 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i24 = 0;
goto [?= (branch)];
"
    "Block 22:
[preds: 23 ] [succs: 23 ]
$d16 = r0[i24];
$d14 = (double) i24;
$i13 = i24 & 3;
$i14 = $i13 + 1;
$d13 = (double) $i14;
$d15 = $d14 / $d13;
$i15 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_divi: \", i24, $d16, $d15);
i18 = i18 + $i15;
i24 = i24 + 1;
"
    "Block 23:
[preds: 21 22 ] [succs: 24 22 ]
if i24 < 997 goto $d16 = r0[i24];
"
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i18 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 25:
[preds: 24 ] [succs: ]
return i18;
"
    "Block 26:
[preds: 24 ] [succs: 28 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\");
i25 = 0;
goto [?= (branch)];
"
    "Block 27:
[preds: 28 ] [succs: 28 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i25 = i25 + 1;
"
    "Block 28:
[preds: 26 27 ] [succs: 29 27 ]
if i25 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"
    "Block 29:
[preds: 28 ] [succs: 31 ]
i26 = 0;
goto [?= (branch)];
"
    "Block 30:
[preds: 31 ] [succs: 31 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i26 = i26 + 1;
"
    "Block 31:
[preds: 29 30 ] [succs: 32 30 ]
if i26 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
"
    "Block 32:
[preds: 31 ] [succs: 34 ]
i27 = 0;
goto [?= (branch)];
"
    "Block 33:
[preds: 34 ] [succs: 34 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i27 = i27 + 1;
"
    "Block 34:
[preds: 32 33 ] [succs: 35 33 ]
if i27 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
"
    "Block 35:
[preds: 34 ] [succs: 37 ]
i28 = 0;
goto [?= (branch)];
"
    "Block 36:
[preds: 37 ] [succs: 37 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i28 = i28 + 1;
"
    "Block 37:
[preds: 35 36 ] [succs: 38 36 ]
if i28 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
"
    "Block 38:
[preds: 37 ] [succs: 40 ]
i29 = 0;
goto [?= (branch)];
"
    "Block 39:
[preds: 40 ] [succs: 40 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i29 = i29 + 1;
"
    "Block 40:
[preds: 38 39 ] [succs: 41 39 ]
if i29 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
"
    "Block 41:
[preds: 40 ] [succs: 43 ]
i30 = 0;
goto [?= (branch)];
"
    "Block 42:
[preds: 43 ] [succs: 43 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i30 = i30 + 1;
"
    "Block 43:
[preds: 41 42 ] [succs: 44 42 ]
if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
"
    "Block 44:
[preds: 43 ] [succs: ]
return i18;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 = newarray (double)[997];
r1 = newarray (double)[997];
i16 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i16 < 997 goto $d0 = (double) i16;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = (double) i16;
r1[i16] = $d0;
i16 = i16 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i16 < 997 goto $d0 = (double) i16;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i16 < 997 goto $d0 = (double) i16;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\");
i17 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i16 < 997 goto $d0 = (double) i16;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = (double) i16;
r1[i16] = $d0;
i16 = i16 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\");
i17 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i17 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i17 = i17 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i17 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i17 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\");
i18 = 0;
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i19 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i17 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i17 = i17 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\");
i18 = 0;
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i19 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i19 < 997 goto $d2 = r0[i19];
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$d2 = r0[i19];
$i0 = i19 & 3;
$d1 = (double) $i0;
$i1 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_init: \", i19, $d2, $d1);
i18 = i18 + $i1;
i19 = i19 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i19 < 997 goto $d2 = r0[i19];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i19 < 997 goto $d2 = r0[i19];
"->"Block 9:
[preds: 8 ] [succs: 11 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i20 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i19 < 997 goto $d2 = r0[i19];
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$d2 = r0[i19];
$i0 = i19 & 3;
$d1 = (double) $i0;
$i1 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_init: \", i19, $d2, $d1);
i18 = i18 + $i1;
i19 = i19 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i20 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i20 < 997 goto $d4 = r0[i20];
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$d4 = r0[i20];
$i2 = i20 & 3;
$i3 = i20 + $i2;
$d3 = (double) $i3;
$i4 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addi: \", i20, $d4, $d3);
i18 = i18 + $i4;
i20 = i20 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i20 < 997 goto $d4 = r0[i20];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i20 < 997 goto $d4 = r0[i20];
"->"Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i21 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i20 < 997 goto $d4 = r0[i20];
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$d4 = r0[i20];
$i2 = i20 & 3;
$i3 = i20 + $i2;
$d3 = (double) $i3;
$i4 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addi: \", i20, $d4, $d3);
i18 = i18 + $i4;
i20 = i20 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i21 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i21 < 997 goto $d8 = r0[i21];
";
    "Block 13:
[preds: 14 ] [succs: 14 ]
$d8 = r0[i21];
$d6 = (double) i21;
$i5 = i21 & 3;
$i6 = $i5 + 1;
$d5 = (double) $i6;
$d7 = $d6 / $d5;
$i7 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divi: \", i21, $d8, $d7);
i18 = i18 + $i7;
i21 = i21 + 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i21 < 997 goto $d8 = r0[i21];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i21 < 997 goto $d8 = r0[i21];
"->"Block 15:
[preds: 14 ] [succs: 17 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i22 = 0;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i21 < 997 goto $d8 = r0[i21];
"->"Block 13:
[preds: 14 ] [succs: 14 ]
$d8 = r0[i21];
$d6 = (double) i21;
$i5 = i21 & 3;
$i6 = $i5 + 1;
$d5 = (double) $i6;
$d7 = $d6 / $d5;
$i7 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divi: \", i21, $d8, $d7);
i18 = i18 + $i7;
i21 = i21 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i22 = 0;
goto [?= (branch)];
"->"Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i22 < 997 goto $d10 = r0[i22];
";
    "Block 16:
[preds: 17 ] [succs: 17 ]
$d10 = r0[i22];
$i8 = i22 & 3;
$d9 = (double) $i8;
$i9 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_init: \", i22, $d10, $d9);
i18 = i18 + $i9;
i22 = i22 + 1;
"->"Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i22 < 997 goto $d10 = r0[i22];
";
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i22 < 997 goto $d10 = r0[i22];
"->"Block 18:
[preds: 17 ] [succs: 20 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i23 = 0;
goto [?= (branch)];
";
    "Block 17:
[preds: 15 16 ] [succs: 18 16 ]
if i22 < 997 goto $d10 = r0[i22];
"->"Block 16:
[preds: 17 ] [succs: 17 ]
$d10 = r0[i22];
$i8 = i22 & 3;
$d9 = (double) $i8;
$i9 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_init: \", i22, $d10, $d9);
i18 = i18 + $i9;
i22 = i22 + 1;
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i23 = 0;
goto [?= (branch)];
"->"Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i23 < 997 goto $d12 = r0[i23];
";
    "Block 19:
[preds: 20 ] [succs: 20 ]
$d12 = r0[i23];
$i10 = i23 & 3;
$i11 = i23 + $i10;
$d11 = (double) $i11;
$i12 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_addi: \", i23, $d12, $d11);
i18 = i18 + $i12;
i23 = i23 + 1;
"->"Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i23 < 997 goto $d12 = r0[i23];
";
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i23 < 997 goto $d12 = r0[i23];
"->"Block 21:
[preds: 20 ] [succs: 23 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i24 = 0;
goto [?= (branch)];
";
    "Block 20:
[preds: 18 19 ] [succs: 21 19 ]
if i23 < 997 goto $d12 = r0[i23];
"->"Block 19:
[preds: 20 ] [succs: 20 ]
$d12 = r0[i23];
$i10 = i23 & 3;
$i11 = i23 + $i10;
$d11 = (double) $i11;
$i12 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_addi: \", i23, $d12, $d11);
i18 = i18 + $i12;
i23 = i23 + 1;
";
    "Block 21:
[preds: 20 ] [succs: 23 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i24 = 0;
goto [?= (branch)];
"->"Block 23:
[preds: 21 22 ] [succs: 24 22 ]
if i24 < 997 goto $d16 = r0[i24];
";
    "Block 22:
[preds: 23 ] [succs: 23 ]
$d16 = r0[i24];
$d14 = (double) i24;
$i13 = i24 & 3;
$i14 = $i13 + 1;
$d13 = (double) $i14;
$d15 = $d14 / $d13;
$i15 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_divi: \", i24, $d16, $d15);
i18 = i18 + $i15;
i24 = i24 + 1;
"->"Block 23:
[preds: 21 22 ] [succs: 24 22 ]
if i24 < 997 goto $d16 = r0[i24];
";
    "Block 23:
[preds: 21 22 ] [succs: 24 22 ]
if i24 < 997 goto $d16 = r0[i24];
"->"Block 24:
[preds: 23 ] [succs: 25 26 ]
if i18 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 23:
[preds: 21 22 ] [succs: 24 22 ]
if i24 < 997 goto $d16 = r0[i24];
"->"Block 22:
[preds: 23 ] [succs: 23 ]
$d16 = r0[i24];
$d14 = (double) i24;
$i13 = i24 & 3;
$i14 = $i13 + 1;
$d13 = (double) $i14;
$d15 = $d14 / $d13;
$i15 = staticinvoke <compiler.c2.cr7192963.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_unrl_divi: \", i24, $d16, $d15);
i18 = i18 + $i15;
i24 = i24 + 1;
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i18 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 25:
[preds: 24 ] [succs: ]
return i18;
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i18 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 26:
[preds: 24 ] [succs: 28 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\");
i25 = 0;
goto [?= (branch)];
";
    "Block 26:
[preds: 24 ] [succs: 28 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\");
i25 = 0;
goto [?= (branch)];
"->"Block 28:
[preds: 26 27 ] [succs: 29 27 ]
if i25 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
";
    "Block 27:
[preds: 28 ] [succs: 28 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i25 = i25 + 1;
"->"Block 28:
[preds: 26 27 ] [succs: 29 27 ]
if i25 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
";
    "Block 28:
[preds: 26 27 ] [succs: 29 27 ]
if i25 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"->"Block 29:
[preds: 28 ] [succs: 31 ]
i26 = 0;
goto [?= (branch)];
";
    "Block 28:
[preds: 26 27 ] [succs: 29 27 ]
if i25 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
"->"Block 27:
[preds: 28 ] [succs: 28 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_init(double[])>(r0);
i25 = i25 + 1;
";
    "Block 29:
[preds: 28 ] [succs: 31 ]
i26 = 0;
goto [?= (branch)];
"->"Block 31:
[preds: 29 30 ] [succs: 32 30 ]
if i26 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
";
    "Block 30:
[preds: 31 ] [succs: 31 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i26 = i26 + 1;
"->"Block 31:
[preds: 29 30 ] [succs: 32 30 ]
if i26 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
";
    "Block 31:
[preds: 29 30 ] [succs: 32 30 ]
if i26 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
"->"Block 32:
[preds: 31 ] [succs: 34 ]
i27 = 0;
goto [?= (branch)];
";
    "Block 31:
[preds: 29 30 ] [succs: 32 30 ]
if i26 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
"->"Block 30:
[preds: 31 ] [succs: 31 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_addi(double[],double[])>(r0, r1);
i26 = i26 + 1;
";
    "Block 32:
[preds: 31 ] [succs: 34 ]
i27 = 0;
goto [?= (branch)];
"->"Block 34:
[preds: 32 33 ] [succs: 35 33 ]
if i27 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
";
    "Block 33:
[preds: 34 ] [succs: 34 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i27 = i27 + 1;
"->"Block 34:
[preds: 32 33 ] [succs: 35 33 ]
if i27 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
";
    "Block 34:
[preds: 32 33 ] [succs: 35 33 ]
if i27 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
"->"Block 35:
[preds: 34 ] [succs: 37 ]
i28 = 0;
goto [?= (branch)];
";
    "Block 34:
[preds: 32 33 ] [succs: 35 33 ]
if i27 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
"->"Block 33:
[preds: 34 ] [succs: 34 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_divi(double[],double[])>(r0, r1);
i27 = i27 + 1;
";
    "Block 35:
[preds: 34 ] [succs: 37 ]
i28 = 0;
goto [?= (branch)];
"->"Block 37:
[preds: 35 36 ] [succs: 38 36 ]
if i28 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
";
    "Block 36:
[preds: 37 ] [succs: 37 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i28 = i28 + 1;
"->"Block 37:
[preds: 35 36 ] [succs: 38 36 ]
if i28 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
";
    "Block 37:
[preds: 35 36 ] [succs: 38 36 ]
if i28 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
"->"Block 38:
[preds: 37 ] [succs: 40 ]
i29 = 0;
goto [?= (branch)];
";
    "Block 37:
[preds: 35 36 ] [succs: 38 36 ]
if i28 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
"->"Block 36:
[preds: 37 ] [succs: 37 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_init(double[])>(r0);
i28 = i28 + 1;
";
    "Block 38:
[preds: 37 ] [succs: 40 ]
i29 = 0;
goto [?= (branch)];
"->"Block 40:
[preds: 38 39 ] [succs: 41 39 ]
if i29 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
";
    "Block 39:
[preds: 40 ] [succs: 40 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i29 = i29 + 1;
"->"Block 40:
[preds: 38 39 ] [succs: 41 39 ]
if i29 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
";
    "Block 40:
[preds: 38 39 ] [succs: 41 39 ]
if i29 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
"->"Block 41:
[preds: 40 ] [succs: 43 ]
i30 = 0;
goto [?= (branch)];
";
    "Block 40:
[preds: 38 39 ] [succs: 41 39 ]
if i29 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
"->"Block 39:
[preds: 40 ] [succs: 40 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_addi(double[],double[])>(r0, r1);
i29 = i29 + 1;
";
    "Block 41:
[preds: 40 ] [succs: 43 ]
i30 = 0;
goto [?= (branch)];
"->"Block 43:
[preds: 41 42 ] [succs: 44 42 ]
if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
";
    "Block 42:
[preds: 43 ] [succs: 43 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i30 = i30 + 1;
"->"Block 43:
[preds: 41 42 ] [succs: 44 42 ]
if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
";
    "Block 43:
[preds: 41 42 ] [succs: 44 42 ]
if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
"->"Block 44:
[preds: 43 ] [succs: ]
return i18;
";
    "Block 43:
[preds: 41 42 ] [succs: 44 42 ]
if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
"->"Block 42:
[preds: 43 ] [succs: 43 ]
staticinvoke <compiler.c2.cr7192963.TestDoubleVect: void test_unrl_divi(double[],double[])>(r0, r1);
i30 = i30 + 1;
";
}
