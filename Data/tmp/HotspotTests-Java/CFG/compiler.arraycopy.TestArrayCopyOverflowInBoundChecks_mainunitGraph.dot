digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "i4 = 0"
    "goto [?= (branch)]"
    "$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"
    "$i0 = lengthof $r0"
    "$i1 = $i0 - 1"
    "$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1)"
    "$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"
    "$b3 = $r1[0]"
    "if $b2 == $b3 goto i4 = i4 + 1"
    "$r2 = new java.lang.RuntimeException"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r2"
    "i4 = i4 + 1"
    "if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>";
    "$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"->"$i0 = lengthof $r0";
    "$i0 = lengthof $r0"->"$i1 = $i0 - 1";
    "$i1 = $i0 - 1"->"$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1)";
    "$b2 = staticinvoke <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte test(int)>($i1)"->"$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>";
    "$r1 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"->"$b3 = $r1[0]";
    "$b3 = $r1[0]"->"if $b2 == $b3 goto i4 = i4 + 1";
    "if $b2 == $b3 goto i4 = i4 + 1"->"$r2 = new java.lang.RuntimeException";
    "if $b2 == $b3 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r2 = new java.lang.RuntimeException"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r2";
    "i4 = i4 + 1"->"if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>";
    "if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"->"return";
    "if i4 < 20000 goto $r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>"->"$r0 = <compiler.arraycopy.TestArrayCopyOverflowInBoundChecks: byte[] src_array>";
}
