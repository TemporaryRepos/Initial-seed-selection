digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
i3 := @parameter0: int;
i4 = 0;
i5 = staticinvoke <compiler.loopopts.Test6659207: int index(int)>(i3);
if i5 < 0 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = <compiler.loopopts.Test6659207: int[] array>;
$i2 = $r1[i5];
if $i2 == 0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i4 + 1;
"
    "Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r0 = <compiler.loopopts.Test6659207: int[] array>;
$i0 = $r0[i5];
$i1 = $i0 + 1;
$r0[i5] = $i1;
"
    "Block 5:
[preds: 3 4 ] [succs: ]
return i4;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
i3 := @parameter0: int;
i4 = 0;
i5 = staticinvoke <compiler.loopopts.Test6659207: int index(int)>(i3);
if i5 < 0 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = <compiler.loopopts.Test6659207: int[] array>;
$i2 = $r1[i5];
if $i2 == 0 goto (branch);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
i3 := @parameter0: int;
i4 = 0;
i5 = staticinvoke <compiler.loopopts.Test6659207: int index(int)>(i3);
if i5 < 0 goto (branch);
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = <compiler.loopopts.Test6659207: int[] array>;
$i2 = $r1[i5];
if $i2 == 0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i4 + 1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = <compiler.loopopts.Test6659207: int[] array>;
$i2 = $r1[i5];
if $i2 == 0 goto (branch);
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i4 + 1;
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
";
    "Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r0 = <compiler.loopopts.Test6659207: int[] array>;
$i0 = $r0[i5];
$i1 = $i0 + 1;
$r0[i5] = $i1;
";
    "Block 3:
[preds: 0 1 2 ] [succs: 4 5 ]
if i5 == -1 goto return i4;
"->"Block 5:
[preds: 3 4 ] [succs: ]
return i4;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r0 = <compiler.loopopts.Test6659207: int[] array>;
$i0 = $r0[i5];
$i1 = $i0 + 1;
$r0[i5] = $i1;
"->"Block 5:
[preds: 3 4 ] [succs: ]
return i4;
";
}
