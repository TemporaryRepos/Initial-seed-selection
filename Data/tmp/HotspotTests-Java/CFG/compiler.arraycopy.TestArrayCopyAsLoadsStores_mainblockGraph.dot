digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = new compiler.arraycopy.TestArrayCopyAsLoadsStores;
specialinvoke $r0.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void <init>()>();
r1 = $r0;
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m1\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m2\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m3\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m4\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m5\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m6\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m7\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m8\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m9\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m10\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m11\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m12\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m13\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m14\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m15\");
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m16\");
$r3 = new compiler.arraycopy.TestArrayCopyUtils$B;
specialinvoke $r3.<compiler.arraycopy.TestArrayCopyUtils$B: void <init>()>();
i2 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
i2 = i2 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m17\");
i3 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
i3 = i3 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m18\");
i4 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
i4 = i4 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
i5 = i5 + 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i5 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
"
    "Block 15:
[preds: 14 ] [succs: 20 ]
z1 = 0;
i6 = 0;
goto [?= (branch)];
"
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"
    "Block 17:
[preds: 16 ] [succs: 19 ]
goto [?= i6 = i6 + 1];
"
    "Block 18:
[preds: 20 16 ] [succs: 19 ]
$r19 := @caughtexception;
z1 = 1;
"
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
i6 = i6 + 1;
"
    "Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z1 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
"
    "Block 22:
[preds: 21 ] [succs: 23 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test m19: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
"
    "Block 23:
[preds: 21 22 ] [succs: 25 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m20\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m21\");
$r9 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
$i0 = lengthof $r9;
r21 = newarray (int)[$i0];
i7 = 0;
goto [?= (branch)];
"
    "Block 24:
[preds: 25 ] [succs: 25 ]
$r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r10, r21, 0);
i7 = i7 + 1;
"
    "Block 25:
[preds: 23 24 ] [succs: 26 24 ]
if i7 < 20000 goto $r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"
    "Block 26:
[preds: 25 ] [succs: 32 ]
i8 = 0;
goto [?= (branch)];
"
    "Block 27:
[preds: 32 ] [succs: 28 30 ]
$r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r11, r21, 5);
"
    "Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= i8 = i8 + 1];
"
    "Block 30:
[preds: 32 27 28 ] [succs: 31 ]
$r18 := @caughtexception;
"
    "Block 31:
[preds: 29 30 ] [succs: 32 ]
i8 = i8 + 1;
"
    "Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m22\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m23\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m24\");
z2 = 0;
"
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
$r12 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] small_object_src>;
"
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m24(java.lang.Object[])>($r12);
"
    "Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
"
    "Block 37:
[preds: 33 34 35 ] [succs: 38 ]
$r17 := @caughtexception;
z2 = 1;
"
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z2 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
"
    "Block 39:
[preds: 38 ] [succs: 40 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Test m24: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
"
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
$z0 = r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"
    "Block 41:
[preds: 40 ] [succs: ]
$r14 = new java.lang.RuntimeException;
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\");
throw $r14;
"
    "Block 42:
[preds: 40 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r20 := @parameter0: java.lang.String[];
$r0 = new compiler.arraycopy.TestArrayCopyAsLoadsStores;
specialinvoke $r0.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void <init>()>();
r1 = $r0;
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m1\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m2\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m3\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m4\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m5\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m6\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m7\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m8\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m9\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m10\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m11\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m12\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m13\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m14\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m15\");
i1 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m16\");
$r3 = new compiler.arraycopy.TestArrayCopyUtils$B;
specialinvoke $r3.<compiler.arraycopy.TestArrayCopyUtils$B: void <init>()>();
i2 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper16(int)>(i1);
i1 = i1 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m16\");
$r3 = new compiler.arraycopy.TestArrayCopyUtils$B;
specialinvoke $r3.<compiler.arraycopy.TestArrayCopyUtils$B: void <init>()>();
i2 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
i2 = i2 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m17\");
i3 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper17_1(int)>(i2);
i2 = i2 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m17\");
i3 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
i3 = i3 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
"->"Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m18\");
i4 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
"->"Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper18_1(int)>(i3);
i3 = i3 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m18\");
i4 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
i4 = i4 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
"->"Block 12:
[preds: 11 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
"->"Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] helper19(int)>(i4);
i4 = i4 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
i5 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i5 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
";
    "Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
i5 = i5 + 1;
"->"Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i5 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i5 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
"->"Block 15:
[preds: 14 ] [succs: 20 ]
z1 = 0;
i6 = 0;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 13 ]
if i5 < 20000 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
"->"Block 13:
[preds: 14 ] [succs: 14 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 0);
i5 = i5 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 20 ]
z1 = 0;
i6 = 0;
goto [?= (branch)];
"->"Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
";
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"->"Block 17:
[preds: 16 ] [succs: 19 ]
goto [?= i6 = i6 + 1];
";
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"->"Block 18:
[preds: 20 16 ] [succs: 19 ]
$r19 := @caughtexception;
z1 = 1;
";
    "Block 17:
[preds: 16 ] [succs: 19 ]
goto [?= i6 = i6 + 1];
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
i6 = i6 + 1;
";
    "Block 18:
[preds: 20 16 ] [succs: 19 ]
$r19 := @caughtexception;
z1 = 1;
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
i6 = i6 + 1;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
i6 = i6 + 1;
"->"Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
";
    "Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"->"Block 21:
[preds: 20 ] [succs: 22 23 ]
if z1 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
";
    "Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"->"Block 16:
[preds: 20 ] [succs: 17 18 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
";
    "Block 20:
[preds: 15 19 ] [succs: 21 16 18 ]
if i6 < 10 goto staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m19(compiler.arraycopy.TestArrayCopyUtils$A[],int)>(null, 1);
"->"Block 18:
[preds: 20 16 ] [succs: 19 ]
$r19 := @caughtexception;
z1 = 1;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z1 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
"->"Block 22:
[preds: 21 ] [succs: 23 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test m19: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z1 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
"->"Block 23:
[preds: 21 22 ] [succs: 25 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m20\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m21\");
$r9 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
$i0 = lengthof $r9;
r21 = newarray (int)[$i0];
i7 = 0;
goto [?= (branch)];
";
    "Block 22:
[preds: 21 ] [succs: 23 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>(\"Test m19: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
"->"Block 23:
[preds: 21 22 ] [succs: 25 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m20\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m21\");
$r9 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
$i0 = lengthof $r9;
r21 = newarray (int)[$i0];
i7 = 0;
goto [?= (branch)];
";
    "Block 23:
[preds: 21 22 ] [succs: 25 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m19\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m20\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m21\");
$r9 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
$i0 = lengthof $r9;
r21 = newarray (int)[$i0];
i7 = 0;
goto [?= (branch)];
"->"Block 25:
[preds: 23 24 ] [succs: 26 24 ]
if i7 < 20000 goto $r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
";
    "Block 24:
[preds: 25 ] [succs: 25 ]
$r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r10, r21, 0);
i7 = i7 + 1;
"->"Block 25:
[preds: 23 24 ] [succs: 26 24 ]
if i7 < 20000 goto $r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
";
    "Block 25:
[preds: 23 24 ] [succs: 26 24 ]
if i7 < 20000 goto $r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 26:
[preds: 25 ] [succs: 32 ]
i8 = 0;
goto [?= (branch)];
";
    "Block 25:
[preds: 23 24 ] [succs: 26 24 ]
if i7 < 20000 goto $r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 24:
[preds: 25 ] [succs: 25 ]
$r10 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r10, r21, 0);
i7 = i7 + 1;
";
    "Block 26:
[preds: 25 ] [succs: 32 ]
i8 = 0;
goto [?= (branch)];
"->"Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
";
    "Block 27:
[preds: 32 ] [succs: 28 30 ]
$r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r11, r21, 5);
";
    "Block 27:
[preds: 32 ] [succs: 28 30 ]
$r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 30:
[preds: 32 27 28 ] [succs: 31 ]
$r18 := @caughtexception;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r11, r21, 5);
"->"Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= i8 = i8 + 1];
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: void m22(int[],int[],int)>($r11, r21, 5);
"->"Block 30:
[preds: 32 27 28 ] [succs: 31 ]
$r18 := @caughtexception;
";
    "Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= i8 = i8 + 1];
"->"Block 31:
[preds: 29 30 ] [succs: 32 ]
i8 = i8 + 1;
";
    "Block 30:
[preds: 32 27 28 ] [succs: 31 ]
$r18 := @caughtexception;
"->"Block 31:
[preds: 29 30 ] [succs: 32 ]
i8 = i8 + 1;
";
    "Block 31:
[preds: 29 30 ] [succs: 32 ]
i8 = i8 + 1;
"->"Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
";
    "Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 33:
[preds: 32 ] [succs: 34 37 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m22\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m23\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m24\");
z2 = 0;
";
    "Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 27:
[preds: 32 ] [succs: 28 30 ]
$r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
";
    "Block 32:
[preds: 26 31 ] [succs: 33 27 30 ]
if i8 < 10 goto $r11 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: int[] small_int_src>;
"->"Block 30:
[preds: 32 27 28 ] [succs: 31 ]
$r18 := @caughtexception;
";
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m22\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m23\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m24\");
z2 = 0;
"->"Block 34:
[preds: 33 ] [succs: 35 37 ]
$r12 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] small_object_src>;
";
    "Block 33:
[preds: 32 ] [succs: 34 37 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m22\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m23\");
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m24\");
z2 = 0;
"->"Block 37:
[preds: 33 34 35 ] [succs: 38 ]
$r17 := @caughtexception;
z2 = 1;
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
$r12 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] small_object_src>;
"->"Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m24(java.lang.Object[])>($r12);
";
    "Block 34:
[preds: 33 ] [succs: 35 37 ]
$r12 = <compiler.arraycopy.TestArrayCopyAsLoadsStores: java.lang.Object[] small_object_src>;
"->"Block 37:
[preds: 33 34 35 ] [succs: 38 ]
$r17 := @caughtexception;
z2 = 1;
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m24(java.lang.Object[])>($r12);
"->"Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
";
    "Block 35:
[preds: 34 ] [succs: 36 37 ]
staticinvoke <compiler.arraycopy.TestArrayCopyAsLoadsStores: compiler.arraycopy.TestArrayCopyUtils$A[] m24(java.lang.Object[])>($r12);
"->"Block 37:
[preds: 33 34 35 ] [succs: 38 ]
$r17 := @caughtexception;
z2 = 1;
";
    "Block 36:
[preds: 35 ] [succs: 38 ]
goto [?= (branch)];
"->"Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z2 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
";
    "Block 37:
[preds: 33 34 35 ] [succs: 38 ]
$r17 := @caughtexception;
z2 = 1;
"->"Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z2 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
";
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z2 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
"->"Block 39:
[preds: 38 ] [succs: 40 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Test m24: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
";
    "Block 38:
[preds: 36 37 ] [succs: 39 40 ]
if z2 != 0 goto virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
"->"Block 40:
[preds: 38 39 ] [succs: 41 42 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
$z0 = r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
";
    "Block 39:
[preds: 38 ] [succs: 40 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"Test m24: exception wasn\'t thrown\");
r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success> = 0;
"->"Block 40:
[preds: 38 39 ] [succs: 41 42 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
$z0 = r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
$z0 = r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"->"Block 41:
[preds: 40 ] [succs: ]
$r14 = new java.lang.RuntimeException;
specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"some tests failed\");
throw $r14;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
virtualinvoke r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: void doTest(java.lang.String)>(\"m25\");
$z0 = r1.<compiler.arraycopy.TestArrayCopyAsLoadsStores: boolean success>;
if $z0 != 0 goto return;
"->"Block 42:
[preds: 40 ] [succs: ]
return;
";
}
