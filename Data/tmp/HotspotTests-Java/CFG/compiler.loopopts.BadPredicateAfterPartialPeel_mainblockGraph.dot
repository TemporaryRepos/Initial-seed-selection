digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.loopopts.BadPredicateAfterPartialPeel;
specialinvoke $r0.<compiler.loopopts.BadPredicateAfterPartialPeel: void <init>()>();
r1 = $r0;
$r2 = new compiler.loopopts.BadPredicateAfterPartialPeel;
specialinvoke $r2.<compiler.loopopts.BadPredicateAfterPartialPeel: void <init>()>();
r3 = $r2;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: void m(compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,int)>(r1, r3, r3, 0);
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: int m_helper(int,int,int)>(i1, 2, i1);
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.loopopts.BadPredicateAfterPartialPeel;
specialinvoke $r0.<compiler.loopopts.BadPredicateAfterPartialPeel: void <init>()>();
r1 = $r0;
$r2 = new compiler.loopopts.BadPredicateAfterPartialPeel;
specialinvoke $r2.<compiler.loopopts.BadPredicateAfterPartialPeel: void <init>()>();
r3 = $r2;
i1 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: void m(compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,int)>(r1, r3, r3, 0);
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: int m_helper(int,int,int)>(i1, 2, i1);
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < 20000 goto r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r1.<compiler.loopopts.BadPredicateAfterPartialPeel: int j> = 0;
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: void m(compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,compiler.loopopts.BadPredicateAfterPartialPeel,int)>(r1, r3, r3, 0);
staticinvoke <compiler.loopopts.BadPredicateAfterPartialPeel: int m_helper(int,int,int)>(i1, 2, i1);
i1 = i1 + 1;
";
}
