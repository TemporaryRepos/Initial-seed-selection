digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
$i0 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i1 = $i0 - 1;
r0.<compiler.c2.stemmer.Stemmer: int k> = $i1;
$i2 = r0.<compiler.c2.stemmer.Stemmer: int k>;
if $i2 <= 1 goto $i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step1()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step2()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step3()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step4()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step5()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step6()>();
"
    "Block 2:
[preds: 0 1 ] [succs: ]
$i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
$i4 = $i3 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i_end> = $i4;
r0.<compiler.c2.stemmer.Stemmer: int i> = 0;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
$i0 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i1 = $i0 - 1;
r0.<compiler.c2.stemmer.Stemmer: int k> = $i1;
$i2 = r0.<compiler.c2.stemmer.Stemmer: int k>;
if $i2 <= 1 goto $i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step1()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step2()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step3()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step4()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step5()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step6()>();
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
$i0 = r0.<compiler.c2.stemmer.Stemmer: int i>;
$i1 = $i0 - 1;
r0.<compiler.c2.stemmer.Stemmer: int k> = $i1;
$i2 = r0.<compiler.c2.stemmer.Stemmer: int k>;
if $i2 <= 1 goto $i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
$i4 = $i3 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i_end> = $i4;
r0.<compiler.c2.stemmer.Stemmer: int i> = 0;
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step1()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step2()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step3()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step4()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step5()>();
specialinvoke r0.<compiler.c2.stemmer.Stemmer: void step6()>();
"->"Block 2:
[preds: 0 1 ] [succs: ]
$i3 = r0.<compiler.c2.stemmer.Stemmer: int k>;
$i4 = $i3 + 1;
r0.<compiler.c2.stemmer.Stemmer: int i_end> = $i4;
r0.<compiler.c2.stemmer.Stemmer: int i> = 0;
return;
";
}
