digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: TreeNode;
r2 := @parameter1: TreeNode;
z2 := @parameter2: boolean;
$r1 = r0.<TreeNode: TreeNode left>;
if $r1 == null goto $z3 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r8 = r0.<TreeNode: TreeNode left>;
$i3 = $r8.<TreeNode: int val>;
$i2 = r2.<TreeNode: int val>;
if $i3 <= $i2 goto $z3 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z3 = 1;
goto [?= z0 = $z3];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$z3 = 0;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z0 = $z3;
$r9 = r0.<TreeNode: TreeNode right>;
if $r9 == null goto $z4 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r7 = r0.<TreeNode: TreeNode right>;
$i1 = $r7.<TreeNode: int val>;
$i0 = r2.<TreeNode: int val>;
if $i1 <= $i0 goto $z4 = 0;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z4 = 1;
goto [?= z1 = $z4];
"
    "Block 7:
[preds: 4 5 ] [succs: 8 ]
$z4 = 0;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 19 ]
z1 = $z4;
if z0 == 0 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 19 ]
if z1 == 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
if z2 == 0 goto $r3 = r0.<TreeNode: TreeNode right>;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r5 = r0.<TreeNode: TreeNode left>;
if z2 == 0 goto $z5 = 1;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z5 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5)];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z5 = 1;
"
    "Block 14:
[preds: 12 13 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5);
goto [?= return];
"
    "Block 15:
[preds: 10 ] [succs: 16 17 ]
$r3 = r0.<TreeNode: TreeNode right>;
if z2 == 0 goto $z6 = 1;
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z6 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6)];
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z6 = 1;
"
    "Block 18:
[preds: 16 17 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6);
goto [?= return];
"
    "Block 19:
[preds: 8 9 ] [succs: 20 24 ]
if z0 != 0 goto (branch);
"
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
if z1 != 0 goto (branch);
"
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z2 == 0 goto r0.<TreeNode: TreeNode right> = r2;
"
    "Block 22:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
"
    "Block 23:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
goto [?= return];
"
    "Block 24:
[preds: 19 20 ] [succs: 25 26 ]
if z0 != 0 goto r0.<TreeNode: TreeNode right> = r2;
"
    "Block 25:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
"
    "Block 26:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
"
    "Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: TreeNode;
r2 := @parameter1: TreeNode;
z2 := @parameter2: boolean;
$r1 = r0.<TreeNode: TreeNode left>;
if $r1 == null goto $z3 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r8 = r0.<TreeNode: TreeNode left>;
$i3 = $r8.<TreeNode: int val>;
$i2 = r2.<TreeNode: int val>;
if $i3 <= $i2 goto $z3 = 0;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: TreeNode;
r2 := @parameter1: TreeNode;
z2 := @parameter2: boolean;
$r1 = r0.<TreeNode: TreeNode left>;
if $r1 == null goto $z3 = 0;
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$z3 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r8 = r0.<TreeNode: TreeNode left>;
$i3 = $r8.<TreeNode: int val>;
$i2 = r2.<TreeNode: int val>;
if $i3 <= $i2 goto $z3 = 0;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z3 = 1;
goto [?= z0 = $z3];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r8 = r0.<TreeNode: TreeNode left>;
$i3 = $r8.<TreeNode: int val>;
$i2 = r2.<TreeNode: int val>;
if $i3 <= $i2 goto $z3 = 0;
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$z3 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z3 = 1;
goto [?= z0 = $z3];
"->"Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z0 = $z3;
$r9 = r0.<TreeNode: TreeNode right>;
if $r9 == null goto $z4 = 0;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$z3 = 0;
"->"Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z0 = $z3;
$r9 = r0.<TreeNode: TreeNode right>;
if $r9 == null goto $z4 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z0 = $z3;
$r9 = r0.<TreeNode: TreeNode right>;
if $r9 == null goto $z4 = 0;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$r7 = r0.<TreeNode: TreeNode right>;
$i1 = $r7.<TreeNode: int val>;
$i0 = r2.<TreeNode: int val>;
if $i1 <= $i0 goto $z4 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 7 ]
z0 = $z3;
$r9 = r0.<TreeNode: TreeNode right>;
if $r9 == null goto $z4 = 0;
"->"Block 7:
[preds: 4 5 ] [succs: 8 ]
$z4 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r7 = r0.<TreeNode: TreeNode right>;
$i1 = $r7.<TreeNode: int val>;
$i0 = r2.<TreeNode: int val>;
if $i1 <= $i0 goto $z4 = 0;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$z4 = 1;
goto [?= z1 = $z4];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r7 = r0.<TreeNode: TreeNode right>;
$i1 = $r7.<TreeNode: int val>;
$i0 = r2.<TreeNode: int val>;
if $i1 <= $i0 goto $z4 = 0;
"->"Block 7:
[preds: 4 5 ] [succs: 8 ]
$z4 = 0;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z4 = 1;
goto [?= z1 = $z4];
"->"Block 8:
[preds: 6 7 ] [succs: 9 19 ]
z1 = $z4;
if z0 == 0 goto (branch);
";
    "Block 7:
[preds: 4 5 ] [succs: 8 ]
$z4 = 0;
"->"Block 8:
[preds: 6 7 ] [succs: 9 19 ]
z1 = $z4;
if z0 == 0 goto (branch);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 19 ]
z1 = $z4;
if z0 == 0 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 19 ]
if z1 == 0 goto (branch);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 19 ]
z1 = $z4;
if z0 == 0 goto (branch);
"->"Block 19:
[preds: 8 9 ] [succs: 20 24 ]
if z0 != 0 goto (branch);
";
    "Block 9:
[preds: 8 ] [succs: 10 19 ]
if z1 == 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 11 15 ]
if z2 == 0 goto $r3 = r0.<TreeNode: TreeNode right>;
";
    "Block 9:
[preds: 8 ] [succs: 10 19 ]
if z1 == 0 goto (branch);
"->"Block 19:
[preds: 8 9 ] [succs: 20 24 ]
if z0 != 0 goto (branch);
";
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
if z2 == 0 goto $r3 = r0.<TreeNode: TreeNode right>;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$r5 = r0.<TreeNode: TreeNode left>;
if z2 == 0 goto $z5 = 1;
";
    "Block 10:
[preds: 9 ] [succs: 11 15 ]
if z2 == 0 goto $r3 = r0.<TreeNode: TreeNode right>;
"->"Block 15:
[preds: 10 ] [succs: 16 17 ]
$r3 = r0.<TreeNode: TreeNode right>;
if z2 == 0 goto $z6 = 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r5 = r0.<TreeNode: TreeNode left>;
if z2 == 0 goto $z5 = 1;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$z5 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5)];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r5 = r0.<TreeNode: TreeNode left>;
if z2 == 0 goto $z5 = 1;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$z5 = 1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z5 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5)];
"->"Block 14:
[preds: 12 13 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5);
goto [?= return];
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z5 = 1;
"->"Block 14:
[preds: 12 13 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5);
goto [?= return];
";
    "Block 14:
[preds: 12 13 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r5, r2, $z5);
goto [?= return];
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
    "Block 15:
[preds: 10 ] [succs: 16 17 ]
$r3 = r0.<TreeNode: TreeNode right>;
if z2 == 0 goto $z6 = 1;
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$z6 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6)];
";
    "Block 15:
[preds: 10 ] [succs: 16 17 ]
$r3 = r0.<TreeNode: TreeNode right>;
if z2 == 0 goto $z6 = 1;
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$z6 = 1;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z6 = 0;
goto [?= staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6)];
"->"Block 18:
[preds: 16 17 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6);
goto [?= return];
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z6 = 1;
"->"Block 18:
[preds: 16 17 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6);
goto [?= return];
";
    "Block 18:
[preds: 16 17 ] [succs: 27 ]
staticinvoke <TestGCOld: void replaceTreeWork(TreeNode,TreeNode,boolean)>($r3, r2, $z6);
goto [?= return];
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
    "Block 19:
[preds: 8 9 ] [succs: 20 24 ]
if z0 != 0 goto (branch);
"->"Block 20:
[preds: 19 ] [succs: 21 24 ]
if z1 != 0 goto (branch);
";
    "Block 19:
[preds: 8 9 ] [succs: 20 24 ]
if z0 != 0 goto (branch);
"->"Block 24:
[preds: 19 20 ] [succs: 25 26 ]
if z0 != 0 goto r0.<TreeNode: TreeNode right> = r2;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
if z1 != 0 goto (branch);
"->"Block 21:
[preds: 20 ] [succs: 22 23 ]
if z2 == 0 goto r0.<TreeNode: TreeNode right> = r2;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
if z1 != 0 goto (branch);
"->"Block 24:
[preds: 19 20 ] [succs: 25 26 ]
if z0 != 0 goto r0.<TreeNode: TreeNode right> = r2;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z2 == 0 goto r0.<TreeNode: TreeNode right> = r2;
"->"Block 22:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if z2 == 0 goto r0.<TreeNode: TreeNode right> = r2;
"->"Block 23:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
goto [?= return];
";
    "Block 22:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
    "Block 23:
[preds: 21 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
goto [?= return];
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
    "Block 24:
[preds: 19 20 ] [succs: 25 26 ]
if z0 != 0 goto r0.<TreeNode: TreeNode right> = r2;
"->"Block 25:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
";
    "Block 24:
[preds: 19 20 ] [succs: 25 26 ]
if z0 != 0 goto r0.<TreeNode: TreeNode right> = r2;
"->"Block 26:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
";
    "Block 25:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode left> = r2;
goto [?= return];
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
    "Block 26:
[preds: 24 ] [succs: 27 ]
r0.<TreeNode: TreeNode right> = r2;
"->"Block 27:
[preds: 14 18 22 23 25 26 ] [succs: ]
return;
";
}
