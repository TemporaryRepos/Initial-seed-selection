digraph "unitGraph" {
    "r0 := @parameter0: byte[]"
    "i7 = 0"
    "goto [?= $i8 = lengthof r0]"
    "$b0 = r0[i7]"
    "$i1 = $b0 & 255"
    "$i2 = $i1 & 128"
    "if $i2 >= 0 goto $i3 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$i5 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "$i6 = $i5 + 1"
    "<compiler.c2.TestUnsignedByteCompare: int p> = $i6"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 1)"
    "goto [?= i7 = i7 + 1]"
    "$i3 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$i4 = $i3 + 1"
    "<compiler.c2.TestUnsignedByteCompare: int n> = $i4"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 0)"
    "i7 = i7 + 1"
    "$i8 = lengthof r0"
    "if i7 < $i8 goto $b0 = r0[i7]"
    "return"
    "r0 := @parameter0: byte[]"->"i7 = 0";
    "i7 = 0"->"goto [?= $i8 = lengthof r0]";
    "goto [?= $i8 = lengthof r0]"->"$i8 = lengthof r0";
    "$b0 = r0[i7]"->"$i1 = $b0 & 255";
    "$i1 = $b0 & 255"->"$i2 = $i1 & 128";
    "$i2 = $i1 & 128"->"if $i2 >= 0 goto $i3 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "if $i2 >= 0 goto $i3 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i5 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "if $i2 >= 0 goto $i3 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i3 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "$i5 = <compiler.c2.TestUnsignedByteCompare: int p>"->"$i6 = $i5 + 1";
    "$i6 = $i5 + 1"->"<compiler.c2.TestUnsignedByteCompare: int p> = $i6";
    "<compiler.c2.TestUnsignedByteCompare: int p> = $i6"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 1)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 1)"->"goto [?= i7 = i7 + 1]";
    "goto [?= i7 = i7 + 1]"->"i7 = i7 + 1";
    "$i3 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$i4 = $i3 + 1";
    "$i4 = $i3 + 1"->"<compiler.c2.TestUnsignedByteCompare: int n> = $i4";
    "<compiler.c2.TestUnsignedByteCompare: int n> = $i4"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 0)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i7, 0)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"$i8 = lengthof r0";
    "$i8 = lengthof r0"->"if i7 < $i8 goto $b0 = r0[i7]";
    "if i7 < $i8 goto $b0 = r0[i7]"->"return";
    "if i7 < $i8 goto $b0 = r0[i7]"->"$b0 = r0[i7]";
}
