digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPublicM\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
$r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePublic\", \"()I\");
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r12 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r11, \"staticPublicM\", \"()I\");
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r14 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r13;
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPrivateM\", \"()I\");
$r16 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder private_()>();
$r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r20 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r19;
$r21 = virtualinvoke $r20.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePrivate\", \"()I\");
$r22 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r23 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r22, \"staticPrivateM\", \"()I\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r25 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r24;
r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r28 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r28[0] = r26;
$r29 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r28);
r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r31 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 == 0 goto r57 = class \"Ljava/lang/IllegalAccessError;\";
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/NoSuchMethodException;\";
goto [?= $r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/IllegalAccessError;\";
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPublicM\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPrivateM\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(r57);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r41 = virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r42 = virtualinvoke $r41.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePublic\", \"()I\");
$r43 = virtualinvoke $r42.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r44 = virtualinvoke $r43.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r45 = virtualinvoke $r44.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r46 = virtualinvoke $r45.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePublic\", \"()I\");
$r47 = virtualinvoke $r46.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r48 = virtualinvoke $r47.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r49 = virtualinvoke $r48.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r50 = virtualinvoke $r49.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePrivate\", \"()I\");
$r51 = virtualinvoke $r50.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r52 = virtualinvoke $r51.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r53 = virtualinvoke $r52.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r54 = virtualinvoke $r53.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePrivate\", \"()I\");
$r55 = virtualinvoke $r54.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r56 = virtualinvoke $r55.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r56.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPublicM\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
$r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePublic\", \"()I\");
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r12 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r11, \"staticPublicM\", \"()I\");
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r14 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r13;
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPrivateM\", \"()I\");
$r16 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder private_()>();
$r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r20 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r19;
$r21 = virtualinvoke $r20.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePrivate\", \"()I\");
$r22 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r23 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r22, \"staticPrivateM\", \"()I\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r25 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r24;
r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r28 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r28[0] = r26;
$r29 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r28);
r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r31 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 == 0 goto r57 = class \"Ljava/lang/IllegalAccessError;\";
"->"Block 1:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/NoSuchMethodException;\";
goto [?= $r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.StaticMethodsTest;
$r1 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPublicM\", \"()I\");
$r5 = virtualinvoke $r4.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder public_()>();
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
$r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePublic\", \"()I\");
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r12 = virtualinvoke $r10.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r11, \"staticPublicM\", \"()I\");
$r13 = virtualinvoke $r12.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r14 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r13;
$r15 = virtualinvoke $r14.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"staticPrivateM\", \"()I\");
$r16 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder static_()>();
$r17 = virtualinvoke $r16.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder private_()>();
$r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(1);
$r19 = virtualinvoke $r18.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r20 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r19;
$r21 = virtualinvoke $r20.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"invokePrivate\", \"()I\");
$r22 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.data.Interface intfByName(java.lang.String)>(\"I\");
$r23 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder invokeStatic(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>($r22, \"staticPrivateM\", \"()I\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r25 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r24;
r26 = virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"C\");
$r28 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r28[0] = r26;
$r29 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r28);
r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r31 = r0.<vm.runtime.defmeth.StaticMethodsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r32 = virtualinvoke $r31.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 == 0 goto r57 = class \"Ljava/lang/IllegalAccessError;\";
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/IllegalAccessError;\";
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/NoSuchMethodException;\";
goto [?= $r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>()];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPublicM\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPrivateM\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(r57);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r41 = virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r42 = virtualinvoke $r41.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePublic\", \"()I\");
$r43 = virtualinvoke $r42.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r44 = virtualinvoke $r43.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r45 = virtualinvoke $r44.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r46 = virtualinvoke $r45.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePublic\", \"()I\");
$r47 = virtualinvoke $r46.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r48 = virtualinvoke $r47.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r49 = virtualinvoke $r48.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r50 = virtualinvoke $r49.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePrivate\", \"()I\");
$r51 = virtualinvoke $r50.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r52 = virtualinvoke $r51.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r53 = virtualinvoke $r52.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r54 = virtualinvoke $r53.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePrivate\", \"()I\");
$r55 = virtualinvoke $r54.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r56 = virtualinvoke $r55.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r56.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r57 = class \"Ljava/lang/IllegalAccessError;\";
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r33 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r34 = virtualinvoke $r33.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPublicM\", \"()I\");
$r35 = virtualinvoke $r34.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r36 = virtualinvoke $r35.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r37 = virtualinvoke $r36.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r38 = virtualinvoke $r37.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder staticCallSite(vm.runtime.defmeth.shared.data.Clazz,java.lang.String,java.lang.String)>(r26, \"staticPrivateM\", \"()I\");
$r39 = virtualinvoke $r38.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(r57);
$r40 = virtualinvoke $r39.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r41 = virtualinvoke $r40.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r42 = virtualinvoke $r41.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePublic\", \"()I\");
$r43 = virtualinvoke $r42.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r44 = virtualinvoke $r43.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r45 = virtualinvoke $r44.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r46 = virtualinvoke $r45.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePublic\", \"()I\");
$r47 = virtualinvoke $r46.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r48 = virtualinvoke $r47.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r49 = virtualinvoke $r48.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r50 = virtualinvoke $r49.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r26, r30, \"invokePrivate\", \"()I\");
$r51 = virtualinvoke $r50.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r52 = virtualinvoke $r51.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
$r53 = virtualinvoke $r52.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r54 = virtualinvoke $r53.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r30, r30, \"invokePrivate\", \"()I\");
$r55 = virtualinvoke $r54.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(1);
$r56 = virtualinvoke $r55.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r56.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
return;
";
}
