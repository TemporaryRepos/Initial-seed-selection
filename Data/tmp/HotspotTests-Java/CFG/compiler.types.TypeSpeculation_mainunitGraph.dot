digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "z1 = 1"
    "$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>()"
    "if $z0 == 0 goto $z2 = 0"
    "if z1 == 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= z3 = $z2]"
    "$z2 = 0"
    "z3 = $z2"
    "$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>()"
    "if $z4 == 0 goto $z5 = 0"
    "if z3 == 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= z6 = $z5]"
    "$z5 = 0"
    "z6 = $z5"
    "$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>()"
    "if $z7 == 0 goto $z8 = 0"
    "if z6 == 0 goto $z8 = 0"
    "$z8 = 1"
    "goto [?= z9 = $z8]"
    "$z8 = 0"
    "z9 = $z8"
    "$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>()"
    "if $z10 == 0 goto $z11 = 0"
    "if z9 == 0 goto $z11 = 0"
    "$z11 = 1"
    "goto [?= z12 = $z11]"
    "$z11 = 0"
    "z12 = $z11"
    "$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>()"
    "if $z13 == 0 goto $z14 = 0"
    "if z12 == 0 goto $z14 = 0"
    "$z14 = 1"
    "goto [?= z15 = $z14]"
    "$z14 = 0"
    "z15 = $z14"
    "$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>()"
    "if $z16 == 0 goto $z17 = 0"
    "if z15 == 0 goto $z17 = 0"
    "$z17 = 1"
    "goto [?= z18 = $z17]"
    "$z17 = 0"
    "z18 = $z17"
    "$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>()"
    "if $z19 == 0 goto $z20 = 0"
    "if z18 == 0 goto $z20 = 0"
    "$z20 = 1"
    "goto [?= z21 = $z20]"
    "$z20 = 0"
    "z21 = $z20"
    "$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>()"
    "if $z22 == 0 goto $z23 = 0"
    "if z21 == 0 goto $z23 = 0"
    "$z23 = 1"
    "goto [?= z24 = $z23]"
    "$z23 = 0"
    "z24 = $z23"
    "$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>()"
    "if $z25 == 0 goto $z26 = 0"
    "if z24 == 0 goto $z26 = 0"
    "$z26 = 1"
    "goto [?= z27 = $z26]"
    "$z26 = 0"
    "z27 = $z26"
    "$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>()"
    "if $z28 == 0 goto $z29 = 0"
    "if z27 == 0 goto $z29 = 0"
    "$z29 = 1"
    "goto [?= z30 = $z29]"
    "$z29 = 0"
    "z30 = $z29"
    "$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>()"
    "if $z31 == 0 goto $z32 = 0"
    "if z30 == 0 goto $z32 = 0"
    "$z32 = 1"
    "goto [?= z33 = $z32]"
    "$z32 = 0"
    "z33 = $z32"
    "$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>()"
    "if $z34 == 0 goto $z35 = 0"
    "if z33 == 0 goto $z35 = 0"
    "$z35 = 1"
    "goto [?= z36 = $z35]"
    "$z35 = 0"
    "z36 = $z35"
    "$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>()"
    "if $z37 == 0 goto $z38 = 0"
    "if z36 == 0 goto $z38 = 0"
    "$z38 = 1"
    "goto [?= z39 = $z38]"
    "$z38 = 0"
    "z39 = $z38"
    "if z39 == 0 goto $r0 = new java.lang.RuntimeException"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "goto [?= return]"
    "$r0 = new java.lang.RuntimeException"
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")"
    "throw $r0"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"z1 = 1";
    "z1 = 1"->"$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>()";
    "$z0 = staticinvoke <compiler.types.TypeSpeculation: boolean test1()>()"->"if $z0 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"if z1 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 0";
    "if z1 == 0 goto $z2 = 0"->"$z2 = 1";
    "if z1 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= z3 = $z2]";
    "goto [?= z3 = $z2]"->"z3 = $z2";
    "$z2 = 0"->"z3 = $z2";
    "z3 = $z2"->"$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>()";
    "$z4 = staticinvoke <compiler.types.TypeSpeculation: boolean test2()>()"->"if $z4 == 0 goto $z5 = 0";
    "if $z4 == 0 goto $z5 = 0"->"if z3 == 0 goto $z5 = 0";
    "if $z4 == 0 goto $z5 = 0"->"$z5 = 0";
    "if z3 == 0 goto $z5 = 0"->"$z5 = 1";
    "if z3 == 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= z6 = $z5]";
    "goto [?= z6 = $z5]"->"z6 = $z5";
    "$z5 = 0"->"z6 = $z5";
    "z6 = $z5"->"$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>()";
    "$z7 = staticinvoke <compiler.types.TypeSpeculation: boolean test3()>()"->"if $z7 == 0 goto $z8 = 0";
    "if $z7 == 0 goto $z8 = 0"->"if z6 == 0 goto $z8 = 0";
    "if $z7 == 0 goto $z8 = 0"->"$z8 = 0";
    "if z6 == 0 goto $z8 = 0"->"$z8 = 1";
    "if z6 == 0 goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= z9 = $z8]";
    "goto [?= z9 = $z8]"->"z9 = $z8";
    "$z8 = 0"->"z9 = $z8";
    "z9 = $z8"->"$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>()";
    "$z10 = staticinvoke <compiler.types.TypeSpeculation: boolean test4()>()"->"if $z10 == 0 goto $z11 = 0";
    "if $z10 == 0 goto $z11 = 0"->"if z9 == 0 goto $z11 = 0";
    "if $z10 == 0 goto $z11 = 0"->"$z11 = 0";
    "if z9 == 0 goto $z11 = 0"->"$z11 = 1";
    "if z9 == 0 goto $z11 = 0"->"$z11 = 0";
    "$z11 = 1"->"goto [?= z12 = $z11]";
    "goto [?= z12 = $z11]"->"z12 = $z11";
    "$z11 = 0"->"z12 = $z11";
    "z12 = $z11"->"$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>()";
    "$z13 = staticinvoke <compiler.types.TypeSpeculation: boolean test5()>()"->"if $z13 == 0 goto $z14 = 0";
    "if $z13 == 0 goto $z14 = 0"->"if z12 == 0 goto $z14 = 0";
    "if $z13 == 0 goto $z14 = 0"->"$z14 = 0";
    "if z12 == 0 goto $z14 = 0"->"$z14 = 1";
    "if z12 == 0 goto $z14 = 0"->"$z14 = 0";
    "$z14 = 1"->"goto [?= z15 = $z14]";
    "goto [?= z15 = $z14]"->"z15 = $z14";
    "$z14 = 0"->"z15 = $z14";
    "z15 = $z14"->"$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>()";
    "$z16 = staticinvoke <compiler.types.TypeSpeculation: boolean test6()>()"->"if $z16 == 0 goto $z17 = 0";
    "if $z16 == 0 goto $z17 = 0"->"if z15 == 0 goto $z17 = 0";
    "if $z16 == 0 goto $z17 = 0"->"$z17 = 0";
    "if z15 == 0 goto $z17 = 0"->"$z17 = 1";
    "if z15 == 0 goto $z17 = 0"->"$z17 = 0";
    "$z17 = 1"->"goto [?= z18 = $z17]";
    "goto [?= z18 = $z17]"->"z18 = $z17";
    "$z17 = 0"->"z18 = $z17";
    "z18 = $z17"->"$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>()";
    "$z19 = staticinvoke <compiler.types.TypeSpeculation: boolean test7()>()"->"if $z19 == 0 goto $z20 = 0";
    "if $z19 == 0 goto $z20 = 0"->"if z18 == 0 goto $z20 = 0";
    "if $z19 == 0 goto $z20 = 0"->"$z20 = 0";
    "if z18 == 0 goto $z20 = 0"->"$z20 = 1";
    "if z18 == 0 goto $z20 = 0"->"$z20 = 0";
    "$z20 = 1"->"goto [?= z21 = $z20]";
    "goto [?= z21 = $z20]"->"z21 = $z20";
    "$z20 = 0"->"z21 = $z20";
    "z21 = $z20"->"$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>()";
    "$z22 = staticinvoke <compiler.types.TypeSpeculation: boolean test8()>()"->"if $z22 == 0 goto $z23 = 0";
    "if $z22 == 0 goto $z23 = 0"->"if z21 == 0 goto $z23 = 0";
    "if $z22 == 0 goto $z23 = 0"->"$z23 = 0";
    "if z21 == 0 goto $z23 = 0"->"$z23 = 1";
    "if z21 == 0 goto $z23 = 0"->"$z23 = 0";
    "$z23 = 1"->"goto [?= z24 = $z23]";
    "goto [?= z24 = $z23]"->"z24 = $z23";
    "$z23 = 0"->"z24 = $z23";
    "z24 = $z23"->"$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>()";
    "$z25 = staticinvoke <compiler.types.TypeSpeculation: boolean test9()>()"->"if $z25 == 0 goto $z26 = 0";
    "if $z25 == 0 goto $z26 = 0"->"if z24 == 0 goto $z26 = 0";
    "if $z25 == 0 goto $z26 = 0"->"$z26 = 0";
    "if z24 == 0 goto $z26 = 0"->"$z26 = 1";
    "if z24 == 0 goto $z26 = 0"->"$z26 = 0";
    "$z26 = 1"->"goto [?= z27 = $z26]";
    "goto [?= z27 = $z26]"->"z27 = $z26";
    "$z26 = 0"->"z27 = $z26";
    "z27 = $z26"->"$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>()";
    "$z28 = staticinvoke <compiler.types.TypeSpeculation: boolean test10()>()"->"if $z28 == 0 goto $z29 = 0";
    "if $z28 == 0 goto $z29 = 0"->"if z27 == 0 goto $z29 = 0";
    "if $z28 == 0 goto $z29 = 0"->"$z29 = 0";
    "if z27 == 0 goto $z29 = 0"->"$z29 = 1";
    "if z27 == 0 goto $z29 = 0"->"$z29 = 0";
    "$z29 = 1"->"goto [?= z30 = $z29]";
    "goto [?= z30 = $z29]"->"z30 = $z29";
    "$z29 = 0"->"z30 = $z29";
    "z30 = $z29"->"$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>()";
    "$z31 = staticinvoke <compiler.types.TypeSpeculation: boolean test11()>()"->"if $z31 == 0 goto $z32 = 0";
    "if $z31 == 0 goto $z32 = 0"->"if z30 == 0 goto $z32 = 0";
    "if $z31 == 0 goto $z32 = 0"->"$z32 = 0";
    "if z30 == 0 goto $z32 = 0"->"$z32 = 1";
    "if z30 == 0 goto $z32 = 0"->"$z32 = 0";
    "$z32 = 1"->"goto [?= z33 = $z32]";
    "goto [?= z33 = $z32]"->"z33 = $z32";
    "$z32 = 0"->"z33 = $z32";
    "z33 = $z32"->"$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>()";
    "$z34 = staticinvoke <compiler.types.TypeSpeculation: boolean test12()>()"->"if $z34 == 0 goto $z35 = 0";
    "if $z34 == 0 goto $z35 = 0"->"if z33 == 0 goto $z35 = 0";
    "if $z34 == 0 goto $z35 = 0"->"$z35 = 0";
    "if z33 == 0 goto $z35 = 0"->"$z35 = 1";
    "if z33 == 0 goto $z35 = 0"->"$z35 = 0";
    "$z35 = 1"->"goto [?= z36 = $z35]";
    "goto [?= z36 = $z35]"->"z36 = $z35";
    "$z35 = 0"->"z36 = $z35";
    "z36 = $z35"->"$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>()";
    "$z37 = staticinvoke <compiler.types.TypeSpeculation: boolean test13()>()"->"if $z37 == 0 goto $z38 = 0";
    "if $z37 == 0 goto $z38 = 0"->"if z36 == 0 goto $z38 = 0";
    "if $z37 == 0 goto $z38 = 0"->"$z38 = 0";
    "if z36 == 0 goto $z38 = 0"->"$z38 = 1";
    "if z36 == 0 goto $z38 = 0"->"$z38 = 0";
    "$z38 = 1"->"goto [?= z39 = $z38]";
    "goto [?= z39 = $z38]"->"z39 = $z38";
    "$z38 = 0"->"z39 = $z38";
    "z39 = $z38"->"if z39 == 0 goto $r0 = new java.lang.RuntimeException";
    "if z39 == 0 goto $r0 = new java.lang.RuntimeException"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if z39 == 0 goto $r0 = new java.lang.RuntimeException"->"$r0 = new java.lang.RuntimeException";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r0 = new java.lang.RuntimeException"->"specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")";
    "specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: erroneous bound check elimination\")"->"throw $r0";
}
