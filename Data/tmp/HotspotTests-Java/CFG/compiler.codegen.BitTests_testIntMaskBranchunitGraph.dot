digraph "unitGraph" {
    "r0 := @this: compiler.codegen.BitTests"
    "l4 := @parameter0: long"
    "i1 := @parameter1: int"
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$i2 = (int) $l0"
    "$i3 = $i2 & i1"
    "if $i3 == 0 goto return l4"
    "l4 = l4 + 1L"
    "return l4"
    "r0 := @this: compiler.codegen.BitTests"->"l4 := @parameter0: long";
    "l4 := @parameter0: long"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$i2 = (int) $l0";
    "$i2 = (int) $l0"->"$i3 = $i2 & i1";
    "$i3 = $i2 & i1"->"if $i3 == 0 goto return l4";
    "if $i3 == 0 goto return l4"->"l4 = l4 + 1L";
    "if $i3 == 0 goto return l4"->"return l4";
    "l4 = l4 + 1L"->"return l4";
}
