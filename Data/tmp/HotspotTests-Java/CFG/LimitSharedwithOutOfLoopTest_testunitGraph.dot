digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r0 := @parameter1: boolean[]"
    "i1 = 0"
    "goto [?= (branch)]"
    "i1 = i1 + 1"
    "$z0 = r0[i1]"
    "if $z0 == 0 goto <LimitSharedwithOutOfLoopTest: boolean barrier> = 1"
    "if i1 >= i0 goto return 0"
    "return 1"
    "return 0"
    "<LimitSharedwithOutOfLoopTest: boolean barrier> = 1"
    "if i1 < i0 goto i1 = i1 + 1"
    "i0 := @parameter0: int"->"r0 := @parameter1: boolean[]";
    "r0 := @parameter1: boolean[]"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto i1 = i1 + 1";
    "i1 = i1 + 1"->"$z0 = r0[i1]";
    "$z0 = r0[i1]"->"if $z0 == 0 goto <LimitSharedwithOutOfLoopTest: boolean barrier> = 1";
    "if $z0 == 0 goto <LimitSharedwithOutOfLoopTest: boolean barrier> = 1"->"if i1 >= i0 goto return 0";
    "if $z0 == 0 goto <LimitSharedwithOutOfLoopTest: boolean barrier> = 1"->"<LimitSharedwithOutOfLoopTest: boolean barrier> = 1";
    "if i1 >= i0 goto return 0"->"return 1";
    "if i1 >= i0 goto return 0"->"return 0";
    "<LimitSharedwithOutOfLoopTest: boolean barrier> = 1"->"if i1 < i0 goto i1 = i1 + 1";
    "if i1 < i0 goto i1 = i1 + 1"->"return 0";
    "if i1 < i0 goto i1 = i1 + 1"->"i1 = i1 + 1";
}
