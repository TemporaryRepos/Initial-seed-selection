digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$r1 = newarray (java.lang.String)[0]"
    "r2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r0, $r1)"
    "$r3 = newarray (java.nio.file.LinkOption)[0]"
    "staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r2, class \"Ljava/nio/file/attribute/BasicFileAttributes;\", $r3)"
    "return 10000L"
    "r0 := @parameter0: java.lang.String"->"$r1 = newarray (java.lang.String)[0]";
    "$r1 = newarray (java.lang.String)[0]"->"r2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r0, $r1)";
    "r2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r0, $r1)"->"$r3 = newarray (java.nio.file.LinkOption)[0]";
    "$r3 = newarray (java.nio.file.LinkOption)[0]"->"staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r2, class \"Ljava/nio/file/attribute/BasicFileAttributes;\", $r3)";
    "staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r2, class \"Ljava/nio/file/attribute/BasicFileAttributes;\", $r3)"->"return 10000L";
}
