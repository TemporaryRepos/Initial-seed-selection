digraph "unitGraph" {
    "r18 := @parameter0: java.lang.String[]"
    "$i0 = <TestElasticTLAB: int COUNT>"
    "$i1 = $i0 * 100"
    "$r0 = newarray (byte[])[$i1]"
    "<TestElasticTLAB: byte[][] arr> = $r0"
    "i11 = 0"
    "goto [?= $i2 = <TestElasticTLAB: int COUNT>]"
    "$r2 = <TestElasticTLAB: byte[][] arr>"
    "$i3 = i11 * 100"
    "$r1 = newarray (byte)[$i3]"
    "$r2[i11] = $r1"
    "i12 = 0"
    "goto [?= (branch)]"
    "$r3 = <TestElasticTLAB: byte[][] arr>"
    "$r4 = $r3[i11]"
    "$r4[i12] = -56"
    "i12 = i12 + 1"
    "if i12 < i11 goto $r3 = <TestElasticTLAB: byte[][] arr>"
    "i11 = i11 + 1"
    "$i2 = <TestElasticTLAB: int COUNT>"
    "if i11 < $i2 goto $r2 = <TestElasticTLAB: byte[][] arr>"
    "i13 = 0"
    "goto [?= $i4 = <TestElasticTLAB: int COUNT>]"
    "$r5 = <TestElasticTLAB: byte[][] arr>"
    "r19 = $r5[i13]"
    "$i6 = lengthof r19"
    "$i5 = i13 * 100"
    "if $i6 == $i5 goto i14 = 0"
    "$r12 = new java.lang.IllegalStateException"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: length = \")"
    "$i9 = lengthof r19"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", need = \")"
    "$i10 = i13 * 100"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17)"
    "throw $r12"
    "i14 = 0"
    "b7 = r19[i14]"
    "b8 = -56"
    "if b7 == b8 goto i14 = i14 + 1"
    "$r6 = new java.lang.IllegalStateException"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: expected = \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b8)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", actual = \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b7)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11)"
    "throw $r6"
    "i14 = i14 + 1"
    "if i14 < i13 goto b7 = r19[i14]"
    "i13 = i13 + 1"
    "$i4 = <TestElasticTLAB: int COUNT>"
    "if i13 < $i4 goto $r5 = <TestElasticTLAB: byte[][] arr>"
    "return"
    "r18 := @parameter0: java.lang.String[]"->"$i0 = <TestElasticTLAB: int COUNT>";
    "$i0 = <TestElasticTLAB: int COUNT>"->"$i1 = $i0 * 100";
    "$i1 = $i0 * 100"->"$r0 = newarray (byte[])[$i1]";
    "$r0 = newarray (byte[])[$i1]"->"<TestElasticTLAB: byte[][] arr> = $r0";
    "<TestElasticTLAB: byte[][] arr> = $r0"->"i11 = 0";
    "i11 = 0"->"goto [?= $i2 = <TestElasticTLAB: int COUNT>]";
    "goto [?= $i2 = <TestElasticTLAB: int COUNT>]"->"$i2 = <TestElasticTLAB: int COUNT>";
    "$r2 = <TestElasticTLAB: byte[][] arr>"->"$i3 = i11 * 100";
    "$i3 = i11 * 100"->"$r1 = newarray (byte)[$i3]";
    "$r1 = newarray (byte)[$i3]"->"$r2[i11] = $r1";
    "$r2[i11] = $r1"->"i12 = 0";
    "i12 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 < i11 goto $r3 = <TestElasticTLAB: byte[][] arr>";
    "$r3 = <TestElasticTLAB: byte[][] arr>"->"$r4 = $r3[i11]";
    "$r4 = $r3[i11]"->"$r4[i12] = -56";
    "$r4[i12] = -56"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"if i12 < i11 goto $r3 = <TestElasticTLAB: byte[][] arr>";
    "if i12 < i11 goto $r3 = <TestElasticTLAB: byte[][] arr>"->"i11 = i11 + 1";
    "if i12 < i11 goto $r3 = <TestElasticTLAB: byte[][] arr>"->"$r3 = <TestElasticTLAB: byte[][] arr>";
    "i11 = i11 + 1"->"$i2 = <TestElasticTLAB: int COUNT>";
    "$i2 = <TestElasticTLAB: int COUNT>"->"if i11 < $i2 goto $r2 = <TestElasticTLAB: byte[][] arr>";
    "if i11 < $i2 goto $r2 = <TestElasticTLAB: byte[][] arr>"->"i13 = 0";
    "if i11 < $i2 goto $r2 = <TestElasticTLAB: byte[][] arr>"->"$r2 = <TestElasticTLAB: byte[][] arr>";
    "i13 = 0"->"goto [?= $i4 = <TestElasticTLAB: int COUNT>]";
    "goto [?= $i4 = <TestElasticTLAB: int COUNT>]"->"$i4 = <TestElasticTLAB: int COUNT>";
    "$r5 = <TestElasticTLAB: byte[][] arr>"->"r19 = $r5[i13]";
    "r19 = $r5[i13]"->"$i6 = lengthof r19";
    "$i6 = lengthof r19"->"$i5 = i13 * 100";
    "$i5 = i13 * 100"->"if $i6 == $i5 goto i14 = 0";
    "if $i6 == $i5 goto i14 = 0"->"$r12 = new java.lang.IllegalStateException";
    "if $i6 == $i5 goto i14 = 0"->"i14 = 0";
    "$r12 = new java.lang.IllegalStateException"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: length = \")";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: length = \")"->"$i9 = lengthof r19";
    "$i9 = lengthof r19"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", need = \")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", need = \")"->"$i10 = i13 * 100";
    "$i10 = i13 * 100"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17)";
    "specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17)"->"throw $r12";
    "i14 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 < i13 goto b7 = r19[i14]";
    "b7 = r19[i14]"->"b8 = -56";
    "b8 = -56"->"if b7 == b8 goto i14 = i14 + 1";
    "if b7 == b8 goto i14 = i14 + 1"->"$r6 = new java.lang.IllegalStateException";
    "if b7 == b8 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "$r6 = new java.lang.IllegalStateException"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: expected = \")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failure: expected = \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b8)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b8)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", actual = \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", actual = \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b7)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b7)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11)";
    "specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11)"->"throw $r6";
    "i14 = i14 + 1"->"if i14 < i13 goto b7 = r19[i14]";
    "if i14 < i13 goto b7 = r19[i14]"->"i13 = i13 + 1";
    "if i14 < i13 goto b7 = r19[i14]"->"b7 = r19[i14]";
    "i13 = i13 + 1"->"$i4 = <TestElasticTLAB: int COUNT>";
    "$i4 = <TestElasticTLAB: int COUNT>"->"if i13 < $i4 goto $r5 = <TestElasticTLAB: byte[][] arr>";
    "if i13 < $i4 goto $r5 = <TestElasticTLAB: byte[][] arr>"->"return";
    "if i13 < $i4 goto $r5 = <TestElasticTLAB: byte[][] arr>"->"$r5 = <TestElasticTLAB: byte[][] arr>";
}
