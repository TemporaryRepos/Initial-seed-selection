digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.escapeAnalysis.TestEscapeThroughInvoke;
specialinvoke $r0.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void <init>()>();
r1 = $r0;
$r2 = new compiler.escapeAnalysis.TestEscapeThroughInvoke$A;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
specialinvoke $r2.<compiler.escapeAnalysis.TestEscapeThroughInvoke$A: void <init>(java.lang.Integer)>($r3);
r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: compiler.escapeAnalysis.TestEscapeThroughInvoke$A a> = $r2;
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 100000 goto specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
$r0 = new compiler.escapeAnalysis.TestEscapeThroughInvoke;
specialinvoke $r0.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void <init>()>();
r1 = $r0;
$r2 = new compiler.escapeAnalysis.TestEscapeThroughInvoke$A;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);
specialinvoke $r2.<compiler.escapeAnalysis.TestEscapeThroughInvoke$A: void <init>(java.lang.Integer)>($r3);
r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: compiler.escapeAnalysis.TestEscapeThroughInvoke$A a> = $r2;
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 100000 goto specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 100000 goto specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 100000 goto specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 100000 goto specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
specialinvoke r1.<compiler.escapeAnalysis.TestEscapeThroughInvoke: void run()>();
i0 = i0 + 1;
";
}
