digraph "unitGraph" {
    "r0 := @parameter0: float[]"
    "f3 = 1.0F"
    "r1 = r0"
    "i0 = lengthof r0"
    "i1 = 0"
    "goto [?= (branch)]"
    "$f0 = r1[i1]"
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)"
    "$f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"
    "$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float foo(float)>($f1)"
    "f3 = f3 + $f2"
    "i1 = i1 + 1"
    "if i1 < i0 goto $f0 = r1[i1]"
    "staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: void dummy()>()"
    "return f3"
    "r0 := @parameter0: float[]"->"f3 = 1.0F";
    "f3 = 1.0F"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto $f0 = r1[i1]";
    "$f0 = r1[i1]"->"r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)";
    "r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)"->"$f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>()";
    "$f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>()"->"$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float foo(float)>($f1)";
    "$f2 = staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: float foo(float)>($f1)"->"f3 = f3 + $f2";
    "f3 = f3 + $f2"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto $f0 = r1[i1]";
    "if i1 < i0 goto $f0 = r1[i1]"->"staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: void dummy()>()";
    "if i1 < i0 goto $f0 = r1[i1]"->"$f0 = r1[i1]";
    "staticinvoke <compiler.eliminateAutobox.TestFloatBoxing: void dummy()>()"->"return f3";
}
