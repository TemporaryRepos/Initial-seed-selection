digraph "unitGraph" {
    "r1 := @this: compiler.c2.stemmer.Stemmer"
    "r0 := @parameter0: java.lang.String"
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = r1.<compiler.c2.stemmer.Stemmer: int k>"
    "$i2 = $i1 - i0"
    "i3 = $i2 + 1"
    "if i3 >= 0 goto i9 = 0"
    "return 0"
    "i9 = 0"
    "goto [?= (branch)]"
    "$r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$i4 = i3 + i9"
    "$c5 = $r2[$i4]"
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9)"
    "if $c5 == $c6 goto i9 = i9 + 1"
    "i9 = i9 + 1"
    "if i9 < i0 goto $r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$i7 = r1.<compiler.c2.stemmer.Stemmer: int k>"
    "$i8 = $i7 - i0"
    "r1.<compiler.c2.stemmer.Stemmer: int j> = $i8"
    "return 1"
    "r1 := @this: compiler.c2.stemmer.Stemmer"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = r1.<compiler.c2.stemmer.Stemmer: int k>";
    "$i1 = r1.<compiler.c2.stemmer.Stemmer: int k>"->"$i2 = $i1 - i0";
    "$i2 = $i1 - i0"->"i3 = $i2 + 1";
    "i3 = $i2 + 1"->"if i3 >= 0 goto i9 = 0";
    "if i3 >= 0 goto i9 = 0"->"return 0";
    "if i3 >= 0 goto i9 = 0"->"i9 = 0";
    "i9 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 < i0 goto $r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>"->"$i4 = i3 + i9";
    "$i4 = i3 + i9"->"$c5 = $r2[$i4]";
    "$c5 = $r2[$i4]"->"$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9)";
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9)"->"if $c5 == $c6 goto i9 = i9 + 1";
    "if $c5 == $c6 goto i9 = i9 + 1"->"return 0";
    "if $c5 == $c6 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"if i9 < i0 goto $r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>";
    "if i9 < i0 goto $r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>"->"$i7 = r1.<compiler.c2.stemmer.Stemmer: int k>";
    "if i9 < i0 goto $r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>"->"$r2 = r1.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$i7 = r1.<compiler.c2.stemmer.Stemmer: int k>"->"$i8 = $i7 - i0";
    "$i8 = $i7 - i0"->"r1.<compiler.c2.stemmer.Stemmer: int j> = $i8";
    "r1.<compiler.c2.stemmer.Stemmer: int j> = $i8"->"return 1";
}
