digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
r2 := @parameter1: double[];
r3 := @parameter2: double[];
r1 := @parameter3: double[];
d21 := @parameter4: double;
i1 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r0[i1];
$d3 = neg $d0;
$d1 = r2[i1];
$d2 = neg $d1;
$d4 = $d3 * $d2;
$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);
$d6 = r0[i1];
$d9 = neg $d6;
$d7 = r3[i1];
$d8 = neg $d7;
$d10 = $d9 * $d8;
$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);
$d17 = $d5 + $d11;
$d12 = r2[i1];
$d15 = neg $d12;
$d13 = r3[i1];
$d14 = neg $d13;
$d16 = $d15 * $d14;
$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$d19 = $d17 + $d18;
r1[i1] = $d19;
$d20 = r1[i1];
d21 = d21 + $d20;
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d0 = r0[i1];
"
    "Block 3:
[preds: 2 ] [succs: ]
return d21;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: double[];
r2 := @parameter1: double[];
r3 := @parameter2: double[];
r1 := @parameter3: double[];
d21 := @parameter4: double;
i1 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d0 = r0[i1];
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r0[i1];
$d3 = neg $d0;
$d1 = r2[i1];
$d2 = neg $d1;
$d4 = $d3 * $d2;
$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);
$d6 = r0[i1];
$d9 = neg $d6;
$d7 = r3[i1];
$d8 = neg $d7;
$d10 = $d9 * $d8;
$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);
$d17 = $d5 + $d11;
$d12 = r2[i1];
$d15 = neg $d12;
$d13 = r3[i1];
$d14 = neg $d13;
$d16 = $d15 * $d14;
$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$d19 = $d17 + $d18;
r1[i1] = $d19;
$d20 = r1[i1];
d21 = d21 + $d20;
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d0 = r0[i1];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d0 = r0[i1];
"->"Block 3:
[preds: 2 ] [succs: ]
return d21;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = lengthof r0;
if i1 < $i0 goto $d0 = r0[i1];
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d0 = r0[i1];
$d3 = neg $d0;
$d1 = r2[i1];
$d2 = neg $d1;
$d4 = $d3 * $d2;
$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);
$d6 = r0[i1];
$d9 = neg $d6;
$d7 = r3[i1];
$d8 = neg $d7;
$d10 = $d9 * $d8;
$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);
$d17 = $d5 + $d11;
$d12 = r2[i1];
$d15 = neg $d12;
$d13 = r3[i1];
$d14 = neg $d13;
$d16 = $d15 * $d14;
$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16);
$d19 = $d17 + $d18;
r1[i1] = $d19;
$d20 = r1[i1];
d21 = d21 + $d20;
i1 = i1 + 1;
";
}
