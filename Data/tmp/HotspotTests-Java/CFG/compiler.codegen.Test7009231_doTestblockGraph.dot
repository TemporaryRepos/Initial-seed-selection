digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
i0 := @parameter0: int;
r0 = newarray (java.lang.Thread)[i0];
$r1 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
r2 = $r1;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = new compiler.codegen.Test7009231$RunnerThread;
$i1 = 8 * i3;
$l2 = 1L << $i1;
specialinvoke $r3.<compiler.codegen.Test7009231$RunnerThread: void <init>(java.util.concurrent.atomic.AtomicLong,long)>(r2, $l2);
r0[i3] = $r3;
i3 = i3 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < i0 goto $r3 = new compiler.codegen.Test7009231$RunnerThread;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r4 = r0[i4];
virtualinvoke $r4.<java.lang.Thread: void start()>();
i4 = i4 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < i0 goto $r4 = r0[i4];
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i5 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
$r5 = r0[i5];
virtualinvoke $r5.<java.lang.Thread: void join()>();
i5 = i5 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i5 < i0 goto $r5 = r0[i5];
"
    "Block 9:
[preds: 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
i0 := @parameter0: int;
r0 = newarray (java.lang.Thread)[i0];
$r1 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
r2 = $r1;
i3 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < i0 goto $r3 = new compiler.codegen.Test7009231$RunnerThread;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = new compiler.codegen.Test7009231$RunnerThread;
$i1 = 8 * i3;
$l2 = 1L << $i1;
specialinvoke $r3.<compiler.codegen.Test7009231$RunnerThread: void <init>(java.util.concurrent.atomic.AtomicLong,long)>(r2, $l2);
r0[i3] = $r3;
i3 = i3 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < i0 goto $r3 = new compiler.codegen.Test7009231$RunnerThread;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < i0 goto $r3 = new compiler.codegen.Test7009231$RunnerThread;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < i0 goto $r3 = new compiler.codegen.Test7009231$RunnerThread;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = new compiler.codegen.Test7009231$RunnerThread;
$i1 = 8 * i3;
$l2 = 1L << $i1;
specialinvoke $r3.<compiler.codegen.Test7009231$RunnerThread: void <init>(java.util.concurrent.atomic.AtomicLong,long)>(r2, $l2);
r0[i3] = $r3;
i3 = i3 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < i0 goto $r4 = r0[i4];
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$r4 = r0[i4];
virtualinvoke $r4.<java.lang.Thread: void start()>();
i4 = i4 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < i0 goto $r4 = r0[i4];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < i0 goto $r4 = r0[i4];
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i5 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < i0 goto $r4 = r0[i4];
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$r4 = r0[i4];
virtualinvoke $r4.<java.lang.Thread: void start()>();
i4 = i4 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i5 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i5 < i0 goto $r5 = r0[i5];
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
$r5 = r0[i5];
virtualinvoke $r5.<java.lang.Thread: void join()>();
i5 = i5 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i5 < i0 goto $r5 = r0[i5];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i5 < i0 goto $r5 = r0[i5];
"->"Block 9:
[preds: 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i5 < i0 goto $r5 = r0[i5];
"->"Block 7:
[preds: 8 ] [succs: 8 ]
$r5 = r0[i5];
virtualinvoke $r5.<java.lang.Thread: void join()>();
i5 = i5 + 1;
";
}
