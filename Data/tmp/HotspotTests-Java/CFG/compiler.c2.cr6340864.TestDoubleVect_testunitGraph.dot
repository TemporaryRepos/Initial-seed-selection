digraph "unitGraph" {
    "r0 = newarray (double)[997]"
    "r1 = newarray (double)[997]"
    "r2 = newarray (double)[997]"
    "r3 = newarray (double)[997]"
    "d237 = 0.0"
    "i163 = 0"
    "goto [?= (branch)]"
    "$d0 = (double) i163"
    "d238 = -7500.0 + $d0"
    "d237 = d237 + d238"
    "r1[i163] = d238"
    "r2[i163] = 15.0"
    "r3[i163] = -15.0"
    "i163 = i163 + 1"
    "if i163 < 997 goto $d0 = (double) i163"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i164 = 0"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"
    "i164 = i164 + 1"
    "if i164 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i165 = 0"
    "d239 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"
    "$b0 = d239 cmpl d237"
    "if $b0 == 0 goto r1[0] = #NaN"
    "$r8 = <java.lang.System: java.io.PrintStream err>"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d239)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d237)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12)"
    "i165 = i165 + 1"
    "r1[0] = #NaN"
    "r1[1] = #Infinity"
    "r1[2] = #-Infinity"
    "r1[3] = 1.7976931348623157E308"
    "r1[4] = 4.9E-324"
    "r1[5] = 2.2250738585072014E-308"
    "$d2 = r1[0]"
    "r2[6] = $d2"
    "$d3 = r1[1]"
    "r2[7] = $d3"
    "$d4 = r1[2]"
    "r2[8] = $d4"
    "$d5 = r1[3]"
    "r2[9] = $d5"
    "$d6 = r1[4]"
    "r2[10] = $d6"
    "$d7 = r1[5]"
    "r2[11] = $d7"
    "$d8 = r2[6]"
    "$d9 = neg $d8"
    "r3[6] = $d9"
    "$d10 = r2[7]"
    "$d11 = neg $d10"
    "r3[7] = $d11"
    "$d12 = r2[8]"
    "$d13 = neg $d12"
    "r3[8] = $d13"
    "$d14 = r2[9]"
    "$d15 = neg $d14"
    "r3[9] = $d15"
    "$d16 = r2[10]"
    "$d17 = neg $d16"
    "r3[10] = $d17"
    "$d18 = r2[11]"
    "$d19 = neg $d18"
    "r3[11] = $d19"
    "$d20 = r0[0]"
    "$i1 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 0, $d20, #NaN)"
    "i166 = i165 + $i1"
    "$d21 = r0[1]"
    "$i2 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 1, $d21, #Infinity)"
    "i167 = i166 + $i2"
    "$d22 = r0[2]"
    "$i3 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 2, $d22, #-Infinity)"
    "i168 = i167 + $i3"
    "$d23 = r0[3]"
    "$i4 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 3, $d23, 1.7976931348623157E308)"
    "i169 = i168 + $i4"
    "$d24 = r0[4]"
    "$i5 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 4, $d24, 15.0)"
    "i170 = i169 + $i5"
    "$d25 = r0[5]"
    "$i6 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 5, $d25, 15.0)"
    "i171 = i170 + $i6"
    "i172 = 6"
    "$d29 = r0[i172]"
    "$d26 = (double) i172"
    "$d27 = -7500.0 + $d26"
    "$d28 = $d27 + 15.0"
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", i172, $d29, $d28)"
    "i171 = i171 + $i7"
    "i172 = i172 + 1"
    "if i172 < 997 goto $d29 = r0[i172]"
    "$d30 = r0[0]"
    "$i8 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 0, $d30, #NaN)"
    "i173 = i171 + $i8"
    "$d31 = r0[1]"
    "$i9 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 1, $d31, #Infinity)"
    "i174 = i173 + $i9"
    "$d32 = r0[2]"
    "$i10 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 2, $d32, #-Infinity)"
    "i175 = i174 + $i10"
    "$d33 = r0[3]"
    "$i11 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 3, $d33, 1.7976931348623157E308)"
    "i176 = i175 + $i11"
    "$d34 = r0[4]"
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 4, $d34, 15.0)"
    "i177 = i176 + $i12"
    "$d35 = r0[5]"
    "$i13 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 5, $d35, 15.0)"
    "i178 = i177 + $i13"
    "i179 = 6"
    "$d39 = r0[i179]"
    "$d36 = (double) i179"
    "$d37 = -7500.0 + $d36"
    "$d38 = $d37 + 15.0"
    "$i14 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", i179, $d39, $d38)"
    "i178 = i178 + $i14"
    "i179 = i179 + 1"
    "if i179 < 997 goto $d39 = r0[i179]"
    "$d40 = r0[0]"
    "$i15 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 0, $d40, #NaN)"
    "i180 = i178 + $i15"
    "$d41 = r0[1]"
    "$i16 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 1, $d41, #Infinity)"
    "i181 = i180 + $i16"
    "$d42 = r0[2]"
    "$i17 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 2, $d42, #-Infinity)"
    "i182 = i181 + $i17"
    "$d43 = r0[3]"
    "$i18 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 3, $d43, 1.7976931348623157E308)"
    "i183 = i182 + $i18"
    "$d44 = r0[4]"
    "$i19 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 4, $d44, 15.0)"
    "i184 = i183 + $i19"
    "$d45 = r0[5]"
    "$i20 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 5, $d45, 15.0)"
    "i185 = i184 + $i20"
    "$d46 = r0[6]"
    "$i21 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 6, $d46, #NaN)"
    "i186 = i185 + $i21"
    "$d47 = r0[7]"
    "$i22 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 7, $d47, #Infinity)"
    "i187 = i186 + $i22"
    "$d48 = r0[8]"
    "$i23 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 8, $d48, #-Infinity)"
    "i188 = i187 + $i23"
    "$d49 = r0[9]"
    "$i24 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 9, $d49, 1.7976931348623157E308)"
    "i189 = i188 + $i24"
    "$d50 = r0[10]"
    "$i25 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 10, $d50, -7490.0)"
    "i190 = i189 + $i25"
    "$d51 = r0[11]"
    "$i26 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 11, $d51, -7489.0)"
    "i191 = i190 + $i26"
    "i192 = 12"
    "$d55 = r0[i192]"
    "$d52 = (double) i192"
    "$d53 = -7500.0 + $d52"
    "$d54 = $d53 + 15.0"
    "$i27 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", i192, $d55, $d54)"
    "i191 = i191 + $i27"
    "i192 = i192 + 1"
    "if i192 < 997 goto $d55 = r0[i192]"
    "$d56 = r0[0]"
    "$i28 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 0, $d56, #NaN)"
    "i193 = i191 + $i28"
    "$d57 = r0[1]"
    "$i29 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 1, $d57, #Infinity)"
    "i194 = i193 + $i29"
    "$d58 = r0[2]"
    "$i30 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 2, $d58, #-Infinity)"
    "i195 = i194 + $i30"
    "$d59 = r0[3]"
    "$i31 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 3, $d59, 1.7976931348623157E308)"
    "i196 = i195 + $i31"
    "$d60 = r0[4]"
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 4, $d60, -15.0)"
    "i197 = i196 + $i32"
    "$d61 = r0[5]"
    "$i33 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 5, $d61, -15.0)"
    "i198 = i197 + $i33"
    "i199 = 6"
    "$d65 = r0[i199]"
    "$d62 = (double) i199"
    "$d63 = -7500.0 + $d62"
    "$d64 = $d63 - 15.0"
    "$i34 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", i199, $d65, $d64)"
    "i198 = i198 + $i34"
    "i199 = i199 + 1"
    "if i199 < 997 goto $d65 = r0[i199]"
    "$d66 = r0[0]"
    "$i35 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 0, $d66, #NaN)"
    "i200 = i198 + $i35"
    "$d67 = r0[1]"
    "$i36 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 1, $d67, #Infinity)"
    "i201 = i200 + $i36"
    "$d68 = r0[2]"
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 2, $d68, #-Infinity)"
    "i202 = i201 + $i37"
    "$d69 = r0[3]"
    "$i38 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 3, $d69, 1.7976931348623157E308)"
    "i203 = i202 + $i38"
    "$d70 = r0[4]"
    "$i39 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 4, $d70, -15.0)"
    "i204 = i203 + $i39"
    "$d71 = r0[5]"
    "$i40 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 5, $d71, -15.0)"
    "i205 = i204 + $i40"
    "i206 = 6"
    "$d75 = r0[i206]"
    "$d72 = (double) i206"
    "$d73 = -7500.0 + $d72"
    "$d74 = $d73 - 15.0"
    "$i41 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", i206, $d75, $d74)"
    "i205 = i205 + $i41"
    "i206 = i206 + 1"
    "if i206 < 997 goto $d75 = r0[i206]"
    "$d76 = r0[0]"
    "$i42 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 0, $d76, #NaN)"
    "i207 = i205 + $i42"
    "$d77 = r0[1]"
    "$i43 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 1, $d77, #Infinity)"
    "i208 = i207 + $i43"
    "$d78 = r0[2]"
    "$i44 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 2, $d78, #-Infinity)"
    "i209 = i208 + $i44"
    "$d79 = r0[3]"
    "$i45 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 3, $d79, 1.7976931348623157E308)"
    "i210 = i209 + $i45"
    "$d80 = r0[4]"
    "$i46 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 4, $d80, -15.0)"
    "i211 = i210 + $i46"
    "$d81 = r0[5]"
    "$i47 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 5, $d81, -15.0)"
    "i212 = i211 + $i47"
    "$d82 = r0[6]"
    "$i48 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 6, $d82, #NaN)"
    "i213 = i212 + $i48"
    "$d83 = r0[7]"
    "$i49 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 7, $d83, #-Infinity)"
    "i214 = i213 + $i49"
    "$d84 = r0[8]"
    "$i50 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 8, $d84, #Infinity)"
    "i215 = i214 + $i50"
    "$d85 = r0[9]"
    "$i51 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 9, $d85, -1.7976931348623157E308)"
    "i216 = i215 + $i51"
    "$d86 = r0[10]"
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 10, $d86, -7490.0)"
    "i217 = i216 + $i52"
    "$d87 = r0[11]"
    "$i53 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 11, $d87, -7489.0)"
    "i218 = i217 + $i53"
    "i219 = 12"
    "$d91 = r0[i219]"
    "$d88 = (double) i219"
    "$d89 = -7500.0 + $d88"
    "$d90 = $d89 - 15.0"
    "$i54 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", i219, $d91, $d90)"
    "i218 = i218 + $i54"
    "i219 = i219 + 1"
    "if i219 < 997 goto $d91 = r0[i219]"
    "$d92 = r0[0]"
    "$i55 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 0, $d92, #NaN)"
    "i220 = i218 + $i55"
    "$d93 = r0[1]"
    "$i56 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 1, $d93, #Infinity)"
    "i221 = i220 + $i56"
    "$d94 = r0[2]"
    "$i57 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 2, $d94, #-Infinity)"
    "i222 = i221 + $i57"
    "$d95 = r0[3]"
    "$i58 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 3, $d95, #Infinity)"
    "i223 = i222 + $i58"
    "$d96 = r0[4]"
    "$i59 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 4, $d96, 7.4E-323)"
    "i224 = i223 + $i59"
    "$d97 = r0[5]"
    "$i60 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 5, $d97, 3.337610787760802E-307)"
    "i225 = i224 + $i60"
    "i226 = 6"
    "$d101 = r0[i226]"
    "$d98 = (double) i226"
    "$d99 = -7500.0 + $d98"
    "$d100 = $d99 * 15.0"
    "$i61 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", i226, $d101, $d100)"
    "i225 = i225 + $i61"
    "i226 = i226 + 1"
    "if i226 < 997 goto $d101 = r0[i226]"
    "$d102 = r0[0]"
    "$i62 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 0, $d102, #NaN)"
    "i227 = i225 + $i62"
    "$d103 = r0[1]"
    "$i63 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 1, $d103, #Infinity)"
    "i228 = i227 + $i63"
    "$d104 = r0[2]"
    "$i64 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 2, $d104, #-Infinity)"
    "i229 = i228 + $i64"
    "$d105 = r0[3]"
    "$i65 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 3, $d105, #Infinity)"
    "i230 = i229 + $i65"
    "$d106 = r0[4]"
    "$i66 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 4, $d106, 7.4E-323)"
    "i231 = i230 + $i66"
    "$d107 = r0[5]"
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 5, $d107, 3.337610787760802E-307)"
    "i232 = i231 + $i67"
    "i233 = 6"
    "$d111 = r0[i233]"
    "$d108 = (double) i233"
    "$d109 = -7500.0 + $d108"
    "$d110 = $d109 * 15.0"
    "$i68 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", i233, $d111, $d110)"
    "i232 = i232 + $i68"
    "i233 = i233 + 1"
    "if i233 < 997 goto $d111 = r0[i233]"
    "$d112 = r0[0]"
    "$i69 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 0, $d112, #NaN)"
    "i234 = i232 + $i69"
    "$d113 = r0[1]"
    "$i70 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 1, $d113, #Infinity)"
    "i235 = i234 + $i70"
    "$d114 = r0[2]"
    "$i71 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 2, $d114, #-Infinity)"
    "i236 = i235 + $i71"
    "$d115 = r0[3]"
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 3, $d115, #Infinity)"
    "i237 = i236 + $i72"
    "$d116 = r0[4]"
    "$i73 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 4, $d116, 7.4E-323)"
    "i238 = i237 + $i73"
    "$d117 = r0[5]"
    "$i74 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 5, $d117, 3.337610787760802E-307)"
    "i239 = i238 + $i74"
    "$d118 = r0[6]"
    "$i75 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 6, $d118, #NaN)"
    "i240 = i239 + $i75"
    "$d119 = r0[7]"
    "$i76 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 7, $d119, #-Infinity)"
    "i241 = i240 + $i76"
    "$d120 = r0[8]"
    "$i77 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 8, $d120, #Infinity)"
    "i242 = i241 + $i77"
    "$d121 = r0[9]"
    "$i78 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 9, $d121, #-Infinity)"
    "i243 = i242 + $i78"
    "$d122 = r0[10]"
    "$i79 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 10, $d122, -3.7006E-320)"
    "i244 = i243 + $i79"
    "$d123 = r0[11]"
    "$i80 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 11, $d123, -1.6663578126360431E-304)"
    "i245 = i244 + $i80"
    "i246 = 12"
    "$d127 = r0[i246]"
    "$d124 = (double) i246"
    "$d125 = -7500.0 + $d124"
    "$d126 = $d125 * 15.0"
    "$i81 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", i246, $d127, $d126)"
    "i245 = i245 + $i81"
    "i246 = i246 + 1"
    "if i246 < 997 goto $d127 = r0[i246]"
    "$d128 = r0[0]"
    "$i82 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 0, $d128, #NaN)"
    "i247 = i245 + $i82"
    "$d129 = r0[1]"
    "$i83 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 1, $d129, #Infinity)"
    "i248 = i247 + $i83"
    "$d130 = r0[2]"
    "$i84 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 2, $d130, #-Infinity)"
    "i249 = i248 + $i84"
    "$d131 = r0[3]"
    "$i85 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 3, $d131, 1.1984620899082106E307)"
    "i250 = i249 + $i85"
    "$d132 = r0[4]"
    "$i86 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 4, $d132, 0.0)"
    "i251 = i250 + $i86"
    "$d133 = r0[5]"
    "$i87 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 5, $d133, 1.483382572338134E-309)"
    "i252 = i251 + $i87"
    "i253 = 6"
    "$d137 = r0[i253]"
    "$d134 = (double) i253"
    "$d135 = -7500.0 + $d134"
    "$d136 = $d135 / 15.0"
    "$i88 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", i253, $d137, $d136)"
    "i252 = i252 + $i88"
    "i253 = i253 + 1"
    "if i253 < 997 goto $d137 = r0[i253]"
    "$d138 = r0[0]"
    "$i89 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 0, $d138, #NaN)"
    "i254 = i252 + $i89"
    "$d139 = r0[1]"
    "$i90 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 1, $d139, #Infinity)"
    "i255 = i254 + $i90"
    "$d140 = r0[2]"
    "$i91 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 2, $d140, #-Infinity)"
    "i256 = i255 + $i91"
    "$d141 = r0[3]"
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 3, $d141, 1.1984620899082106E307)"
    "i257 = i256 + $i92"
    "$d142 = r0[4]"
    "$i93 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 4, $d142, 0.0)"
    "i258 = i257 + $i93"
    "$d143 = r0[5]"
    "$i94 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 5, $d143, 1.483382572338134E-309)"
    "i259 = i258 + $i94"
    "i260 = 6"
    "$d147 = r0[i260]"
    "$d144 = (double) i260"
    "$d145 = -7500.0 + $d144"
    "$d146 = $d145 / 15.0"
    "$i95 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", i260, $d147, $d146)"
    "i259 = i259 + $i95"
    "i260 = i260 + 1"
    "if i260 < 997 goto $d147 = r0[i260]"
    "$d148 = r0[0]"
    "$i96 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 0, $d148, #NaN)"
    "i261 = i259 + $i96"
    "$d149 = r0[1]"
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 1, $d149, #Infinity)"
    "i262 = i261 + $i97"
    "$d150 = r0[2]"
    "$i98 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 2, $d150, #-Infinity)"
    "i263 = i262 + $i98"
    "$d151 = r0[3]"
    "$i99 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 3, $d151, 1.1984620899082106E307)"
    "i264 = i263 + $i99"
    "$d152 = r0[4]"
    "$i100 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 4, $d152, 0.0)"
    "i265 = i264 + $i100"
    "$d153 = r0[5]"
    "$i101 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 5, $d153, 1.483382572338134E-309)"
    "i266 = i265 + $i101"
    "$d154 = r0[6]"
    "$i102 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 6, $d154, #NaN)"
    "i267 = i266 + $i102"
    "$d155 = r0[7]"
    "$i103 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 7, $d155, -0.0)"
    "i268 = i267 + $i103"
    "$d156 = r0[8]"
    "$i104 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 8, $d156, 0.0)"
    "i269 = i268 + $i104"
    "$d157 = r0[9]"
    "$i105 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 9, $d157, -4.167007068519362E-305)"
    "i270 = i269 + $i105"
    "$d158 = r0[10]"
    "$i106 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 10, $d158, #-Infinity)"
    "i271 = i270 + $i106"
    "$d159 = r0[11]"
    "$i107 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 11, $d159, #-Infinity)"
    "i272 = i271 + $i107"
    "i273 = 12"
    "$d163 = r0[i273]"
    "$d160 = (double) i273"
    "$d161 = -7500.0 + $d160"
    "$d162 = $d161 / 15.0"
    "$i108 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", i273, $d163, $d162)"
    "i272 = i272 + $i108"
    "i273 = i273 + 1"
    "if i273 < 997 goto $d163 = r0[i273]"
    "$d164 = r0[0]"
    "$i109 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 0, $d164, #NaN)"
    "i274 = i272 + $i109"
    "$d165 = r0[1]"
    "$i110 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 1, $d165, #-Infinity)"
    "i275 = i274 + $i110"
    "$d166 = r0[2]"
    "$i111 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 2, $d166, #Infinity)"
    "i276 = i275 + $i111"
    "$d167 = r0[3]"
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 3, $d167, #-Infinity)"
    "i277 = i276 + $i112"
    "$d168 = r0[4]"
    "$i113 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 4, $d168, -7.4E-323)"
    "i278 = i277 + $i113"
    "$d169 = r0[5]"
    "$i114 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 5, $d169, -3.337610787760802E-307)"
    "i279 = i278 + $i114"
    "i280 = 6"
    "$d173 = r0[i280]"
    "$d170 = (double) i280"
    "$d171 = -7500.0 + $d170"
    "$d172 = $d171 * -15.0"
    "$i115 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", i280, $d173, $d172)"
    "i279 = i279 + $i115"
    "i280 = i280 + 1"
    "if i280 < 997 goto $d173 = r0[i280]"
    "$d174 = r0[0]"
    "$i116 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 0, $d174, #NaN)"
    "i281 = i279 + $i116"
    "$d175 = r0[1]"
    "$i117 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 1, $d175, #-Infinity)"
    "i282 = i281 + $i117"
    "$d176 = r0[2]"
    "$i118 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 2, $d176, #Infinity)"
    "i283 = i282 + $i118"
    "$d177 = r0[3]"
    "$i119 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 3, $d177, #-Infinity)"
    "i284 = i283 + $i119"
    "$d178 = r0[4]"
    "$i120 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 4, $d178, -7.4E-323)"
    "i285 = i284 + $i120"
    "$d179 = r0[5]"
    "$i121 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 5, $d179, -3.337610787760802E-307)"
    "i286 = i285 + $i121"
    "i287 = 6"
    "$d183 = r0[i287]"
    "$d180 = (double) i287"
    "$d181 = -7500.0 + $d180"
    "$d182 = $d181 * -15.0"
    "$i122 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", i287, $d183, $d182)"
    "i286 = i286 + $i122"
    "i287 = i287 + 1"
    "if i287 < 997 goto $d183 = r0[i287]"
    "$d184 = r0[0]"
    "$i123 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 0, $d184, #NaN)"
    "i288 = i286 + $i123"
    "$d185 = r0[1]"
    "$i124 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 1, $d185, #-Infinity)"
    "i289 = i288 + $i124"
    "$d186 = r0[2]"
    "$i125 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 2, $d186, #Infinity)"
    "i290 = i289 + $i125"
    "$d187 = r0[3]"
    "$i126 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 3, $d187, #-Infinity)"
    "i291 = i290 + $i126"
    "$d188 = r0[4]"
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 4, $d188, -7.4E-323)"
    "i292 = i291 + $i127"
    "$d189 = r0[5]"
    "$i128 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 5, $d189, -3.337610787760802E-307)"
    "i293 = i292 + $i128"
    "$d190 = r0[6]"
    "$i129 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 6, $d190, #NaN)"
    "i294 = i293 + $i129"
    "$d191 = r0[7]"
    "$i130 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 7, $d191, #Infinity)"
    "i295 = i294 + $i130"
    "$d192 = r0[8]"
    "$i131 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 8, $d192, #-Infinity)"
    "i296 = i295 + $i131"
    "$d193 = r0[9]"
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 9, $d193, #Infinity)"
    "i297 = i296 + $i132"
    "$d194 = r0[10]"
    "$i133 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 10, $d194, 3.7006E-320)"
    "i298 = i297 + $i133"
    "$d195 = r0[11]"
    "$i134 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 11, $d195, 1.6663578126360431E-304)"
    "i299 = i298 + $i134"
    "i300 = 12"
    "$d199 = r0[i300]"
    "$d196 = (double) i300"
    "$d197 = -7500.0 + $d196"
    "$d198 = $d197 * -15.0"
    "$i135 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", i300, $d199, $d198)"
    "i299 = i299 + $i135"
    "i300 = i300 + 1"
    "if i300 < 997 goto $d199 = r0[i300]"
    "$d200 = r0[0]"
    "$i136 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 0, $d200, #NaN)"
    "i301 = i299 + $i136"
    "$d201 = r0[1]"
    "$i137 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 1, $d201, #-Infinity)"
    "i302 = i301 + $i137"
    "$d202 = r0[2]"
    "$i138 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 2, $d202, #Infinity)"
    "i303 = i302 + $i138"
    "$d203 = r0[3]"
    "$i139 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 3, $d203, -1.1984620899082106E307)"
    "i304 = i303 + $i139"
    "$d204 = r0[4]"
    "$i140 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 4, $d204, -0.0)"
    "i305 = i304 + $i140"
    "$d205 = r0[5]"
    "$i141 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 5, $d205, -1.483382572338134E-309)"
    "i306 = i305 + $i141"
    "i307 = 6"
    "$d209 = r0[i307]"
    "$d206 = (double) i307"
    "$d207 = -7500.0 + $d206"
    "$d208 = $d207 / -15.0"
    "$i142 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", i307, $d209, $d208)"
    "i306 = i306 + $i142"
    "i307 = i307 + 1"
    "if i307 < 997 goto $d209 = r0[i307]"
    "$d210 = r0[0]"
    "$i143 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 0, $d210, #NaN)"
    "i308 = i306 + $i143"
    "$d211 = r0[1]"
    "$i144 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 1, $d211, #-Infinity)"
    "i309 = i308 + $i144"
    "$d212 = r0[2]"
    "$i145 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 2, $d212, #Infinity)"
    "i310 = i309 + $i145"
    "$d213 = r0[3]"
    "$i146 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 3, $d213, -1.1984620899082106E307)"
    "i311 = i310 + $i146"
    "$d214 = r0[4]"
    "$i147 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 4, $d214, -0.0)"
    "i312 = i311 + $i147"
    "$d215 = r0[5]"
    "$i148 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 5, $d215, -1.483382572338134E-309)"
    "i313 = i312 + $i148"
    "i314 = 6"
    "$d219 = r0[i314]"
    "$d216 = (double) i314"
    "$d217 = -7500.0 + $d216"
    "$d218 = $d217 / -15.0"
    "$i149 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", i314, $d219, $d218)"
    "i313 = i313 + $i149"
    "i314 = i314 + 1"
    "if i314 < 997 goto $d219 = r0[i314]"
    "$d220 = r0[0]"
    "$i150 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 0, $d220, #NaN)"
    "i315 = i313 + $i150"
    "$d221 = r0[1]"
    "$i151 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 1, $d221, #-Infinity)"
    "i316 = i315 + $i151"
    "$d222 = r0[2]"
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 2, $d222, #Infinity)"
    "i317 = i316 + $i152"
    "$d223 = r0[3]"
    "$i153 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 3, $d223, -1.1984620899082106E307)"
    "i318 = i317 + $i153"
    "$d224 = r0[4]"
    "$i154 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 4, $d224, -0.0)"
    "i319 = i318 + $i154"
    "$d225 = r0[5]"
    "$i155 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 5, $d225, -1.483382572338134E-309)"
    "i320 = i319 + $i155"
    "$d226 = r0[6]"
    "$i156 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 6, $d226, #NaN)"
    "i321 = i320 + $i156"
    "$d227 = r0[7]"
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 7, $d227, 0.0)"
    "i322 = i321 + $i157"
    "$d228 = r0[8]"
    "$i158 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 8, $d228, -0.0)"
    "i323 = i322 + $i158"
    "$d229 = r0[9]"
    "$i159 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 9, $d229, 4.167007068519362E-305)"
    "i324 = i323 + $i159"
    "$d230 = r0[10]"
    "$i160 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 10, $d230, #Infinity)"
    "i325 = i324 + $i160"
    "$d231 = r0[11]"
    "$i161 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 11, $d231, #Infinity)"
    "i326 = i325 + $i161"
    "i327 = 12"
    "$d235 = r0[i327]"
    "$d232 = (double) i327"
    "$d233 = -7500.0 + $d232"
    "$d234 = $d233 / -15.0"
    "$i162 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", i327, $d235, $d234)"
    "i326 = i326 + $i162"
    "i327 = i327 + 1"
    "if i327 < 997 goto $d235 = r0[i327]"
    "if i326 <= 0 goto $r6 = <java.lang.System: java.io.PrintStream out>"
    "return i326"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i328 = 0"
    "i328 = i328 + 1"
    "if i328 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"
    "i329 = 0"
    "i329 = i329 + 1"
    "if i329 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"
    "i330 = 0"
    "i330 = i330 + 1"
    "if i330 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"
    "i331 = 0"
    "i331 = i331 + 1"
    "if i331 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"
    "i332 = 0"
    "i332 = i332 + 1"
    "if i332 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"
    "i333 = 0"
    "i333 = i333 + 1"
    "if i333 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"
    "i334 = 0"
    "i334 = i334 + 1"
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"
    "i335 = 0"
    "i335 = i335 + 1"
    "if i335 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"
    "i336 = 0"
    "i336 = i336 + 1"
    "if i336 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"
    "i337 = 0"
    "i337 = i337 + 1"
    "if i337 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"
    "i338 = 0"
    "i338 = i338 + 1"
    "if i338 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"
    "i339 = 0"
    "i339 = i339 + 1"
    "if i339 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"
    "i340 = 0"
    "i340 = i340 + 1"
    "if i340 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"
    "i341 = 0"
    "i341 = i341 + 1"
    "if i341 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"
    "i342 = 0"
    "i342 = i342 + 1"
    "if i342 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"
    "i343 = 0"
    "i343 = i343 + 1"
    "if i343 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"
    "i344 = 0"
    "i344 = i344 + 1"
    "if i344 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"
    "i345 = 0"
    "i345 = i345 + 1"
    "if i345 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"
    "i346 = 0"
    "i346 = i346 + 1"
    "if i346 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"
    "r0 = newarray (double)[997]"->"r1 = newarray (double)[997]";
    "r1 = newarray (double)[997]"->"r2 = newarray (double)[997]";
    "r2 = newarray (double)[997]"->"r3 = newarray (double)[997]";
    "r3 = newarray (double)[997]"->"d237 = 0.0";
    "d237 = 0.0"->"i163 = 0";
    "i163 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i163 < 997 goto $d0 = (double) i163";
    "$d0 = (double) i163"->"d238 = -7500.0 + $d0";
    "d238 = -7500.0 + $d0"->"d237 = d237 + d238";
    "d237 = d237 + d238"->"r1[i163] = d238";
    "r1[i163] = d238"->"r2[i163] = 15.0";
    "r2[i163] = 15.0"->"r3[i163] = -15.0";
    "r3[i163] = -15.0"->"i163 = i163 + 1";
    "i163 = i163 + 1"->"if i163 < 997 goto $d0 = (double) i163";
    "if i163 < 997 goto $d0 = (double) i163"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if i163 < 997 goto $d0 = (double) i163"->"$d0 = (double) i163";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i164 = 0";
    "i164 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i164 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"->"i164 = i164 + 1";
    "i164 = i164 + 1"->"if i164 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "if i164 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if i164 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i165 = 0";
    "i165 = 0"->"d239 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "d239 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"$b0 = d239 cmpl d237";
    "$b0 = d239 cmpl d237"->"if $b0 == 0 goto r1[0] = #NaN";
    "if $b0 == 0 goto r1[0] = #NaN"->"$r8 = <java.lang.System: java.io.PrintStream err>";
    "if $b0 == 0 goto r1[0] = #NaN"->"r1[0] = #NaN";
    "$r8 = <java.lang.System: java.io.PrintStream err>"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"test_sum:  \")"->"$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d239)";
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d239)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d237)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d237)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12)"->"i165 = i165 + 1";
    "i165 = i165 + 1"->"r1[0] = #NaN";
    "r1[0] = #NaN"->"r1[1] = #Infinity";
    "r1[1] = #Infinity"->"r1[2] = #-Infinity";
    "r1[2] = #-Infinity"->"r1[3] = 1.7976931348623157E308";
    "r1[3] = 1.7976931348623157E308"->"r1[4] = 4.9E-324";
    "r1[4] = 4.9E-324"->"r1[5] = 2.2250738585072014E-308";
    "r1[5] = 2.2250738585072014E-308"->"$d2 = r1[0]";
    "$d2 = r1[0]"->"r2[6] = $d2";
    "r2[6] = $d2"->"$d3 = r1[1]";
    "$d3 = r1[1]"->"r2[7] = $d3";
    "r2[7] = $d3"->"$d4 = r1[2]";
    "$d4 = r1[2]"->"r2[8] = $d4";
    "r2[8] = $d4"->"$d5 = r1[3]";
    "$d5 = r1[3]"->"r2[9] = $d5";
    "r2[9] = $d5"->"$d6 = r1[4]";
    "$d6 = r1[4]"->"r2[10] = $d6";
    "r2[10] = $d6"->"$d7 = r1[5]";
    "$d7 = r1[5]"->"r2[11] = $d7";
    "r2[11] = $d7"->"$d8 = r2[6]";
    "$d8 = r2[6]"->"$d9 = neg $d8";
    "$d9 = neg $d8"->"r3[6] = $d9";
    "r3[6] = $d9"->"$d10 = r2[7]";
    "$d10 = r2[7]"->"$d11 = neg $d10";
    "$d11 = neg $d10"->"r3[7] = $d11";
    "r3[7] = $d11"->"$d12 = r2[8]";
    "$d12 = r2[8]"->"$d13 = neg $d12";
    "$d13 = neg $d12"->"r3[8] = $d13";
    "r3[8] = $d13"->"$d14 = r2[9]";
    "$d14 = r2[9]"->"$d15 = neg $d14";
    "$d15 = neg $d14"->"r3[9] = $d15";
    "r3[9] = $d15"->"$d16 = r2[10]";
    "$d16 = r2[10]"->"$d17 = neg $d16";
    "$d17 = neg $d16"->"r3[10] = $d17";
    "r3[10] = $d17"->"$d18 = r2[11]";
    "$d18 = r2[11]"->"$d19 = neg $d18";
    "$d19 = neg $d18"->"r3[11] = $d19";
    "r3[11] = $d19"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"->"$d20 = r0[0]";
    "$d20 = r0[0]"->"$i1 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 0, $d20, #NaN)";
    "$i1 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 0, $d20, #NaN)"->"i166 = i165 + $i1";
    "i166 = i165 + $i1"->"$d21 = r0[1]";
    "$d21 = r0[1]"->"$i2 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 1, $d21, #Infinity)";
    "$i2 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 1, $d21, #Infinity)"->"i167 = i166 + $i2";
    "i167 = i166 + $i2"->"$d22 = r0[2]";
    "$d22 = r0[2]"->"$i3 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 2, $d22, #-Infinity)";
    "$i3 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 2, $d22, #-Infinity)"->"i168 = i167 + $i3";
    "i168 = i167 + $i3"->"$d23 = r0[3]";
    "$d23 = r0[3]"->"$i4 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 3, $d23, 1.7976931348623157E308)";
    "$i4 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 3, $d23, 1.7976931348623157E308)"->"i169 = i168 + $i4";
    "i169 = i168 + $i4"->"$d24 = r0[4]";
    "$d24 = r0[4]"->"$i5 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 4, $d24, 15.0)";
    "$i5 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 4, $d24, 15.0)"->"i170 = i169 + $i5";
    "i170 = i169 + $i5"->"$d25 = r0[5]";
    "$d25 = r0[5]"->"$i6 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 5, $d25, 15.0)";
    "$i6 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", 5, $d25, 15.0)"->"i171 = i170 + $i6";
    "i171 = i170 + $i6"->"i172 = 6";
    "i172 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i172 < 997 goto $d29 = r0[i172]";
    "$d29 = r0[i172]"->"$d26 = (double) i172";
    "$d26 = (double) i172"->"$d27 = -7500.0 + $d26";
    "$d27 = -7500.0 + $d26"->"$d28 = $d27 + 15.0";
    "$d28 = $d27 + 15.0"->"$i7 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", i172, $d29, $d28)";
    "$i7 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addc: \", i172, $d29, $d28)"->"i171 = i171 + $i7";
    "i171 = i171 + $i7"->"i172 = i172 + 1";
    "i172 = i172 + 1"->"if i172 < 997 goto $d29 = r0[i172]";
    "if i172 < 997 goto $d29 = r0[i172]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)";
    "if i172 < 997 goto $d29 = r0[i172]"->"$d29 = r0[i172]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"->"$d30 = r0[0]";
    "$d30 = r0[0]"->"$i8 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 0, $d30, #NaN)";
    "$i8 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 0, $d30, #NaN)"->"i173 = i171 + $i8";
    "i173 = i171 + $i8"->"$d31 = r0[1]";
    "$d31 = r0[1]"->"$i9 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 1, $d31, #Infinity)";
    "$i9 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 1, $d31, #Infinity)"->"i174 = i173 + $i9";
    "i174 = i173 + $i9"->"$d32 = r0[2]";
    "$d32 = r0[2]"->"$i10 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 2, $d32, #-Infinity)";
    "$i10 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 2, $d32, #-Infinity)"->"i175 = i174 + $i10";
    "i175 = i174 + $i10"->"$d33 = r0[3]";
    "$d33 = r0[3]"->"$i11 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 3, $d33, 1.7976931348623157E308)";
    "$i11 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 3, $d33, 1.7976931348623157E308)"->"i176 = i175 + $i11";
    "i176 = i175 + $i11"->"$d34 = r0[4]";
    "$d34 = r0[4]"->"$i12 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 4, $d34, 15.0)";
    "$i12 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 4, $d34, 15.0)"->"i177 = i176 + $i12";
    "i177 = i176 + $i12"->"$d35 = r0[5]";
    "$d35 = r0[5]"->"$i13 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 5, $d35, 15.0)";
    "$i13 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", 5, $d35, 15.0)"->"i178 = i177 + $i13";
    "i178 = i177 + $i13"->"i179 = 6";
    "i179 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i179 < 997 goto $d39 = r0[i179]";
    "$d39 = r0[i179]"->"$d36 = (double) i179";
    "$d36 = (double) i179"->"$d37 = -7500.0 + $d36";
    "$d37 = -7500.0 + $d36"->"$d38 = $d37 + 15.0";
    "$d38 = $d37 + 15.0"->"$i14 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", i179, $d39, $d38)";
    "$i14 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_addv: \", i179, $d39, $d38)"->"i178 = i178 + $i14";
    "i178 = i178 + $i14"->"i179 = i179 + 1";
    "i179 = i179 + 1"->"if i179 < 997 goto $d39 = r0[i179]";
    "if i179 < 997 goto $d39 = r0[i179]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)";
    "if i179 < 997 goto $d39 = r0[i179]"->"$d39 = r0[i179]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"->"$d40 = r0[0]";
    "$d40 = r0[0]"->"$i15 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 0, $d40, #NaN)";
    "$i15 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 0, $d40, #NaN)"->"i180 = i178 + $i15";
    "i180 = i178 + $i15"->"$d41 = r0[1]";
    "$d41 = r0[1]"->"$i16 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 1, $d41, #Infinity)";
    "$i16 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 1, $d41, #Infinity)"->"i181 = i180 + $i16";
    "i181 = i180 + $i16"->"$d42 = r0[2]";
    "$d42 = r0[2]"->"$i17 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 2, $d42, #-Infinity)";
    "$i17 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 2, $d42, #-Infinity)"->"i182 = i181 + $i17";
    "i182 = i181 + $i17"->"$d43 = r0[3]";
    "$d43 = r0[3]"->"$i18 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 3, $d43, 1.7976931348623157E308)";
    "$i18 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 3, $d43, 1.7976931348623157E308)"->"i183 = i182 + $i18";
    "i183 = i182 + $i18"->"$d44 = r0[4]";
    "$d44 = r0[4]"->"$i19 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 4, $d44, 15.0)";
    "$i19 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 4, $d44, 15.0)"->"i184 = i183 + $i19";
    "i184 = i183 + $i19"->"$d45 = r0[5]";
    "$d45 = r0[5]"->"$i20 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 5, $d45, 15.0)";
    "$i20 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 5, $d45, 15.0)"->"i185 = i184 + $i20";
    "i185 = i184 + $i20"->"$d46 = r0[6]";
    "$d46 = r0[6]"->"$i21 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 6, $d46, #NaN)";
    "$i21 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 6, $d46, #NaN)"->"i186 = i185 + $i21";
    "i186 = i185 + $i21"->"$d47 = r0[7]";
    "$d47 = r0[7]"->"$i22 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 7, $d47, #Infinity)";
    "$i22 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 7, $d47, #Infinity)"->"i187 = i186 + $i22";
    "i187 = i186 + $i22"->"$d48 = r0[8]";
    "$d48 = r0[8]"->"$i23 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 8, $d48, #-Infinity)";
    "$i23 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 8, $d48, #-Infinity)"->"i188 = i187 + $i23";
    "i188 = i187 + $i23"->"$d49 = r0[9]";
    "$d49 = r0[9]"->"$i24 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 9, $d49, 1.7976931348623157E308)";
    "$i24 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 9, $d49, 1.7976931348623157E308)"->"i189 = i188 + $i24";
    "i189 = i188 + $i24"->"$d50 = r0[10]";
    "$d50 = r0[10]"->"$i25 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 10, $d50, -7490.0)";
    "$i25 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 10, $d50, -7490.0)"->"i190 = i189 + $i25";
    "i190 = i189 + $i25"->"$d51 = r0[11]";
    "$d51 = r0[11]"->"$i26 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 11, $d51, -7489.0)";
    "$i26 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", 11, $d51, -7489.0)"->"i191 = i190 + $i26";
    "i191 = i190 + $i26"->"i192 = 12";
    "i192 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i192 < 997 goto $d55 = r0[i192]";
    "$d55 = r0[i192]"->"$d52 = (double) i192";
    "$d52 = (double) i192"->"$d53 = -7500.0 + $d52";
    "$d53 = -7500.0 + $d52"->"$d54 = $d53 + 15.0";
    "$d54 = $d53 + 15.0"->"$i27 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", i192, $d55, $d54)";
    "$i27 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_adda: \", i192, $d55, $d54)"->"i191 = i191 + $i27";
    "i191 = i191 + $i27"->"i192 = i192 + 1";
    "i192 = i192 + 1"->"if i192 < 997 goto $d55 = r0[i192]";
    "if i192 < 997 goto $d55 = r0[i192]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)";
    "if i192 < 997 goto $d55 = r0[i192]"->"$d55 = r0[i192]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"->"$d56 = r0[0]";
    "$d56 = r0[0]"->"$i28 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 0, $d56, #NaN)";
    "$i28 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 0, $d56, #NaN)"->"i193 = i191 + $i28";
    "i193 = i191 + $i28"->"$d57 = r0[1]";
    "$d57 = r0[1]"->"$i29 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 1, $d57, #Infinity)";
    "$i29 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 1, $d57, #Infinity)"->"i194 = i193 + $i29";
    "i194 = i193 + $i29"->"$d58 = r0[2]";
    "$d58 = r0[2]"->"$i30 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 2, $d58, #-Infinity)";
    "$i30 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 2, $d58, #-Infinity)"->"i195 = i194 + $i30";
    "i195 = i194 + $i30"->"$d59 = r0[3]";
    "$d59 = r0[3]"->"$i31 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 3, $d59, 1.7976931348623157E308)";
    "$i31 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 3, $d59, 1.7976931348623157E308)"->"i196 = i195 + $i31";
    "i196 = i195 + $i31"->"$d60 = r0[4]";
    "$d60 = r0[4]"->"$i32 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 4, $d60, -15.0)";
    "$i32 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 4, $d60, -15.0)"->"i197 = i196 + $i32";
    "i197 = i196 + $i32"->"$d61 = r0[5]";
    "$d61 = r0[5]"->"$i33 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 5, $d61, -15.0)";
    "$i33 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", 5, $d61, -15.0)"->"i198 = i197 + $i33";
    "i198 = i197 + $i33"->"i199 = 6";
    "i199 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i199 < 997 goto $d65 = r0[i199]";
    "$d65 = r0[i199]"->"$d62 = (double) i199";
    "$d62 = (double) i199"->"$d63 = -7500.0 + $d62";
    "$d63 = -7500.0 + $d62"->"$d64 = $d63 - 15.0";
    "$d64 = $d63 - 15.0"->"$i34 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", i199, $d65, $d64)";
    "$i34 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subc: \", i199, $d65, $d64)"->"i198 = i198 + $i34";
    "i198 = i198 + $i34"->"i199 = i199 + 1";
    "i199 = i199 + 1"->"if i199 < 997 goto $d65 = r0[i199]";
    "if i199 < 997 goto $d65 = r0[i199]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)";
    "if i199 < 997 goto $d65 = r0[i199]"->"$d65 = r0[i199]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"->"$d66 = r0[0]";
    "$d66 = r0[0]"->"$i35 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 0, $d66, #NaN)";
    "$i35 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 0, $d66, #NaN)"->"i200 = i198 + $i35";
    "i200 = i198 + $i35"->"$d67 = r0[1]";
    "$d67 = r0[1]"->"$i36 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 1, $d67, #Infinity)";
    "$i36 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 1, $d67, #Infinity)"->"i201 = i200 + $i36";
    "i201 = i200 + $i36"->"$d68 = r0[2]";
    "$d68 = r0[2]"->"$i37 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 2, $d68, #-Infinity)";
    "$i37 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 2, $d68, #-Infinity)"->"i202 = i201 + $i37";
    "i202 = i201 + $i37"->"$d69 = r0[3]";
    "$d69 = r0[3]"->"$i38 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 3, $d69, 1.7976931348623157E308)";
    "$i38 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 3, $d69, 1.7976931348623157E308)"->"i203 = i202 + $i38";
    "i203 = i202 + $i38"->"$d70 = r0[4]";
    "$d70 = r0[4]"->"$i39 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 4, $d70, -15.0)";
    "$i39 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 4, $d70, -15.0)"->"i204 = i203 + $i39";
    "i204 = i203 + $i39"->"$d71 = r0[5]";
    "$d71 = r0[5]"->"$i40 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 5, $d71, -15.0)";
    "$i40 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", 5, $d71, -15.0)"->"i205 = i204 + $i40";
    "i205 = i204 + $i40"->"i206 = 6";
    "i206 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i206 < 997 goto $d75 = r0[i206]";
    "$d75 = r0[i206]"->"$d72 = (double) i206";
    "$d72 = (double) i206"->"$d73 = -7500.0 + $d72";
    "$d73 = -7500.0 + $d72"->"$d74 = $d73 - 15.0";
    "$d74 = $d73 - 15.0"->"$i41 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", i206, $d75, $d74)";
    "$i41 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_subv: \", i206, $d75, $d74)"->"i205 = i205 + $i41";
    "i205 = i205 + $i41"->"i206 = i206 + 1";
    "i206 = i206 + 1"->"if i206 < 997 goto $d75 = r0[i206]";
    "if i206 < 997 goto $d75 = r0[i206]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)";
    "if i206 < 997 goto $d75 = r0[i206]"->"$d75 = r0[i206]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"->"$d76 = r0[0]";
    "$d76 = r0[0]"->"$i42 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 0, $d76, #NaN)";
    "$i42 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 0, $d76, #NaN)"->"i207 = i205 + $i42";
    "i207 = i205 + $i42"->"$d77 = r0[1]";
    "$d77 = r0[1]"->"$i43 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 1, $d77, #Infinity)";
    "$i43 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 1, $d77, #Infinity)"->"i208 = i207 + $i43";
    "i208 = i207 + $i43"->"$d78 = r0[2]";
    "$d78 = r0[2]"->"$i44 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 2, $d78, #-Infinity)";
    "$i44 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 2, $d78, #-Infinity)"->"i209 = i208 + $i44";
    "i209 = i208 + $i44"->"$d79 = r0[3]";
    "$d79 = r0[3]"->"$i45 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 3, $d79, 1.7976931348623157E308)";
    "$i45 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 3, $d79, 1.7976931348623157E308)"->"i210 = i209 + $i45";
    "i210 = i209 + $i45"->"$d80 = r0[4]";
    "$d80 = r0[4]"->"$i46 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 4, $d80, -15.0)";
    "$i46 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 4, $d80, -15.0)"->"i211 = i210 + $i46";
    "i211 = i210 + $i46"->"$d81 = r0[5]";
    "$d81 = r0[5]"->"$i47 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 5, $d81, -15.0)";
    "$i47 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 5, $d81, -15.0)"->"i212 = i211 + $i47";
    "i212 = i211 + $i47"->"$d82 = r0[6]";
    "$d82 = r0[6]"->"$i48 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 6, $d82, #NaN)";
    "$i48 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 6, $d82, #NaN)"->"i213 = i212 + $i48";
    "i213 = i212 + $i48"->"$d83 = r0[7]";
    "$d83 = r0[7]"->"$i49 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 7, $d83, #-Infinity)";
    "$i49 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 7, $d83, #-Infinity)"->"i214 = i213 + $i49";
    "i214 = i213 + $i49"->"$d84 = r0[8]";
    "$d84 = r0[8]"->"$i50 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 8, $d84, #Infinity)";
    "$i50 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 8, $d84, #Infinity)"->"i215 = i214 + $i50";
    "i215 = i214 + $i50"->"$d85 = r0[9]";
    "$d85 = r0[9]"->"$i51 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 9, $d85, -1.7976931348623157E308)";
    "$i51 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 9, $d85, -1.7976931348623157E308)"->"i216 = i215 + $i51";
    "i216 = i215 + $i51"->"$d86 = r0[10]";
    "$d86 = r0[10]"->"$i52 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 10, $d86, -7490.0)";
    "$i52 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 10, $d86, -7490.0)"->"i217 = i216 + $i52";
    "i217 = i216 + $i52"->"$d87 = r0[11]";
    "$d87 = r0[11]"->"$i53 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 11, $d87, -7489.0)";
    "$i53 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", 11, $d87, -7489.0)"->"i218 = i217 + $i53";
    "i218 = i217 + $i53"->"i219 = 12";
    "i219 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i219 < 997 goto $d91 = r0[i219]";
    "$d91 = r0[i219]"->"$d88 = (double) i219";
    "$d88 = (double) i219"->"$d89 = -7500.0 + $d88";
    "$d89 = -7500.0 + $d88"->"$d90 = $d89 - 15.0";
    "$d90 = $d89 - 15.0"->"$i54 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", i219, $d91, $d90)";
    "$i54 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_suba: \", i219, $d91, $d90)"->"i218 = i218 + $i54";
    "i218 = i218 + $i54"->"i219 = i219 + 1";
    "i219 = i219 + 1"->"if i219 < 997 goto $d91 = r0[i219]";
    "if i219 < 997 goto $d91 = r0[i219]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)";
    "if i219 < 997 goto $d91 = r0[i219]"->"$d91 = r0[i219]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"->"$d92 = r0[0]";
    "$d92 = r0[0]"->"$i55 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 0, $d92, #NaN)";
    "$i55 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 0, $d92, #NaN)"->"i220 = i218 + $i55";
    "i220 = i218 + $i55"->"$d93 = r0[1]";
    "$d93 = r0[1]"->"$i56 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 1, $d93, #Infinity)";
    "$i56 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 1, $d93, #Infinity)"->"i221 = i220 + $i56";
    "i221 = i220 + $i56"->"$d94 = r0[2]";
    "$d94 = r0[2]"->"$i57 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 2, $d94, #-Infinity)";
    "$i57 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 2, $d94, #-Infinity)"->"i222 = i221 + $i57";
    "i222 = i221 + $i57"->"$d95 = r0[3]";
    "$d95 = r0[3]"->"$i58 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 3, $d95, #Infinity)";
    "$i58 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 3, $d95, #Infinity)"->"i223 = i222 + $i58";
    "i223 = i222 + $i58"->"$d96 = r0[4]";
    "$d96 = r0[4]"->"$i59 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 4, $d96, 7.4E-323)";
    "$i59 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 4, $d96, 7.4E-323)"->"i224 = i223 + $i59";
    "i224 = i223 + $i59"->"$d97 = r0[5]";
    "$d97 = r0[5]"->"$i60 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 5, $d97, 3.337610787760802E-307)";
    "$i60 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", 5, $d97, 3.337610787760802E-307)"->"i225 = i224 + $i60";
    "i225 = i224 + $i60"->"i226 = 6";
    "i226 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i226 < 997 goto $d101 = r0[i226]";
    "$d101 = r0[i226]"->"$d98 = (double) i226";
    "$d98 = (double) i226"->"$d99 = -7500.0 + $d98";
    "$d99 = -7500.0 + $d98"->"$d100 = $d99 * 15.0";
    "$d100 = $d99 * 15.0"->"$i61 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", i226, $d101, $d100)";
    "$i61 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc: \", i226, $d101, $d100)"->"i225 = i225 + $i61";
    "i225 = i225 + $i61"->"i226 = i226 + 1";
    "i226 = i226 + 1"->"if i226 < 997 goto $d101 = r0[i226]";
    "if i226 < 997 goto $d101 = r0[i226]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)";
    "if i226 < 997 goto $d101 = r0[i226]"->"$d101 = r0[i226]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"->"$d102 = r0[0]";
    "$d102 = r0[0]"->"$i62 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 0, $d102, #NaN)";
    "$i62 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 0, $d102, #NaN)"->"i227 = i225 + $i62";
    "i227 = i225 + $i62"->"$d103 = r0[1]";
    "$d103 = r0[1]"->"$i63 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 1, $d103, #Infinity)";
    "$i63 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 1, $d103, #Infinity)"->"i228 = i227 + $i63";
    "i228 = i227 + $i63"->"$d104 = r0[2]";
    "$d104 = r0[2]"->"$i64 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 2, $d104, #-Infinity)";
    "$i64 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 2, $d104, #-Infinity)"->"i229 = i228 + $i64";
    "i229 = i228 + $i64"->"$d105 = r0[3]";
    "$d105 = r0[3]"->"$i65 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 3, $d105, #Infinity)";
    "$i65 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 3, $d105, #Infinity)"->"i230 = i229 + $i65";
    "i230 = i229 + $i65"->"$d106 = r0[4]";
    "$d106 = r0[4]"->"$i66 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 4, $d106, 7.4E-323)";
    "$i66 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 4, $d106, 7.4E-323)"->"i231 = i230 + $i66";
    "i231 = i230 + $i66"->"$d107 = r0[5]";
    "$d107 = r0[5]"->"$i67 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 5, $d107, 3.337610787760802E-307)";
    "$i67 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", 5, $d107, 3.337610787760802E-307)"->"i232 = i231 + $i67";
    "i232 = i231 + $i67"->"i233 = 6";
    "i233 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i233 < 997 goto $d111 = r0[i233]";
    "$d111 = r0[i233]"->"$d108 = (double) i233";
    "$d108 = (double) i233"->"$d109 = -7500.0 + $d108";
    "$d109 = -7500.0 + $d108"->"$d110 = $d109 * 15.0";
    "$d110 = $d109 * 15.0"->"$i68 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", i233, $d111, $d110)";
    "$i68 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv: \", i233, $d111, $d110)"->"i232 = i232 + $i68";
    "i232 = i232 + $i68"->"i233 = i233 + 1";
    "i233 = i233 + 1"->"if i233 < 997 goto $d111 = r0[i233]";
    "if i233 < 997 goto $d111 = r0[i233]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)";
    "if i233 < 997 goto $d111 = r0[i233]"->"$d111 = r0[i233]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"->"$d112 = r0[0]";
    "$d112 = r0[0]"->"$i69 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 0, $d112, #NaN)";
    "$i69 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 0, $d112, #NaN)"->"i234 = i232 + $i69";
    "i234 = i232 + $i69"->"$d113 = r0[1]";
    "$d113 = r0[1]"->"$i70 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 1, $d113, #Infinity)";
    "$i70 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 1, $d113, #Infinity)"->"i235 = i234 + $i70";
    "i235 = i234 + $i70"->"$d114 = r0[2]";
    "$d114 = r0[2]"->"$i71 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 2, $d114, #-Infinity)";
    "$i71 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 2, $d114, #-Infinity)"->"i236 = i235 + $i71";
    "i236 = i235 + $i71"->"$d115 = r0[3]";
    "$d115 = r0[3]"->"$i72 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 3, $d115, #Infinity)";
    "$i72 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 3, $d115, #Infinity)"->"i237 = i236 + $i72";
    "i237 = i236 + $i72"->"$d116 = r0[4]";
    "$d116 = r0[4]"->"$i73 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 4, $d116, 7.4E-323)";
    "$i73 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 4, $d116, 7.4E-323)"->"i238 = i237 + $i73";
    "i238 = i237 + $i73"->"$d117 = r0[5]";
    "$d117 = r0[5]"->"$i74 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 5, $d117, 3.337610787760802E-307)";
    "$i74 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 5, $d117, 3.337610787760802E-307)"->"i239 = i238 + $i74";
    "i239 = i238 + $i74"->"$d118 = r0[6]";
    "$d118 = r0[6]"->"$i75 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 6, $d118, #NaN)";
    "$i75 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 6, $d118, #NaN)"->"i240 = i239 + $i75";
    "i240 = i239 + $i75"->"$d119 = r0[7]";
    "$d119 = r0[7]"->"$i76 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 7, $d119, #-Infinity)";
    "$i76 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 7, $d119, #-Infinity)"->"i241 = i240 + $i76";
    "i241 = i240 + $i76"->"$d120 = r0[8]";
    "$d120 = r0[8]"->"$i77 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 8, $d120, #Infinity)";
    "$i77 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 8, $d120, #Infinity)"->"i242 = i241 + $i77";
    "i242 = i241 + $i77"->"$d121 = r0[9]";
    "$d121 = r0[9]"->"$i78 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 9, $d121, #-Infinity)";
    "$i78 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 9, $d121, #-Infinity)"->"i243 = i242 + $i78";
    "i243 = i242 + $i78"->"$d122 = r0[10]";
    "$d122 = r0[10]"->"$i79 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 10, $d122, -3.7006E-320)";
    "$i79 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 10, $d122, -3.7006E-320)"->"i244 = i243 + $i79";
    "i244 = i243 + $i79"->"$d123 = r0[11]";
    "$d123 = r0[11]"->"$i80 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 11, $d123, -1.6663578126360431E-304)";
    "$i80 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", 11, $d123, -1.6663578126360431E-304)"->"i245 = i244 + $i80";
    "i245 = i244 + $i80"->"i246 = 12";
    "i246 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i246 < 997 goto $d127 = r0[i246]";
    "$d127 = r0[i246]"->"$d124 = (double) i246";
    "$d124 = (double) i246"->"$d125 = -7500.0 + $d124";
    "$d125 = -7500.0 + $d124"->"$d126 = $d125 * 15.0";
    "$d126 = $d125 * 15.0"->"$i81 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", i246, $d127, $d126)";
    "$i81 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula: \", i246, $d127, $d126)"->"i245 = i245 + $i81";
    "i245 = i245 + $i81"->"i246 = i246 + 1";
    "i246 = i246 + 1"->"if i246 < 997 goto $d127 = r0[i246]";
    "if i246 < 997 goto $d127 = r0[i246]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)";
    "if i246 < 997 goto $d127 = r0[i246]"->"$d127 = r0[i246]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"->"$d128 = r0[0]";
    "$d128 = r0[0]"->"$i82 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 0, $d128, #NaN)";
    "$i82 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 0, $d128, #NaN)"->"i247 = i245 + $i82";
    "i247 = i245 + $i82"->"$d129 = r0[1]";
    "$d129 = r0[1]"->"$i83 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 1, $d129, #Infinity)";
    "$i83 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 1, $d129, #Infinity)"->"i248 = i247 + $i83";
    "i248 = i247 + $i83"->"$d130 = r0[2]";
    "$d130 = r0[2]"->"$i84 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 2, $d130, #-Infinity)";
    "$i84 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 2, $d130, #-Infinity)"->"i249 = i248 + $i84";
    "i249 = i248 + $i84"->"$d131 = r0[3]";
    "$d131 = r0[3]"->"$i85 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 3, $d131, 1.1984620899082106E307)";
    "$i85 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 3, $d131, 1.1984620899082106E307)"->"i250 = i249 + $i85";
    "i250 = i249 + $i85"->"$d132 = r0[4]";
    "$d132 = r0[4]"->"$i86 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 4, $d132, 0.0)";
    "$i86 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 4, $d132, 0.0)"->"i251 = i250 + $i86";
    "i251 = i250 + $i86"->"$d133 = r0[5]";
    "$d133 = r0[5]"->"$i87 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 5, $d133, 1.483382572338134E-309)";
    "$i87 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", 5, $d133, 1.483382572338134E-309)"->"i252 = i251 + $i87";
    "i252 = i251 + $i87"->"i253 = 6";
    "i253 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i253 < 997 goto $d137 = r0[i253]";
    "$d137 = r0[i253]"->"$d134 = (double) i253";
    "$d134 = (double) i253"->"$d135 = -7500.0 + $d134";
    "$d135 = -7500.0 + $d134"->"$d136 = $d135 / 15.0";
    "$d136 = $d135 / 15.0"->"$i88 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", i253, $d137, $d136)";
    "$i88 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc: \", i253, $d137, $d136)"->"i252 = i252 + $i88";
    "i252 = i252 + $i88"->"i253 = i253 + 1";
    "i253 = i253 + 1"->"if i253 < 997 goto $d137 = r0[i253]";
    "if i253 < 997 goto $d137 = r0[i253]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)";
    "if i253 < 997 goto $d137 = r0[i253]"->"$d137 = r0[i253]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"->"$d138 = r0[0]";
    "$d138 = r0[0]"->"$i89 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 0, $d138, #NaN)";
    "$i89 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 0, $d138, #NaN)"->"i254 = i252 + $i89";
    "i254 = i252 + $i89"->"$d139 = r0[1]";
    "$d139 = r0[1]"->"$i90 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 1, $d139, #Infinity)";
    "$i90 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 1, $d139, #Infinity)"->"i255 = i254 + $i90";
    "i255 = i254 + $i90"->"$d140 = r0[2]";
    "$d140 = r0[2]"->"$i91 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 2, $d140, #-Infinity)";
    "$i91 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 2, $d140, #-Infinity)"->"i256 = i255 + $i91";
    "i256 = i255 + $i91"->"$d141 = r0[3]";
    "$d141 = r0[3]"->"$i92 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 3, $d141, 1.1984620899082106E307)";
    "$i92 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 3, $d141, 1.1984620899082106E307)"->"i257 = i256 + $i92";
    "i257 = i256 + $i92"->"$d142 = r0[4]";
    "$d142 = r0[4]"->"$i93 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 4, $d142, 0.0)";
    "$i93 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 4, $d142, 0.0)"->"i258 = i257 + $i93";
    "i258 = i257 + $i93"->"$d143 = r0[5]";
    "$d143 = r0[5]"->"$i94 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 5, $d143, 1.483382572338134E-309)";
    "$i94 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", 5, $d143, 1.483382572338134E-309)"->"i259 = i258 + $i94";
    "i259 = i258 + $i94"->"i260 = 6";
    "i260 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i260 < 997 goto $d147 = r0[i260]";
    "$d147 = r0[i260]"->"$d144 = (double) i260";
    "$d144 = (double) i260"->"$d145 = -7500.0 + $d144";
    "$d145 = -7500.0 + $d144"->"$d146 = $d145 / 15.0";
    "$d146 = $d145 / 15.0"->"$i95 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", i260, $d147, $d146)";
    "$i95 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv: \", i260, $d147, $d146)"->"i259 = i259 + $i95";
    "i259 = i259 + $i95"->"i260 = i260 + 1";
    "i260 = i260 + 1"->"if i260 < 997 goto $d147 = r0[i260]";
    "if i260 < 997 goto $d147 = r0[i260]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)";
    "if i260 < 997 goto $d147 = r0[i260]"->"$d147 = r0[i260]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"->"$d148 = r0[0]";
    "$d148 = r0[0]"->"$i96 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 0, $d148, #NaN)";
    "$i96 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 0, $d148, #NaN)"->"i261 = i259 + $i96";
    "i261 = i259 + $i96"->"$d149 = r0[1]";
    "$d149 = r0[1]"->"$i97 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 1, $d149, #Infinity)";
    "$i97 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 1, $d149, #Infinity)"->"i262 = i261 + $i97";
    "i262 = i261 + $i97"->"$d150 = r0[2]";
    "$d150 = r0[2]"->"$i98 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 2, $d150, #-Infinity)";
    "$i98 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 2, $d150, #-Infinity)"->"i263 = i262 + $i98";
    "i263 = i262 + $i98"->"$d151 = r0[3]";
    "$d151 = r0[3]"->"$i99 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 3, $d151, 1.1984620899082106E307)";
    "$i99 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 3, $d151, 1.1984620899082106E307)"->"i264 = i263 + $i99";
    "i264 = i263 + $i99"->"$d152 = r0[4]";
    "$d152 = r0[4]"->"$i100 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 4, $d152, 0.0)";
    "$i100 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 4, $d152, 0.0)"->"i265 = i264 + $i100";
    "i265 = i264 + $i100"->"$d153 = r0[5]";
    "$d153 = r0[5]"->"$i101 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 5, $d153, 1.483382572338134E-309)";
    "$i101 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 5, $d153, 1.483382572338134E-309)"->"i266 = i265 + $i101";
    "i266 = i265 + $i101"->"$d154 = r0[6]";
    "$d154 = r0[6]"->"$i102 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 6, $d154, #NaN)";
    "$i102 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 6, $d154, #NaN)"->"i267 = i266 + $i102";
    "i267 = i266 + $i102"->"$d155 = r0[7]";
    "$d155 = r0[7]"->"$i103 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 7, $d155, -0.0)";
    "$i103 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 7, $d155, -0.0)"->"i268 = i267 + $i103";
    "i268 = i267 + $i103"->"$d156 = r0[8]";
    "$d156 = r0[8]"->"$i104 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 8, $d156, 0.0)";
    "$i104 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 8, $d156, 0.0)"->"i269 = i268 + $i104";
    "i269 = i268 + $i104"->"$d157 = r0[9]";
    "$d157 = r0[9]"->"$i105 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 9, $d157, -4.167007068519362E-305)";
    "$i105 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 9, $d157, -4.167007068519362E-305)"->"i270 = i269 + $i105";
    "i270 = i269 + $i105"->"$d158 = r0[10]";
    "$d158 = r0[10]"->"$i106 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 10, $d158, #-Infinity)";
    "$i106 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 10, $d158, #-Infinity)"->"i271 = i270 + $i106";
    "i271 = i270 + $i106"->"$d159 = r0[11]";
    "$d159 = r0[11]"->"$i107 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 11, $d159, #-Infinity)";
    "$i107 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", 11, $d159, #-Infinity)"->"i272 = i271 + $i107";
    "i272 = i271 + $i107"->"i273 = 12";
    "i273 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i273 < 997 goto $d163 = r0[i273]";
    "$d163 = r0[i273]"->"$d160 = (double) i273";
    "$d160 = (double) i273"->"$d161 = -7500.0 + $d160";
    "$d161 = -7500.0 + $d160"->"$d162 = $d161 / 15.0";
    "$d162 = $d161 / 15.0"->"$i108 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", i273, $d163, $d162)";
    "$i108 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva: \", i273, $d163, $d162)"->"i272 = i272 + $i108";
    "i272 = i272 + $i108"->"i273 = i273 + 1";
    "i273 = i273 + 1"->"if i273 < 997 goto $d163 = r0[i273]";
    "if i273 < 997 goto $d163 = r0[i273]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)";
    "if i273 < 997 goto $d163 = r0[i273]"->"$d163 = r0[i273]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"->"$d164 = r0[0]";
    "$d164 = r0[0]"->"$i109 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 0, $d164, #NaN)";
    "$i109 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 0, $d164, #NaN)"->"i274 = i272 + $i109";
    "i274 = i272 + $i109"->"$d165 = r0[1]";
    "$d165 = r0[1]"->"$i110 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 1, $d165, #-Infinity)";
    "$i110 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 1, $d165, #-Infinity)"->"i275 = i274 + $i110";
    "i275 = i274 + $i110"->"$d166 = r0[2]";
    "$d166 = r0[2]"->"$i111 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 2, $d166, #Infinity)";
    "$i111 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 2, $d166, #Infinity)"->"i276 = i275 + $i111";
    "i276 = i275 + $i111"->"$d167 = r0[3]";
    "$d167 = r0[3]"->"$i112 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 3, $d167, #-Infinity)";
    "$i112 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 3, $d167, #-Infinity)"->"i277 = i276 + $i112";
    "i277 = i276 + $i112"->"$d168 = r0[4]";
    "$d168 = r0[4]"->"$i113 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 4, $d168, -7.4E-323)";
    "$i113 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 4, $d168, -7.4E-323)"->"i278 = i277 + $i113";
    "i278 = i277 + $i113"->"$d169 = r0[5]";
    "$d169 = r0[5]"->"$i114 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 5, $d169, -3.337610787760802E-307)";
    "$i114 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", 5, $d169, -3.337610787760802E-307)"->"i279 = i278 + $i114";
    "i279 = i278 + $i114"->"i280 = 6";
    "i280 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i280 < 997 goto $d173 = r0[i280]";
    "$d173 = r0[i280]"->"$d170 = (double) i280";
    "$d170 = (double) i280"->"$d171 = -7500.0 + $d170";
    "$d171 = -7500.0 + $d170"->"$d172 = $d171 * -15.0";
    "$d172 = $d171 * -15.0"->"$i115 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", i280, $d173, $d172)";
    "$i115 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulc_n: \", i280, $d173, $d172)"->"i279 = i279 + $i115";
    "i279 = i279 + $i115"->"i280 = i280 + 1";
    "i280 = i280 + 1"->"if i280 < 997 goto $d173 = r0[i280]";
    "if i280 < 997 goto $d173 = r0[i280]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)";
    "if i280 < 997 goto $d173 = r0[i280]"->"$d173 = r0[i280]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"->"$d174 = r0[0]";
    "$d174 = r0[0]"->"$i116 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 0, $d174, #NaN)";
    "$i116 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 0, $d174, #NaN)"->"i281 = i279 + $i116";
    "i281 = i279 + $i116"->"$d175 = r0[1]";
    "$d175 = r0[1]"->"$i117 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 1, $d175, #-Infinity)";
    "$i117 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 1, $d175, #-Infinity)"->"i282 = i281 + $i117";
    "i282 = i281 + $i117"->"$d176 = r0[2]";
    "$d176 = r0[2]"->"$i118 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 2, $d176, #Infinity)";
    "$i118 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 2, $d176, #Infinity)"->"i283 = i282 + $i118";
    "i283 = i282 + $i118"->"$d177 = r0[3]";
    "$d177 = r0[3]"->"$i119 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 3, $d177, #-Infinity)";
    "$i119 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 3, $d177, #-Infinity)"->"i284 = i283 + $i119";
    "i284 = i283 + $i119"->"$d178 = r0[4]";
    "$d178 = r0[4]"->"$i120 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 4, $d178, -7.4E-323)";
    "$i120 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 4, $d178, -7.4E-323)"->"i285 = i284 + $i120";
    "i285 = i284 + $i120"->"$d179 = r0[5]";
    "$d179 = r0[5]"->"$i121 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 5, $d179, -3.337610787760802E-307)";
    "$i121 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", 5, $d179, -3.337610787760802E-307)"->"i286 = i285 + $i121";
    "i286 = i285 + $i121"->"i287 = 6";
    "i287 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i287 < 997 goto $d183 = r0[i287]";
    "$d183 = r0[i287]"->"$d180 = (double) i287";
    "$d180 = (double) i287"->"$d181 = -7500.0 + $d180";
    "$d181 = -7500.0 + $d180"->"$d182 = $d181 * -15.0";
    "$d182 = $d181 * -15.0"->"$i122 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", i287, $d183, $d182)";
    "$i122 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mulv_n: \", i287, $d183, $d182)"->"i286 = i286 + $i122";
    "i286 = i286 + $i122"->"i287 = i287 + 1";
    "i287 = i287 + 1"->"if i287 < 997 goto $d183 = r0[i287]";
    "if i287 < 997 goto $d183 = r0[i287]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)";
    "if i287 < 997 goto $d183 = r0[i287]"->"$d183 = r0[i287]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"->"$d184 = r0[0]";
    "$d184 = r0[0]"->"$i123 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 0, $d184, #NaN)";
    "$i123 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 0, $d184, #NaN)"->"i288 = i286 + $i123";
    "i288 = i286 + $i123"->"$d185 = r0[1]";
    "$d185 = r0[1]"->"$i124 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 1, $d185, #-Infinity)";
    "$i124 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 1, $d185, #-Infinity)"->"i289 = i288 + $i124";
    "i289 = i288 + $i124"->"$d186 = r0[2]";
    "$d186 = r0[2]"->"$i125 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 2, $d186, #Infinity)";
    "$i125 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 2, $d186, #Infinity)"->"i290 = i289 + $i125";
    "i290 = i289 + $i125"->"$d187 = r0[3]";
    "$d187 = r0[3]"->"$i126 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 3, $d187, #-Infinity)";
    "$i126 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 3, $d187, #-Infinity)"->"i291 = i290 + $i126";
    "i291 = i290 + $i126"->"$d188 = r0[4]";
    "$d188 = r0[4]"->"$i127 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 4, $d188, -7.4E-323)";
    "$i127 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 4, $d188, -7.4E-323)"->"i292 = i291 + $i127";
    "i292 = i291 + $i127"->"$d189 = r0[5]";
    "$d189 = r0[5]"->"$i128 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 5, $d189, -3.337610787760802E-307)";
    "$i128 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 5, $d189, -3.337610787760802E-307)"->"i293 = i292 + $i128";
    "i293 = i292 + $i128"->"$d190 = r0[6]";
    "$d190 = r0[6]"->"$i129 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 6, $d190, #NaN)";
    "$i129 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 6, $d190, #NaN)"->"i294 = i293 + $i129";
    "i294 = i293 + $i129"->"$d191 = r0[7]";
    "$d191 = r0[7]"->"$i130 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 7, $d191, #Infinity)";
    "$i130 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 7, $d191, #Infinity)"->"i295 = i294 + $i130";
    "i295 = i294 + $i130"->"$d192 = r0[8]";
    "$d192 = r0[8]"->"$i131 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 8, $d192, #-Infinity)";
    "$i131 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 8, $d192, #-Infinity)"->"i296 = i295 + $i131";
    "i296 = i295 + $i131"->"$d193 = r0[9]";
    "$d193 = r0[9]"->"$i132 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 9, $d193, #Infinity)";
    "$i132 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 9, $d193, #Infinity)"->"i297 = i296 + $i132";
    "i297 = i296 + $i132"->"$d194 = r0[10]";
    "$d194 = r0[10]"->"$i133 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 10, $d194, 3.7006E-320)";
    "$i133 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 10, $d194, 3.7006E-320)"->"i298 = i297 + $i133";
    "i298 = i297 + $i133"->"$d195 = r0[11]";
    "$d195 = r0[11]"->"$i134 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 11, $d195, 1.6663578126360431E-304)";
    "$i134 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", 11, $d195, 1.6663578126360431E-304)"->"i299 = i298 + $i134";
    "i299 = i298 + $i134"->"i300 = 12";
    "i300 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i300 < 997 goto $d199 = r0[i300]";
    "$d199 = r0[i300]"->"$d196 = (double) i300";
    "$d196 = (double) i300"->"$d197 = -7500.0 + $d196";
    "$d197 = -7500.0 + $d196"->"$d198 = $d197 * -15.0";
    "$d198 = $d197 * -15.0"->"$i135 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", i300, $d199, $d198)";
    "$i135 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_mula_n: \", i300, $d199, $d198)"->"i299 = i299 + $i135";
    "i299 = i299 + $i135"->"i300 = i300 + 1";
    "i300 = i300 + 1"->"if i300 < 997 goto $d199 = r0[i300]";
    "if i300 < 997 goto $d199 = r0[i300]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)";
    "if i300 < 997 goto $d199 = r0[i300]"->"$d199 = r0[i300]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"->"$d200 = r0[0]";
    "$d200 = r0[0]"->"$i136 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 0, $d200, #NaN)";
    "$i136 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 0, $d200, #NaN)"->"i301 = i299 + $i136";
    "i301 = i299 + $i136"->"$d201 = r0[1]";
    "$d201 = r0[1]"->"$i137 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 1, $d201, #-Infinity)";
    "$i137 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 1, $d201, #-Infinity)"->"i302 = i301 + $i137";
    "i302 = i301 + $i137"->"$d202 = r0[2]";
    "$d202 = r0[2]"->"$i138 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 2, $d202, #Infinity)";
    "$i138 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 2, $d202, #Infinity)"->"i303 = i302 + $i138";
    "i303 = i302 + $i138"->"$d203 = r0[3]";
    "$d203 = r0[3]"->"$i139 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 3, $d203, -1.1984620899082106E307)";
    "$i139 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 3, $d203, -1.1984620899082106E307)"->"i304 = i303 + $i139";
    "i304 = i303 + $i139"->"$d204 = r0[4]";
    "$d204 = r0[4]"->"$i140 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 4, $d204, -0.0)";
    "$i140 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 4, $d204, -0.0)"->"i305 = i304 + $i140";
    "i305 = i304 + $i140"->"$d205 = r0[5]";
    "$d205 = r0[5]"->"$i141 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 5, $d205, -1.483382572338134E-309)";
    "$i141 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", 5, $d205, -1.483382572338134E-309)"->"i306 = i305 + $i141";
    "i306 = i305 + $i141"->"i307 = 6";
    "i307 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i307 < 997 goto $d209 = r0[i307]";
    "$d209 = r0[i307]"->"$d206 = (double) i307";
    "$d206 = (double) i307"->"$d207 = -7500.0 + $d206";
    "$d207 = -7500.0 + $d206"->"$d208 = $d207 / -15.0";
    "$d208 = $d207 / -15.0"->"$i142 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", i307, $d209, $d208)";
    "$i142 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divc_n: \", i307, $d209, $d208)"->"i306 = i306 + $i142";
    "i306 = i306 + $i142"->"i307 = i307 + 1";
    "i307 = i307 + 1"->"if i307 < 997 goto $d209 = r0[i307]";
    "if i307 < 997 goto $d209 = r0[i307]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)";
    "if i307 < 997 goto $d209 = r0[i307]"->"$d209 = r0[i307]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"->"$d210 = r0[0]";
    "$d210 = r0[0]"->"$i143 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 0, $d210, #NaN)";
    "$i143 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 0, $d210, #NaN)"->"i308 = i306 + $i143";
    "i308 = i306 + $i143"->"$d211 = r0[1]";
    "$d211 = r0[1]"->"$i144 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 1, $d211, #-Infinity)";
    "$i144 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 1, $d211, #-Infinity)"->"i309 = i308 + $i144";
    "i309 = i308 + $i144"->"$d212 = r0[2]";
    "$d212 = r0[2]"->"$i145 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 2, $d212, #Infinity)";
    "$i145 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 2, $d212, #Infinity)"->"i310 = i309 + $i145";
    "i310 = i309 + $i145"->"$d213 = r0[3]";
    "$d213 = r0[3]"->"$i146 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 3, $d213, -1.1984620899082106E307)";
    "$i146 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 3, $d213, -1.1984620899082106E307)"->"i311 = i310 + $i146";
    "i311 = i310 + $i146"->"$d214 = r0[4]";
    "$d214 = r0[4]"->"$i147 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 4, $d214, -0.0)";
    "$i147 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 4, $d214, -0.0)"->"i312 = i311 + $i147";
    "i312 = i311 + $i147"->"$d215 = r0[5]";
    "$d215 = r0[5]"->"$i148 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 5, $d215, -1.483382572338134E-309)";
    "$i148 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", 5, $d215, -1.483382572338134E-309)"->"i313 = i312 + $i148";
    "i313 = i312 + $i148"->"i314 = 6";
    "i314 = 6"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i314 < 997 goto $d219 = r0[i314]";
    "$d219 = r0[i314]"->"$d216 = (double) i314";
    "$d216 = (double) i314"->"$d217 = -7500.0 + $d216";
    "$d217 = -7500.0 + $d216"->"$d218 = $d217 / -15.0";
    "$d218 = $d217 / -15.0"->"$i149 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", i314, $d219, $d218)";
    "$i149 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_divv_n: \", i314, $d219, $d218)"->"i313 = i313 + $i149";
    "i313 = i313 + $i149"->"i314 = i314 + 1";
    "i314 = i314 + 1"->"if i314 < 997 goto $d219 = r0[i314]";
    "if i314 < 997 goto $d219 = r0[i314]"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)";
    "if i314 < 997 goto $d219 = r0[i314]"->"$d219 = r0[i314]";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"->"$d220 = r0[0]";
    "$d220 = r0[0]"->"$i150 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 0, $d220, #NaN)";
    "$i150 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 0, $d220, #NaN)"->"i315 = i313 + $i150";
    "i315 = i313 + $i150"->"$d221 = r0[1]";
    "$d221 = r0[1]"->"$i151 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 1, $d221, #-Infinity)";
    "$i151 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 1, $d221, #-Infinity)"->"i316 = i315 + $i151";
    "i316 = i315 + $i151"->"$d222 = r0[2]";
    "$d222 = r0[2]"->"$i152 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 2, $d222, #Infinity)";
    "$i152 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 2, $d222, #Infinity)"->"i317 = i316 + $i152";
    "i317 = i316 + $i152"->"$d223 = r0[3]";
    "$d223 = r0[3]"->"$i153 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 3, $d223, -1.1984620899082106E307)";
    "$i153 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 3, $d223, -1.1984620899082106E307)"->"i318 = i317 + $i153";
    "i318 = i317 + $i153"->"$d224 = r0[4]";
    "$d224 = r0[4]"->"$i154 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 4, $d224, -0.0)";
    "$i154 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 4, $d224, -0.0)"->"i319 = i318 + $i154";
    "i319 = i318 + $i154"->"$d225 = r0[5]";
    "$d225 = r0[5]"->"$i155 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 5, $d225, -1.483382572338134E-309)";
    "$i155 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 5, $d225, -1.483382572338134E-309)"->"i320 = i319 + $i155";
    "i320 = i319 + $i155"->"$d226 = r0[6]";
    "$d226 = r0[6]"->"$i156 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 6, $d226, #NaN)";
    "$i156 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 6, $d226, #NaN)"->"i321 = i320 + $i156";
    "i321 = i320 + $i156"->"$d227 = r0[7]";
    "$d227 = r0[7]"->"$i157 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 7, $d227, 0.0)";
    "$i157 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 7, $d227, 0.0)"->"i322 = i321 + $i157";
    "i322 = i321 + $i157"->"$d228 = r0[8]";
    "$d228 = r0[8]"->"$i158 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 8, $d228, -0.0)";
    "$i158 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 8, $d228, -0.0)"->"i323 = i322 + $i158";
    "i323 = i322 + $i158"->"$d229 = r0[9]";
    "$d229 = r0[9]"->"$i159 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 9, $d229, 4.167007068519362E-305)";
    "$i159 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 9, $d229, 4.167007068519362E-305)"->"i324 = i323 + $i159";
    "i324 = i323 + $i159"->"$d230 = r0[10]";
    "$d230 = r0[10]"->"$i160 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 10, $d230, #Infinity)";
    "$i160 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 10, $d230, #Infinity)"->"i325 = i324 + $i160";
    "i325 = i324 + $i160"->"$d231 = r0[11]";
    "$d231 = r0[11]"->"$i161 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 11, $d231, #Infinity)";
    "$i161 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", 11, $d231, #Infinity)"->"i326 = i325 + $i161";
    "i326 = i325 + $i161"->"i327 = 12";
    "i327 = 12"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i327 < 997 goto $d235 = r0[i327]";
    "$d235 = r0[i327]"->"$d232 = (double) i327";
    "$d232 = (double) i327"->"$d233 = -7500.0 + $d232";
    "$d233 = -7500.0 + $d232"->"$d234 = $d233 / -15.0";
    "$d234 = $d233 / -15.0"->"$i162 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", i327, $d235, $d234)";
    "$i162 = staticinvoke <compiler.c2.cr6340864.TestDoubleVect: int verify(java.lang.String,int,double,double)>(\"test_diva_n: \", i327, $d235, $d234)"->"i326 = i326 + $i162";
    "i326 = i326 + $i162"->"i327 = i327 + 1";
    "i327 = i327 + 1"->"if i327 < 997 goto $d235 = r0[i327]";
    "if i327 < 997 goto $d235 = r0[i327]"->"if i326 <= 0 goto $r6 = <java.lang.System: java.io.PrintStream out>";
    "if i327 < 997 goto $d235 = r0[i327]"->"$d235 = r0[i327]";
    "if i326 <= 0 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"return i326";
    "if i326 <= 0 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i328 = 0";
    "i328 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i328 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"i328 = i328 + 1";
    "i328 = i328 + 1"->"if i328 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "if i328 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"i329 = 0";
    "if i328 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: double test_sum(double[])>(r1)";
    "i329 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i329 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"->"i329 = i329 + 1";
    "i329 = i329 + 1"->"if i329 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)";
    "if i329 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"->"i330 = 0";
    "if i329 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addc(double[],double[])>(r0, r1)";
    "i330 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i330 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"->"i330 = i330 + 1";
    "i330 = i330 + 1"->"if i330 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)";
    "if i330 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"->"i331 = 0";
    "if i330 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_addv(double[],double[],double)>(r0, r1, 15.0)";
    "i331 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i331 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"->"i331 = i331 + 1";
    "i331 = i331 + 1"->"if i331 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)";
    "if i331 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"->"i332 = 0";
    "if i331 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_adda(double[],double[],double[])>(r0, r1, r2)";
    "i332 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i332 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"->"i332 = i332 + 1";
    "i332 = i332 + 1"->"if i332 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)";
    "if i332 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"->"i333 = 0";
    "if i332 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subc(double[],double[])>(r0, r1)";
    "i333 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i333 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"->"i333 = i333 + 1";
    "i333 = i333 + 1"->"if i333 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)";
    "if i333 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"->"i334 = 0";
    "if i333 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_subv(double[],double[],double)>(r0, r1, 15.0)";
    "i334 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"->"i334 = i334 + 1";
    "i334 = i334 + 1"->"if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)";
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"->"i335 = 0";
    "if i334 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_suba(double[],double[],double[])>(r0, r1, r2)";
    "i335 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i335 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"->"i335 = i335 + 1";
    "i335 = i335 + 1"->"if i335 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)";
    "if i335 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"->"i336 = 0";
    "if i335 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc(double[],double[])>(r0, r1)";
    "i336 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i336 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"->"i336 = i336 + 1";
    "i336 = i336 + 1"->"if i336 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)";
    "if i336 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"->"i337 = 0";
    "if i336 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, 15.0)";
    "i337 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i337 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"->"i337 = i337 + 1";
    "i337 = i337 + 1"->"if i337 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)";
    "if i337 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"->"i338 = 0";
    "if i337 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r2)";
    "i338 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i338 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"->"i338 = i338 + 1";
    "i338 = i338 + 1"->"if i338 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)";
    "if i338 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"->"i339 = 0";
    "if i338 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc(double[],double[])>(r0, r1)";
    "i339 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i339 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"->"i339 = i339 + 1";
    "i339 = i339 + 1"->"if i339 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)";
    "if i339 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"->"i340 = 0";
    "if i339 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, 15.0)";
    "i340 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i340 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"->"i340 = i340 + 1";
    "i340 = i340 + 1"->"if i340 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)";
    "if i340 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"->"i341 = 0";
    "if i340 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r2)";
    "i341 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i341 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"->"i341 = i341 + 1";
    "i341 = i341 + 1"->"if i341 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)";
    "if i341 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"->"i342 = 0";
    "if i341 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulc_n(double[],double[])>(r0, r1)";
    "i342 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i342 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"->"i342 = i342 + 1";
    "i342 = i342 + 1"->"if i342 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)";
    "if i342 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"->"i343 = 0";
    "if i342 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mulv(double[],double[],double)>(r0, r1, -15.0)";
    "i343 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i343 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"->"i343 = i343 + 1";
    "i343 = i343 + 1"->"if i343 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)";
    "if i343 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"->"i344 = 0";
    "if i343 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_mula(double[],double[],double[])>(r0, r1, r3)";
    "i344 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i344 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"->"i344 = i344 + 1";
    "i344 = i344 + 1"->"if i344 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)";
    "if i344 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"->"i345 = 0";
    "if i344 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divc_n(double[],double[])>(r0, r1)";
    "i345 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i345 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"->"i345 = i345 + 1";
    "i345 = i345 + 1"->"if i345 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)";
    "if i345 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"->"i346 = 0";
    "if i345 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_divv(double[],double[],double)>(r0, r1, -15.0)";
    "i346 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i346 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)";
    "staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"->"i346 = i346 + 1";
    "i346 = i346 + 1"->"if i346 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)";
    "if i346 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"->"return i326";
    "if i346 < 11000 goto staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)"->"staticinvoke <compiler.c2.cr6340864.TestDoubleVect: void test_diva(double[],double[],double[])>(r0, r1, r3)";
}
