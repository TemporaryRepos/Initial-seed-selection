digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: compiler.escapeAnalysis.Test6689060;
i0 := @parameter0: int;
$r0 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r1 = $r0;
r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = r1;
$i1 = i0 & 1;
if $i1 != 1 goto r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3;
$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r7.<compiler.escapeAnalysis.Test6689060$Point: int x> = 4;
goto [?= $r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
$r2 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r2.<compiler.escapeAnalysis.Test6689060$Point: int x> = 6;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i2 = $r3.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = 3 * $i2;
$i4 = $i3 + i0;
r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i4;
$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i6 = 3 * $i5;
$i7 = $i6 + i0;
$r4.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i7;
virtualinvoke r5.<compiler.escapeAnalysis.Test6689060: void dummy()>();
$i9 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r6 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i8 = $r6.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$i10 = $i9 * $i8;
return $i10;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: compiler.escapeAnalysis.Test6689060;
i0 := @parameter0: int;
$r0 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r1 = $r0;
r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = r1;
$i1 = i0 & 1;
if $i1 != 1 goto r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3;
$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r7.<compiler.escapeAnalysis.Test6689060$Point: int x> = 4;
goto [?= $r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: compiler.escapeAnalysis.Test6689060;
i0 := @parameter0: int;
$r0 = new compiler.escapeAnalysis.Test6689060$Point;
specialinvoke $r0.<compiler.escapeAnalysis.Test6689060$Point: void <init>()>();
r1 = $r0;
r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next> = r1;
$i1 = i0 & 1;
if $i1 != 1 goto r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
$r2 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r2.<compiler.escapeAnalysis.Test6689060$Point: int x> = 6;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 3;
$r7 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r7.<compiler.escapeAnalysis.Test6689060$Point: int x> = 4;
goto [?= $r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i2 = $r3.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = 3 * $i2;
$i4 = $i3 + i0;
r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i4;
$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i6 = 3 * $i5;
$i7 = $i6 + i0;
$r4.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i7;
virtualinvoke r5.<compiler.escapeAnalysis.Test6689060: void dummy()>();
$i9 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r6 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i8 = $r6.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$i10 = $i9 * $i8;
return $i10;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r1.<compiler.escapeAnalysis.Test6689060$Point: int x> = 5;
$r2 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$r2.<compiler.escapeAnalysis.Test6689060$Point: int x> = 6;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r3 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i2 = $r3.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i3 = 3 * $i2;
$i4 = $i3 + i0;
r1.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i4;
$r4 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i5 = r1.<compiler.escapeAnalysis.Test6689060$Point: int x>;
$i6 = 3 * $i5;
$i7 = $i6 + i0;
$r4.<compiler.escapeAnalysis.Test6689060$Point: int y> = $i7;
virtualinvoke r5.<compiler.escapeAnalysis.Test6689060: void dummy()>();
$i9 = r1.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$r6 = r1.<compiler.escapeAnalysis.Test6689060$Point: compiler.escapeAnalysis.Test6689060$Point next>;
$i8 = $r6.<compiler.escapeAnalysis.Test6689060$Point: int y>;
$i10 = $i9 * $i8;
return $i10;
";
}
