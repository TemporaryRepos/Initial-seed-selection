digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i2 := @parameter1: int"
    "if r0 != null goto r1 = newarray (int)[10]"
    "return null"
    "r1 = newarray (int)[10]"
    "$i0 = <compiler.arraycopy.TestArrayCopyBadReexec: int val>"
    "$i1 = $i0 + 1"
    "<compiler.arraycopy.TestArrayCopyBadReexec: int val> = $i1"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i2)"
    "goto [?= return r1]"
    "$r2 := @caughtexception"
    "return r1"
    "r0 := @parameter0: int[]"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"if r0 != null goto r1 = newarray (int)[10]";
    "if r0 != null goto r1 = newarray (int)[10]"->"return null";
    "if r0 != null goto r1 = newarray (int)[10]"->"r1 = newarray (int)[10]";
    "r1 = newarray (int)[10]"->"$i0 = <compiler.arraycopy.TestArrayCopyBadReexec: int val>";
    "$i0 = <compiler.arraycopy.TestArrayCopyBadReexec: int val>"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"<compiler.arraycopy.TestArrayCopyBadReexec: int val> = $i1";
    "<compiler.arraycopy.TestArrayCopyBadReexec: int val> = $i1"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i2)";
    "<compiler.arraycopy.TestArrayCopyBadReexec: int val> = $i1"->"$r2 := @caughtexception";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i2)"->"goto [?= return r1]";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i2)"->"$r2 := @caughtexception";
    "goto [?= return r1]"->"return r1";
    "$r2 := @caughtexception"->"return r1";
}
