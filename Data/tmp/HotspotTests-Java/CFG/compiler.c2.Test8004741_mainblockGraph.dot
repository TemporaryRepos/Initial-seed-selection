digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r23 := @parameter0: java.lang.String[];
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
i5 = i5 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
"
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
staticinvoke <java.lang.Thread: void sleep(long)>(500L);
<compiler.c2.Test8004741: int passed> = 0;
"
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100);
"
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\");
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"
    "Block 8:
[preds: 7 ] [succs: 10 16 ]
goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)];
"
    "Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1);
"
    "Block 11:
[preds: 10 ] [succs: 12 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"
    "Block 12:
[preds: 11 ] [succs: 13 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\");
"
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= b6 = 12];
"
    "Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
"
    "Block 17:
[preds: 15 16 ] [succs: 19 ]
b6 = 12;
i7 = 0;
goto [?= (branch)];
"
    "Block 18:
[preds: 19 ] [succs: 19 ]
staticinvoke <compiler.c2.Test8004741: void threadTest()>();
i7 = i7 + 1;
"
    "Block 19:
[preds: 17 18 ] [succs: 20 18 ]
if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>();
"
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$i1 = <compiler.c2.Test8004741: int passed>;
$i0 = b6 / 2;
if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 21:
[preds: 20 ] [succs: 23 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \");
$i4 = <compiler.c2.Test8004741: int passed>;
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
goto [?= return];
"
    "Block 22:
[preds: 20 ] [succs: 23 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \");
$i2 = b6 / 2;
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \");
$i3 = <compiler.c2.Test8004741: int passed>;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
staticinvoke <compiler.c2.Test8004741: void fail()>();
"
    "Block 23:
[preds: 21 22 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r23 := @parameter0: java.lang.String[];
i5 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
i5 = i5 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
"->"Block 3:
[preds: 2 ] [succs: 4 9 ]
staticinvoke <java.lang.Thread: void sleep(long)>(500L);
<compiler.c2.Test8004741: int passed> = 0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100);
i5 = i5 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
staticinvoke <java.lang.Thread: void sleep(long)>(500L);
<compiler.c2.Test8004741: int passed> = 0;
"->"Block 4:
[preds: 3 ] [succs: 5 9 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100);
";
    "Block 3:
[preds: 2 ] [succs: 4 9 ]
staticinvoke <java.lang.Thread: void sleep(long)>(500L);
<compiler.c2.Test8004741: int passed> = 0;
"->"Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100);
"->"Block 5:
[preds: 4 ] [succs: 6 9 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 3 ] [succs: 5 9 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100);
"->"Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 5 ] [succs: 7 9 ]
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\");
";
    "Block 5:
[preds: 4 ] [succs: 6 9 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\");
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
";
    "Block 6:
[preds: 5 ] [succs: 7 9 ]
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\");
"->"Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 8:
[preds: 7 ] [succs: 10 16 ]
goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
";
    "Block 8:
[preds: 7 ] [succs: 10 16 ]
goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)];
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1);
";
    "Block 8:
[preds: 7 ] [succs: 10 16 ]
goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)];
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1);
";
    "Block 9:
[preds: 3 4 5 6 7 ] [succs: 10 16 ]
$r21 := @caughtexception;
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\");
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1);
"->"Block 11:
[preds: 10 ] [succs: 12 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1);
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 11:
[preds: 10 ] [succs: 12 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 12:
[preds: 11 ] [succs: 13 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 11:
[preds: 10 ] [succs: 12 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 12:
[preds: 11 ] [succs: 13 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 13:
[preds: 12 ] [succs: 14 16 ]
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\");
";
    "Block 12:
[preds: 11 ] [succs: 13 16 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\");
"->"Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\");
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= b6 = 12];
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= b6 = 12];
"->"Block 17:
[preds: 15 16 ] [succs: 19 ]
b6 = 12;
i7 = 0;
goto [?= (branch)];
";
    "Block 16:
[preds: 8 9 10 11 12 13 14 ] [succs: 17 ]
$r19 := @caughtexception;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\");
"->"Block 17:
[preds: 15 16 ] [succs: 19 ]
b6 = 12;
i7 = 0;
goto [?= (branch)];
";
    "Block 17:
[preds: 15 16 ] [succs: 19 ]
b6 = 12;
i7 = 0;
goto [?= (branch)];
"->"Block 19:
[preds: 17 18 ] [succs: 20 18 ]
if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>();
";
    "Block 18:
[preds: 19 ] [succs: 19 ]
staticinvoke <compiler.c2.Test8004741: void threadTest()>();
i7 = i7 + 1;
"->"Block 19:
[preds: 17 18 ] [succs: 20 18 ]
if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>();
";
    "Block 19:
[preds: 17 18 ] [succs: 20 18 ]
if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>();
"->"Block 20:
[preds: 19 ] [succs: 21 22 ]
$i1 = <compiler.c2.Test8004741: int passed>;
$i0 = b6 / 2;
if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 18 ]
if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>();
"->"Block 18:
[preds: 19 ] [succs: 19 ]
staticinvoke <compiler.c2.Test8004741: void threadTest()>();
i7 = i7 + 1;
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$i1 = <compiler.c2.Test8004741: int passed>;
$i0 = b6 / 2;
if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 21:
[preds: 20 ] [succs: 23 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \");
$i4 = <compiler.c2.Test8004741: int passed>;
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
goto [?= return];
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$i1 = <compiler.c2.Test8004741: int passed>;
$i0 = b6 / 2;
if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 22:
[preds: 20 ] [succs: 23 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \");
$i2 = b6 / 2;
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \");
$i3 = <compiler.c2.Test8004741: int passed>;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
staticinvoke <compiler.c2.Test8004741: void fail()>();
";
    "Block 21:
[preds: 20 ] [succs: 23 ]
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \");
$i4 = <compiler.c2.Test8004741: int passed>;
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\");
goto [?= return];
"->"Block 23:
[preds: 21 22 ] [succs: ]
return;
";
    "Block 22:
[preds: 20 ] [succs: 23 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \");
$i2 = b6 / 2;
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \");
$i3 = <compiler.c2.Test8004741: int passed>;
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
staticinvoke <compiler.c2.Test8004741: void fail()>();
"->"Block 23:
[preds: 21 22 ] [succs: ]
return;
";
}
