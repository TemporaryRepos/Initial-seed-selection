digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.loopopts.TestPredicateLostDependency$A"
    "specialinvoke $r0.<compiler.loopopts.TestPredicateLostDependency$A: void <init>()>()"
    "r1 = $r0"
    "$r2 = new compiler.loopopts.TestPredicateLostDependency$B"
    "specialinvoke $r2.<compiler.loopopts.TestPredicateLostDependency$B: void <init>()>()"
    "i0 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"
    "i0 = i0 + 1"
    "if i0 < 20000 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"
    "<compiler.loopopts.TestPredicateLostDependency: boolean crash> = 1"
    "goto [?= return]"
    "$r3 := @caughtexception"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new compiler.loopopts.TestPredicateLostDependency$A";
    "$r0 = new compiler.loopopts.TestPredicateLostDependency$A"->"specialinvoke $r0.<compiler.loopopts.TestPredicateLostDependency$A: void <init>()>()";
    "specialinvoke $r0.<compiler.loopopts.TestPredicateLostDependency$A: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new compiler.loopopts.TestPredicateLostDependency$B";
    "$r2 = new compiler.loopopts.TestPredicateLostDependency$B"->"specialinvoke $r2.<compiler.loopopts.TestPredicateLostDependency$B: void <init>()>()";
    "specialinvoke $r2.<compiler.loopopts.TestPredicateLostDependency$B: void <init>()>()"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 20000 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)";
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 20000 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)";
    "if i0 < 20000 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"->"<compiler.loopopts.TestPredicateLostDependency: boolean crash> = 1";
    "if i0 < 20000 goto staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"->"staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)";
    "<compiler.loopopts.TestPredicateLostDependency: boolean crash> = 1"->"staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)";
    "<compiler.loopopts.TestPredicateLostDependency: boolean crash> = 1"->"$r3 := @caughtexception";
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"->"goto [?= return]";
    "staticinvoke <compiler.loopopts.TestPredicateLostDependency: float m1(compiler.loopopts.TestPredicateLostDependency$A)>(r1)"->"$r3 := @caughtexception";
    "goto [?= return]"->"return";
    "$r3 := @caughtexception"->"return";
}
