digraph "unitGraph" {
    "z0 := @parameter0: boolean"
    "r0 := @parameter1: java.util.concurrent.Callable"
    "i1 = 0"
    "goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]"
    "r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"
    "$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)"
    "$z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2)"
    "if $z1 != 0 goto i1 = i1 + 1"
    "$r3 = new java.lang.IllegalStateException"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Wrong result: expected = \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)"
    "throw $r3"
    "i1 = i1 + 1"
    "$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>"
    "if i1 < $i0 goto r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"
    "return"
    "z0 := @parameter0: boolean"->"r0 := @parameter1: java.util.concurrent.Callable";
    "r0 := @parameter1: java.util.concurrent.Callable"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]";
    "goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>]"->"$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>";
    "r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)";
    "$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)"->"$z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2)";
    "$z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2)"->"if $z1 != 0 goto i1 = i1 + 1";
    "if $z1 != 0 goto i1 = i1 + 1"->"$r3 = new java.lang.IllegalStateException";
    "if $z1 != 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "$r3 = new java.lang.IllegalStateException"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Wrong result: expected = \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Wrong result: expected = \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", but got \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)"->"throw $r3";
    "i1 = i1 + 1"->"$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>";
    "$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>"->"if i1 < $i0 goto r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()";
    "if i1 < $i0 goto r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"return";
    "if i1 < $i0 goto r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()"->"r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>()";
}
