digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "i3 = 0"
    "goto [?= $i0 = <TestManyThreads: int COUNT>]"
    "$r0 = new java.lang.Thread"
    "$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>()"
    "specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)"
    "r2 = $r0"
    "virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1)"
    "virtualinvoke r2.<java.lang.Thread: void start()>()"
    "i3 = i3 + 1"
    "$i0 = <TestManyThreads: int COUNT>"
    "if i3 < $i0 goto $r0 = new java.lang.Thread"
    "goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>]"
    "staticinvoke <java.lang.Thread: void sleep(long)>(100L)"
    "$r3 = <TestManyThreads: java.lang.Throwable failed>"
    "if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>"
    "$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>"
    "$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>()"
    "$i2 = <TestManyThreads: int COUNT>"
    "if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L)"
    "$r4 = <TestManyThreads: java.lang.Throwable failed>"
    "if $r4 == null goto return"
    "$r5 = <TestManyThreads: java.lang.Throwable failed>"
    "throw $r5"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"i3 = 0";
    "i3 = 0"->"goto [?= $i0 = <TestManyThreads: int COUNT>]";
    "goto [?= $i0 = <TestManyThreads: int COUNT>]"->"$i0 = <TestManyThreads: int COUNT>";
    "$r0 = new java.lang.Thread"->"$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>()";
    "$r1 = staticinvoke <TestManyThreads$workload__29: java.lang.Runnable bootstrap$()>()"->"specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)";
    "specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)"->"r2 = $r0";
    "r2 = $r0"->"virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1)";
    "virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1)"->"virtualinvoke r2.<java.lang.Thread: void start()>()";
    "virtualinvoke r2.<java.lang.Thread: void start()>()"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"$i0 = <TestManyThreads: int COUNT>";
    "$i0 = <TestManyThreads: int COUNT>"->"if i3 < $i0 goto $r0 = new java.lang.Thread";
    "if i3 < $i0 goto $r0 = new java.lang.Thread"->"goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>]";
    "if i3 < $i0 goto $r0 = new java.lang.Thread"->"$r0 = new java.lang.Thread";
    "goto [?= $r3 = <TestManyThreads: java.lang.Throwable failed>]"->"$r3 = <TestManyThreads: java.lang.Throwable failed>";
    "staticinvoke <java.lang.Thread: void sleep(long)>(100L)"->"$r3 = <TestManyThreads: java.lang.Throwable failed>";
    "$r3 = <TestManyThreads: java.lang.Throwable failed>"->"if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>";
    "if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>"->"$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>";
    "if $r3 != null goto $r4 = <TestManyThreads: java.lang.Throwable failed>"->"$r4 = <TestManyThreads: java.lang.Throwable failed>";
    "$r6 = <TestManyThreads: java.util.concurrent.atomic.AtomicInteger allocated>"->"$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>()";
    "$i1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>()"->"$i2 = <TestManyThreads: int COUNT>";
    "$i2 = <TestManyThreads: int COUNT>"->"if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L)";
    "if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L)"->"$r4 = <TestManyThreads: java.lang.Throwable failed>";
    "if $i1 != $i2 goto staticinvoke <java.lang.Thread: void sleep(long)>(100L)"->"staticinvoke <java.lang.Thread: void sleep(long)>(100L)";
    "$r4 = <TestManyThreads: java.lang.Throwable failed>"->"if $r4 == null goto return";
    "if $r4 == null goto return"->"$r5 = <TestManyThreads: java.lang.Throwable failed>";
    "if $r4 == null goto return"->"return";
    "$r5 = <TestManyThreads: java.lang.Throwable failed>"->"throw $r5";
}
