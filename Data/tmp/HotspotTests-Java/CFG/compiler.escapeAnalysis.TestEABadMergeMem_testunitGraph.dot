digraph "unitGraph" {
    "r2 := @parameter0: compiler.escapeAnalysis.TestEABadMergeMem$Box"
    "r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box"
    "i0 := @parameter2: int"
    "i1 := @parameter3: int"
    "i2 := @parameter4: int"
    "z0 := @parameter5: boolean"
    "z1 := @parameter6: boolean"
    "$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box"
    "specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>()"
    "r1 = $r0"
    "r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0"
    "r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1"
    "r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2"
    "staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>()"
    "z2 = 0"
    "if z0 == 0 goto (branch)"
    "i5 = 0"
    "goto [?= (branch)]"
    "if z1 == 0 goto $f0 = (float) i5"
    "$f1 = (float) i5"
    "<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1"
    "goto [?= i5 = i5 + 1]"
    "$f0 = (float) i5"
    "<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0"
    "i5 = i5 + 1"
    "if i5 < 100 goto (branch)"
    "z2 = 1"
    "if z2 == 0 goto return 87"
    "$i4 = r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>"
    "$i3 = r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>"
    "i6 = $i4 + $i3"
    "return i6"
    "return 87"
    "r2 := @parameter0: compiler.escapeAnalysis.TestEABadMergeMem$Box"->"r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box";
    "r3 := @parameter1: compiler.escapeAnalysis.TestEABadMergeMem$Box"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i1 := @parameter3: int";
    "i1 := @parameter3: int"->"i2 := @parameter4: int";
    "i2 := @parameter4: int"->"z0 := @parameter5: boolean";
    "z0 := @parameter5: boolean"->"z1 := @parameter6: boolean";
    "z1 := @parameter6: boolean"->"$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box";
    "$r0 = new compiler.escapeAnalysis.TestEABadMergeMem$Box"->"specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.TestEABadMergeMem$Box: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0";
    "r2.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i0"->"r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1";
    "r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i1"->"r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2";
    "r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i> = i2"->"staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>()";
    "staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>()"->"z2 = 0";
    "z2 = 0"->"if z0 == 0 goto (branch)";
    "if z0 == 0 goto (branch)"->"i5 = 0";
    "if z0 == 0 goto (branch)"->"if z2 == 0 goto return 87";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 100 goto (branch)";
    "if z1 == 0 goto $f0 = (float) i5"->"$f1 = (float) i5";
    "if z1 == 0 goto $f0 = (float) i5"->"$f0 = (float) i5";
    "$f1 = (float) i5"->"<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1";
    "<compiler.escapeAnalysis.TestEABadMergeMem: float dummy1> = $f1"->"goto [?= i5 = i5 + 1]";
    "goto [?= i5 = i5 + 1]"->"i5 = i5 + 1";
    "$f0 = (float) i5"->"<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0";
    "<compiler.escapeAnalysis.TestEABadMergeMem: float dummy2> = $f0"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 100 goto (branch)";
    "if i5 < 100 goto (branch)"->"z2 = 1";
    "if i5 < 100 goto (branch)"->"if z1 == 0 goto $f0 = (float) i5";
    "z2 = 1"->"if z2 == 0 goto return 87";
    "if z2 == 0 goto return 87"->"$i4 = r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>";
    "if z2 == 0 goto return 87"->"return 87";
    "$i4 = r3.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>"->"$i3 = r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>";
    "$i3 = r1.<compiler.escapeAnalysis.TestEABadMergeMem$Box: int i>"->"i6 = $i4 + $i3";
    "i6 = $i4 + $i3"->"staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>()";
    "staticinvoke <compiler.escapeAnalysis.TestEABadMergeMem: void m_notinlined()>()"->"return i6";
}
