digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r0 = new java.lang.RuntimeException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Bad result in \");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for m = \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" expected \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r0;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r0 = new java.lang.RuntimeException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Bad result in \");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for m = \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" expected \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" got \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
throw $r0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.lang.String;
i0 := @parameter1: int;
z0 := @parameter2: boolean;
z1 := @parameter3: boolean;
if z0 == z1 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
