digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: java.util.concurrent.Callable;
i1 = 0;
goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>];
"
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1;
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = new java.lang.IllegalStateException;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\");
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
throw $r2;
"
    "Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
"
    "Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"
    "Block 8:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 7 ]
r0 := @parameter0: java.util.concurrent.Callable;
i1 = 0;
goto [?= $i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>];
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
";
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1;
";
    "Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1;
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = new java.lang.IllegalStateException;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
<compiler.intrinsics.klass.TestIsPrimitive: java.lang.Object sink> = $r1;
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = new java.lang.IllegalStateException;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\");
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = new java.lang.IllegalStateException;
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\");
"->"Block 5:
[preds: 4 ] [succs: 6 ]
throw $r2;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Expected NPE\");
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
throw $r2;
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
    "Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
"->"Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"->"Block 8:
[preds: 7 ] [succs: ]
return;
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"->"Block 1:
[preds: 7 ] [succs: 2 6 ]
$r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
";
    "Block 7:
[preds: 0 6 ] [succs: 8 1 6 ]
$i0 = <compiler.intrinsics.klass.TestIsPrimitive: int ITERS>;
if i1 < $i0 goto $r1 = interfaceinvoke r0.<java.util.concurrent.Callable: java.lang.Object call()>();
"->"Block 6:
[preds: 7 1 2 3 4 5 ] [succs: 7 ]
$r3 := @caughtexception;
i1 = i1 + 1;
";
}
