digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.lang.String[];
s0 = 10000;
staticinvoke <compiler.floatingpoint.ModNaN: void testWithPrint()>();
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i1 = i1 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i2 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i2 = i2 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
i3 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i3 = i3 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i4 = i4 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"
    "Block 12:
[preds: 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.lang.String[];
s0 = 10000;
staticinvoke <compiler.floatingpoint.ModNaN: void testWithPrint()>();
i1 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i1 = i1 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i2 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i1 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i1 = i1 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i2 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i2 = i2 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"->"Block 6:
[preds: 5 ] [succs: 8 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
i3 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i2 < s0 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"->"Block 4:
[preds: 5 ] [succs: 5 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i2 = i2 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
i3 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i3 = i3 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i3 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
"->"Block 7:
[preds: 8 ] [succs: 8 ]
staticinvoke <compiler.floatingpoint.ModNaN: void testStrict()>();
i3 = i3 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i4 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i4 = i4 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"->"Block 12:
[preds: 11 ] [succs: ]
return;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i4 < 10 goto staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
"->"Block 10:
[preds: 11 ] [succs: 11 ]
staticinvoke <compiler.floatingpoint.ModNaN: void test()>();
i4 = i4 + 1;
";
}
