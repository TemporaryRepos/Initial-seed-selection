digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: int[];
z0 := @parameter1: boolean;
r0 = newarray (int)[10];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 10);
if z0 == 0 goto return 1;
"
    "Block 1:
[preds: 0 ] [succs: 5 ]
i3 = 0;
goto [?= $i0 = lengthof r0];
"
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$i2 = r0[i3];
$i1 = r1[i3];
if $i2 == $i1 goto i3 = i3 + 1;
"
    "Block 3:
[preds: 2 ] [succs: ]
return 0;
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
i3 = i3 + 1;
"
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
$i0 = lengthof r0;
if i3 < $i0 goto $i2 = r0[i3];
"
    "Block 6:
[preds: 0 5 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: int[];
z0 := @parameter1: boolean;
r0 = newarray (int)[10];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 10);
if z0 == 0 goto return 1;
"->"Block 1:
[preds: 0 ] [succs: 5 ]
i3 = 0;
goto [?= $i0 = lengthof r0];
";
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: int[];
z0 := @parameter1: boolean;
r0 = newarray (int)[10];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 10);
if z0 == 0 goto return 1;
"->"Block 6:
[preds: 0 5 ] [succs: ]
return 1;
";
    "Block 1:
[preds: 0 ] [succs: 5 ]
i3 = 0;
goto [?= $i0 = lengthof r0];
"->"Block 5:
[preds: 1 4 ] [succs: 6 2 ]
$i0 = lengthof r0;
if i3 < $i0 goto $i2 = r0[i3];
";
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$i2 = r0[i3];
$i1 = r1[i3];
if $i2 == $i1 goto i3 = i3 + 1;
"->"Block 3:
[preds: 2 ] [succs: ]
return 0;
";
    "Block 2:
[preds: 5 ] [succs: 3 4 ]
$i2 = r0[i3];
$i1 = r1[i3];
if $i2 == $i1 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
i3 = i3 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
i3 = i3 + 1;
"->"Block 5:
[preds: 1 4 ] [succs: 6 2 ]
$i0 = lengthof r0;
if i3 < $i0 goto $i2 = r0[i3];
";
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
$i0 = lengthof r0;
if i3 < $i0 goto $i2 = r0[i3];
"->"Block 6:
[preds: 0 5 ] [succs: ]
return 1;
";
    "Block 5:
[preds: 1 4 ] [succs: 6 2 ]
$i0 = lengthof r0;
if i3 < $i0 goto $i2 = r0[i3];
"->"Block 2:
[preds: 5 ] [succs: 3 4 ]
$i2 = r0[i3];
$i1 = r1[i3];
if $i2 == $i1 goto i3 = i3 + 1;
";
}
