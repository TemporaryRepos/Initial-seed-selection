digraph "unitGraph" {
    "r0 = newarray (compiler.types.TypeSpeculation$A)[10]"
    "r1 = newarray (compiler.types.TypeSpeculation$B)[10]"
    "r2 = newarray (compiler.types.TypeSpeculation$C)[10]"
    "i1 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)"
    "staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r2, 0, 0)"
    "$i0 = i1 % 2"
    "if $i0 != 0 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)]"
    "$z1 = 0"
    "staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)"
    "i1 = i1 + 1"
    "if i1 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)"
    "return 1"
    "r0 = newarray (compiler.types.TypeSpeculation$A)[10]"->"r1 = newarray (compiler.types.TypeSpeculation$B)[10]";
    "r1 = newarray (compiler.types.TypeSpeculation$B)[10]"->"r2 = newarray (compiler.types.TypeSpeculation$C)[10]";
    "r2 = newarray (compiler.types.TypeSpeculation$C)[10]"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)"->"staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r2, 0, 0)";
    "staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r2, 0, 0)"->"$i0 = i1 % 2";
    "$i0 = i1 % 2"->"if $i0 != 0 goto $z1 = 0";
    "if $i0 != 0 goto $z1 = 0"->"$z1 = 1";
    "if $i0 != 0 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)]";
    "goto [?= staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)]"->"staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)";
    "$z1 = 0"->"staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)";
    "staticinvoke <compiler.types.TypeSpeculation: void test13_2(java.lang.Object,boolean,boolean)>(r0, 1, $z1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)";
    "if i1 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)"->"return 1";
    "if i1 < 20000 goto staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)"->"staticinvoke <compiler.types.TypeSpeculation: void test13_1(compiler.types.TypeSpeculation$B[],boolean,boolean)>(r1, 0, 0)";
}
