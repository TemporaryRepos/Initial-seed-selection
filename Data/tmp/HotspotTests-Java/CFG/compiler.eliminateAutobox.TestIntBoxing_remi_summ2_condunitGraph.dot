digraph "unitGraph" {
    "$r0 = new java.lang.Integer"
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)"
    "r2 = $r0"
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "i8 = 0"
    "goto [?= (branch)]"
    "$i0 = i8 & 1"
    "if $i0 != 0 goto $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$r1 = new java.lang.Integer"
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i4 = $i3 + 1"
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i4)"
    "r2 = $r1"
    "goto [?= i8 = i8 + 1]"
    "$i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i2 = $i1 + 2"
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "i8 = i8 + 1"
    "if i8 < 1000 goto $i0 = i8 & 1"
    "$i5 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i7 = $i5 + $i6"
    "return $i7"
    "$r0 = new java.lang.Integer"->"specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)"->"r2 = $r0";
    "r2 = $r0"->"r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 1000 goto $i0 = i8 & 1";
    "$i0 = i8 & 1"->"if $i0 != 0 goto $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "if $i0 != 0 goto $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$r1 = new java.lang.Integer";
    "if $i0 != 0 goto $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$r1 = new java.lang.Integer"->"$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i4 = $i3 + 1";
    "$i4 = $i3 + 1"->"specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i4)";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i4)"->"r2 = $r1";
    "r2 = $r1"->"goto [?= i8 = i8 + 1]";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "$i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i2 = $i1 + 2";
    "$i2 = $i1 + 2"->"r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < 1000 goto $i0 = i8 & 1";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$i5 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$i0 = i8 & 1";
    "$i5 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i7 = $i5 + $i6";
    "$i7 = $i5 + $i6"->"return $i7";
}
