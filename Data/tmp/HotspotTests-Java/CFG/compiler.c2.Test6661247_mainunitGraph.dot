digraph "unitGraph" {
    "r15 := @parameter0: java.lang.String[]"
    "s0 = 1000"
    "$i1 = s0 * 64"
    "r0 = newarray (boolean)[$i1]"
    "r1 = newarray (long)[s0]"
    "r2 = newarray (long)[s0]"
    "i15 = 0"
    "goto [?= (branch)]"
    "i16 = 0"
    "l2 = 0L"
    "i17 = 0"
    "$i3 = i16 * 64"
    "$i7 = $i3 + i17"
    "$l4 = 1L << i17"
    "$l5 = l2 & $l4"
    "$b6 = $l5 cmp 0L"
    "if $b6 == 0 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= r0[$i7] = $z0]"
    "$z0 = 0"
    "r0[$i7] = $z0"
    "i17 = i17 + 1"
    "if i17 < 64 goto $i3 = i16 * 64"
    "r1[i16] = 0L"
    "r2[i16] = l2"
    "i16 = i16 + 1"
    "if i16 < s0 goto l2 = 0L"
    "$i8 = lengthof r1"
    "$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8)"
    "$i9 = lengthof r0"
    "staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9)"
    "i18 = 0"
    "$l11 = r1[i18]"
    "$l10 = r2[i18]"
    "$b12 = $l11 cmp $l10"
    "if $b12 == 0 goto i18 = i18 + 1"
    "$r5 = new java.lang.InternalError"
    "$r6 = new java.lang.StringBuilder"
    "$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18)"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7)"
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"
    "$l13 = r1[i18]"
    "$r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13)"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$l14 = r2[i18]"
    "$r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14)"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r14)"
    "throw $r5"
    "i18 = i18 + 1"
    "if i18 < s0 goto $l11 = r1[i18]"
    "i15 = i15 + 1"
    "if i15 < 2000 goto i16 = 0"
    "return"
    "r15 := @parameter0: java.lang.String[]"->"s0 = 1000";
    "s0 = 1000"->"$i1 = s0 * 64";
    "$i1 = s0 * 64"->"r0 = newarray (boolean)[$i1]";
    "r0 = newarray (boolean)[$i1]"->"r1 = newarray (long)[s0]";
    "r1 = newarray (long)[s0]"->"r2 = newarray (long)[s0]";
    "r2 = newarray (long)[s0]"->"i15 = 0";
    "i15 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 < 2000 goto i16 = 0";
    "i16 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 < s0 goto l2 = 0L";
    "l2 = 0L"->"i17 = 0";
    "i17 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 < 64 goto $i3 = i16 * 64";
    "$i3 = i16 * 64"->"$i7 = $i3 + i17";
    "$i7 = $i3 + i17"->"$l4 = 1L << i17";
    "$l4 = 1L << i17"->"$l5 = l2 & $l4";
    "$l5 = l2 & $l4"->"$b6 = $l5 cmp 0L";
    "$b6 = $l5 cmp 0L"->"if $b6 == 0 goto $z0 = 0";
    "if $b6 == 0 goto $z0 = 0"->"$z0 = 1";
    "if $b6 == 0 goto $z0 = 0"->"$z0 = 0";
    "$z0 = 1"->"goto [?= r0[$i7] = $z0]";
    "goto [?= r0[$i7] = $z0]"->"r0[$i7] = $z0";
    "$z0 = 0"->"r0[$i7] = $z0";
    "r0[$i7] = $z0"->"i17 = i17 + 1";
    "i17 = i17 + 1"->"if i17 < 64 goto $i3 = i16 * 64";
    "if i17 < 64 goto $i3 = i16 * 64"->"r1[i16] = 0L";
    "if i17 < 64 goto $i3 = i16 * 64"->"$i3 = i16 * 64";
    "r1[i16] = 0L"->"r2[i16] = l2";
    "r2[i16] = l2"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"if i16 < s0 goto l2 = 0L";
    "if i16 < s0 goto l2 = 0L"->"$i8 = lengthof r1";
    "if i16 < s0 goto l2 = 0L"->"l2 = 0L";
    "$i8 = lengthof r1"->"$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8)";
    "$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8)"->"$i9 = lengthof r0";
    "$i9 = lengthof r0"->"staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9)";
    "staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9)"->"i18 = 0";
    "i18 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i18 < s0 goto $l11 = r1[i18]";
    "$l11 = r1[i18]"->"$l10 = r2[i18]";
    "$l10 = r2[i18]"->"$b12 = $l11 cmp $l10";
    "$b12 = $l11 cmp $l10"->"if $b12 == 0 goto i18 = i18 + 1";
    "if $b12 == 0 goto i18 = i18 + 1"->"$r5 = new java.lang.InternalError";
    "if $b12 == 0 goto i18 = i18 + 1"->"i18 = i18 + 1";
    "$r5 = new java.lang.InternalError"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18)";
    "$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18)"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7)";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7)"->"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")";
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"->"$l13 = r1[i18]";
    "$l13 = r1[i18]"->"$r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13)";
    "$r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13)"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$l14 = r2[i18]";
    "$l14 = r2[i18]"->"$r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14)";
    "$r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14)"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r14)";
    "specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r14)"->"throw $r5";
    "i18 = i18 + 1"->"if i18 < s0 goto $l11 = r1[i18]";
    "if i18 < s0 goto $l11 = r1[i18]"->"i15 = i15 + 1";
    "if i18 < s0 goto $l11 = r1[i18]"->"$l11 = r1[i18]";
    "i15 = i15 + 1"->"if i15 < 2000 goto i16 = 0";
    "if i15 < 2000 goto i16 = 0"->"return";
    "if i15 < 2000 goto i16 = 0"->"i16 = 0";
}
