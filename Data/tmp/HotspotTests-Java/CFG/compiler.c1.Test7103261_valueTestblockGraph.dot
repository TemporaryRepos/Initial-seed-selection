digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 46 ]
z0 := @parameter0: boolean;
i5 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 46 ] [succs: 2 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"
    "Block 2:
[preds: 1 ] [succs: 3 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>;
"
    "Block 3:
[preds: 2 ] [succs: 4 44 ]
i6 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 42 44 ]
goto [?= (branch)];
"
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"
    "Block 6:
[preds: 5 ] [succs: 7 44 ]
$l4 = r4.<compiler.c1.Test7103261: long l>;
"
    "Block 7:
[preds: 6 ] [succs: 8 44 ]
r3.<compiler.c1.Test7103261: long l> = $l4;
"
    "Block 8:
[preds: 7 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 9:
[preds: 5 ] [succs: 10 44 ]
$i3 = r4.<compiler.c1.Test7103261: int i>;
"
    "Block 10:
[preds: 9 ] [succs: 11 44 ]
r3.<compiler.c1.Test7103261: int i> = $i3;
"
    "Block 11:
[preds: 10 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 12:
[preds: 5 ] [succs: 13 44 ]
$f0 = r4.<compiler.c1.Test7103261: float f>;
"
    "Block 13:
[preds: 12 ] [succs: 14 44 ]
r3.<compiler.c1.Test7103261: float f> = $f0;
"
    "Block 14:
[preds: 13 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 15:
[preds: 5 ] [succs: 16 44 ]
$d0 = r4.<compiler.c1.Test7103261: double d>;
"
    "Block 16:
[preds: 15 ] [succs: 17 44 ]
r3.<compiler.c1.Test7103261: double d> = $d0;
"
    "Block 17:
[preds: 16 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 18:
[preds: 5 ] [succs: 19 44 ]
$b2 = r4.<compiler.c1.Test7103261: byte b>;
"
    "Block 19:
[preds: 18 ] [succs: 20 44 ]
r3.<compiler.c1.Test7103261: byte b> = $b2;
"
    "Block 20:
[preds: 19 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 21:
[preds: 5 ] [succs: 22 44 ]
$c1 = r4.<compiler.c1.Test7103261: char c>;
"
    "Block 22:
[preds: 21 ] [succs: 23 44 ]
r3.<compiler.c1.Test7103261: char c> = $c1;
"
    "Block 23:
[preds: 22 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 24:
[preds: 5 ] [succs: 25 44 ]
$s0 = r4.<compiler.c1.Test7103261: short s>;
"
    "Block 25:
[preds: 24 ] [succs: 26 44 ]
r3.<compiler.c1.Test7103261: short s> = $s0;
"
    "Block 26:
[preds: 25 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 27:
[preds: 5 ] [succs: 28 44 ]
$z1 = r4.<compiler.c1.Test7103261: boolean z>;
"
    "Block 28:
[preds: 27 ] [succs: 29 44 ]
r3.<compiler.c1.Test7103261: boolean z> = $z1;
"
    "Block 29:
[preds: 28 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 30:
[preds: 5 ] [succs: 31 44 ]
$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;
"
    "Block 31:
[preds: 30 ] [succs: 32 44 ]
r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0;
"
    "Block 32:
[preds: 31 ] [succs: 36 44 ]
goto [?= (branch)];
"
    "Block 33:
[preds: 5 ] [succs: 34 44 ]
$r1 = new java.lang.InternalError;
"
    "Block 34:
[preds: 33 ] [succs: 35 44 ]
specialinvoke $r1.<java.lang.InternalError: void <init>()>();
"
    "Block 35:
[preds: 34 ] [succs: 44 ]
throw $r1;
"
    "Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
"
    "Block 37:
[preds: 36 ] [succs: 38 40 44 ]
if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"
    "Block 38:
[preds: 37 ] [succs: 39 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"
    "Block 39:
[preds: 38 ] [succs: 41 44 ]
goto [?= i6 = i6 + 1];
"
    "Block 40:
[preds: 37 ] [succs: 41 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"
    "Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
"
    "Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
"
    "Block 43:
[preds: 42 ] [succs: 45 ]
goto [?= i5 = i5 + 1];
"
    "Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
"
    "Block 45:
[preds: 43 44 ] [succs: 46 ]
i5 = i5 + 1;
"
    "Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"
    "Block 47:
[preds: 46 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 46 ]
z0 := @parameter0: boolean;
i5 = 0;
goto [?= (branch)];
"->"Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
";
    "Block 1:
[preds: 46 ] [succs: 2 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"->"Block 2:
[preds: 1 ] [succs: 3 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>;
";
    "Block 1:
[preds: 46 ] [succs: 2 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 2:
[preds: 1 ] [succs: 3 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>;
"->"Block 3:
[preds: 2 ] [succs: 4 44 ]
i6 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 3:
[preds: 2 ] [succs: 4 44 ]
i6 = 0;
"->"Block 4:
[preds: 3 ] [succs: 42 44 ]
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 44 ]
i6 = 0;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 42 44 ]
goto [?= (branch)];
"->"Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 42 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 6:
[preds: 5 ] [succs: 7 44 ]
$l4 = r4.<compiler.c1.Test7103261: long l>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 9:
[preds: 5 ] [succs: 10 44 ]
$i3 = r4.<compiler.c1.Test7103261: int i>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 12:
[preds: 5 ] [succs: 13 44 ]
$f0 = r4.<compiler.c1.Test7103261: float f>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 15:
[preds: 5 ] [succs: 16 44 ]
$d0 = r4.<compiler.c1.Test7103261: double d>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 18:
[preds: 5 ] [succs: 19 44 ]
$b2 = r4.<compiler.c1.Test7103261: byte b>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 21:
[preds: 5 ] [succs: 22 44 ]
$c1 = r4.<compiler.c1.Test7103261: char c>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 24:
[preds: 5 ] [succs: 25 44 ]
$s0 = r4.<compiler.c1.Test7103261: short s>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 27:
[preds: 5 ] [succs: 28 44 ]
$z1 = r4.<compiler.c1.Test7103261: boolean z>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 30:
[preds: 5 ] [succs: 31 44 ]
$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 33:
[preds: 5 ] [succs: 34 44 ]
$r1 = new java.lang.InternalError;
";
    "Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 6:
[preds: 5 ] [succs: 7 44 ]
$l4 = r4.<compiler.c1.Test7103261: long l>;
"->"Block 7:
[preds: 6 ] [succs: 8 44 ]
r3.<compiler.c1.Test7103261: long l> = $l4;
";
    "Block 6:
[preds: 5 ] [succs: 7 44 ]
$l4 = r4.<compiler.c1.Test7103261: long l>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 8 44 ]
r3.<compiler.c1.Test7103261: long l> = $l4;
"->"Block 8:
[preds: 7 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 8 44 ]
r3.<compiler.c1.Test7103261: long l> = $l4;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 8:
[preds: 7 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 9:
[preds: 5 ] [succs: 10 44 ]
$i3 = r4.<compiler.c1.Test7103261: int i>;
"->"Block 10:
[preds: 9 ] [succs: 11 44 ]
r3.<compiler.c1.Test7103261: int i> = $i3;
";
    "Block 9:
[preds: 5 ] [succs: 10 44 ]
$i3 = r4.<compiler.c1.Test7103261: int i>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 10:
[preds: 9 ] [succs: 11 44 ]
r3.<compiler.c1.Test7103261: int i> = $i3;
"->"Block 11:
[preds: 10 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 11 44 ]
r3.<compiler.c1.Test7103261: int i> = $i3;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 11:
[preds: 10 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 11:
[preds: 10 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 12:
[preds: 5 ] [succs: 13 44 ]
$f0 = r4.<compiler.c1.Test7103261: float f>;
"->"Block 13:
[preds: 12 ] [succs: 14 44 ]
r3.<compiler.c1.Test7103261: float f> = $f0;
";
    "Block 12:
[preds: 5 ] [succs: 13 44 ]
$f0 = r4.<compiler.c1.Test7103261: float f>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 13:
[preds: 12 ] [succs: 14 44 ]
r3.<compiler.c1.Test7103261: float f> = $f0;
"->"Block 14:
[preds: 13 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 13:
[preds: 12 ] [succs: 14 44 ]
r3.<compiler.c1.Test7103261: float f> = $f0;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 14:
[preds: 13 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 15:
[preds: 5 ] [succs: 16 44 ]
$d0 = r4.<compiler.c1.Test7103261: double d>;
"->"Block 16:
[preds: 15 ] [succs: 17 44 ]
r3.<compiler.c1.Test7103261: double d> = $d0;
";
    "Block 15:
[preds: 5 ] [succs: 16 44 ]
$d0 = r4.<compiler.c1.Test7103261: double d>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 16:
[preds: 15 ] [succs: 17 44 ]
r3.<compiler.c1.Test7103261: double d> = $d0;
"->"Block 17:
[preds: 16 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 16:
[preds: 15 ] [succs: 17 44 ]
r3.<compiler.c1.Test7103261: double d> = $d0;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 17:
[preds: 16 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 17:
[preds: 16 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 18:
[preds: 5 ] [succs: 19 44 ]
$b2 = r4.<compiler.c1.Test7103261: byte b>;
"->"Block 19:
[preds: 18 ] [succs: 20 44 ]
r3.<compiler.c1.Test7103261: byte b> = $b2;
";
    "Block 18:
[preds: 5 ] [succs: 19 44 ]
$b2 = r4.<compiler.c1.Test7103261: byte b>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 19:
[preds: 18 ] [succs: 20 44 ]
r3.<compiler.c1.Test7103261: byte b> = $b2;
"->"Block 20:
[preds: 19 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 19:
[preds: 18 ] [succs: 20 44 ]
r3.<compiler.c1.Test7103261: byte b> = $b2;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 20:
[preds: 19 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 20:
[preds: 19 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 21:
[preds: 5 ] [succs: 22 44 ]
$c1 = r4.<compiler.c1.Test7103261: char c>;
"->"Block 22:
[preds: 21 ] [succs: 23 44 ]
r3.<compiler.c1.Test7103261: char c> = $c1;
";
    "Block 21:
[preds: 5 ] [succs: 22 44 ]
$c1 = r4.<compiler.c1.Test7103261: char c>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 22:
[preds: 21 ] [succs: 23 44 ]
r3.<compiler.c1.Test7103261: char c> = $c1;
"->"Block 23:
[preds: 22 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 22:
[preds: 21 ] [succs: 23 44 ]
r3.<compiler.c1.Test7103261: char c> = $c1;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 23:
[preds: 22 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 23:
[preds: 22 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 24:
[preds: 5 ] [succs: 25 44 ]
$s0 = r4.<compiler.c1.Test7103261: short s>;
"->"Block 25:
[preds: 24 ] [succs: 26 44 ]
r3.<compiler.c1.Test7103261: short s> = $s0;
";
    "Block 24:
[preds: 5 ] [succs: 25 44 ]
$s0 = r4.<compiler.c1.Test7103261: short s>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 25:
[preds: 24 ] [succs: 26 44 ]
r3.<compiler.c1.Test7103261: short s> = $s0;
"->"Block 26:
[preds: 25 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 25:
[preds: 24 ] [succs: 26 44 ]
r3.<compiler.c1.Test7103261: short s> = $s0;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 26:
[preds: 25 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 26:
[preds: 25 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 27:
[preds: 5 ] [succs: 28 44 ]
$z1 = r4.<compiler.c1.Test7103261: boolean z>;
"->"Block 28:
[preds: 27 ] [succs: 29 44 ]
r3.<compiler.c1.Test7103261: boolean z> = $z1;
";
    "Block 27:
[preds: 5 ] [succs: 28 44 ]
$z1 = r4.<compiler.c1.Test7103261: boolean z>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 28:
[preds: 27 ] [succs: 29 44 ]
r3.<compiler.c1.Test7103261: boolean z> = $z1;
"->"Block 29:
[preds: 28 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 28:
[preds: 27 ] [succs: 29 44 ]
r3.<compiler.c1.Test7103261: boolean z> = $z1;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 29:
[preds: 28 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 29:
[preds: 28 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 30:
[preds: 5 ] [succs: 31 44 ]
$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;
"->"Block 31:
[preds: 30 ] [succs: 32 44 ]
r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0;
";
    "Block 30:
[preds: 5 ] [succs: 31 44 ]
$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 31:
[preds: 30 ] [succs: 32 44 ]
r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0;
"->"Block 32:
[preds: 31 ] [succs: 36 44 ]
goto [?= (branch)];
";
    "Block 31:
[preds: 30 ] [succs: 32 44 ]
r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 32:
[preds: 31 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
";
    "Block 32:
[preds: 31 ] [succs: 36 44 ]
goto [?= (branch)];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 33:
[preds: 5 ] [succs: 34 44 ]
$r1 = new java.lang.InternalError;
"->"Block 34:
[preds: 33 ] [succs: 35 44 ]
specialinvoke $r1.<java.lang.InternalError: void <init>()>();
";
    "Block 33:
[preds: 5 ] [succs: 34 44 ]
$r1 = new java.lang.InternalError;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 34:
[preds: 33 ] [succs: 35 44 ]
specialinvoke $r1.<java.lang.InternalError: void <init>()>();
"->"Block 35:
[preds: 34 ] [succs: 44 ]
throw $r1;
";
    "Block 34:
[preds: 33 ] [succs: 35 44 ]
specialinvoke $r1.<java.lang.InternalError: void <init>()>();
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 35:
[preds: 34 ] [succs: 44 ]
throw $r1;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
"->"Block 37:
[preds: 36 ] [succs: 38 40 44 ]
if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
";
    "Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
"->"Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
";
    "Block 36:
[preds: 8 11 14 17 20 23 26 29 32 ] [succs: 37 41 44 ]
if i6 != 90000 goto i6 = i6 + 1;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 37:
[preds: 36 ] [succs: 38 40 44 ]
if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 38:
[preds: 37 ] [succs: 39 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
";
    "Block 37:
[preds: 36 ] [succs: 38 40 44 ]
if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 40:
[preds: 37 ] [succs: 41 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
";
    "Block 37:
[preds: 36 ] [succs: 38 40 44 ]
if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 38:
[preds: 37 ] [succs: 39 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 39:
[preds: 38 ] [succs: 41 44 ]
goto [?= i6 = i6 + 1];
";
    "Block 38:
[preds: 37 ] [succs: 39 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 39:
[preds: 38 ] [succs: 41 44 ]
goto [?= i6 = i6 + 1];
"->"Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
";
    "Block 39:
[preds: 38 ] [succs: 41 44 ]
goto [?= i6 = i6 + 1];
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 40:
[preds: 37 ] [succs: 41 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
";
    "Block 40:
[preds: 37 ] [succs: 41 44 ]
r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
"->"Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
";
    "Block 41:
[preds: 36 39 40 ] [succs: 42 44 ]
i6 = i6 + 1;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
"->"Block 43:
[preds: 42 ] [succs: 45 ]
goto [?= i5 = i5 + 1];
";
    "Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
"->"Block 5:
[preds: 42 ] [succs: 6 9 12 15 18 21 24 27 30 33 44 ]
tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; };
";
    "Block 42:
[preds: 4 41 ] [succs: 43 5 44 ]
if i6 < 100000 goto (branch);
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
    "Block 43:
[preds: 42 ] [succs: 45 ]
goto [?= i5 = i5 + 1];
"->"Block 45:
[preds: 43 44 ] [succs: 46 ]
i5 = i5 + 1;
";
    "Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
"->"Block 45:
[preds: 43 44 ] [succs: 46 ]
i5 = i5 + 1;
";
    "Block 45:
[preds: 43 44 ] [succs: 46 ]
i5 = i5 + 1;
"->"Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
";
    "Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"->"Block 47:
[preds: 46 ] [succs: ]
return;
";
    "Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"->"Block 1:
[preds: 46 ] [succs: 2 44 ]
r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
";
    "Block 46:
[preds: 0 45 ] [succs: 47 1 44 ]
if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>;
"->"Block 44:
[preds: 46 1 2 3 4 42 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ] [succs: 45 ]
$r2 := @caughtexception;
";
}
