digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
i2 := @parameter0: int;
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l0 = $r0[0];
$b1 = $l0 cmp -2L;
if $b1 != 0 goto $r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l3 = (long) i4;
$r1[i2] = $l3;
i4 = i4 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"
    "Block 5:
[preds: 2 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 4 ]
i2 := @parameter0: int;
i4 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l0 = $r0[0];
$b1 = $l0 cmp -2L;
if $b1 != 0 goto $r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l0 = $r0[0];
$b1 = $l0 cmp -2L;
if $b1 != 0 goto $r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l3 = (long) i4;
$r1[i2] = $l3;
i4 = i4 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
"->"Block 5:
[preds: 2 4 ] [succs: ]
return;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l3 = (long) i4;
$r1[i2] = $l3;
i4 = i4 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 5:
[preds: 2 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i4 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
$l0 = $r0[0];
$b1 = $l0 cmp -2L;
if $b1 != 0 goto $r1 = <compiler.loopopts.TestMoveStoresOutOfLoops: long[] array>;
";
}
