digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r40 := @parameter0: java.lang.String[];
i0 = 0;
i1 = 0;
i2 = 0;
i3 = 0;
i4 = 0;
i5 = 0;
i6 = 0;
i7 = 0;
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
i1 = staticinvoke <compiler.c2.Test7110586: int test2()>();
i2 = staticinvoke <compiler.c2.Test7110586: int test3()>();
i3 = staticinvoke <compiler.c2.Test7110586: int test11()>();
i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>();
i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>();
i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>();
i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>();
i8 = i8 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
z0 = 0;
if i0 == 11 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r36 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \");
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);
z0 = 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i1 == 12 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);
z0 = 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i2 == 12 goto (branch);
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \");
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);
z0 = 1;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
if i3 == 11 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \");
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);
z0 = 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if i4 == -11 goto (branch);
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \");
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);
z0 = 1;
"
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if i5 == -12 goto (branch);
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \");
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);
z0 = 1;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if i6 == -12 goto (branch);
"
    "Block 16:
[preds: 15 ] [succs: 17 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \");
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
"
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
if i7 == -11 goto (branch);
"
    "Block 18:
[preds: 17 ] [succs: 19 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \");
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);
z0 = 1;
"
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
if z0 == 0 goto return;
"
    "Block 20:
[preds: 19 ] [succs: 21 ]
staticinvoke <java.lang.System: void exit(int)>(97);
"
    "Block 21:
[preds: 19 20 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r40 := @parameter0: java.lang.String[];
i0 = 0;
i1 = 0;
i2 = 0;
i3 = 0;
i4 = 0;
i5 = 0;
i6 = 0;
i7 = 0;
i8 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
i1 = staticinvoke <compiler.c2.Test7110586: int test2()>();
i2 = staticinvoke <compiler.c2.Test7110586: int test3()>();
i3 = staticinvoke <compiler.c2.Test7110586: int test11()>();
i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>();
i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>();
i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>();
i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>();
i8 = i8 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
z0 = 0;
if i0 == 11 goto (branch);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i8 < 10000 goto i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
i0 = staticinvoke <compiler.c2.Test7110586: int test1()>();
i1 = staticinvoke <compiler.c2.Test7110586: int test2()>();
i2 = staticinvoke <compiler.c2.Test7110586: int test3()>();
i3 = staticinvoke <compiler.c2.Test7110586: int test11()>();
i4 = staticinvoke <compiler.c2.Test7110586: int testm1()>();
i5 = staticinvoke <compiler.c2.Test7110586: int testm2()>();
i6 = staticinvoke <compiler.c2.Test7110586: int testm3()>();
i7 = staticinvoke <compiler.c2.Test7110586: int testm11()>();
i8 = i8 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
z0 = 0;
if i0 == 11 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r36 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \");
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);
z0 = 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
z0 = 0;
if i0 == 11 goto (branch);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i1 == 12 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r36 = <java.lang.System: java.io.PrintStream out>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +1): \");
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);
z0 = 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i1 == 12 goto (branch);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i1 == 12 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);
z0 = 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i1 == 12 goto (branch);
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i2 == 12 goto (branch);
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +2): \");
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);
z0 = 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i2 == 12 goto (branch);
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i2 == 12 goto (branch);
"->"Block 8:
[preds: 7 ] [succs: 9 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \");
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);
z0 = 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i2 == 12 goto (branch);
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
if i3 == 11 goto (branch);
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +3): \");
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 12\");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);
z0 = 1;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
if i3 == 11 goto (branch);
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
if i3 == 11 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 11 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \");
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);
z0 = 1;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
if i3 == 11 goto (branch);
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if i4 == -11 goto (branch);
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$r20 = new java.lang.StringBuilder;
specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = +11): \");
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != 11\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);
z0 = 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if i4 == -11 goto (branch);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if i4 == -11 goto (branch);
"->"Block 12:
[preds: 11 ] [succs: 13 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \");
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);
z0 = 1;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 13 ]
if i4 == -11 goto (branch);
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if i5 == -12 goto (branch);
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -1): \");
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);
z0 = 1;
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if i5 == -12 goto (branch);
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if i5 == -12 goto (branch);
"->"Block 14:
[preds: 13 ] [succs: 15 ]
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \");
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);
z0 = 1;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if i5 == -12 goto (branch);
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if i6 == -12 goto (branch);
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -2): \");
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);
z0 = 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if i6 == -12 goto (branch);
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if i6 == -12 goto (branch);
"->"Block 16:
[preds: 15 ] [succs: 17 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \");
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
if i6 == -12 goto (branch);
"->"Block 17:
[preds: 15 16 ] [succs: 18 19 ]
if i7 == -11 goto (branch);
";
    "Block 16:
[preds: 15 ] [succs: 17 ]
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -3): \");
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -12\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);
z0 = 1;
"->"Block 17:
[preds: 15 16 ] [succs: 18 19 ]
if i7 == -11 goto (branch);
";
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
if i7 == -11 goto (branch);
"->"Block 18:
[preds: 17 ] [succs: 19 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \");
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);
z0 = 1;
";
    "Block 17:
[preds: 15 16 ] [succs: 18 19 ]
if i7 == -11 goto (branch);
"->"Block 19:
[preds: 17 18 ] [succs: 20 21 ]
if z0 == 0 goto return;
";
    "Block 18:
[preds: 17 ] [succs: 19 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR (incr = -11): \");
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != -11\");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);
z0 = 1;
"->"Block 19:
[preds: 17 18 ] [succs: 20 21 ]
if z0 == 0 goto return;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
if z0 == 0 goto return;
"->"Block 20:
[preds: 19 ] [succs: 21 ]
staticinvoke <java.lang.System: void exit(int)>(97);
";
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
if z0 == 0 goto return;
"->"Block 21:
[preds: 19 20 ] [succs: ]
return;
";
    "Block 20:
[preds: 19 ] [succs: 21 ]
staticinvoke <java.lang.System: void exit(int)>(97);
"->"Block 21:
[preds: 19 20 ] [succs: ]
return;
";
}
