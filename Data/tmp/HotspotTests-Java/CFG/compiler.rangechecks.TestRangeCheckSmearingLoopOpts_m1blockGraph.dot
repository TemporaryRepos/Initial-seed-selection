digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i7 := @parameter1: int;
"
    "Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = i7 % 2];
"
    "Block 3:
[preds: 1 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
"
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$i0 = i7 % 2;
if $i0 != 0 goto $i9 = i7 - 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i5 = r0[i7];
$i6 = $i5 % 2;
if $i6 != 0 goto $i9 = i7 - 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
<compiler.rangechecks.TestRangeCheckSmearingLoopOpts: int dummy> = i7;
"
    "Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
"
    "Block 8:
[preds: 7 ] [succs: ]
$i1 = i7 - 3;
i11 = r0[$i1];
$i2 = r0[i7];
i12 = i11 + $i2;
$i3 = i7 - 2;
$i4 = r0[$i3];
i13 = i12 + $i4;
return i13;
"
    "Block 9:
[preds: 7 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i7 := @parameter1: int;
"->"Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
";
    "Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = i7 % 2];
";
    "Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
"->"Block 3:
[preds: 1 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = i7 % 2];
"->"Block 4:
[preds: 2 ] [succs: 5 7 ]
$i0 = i7 % 2;
if $i0 != 0 goto $i9 = i7 - 1;
";
    "Block 3:
[preds: 1 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
"->"Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$i0 = i7 % 2;
if $i0 != 0 goto $i9 = i7 - 1;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$i5 = r0[i7];
$i6 = $i5 % 2;
if $i6 != 0 goto $i9 = i7 - 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 7 ]
$i0 = i7 % 2;
if $i0 != 0 goto $i9 = i7 - 1;
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i5 = r0[i7];
$i6 = $i5 % 2;
if $i6 != 0 goto $i9 = i7 - 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
<compiler.rangechecks.TestRangeCheckSmearingLoopOpts: int dummy> = i7;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i5 = r0[i7];
$i6 = $i5 % 2;
if $i6 != 0 goto $i9 = i7 - 1;
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
<compiler.rangechecks.TestRangeCheckSmearingLoopOpts: int dummy> = i7;
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
";
    "Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
"->"Block 8:
[preds: 7 ] [succs: ]
$i1 = i7 - 3;
i11 = r0[$i1];
$i2 = r0[i7];
i12 = i11 + $i2;
$i3 = i7 - 2;
$i4 = r0[$i3];
i13 = i12 + $i4;
return i13;
";
    "Block 7:
[preds: 4 5 6 ] [succs: 8 9 ]
$i9 = i7 - 1;
$i10 = r0[$i9];
if $i10 != 9 goto i7 = i7 + 1;
"->"Block 9:
[preds: 7 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
";
    "Block 9:
[preds: 7 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= $i8 = r0[i7]];
"->"Block 1:
[preds: 0 3 9 ] [succs: 2 3 ]
$i8 = r0[i7];
if $i8 >= 0 goto i7 = i7 + 1;
";
}
