digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.c2.Test6930043"
    "specialinvoke $r0.<compiler.c2.Test6930043: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (int)[1000000]"
    "r1.<compiler.c2.Test6930043: int[] a> = $r2"
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(10, 999990)"
    "i6 = 0"
    "goto [?= (branch)]"
    "$i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"
    "if $i2 == 0 goto i6 = i6 + 1"
    "$r3 = new java.lang.InternalError"
    "specialinvoke $r3.<java.lang.InternalError: void <init>()>()"
    "throw $r3"
    "$r6 := @caughtexception"
    "i6 = i6 + 1"
    "if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, 10)"
    "i7 = 0"
    "$i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"
    "if $i5 == 0 goto i7 = i7 + 1"
    "$r4 = new java.lang.InternalError"
    "specialinvoke $r4.<java.lang.InternalError: void <init>()>()"
    "throw $r4"
    "$r5 := @caughtexception"
    "i7 = i7 + 1"
    "if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = new compiler.c2.Test6930043";
    "$r0 = new compiler.c2.Test6930043"->"specialinvoke $r0.<compiler.c2.Test6930043: void <init>()>()";
    "specialinvoke $r0.<compiler.c2.Test6930043: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (int)[1000000]";
    "$r2 = newarray (int)[1000000]"->"r1.<compiler.c2.Test6930043: int[] a> = $r2";
    "r1.<compiler.c2.Test6930043: int[] a> = $r2"->"virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(10, 999990)";
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(10, 999990)"->"virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(10, 999990)";
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(10, 999990)"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)";
    "$i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"->"if $i2 == 0 goto i6 = i6 + 1";
    "$i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"->"$r6 := @caughtexception";
    "if $i2 == 0 goto i6 = i6 + 1"->"$r3 = new java.lang.InternalError";
    "if $i2 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "if $i2 == 0 goto i6 = i6 + 1"->"$r6 := @caughtexception";
    "$r3 = new java.lang.InternalError"->"specialinvoke $r3.<java.lang.InternalError: void <init>()>()";
    "$r3 = new java.lang.InternalError"->"$r6 := @caughtexception";
    "specialinvoke $r3.<java.lang.InternalError: void <init>()>()"->"throw $r3";
    "specialinvoke $r3.<java.lang.InternalError: void <init>()>()"->"$r6 := @caughtexception";
    "throw $r3"->"$r6 := @caughtexception";
    "$r6 := @caughtexception"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)";
    "if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"->"virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, 10)";
    "if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"->"$i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)";
    "if i6 < 3 goto $i2 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_forw(int,int)>(-1, 999990)"->"$r6 := @caughtexception";
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, 10)"->"virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, 10)";
    "virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, 10)"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)";
    "$i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"->"if $i5 == 0 goto i7 = i7 + 1";
    "$i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"->"$r5 := @caughtexception";
    "if $i5 == 0 goto i7 = i7 + 1"->"$r4 = new java.lang.InternalError";
    "if $i5 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "if $i5 == 0 goto i7 = i7 + 1"->"$r5 := @caughtexception";
    "$r4 = new java.lang.InternalError"->"specialinvoke $r4.<java.lang.InternalError: void <init>()>()";
    "$r4 = new java.lang.InternalError"->"$r5 := @caughtexception";
    "specialinvoke $r4.<java.lang.InternalError: void <init>()>()"->"throw $r4";
    "specialinvoke $r4.<java.lang.InternalError: void <init>()>()"->"$r5 := @caughtexception";
    "throw $r4"->"$r5 := @caughtexception";
    "$r5 := @caughtexception"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)";
    "if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"->"return";
    "if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"->"$i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)";
    "if i7 < 3 goto $i5 = virtualinvoke r1.<compiler.c2.Test6930043: int loop_back(int,int)>(999990, -1)"->"$r5 := @caughtexception";
}
