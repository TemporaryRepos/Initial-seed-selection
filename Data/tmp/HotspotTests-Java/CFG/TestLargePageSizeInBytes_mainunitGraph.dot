digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$z0 = staticinvoke <jdk.test.lib.Platform: boolean isSolaris()>()"
    "if $z0 != 0 goto $l0 = <TestLargePageSizeInBytes: long M>"
    "return"
    "$l0 = <TestLargePageSizeInBytes: long M>"
    "$l1 = 4L * $l0"
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l1)"
    "$l2 = <TestLargePageSizeInBytes: long M>"
    "$l3 = 256L * $l2"
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l3)"
    "$l4 = <TestLargePageSizeInBytes: long M>"
    "$l5 = 512L * $l4"
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l5)"
    "$l6 = <TestLargePageSizeInBytes: long G>"
    "$l7 = 2L * $l6"
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l7)"
    "r0 := @parameter0: java.lang.String[]"->"$z0 = staticinvoke <jdk.test.lib.Platform: boolean isSolaris()>()";
    "$z0 = staticinvoke <jdk.test.lib.Platform: boolean isSolaris()>()"->"if $z0 != 0 goto $l0 = <TestLargePageSizeInBytes: long M>";
    "if $z0 != 0 goto $l0 = <TestLargePageSizeInBytes: long M>"->"return";
    "if $z0 != 0 goto $l0 = <TestLargePageSizeInBytes: long M>"->"$l0 = <TestLargePageSizeInBytes: long M>";
    "$l0 = <TestLargePageSizeInBytes: long M>"->"$l1 = 4L * $l0";
    "$l1 = 4L * $l0"->"staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l1)";
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l1)"->"$l2 = <TestLargePageSizeInBytes: long M>";
    "$l2 = <TestLargePageSizeInBytes: long M>"->"$l3 = 256L * $l2";
    "$l3 = 256L * $l2"->"staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l3)";
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l3)"->"$l4 = <TestLargePageSizeInBytes: long M>";
    "$l4 = <TestLargePageSizeInBytes: long M>"->"$l5 = 512L * $l4";
    "$l5 = 512L * $l4"->"staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l5)";
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l5)"->"$l6 = <TestLargePageSizeInBytes: long G>";
    "$l6 = <TestLargePageSizeInBytes: long G>"->"$l7 = 2L * $l6";
    "$l7 = 2L * $l6"->"staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l7)";
    "staticinvoke <TestLargePageSizeInBytes: void testLargePageSizeInBytes(long)>($l7)"->"return";
}
