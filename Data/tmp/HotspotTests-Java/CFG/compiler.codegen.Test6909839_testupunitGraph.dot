digraph "unitGraph" {
    "$r0 = new java.lang.Object"
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"
    "$r1 = new java.lang.Object"
    "specialinvoke $r1.<java.lang.Object: void <init>()>()"
    "i1 = 0"
    "i2 = 0"
    "goto [?= (branch)]"
    "i1 = i1 + 10000"
    "i2 = i2 + 1"
    "if i2 < 10000 goto i1 = i1 + 10000"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1)"
    "return"
    "$r0 = new java.lang.Object"->"specialinvoke $r0.<java.lang.Object: void <init>()>()";
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"->"$r1 = new java.lang.Object";
    "$r1 = new java.lang.Object"->"specialinvoke $r1.<java.lang.Object: void <init>()>()";
    "specialinvoke $r1.<java.lang.Object: void <init>()>()"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 10000 goto i1 = i1 + 10000";
    "i1 = i1 + 10000"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 10000 goto i1 = i1 + 10000";
    "if i2 < 10000 goto i1 = i1 + 10000"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if i2 < 10000 goto i1 = i1 + 10000"->"i1 = i1 + 10000";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1)"->"return";
}
