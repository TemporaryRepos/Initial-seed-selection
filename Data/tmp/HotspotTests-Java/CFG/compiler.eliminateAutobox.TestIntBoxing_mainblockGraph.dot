digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r35 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[70];
$r0[0] = \"simple\";
$r0[1] = \"simpleb\";
$r0[2] = \"simplec\";
$r0[3] = \"simplef\";
$r0[4] = \"simplep\";
$r0[5] = \"simple2\";
$r0[6] = \"simpleb2\";
$r0[7] = \"simplec2\";
$r0[8] = \"simplem2\";
$r0[9] = \"simplep2\";
$r0[10] = \"simple_deop\";
$r0[11] = \"simpleb_deop\";
$r0[12] = \"simplec_deop\";
$r0[13] = \"simplef_deop\";
$r0[14] = \"simplep_deop\";
$r0[15] = \"test\";
$r0[16] = \"testb\";
$r0[17] = \"testc\";
$r0[18] = \"testm\";
$r0[19] = \"testp\";
$r0[20] = \"test2\";
$r0[21] = \"testb2\";
$r0[22] = \"testc2\";
$r0[23] = \"testm2\";
$r0[24] = \"testp2\";
$r0[25] = \"test_deop\";
$r0[26] = \"testb_deop\";
$r0[27] = \"testc_deop\";
$r0[28] = \"testf_deop\";
$r0[29] = \"testp_deop\";
$r0[30] = \"sum\";
$r0[31] = \"sumb\";
$r0[32] = \"sumc\";
$r0[33] = \"sumf\";
$r0[34] = \"sump\";
$r0[35] = \"sum2\";
$r0[36] = \"sumb2\";
$r0[37] = \"sumc2\";
$r0[38] = \"summ2\";
$r0[39] = \"sump2\";
$r0[40] = \"sum_deop\";
$r0[41] = \"sumb_deop\";
$r0[42] = \"sumc_deop\";
$r0[43] = \"sumf_deop\";
$r0[44] = \"sump_deop\";
$r0[45] = \"remi_sum\";
$r0[46] = \"remi_sumb\";
$r0[47] = \"remi_sumc\";
$r0[48] = \"remi_sumf\";
$r0[49] = \"remi_sump\";
$r0[50] = \"remi_sum2\";
$r0[51] = \"remi_sumb2\";
$r0[52] = \"remi_sumc2\";
$r0[53] = \"remi_summ2\";
$r0[54] = \"remi_sump2\";
$r0[55] = \"remi_sum_deop\";
$r0[56] = \"remi_sumb_deop\";
$r0[57] = \"remi_sumc_deop\";
$r0[58] = \"remi_sumf_deop\";
$r0[59] = \"remi_sump_deop\";
$r0[60] = \"remi_sum_cond\";
$r0[61] = \"remi_sumb_cond\";
$r0[62] = \"remi_sumc_cond\";
$r0[63] = \"remi_sumf_cond\";
$r0[64] = \"remi_sump_cond\";
$r0[65] = \"remi_sum2_cond\";
$r0[66] = \"remi_sumb2_cond\";
$r0[67] = \"remi_sumc2_cond\";
$r0[68] = \"remi_summ2_cond\";
$r0[69] = \"remi_sump2_cond\";
r1 = $r0;
$r2 = newarray (int)[70];
$r2[0] = 71994000;
$r2[1] = 71994000;
$r2[2] = 12000;
$r2[3] = 71994000;
$r2[4] = 71994000;
$r2[5] = 144000000;
$r2[6] = 144000000;
$r2[7] = 72018000;
$r2[8] = 144000000;
$r2[9] = 144000000;
$r2[10] = 71994000;
$r2[11] = 71994000;
$r2[12] = 12000;
$r2[13] = 71994000;
$r2[14] = 71994000;
$r2[15] = 72000000;
$r2[16] = 72000000;
$r2[17] = 36006000;
$r2[18] = 72000000;
$r2[19] = 72000000;
$r2[20] = 144012000;
$r2[21] = 144012000;
$r2[22] = 72030000;
$r2[23] = 144012000;
$r2[24] = 144012000;
$r2[25] = 72000000;
$r2[26] = 72000000;
$r2[27] = 36006000;
$r2[28] = 72000000;
$r2[29] = 72000000;
$r2[30] = 499501;
$r2[31] = 499501;
$r2[32] = 499501;
$r2[33] = 499501;
$r2[34] = 499501;
$r2[35] = 1000002;
$r2[36] = 1000002;
$r2[37] = 1000002;
$r2[38] = 1000002;
$r2[39] = 1000002;
$r2[40] = 499501;
$r2[41] = 499501;
$r2[42] = 499501;
$r2[43] = 499501;
$r2[44] = 499501;
$r2[45] = 1001;
$r2[46] = 1001;
$r2[47] = 1001;
$r2[48] = 1001;
$r2[49] = 1001;
$r2[50] = 3002;
$r2[51] = 3002;
$r2[52] = 3002;
$r2[53] = 3002;
$r2[54] = 3002;
$r2[55] = 1001;
$r2[56] = 1001;
$r2[57] = 1001;
$r2[58] = 1001;
$r2[59] = 1001;
$r2[60] = 501;
$r2[61] = 501;
$r2[62] = 501;
$r2[63] = 501;
$r2[64] = 501;
$r2[65] = 1502;
$r2[66] = 1502;
$r2[67] = 1502;
$r2[68] = 1502;
$r2[69] = 1502;
r3 = $r2;
r4 = newarray (int)[70];
i164 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
r4[i164] = 0;
i164 = i164 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i164 < 70 goto r4[i164] = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i165 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = r4[0];
$i2 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple(int)>(i165);
$i3 = $i1 + $i2;
r4[0] = $i3;
$i5 = r4[1];
$i6 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb(int)>(i165);
$i7 = $i5 + $i6;
r4[1] = $i7;
$i9 = r4[2];
$i10 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec()>();
$i11 = $i9 + $i10;
r4[2] = $i11;
$i13 = r4[3];
$i14 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef(int)>(i165);
$i15 = $i13 + $i14;
r4[3] = $i15;
$i17 = r4[4];
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i18 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep(java.lang.Integer)>($r5);
$i19 = $i17 + $i18;
r4[4] = $i19;
$i21 = r4[5];
$i22 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple2(int)>(i165);
$i23 = $i21 + $i22;
r4[5] = $i23;
$i25 = r4[6];
$i26 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb2(int)>(i165);
$i27 = $i25 + $i26;
r4[6] = $i27;
$i29 = r4[7];
$i30 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec2(int)>(i165);
$i31 = $i29 + $i30;
r4[7] = $i31;
$i33 = r4[8];
$i34 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplem2(int)>(i165);
$i35 = $i33 + $i34;
r4[8] = $i35;
$i37 = r4[9];
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i38 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep2(int,java.lang.Integer)>(i165, $r6);
$i39 = $i37 + $i38;
r4[9] = $i39;
$i41 = r4[10];
$i42 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple_deop(int)>(i165);
$i43 = $i41 + $i42;
r4[10] = $i43;
$i45 = r4[11];
$i46 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb_deop(int)>(i165);
$i47 = $i45 + $i46;
r4[11] = $i47;
$i49 = r4[12];
$i50 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec_deop(int)>(i165);
$i51 = $i49 + $i50;
r4[12] = $i51;
$i53 = r4[13];
$i54 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef_deop(int)>(i165);
$i55 = $i53 + $i54;
r4[13] = $i55;
$i57 = r4[14];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i58 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep_deop(java.lang.Integer)>($r7);
$i59 = $i57 + $i58;
r4[14] = $i59;
$i61 = r4[15];
$i62 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test(int)>(i165);
$i63 = $i61 + $i62;
r4[15] = $i63;
$i65 = r4[16];
$i66 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb(int)>(i165);
$i67 = $i65 + $i66;
r4[16] = $i67;
$i69 = r4[17];
$i70 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc(int)>(i165);
$i71 = $i69 + $i70;
r4[17] = $i71;
$i73 = r4[18];
$i74 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm(int)>(i165);
$i75 = $i73 + $i74;
r4[18] = $i75;
$i77 = r4[19];
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i78 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp(int,java.lang.Integer)>(i165, $r8);
$i79 = $i77 + $i78;
r4[19] = $i79;
$i81 = r4[20];
$i82 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test2(int)>(i165);
$i83 = $i81 + $i82;
r4[20] = $i83;
$i85 = r4[21];
$i86 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb2(int)>(i165);
$i87 = $i85 + $i86;
r4[21] = $i87;
$i89 = r4[22];
$i90 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc2(int)>(i165);
$i91 = $i89 + $i90;
r4[22] = $i91;
$i93 = r4[23];
$i94 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm2(int)>(i165);
$i95 = $i93 + $i94;
r4[23] = $i95;
$i97 = r4[24];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i98 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp2(int,java.lang.Integer)>(i165, $r9);
$i99 = $i97 + $i98;
r4[24] = $i99;
$i101 = r4[25];
$i102 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test_deop(int)>(i165);
$i103 = $i101 + $i102;
r4[25] = $i103;
$i105 = r4[26];
$i106 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb_deop(int)>(i165);
$i107 = $i105 + $i106;
r4[26] = $i107;
$i109 = r4[27];
$i110 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc_deop(int)>(i165);
$i111 = $i109 + $i110;
r4[27] = $i111;
$i113 = r4[28];
$i114 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testf_deop(int)>(i165);
$i115 = $i113 + $i114;
r4[28] = $i115;
$i117 = r4[29];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i118 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp_deop(int,java.lang.Integer)>(i165, $r10);
$i119 = $i117 + $i118;
r4[29] = $i119;
i165 = i165 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i165 < 12000 goto $i1 = r4[0];
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (int)[1000];
i166 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
r36[i166] = i166;
i166 = i166 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i166 < 1000 goto r36[i166] = i166;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
i167 = 0;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
r4[30] = $i120;
$i121 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb(int[])>(r36);
r4[31] = $i121;
$i122 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc(int[])>(r36);
r4[32] = $i122;
$i123 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf(int[])>(r36);
r4[33] = $i123;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i124 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump(int[],java.lang.Integer)>(r36, $r11);
r4[34] = $i124;
$i125 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum2(int[])>(r36);
r4[35] = $i125;
$i126 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb2(int[])>(r36);
r4[36] = $i126;
$i127 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc2(int[])>(r36);
r4[37] = $i127;
$i128 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int summ2(int[])>(r36);
r4[38] = $i128;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i129 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump2(int[],java.lang.Integer)>(r36, $r12);
r4[39] = $i129;
$i130 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum_deop(int[])>(r36);
r4[40] = $i130;
$i131 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb_deop(int[])>(r36);
r4[41] = $i131;
$i132 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc_deop(int[])>(r36);
r4[42] = $i132;
$i133 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf_deop(int[])>(r36);
r4[43] = $i133;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i134 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump_deop(int[],java.lang.Integer)>(r36, $r13);
r4[44] = $i134;
$i135 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum()>();
r4[45] = $i135;
$i136 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb()>();
r4[46] = $i136;
$i137 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc()>();
r4[47] = $i137;
$i138 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf()>();
r4[48] = $i138;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i139 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump(java.lang.Integer)>($r14);
r4[49] = $i139;
$i140 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2()>();
r4[50] = $i140;
$i141 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2()>();
r4[51] = $i141;
$i142 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2()>();
r4[52] = $i142;
$i143 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2()>();
r4[53] = $i143;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i144 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2(java.lang.Integer)>($r15);
r4[54] = $i144;
$i145 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_deop()>();
r4[55] = $i145;
$i146 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_deop()>();
r4[56] = $i146;
$i147 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_deop()>();
r4[57] = $i147;
$i148 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_deop()>();
r4[58] = $i148;
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i149 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_deop(java.lang.Integer)>($r16);
r4[59] = $i149;
$i150 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_cond()>();
r4[60] = $i150;
$i151 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_cond()>();
r4[61] = $i151;
$i152 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_cond()>();
r4[62] = $i152;
$i153 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_cond()>();
r4[63] = $i153;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i154 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_cond(java.lang.Integer)>($r17);
r4[64] = $i154;
$i155 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2_cond()>();
r4[65] = $i155;
$i156 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2_cond()>();
r4[66] = $i156;
$i157 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2_cond()>();
r4[67] = $i157;
$i158 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2_cond()>();
r4[68] = $i158;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i159 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2_cond(java.lang.Integer)>($r18);
r4[69] = $i159;
i167 = i167 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i167 < 100 goto $i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
"
    "Block 12:
[preds: 11 ] [succs: 16 ]
i168 = 0;
i169 = 0;
goto [?= (branch)];
"
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$i161 = r4[i169];
$i160 = r3[i169];
if $i161 == $i160 goto i169 = i169 + 1;
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i169];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$i162 = r4[i169];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i162);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$i163 = r3[i169];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i163);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i168 = i168 + 1;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 ]
i169 = i169 + 1;
"
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i169 < 70 goto $i161 = r4[i169];
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i168 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 18:
[preds: 17 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed \");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i168);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests.\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r34 = new java.lang.InternalError;
specialinvoke $r34.<java.lang.InternalError: void <init>()>();
throw $r34;
"
    "Block 19:
[preds: 17 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r35 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[70];
$r0[0] = \"simple\";
$r0[1] = \"simpleb\";
$r0[2] = \"simplec\";
$r0[3] = \"simplef\";
$r0[4] = \"simplep\";
$r0[5] = \"simple2\";
$r0[6] = \"simpleb2\";
$r0[7] = \"simplec2\";
$r0[8] = \"simplem2\";
$r0[9] = \"simplep2\";
$r0[10] = \"simple_deop\";
$r0[11] = \"simpleb_deop\";
$r0[12] = \"simplec_deop\";
$r0[13] = \"simplef_deop\";
$r0[14] = \"simplep_deop\";
$r0[15] = \"test\";
$r0[16] = \"testb\";
$r0[17] = \"testc\";
$r0[18] = \"testm\";
$r0[19] = \"testp\";
$r0[20] = \"test2\";
$r0[21] = \"testb2\";
$r0[22] = \"testc2\";
$r0[23] = \"testm2\";
$r0[24] = \"testp2\";
$r0[25] = \"test_deop\";
$r0[26] = \"testb_deop\";
$r0[27] = \"testc_deop\";
$r0[28] = \"testf_deop\";
$r0[29] = \"testp_deop\";
$r0[30] = \"sum\";
$r0[31] = \"sumb\";
$r0[32] = \"sumc\";
$r0[33] = \"sumf\";
$r0[34] = \"sump\";
$r0[35] = \"sum2\";
$r0[36] = \"sumb2\";
$r0[37] = \"sumc2\";
$r0[38] = \"summ2\";
$r0[39] = \"sump2\";
$r0[40] = \"sum_deop\";
$r0[41] = \"sumb_deop\";
$r0[42] = \"sumc_deop\";
$r0[43] = \"sumf_deop\";
$r0[44] = \"sump_deop\";
$r0[45] = \"remi_sum\";
$r0[46] = \"remi_sumb\";
$r0[47] = \"remi_sumc\";
$r0[48] = \"remi_sumf\";
$r0[49] = \"remi_sump\";
$r0[50] = \"remi_sum2\";
$r0[51] = \"remi_sumb2\";
$r0[52] = \"remi_sumc2\";
$r0[53] = \"remi_summ2\";
$r0[54] = \"remi_sump2\";
$r0[55] = \"remi_sum_deop\";
$r0[56] = \"remi_sumb_deop\";
$r0[57] = \"remi_sumc_deop\";
$r0[58] = \"remi_sumf_deop\";
$r0[59] = \"remi_sump_deop\";
$r0[60] = \"remi_sum_cond\";
$r0[61] = \"remi_sumb_cond\";
$r0[62] = \"remi_sumc_cond\";
$r0[63] = \"remi_sumf_cond\";
$r0[64] = \"remi_sump_cond\";
$r0[65] = \"remi_sum2_cond\";
$r0[66] = \"remi_sumb2_cond\";
$r0[67] = \"remi_sumc2_cond\";
$r0[68] = \"remi_summ2_cond\";
$r0[69] = \"remi_sump2_cond\";
r1 = $r0;
$r2 = newarray (int)[70];
$r2[0] = 71994000;
$r2[1] = 71994000;
$r2[2] = 12000;
$r2[3] = 71994000;
$r2[4] = 71994000;
$r2[5] = 144000000;
$r2[6] = 144000000;
$r2[7] = 72018000;
$r2[8] = 144000000;
$r2[9] = 144000000;
$r2[10] = 71994000;
$r2[11] = 71994000;
$r2[12] = 12000;
$r2[13] = 71994000;
$r2[14] = 71994000;
$r2[15] = 72000000;
$r2[16] = 72000000;
$r2[17] = 36006000;
$r2[18] = 72000000;
$r2[19] = 72000000;
$r2[20] = 144012000;
$r2[21] = 144012000;
$r2[22] = 72030000;
$r2[23] = 144012000;
$r2[24] = 144012000;
$r2[25] = 72000000;
$r2[26] = 72000000;
$r2[27] = 36006000;
$r2[28] = 72000000;
$r2[29] = 72000000;
$r2[30] = 499501;
$r2[31] = 499501;
$r2[32] = 499501;
$r2[33] = 499501;
$r2[34] = 499501;
$r2[35] = 1000002;
$r2[36] = 1000002;
$r2[37] = 1000002;
$r2[38] = 1000002;
$r2[39] = 1000002;
$r2[40] = 499501;
$r2[41] = 499501;
$r2[42] = 499501;
$r2[43] = 499501;
$r2[44] = 499501;
$r2[45] = 1001;
$r2[46] = 1001;
$r2[47] = 1001;
$r2[48] = 1001;
$r2[49] = 1001;
$r2[50] = 3002;
$r2[51] = 3002;
$r2[52] = 3002;
$r2[53] = 3002;
$r2[54] = 3002;
$r2[55] = 1001;
$r2[56] = 1001;
$r2[57] = 1001;
$r2[58] = 1001;
$r2[59] = 1001;
$r2[60] = 501;
$r2[61] = 501;
$r2[62] = 501;
$r2[63] = 501;
$r2[64] = 501;
$r2[65] = 1502;
$r2[66] = 1502;
$r2[67] = 1502;
$r2[68] = 1502;
$r2[69] = 1502;
r3 = $r2;
r4 = newarray (int)[70];
i164 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i164 < 70 goto r4[i164] = 0;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
r4[i164] = 0;
i164 = i164 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i164 < 70 goto r4[i164] = 0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i164 < 70 goto r4[i164] = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i165 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i164 < 70 goto r4[i164] = 0;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
r4[i164] = 0;
i164 = i164 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i165 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i165 < 12000 goto $i1 = r4[0];
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = r4[0];
$i2 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple(int)>(i165);
$i3 = $i1 + $i2;
r4[0] = $i3;
$i5 = r4[1];
$i6 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb(int)>(i165);
$i7 = $i5 + $i6;
r4[1] = $i7;
$i9 = r4[2];
$i10 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec()>();
$i11 = $i9 + $i10;
r4[2] = $i11;
$i13 = r4[3];
$i14 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef(int)>(i165);
$i15 = $i13 + $i14;
r4[3] = $i15;
$i17 = r4[4];
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i18 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep(java.lang.Integer)>($r5);
$i19 = $i17 + $i18;
r4[4] = $i19;
$i21 = r4[5];
$i22 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple2(int)>(i165);
$i23 = $i21 + $i22;
r4[5] = $i23;
$i25 = r4[6];
$i26 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb2(int)>(i165);
$i27 = $i25 + $i26;
r4[6] = $i27;
$i29 = r4[7];
$i30 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec2(int)>(i165);
$i31 = $i29 + $i30;
r4[7] = $i31;
$i33 = r4[8];
$i34 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplem2(int)>(i165);
$i35 = $i33 + $i34;
r4[8] = $i35;
$i37 = r4[9];
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i38 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep2(int,java.lang.Integer)>(i165, $r6);
$i39 = $i37 + $i38;
r4[9] = $i39;
$i41 = r4[10];
$i42 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple_deop(int)>(i165);
$i43 = $i41 + $i42;
r4[10] = $i43;
$i45 = r4[11];
$i46 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb_deop(int)>(i165);
$i47 = $i45 + $i46;
r4[11] = $i47;
$i49 = r4[12];
$i50 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec_deop(int)>(i165);
$i51 = $i49 + $i50;
r4[12] = $i51;
$i53 = r4[13];
$i54 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef_deop(int)>(i165);
$i55 = $i53 + $i54;
r4[13] = $i55;
$i57 = r4[14];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i58 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep_deop(java.lang.Integer)>($r7);
$i59 = $i57 + $i58;
r4[14] = $i59;
$i61 = r4[15];
$i62 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test(int)>(i165);
$i63 = $i61 + $i62;
r4[15] = $i63;
$i65 = r4[16];
$i66 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb(int)>(i165);
$i67 = $i65 + $i66;
r4[16] = $i67;
$i69 = r4[17];
$i70 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc(int)>(i165);
$i71 = $i69 + $i70;
r4[17] = $i71;
$i73 = r4[18];
$i74 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm(int)>(i165);
$i75 = $i73 + $i74;
r4[18] = $i75;
$i77 = r4[19];
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i78 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp(int,java.lang.Integer)>(i165, $r8);
$i79 = $i77 + $i78;
r4[19] = $i79;
$i81 = r4[20];
$i82 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test2(int)>(i165);
$i83 = $i81 + $i82;
r4[20] = $i83;
$i85 = r4[21];
$i86 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb2(int)>(i165);
$i87 = $i85 + $i86;
r4[21] = $i87;
$i89 = r4[22];
$i90 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc2(int)>(i165);
$i91 = $i89 + $i90;
r4[22] = $i91;
$i93 = r4[23];
$i94 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm2(int)>(i165);
$i95 = $i93 + $i94;
r4[23] = $i95;
$i97 = r4[24];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i98 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp2(int,java.lang.Integer)>(i165, $r9);
$i99 = $i97 + $i98;
r4[24] = $i99;
$i101 = r4[25];
$i102 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test_deop(int)>(i165);
$i103 = $i101 + $i102;
r4[25] = $i103;
$i105 = r4[26];
$i106 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb_deop(int)>(i165);
$i107 = $i105 + $i106;
r4[26] = $i107;
$i109 = r4[27];
$i110 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc_deop(int)>(i165);
$i111 = $i109 + $i110;
r4[27] = $i111;
$i113 = r4[28];
$i114 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testf_deop(int)>(i165);
$i115 = $i113 + $i114;
r4[28] = $i115;
$i117 = r4[29];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i118 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp_deop(int,java.lang.Integer)>(i165, $r10);
$i119 = $i117 + $i118;
r4[29] = $i119;
i165 = i165 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i165 < 12000 goto $i1 = r4[0];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i165 < 12000 goto $i1 = r4[0];
"->"Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (int)[1000];
i166 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i165 < 12000 goto $i1 = r4[0];
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = r4[0];
$i2 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple(int)>(i165);
$i3 = $i1 + $i2;
r4[0] = $i3;
$i5 = r4[1];
$i6 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb(int)>(i165);
$i7 = $i5 + $i6;
r4[1] = $i7;
$i9 = r4[2];
$i10 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec()>();
$i11 = $i9 + $i10;
r4[2] = $i11;
$i13 = r4[3];
$i14 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef(int)>(i165);
$i15 = $i13 + $i14;
r4[3] = $i15;
$i17 = r4[4];
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i18 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep(java.lang.Integer)>($r5);
$i19 = $i17 + $i18;
r4[4] = $i19;
$i21 = r4[5];
$i22 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple2(int)>(i165);
$i23 = $i21 + $i22;
r4[5] = $i23;
$i25 = r4[6];
$i26 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb2(int)>(i165);
$i27 = $i25 + $i26;
r4[6] = $i27;
$i29 = r4[7];
$i30 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec2(int)>(i165);
$i31 = $i29 + $i30;
r4[7] = $i31;
$i33 = r4[8];
$i34 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplem2(int)>(i165);
$i35 = $i33 + $i34;
r4[8] = $i35;
$i37 = r4[9];
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i38 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep2(int,java.lang.Integer)>(i165, $r6);
$i39 = $i37 + $i38;
r4[9] = $i39;
$i41 = r4[10];
$i42 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simple_deop(int)>(i165);
$i43 = $i41 + $i42;
r4[10] = $i43;
$i45 = r4[11];
$i46 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simpleb_deop(int)>(i165);
$i47 = $i45 + $i46;
r4[11] = $i47;
$i49 = r4[12];
$i50 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplec_deop(int)>(i165);
$i51 = $i49 + $i50;
r4[12] = $i51;
$i53 = r4[13];
$i54 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplef_deop(int)>(i165);
$i55 = $i53 + $i54;
r4[13] = $i55;
$i57 = r4[14];
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i58 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int simplep_deop(java.lang.Integer)>($r7);
$i59 = $i57 + $i58;
r4[14] = $i59;
$i61 = r4[15];
$i62 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test(int)>(i165);
$i63 = $i61 + $i62;
r4[15] = $i63;
$i65 = r4[16];
$i66 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb(int)>(i165);
$i67 = $i65 + $i66;
r4[16] = $i67;
$i69 = r4[17];
$i70 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc(int)>(i165);
$i71 = $i69 + $i70;
r4[17] = $i71;
$i73 = r4[18];
$i74 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm(int)>(i165);
$i75 = $i73 + $i74;
r4[18] = $i75;
$i77 = r4[19];
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i78 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp(int,java.lang.Integer)>(i165, $r8);
$i79 = $i77 + $i78;
r4[19] = $i79;
$i81 = r4[20];
$i82 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test2(int)>(i165);
$i83 = $i81 + $i82;
r4[20] = $i83;
$i85 = r4[21];
$i86 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb2(int)>(i165);
$i87 = $i85 + $i86;
r4[21] = $i87;
$i89 = r4[22];
$i90 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc2(int)>(i165);
$i91 = $i89 + $i90;
r4[22] = $i91;
$i93 = r4[23];
$i94 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testm2(int)>(i165);
$i95 = $i93 + $i94;
r4[23] = $i95;
$i97 = r4[24];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i98 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp2(int,java.lang.Integer)>(i165, $r9);
$i99 = $i97 + $i98;
r4[24] = $i99;
$i101 = r4[25];
$i102 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int test_deop(int)>(i165);
$i103 = $i101 + $i102;
r4[25] = $i103;
$i105 = r4[26];
$i106 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testb_deop(int)>(i165);
$i107 = $i105 + $i106;
r4[26] = $i107;
$i109 = r4[27];
$i110 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testc_deop(int)>(i165);
$i111 = $i109 + $i110;
r4[27] = $i111;
$i113 = r4[28];
$i114 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testf_deop(int)>(i165);
$i115 = $i113 + $i114;
r4[28] = $i115;
$i117 = r4[29];
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i165);
$i118 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int testp_deop(int,java.lang.Integer)>(i165, $r10);
$i119 = $i117 + $i118;
r4[29] = $i119;
i165 = i165 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
r36 = newarray (int)[1000];
i166 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i166 < 1000 goto r36[i166] = i166;
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
r36[i166] = i166;
i166 = i166 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i166 < 1000 goto r36[i166] = i166;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i166 < 1000 goto r36[i166] = i166;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
i167 = 0;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i166 < 1000 goto r36[i166] = i166;
"->"Block 7:
[preds: 8 ] [succs: 8 ]
r36[i166] = i166;
i166 = i166 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
i167 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i167 < 100 goto $i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
r4[30] = $i120;
$i121 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb(int[])>(r36);
r4[31] = $i121;
$i122 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc(int[])>(r36);
r4[32] = $i122;
$i123 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf(int[])>(r36);
r4[33] = $i123;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i124 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump(int[],java.lang.Integer)>(r36, $r11);
r4[34] = $i124;
$i125 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum2(int[])>(r36);
r4[35] = $i125;
$i126 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb2(int[])>(r36);
r4[36] = $i126;
$i127 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc2(int[])>(r36);
r4[37] = $i127;
$i128 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int summ2(int[])>(r36);
r4[38] = $i128;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i129 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump2(int[],java.lang.Integer)>(r36, $r12);
r4[39] = $i129;
$i130 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum_deop(int[])>(r36);
r4[40] = $i130;
$i131 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb_deop(int[])>(r36);
r4[41] = $i131;
$i132 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc_deop(int[])>(r36);
r4[42] = $i132;
$i133 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf_deop(int[])>(r36);
r4[43] = $i133;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i134 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump_deop(int[],java.lang.Integer)>(r36, $r13);
r4[44] = $i134;
$i135 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum()>();
r4[45] = $i135;
$i136 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb()>();
r4[46] = $i136;
$i137 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc()>();
r4[47] = $i137;
$i138 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf()>();
r4[48] = $i138;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i139 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump(java.lang.Integer)>($r14);
r4[49] = $i139;
$i140 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2()>();
r4[50] = $i140;
$i141 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2()>();
r4[51] = $i141;
$i142 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2()>();
r4[52] = $i142;
$i143 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2()>();
r4[53] = $i143;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i144 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2(java.lang.Integer)>($r15);
r4[54] = $i144;
$i145 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_deop()>();
r4[55] = $i145;
$i146 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_deop()>();
r4[56] = $i146;
$i147 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_deop()>();
r4[57] = $i147;
$i148 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_deop()>();
r4[58] = $i148;
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i149 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_deop(java.lang.Integer)>($r16);
r4[59] = $i149;
$i150 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_cond()>();
r4[60] = $i150;
$i151 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_cond()>();
r4[61] = $i151;
$i152 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_cond()>();
r4[62] = $i152;
$i153 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_cond()>();
r4[63] = $i153;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i154 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_cond(java.lang.Integer)>($r17);
r4[64] = $i154;
$i155 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2_cond()>();
r4[65] = $i155;
$i156 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2_cond()>();
r4[66] = $i156;
$i157 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2_cond()>();
r4[67] = $i157;
$i158 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2_cond()>();
r4[68] = $i158;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i159 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2_cond(java.lang.Integer)>($r18);
r4[69] = $i159;
i167 = i167 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i167 < 100 goto $i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i167 < 100 goto $i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
"->"Block 12:
[preds: 11 ] [succs: 16 ]
i168 = 0;
i169 = 0;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i167 < 100 goto $i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$i120 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum(int[])>(r36);
r4[30] = $i120;
$i121 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb(int[])>(r36);
r4[31] = $i121;
$i122 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc(int[])>(r36);
r4[32] = $i122;
$i123 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf(int[])>(r36);
r4[33] = $i123;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i124 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump(int[],java.lang.Integer)>(r36, $r11);
r4[34] = $i124;
$i125 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum2(int[])>(r36);
r4[35] = $i125;
$i126 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb2(int[])>(r36);
r4[36] = $i126;
$i127 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc2(int[])>(r36);
r4[37] = $i127;
$i128 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int summ2(int[])>(r36);
r4[38] = $i128;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i129 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump2(int[],java.lang.Integer)>(r36, $r12);
r4[39] = $i129;
$i130 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sum_deop(int[])>(r36);
r4[40] = $i130;
$i131 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumb_deop(int[])>(r36);
r4[41] = $i131;
$i132 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumc_deop(int[])>(r36);
r4[42] = $i132;
$i133 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sumf_deop(int[])>(r36);
r4[43] = $i133;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i134 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int sump_deop(int[],java.lang.Integer)>(r36, $r13);
r4[44] = $i134;
$i135 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum()>();
r4[45] = $i135;
$i136 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb()>();
r4[46] = $i136;
$i137 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc()>();
r4[47] = $i137;
$i138 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf()>();
r4[48] = $i138;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i139 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump(java.lang.Integer)>($r14);
r4[49] = $i139;
$i140 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2()>();
r4[50] = $i140;
$i141 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2()>();
r4[51] = $i141;
$i142 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2()>();
r4[52] = $i142;
$i143 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2()>();
r4[53] = $i143;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i144 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2(java.lang.Integer)>($r15);
r4[54] = $i144;
$i145 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_deop()>();
r4[55] = $i145;
$i146 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_deop()>();
r4[56] = $i146;
$i147 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_deop()>();
r4[57] = $i147;
$i148 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_deop()>();
r4[58] = $i148;
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i149 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_deop(java.lang.Integer)>($r16);
r4[59] = $i149;
$i150 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum_cond()>();
r4[60] = $i150;
$i151 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb_cond()>();
r4[61] = $i151;
$i152 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc_cond()>();
r4[62] = $i152;
$i153 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumf_cond()>();
r4[63] = $i153;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i154 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump_cond(java.lang.Integer)>($r17);
r4[64] = $i154;
$i155 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sum2_cond()>();
r4[65] = $i155;
$i156 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumb2_cond()>();
r4[66] = $i156;
$i157 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sumc2_cond()>();
r4[67] = $i157;
$i158 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_summ2_cond()>();
r4[68] = $i158;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$i159 = staticinvoke <compiler.eliminateAutobox.TestIntBoxing: int remi_sump2_cond(java.lang.Integer)>($r18);
r4[69] = $i159;
i167 = i167 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 16 ]
i168 = 0;
i169 = 0;
goto [?= (branch)];
"->"Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i169 < 70 goto $i161 = r4[i169];
";
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$i161 = r4[i169];
$i160 = r3[i169];
if $i161 == $i160 goto i169 = i169 + 1;
"->"Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i169];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$i162 = r4[i169];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i162);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$i163 = r3[i169];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i163);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i168 = i168 + 1;
";
    "Block 13:
[preds: 16 ] [succs: 14 15 ]
$i161 = r4[i169];
$i160 = r3[i169];
if $i161 == $i160 goto i169 = i169 + 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 ]
i169 = i169 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
$r21 = <java.lang.System: java.io.PrintStream err>;
$r19 = new java.lang.StringBuilder;
$r20 = r1[i169];
$r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
$r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$i162 = r4[i169];
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i162);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$i163 = r3[i169];
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i163);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
i168 = i168 + 1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 ]
i169 = i169 + 1;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 ]
i169 = i169 + 1;
"->"Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i169 < 70 goto $i161 = r4[i169];
";
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i169 < 70 goto $i161 = r4[i169];
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
if i168 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 16:
[preds: 12 15 ] [succs: 17 13 ]
if i169 < 70 goto $i161 = r4[i169];
"->"Block 13:
[preds: 16 ] [succs: 14 15 ]
$i161 = r4[i169];
$i160 = r3[i169];
if $i161 == $i160 goto i169 = i169 + 1;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i168 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"->"Block 18:
[preds: 17 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
$r29 = new java.lang.StringBuilder;
specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed \");
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i168);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" tests.\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);
$r34 = new java.lang.InternalError;
specialinvoke $r34.<java.lang.InternalError: void <init>()>();
throw $r34;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
if i168 <= 0 goto $r28 = <java.lang.System: java.io.PrintStream out>;
"->"Block 19:
[preds: 17 ] [succs: ]
$r28 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Passed.\");
return;
";
}
