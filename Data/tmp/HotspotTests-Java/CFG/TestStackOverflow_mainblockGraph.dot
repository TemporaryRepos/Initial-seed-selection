digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 15 ]
r7 := @parameter0: java.lang.String[];
r8 = null;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
"
    "Block 2:
[preds: 1 ] [succs: 12 13 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);
"
    "Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
"
    "Block 4:
[preds: 3 ] [succs: 12 13 5 ]
$r0[0] = r8;
"
    "Block 5:
[preds: 4 ] [succs: 12 13 6 ]
$r0[1] = r8;
"
    "Block 6:
[preds: 5 ] [succs: 12 13 7 ]
$r0[2] = r8;
"
    "Block 7:
[preds: 6 ] [succs: 12 13 8 ]
$r0[3] = r8;
"
    "Block 8:
[preds: 7 ] [succs: 12 13 9 ]
$r0[4] = r8;
"
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
r1 = $r0;
"
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
r8 = r1;
"
    "Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= i1 = i1 + 1];
"
    "Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
"
    "Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
"
    "Block 14:
[preds: 11 ] [succs: 15 ]
i1 = i1 + 1;
"
    "Block 15:
[preds: 0 14 ] [succs: 16 1 ]
if i1 < 1000000 goto $i0 = i1 % 10000;
"
    "Block 16:
[preds: 15 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 15 ]
r7 := @parameter0: java.lang.String[];
r8 = null;
i1 = 0;
goto [?= (branch)];
"->"Block 15:
[preds: 0 14 ] [succs: 16 1 ]
if i1 < 1000000 goto $i0 = i1 % 10000;
";
    "Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
"->"Block 2:
[preds: 1 ] [succs: 12 13 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);
";
    "Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
"->"Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
";
    "Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 12 13 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 12 13 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 12 13 3 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);
"->"Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
";
    "Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 3:
[preds: 1 2 ] [succs: 12 13 4 ]
$r0 = newarray (java.lang.Object)[5];
"->"Block 4:
[preds: 3 ] [succs: 12 13 5 ]
$r0[0] = r8;
";
    "Block 4:
[preds: 3 ] [succs: 12 13 5 ]
$r0[0] = r8;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 4:
[preds: 3 ] [succs: 12 13 5 ]
$r0[0] = r8;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 4:
[preds: 3 ] [succs: 12 13 5 ]
$r0[0] = r8;
"->"Block 5:
[preds: 4 ] [succs: 12 13 6 ]
$r0[1] = r8;
";
    "Block 5:
[preds: 4 ] [succs: 12 13 6 ]
$r0[1] = r8;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 5:
[preds: 4 ] [succs: 12 13 6 ]
$r0[1] = r8;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 5:
[preds: 4 ] [succs: 12 13 6 ]
$r0[1] = r8;
"->"Block 6:
[preds: 5 ] [succs: 12 13 7 ]
$r0[2] = r8;
";
    "Block 6:
[preds: 5 ] [succs: 12 13 7 ]
$r0[2] = r8;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 6:
[preds: 5 ] [succs: 12 13 7 ]
$r0[2] = r8;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 6:
[preds: 5 ] [succs: 12 13 7 ]
$r0[2] = r8;
"->"Block 7:
[preds: 6 ] [succs: 12 13 8 ]
$r0[3] = r8;
";
    "Block 7:
[preds: 6 ] [succs: 12 13 8 ]
$r0[3] = r8;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 7:
[preds: 6 ] [succs: 12 13 8 ]
$r0[3] = r8;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 7:
[preds: 6 ] [succs: 12 13 8 ]
$r0[3] = r8;
"->"Block 8:
[preds: 7 ] [succs: 12 13 9 ]
$r0[4] = r8;
";
    "Block 8:
[preds: 7 ] [succs: 12 13 9 ]
$r0[4] = r8;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 8:
[preds: 7 ] [succs: 12 13 9 ]
$r0[4] = r8;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 8:
[preds: 7 ] [succs: 12 13 9 ]
$r0[4] = r8;
"->"Block 9:
[preds: 8 ] [succs: 12 13 10 ]
r1 = $r0;
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
r1 = $r0;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
r1 = $r0;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
r1 = $r0;
"->"Block 10:
[preds: 9 ] [succs: 12 13 11 ]
r8 = r1;
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
r8 = r1;
"->"Block 12:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r5 := @caughtexception;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"Caught OutOfMemoryError.\");
return;
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
r8 = r1;
"->"Block 13:
[preds: 1 2 3 4 5 6 7 8 9 10 ] [succs: ]
$r3 := @caughtexception;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Caught StackOverflowError.\");
return;
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
r8 = r1;
"->"Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= i1 = i1 + 1];
";
    "Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= i1 = i1 + 1];
"->"Block 14:
[preds: 11 ] [succs: 15 ]
i1 = i1 + 1;
";
    "Block 14:
[preds: 11 ] [succs: 15 ]
i1 = i1 + 1;
"->"Block 15:
[preds: 0 14 ] [succs: 16 1 ]
if i1 < 1000000 goto $i0 = i1 % 10000;
";
    "Block 15:
[preds: 0 14 ] [succs: 16 1 ]
if i1 < 1000000 goto $i0 = i1 % 10000;
"->"Block 16:
[preds: 15 ] [succs: ]
return;
";
    "Block 15:
[preds: 0 14 ] [succs: 16 1 ]
if i1 < 1000000 goto $i0 = i1 % 10000;
"->"Block 1:
[preds: 15 ] [succs: 2 3 12 13 ]
$i0 = i1 % 10000;
if $i0 != 0 goto $r0 = newarray (java.lang.Object)[5];
";
}
