digraph "unitGraph" {
    "r2 := @parameter0: byte[]"
    "r1 := @parameter1: java.lang.String"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = newarray (java.lang.Object)[2]"
    "$r0[0] = r1"
    "$i0 = lengthof r2"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r0[1] = $r4"
    "virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%s [%d]: \", $r0)"
    "i5 = 0"
    "goto [?= $i1 = lengthof r2]"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "$r6 = newarray (java.lang.Object)[1]"
    "$b3 = r2[i5]"
    "$i4 = $b3 & 255"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "$r6[0] = $r8"
    "virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%02x \", $r6)"
    "i5 = i5 + 1"
    "$i1 = lengthof r2"
    "$i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 64)"
    "if i5 < $i2 goto $r7 = <java.lang.System: java.io.PrintStream out>"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r10.<java.io.PrintStream: void println()>()"
    "return"
    "r2 := @parameter0: byte[]"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r0 = newarray (java.lang.Object)[2]";
    "$r0 = newarray (java.lang.Object)[2]"->"$r0[0] = r1";
    "$r0[0] = r1"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r0[1] = $r4";
    "$r0[1] = $r4"->"virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%s [%d]: \", $r0)";
    "virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%s [%d]: \", $r0)"->"i5 = 0";
    "i5 = 0"->"goto [?= $i1 = lengthof r2]";
    "goto [?= $i1 = lengthof r2]"->"$i1 = lengthof r2";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"$r6 = newarray (java.lang.Object)[1]";
    "$r6 = newarray (java.lang.Object)[1]"->"$b3 = r2[i5]";
    "$b3 = r2[i5]"->"$i4 = $b3 & 255";
    "$i4 = $b3 & 255"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"$r6[0] = $r8";
    "$r6[0] = $r8"->"virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%02x \", $r6)";
    "virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(\"%02x \", $r6)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i1 = lengthof r2";
    "$i1 = lengthof r2"->"$i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 64)";
    "$i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 64)"->"if i5 < $i2 goto $r7 = <java.lang.System: java.io.PrintStream out>";
    "if i5 < $i2 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "if i5 < $i2 goto $r7 = <java.lang.System: java.io.PrintStream out>"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r10.<java.io.PrintStream: void println()>()";
    "virtualinvoke $r10.<java.io.PrintStream: void println()>()"->"return";
}
