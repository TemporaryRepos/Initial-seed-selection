digraph "unitGraph" {
    "i0 = 0"
    "goto [?= (branch)]"
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"
    "i1 = 0"
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"
    "r2.<compiler.c1.Test7103261: long l> = 0L"
    "r2.<compiler.c1.Test7103261: int i> = 0"
    "r2.<compiler.c1.Test7103261: float f> = 0.0F"
    "r2.<compiler.c1.Test7103261: double d> = 0.0"
    "r2.<compiler.c1.Test7103261: byte b> = 0"
    "r2.<compiler.c1.Test7103261: char c> = 0"
    "r2.<compiler.c1.Test7103261: short s> = 0"
    "r2.<compiler.c1.Test7103261: boolean z> = 0"
    "r2.<compiler.c1.Test7103261: java.lang.Object o> = null"
    "$r0 = new java.lang.InternalError"
    "specialinvoke $r0.<java.lang.InternalError: void <init>()>()"
    "throw $r0"
    "if i1 != 90000 goto i1 = i1 + 1"
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"
    "i1 = i1 + 1"
    "if i1 < 100000 goto (branch)"
    "goto [?= i0 = i0 + 1]"
    "$r1 := @caughtexception"
    "i0 = i0 + 1"
    "if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"
    "return"
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"i1 = 0";
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"$r1 := @caughtexception";
    "i1 = 0"->"goto [?= (branch)]";
    "i1 = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 < 100000 goto (branch)";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: long l> = 0L";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: int i> = 0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: float f> = 0.0F";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: double d> = 0.0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: byte b> = 0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: char c> = 0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: short s> = 0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: boolean z> = 0";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"r2.<compiler.c1.Test7103261: java.lang.Object o> = null";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"$r0 = new java.lang.InternalError";
    "tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: long l> = 0L"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: long l> = 0L"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: int i> = 0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: int i> = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: float f> = 0.0F"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: float f> = 0.0F"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: double d> = 0.0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: double d> = 0.0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: byte b> = 0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: byte b> = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: char c> = 0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: char c> = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: short s> = 0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: short s> = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: boolean z> = 0"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: boolean z> = 0"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "r2.<compiler.c1.Test7103261: java.lang.Object o> = null"->"goto [?= (branch)]";
    "r2.<compiler.c1.Test7103261: java.lang.Object o> = null"->"$r1 := @caughtexception";
    "goto [?= (branch)]"->"if i1 != 90000 goto i1 = i1 + 1";
    "goto [?= (branch)]"->"$r1 := @caughtexception";
    "$r0 = new java.lang.InternalError"->"specialinvoke $r0.<java.lang.InternalError: void <init>()>()";
    "$r0 = new java.lang.InternalError"->"$r1 := @caughtexception";
    "specialinvoke $r0.<java.lang.InternalError: void <init>()>()"->"throw $r0";
    "specialinvoke $r0.<java.lang.InternalError: void <init>()>()"->"$r1 := @caughtexception";
    "throw $r0"->"$r1 := @caughtexception";
    "if i1 != 90000 goto i1 = i1 + 1"->"r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>";
    "if i1 != 90000 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "if i1 != 90000 goto i1 = i1 + 1"->"$r1 := @caughtexception";
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"i1 = i1 + 1";
    "r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"$r1 := @caughtexception";
    "i1 = i1 + 1"->"if i1 < 100000 goto (branch)";
    "i1 = i1 + 1"->"$r1 := @caughtexception";
    "if i1 < 100000 goto (branch)"->"goto [?= i0 = i0 + 1]";
    "if i1 < 100000 goto (branch)"->"tableswitch(i0) {     case 0: goto r2.<compiler.c1.Test7103261: long l> = 0L;     case 1: goto r2.<compiler.c1.Test7103261: int i> = 0;     case 2: goto r2.<compiler.c1.Test7103261: float f> = 0.0F;     case 3: goto r2.<compiler.c1.Test7103261: double d> = 0.0;     case 4: goto r2.<compiler.c1.Test7103261: byte b> = 0;     case 5: goto r2.<compiler.c1.Test7103261: char c> = 0;     case 6: goto r2.<compiler.c1.Test7103261: short s> = 0;     case 7: goto r2.<compiler.c1.Test7103261: boolean z> = 0;     case 8: goto r2.<compiler.c1.Test7103261: java.lang.Object o> = null;     default: goto $r0 = new java.lang.InternalError; }";
    "if i1 < 100000 goto (branch)"->"$r1 := @caughtexception";
    "goto [?= i0 = i0 + 1]"->"i0 = i0 + 1";
    "$r1 := @caughtexception"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"return";
    "if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "if i0 < 9 goto r2 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"$r1 := @caughtexception";
}
