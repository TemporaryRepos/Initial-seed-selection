digraph "unitGraph" {
    "z0 := @parameter0: boolean"
    "i5 = 0"
    "goto [?= (branch)]"
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>"
    "i6 = 0"
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"
    "$l4 = r4.<compiler.c1.Test7103261: long l>"
    "r3.<compiler.c1.Test7103261: long l> = $l4"
    "$i3 = r4.<compiler.c1.Test7103261: int i>"
    "r3.<compiler.c1.Test7103261: int i> = $i3"
    "$f0 = r4.<compiler.c1.Test7103261: float f>"
    "r3.<compiler.c1.Test7103261: float f> = $f0"
    "$d0 = r4.<compiler.c1.Test7103261: double d>"
    "r3.<compiler.c1.Test7103261: double d> = $d0"
    "$b2 = r4.<compiler.c1.Test7103261: byte b>"
    "r3.<compiler.c1.Test7103261: byte b> = $b2"
    "$c1 = r4.<compiler.c1.Test7103261: char c>"
    "r3.<compiler.c1.Test7103261: char c> = $c1"
    "$s0 = r4.<compiler.c1.Test7103261: short s>"
    "r3.<compiler.c1.Test7103261: short s> = $s0"
    "$z1 = r4.<compiler.c1.Test7103261: boolean z>"
    "r3.<compiler.c1.Test7103261: boolean z> = $z1"
    "$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>"
    "r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0"
    "$r1 = new java.lang.InternalError"
    "specialinvoke $r1.<java.lang.InternalError: void <init>()>()"
    "throw $r1"
    "if i6 != 90000 goto i6 = i6 + 1"
    "if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"
    "goto [?= i6 = i6 + 1]"
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"
    "i6 = i6 + 1"
    "if i6 < 100000 goto (branch)"
    "goto [?= i5 = i5 + 1]"
    "$r2 := @caughtexception"
    "i5 = i5 + 1"
    "if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"
    "return"
    "z0 := @parameter0: boolean"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>";
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"$r2 := @caughtexception";
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>"->"i6 = 0";
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value2>"->"$r2 := @caughtexception";
    "i6 = 0"->"goto [?= (branch)]";
    "i6 = 0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 < 100000 goto (branch)";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$l4 = r4.<compiler.c1.Test7103261: long l>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$i3 = r4.<compiler.c1.Test7103261: int i>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$f0 = r4.<compiler.c1.Test7103261: float f>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$d0 = r4.<compiler.c1.Test7103261: double d>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$b2 = r4.<compiler.c1.Test7103261: byte b>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$c1 = r4.<compiler.c1.Test7103261: char c>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$s0 = r4.<compiler.c1.Test7103261: short s>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$z1 = r4.<compiler.c1.Test7103261: boolean z>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$r1 = new java.lang.InternalError";
    "tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }"->"$r2 := @caughtexception";
    "$l4 = r4.<compiler.c1.Test7103261: long l>"->"r3.<compiler.c1.Test7103261: long l> = $l4";
    "$l4 = r4.<compiler.c1.Test7103261: long l>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: long l> = $l4"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: long l> = $l4"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$i3 = r4.<compiler.c1.Test7103261: int i>"->"r3.<compiler.c1.Test7103261: int i> = $i3";
    "$i3 = r4.<compiler.c1.Test7103261: int i>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: int i> = $i3"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: int i> = $i3"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$f0 = r4.<compiler.c1.Test7103261: float f>"->"r3.<compiler.c1.Test7103261: float f> = $f0";
    "$f0 = r4.<compiler.c1.Test7103261: float f>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: float f> = $f0"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: float f> = $f0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$d0 = r4.<compiler.c1.Test7103261: double d>"->"r3.<compiler.c1.Test7103261: double d> = $d0";
    "$d0 = r4.<compiler.c1.Test7103261: double d>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: double d> = $d0"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: double d> = $d0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$b2 = r4.<compiler.c1.Test7103261: byte b>"->"r3.<compiler.c1.Test7103261: byte b> = $b2";
    "$b2 = r4.<compiler.c1.Test7103261: byte b>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: byte b> = $b2"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: byte b> = $b2"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$c1 = r4.<compiler.c1.Test7103261: char c>"->"r3.<compiler.c1.Test7103261: char c> = $c1";
    "$c1 = r4.<compiler.c1.Test7103261: char c>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: char c> = $c1"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: char c> = $c1"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$s0 = r4.<compiler.c1.Test7103261: short s>"->"r3.<compiler.c1.Test7103261: short s> = $s0";
    "$s0 = r4.<compiler.c1.Test7103261: short s>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: short s> = $s0"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: short s> = $s0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$z1 = r4.<compiler.c1.Test7103261: boolean z>"->"r3.<compiler.c1.Test7103261: boolean z> = $z1";
    "$z1 = r4.<compiler.c1.Test7103261: boolean z>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: boolean z> = $z1"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: boolean z> = $z1"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>"->"r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0";
    "$r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>"->"$r2 := @caughtexception";
    "r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0"->"goto [?= (branch)]";
    "r3.<compiler.c1.Test7103261: java.lang.Object o> = $r0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i6 != 90000 goto i6 = i6 + 1";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$r1 = new java.lang.InternalError"->"specialinvoke $r1.<java.lang.InternalError: void <init>()>()";
    "$r1 = new java.lang.InternalError"->"$r2 := @caughtexception";
    "specialinvoke $r1.<java.lang.InternalError: void <init>()>()"->"throw $r1";
    "specialinvoke $r1.<java.lang.InternalError: void <init>()>()"->"$r2 := @caughtexception";
    "throw $r1"->"$r2 := @caughtexception";
    "if i6 != 90000 goto i6 = i6 + 1"->"if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>";
    "if i6 != 90000 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "if i6 != 90000 goto i6 = i6 + 1"->"$r2 := @caughtexception";
    "if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>";
    "if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>";
    "if z0 == 0 goto r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"$r2 := @caughtexception";
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"goto [?= i6 = i6 + 1]";
    "r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"$r2 := @caughtexception";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "goto [?= i6 = i6 + 1]"->"$r2 := @caughtexception";
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"i6 = i6 + 1";
    "r4 = <compiler.c1.Test7103261: compiler.c1.Test7103261 null_value>"->"$r2 := @caughtexception";
    "i6 = i6 + 1"->"if i6 < 100000 goto (branch)";
    "i6 = i6 + 1"->"$r2 := @caughtexception";
    "if i6 < 100000 goto (branch)"->"goto [?= i5 = i5 + 1]";
    "if i6 < 100000 goto (branch)"->"tableswitch(i5) {     case 0: goto $l4 = r4.<compiler.c1.Test7103261: long l>;     case 1: goto $i3 = r4.<compiler.c1.Test7103261: int i>;     case 2: goto $f0 = r4.<compiler.c1.Test7103261: float f>;     case 3: goto $d0 = r4.<compiler.c1.Test7103261: double d>;     case 4: goto $b2 = r4.<compiler.c1.Test7103261: byte b>;     case 5: goto $c1 = r4.<compiler.c1.Test7103261: char c>;     case 6: goto $s0 = r4.<compiler.c1.Test7103261: short s>;     case 7: goto $z1 = r4.<compiler.c1.Test7103261: boolean z>;     case 8: goto $r0 = r4.<compiler.c1.Test7103261: java.lang.Object o>;     default: goto $r1 = new java.lang.InternalError; }";
    "if i6 < 100000 goto (branch)"->"$r2 := @caughtexception";
    "goto [?= i5 = i5 + 1]"->"i5 = i5 + 1";
    "$r2 := @caughtexception"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"return";
    "if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>";
    "if i5 < 9 goto r3 = <compiler.c1.Test7103261: compiler.c1.Test7103261 nonnull_value>"->"$r2 := @caughtexception";
}
