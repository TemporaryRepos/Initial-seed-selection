digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
i0 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
i0 = i0 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A;
specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>();
r7[0] = $r2;
z0 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= (branch)];
"
    "Block 6:
[preds: 3 4 ] [succs: 7 ]
$r5 := @caughtexception;
z0 = 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if z0 != 0 goto return;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: ArrayStoreException not thrown\");
throw $r4;
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
i0 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
i0 = i0 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A;
specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>();
r7[0] = $r2;
z0 = 0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i0 < 20000 goto staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r0);
i0 = i0 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A;
specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>();
r7[0] = $r2;
z0 = 0;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
r7 = newarray (compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A)[20];
$r2 = new compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A;
specialinvoke $r2.<compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A: void <init>()>();
r7[0] = $r2;
z0 = 0;
"->"Block 6:
[preds: 3 4 ] [succs: 7 ]
$r5 := @caughtexception;
z0 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <compiler.arraycopy.TestArraysCopyOfNoTypeCheck: compiler.arraycopy.TestArraysCopyOfNoTypeCheck$B[] test(compiler.arraycopy.TestArraysCopyOfNoTypeCheck$A[])>(r7);
"->"Block 6:
[preds: 3 4 ] [succs: 7 ]
$r5 := @caughtexception;
z0 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= (branch)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if z0 != 0 goto return;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 ]
$r5 := @caughtexception;
z0 = 1;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if z0 != 0 goto return;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if z0 != 0 goto return;
"->"Block 8:
[preds: 7 ] [succs: ]
$r4 = new java.lang.RuntimeException;
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TEST FAILED: ArrayStoreException not thrown\");
throw $r4;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if z0 != 0 goto return;
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
}
