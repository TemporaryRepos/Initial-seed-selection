digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "<compiler.loopopts.superword.TestBestAlign: int limit> = 64"
    "$r0 = newarray (boolean)[8]"
    "<compiler.loopopts.superword.TestBestAlign: boolean[] boolArray> = $r0"
    "$i0 = <compiler.loopopts.superword.TestBestAlign: int limit>"
    "$i1 = $i0 + 4"
    "$r1 = newarray (int)[$i1]"
    "<compiler.loopopts.superword.TestBestAlign: int[] intArray> = $r1"
    "i3 = 0"
    "goto [?= (branch)]"
    "$i2 = i3 % 1000000"
    "if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3)"
    "staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()"
    "i3 = i3 + 1"
    "if i3 < 10000000 goto $i2 = i3 % 1000000"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"<compiler.loopopts.superword.TestBestAlign: int limit> = 64";
    "<compiler.loopopts.superword.TestBestAlign: int limit> = 64"->"$r0 = newarray (boolean)[8]";
    "$r0 = newarray (boolean)[8]"->"<compiler.loopopts.superword.TestBestAlign: boolean[] boolArray> = $r0";
    "<compiler.loopopts.superword.TestBestAlign: boolean[] boolArray> = $r0"->"$i0 = <compiler.loopopts.superword.TestBestAlign: int limit>";
    "$i0 = <compiler.loopopts.superword.TestBestAlign: int limit>"->"$i1 = $i0 + 4";
    "$i1 = $i0 + 4"->"$r1 = newarray (int)[$i1]";
    "$r1 = newarray (int)[$i1]"->"<compiler.loopopts.superword.TestBestAlign: int[] intArray> = $r1";
    "<compiler.loopopts.superword.TestBestAlign: int[] intArray> = $r1"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 10000000 goto $i2 = i3 % 1000000";
    "$i2 = i3 % 1000000"->"if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()";
    "if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if $i2 != 0 goto staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()"->"staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i3)"->"staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()";
    "staticinvoke <compiler.loopopts.superword.TestBestAlign: void clear()>()"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 10000000 goto $i2 = i3 % 1000000";
    "if i3 < 10000000 goto $i2 = i3 % 1000000"->"return";
    "if i3 < 10000000 goto $i2 = i3 % 1000000"->"$i2 = i3 % 1000000";
}
