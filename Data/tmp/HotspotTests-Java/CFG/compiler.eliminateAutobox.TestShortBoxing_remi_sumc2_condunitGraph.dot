digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestShortBoxing: java.lang.Short ibc>"
    "r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(1)"
    "i12 = 0"
    "goto [?= (branch)]"
    "$i0 = i12 & 1"
    "if $i0 != 0 goto $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"
    "$s4 = virtualinvoke r1.<java.lang.Short: short shortValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestShortBoxing: java.lang.Short ibc>"
    "$s5 = virtualinvoke $r0.<java.lang.Short: short shortValue()>()"
    "$i6 = $s4 + $s5"
    "$s7 = (short) $i6"
    "r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s7)"
    "goto [?= i12 = i12 + 1]"
    "$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"
    "$i2 = $s1 + 2"
    "$s3 = (short) $i2"
    "r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)"
    "i12 = i12 + 1"
    "if i12 < 1000 goto $i0 = i12 & 1"
    "$s8 = virtualinvoke r1.<java.lang.Short: short shortValue()>()"
    "$s9 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"
    "$i10 = $s8 + $s9"
    "$s11 = (short) $i10"
    "return $s11"
    "r1 = <compiler.eliminateAutobox.TestShortBoxing: java.lang.Short ibc>"->"r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(1)";
    "r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(1)"->"i12 = 0";
    "i12 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 < 1000 goto $i0 = i12 & 1";
    "$i0 = i12 & 1"->"if $i0 != 0 goto $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()";
    "if $i0 != 0 goto $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"$s4 = virtualinvoke r1.<java.lang.Short: short shortValue()>()";
    "if $i0 != 0 goto $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()";
    "$s4 = virtualinvoke r1.<java.lang.Short: short shortValue()>()"->"$r0 = <compiler.eliminateAutobox.TestShortBoxing: java.lang.Short ibc>";
    "$r0 = <compiler.eliminateAutobox.TestShortBoxing: java.lang.Short ibc>"->"$s5 = virtualinvoke $r0.<java.lang.Short: short shortValue()>()";
    "$s5 = virtualinvoke $r0.<java.lang.Short: short shortValue()>()"->"$i6 = $s4 + $s5";
    "$i6 = $s4 + $s5"->"$s7 = (short) $i6";
    "$s7 = (short) $i6"->"r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s7)";
    "r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s7)"->"goto [?= i12 = i12 + 1]";
    "goto [?= i12 = i12 + 1]"->"i12 = i12 + 1";
    "$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"$i2 = $s1 + 2";
    "$i2 = $s1 + 2"->"$s3 = (short) $i2";
    "$s3 = (short) $i2"->"r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)";
    "r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3)"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"if i12 < 1000 goto $i0 = i12 & 1";
    "if i12 < 1000 goto $i0 = i12 & 1"->"$s8 = virtualinvoke r1.<java.lang.Short: short shortValue()>()";
    "if i12 < 1000 goto $i0 = i12 & 1"->"$i0 = i12 & 1";
    "$s8 = virtualinvoke r1.<java.lang.Short: short shortValue()>()"->"$s9 = virtualinvoke r2.<java.lang.Short: short shortValue()>()";
    "$s9 = virtualinvoke r2.<java.lang.Short: short shortValue()>()"->"$i10 = $s8 + $s9";
    "$i10 = $s8 + $s9"->"$s11 = (short) $i10";
    "$s11 = (short) $i10"->"return $s11";
}
