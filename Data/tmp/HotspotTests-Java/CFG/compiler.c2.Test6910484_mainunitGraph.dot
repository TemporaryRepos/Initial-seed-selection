digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "l1 = 0L"
    "i2 = 0"
    "goto [?= (branch)]"
    "l1 = l1 + 1L"
    "i0 = staticinvoke <compiler.c2.Test6910484: int test(int)>(255)"
    "if i0 == 112 goto i2 = i2 + 1"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected 112, but got \")"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" after iteration \")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "i2 = i2 + 1"
    "if i2 < 11000 goto l1 = l1 + 1L"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"l1 = 0L";
    "l1 = 0L"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 11000 goto l1 = l1 + 1L";
    "l1 = l1 + 1L"->"i0 = staticinvoke <compiler.c2.Test6910484: int test(int)>(255)";
    "i0 = staticinvoke <compiler.c2.Test6910484: int test(int)>(255)"->"if i0 == 112 goto i2 = i2 + 1";
    "if i0 == 112 goto i2 = i2 + 1"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i0 == 112 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected 112, but got \")";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"expected 112, but got \")"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" after iteration \")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" after iteration \")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 11000 goto l1 = l1 + 1L";
    "if i2 < 11000 goto l1 = l1 + 1L"->"return";
    "if i2 < 11000 goto l1 = l1 + 1L"->"l1 = l1 + 1L";
}
