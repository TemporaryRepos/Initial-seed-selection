digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 16 ]
r15 := @parameter0: java.lang.String[];
s0 = 1000;
$i1 = s0 * 64;
r0 = newarray (boolean)[$i1];
r1 = newarray (long)[s0];
r2 = newarray (long)[s0];
i15 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 16 ] [succs: 9 ]
i16 = 0;
goto [?= (branch)];
"
    "Block 2:
[preds: 9 ] [succs: 7 ]
l2 = 0L;
i17 = 0;
goto [?= (branch)];
"
    "Block 3:
[preds: 7 ] [succs: 4 5 ]
$i3 = i16 * 64;
$i7 = $i3 + i17;
$l4 = 1L << i17;
$l5 = l2 & $l4;
$b6 = $l5 cmp 0L;
if $b6 == 0 goto $z0 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z0 = 1;
goto [?= r0[$i7] = $z0];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z0 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
r0[$i7] = $z0;
i17 = i17 + 1;
"
    "Block 7:
[preds: 2 6 ] [succs: 8 3 ]
if i17 < 64 goto $i3 = i16 * 64;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
r1[i16] = 0L;
r2[i16] = l2;
i16 = i16 + 1;
"
    "Block 9:
[preds: 1 8 ] [succs: 10 2 ]
if i16 < s0 goto l2 = 0L;
"
    "Block 10:
[preds: 9 ] [succs: 14 ]
$i8 = lengthof r1;
$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8);
$i9 = lengthof r0;
staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9);
i18 = 0;
goto [?= (branch)];
"
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
$l11 = r1[i18];
$l10 = r2[i18];
$b12 = $l11 cmp $l10;
if $b12 == 0 goto i18 = i18 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r5 = new java.lang.InternalError;
$r6 = new java.lang.StringBuilder;
$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18);
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$l13 = r1[i18];
$r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$l14 = r2[i18];
$r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r14);
throw $r5;
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
i18 = i18 + 1;
"
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i18 < s0 goto $l11 = r1[i18];
"
    "Block 15:
[preds: 14 ] [succs: 16 ]
i15 = i15 + 1;
"
    "Block 16:
[preds: 0 15 ] [succs: 17 1 ]
if i15 < 2000 goto i16 = 0;
"
    "Block 17:
[preds: 16 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 16 ]
r15 := @parameter0: java.lang.String[];
s0 = 1000;
$i1 = s0 * 64;
r0 = newarray (boolean)[$i1];
r1 = newarray (long)[s0];
r2 = newarray (long)[s0];
i15 = 0;
goto [?= (branch)];
"->"Block 16:
[preds: 0 15 ] [succs: 17 1 ]
if i15 < 2000 goto i16 = 0;
";
    "Block 1:
[preds: 16 ] [succs: 9 ]
i16 = 0;
goto [?= (branch)];
"->"Block 9:
[preds: 1 8 ] [succs: 10 2 ]
if i16 < s0 goto l2 = 0L;
";
    "Block 2:
[preds: 9 ] [succs: 7 ]
l2 = 0L;
i17 = 0;
goto [?= (branch)];
"->"Block 7:
[preds: 2 6 ] [succs: 8 3 ]
if i17 < 64 goto $i3 = i16 * 64;
";
    "Block 3:
[preds: 7 ] [succs: 4 5 ]
$i3 = i16 * 64;
$i7 = $i3 + i17;
$l4 = 1L << i17;
$l5 = l2 & $l4;
$b6 = $l5 cmp 0L;
if $b6 == 0 goto $z0 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z0 = 1;
goto [?= r0[$i7] = $z0];
";
    "Block 3:
[preds: 7 ] [succs: 4 5 ]
$i3 = i16 * 64;
$i7 = $i3 + i17;
$l4 = 1L << i17;
$l5 = l2 & $l4;
$b6 = $l5 cmp 0L;
if $b6 == 0 goto $z0 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z0 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z0 = 1;
goto [?= r0[$i7] = $z0];
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
r0[$i7] = $z0;
i17 = i17 + 1;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z0 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
r0[$i7] = $z0;
i17 = i17 + 1;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
r0[$i7] = $z0;
i17 = i17 + 1;
"->"Block 7:
[preds: 2 6 ] [succs: 8 3 ]
if i17 < 64 goto $i3 = i16 * 64;
";
    "Block 7:
[preds: 2 6 ] [succs: 8 3 ]
if i17 < 64 goto $i3 = i16 * 64;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
r1[i16] = 0L;
r2[i16] = l2;
i16 = i16 + 1;
";
    "Block 7:
[preds: 2 6 ] [succs: 8 3 ]
if i17 < 64 goto $i3 = i16 * 64;
"->"Block 3:
[preds: 7 ] [succs: 4 5 ]
$i3 = i16 * 64;
$i7 = $i3 + i17;
$l4 = 1L << i17;
$l5 = l2 & $l4;
$b6 = $l5 cmp 0L;
if $b6 == 0 goto $z0 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
r1[i16] = 0L;
r2[i16] = l2;
i16 = i16 + 1;
"->"Block 9:
[preds: 1 8 ] [succs: 10 2 ]
if i16 < s0 goto l2 = 0L;
";
    "Block 9:
[preds: 1 8 ] [succs: 10 2 ]
if i16 < s0 goto l2 = 0L;
"->"Block 10:
[preds: 9 ] [succs: 14 ]
$i8 = lengthof r1;
$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8);
$i9 = lengthof r0;
staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9);
i18 = 0;
goto [?= (branch)];
";
    "Block 9:
[preds: 1 8 ] [succs: 10 2 ]
if i16 < s0 goto l2 = 0L;
"->"Block 2:
[preds: 9 ] [succs: 7 ]
l2 = 0L;
i17 = 0;
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 14 ]
$i8 = lengthof r1;
$r4 = staticinvoke <java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>(r1, 0, $i8);
$i9 = lengthof r0;
staticinvoke <compiler.c2.Test6661247: void test(boolean[],int,java.nio.LongBuffer,long,int)>(r0, 0, $r4, 0L, $i9);
i18 = 0;
goto [?= (branch)];
"->"Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i18 < s0 goto $l11 = r1[i18];
";
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
$l11 = r1[i18];
$l10 = r2[i18];
$b12 = $l11 cmp $l10;
if $b12 == 0 goto i18 = i18 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
$r5 = new java.lang.InternalError;
$r6 = new java.lang.StringBuilder;
$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18);
specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$l13 = r1[i18];
$r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \");
$l14 = r2[i18];
$r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l14);
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r14);
throw $r5;
";
    "Block 11:
[preds: 14 ] [succs: 12 13 ]
$l11 = r1[i18];
$l10 = r2[i18];
$b12 = $l11 cmp $l10;
if $b12 == 0 goto i18 = i18 + 1;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
i18 = i18 + 1;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
i18 = i18 + 1;
"->"Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i18 < s0 goto $l11 = r1[i18];
";
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i18 < s0 goto $l11 = r1[i18];
"->"Block 15:
[preds: 14 ] [succs: 16 ]
i15 = i15 + 1;
";
    "Block 14:
[preds: 10 13 ] [succs: 15 11 ]
if i18 < s0 goto $l11 = r1[i18];
"->"Block 11:
[preds: 14 ] [succs: 12 13 ]
$l11 = r1[i18];
$l10 = r2[i18];
$b12 = $l11 cmp $l10;
if $b12 == 0 goto i18 = i18 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 16 ]
i15 = i15 + 1;
"->"Block 16:
[preds: 0 15 ] [succs: 17 1 ]
if i15 < 2000 goto i16 = 0;
";
    "Block 16:
[preds: 0 15 ] [succs: 17 1 ]
if i15 < 2000 goto i16 = 0;
"->"Block 17:
[preds: 16 ] [succs: ]
return;
";
    "Block 16:
[preds: 0 15 ] [succs: 17 1 ]
if i15 < 2000 goto i16 = 0;
"->"Block 1:
[preds: 16 ] [succs: 9 ]
i16 = 0;
goto [?= (branch)];
";
}
