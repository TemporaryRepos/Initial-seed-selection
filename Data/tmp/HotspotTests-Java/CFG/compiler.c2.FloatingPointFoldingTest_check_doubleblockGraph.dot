digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: long[];
d0 := @parameter1: double;
d1 := @parameter2: double;
$l1 = r0[0];
$l0 = r0[1];
$b2 = $l1 cmp $l0;
if $b2 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Two different double values are considered equal. \n\");
$r3 = newarray (java.lang.Object)[2];
$l3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
$r3[0] = $r4;
$l4 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1);
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
$r3[1] = $r5;
$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\toriginal values: 0x%x 0x%x\n\", $r3);
$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = newarray (java.lang.Object)[2];
$l5 = r0[0];
$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
$r8[0] = $r9;
$l6 = r0[1];
$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\tvalues after execution of method test(): 0x%x 0x%x\", $r8);
$r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);
throw $r1;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: long[];
d0 := @parameter1: double;
d1 := @parameter2: double;
$l1 = r0[0];
$l0 = r0[1];
$b2 = $l1 cmp $l0;
if $b2 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r1 = new java.lang.RuntimeException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Two different double values are considered equal. \n\");
$r3 = newarray (java.lang.Object)[2];
$l3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
$r3[0] = $r4;
$l4 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1);
$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
$r3[1] = $r5;
$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\toriginal values: 0x%x 0x%x\n\", $r3);
$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = newarray (java.lang.Object)[2];
$l5 = r0[0];
$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
$r8[0] = $r9;
$l6 = r0[1];
$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\tvalues after execution of method test(): 0x%x 0x%x\", $r8);
$r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);
throw $r1;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: long[];
d0 := @parameter1: double;
d1 := @parameter2: double;
$l1 = r0[0];
$l0 = r0[1];
$b2 = $l1 cmp $l0;
if $b2 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
