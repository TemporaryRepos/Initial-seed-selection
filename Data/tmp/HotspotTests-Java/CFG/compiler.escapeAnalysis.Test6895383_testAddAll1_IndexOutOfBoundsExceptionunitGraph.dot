digraph "unitGraph" {
    "r4 := @this: compiler.escapeAnalysis.Test6895383"
    "$r0 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.util.LinkedList"
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"
    "virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(-1, $r2)"
    "goto [?= return]"
    "$r3 := @caughtexception"
    "return"
    "r4 := @this: compiler.escapeAnalysis.Test6895383"->"$r0 = new java.util.concurrent.CopyOnWriteArrayList";
    "r4 := @this: compiler.escapeAnalysis.Test6895383"->"$r3 := @caughtexception";
    "$r0 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "$r0 = new java.util.concurrent.CopyOnWriteArrayList"->"$r3 := @caughtexception";
    "specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"r1 = $r0";
    "specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"$r3 := @caughtexception";
    "r1 = $r0"->"$r2 = new java.util.LinkedList";
    "r1 = $r0"->"$r3 := @caughtexception";
    "$r2 = new java.util.LinkedList"->"specialinvoke $r2.<java.util.LinkedList: void <init>()>()";
    "$r2 = new java.util.LinkedList"->"$r3 := @caughtexception";
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"->"virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(-1, $r2)";
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"->"$r3 := @caughtexception";
    "virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(-1, $r2)"->"goto [?= return]";
    "virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(-1, $r2)"->"$r3 := @caughtexception";
    "goto [?= return]"->"return";
    "$r3 := @caughtexception"->"return";
}
