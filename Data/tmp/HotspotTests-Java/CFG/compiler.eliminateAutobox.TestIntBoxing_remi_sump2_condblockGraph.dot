digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r1 := @parameter0: java.lang.Integer;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r0 = new java.lang.Integer;
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i4);
r1 = $r0;
goto [?= i8 = i8 + 1];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"
    "Block 6:
[preds: 5 ] [succs: ]
$i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i7 = $i5 + $i6;
return $i7;
"
    "Block 0:
[preds: ] [succs: 5 ]
r1 := @parameter0: java.lang.Integer;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
i8 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$r0 = new java.lang.Integer;
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i4);
r1 = $r0;
goto [?= i8 = i8 + 1];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r0 = new java.lang.Integer;
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i4);
r1 = $r0;
goto [?= i8 = i8 + 1];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"->"Block 6:
[preds: 5 ] [succs: ]
$i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i7 = $i5 + $i6;
return $i7;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
";
}
