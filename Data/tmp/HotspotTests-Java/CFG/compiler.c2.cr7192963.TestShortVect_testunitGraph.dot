digraph "unitGraph" {
    "r0 = newarray (short)[997]"
    "r1 = newarray (short)[997]"
    "i29 = 0"
    "goto [?= (branch)]"
    "$s0 = (short) i29"
    "r1[i29] = $s0"
    "i29 = i29 + 1"
    "if i29 < 997 goto $s0 = (short) i29"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"
    "i30 = 0"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"
    "i30 = i30 + 1"
    "if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"
    "i31 = 0"
    "i32 = 0"
    "$s3 = r0[i32]"
    "$i1 = i32 & 3"
    "$s2 = (short) $i1"
    "$i4 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_init: \", i32, $s3, $s2)"
    "i31 = i31 + $i4"
    "i32 = i32 + 1"
    "if i32 < 997 goto $s3 = r0[i32]"
    "i33 = 0"
    "$s8 = r0[i33]"
    "$i5 = i33 & 3"
    "$i6 = i33 + $i5"
    "$s7 = (short) $i6"
    "$i9 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addi: \", i33, $s8, $s7)"
    "i31 = i31 + $i9"
    "i33 = i33 + 1"
    "if i33 < 997 goto $s8 = r0[i33]"
    "i34 = 0"
    "$s13 = r0[i34]"
    "$i10 = i34 & 3"
    "$i11 = i34 << $i10"
    "$s12 = (short) $i11"
    "$i14 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_lsai: \", i34, $s13, $s12)"
    "i31 = i31 + $i14"
    "i34 = i34 + 1"
    "if i34 < 997 goto $s13 = r0[i34]"
    "i35 = 0"
    "$s17 = r0[i35]"
    "$i15 = i35 & 3"
    "$s16 = (short) $i15"
    "$i18 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_init: \", i35, $s17, $s16)"
    "i31 = i31 + $i18"
    "i35 = i35 + 1"
    "if i35 < 997 goto $s17 = r0[i35]"
    "i36 = 0"
    "$s22 = r0[i36]"
    "$i19 = i36 & 3"
    "$i20 = i36 + $i19"
    "$s21 = (short) $i20"
    "$i23 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_addi: \", i36, $s22, $s21)"
    "i31 = i31 + $i23"
    "i36 = i36 + 1"
    "if i36 < 997 goto $s22 = r0[i36]"
    "i37 = 0"
    "$s27 = r0[i37]"
    "$i24 = i37 & 3"
    "$i25 = i37 << $i24"
    "$s26 = (short) $i25"
    "$i28 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_lsai: \", i37, $s27, $s26)"
    "i31 = i31 + $i28"
    "i37 = i37 + 1"
    "if i37 < 997 goto $s27 = r0[i37]"
    "if i31 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "return i31"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"
    "i38 = 0"
    "i38 = i38 + 1"
    "if i38 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"
    "i39 = 0"
    "i39 = i39 + 1"
    "if i39 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"
    "i40 = 0"
    "i40 = i40 + 1"
    "if i40 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"
    "i41 = 0"
    "i41 = i41 + 1"
    "if i41 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"
    "i42 = 0"
    "i42 = i42 + 1"
    "if i42 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"
    "i43 = 0"
    "i43 = i43 + 1"
    "if i43 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"
    "r0 = newarray (short)[997]"->"r1 = newarray (short)[997]";
    "r1 = newarray (short)[997]"->"i29 = 0";
    "i29 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i29 < 997 goto $s0 = (short) i29";
    "$s0 = (short) i29"->"r1[i29] = $s0";
    "r1[i29] = $s0"->"i29 = i29 + 1";
    "i29 = i29 + 1"->"if i29 < 997 goto $s0 = (short) i29";
    "if i29 < 997 goto $s0 = (short) i29"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if i29 < 997 goto $s0 = (short) i29"->"$s0 = (short) i29";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Warmup\")"->"i30 = 0";
    "i30 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"->"i30 = i30 + 1";
    "i30 = i30 + 1"->"if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if i30 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Verification\")"->"i31 = 0";
    "i31 = 0"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"i32 = 0";
    "i32 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i32 < 997 goto $s3 = r0[i32]";
    "$s3 = r0[i32]"->"$i1 = i32 & 3";
    "$i1 = i32 & 3"->"$s2 = (short) $i1";
    "$s2 = (short) $i1"->"$i4 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_init: \", i32, $s3, $s2)";
    "$i4 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_init: \", i32, $s3, $s2)"->"i31 = i31 + $i4";
    "i31 = i31 + $i4"->"i32 = i32 + 1";
    "i32 = i32 + 1"->"if i32 < 997 goto $s3 = r0[i32]";
    "if i32 < 997 goto $s3 = r0[i32]"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)";
    "if i32 < 997 goto $s3 = r0[i32]"->"$s3 = r0[i32]";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"->"i33 = 0";
    "i33 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i33 < 997 goto $s8 = r0[i33]";
    "$s8 = r0[i33]"->"$i5 = i33 & 3";
    "$i5 = i33 & 3"->"$i6 = i33 + $i5";
    "$i6 = i33 + $i5"->"$s7 = (short) $i6";
    "$s7 = (short) $i6"->"$i9 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addi: \", i33, $s8, $s7)";
    "$i9 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_addi: \", i33, $s8, $s7)"->"i31 = i31 + $i9";
    "i31 = i31 + $i9"->"i33 = i33 + 1";
    "i33 = i33 + 1"->"if i33 < 997 goto $s8 = r0[i33]";
    "if i33 < 997 goto $s8 = r0[i33]"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)";
    "if i33 < 997 goto $s8 = r0[i33]"->"$s8 = r0[i33]";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"->"i34 = 0";
    "i34 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i34 < 997 goto $s13 = r0[i34]";
    "$s13 = r0[i34]"->"$i10 = i34 & 3";
    "$i10 = i34 & 3"->"$i11 = i34 << $i10";
    "$i11 = i34 << $i10"->"$s12 = (short) $i11";
    "$s12 = (short) $i11"->"$i14 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_lsai: \", i34, $s13, $s12)";
    "$i14 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_lsai: \", i34, $s13, $s12)"->"i31 = i31 + $i14";
    "i31 = i31 + $i14"->"i34 = i34 + 1";
    "i34 = i34 + 1"->"if i34 < 997 goto $s13 = r0[i34]";
    "if i34 < 997 goto $s13 = r0[i34]"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)";
    "if i34 < 997 goto $s13 = r0[i34]"->"$s13 = r0[i34]";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"->"i35 = 0";
    "i35 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i35 < 997 goto $s17 = r0[i35]";
    "$s17 = r0[i35]"->"$i15 = i35 & 3";
    "$i15 = i35 & 3"->"$s16 = (short) $i15";
    "$s16 = (short) $i15"->"$i18 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_init: \", i35, $s17, $s16)";
    "$i18 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_init: \", i35, $s17, $s16)"->"i31 = i31 + $i18";
    "i31 = i31 + $i18"->"i35 = i35 + 1";
    "i35 = i35 + 1"->"if i35 < 997 goto $s17 = r0[i35]";
    "if i35 < 997 goto $s17 = r0[i35]"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)";
    "if i35 < 997 goto $s17 = r0[i35]"->"$s17 = r0[i35]";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"->"i36 = 0";
    "i36 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i36 < 997 goto $s22 = r0[i36]";
    "$s22 = r0[i36]"->"$i19 = i36 & 3";
    "$i19 = i36 & 3"->"$i20 = i36 + $i19";
    "$i20 = i36 + $i19"->"$s21 = (short) $i20";
    "$s21 = (short) $i20"->"$i23 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_addi: \", i36, $s22, $s21)";
    "$i23 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_addi: \", i36, $s22, $s21)"->"i31 = i31 + $i23";
    "i31 = i31 + $i23"->"i36 = i36 + 1";
    "i36 = i36 + 1"->"if i36 < 997 goto $s22 = r0[i36]";
    "if i36 < 997 goto $s22 = r0[i36]"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)";
    "if i36 < 997 goto $s22 = r0[i36]"->"$s22 = r0[i36]";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"->"i37 = 0";
    "i37 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i37 < 997 goto $s27 = r0[i37]";
    "$s27 = r0[i37]"->"$i24 = i37 & 3";
    "$i24 = i37 & 3"->"$i25 = i37 << $i24";
    "$i25 = i37 << $i24"->"$s26 = (short) $i25";
    "$s26 = (short) $i25"->"$i28 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_lsai: \", i37, $s27, $s26)";
    "$i28 = staticinvoke <compiler.c2.cr7192963.TestShortVect: int verify(java.lang.String,int,short,short)>(\"test_unrl_lsai: \", i37, $s27, $s26)"->"i31 = i31 + $i28";
    "i31 = i31 + $i28"->"i37 = i37 + 1";
    "i37 = i37 + 1"->"if i37 < 997 goto $s27 = r0[i37]";
    "if i37 < 997 goto $s27 = r0[i37]"->"if i31 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if i37 < 997 goto $s27 = r0[i37]"->"$s27 = r0[i37]";
    "if i31 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"return i31";
    "if i31 <= 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Time\")"->"i38 = 0";
    "i38 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i38 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"i38 = i38 + 1";
    "i38 = i38 + 1"->"if i38 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "if i38 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"i39 = 0";
    "if i38 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_init(short[])>(r0)";
    "i39 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i39 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"->"i39 = i39 + 1";
    "i39 = i39 + 1"->"if i39 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)";
    "if i39 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"->"i40 = 0";
    "if i39 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_addi(short[],short[])>(r0, r1)";
    "i40 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i40 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"->"i40 = i40 + 1";
    "i40 = i40 + 1"->"if i40 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)";
    "if i40 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"->"i41 = 0";
    "if i40 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_lsai(short[],short[])>(r0, r1)";
    "i41 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i41 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"->"i41 = i41 + 1";
    "i41 = i41 + 1"->"if i41 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)";
    "if i41 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"->"i42 = 0";
    "if i41 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_init(short[])>(r0)";
    "i42 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i42 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"->"i42 = i42 + 1";
    "i42 = i42 + 1"->"if i42 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)";
    "if i42 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"->"i43 = 0";
    "if i42 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_addi(short[],short[])>(r0, r1)";
    "i43 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i43 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)";
    "staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"->"i43 = i43 + 1";
    "i43 = i43 + 1"->"if i43 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)";
    "if i43 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"->"return i31";
    "if i43 < 11000 goto staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)"->"staticinvoke <compiler.c2.cr7192963.TestShortVect: void test_unrl_lsai(short[],short[])>(r0, r1)";
}
