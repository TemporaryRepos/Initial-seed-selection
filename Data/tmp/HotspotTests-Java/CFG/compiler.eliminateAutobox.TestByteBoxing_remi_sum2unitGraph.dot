digraph "unitGraph" {
    "$r0 = new java.lang.Byte"
    "specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(1)"
    "r4 = $r0"
    "$r1 = new java.lang.Byte"
    "specialinvoke $r1.<java.lang.Byte: void <init>(byte)>(1)"
    "r5 = $r1"
    "i10 = 0"
    "goto [?= (branch)]"
    "$r2 = new java.lang.Byte"
    "$b0 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()"
    "$i1 = $b0 + 1"
    "$b2 = (byte) $i1"
    "specialinvoke $r2.<java.lang.Byte: void <init>(byte)>($b2)"
    "r4 = $r2"
    "$r3 = new java.lang.Byte"
    "$b3 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()"
    "$i4 = $b3 + 2"
    "$b5 = (byte) $i4"
    "specialinvoke $r3.<java.lang.Byte: void <init>(byte)>($b5)"
    "r5 = $r3"
    "i10 = i10 + 1"
    "if i10 < 1000 goto $r2 = new java.lang.Byte"
    "$b6 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()"
    "$b7 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()"
    "$i8 = $b6 + $b7"
    "$b9 = (byte) $i8"
    "return $b9"
    "$r0 = new java.lang.Byte"->"specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(1)";
    "specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(1)"->"r4 = $r0";
    "r4 = $r0"->"$r1 = new java.lang.Byte";
    "$r1 = new java.lang.Byte"->"specialinvoke $r1.<java.lang.Byte: void <init>(byte)>(1)";
    "specialinvoke $r1.<java.lang.Byte: void <init>(byte)>(1)"->"r5 = $r1";
    "r5 = $r1"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < 1000 goto $r2 = new java.lang.Byte";
    "$r2 = new java.lang.Byte"->"$b0 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()";
    "$b0 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()"->"$i1 = $b0 + 1";
    "$i1 = $b0 + 1"->"$b2 = (byte) $i1";
    "$b2 = (byte) $i1"->"specialinvoke $r2.<java.lang.Byte: void <init>(byte)>($b2)";
    "specialinvoke $r2.<java.lang.Byte: void <init>(byte)>($b2)"->"r4 = $r2";
    "r4 = $r2"->"$r3 = new java.lang.Byte";
    "$r3 = new java.lang.Byte"->"$b3 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()";
    "$b3 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()"->"$i4 = $b3 + 2";
    "$i4 = $b3 + 2"->"$b5 = (byte) $i4";
    "$b5 = (byte) $i4"->"specialinvoke $r3.<java.lang.Byte: void <init>(byte)>($b5)";
    "specialinvoke $r3.<java.lang.Byte: void <init>(byte)>($b5)"->"r5 = $r3";
    "r5 = $r3"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < 1000 goto $r2 = new java.lang.Byte";
    "if i10 < 1000 goto $r2 = new java.lang.Byte"->"$b6 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()";
    "if i10 < 1000 goto $r2 = new java.lang.Byte"->"$r2 = new java.lang.Byte";
    "$b6 = virtualinvoke r4.<java.lang.Byte: byte byteValue()>()"->"$b7 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()";
    "$b7 = virtualinvoke r5.<java.lang.Byte: byte byteValue()>()"->"$i8 = $b6 + $b7";
    "$i8 = $b6 + $b7"->"$b9 = (byte) $i8";
    "$b9 = (byte) $i8"->"return $b9";
}
