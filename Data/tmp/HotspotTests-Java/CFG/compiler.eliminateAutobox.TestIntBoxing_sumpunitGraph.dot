digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "r3 := @parameter1: java.lang.Integer"
    "r1 = r0"
    "i0 = lengthof r0"
    "i6 = 0"
    "goto [?= (branch)]"
    "$i1 = r1[i6]"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i4 = $i2 + $i3"
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "i6 = i6 + 1"
    "if i6 < i0 goto $i1 = r1[i6]"
    "$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "return $i5"
    "r0 := @parameter0: int[]"->"r3 := @parameter1: java.lang.Integer";
    "r3 := @parameter1: java.lang.Integer"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < i0 goto $i1 = r1[i6]";
    "$i1 = r1[i6]"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i4 = $i2 + $i3";
    "$i4 = $i2 + $i3"->"r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < i0 goto $i1 = r1[i6]";
    "if i6 < i0 goto $i1 = r1[i6]"->"$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "if i6 < i0 goto $i1 = r1[i6]"->"$i1 = r1[i6]";
    "$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"return $i5";
}
