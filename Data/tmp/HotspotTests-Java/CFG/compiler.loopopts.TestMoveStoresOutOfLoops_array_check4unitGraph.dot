digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "z0 = 1"
    "i2 = 0"
    "goto [?= (branch)]"
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"
    "$b0 = $r0[i2]"
    "if $b0 == i2 goto i2 = i2 + 1"
    "z0 = 0"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)"
    "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: byte_array[\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"
    "$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"
    "$b1 = $r8[i2]"
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "i2 = i2 + 1"
    "if i2 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"
    "return z0"
    "r2 := @parameter0: java.lang.String"->"z0 = 1";
    "z0 = 1"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>";
    "$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"->"$b0 = $r0[i2]";
    "$b0 = $r0[i2]"->"if $b0 == i2 goto i2 = i2 + 1";
    "if $b0 == i2 goto i2 = i2 + 1"->"z0 = 0";
    "if $b0 == i2 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "z0 = 0"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)";
    "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)"->"$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: byte_array[\")";
    "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: byte_array[\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")"->"$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>";
    "$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"->"$b1 = $r8[i2]";
    "$b1 = $r8[i2]"->"$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1)";
    "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>";
    "if i2 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"->"return z0";
    "if i2 < 3 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>"->"$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: byte[] byte_array>";
}
