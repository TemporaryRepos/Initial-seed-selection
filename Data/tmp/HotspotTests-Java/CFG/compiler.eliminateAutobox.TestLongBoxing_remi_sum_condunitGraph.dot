digraph "unitGraph" {
    "$r0 = new java.lang.Long"
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)"
    "r2 = $r0"
    "i4 = 0"
    "goto [?= (branch)]"
    "$i0 = i4 & 1"
    "if $i0 != 0 goto i4 = i4 + 1"
    "$r1 = new java.lang.Long"
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l2 = $l1 + 1L"
    "specialinvoke $r1.<java.lang.Long: void <init>(long)>($l2)"
    "r2 = $r1"
    "i4 = i4 + 1"
    "if i4 < 1000 goto $i0 = i4 & 1"
    "$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "return $l3"
    "$r0 = new java.lang.Long"->"specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)";
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>(1L)"->"r2 = $r0";
    "r2 = $r0"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 1000 goto $i0 = i4 & 1";
    "$i0 = i4 & 1"->"if $i0 != 0 goto i4 = i4 + 1";
    "if $i0 != 0 goto i4 = i4 + 1"->"$r1 = new java.lang.Long";
    "if $i0 != 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r1 = new java.lang.Long"->"$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l2 = $l1 + 1L";
    "$l2 = $l1 + 1L"->"specialinvoke $r1.<java.lang.Long: void <init>(long)>($l2)";
    "specialinvoke $r1.<java.lang.Long: void <init>(long)>($l2)"->"r2 = $r1";
    "r2 = $r1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 1000 goto $i0 = i4 & 1";
    "if i4 < 1000 goto $i0 = i4 & 1"->"$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "if i4 < 1000 goto $i0 = i4 & 1"->"$i0 = i4 & 1";
    "$l3 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"return $l3";
}
