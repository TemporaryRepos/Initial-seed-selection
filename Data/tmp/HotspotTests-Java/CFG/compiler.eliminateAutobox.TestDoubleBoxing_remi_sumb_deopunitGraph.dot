digraph "unitGraph" {
    "$d0 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(1.0)"
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"
    "i0 = 0"
    "goto [?= (branch)]"
    "$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"
    "$d2 = $d1 + 1.0"
    "$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)"
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"
    "i0 = i0 + 1"
    "if i0 < 1000 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"
    "$d4 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"
    "return $d4"
    "$d0 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(1.0)"->"r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)";
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 1000 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"$d2 = $d1 + 1.0";
    "$d2 = $d1 + 1.0"->"$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)";
    "$d3 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>($d2)"->"r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)";
    "r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 1000 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "if i0 < 1000 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()";
    "if i0 < 1000 goto $d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"$d1 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"->"$d4 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()";
    "$d4 = virtualinvoke r0.<java.lang.Double: double doubleValue()>()"->"return $d4";
}
