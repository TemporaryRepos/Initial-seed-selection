digraph "unitGraph" {
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"
    "r4 = (selectionresolution.ClassData) $r3"
    "r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>"
    "$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>"
    "$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>"
    "if $r7 != $r6 goto return"
    "r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"
    "$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>"
    "$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"
    "$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"
    "r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10)"
    "$r13 = new selectionresolution.ClassData"
    "specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12)"
    "r14 = $r13"
    "i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>"
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14)"
    "$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"
    "virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2"
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2"
    "return"
    "r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder"->"$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>";
    "$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>"->"$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>";
    "$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)";
    "$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2)"->"r4 = (selectionresolution.ClassData) $r3";
    "r4 = (selectionresolution.ClassData) $r3"->"r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>";
    "r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>"->"$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>";
    "$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>"->"$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>";
    "$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>"->"if $r7 != $r6 goto return";
    "if $r7 != $r6 goto return"->"r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>";
    "if $r7 != $r6 goto return"->"return";
    "r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>"->"$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>";
    "$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>"->"$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>";
    "$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>"->"$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>";
    "$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>"->"r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10)";
    "r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10)"->"$r13 = new selectionresolution.ClassData";
    "$r13 = new selectionresolution.ClassData"->"specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12)";
    "specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12)"->"r14 = $r13";
    "r14 = $r13"->"i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>";
    "i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>"->"i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14)";
    "i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14)"->"$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>";
    "$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>"->"virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)";
    "virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1)"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2"->"r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2";
    "r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2"->"return";
}
