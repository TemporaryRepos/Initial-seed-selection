digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "i4 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)"
    "i4 = i4 + 1"
    "if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)"
    "$r1 = newarray (int)[1]"
    "$r1[0] = 2000"
    "r6 = $r1"
    "i5 = 0"
    "$i0 = i5 % 2"
    "if $i0 != 0 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)]"
    "$z0 = 0"
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)"
    "i5 = i5 + 1"
    "if i5 < 6000 goto $i0 = i5 % 2"
    "$r3 = newarray (int)[6]"
    "$r3[0] = 1"
    "$r3[1] = 2"
    "$r3[2] = 3"
    "$r3[3] = 4"
    "$r3[4] = 5"
    "$r3[5] = 2000"
    "r7 = $r3"
    "i6 = 0"
    "$i2 = i6 % 2"
    "if $i2 != 0 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)]"
    "$z1 = 0"
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)"
    "i6 = i6 + 1"
    "if i6 < 10000 goto $i2 = i6 % 2"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)";
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)";
    "if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)"->"$r1 = newarray (int)[1]";
    "if i4 < 5000 goto staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)"->"staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(null, 1)";
    "$r1 = newarray (int)[1]"->"$r1[0] = 2000";
    "$r1[0] = 2000"->"r6 = $r1";
    "r6 = $r1"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 6000 goto $i0 = i5 % 2";
    "$i0 = i5 % 2"->"if $i0 != 0 goto $z0 = 0";
    "if $i0 != 0 goto $z0 = 0"->"$z0 = 1";
    "if $i0 != 0 goto $z0 = 0"->"$z0 = 0";
    "$z0 = 1"->"goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)]";
    "goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)]"->"staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)";
    "$z0 = 0"->"staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)";
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r6, $z0)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 6000 goto $i0 = i5 % 2";
    "if i5 < 6000 goto $i0 = i5 % 2"->"$r3 = newarray (int)[6]";
    "if i5 < 6000 goto $i0 = i5 % 2"->"$i0 = i5 % 2";
    "$r3 = newarray (int)[6]"->"$r3[0] = 1";
    "$r3[0] = 1"->"$r3[1] = 2";
    "$r3[1] = 2"->"$r3[2] = 3";
    "$r3[2] = 3"->"$r3[3] = 4";
    "$r3[3] = 4"->"$r3[4] = 5";
    "$r3[4] = 5"->"$r3[5] = 2000";
    "$r3[5] = 2000"->"r7 = $r3";
    "r7 = $r3"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 10000 goto $i2 = i6 % 2";
    "$i2 = i6 % 2"->"if $i2 != 0 goto $z1 = 0";
    "if $i2 != 0 goto $z1 = 0"->"$z1 = 1";
    "if $i2 != 0 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)]";
    "goto [?= staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)]"->"staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)";
    "$z1 = 0"->"staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)";
    "staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: int m(int[],boolean)>(r7, $z1)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 10000 goto $i2 = i6 % 2";
    "if i6 < 10000 goto $i2 = i6 % 2"->"return";
    "if i6 < 10000 goto $i2 = i6 % 2"->"$i2 = i6 % 2";
}
