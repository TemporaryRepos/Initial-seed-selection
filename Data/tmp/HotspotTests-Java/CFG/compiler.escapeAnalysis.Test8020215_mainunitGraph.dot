digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.escapeAnalysis.Test8020215$NamedObjectList"
    "specialinvoke $r0.<compiler.escapeAnalysis.Test8020215$NamedObjectList: void <init>()>()"
    "r1 = $r0"
    "i0 = 0"
    "goto [?= (branch)]"
    "$r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"
    "$r2 = new compiler.escapeAnalysis.Test8020215$NamedObject"
    "specialinvoke $r2.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(1, \"2012-12-31\")"
    "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2)"
    "i0 = i0 + 1"
    "if i0 < 10000 goto $r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"
    "$r5 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"
    "$r4 = new compiler.escapeAnalysis.Test8020215$NamedObject"
    "specialinvoke $r4.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(2, \"2013-12-31\")"
    "interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4)"
    "i1 = 0"
    "staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)"
    "i1 = i1 + 1"
    "if i1 < 12000 goto staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = new compiler.escapeAnalysis.Test8020215$NamedObjectList";
    "$r0 = new compiler.escapeAnalysis.Test8020215$NamedObjectList"->"specialinvoke $r0.<compiler.escapeAnalysis.Test8020215$NamedObjectList: void <init>()>()";
    "specialinvoke $r0.<compiler.escapeAnalysis.Test8020215$NamedObjectList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i0 = 0";
    "i0 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 < 10000 goto $r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>";
    "$r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"->"$r2 = new compiler.escapeAnalysis.Test8020215$NamedObject";
    "$r2 = new compiler.escapeAnalysis.Test8020215$NamedObject"->"specialinvoke $r2.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(1, \"2012-12-31\")";
    "specialinvoke $r2.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(1, \"2012-12-31\")"->"interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2)";
    "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"if i0 < 10000 goto $r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>";
    "if i0 < 10000 goto $r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"->"$r5 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>";
    "if i0 < 10000 goto $r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"->"$r3 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>";
    "$r5 = r1.<compiler.escapeAnalysis.Test8020215$NamedObjectList: java.util.List namedObjectList>"->"$r4 = new compiler.escapeAnalysis.Test8020215$NamedObject";
    "$r4 = new compiler.escapeAnalysis.Test8020215$NamedObject"->"specialinvoke $r4.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(2, \"2013-12-31\")";
    "specialinvoke $r4.<compiler.escapeAnalysis.Test8020215$NamedObject: void <init>(int,java.lang.String)>(2, \"2013-12-31\")"->"interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4)";
    "interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4)"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 12000 goto staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)";
    "staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < 12000 goto staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)";
    "if i1 < 12000 goto staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if i1 < 12000 goto staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)"->"staticinvoke <compiler.escapeAnalysis.Test8020215: void test(compiler.escapeAnalysis.Test8020215$NamedObjectList,int)>(r1, i1)";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")"->"return";
}
