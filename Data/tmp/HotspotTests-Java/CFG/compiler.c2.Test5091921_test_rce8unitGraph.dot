digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i6 = r0[5]"
    "i0 = r0[10]"
    "<compiler.c2.Test5091921: int result> = i6"
    "$i1 = lengthof r0"
    "i7 = $i1 - 1"
    "goto [?= (branch)]"
    "if i7 < i0 goto $r1 = new java.lang.RuntimeException"
    "$i5 = i6"
    "$i3 = i6 ^ 9"
    "$i2 = <compiler.c2.Test5091921: int result>"
    "if $i2 == 0 goto $i8 = i6"
    "$i8 = 0"
    "goto [?= $i4 = $i3 + $i8]"
    "$i8 = i6"
    "$i4 = $i3 + $i8"
    "i6 = $i5 + $i4"
    "goto [?= i7 = i7 + -1]"
    "$r1 = new java.lang.RuntimeException"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>()>()"
    "throw $r1"
    "i7 = i7 + -1"
    "if i7 >= 0 goto (branch)"
    "return i6"
    "r0 := @parameter0: int[]"->"i6 = r0[5]";
    "i6 = r0[5]"->"i0 = r0[10]";
    "i0 = r0[10]"->"<compiler.c2.Test5091921: int result> = i6";
    "<compiler.c2.Test5091921: int result> = i6"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"i7 = $i1 - 1";
    "i7 = $i1 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= 0 goto (branch)";
    "if i7 < i0 goto $r1 = new java.lang.RuntimeException"->"$i5 = i6";
    "if i7 < i0 goto $r1 = new java.lang.RuntimeException"->"$r1 = new java.lang.RuntimeException";
    "$i5 = i6"->"$i3 = i6 ^ 9";
    "$i3 = i6 ^ 9"->"$i2 = <compiler.c2.Test5091921: int result>";
    "$i2 = <compiler.c2.Test5091921: int result>"->"if $i2 == 0 goto $i8 = i6";
    "if $i2 == 0 goto $i8 = i6"->"$i8 = 0";
    "if $i2 == 0 goto $i8 = i6"->"$i8 = i6";
    "$i8 = 0"->"goto [?= $i4 = $i3 + $i8]";
    "goto [?= $i4 = $i3 + $i8]"->"$i4 = $i3 + $i8";
    "$i8 = i6"->"$i4 = $i3 + $i8";
    "$i4 = $i3 + $i8"->"i6 = $i5 + $i4";
    "i6 = $i5 + $i4"->"<compiler.c2.Test5091921: int result> = i6";
    "<compiler.c2.Test5091921: int result> = i6"->"goto [?= i7 = i7 + -1]";
    "goto [?= i7 = i7 + -1]"->"i7 = i7 + -1";
    "$r1 = new java.lang.RuntimeException"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>()>()";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>()>()"->"throw $r1";
    "i7 = i7 + -1"->"if i7 >= 0 goto (branch)";
    "if i7 >= 0 goto (branch)"->"return i6";
    "if i7 >= 0 goto (branch)"->"if i7 < i0 goto $r1 = new java.lang.RuntimeException";
}
