digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r4 = $r0;
$r1 = new java.lang.Integer;
specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);
r5 = $r1;
i8 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $r2 = new java.lang.Integer;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = new java.lang.Integer;
$i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i4);
r4 = $r3;
goto [?= i8 = i8 + 1];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = new java.lang.Integer;
$i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i2);
r5 = $r2;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"
    "Block 6:
[preds: 5 ] [succs: ]
$i5 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i7 = $i5 + $i6;
return $i7;
"
    "Block 0:
[preds: ] [succs: 5 ]
$r0 = new java.lang.Integer;
specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
r4 = $r0;
$r1 = new java.lang.Integer;
specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);
r5 = $r1;
i8 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $r2 = new java.lang.Integer;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = new java.lang.Integer;
$i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i4);
r4 = $r3;
goto [?= i8 = i8 + 1];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $r2 = new java.lang.Integer;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = new java.lang.Integer;
$i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i2);
r5 = $r2;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$r3 = new java.lang.Integer;
$i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i4 = $i3 + 1;
specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i4);
r4 = $r3;
goto [?= i8 = i8 + 1];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = new java.lang.Integer;
$i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i2);
r5 = $r2;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i8 = i8 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"->"Block 6:
[preds: 5 ] [succs: ]
$i5 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
$i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i7 = $i5 + $i6;
return $i7;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i8 < 1000 goto $i0 = i8 & 1;
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i8 & 1;
if $i0 != 0 goto $r2 = new java.lang.Integer;
";
}
