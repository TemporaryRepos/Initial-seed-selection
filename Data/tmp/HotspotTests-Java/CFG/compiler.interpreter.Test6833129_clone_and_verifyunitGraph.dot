digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i4 = 0"
    "goto [?= $i6 = lengthof r0]"
    "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()"
    "r2 = (int[]) $r1"
    "$i1 = r0[i4]"
    "$i0 = r2[i4]"
    "if $i1 == $i0 goto i4 = i4 + 1"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \")"
    "i5 = 0"
    "goto [?= $i2 = lengthof r2]"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \")"
    "$i3 = r2[i5]"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7)"
    "i5 = i5 + 1"
    "$i2 = lengthof r2"
    "if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r8.<java.io.PrintStream: void println()>()"
    "staticinvoke <java.lang.System: void exit(int)>(97)"
    "i4 = i4 + 1"
    "$i6 = lengthof r0"
    "if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()"
    "return"
    "r0 := @parameter0: int[]"->"i4 = 0";
    "i4 = 0"->"goto [?= $i6 = lengthof r0]";
    "goto [?= $i6 = lengthof r0]"->"$i6 = lengthof r0";
    "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()"->"r2 = (int[]) $r1";
    "r2 = (int[]) $r1"->"$i1 = r0[i4]";
    "$i1 = r0[i4]"->"$i0 = r2[i4]";
    "$i0 = r2[i4]"->"if $i1 == $i0 goto i4 = i4 + 1";
    "if $i1 == $i0 goto i4 = i4 + 1"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $i1 == $i0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Error: allocated but not copied: \")"->"i5 = 0";
    "i5 = 0"->"goto [?= $i2 = lengthof r2]";
    "goto [?= $i2 = lengthof r2]"->"$i2 = lengthof r2";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(\" \")"->"$i3 = r2[i5]";
    "$i3 = r2[i5]"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7)";
    "virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r7)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i2 = lengthof r2";
    "$i2 = lengthof r2"->"if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>";
    "if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "if i5 < $i2 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r8.<java.io.PrintStream: void println()>()";
    "virtualinvoke $r8.<java.io.PrintStream: void println()>()"->"staticinvoke <java.lang.System: void exit(int)>(97)";
    "staticinvoke <java.lang.System: void exit(int)>(97)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"$i6 = lengthof r0";
    "$i6 = lengthof r0"->"if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()";
    "if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()"->"return";
    "if i4 < $i6 goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()"->"$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()";
}
