digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String[]"
    "i2 = 0"
    "i3 = 0"
    "goto [?= (branch)]"
    "$f1 = <compiler.c2.Test6796786: float d1>"
    "$f0 = <compiler.c2.Test6796786: float d2>"
    "$f2 = $f1 - $f0"
    "$f3 = neg $f2"
    "$i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f3)"
    "$i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(-0.0F)"
    "if $i0 != $i1 goto i3 = i3 + 1"
    "i2 = i2 + 1"
    "i3 = i3 + 1"
    "if i3 < 100000 goto $f1 = <compiler.c2.Test6796786: float d1>"
    "if i2 == 100000 goto return"
    "$r0 = new java.lang.InternalError"
    "specialinvoke $r0.<java.lang.InternalError: void <init>()>()"
    "throw $r0"
    "return"
    "r1 := @parameter0: java.lang.String[]"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 100000 goto $f1 = <compiler.c2.Test6796786: float d1>";
    "$f1 = <compiler.c2.Test6796786: float d1>"->"$f0 = <compiler.c2.Test6796786: float d2>";
    "$f0 = <compiler.c2.Test6796786: float d2>"->"$f2 = $f1 - $f0";
    "$f2 = $f1 - $f0"->"$f3 = neg $f2";
    "$f3 = neg $f2"->"$i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f3)";
    "$i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f3)"->"$i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(-0.0F)";
    "$i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(-0.0F)"->"if $i0 != $i1 goto i3 = i3 + 1";
    "if $i0 != $i1 goto i3 = i3 + 1"->"i2 = i2 + 1";
    "if $i0 != $i1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i2 = i2 + 1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 100000 goto $f1 = <compiler.c2.Test6796786: float d1>";
    "if i3 < 100000 goto $f1 = <compiler.c2.Test6796786: float d1>"->"if i2 == 100000 goto return";
    "if i3 < 100000 goto $f1 = <compiler.c2.Test6796786: float d1>"->"$f1 = <compiler.c2.Test6796786: float d1>";
    "if i2 == 100000 goto return"->"$r0 = new java.lang.InternalError";
    "if i2 == 100000 goto return"->"return";
    "$r0 = new java.lang.InternalError"->"specialinvoke $r0.<java.lang.InternalError: void <init>()>()";
    "specialinvoke $r0.<java.lang.InternalError: void <init>()>()"->"throw $r0";
}
