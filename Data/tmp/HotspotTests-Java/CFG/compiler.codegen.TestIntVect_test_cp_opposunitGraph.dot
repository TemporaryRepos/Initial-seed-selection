digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "r1 := @parameter1: int[]"
    "$i0 = lengthof r0"
    "i1 = $i0 - 1"
    "i5 = 0"
    "goto [?= $i2 = lengthof r0]"
    "$i3 = i1 - i5"
    "$i4 = r1[$i3]"
    "r0[i5] = $i4"
    "i5 = i5 + 1"
    "$i2 = lengthof r0"
    "if i5 < $i2 goto $i3 = i1 - i5"
    "return"
    "r0 := @parameter0: int[]"->"r1 := @parameter1: int[]";
    "r1 := @parameter1: int[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"i1 = $i0 - 1";
    "i1 = $i0 - 1"->"i5 = 0";
    "i5 = 0"->"goto [?= $i2 = lengthof r0]";
    "goto [?= $i2 = lengthof r0]"->"$i2 = lengthof r0";
    "$i3 = i1 - i5"->"$i4 = r1[$i3]";
    "$i4 = r1[$i3]"->"r0[i5] = $i4";
    "r0[i5] = $i4"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if i5 < $i2 goto $i3 = i1 - i5";
    "if i5 < $i2 goto $i3 = i1 - i5"->"return";
    "if i5 < $i2 goto $i3 = i1 - i5"->"$i3 = i1 - i5";
}
