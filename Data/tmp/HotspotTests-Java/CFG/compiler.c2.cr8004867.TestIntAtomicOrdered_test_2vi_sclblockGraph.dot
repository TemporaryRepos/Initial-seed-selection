digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i1 := @parameter2: int;
i3 := @parameter3: int;
i5 = 0;
goto [?= $i0 = i5 * 2];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i5 * 2;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i2, i1);
$i4 = i5 * 2;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i4, i3);
i5 = i5 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = i5 * 2;
if $i0 < 97 goto $i2 = i5 * 2;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @parameter0: java.util.concurrent.atomic.AtomicIntegerArray;
r1 := @parameter1: java.util.concurrent.atomic.AtomicIntegerArray;
i1 := @parameter2: int;
i3 := @parameter3: int;
i5 = 0;
goto [?= $i0 = i5 * 2];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = i5 * 2;
if $i0 < 97 goto $i2 = i5 * 2;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i5 * 2;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i2, i1);
$i4 = i5 * 2;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i4, i3);
i5 = i5 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = i5 * 2;
if $i0 < 97 goto $i2 = i5 * 2;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = i5 * 2;
if $i0 < 97 goto $i2 = i5 * 2;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i0 = i5 * 2;
if $i0 < 97 goto $i2 = i5 * 2;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i2 = i5 * 2;
virtualinvoke r0.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i2, i1);
$i4 = i5 * 2;
virtualinvoke r1.<java.util.concurrent.atomic.AtomicIntegerArray: void lazySet(int,int)>($i4, i3);
i5 = i5 + 1;
";
}
