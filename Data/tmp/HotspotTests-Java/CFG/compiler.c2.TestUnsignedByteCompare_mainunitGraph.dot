digraph "unitGraph" {
    "r13 := @parameter0: java.lang.String[]"
    "r0 = newarray (byte)[1000]"
    "i10 = 0"
    "goto [?= (branch)]"
    "$i0 = i10 % 126"
    "$i1 = $i0 + 1"
    "i2 = neg $i1"
    "$b3 = (byte) i2"
    "r0[i10] = $b3"
    "i10 = i10 + 1"
    "if i10 < 1000 goto $i0 = i10 % 126"
    "i11 = 0"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)"
    "$i4 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "if $i4 == 0 goto i11 = i11 + 1"
    "$r1 = new java.lang.IllegalStateException"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m1 error: p = \")"
    "$i5 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")"
    "$i6 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6)"
    "throw $r1"
    "i11 = i11 + 1"
    "if i11 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)"
    "i12 = 0"
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)"
    "$i7 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "if $i7 == 0 goto i12 = i12 + 1"
    "$r7 = new java.lang.IllegalStateException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m2 error: p = \")"
    "$i8 = <compiler.c2.TestUnsignedByteCompare: int p>"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")"
    "$i9 = <compiler.c2.TestUnsignedByteCompare: int n>"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12)"
    "throw $r7"
    "i12 = i12 + 1"
    "if i12 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)"
    "return"
    "r13 := @parameter0: java.lang.String[]"->"r0 = newarray (byte)[1000]";
    "r0 = newarray (byte)[1000]"->"i10 = 0";
    "i10 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 < 1000 goto $i0 = i10 % 126";
    "$i0 = i10 % 126"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"i2 = neg $i1";
    "i2 = neg $i1"->"$b3 = (byte) i2";
    "$b3 = (byte) i2"->"r0[i10] = $b3";
    "r0[i10] = $b3"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"if i10 < 1000 goto $i0 = i10 % 126";
    "if i10 < 1000 goto $i0 = i10 % 126"->"i11 = 0";
    "if i10 < 1000 goto $i0 = i10 % 126"->"$i0 = i10 % 126";
    "i11 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)"->"$i4 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "$i4 = <compiler.c2.TestUnsignedByteCompare: int p>"->"if $i4 == 0 goto i11 = i11 + 1";
    "if $i4 == 0 goto i11 = i11 + 1"->"$r1 = new java.lang.IllegalStateException";
    "if $i4 == 0 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "$r1 = new java.lang.IllegalStateException"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m1 error: p = \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m1 error: p = \")"->"$i5 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "$i5 = <compiler.c2.TestUnsignedByteCompare: int p>"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")"->"$i6 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "$i6 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6)"->"throw $r1";
    "i11 = i11 + 1"->"if i11 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)";
    "if i11 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)"->"i12 = 0";
    "if i11 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void m1(byte[])>(r0)";
    "i12 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)";
    "staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)"->"$i7 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "$i7 = <compiler.c2.TestUnsignedByteCompare: int p>"->"if $i7 == 0 goto i12 = i12 + 1";
    "if $i7 == 0 goto i12 = i12 + 1"->"$r7 = new java.lang.IllegalStateException";
    "if $i7 == 0 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$r7 = new java.lang.IllegalStateException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m2 error: p = \")";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"m2 error: p = \")"->"$i8 = <compiler.c2.TestUnsignedByteCompare: int p>";
    "$i8 = <compiler.c2.TestUnsignedByteCompare: int p>"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", n = \")"->"$i9 = <compiler.c2.TestUnsignedByteCompare: int n>";
    "$i9 = <compiler.c2.TestUnsignedByteCompare: int n>"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12)"->"throw $r7";
    "i12 = i12 + 1"->"if i12 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)";
    "if i12 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)"->"return";
    "if i12 < 1000 goto staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)"->"staticinvoke <compiler.c2.TestUnsignedByteCompare: void m2(byte[])>(r0)";
}
