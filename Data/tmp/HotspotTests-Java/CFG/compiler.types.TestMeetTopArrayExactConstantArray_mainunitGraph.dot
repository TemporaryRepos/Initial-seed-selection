digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "r0 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$A)[10]"
    "r1 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$D)[10]"
    "r2 = newarray (java.lang.Object)[10]"
    "i4 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)"
    "$i0 = i4 % 2"
    "if $i0 != 0 goto $z7 = 0"
    "$z7 = 1"
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)]"
    "$z7 = 0"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)"
    "$i1 = i4 % 2"
    "if $i1 != 0 goto $z8 = 0"
    "$z8 = 1"
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)]"
    "$z8 = 0"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)"
    "i4 = i4 + 1"
    "if i4 < 5000 goto staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)"
    "r9 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$C)[10]"
    "i5 = 0"
    "$i2 = i5 % 2"
    "if $i2 != 0 goto $z9 = 0"
    "$z9 = 1"
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)]"
    "$z9 = 0"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)"
    "i5 = i5 + 1"
    "if i5 < 20000 goto $i2 = i5 % 2"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)"
    "i6 = 0"
    "$i3 = i6 % 2"
    "if $i3 != 0 goto $z10 = 0"
    "$z10 = 1"
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)]"
    "$z10 = 0"
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)"
    "i6 = i6 + 1"
    "if i6 < 20000 goto $i3 = i6 % 2"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"r0 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$A)[10]";
    "r0 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$A)[10]"->"r1 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$D)[10]";
    "r1 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$D)[10]"->"r2 = newarray (java.lang.Object)[10]";
    "r2 = newarray (java.lang.Object)[10]"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 5000 goto staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)"->"$i0 = i4 % 2";
    "$i0 = i4 % 2"->"if $i0 != 0 goto $z7 = 0";
    "if $i0 != 0 goto $z7 = 0"->"$z7 = 1";
    "if $i0 != 0 goto $z7 = 0"->"$z7 = 0";
    "$z7 = 1"->"goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)]";
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)]"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)";
    "$z7 = 0"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m2(java.lang.Object[],boolean,boolean)>(r0, 1, $z7)"->"$i1 = i4 % 2";
    "$i1 = i4 % 2"->"if $i1 != 0 goto $z8 = 0";
    "if $i1 != 0 goto $z8 = 0"->"$z8 = 1";
    "if $i1 != 0 goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)]";
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)]"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)";
    "$z8 = 0"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r1, 1, 0, $z8)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 5000 goto staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)";
    "if i4 < 5000 goto staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)"->"r9 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$C)[10]";
    "if i4 < 5000 goto staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m0(java.lang.Object[])>(r2)";
    "r9 = newarray (compiler.types.TestMeetTopArrayExactConstantArray$C)[10]"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 20000 goto $i2 = i5 % 2";
    "$i2 = i5 % 2"->"if $i2 != 0 goto $z9 = 0";
    "if $i2 != 0 goto $z9 = 0"->"$z9 = 1";
    "if $i2 != 0 goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)]";
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)]"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)";
    "$z9 = 0"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z9)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 20000 goto $i2 = i5 % 2";
    "if i5 < 20000 goto $i2 = i5 % 2"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)";
    "if i5 < 20000 goto $i2 = i5 % 2"->"$i2 = i5 % 2";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 1, 0)"->"i6 = 0";
    "i6 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 < 20000 goto $i3 = i6 % 2";
    "$i3 = i6 % 2"->"if $i3 != 0 goto $z10 = 0";
    "if $i3 != 0 goto $z10 = 0"->"$z10 = 1";
    "if $i3 != 0 goto $z10 = 0"->"$z10 = 0";
    "$z10 = 1"->"goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)]";
    "goto [?= staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)]"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)";
    "$z10 = 0"->"staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)";
    "staticinvoke <compiler.types.TestMeetTopArrayExactConstantArray: void m3(compiler.types.TestMeetTopArrayExactConstantArray$C[],boolean,boolean,boolean)>(r9, 1, 0, $z10)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"if i6 < 20000 goto $i3 = i6 % 2";
    "if i6 < 20000 goto $i3 = i6 % 2"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i6 < 20000 goto $i3 = i6 % 2"->"$i3 = i6 % 2";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"return";
}
