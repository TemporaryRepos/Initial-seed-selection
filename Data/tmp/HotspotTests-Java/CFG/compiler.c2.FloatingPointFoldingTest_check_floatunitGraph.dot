digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "f0 := @parameter1: float"
    "f1 := @parameter2: float"
    "$i1 = r0[0]"
    "$i0 = r0[1]"
    "if $i1 != $i0 goto return"
    "$r1 = new java.lang.RuntimeException"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Two different float values are considered equal. \n\")"
    "$r3 = newarray (java.lang.Object)[2]"
    "$i2 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "$r3[0] = $r4"
    "$i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f1)"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "$r3[1] = $r5"
    "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\toriginal values: 0x%x 0x%x\n\", $r3)"
    "$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"
    "$r8 = newarray (java.lang.Object)[2]"
    "$i4 = r0[0]"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "$r8[0] = $r9"
    "$i5 = r0[1]"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "$r8[1] = $r10"
    "$r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\tvalues after execution of method test(): 0x%x 0x%x\", $r8)"
    "$r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"
    "throw $r1"
    "return"
    "r0 := @parameter0: int[]"->"f0 := @parameter1: float";
    "f0 := @parameter1: float"->"f1 := @parameter2: float";
    "f1 := @parameter2: float"->"$i1 = r0[0]";
    "$i1 = r0[0]"->"$i0 = r0[1]";
    "$i0 = r0[1]"->"if $i1 != $i0 goto return";
    "if $i1 != $i0 goto return"->"$r1 = new java.lang.RuntimeException";
    "if $i1 != $i0 goto return"->"return";
    "$r1 = new java.lang.RuntimeException"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Two different float values are considered equal. \n\")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Two different float values are considered equal. \n\")"->"$r3 = newarray (java.lang.Object)[2]";
    "$r3 = newarray (java.lang.Object)[2]"->"$i2 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0)";
    "$i2 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"$r3[0] = $r4";
    "$r3[0] = $r4"->"$i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f1)";
    "$i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f1)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"$r3[1] = $r5";
    "$r3[1] = $r5"->"$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\toriginal values: 0x%x 0x%x\n\", $r3)";
    "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\toriginal values: 0x%x 0x%x\n\", $r3)"->"$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)";
    "$r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"->"$r8 = newarray (java.lang.Object)[2]";
    "$r8 = newarray (java.lang.Object)[2]"->"$i4 = r0[0]";
    "$i4 = r0[0]"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"$r8[0] = $r9";
    "$r8[0] = $r9"->"$i5 = r0[1]";
    "$i5 = r0[1]"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"$r8[1] = $r10";
    "$r8[1] = $r10"->"$r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\tvalues after execution of method test(): 0x%x 0x%x\", $r8)";
    "$r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"\tvalues after execution of method test(): 0x%x 0x%x\", $r8)"->"$r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)";
    "$r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"->"throw $r1";
}
