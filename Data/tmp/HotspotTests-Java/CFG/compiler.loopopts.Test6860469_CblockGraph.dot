digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
i0 := @parameter0: int;
i4 := @parameter1: int;
i5 = -1;
i6 = 17;
if i0 == 0 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= i6 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = i0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
if i0 <= i5 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i0;
"
    "Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
i4 = i5;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i6 <= i4 goto $i1 = i5 - i4;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
i6 = i4;
"
    "Block 9:
[preds: 7 8 ] [succs: 11 ]
$i1 = i5 - i4;
i7 = 1 >> $i1;
goto [?= (branch)];
"
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i2 = 32 - i4;
i3 = i7 << $i2;
$r0 = <compiler.loopopts.Test6860469: int[] fl>;
$r0[i3] = i5;
i7 = i7 + 1;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i7 <= 0 goto $i2 = 32 - i4;
"
    "Block 12:
[preds: 11 ] [succs: ]
return i6;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
i0 := @parameter0: int;
i4 := @parameter1: int;
i5 = -1;
i6 = 17;
if i0 == 0 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= i6 goto (branch);
";
    "Block 0:
[preds: ] [succs: 1 5 ]
i0 := @parameter0: int;
i4 := @parameter1: int;
i5 = -1;
i6 = 17;
if i0 == 0 goto (branch);
"->"Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= i6 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i6 = i0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= i6 goto (branch);
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
if i0 <= i5 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = i0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
if i0 <= i5 goto (branch);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
if i0 <= i5 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
if i0 <= i5 goto (branch);
"->"Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i0;
"->"Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
";
    "Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 ]
i4 = i5;
";
    "Block 5:
[preds: 0 3 4 ] [succs: 6 7 ]
if i4 <= i5 goto (branch);
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i6 <= i4 goto $i1 = i5 - i4;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
i4 = i5;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i6 <= i4 goto $i1 = i5 - i4;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i6 <= i4 goto $i1 = i5 - i4;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
i6 = i4;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
if i6 <= i4 goto $i1 = i5 - i4;
"->"Block 9:
[preds: 7 8 ] [succs: 11 ]
$i1 = i5 - i4;
i7 = 1 >> $i1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
i6 = i4;
"->"Block 9:
[preds: 7 8 ] [succs: 11 ]
$i1 = i5 - i4;
i7 = 1 >> $i1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 8 ] [succs: 11 ]
$i1 = i5 - i4;
i7 = 1 >> $i1;
goto [?= (branch)];
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i7 <= 0 goto $i2 = 32 - i4;
";
    "Block 10:
[preds: 11 ] [succs: 11 ]
$i2 = 32 - i4;
i3 = i7 << $i2;
$r0 = <compiler.loopopts.Test6860469: int[] fl>;
$r0[i3] = i5;
i7 = i7 + 1;
"->"Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i7 <= 0 goto $i2 = 32 - i4;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i7 <= 0 goto $i2 = 32 - i4;
"->"Block 12:
[preds: 11 ] [succs: ]
return i6;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 10 ]
if i7 <= 0 goto $i2 = 32 - i4;
"->"Block 10:
[preds: 11 ] [succs: 11 ]
$i2 = 32 - i4;
i3 = i7 << $i2;
$r0 = <compiler.loopopts.Test6860469: int[] fl>;
$r0[i3] = i5;
i7 = i7 + 1;
";
}
