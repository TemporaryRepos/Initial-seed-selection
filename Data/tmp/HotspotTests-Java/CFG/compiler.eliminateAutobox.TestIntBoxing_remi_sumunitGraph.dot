digraph "unitGraph" {
    "$r0 = new java.lang.Integer"
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)"
    "r2 = $r0"
    "i3 = 0"
    "goto [?= (branch)]"
    "$r1 = new java.lang.Integer"
    "$i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i1 = $i0 + 1"
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1)"
    "r2 = $r1"
    "i3 = i3 + 1"
    "if i3 < 1000 goto $r1 = new java.lang.Integer"
    "$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "return $i2"
    "$r0 = new java.lang.Integer"->"specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1)"->"r2 = $r0";
    "r2 = $r0"->"i3 = 0";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 1000 goto $r1 = new java.lang.Integer";
    "$r1 = new java.lang.Integer"->"$i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1)";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1)"->"r2 = $r1";
    "r2 = $r1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 1000 goto $r1 = new java.lang.Integer";
    "if i3 < 1000 goto $r1 = new java.lang.Integer"->"$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "if i3 < 1000 goto $r1 = new java.lang.Integer"->"$r1 = new java.lang.Integer";
    "$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"return $i2";
}
