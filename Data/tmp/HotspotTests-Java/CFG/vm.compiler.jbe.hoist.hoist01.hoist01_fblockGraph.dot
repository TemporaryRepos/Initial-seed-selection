digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: vm.compiler.jbe.hoist.hoist01.hoist01;
i22 = 1;
goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(0.31831015504887655, 3.0);
$d1 = 6.28318 * $d0;
$d2 = staticinvoke <java.lang.Math: double sin(double)>($d1);
$r2[0] = $d2;
$r4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d5 = $r3[0];
$i2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i1>;
$i1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i2>;
$i3 = $i2 + $i1;
$d3 = (double) $i3;
$d4 = $d3 * 3.14159;
$d7 = $d5 + $d4;
$i4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i3>;
$d6 = (double) $i4;
$d9 = $d7 + $d6;
$i5 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i4>;
$d8 = (double) $i5;
$d11 = $d9 + $d8;
$i7 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i5>;
$i6 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i6>;
$i9 = $i7 / $i6;
$i8 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i7>;
$i10 = $i9 * $i8;
$d10 = (double) $i10;
$d13 = $d11 + $d10;
$i12 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i9>;
$i11 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i8>;
$i13 = $i12 % $i11;
$d12 = (double) $i13;
$d15 = $d13 + $d12;
$i17 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i10>;
$i15 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i11>;
$i14 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i12>;
$i16 = $i15 * $i14;
$i18 = $i17 * $i16;
$d14 = (double) $i18;
$d17 = $d15 + $d14;
$i19 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i13>;
$d16 = (double) $i19;
$d19 = $d17 + $d16;
$i20 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i14>;
$d18 = (double) $i20;
$d21 = $d19 + $d18;
$i21 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i15>;
$d20 = (double) $i21;
$d22 = $d21 + $d20;
$r4[i22] = $d22;
i22 = i22 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$i0 = lengthof $r1;
if i22 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: vm.compiler.jbe.hoist.hoist01.hoist01;
i22 = 1;
goto [?= $r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$i0 = lengthof $r1;
if i22 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(0.31831015504887655, 3.0);
$d1 = 6.28318 * $d0;
$d2 = staticinvoke <java.lang.Math: double sin(double)>($d1);
$r2[0] = $d2;
$r4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d5 = $r3[0];
$i2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i1>;
$i1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i2>;
$i3 = $i2 + $i1;
$d3 = (double) $i3;
$d4 = $d3 * 3.14159;
$d7 = $d5 + $d4;
$i4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i3>;
$d6 = (double) $i4;
$d9 = $d7 + $d6;
$i5 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i4>;
$d8 = (double) $i5;
$d11 = $d9 + $d8;
$i7 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i5>;
$i6 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i6>;
$i9 = $i7 / $i6;
$i8 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i7>;
$i10 = $i9 * $i8;
$d10 = (double) $i10;
$d13 = $d11 + $d10;
$i12 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i9>;
$i11 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i8>;
$i13 = $i12 % $i11;
$d12 = (double) $i13;
$d15 = $d13 + $d12;
$i17 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i10>;
$i15 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i11>;
$i14 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i12>;
$i16 = $i15 * $i14;
$i18 = $i17 * $i16;
$d14 = (double) $i18;
$d17 = $d15 + $d14;
$i19 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i13>;
$d16 = (double) $i19;
$d19 = $d17 + $d16;
$i20 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i14>;
$d18 = (double) $i20;
$d21 = $d19 + $d18;
$i21 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i15>;
$d20 = (double) $i21;
$d22 = $d21 + $d20;
$r4[i22] = $d22;
i22 = i22 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$i0 = lengthof $r1;
if i22 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$i0 = lengthof $r1;
if i22 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$r1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$i0 = lengthof $r1;
if i22 < $i0 goto $r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d0 = staticinvoke <java.lang.Math: double pow(double,double)>(0.31831015504887655, 3.0);
$d1 = 6.28318 * $d0;
$d2 = staticinvoke <java.lang.Math: double sin(double)>($d1);
$r2[0] = $d2;
$r4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$r3 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: double[] a>;
$d5 = $r3[0];
$i2 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i1>;
$i1 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i2>;
$i3 = $i2 + $i1;
$d3 = (double) $i3;
$d4 = $d3 * 3.14159;
$d7 = $d5 + $d4;
$i4 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i3>;
$d6 = (double) $i4;
$d9 = $d7 + $d6;
$i5 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i4>;
$d8 = (double) $i5;
$d11 = $d9 + $d8;
$i7 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i5>;
$i6 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i6>;
$i9 = $i7 / $i6;
$i8 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i7>;
$i10 = $i9 * $i8;
$d10 = (double) $i10;
$d13 = $d11 + $d10;
$i12 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i9>;
$i11 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i8>;
$i13 = $i12 % $i11;
$d12 = (double) $i13;
$d15 = $d13 + $d12;
$i17 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i10>;
$i15 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i11>;
$i14 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i12>;
$i16 = $i15 * $i14;
$i18 = $i17 * $i16;
$d14 = (double) $i18;
$d17 = $d15 + $d14;
$i19 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i13>;
$d16 = (double) $i19;
$d19 = $d17 + $d16;
$i20 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i14>;
$d18 = (double) $i20;
$d21 = $d19 + $d18;
$i21 = r0.<vm.compiler.jbe.hoist.hoist01.hoist01: int i15>;
$d20 = (double) $i21;
$d22 = $d21 + $d20;
$r4[i22] = $d22;
i22 = i22 + 1;
";
}
