digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r2 := @parameter0: java.lang.String;
z0 = 1;
i2 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i0 = $r0[i2];
if $i0 == 42 goto i2 = i2 + 1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
z0 = 0;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i1 = $r8[i2];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i2 = i2 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i2 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
"
    "Block 5:
[preds: 4 ] [succs: ]
return z0;
"
    "Block 0:
[preds: ] [succs: 4 ]
r2 := @parameter0: java.lang.String;
z0 = 1;
i2 = 0;
goto [?= (branch)];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i2 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i0 = $r0[i2];
if $i0 == 42 goto i2 = i2 + 1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
z0 = 0;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i1 = $r8[i2];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i0 = $r0[i2];
if $i0 == 42 goto i2 = i2 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i2 = i2 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
z0 = 0;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" failed: array[\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \");
$r8 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i1 = $r8[i2];
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i2 = i2 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i2 = i2 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i2 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i2 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
"->"Block 5:
[preds: 4 ] [succs: ]
return z0;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
if i2 < 1000 goto $r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$r0 = <compiler.loopopts.TestMoveStoresOutOfLoops: int[] array4>;
$i0 = $r0[i2];
if $i0 == 42 goto i2 = i2 + 1;
";
}
