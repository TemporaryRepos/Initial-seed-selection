digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Short;
$s0 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>(1);
specialinvoke $r0.<java.lang.Short: void <init>(short)>($s0);
r2 = $r0;
i6 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new java.lang.Short;
$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
$i2 = $s1 + 1;
$s3 = (short) $i2;
$s4 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s3);
specialinvoke $r1.<java.lang.Short: void <init>(short)>($s4);
r2 = $r1;
i6 = i6 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 1000 goto $r1 = new java.lang.Short;
"
    "Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestShortBoxing: void dummy()>();
$s5 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
return $s5;
"
    "Block 0:
[preds: ] [succs: 2 ]
$r0 = new java.lang.Short;
$s0 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>(1);
specialinvoke $r0.<java.lang.Short: void <init>(short)>($s0);
r2 = $r0;
i6 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 1000 goto $r1 = new java.lang.Short;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new java.lang.Short;
$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
$i2 = $s1 + 1;
$s3 = (short) $i2;
$s4 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s3);
specialinvoke $r1.<java.lang.Short: void <init>(short)>($s4);
r2 = $r1;
i6 = i6 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 1000 goto $r1 = new java.lang.Short;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 1000 goto $r1 = new java.lang.Short;
"->"Block 3:
[preds: 2 ] [succs: ]
staticinvoke <compiler.eliminateAutobox.TestShortBoxing: void dummy()>();
$s5 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
return $s5;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i6 < 1000 goto $r1 = new java.lang.Short;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r1 = new java.lang.Short;
$s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
$i2 = $s1 + 1;
$s3 = (short) $i2;
$s4 = staticinvoke <compiler.eliminateAutobox.TestShortBoxing: short foo(short)>($s3);
specialinvoke $r1.<java.lang.Short: void <init>(short)>($s4);
r2 = $r1;
i6 = i6 + 1;
";
}
