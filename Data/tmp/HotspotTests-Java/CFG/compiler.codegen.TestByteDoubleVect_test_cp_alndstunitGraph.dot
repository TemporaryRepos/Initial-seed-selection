digraph "unitGraph" {
    "r0 := @parameter0: byte[]"
    "r1 := @parameter1: byte[]"
    "r2 := @parameter2: double[]"
    "r3 := @parameter3: double[]"
    "i5 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$i3 = i5 + 8"
    "$b2 = r1[i5]"
    "r0[$i3] = $b2"
    "$i4 = i5 + 8"
    "$d0 = r3[i5]"
    "r2[$i4] = $d0"
    "i5 = i5 + 1"
    "$i0 = lengthof r0"
    "$i1 = $i0 - 8"
    "if i5 < $i1 goto $i3 = i5 + 8"
    "return"
    "r0 := @parameter0: byte[]"->"r1 := @parameter1: byte[]";
    "r1 := @parameter1: byte[]"->"r2 := @parameter2: double[]";
    "r2 := @parameter2: double[]"->"r3 := @parameter3: double[]";
    "r3 := @parameter3: double[]"->"i5 = 0";
    "i5 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$i3 = i5 + 8"->"$b2 = r1[i5]";
    "$b2 = r1[i5]"->"r0[$i3] = $b2";
    "r0[$i3] = $b2"->"$i4 = i5 + 8";
    "$i4 = i5 + 8"->"$d0 = r3[i5]";
    "$d0 = r3[i5]"->"r2[$i4] = $d0";
    "r2[$i4] = $d0"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"$i1 = $i0 - 8";
    "$i1 = $i0 - 8"->"if i5 < $i1 goto $i3 = i5 + 8";
    "if i5 < $i1 goto $i3 = i5 + 8"->"return";
    "if i5 < $i1 goto $i3 = i5 + 8"->"$i3 = i5 + 8";
}
