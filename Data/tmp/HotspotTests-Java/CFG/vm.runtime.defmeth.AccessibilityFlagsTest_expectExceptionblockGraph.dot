digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @this: vm.runtime.defmeth.AccessibilityFlagsTest;
r3 := @parameter0: vm.runtime.defmeth.shared.data.Clazz;
r7 := @parameter1: java.lang.Class;
$r1 = r0.<vm.runtime.defmeth.AccessibilityFlagsTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
r4 = virtualinvoke $r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TestBuilder register(vm.runtime.defmeth.shared.data.Clazz)>(r3);
$r5 = virtualinvoke r4.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder loadClass(vm.runtime.defmeth.shared.data.Clazz)>(r3);
$r8 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(r7);
$r9 = virtualinvoke $r8.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
return;
"
}
