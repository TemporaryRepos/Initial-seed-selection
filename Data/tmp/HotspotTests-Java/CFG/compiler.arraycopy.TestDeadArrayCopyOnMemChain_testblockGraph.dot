digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
z0 := @parameter1: boolean;
r0 = newarray (java.lang.Object)[10];
r1 = newarray (java.lang.Object)[10];
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10);
"
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r2 := @caughtexception;
if z0 == 0 goto return;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1);
"
    "Block 5:
[preds: 2 3 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
z0 := @parameter1: boolean;
r0 = newarray (java.lang.Object)[10];
r1 = newarray (java.lang.Object)[10];
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
i0 := @parameter0: int;
z0 := @parameter1: boolean;
r0 = newarray (java.lang.Object)[10];
r1 = newarray (java.lang.Object)[10];
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r2 := @caughtexception;
if z0 == 0 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10);
"->"Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r0, 0, 10);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r2 := @caughtexception;
if z0 == 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 5 ]
goto [?= return];
"->"Block 5:
[preds: 2 3 4 ] [succs: ]
return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r2 := @caughtexception;
if z0 == 0 goto return;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1);
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$r2 := @caughtexception;
if z0 == 0 goto return;
"->"Block 5:
[preds: 2 3 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <compiler.arraycopy.TestDeadArrayCopyOnMemChain: void test_helper(java.lang.Object)>(r1);
"->"Block 5:
[preds: 2 3 4 ] [succs: ]
return;
";
}
