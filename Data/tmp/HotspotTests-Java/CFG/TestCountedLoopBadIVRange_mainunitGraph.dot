digraph "unitGraph" {
    "r9 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[20]"
    "i1 = 0"
    "goto [?= $i0 = lengthof r0]"
    "r0[i1] = i1"
    "i1 = i1 + 1"
    "$i0 = lengthof r0"
    "if i1 < $i0 goto r0[i1] = i1"
    "i2 = 0"
    "goto [?= (branch)]"
    "i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)"
    "if i3 == 155 goto i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)"
    "$r5 = new java.lang.RuntimeException"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"
    "throw $r5"
    "i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)"
    "if i4 == 41 goto i2 = i2 + 1"
    "$r1 = new java.lang.RuntimeException"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)"
    "throw $r1"
    "i2 = i2 + 1"
    "if i2 < 20000 goto i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)"
    "return"
    "r9 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[20]";
    "r0 = newarray (int)[20]"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "r0[i1] = i1"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i1 < $i0 goto r0[i1] = i1";
    "if i1 < $i0 goto r0[i1] = i1"->"i2 = 0";
    "if i1 < $i0 goto r0[i1] = i1"->"r0[i1] = i1";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 20000 goto i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)";
    "i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)"->"if i3 == 155 goto i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)";
    "if i3 == 155 goto i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)"->"$r5 = new java.lang.RuntimeException";
    "if i3 == 155 goto i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)"->"i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)";
    "$r5 = new java.lang.RuntimeException"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"->"throw $r5";
    "i4 = staticinvoke <TestCountedLoopBadIVRange: int test2(int[])>(r0)"->"if i4 == 41 goto i2 = i2 + 1";
    "if i4 == 41 goto i2 = i2 + 1"->"$r1 = new java.lang.RuntimeException";
    "if i4 == 41 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r1 = new java.lang.RuntimeException"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Incorrect result \")"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4)"->"throw $r1";
    "i2 = i2 + 1"->"if i2 < 20000 goto i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)";
    "if i2 < 20000 goto i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)"->"return";
    "if i2 < 20000 goto i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)"->"i3 = staticinvoke <TestCountedLoopBadIVRange: int test1(int[])>(r0)";
}
