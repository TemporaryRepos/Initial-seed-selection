digraph "unitGraph" {
    "r23 := @parameter0: java.lang.String[]"
    "i5 = 0"
    "goto [?= (branch)]"
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)"
    "i5 = i5 + 1"
    "if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)"
    "staticinvoke <java.lang.Thread: void sleep(long)>(500L)"
    "<compiler.c2.Test8004741: int passed> = 0"
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100)"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\")"
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"
    "goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)]"
    "$r21 := @caughtexception"
    "$r22 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\")"
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\")"
    "goto [?= b6 = 12]"
    "$r19 := @caughtexception"
    "$r20 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\")"
    "b6 = 12"
    "i7 = 0"
    "staticinvoke <compiler.c2.Test8004741: void threadTest()>()"
    "i7 = i7 + 1"
    "if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>()"
    "$i1 = <compiler.c2.Test8004741: int passed>"
    "$i0 = b6 / 2"
    "if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \")"
    "$i4 = <compiler.c2.Test8004741: int passed>"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")"
    "goto [?= return]"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \")"
    "$i2 = b6 / 2"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \")"
    "$i3 = <compiler.c2.Test8004741: int passed>"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "return"
    "r23 := @parameter0: java.lang.String[]"->"i5 = 0";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)";
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)";
    "if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)"->"staticinvoke <java.lang.Thread: void sleep(long)>(500L)";
    "if i5 < 11000 goto staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)"->"staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(2, 100)";
    "staticinvoke <java.lang.Thread: void sleep(long)>(500L)"->"<compiler.c2.Test8004741: int passed> = 0";
    "<compiler.c2.Test8004741: int passed> = 0"->"staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100)";
    "<compiler.c2.Test8004741: int passed> = 0"->"$r21 := @caughtexception";
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100)"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(-1, 100)"->"$r21 := @caughtexception";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\")";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r21 := @caughtexception";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\")"->"staticinvoke <compiler.c2.Test8004741: void fail()>()";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #1\")"->"$r21 := @caughtexception";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)]";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"$r21 := @caughtexception";
    "goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)]"->"staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)";
    "goto [?= staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)]"->"$r19 := @caughtexception";
    "$r21 := @caughtexception"->"$r22 = <java.lang.System: java.io.PrintStream out>";
    "$r22 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\")";
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\")"->"staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)";
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #1\")"->"$r19 := @caughtexception";
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)"->"staticinvoke <compiler.c2.Test8004741: void fail()>()";
    "staticinvoke <compiler.c2.Test8004741: int[][] test(int,int)>(100, -1)"->"$r19 := @caughtexception";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"$r19 := @caughtexception";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\")";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r19 := @caughtexception";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\")"->"staticinvoke <compiler.c2.Test8004741: void fail()>()";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Missing NegativeArraySizeException #2\")"->"$r19 := @caughtexception";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"goto [?= b6 = 12]";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"$r19 := @caughtexception";
    "goto [?= b6 = 12]"->"b6 = 12";
    "$r19 := @caughtexception"->"$r20 = <java.lang.System: java.io.PrintStream out>";
    "$r20 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\")";
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"Saw expected NegativeArraySizeException #2\")"->"b6 = 12";
    "b6 = 12"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>()";
    "staticinvoke <compiler.c2.Test8004741: void threadTest()>()"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>()";
    "if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>()"->"$i1 = <compiler.c2.Test8004741: int passed>";
    "if i7 < b6 goto staticinvoke <compiler.c2.Test8004741: void threadTest()>()"->"staticinvoke <compiler.c2.Test8004741: void threadTest()>()";
    "$i1 = <compiler.c2.Test8004741: int passed>"->"$i0 = b6 / 2";
    "$i0 = b6 / 2"->"if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>";
    "if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "if $i1 <= $i0 goto $r6 = <java.lang.System: java.io.PrintStream out>"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \")";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Saw \")"->"$i4 = <compiler.c2.Test8004741: int passed>";
    "$i4 = <compiler.c2.Test8004741: int passed>"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" out of \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" possible ThreadDeath hits\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"PASSED\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \")";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Too few ThreadDeath hits; expected at least \")"->"$i2 = b6 / 2";
    "$i2 = b6 / 2"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but saw only \")"->"$i3 = <compiler.c2.Test8004741: int passed>";
    "$i3 = <compiler.c2.Test8004741: int passed>"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"staticinvoke <compiler.c2.Test8004741: void fail()>()";
    "staticinvoke <compiler.c2.Test8004741: void fail()>()"->"return";
}
