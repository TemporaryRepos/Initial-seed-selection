digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
i0 := @parameter0: int;
z0 = 0;
z1 = 0;
i1 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
if z0 == 0 goto $z2 = 1;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
z0 = $z2;
i1 = i1 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < i0 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
"
    "Block 7:
[preds: 8 ] [succs: 8 ]
z1 = z1 ^ 1;
i2 = i2 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < i0 goto z1 = z1 ^ 1;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
"
    "Block 11:
[preds: 9 ] [succs: 12 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\");
"
    "Block 12:
[preds: 10 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
i0 := @parameter0: int;
z0 = 0;
z1 = 0;
i1 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < i0 goto (branch);
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
if z0 == 0 goto $z2 = 1;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
if z0 == 0 goto $z2 = 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z2 = 0;
goto [?= z0 = $z2];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
z0 = $z2;
i1 = i1 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z2 = 1;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
z0 = $z2;
i1 = i1 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
z0 = $z2;
i1 = i1 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < i0 goto (branch);
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < i0 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i1 < i0 goto (branch);
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
if z0 == 0 goto $z2 = 1;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
i2 = 0;
goto [?= (branch)];
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < i0 goto z1 = z1 ^ 1;
";
    "Block 7:
[preds: 8 ] [succs: 8 ]
z1 = z1 ^ 1;
i2 = i2 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < i0 goto z1 = z1 ^ 1;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < i0 goto z1 = z1 ^ 1;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 7 ]
if i2 < i0 goto z1 = z1 ^ 1;
"->"Block 7:
[preds: 8 ] [succs: 8 ]
z1 = z1 ^ 1;
i2 = i2 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if z0 == z1 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 9 ] [succs: 12 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\");
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"ERROR: Boolean invert\n\ttest1=\");
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\ttest2=\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);
staticinvoke <java.lang.System: void exit(int)>(97);
goto [?= return];
"->"Block 12:
[preds: 10 11 ] [succs: ]
return;
";
    "Block 11:
[preds: 9 ] [succs: 12 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Passed!\");
"->"Block 12:
[preds: 10 11 ] [succs: ]
return;
";
}
