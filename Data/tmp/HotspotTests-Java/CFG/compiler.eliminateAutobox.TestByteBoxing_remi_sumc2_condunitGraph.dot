digraph "unitGraph" {
    "r1 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"
    "r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(1)"
    "i12 = 0"
    "goto [?= (branch)]"
    "$i0 = i12 & 1"
    "if $i0 != 0 goto $b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"
    "$b4 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"
    "$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"
    "$b5 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()"
    "$i6 = $b4 + $b5"
    "$b7 = (byte) $i6"
    "r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7)"
    "goto [?= i12 = i12 + 1]"
    "$b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"
    "$i2 = $b1 + 2"
    "$b3 = (byte) $i2"
    "r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3)"
    "i12 = i12 + 1"
    "if i12 < 1000 goto $i0 = i12 & 1"
    "$b8 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"
    "$b9 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"
    "$i10 = $b8 + $b9"
    "$b11 = (byte) $i10"
    "return $b11"
    "r1 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"->"r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(1)";
    "r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(1)"->"i12 = 0";
    "i12 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 < 1000 goto $i0 = i12 & 1";
    "$i0 = i12 & 1"->"if $i0 != 0 goto $b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()";
    "if $i0 != 0 goto $b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"->"$b4 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()";
    "if $i0 != 0 goto $b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"->"$b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()";
    "$b4 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"->"$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>";
    "$r0 = <compiler.eliminateAutobox.TestByteBoxing: java.lang.Byte ibc>"->"$b5 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()";
    "$b5 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>()"->"$i6 = $b4 + $b5";
    "$i6 = $b4 + $b5"->"$b7 = (byte) $i6";
    "$b7 = (byte) $i6"->"r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7)";
    "r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7)"->"goto [?= i12 = i12 + 1]";
    "goto [?= i12 = i12 + 1]"->"i12 = i12 + 1";
    "$b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"->"$i2 = $b1 + 2";
    "$i2 = $b1 + 2"->"$b3 = (byte) $i2";
    "$b3 = (byte) $i2"->"r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3)";
    "r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3)"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"if i12 < 1000 goto $i0 = i12 & 1";
    "if i12 < 1000 goto $i0 = i12 & 1"->"$b8 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()";
    "if i12 < 1000 goto $i0 = i12 & 1"->"$i0 = i12 & 1";
    "$b8 = virtualinvoke r1.<java.lang.Byte: byte byteValue()>()"->"$b9 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()";
    "$b9 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>()"->"$i10 = $b8 + $b9";
    "$i10 = $b8 + $b9"->"$b11 = (byte) $i10";
    "$b11 = (byte) $i10"->"return $b11";
}
