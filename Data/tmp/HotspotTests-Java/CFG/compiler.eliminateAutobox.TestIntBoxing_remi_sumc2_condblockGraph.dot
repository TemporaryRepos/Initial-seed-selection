digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r1 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
i9 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i9 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i4 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();
$i5 = $i3 + $i4;
r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
goto [?= i9 = i9 + 1];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i9 < 1000 goto $i0 = i9 & 1;
"
    "Block 6:
[preds: 5 ] [succs: ]
$i6 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i7 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i8 = $i6 + $i7;
return $i8;
"
    "Block 0:
[preds: ] [succs: 5 ]
r1 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
i9 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i9 < 1000 goto $i0 = i9 & 1;
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i9 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i4 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();
$i5 = $i3 + $i4;
r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
goto [?= i9 = i9 + 1];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i9 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$r0 = <compiler.eliminateAutobox.TestIntBoxing: java.lang.Integer ibc>;
$i4 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();
$i5 = $i3 + $i4;
r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
goto [?= i9 = i9 + 1];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 2;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i9 = i9 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i9 < 1000 goto $i0 = i9 & 1;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i9 < 1000 goto $i0 = i9 & 1;
"->"Block 6:
[preds: 5 ] [succs: ]
$i6 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
$i7 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
$i8 = $i6 + $i7;
return $i8;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
if i9 < 1000 goto $i0 = i9 & 1;
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$i0 = i9 & 1;
if $i0 != 0 goto $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
";
}
