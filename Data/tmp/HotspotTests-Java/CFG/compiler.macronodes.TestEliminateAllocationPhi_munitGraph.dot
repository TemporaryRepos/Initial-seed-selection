digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "z0 := @parameter1: boolean"
    "i2 = 0"
    "$i0 = i2"
    "i2 = i2 + 1"
    "i3 = r0[$i0]"
    "if z0 == 0 goto (branch)"
    "i3 = i3 + 42"
    "if i3 >= 1000 goto $r1 = new java.lang.Integer"
    "$r2 = new java.lang.Exception"
    "specialinvoke $r2.<java.lang.Exception: void <init>()>()"
    "throw $r2"
    "$r1 = new java.lang.Integer"
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)"
    "r4 = $r1"
    "r5 = staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(r4, 0)"
    "i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"
    "return i1"
    "$r3 := @caughtexception"
    "goto [?= $i0 = i2]"
    "r0 := @parameter0: int[]"->"z0 := @parameter1: boolean";
    "z0 := @parameter1: boolean"->"i2 = 0";
    "i2 = 0"->"$i0 = i2";
    "i2 = 0"->"$r3 := @caughtexception";
    "$i0 = i2"->"i2 = i2 + 1";
    "$i0 = i2"->"$r3 := @caughtexception";
    "i2 = i2 + 1"->"i3 = r0[$i0]";
    "i2 = i2 + 1"->"$r3 := @caughtexception";
    "i3 = r0[$i0]"->"if z0 == 0 goto (branch)";
    "i3 = r0[$i0]"->"$r3 := @caughtexception";
    "if z0 == 0 goto (branch)"->"i3 = i3 + 42";
    "if z0 == 0 goto (branch)"->"if i3 >= 1000 goto $r1 = new java.lang.Integer";
    "if z0 == 0 goto (branch)"->"$r3 := @caughtexception";
    "i3 = i3 + 42"->"if i3 >= 1000 goto $r1 = new java.lang.Integer";
    "i3 = i3 + 42"->"$r3 := @caughtexception";
    "if i3 >= 1000 goto $r1 = new java.lang.Integer"->"$r2 = new java.lang.Exception";
    "if i3 >= 1000 goto $r1 = new java.lang.Integer"->"$r1 = new java.lang.Integer";
    "if i3 >= 1000 goto $r1 = new java.lang.Integer"->"$r3 := @caughtexception";
    "$r2 = new java.lang.Exception"->"specialinvoke $r2.<java.lang.Exception: void <init>()>()";
    "$r2 = new java.lang.Exception"->"$r3 := @caughtexception";
    "specialinvoke $r2.<java.lang.Exception: void <init>()>()"->"throw $r2";
    "specialinvoke $r2.<java.lang.Exception: void <init>()>()"->"$r3 := @caughtexception";
    "throw $r2"->"$r3 := @caughtexception";
    "$r1 = new java.lang.Integer"->"specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)";
    "$r1 = new java.lang.Integer"->"$r3 := @caughtexception";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)"->"r4 = $r1";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)"->"$r3 := @caughtexception";
    "r4 = $r1"->"r5 = staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(r4, 0)";
    "r4 = $r1"->"$r3 := @caughtexception";
    "r5 = staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(r4, 0)"->"i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>()";
    "r5 = staticinvoke <compiler.macronodes.TestEliminateAllocationPhi: java.lang.Integer m2(java.lang.Integer,int)>(r4, 0)"->"$r3 := @caughtexception";
    "i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"->"return i1";
    "i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"goto [?= $i0 = i2]";
    "goto [?= $i0 = i2]"->"$i0 = i2";
    "goto [?= $i0 = i2]"->"$r3 := @caughtexception";
}
