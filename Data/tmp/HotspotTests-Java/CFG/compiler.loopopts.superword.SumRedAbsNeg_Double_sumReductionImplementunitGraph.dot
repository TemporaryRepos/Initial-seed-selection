digraph "unitGraph" {
    "r0 := @parameter0: double[]"
    "r2 := @parameter1: double[]"
    "r3 := @parameter2: double[]"
    "r1 := @parameter3: double[]"
    "d21 := @parameter4: double"
    "i1 = 0"
    "goto [?= $i0 = lengthof r0]"
    "$d0 = r0[i1]"
    "$d3 = neg $d0"
    "$d1 = r2[i1]"
    "$d2 = neg $d1"
    "$d4 = $d3 * $d2"
    "$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)"
    "$d6 = r0[i1]"
    "$d9 = neg $d6"
    "$d7 = r3[i1]"
    "$d8 = neg $d7"
    "$d10 = $d9 * $d8"
    "$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)"
    "$d17 = $d5 + $d11"
    "$d12 = r2[i1]"
    "$d15 = neg $d12"
    "$d13 = r3[i1]"
    "$d14 = neg $d13"
    "$d16 = $d15 * $d14"
    "$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16)"
    "$d19 = $d17 + $d18"
    "r1[i1] = $d19"
    "$d20 = r1[i1]"
    "d21 = d21 + $d20"
    "i1 = i1 + 1"
    "$i0 = lengthof r0"
    "if i1 < $i0 goto $d0 = r0[i1]"
    "return d21"
    "r0 := @parameter0: double[]"->"r2 := @parameter1: double[]";
    "r2 := @parameter1: double[]"->"r3 := @parameter2: double[]";
    "r3 := @parameter2: double[]"->"r1 := @parameter3: double[]";
    "r1 := @parameter3: double[]"->"d21 := @parameter4: double";
    "d21 := @parameter4: double"->"i1 = 0";
    "i1 = 0"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$d0 = r0[i1]"->"$d3 = neg $d0";
    "$d3 = neg $d0"->"$d1 = r2[i1]";
    "$d1 = r2[i1]"->"$d2 = neg $d1";
    "$d2 = neg $d1"->"$d4 = $d3 * $d2";
    "$d4 = $d3 * $d2"->"$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)";
    "$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)"->"$d6 = r0[i1]";
    "$d6 = r0[i1]"->"$d9 = neg $d6";
    "$d9 = neg $d6"->"$d7 = r3[i1]";
    "$d7 = r3[i1]"->"$d8 = neg $d7";
    "$d8 = neg $d7"->"$d10 = $d9 * $d8";
    "$d10 = $d9 * $d8"->"$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)";
    "$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)"->"$d17 = $d5 + $d11";
    "$d17 = $d5 + $d11"->"$d12 = r2[i1]";
    "$d12 = r2[i1]"->"$d15 = neg $d12";
    "$d15 = neg $d12"->"$d13 = r3[i1]";
    "$d13 = r3[i1]"->"$d14 = neg $d13";
    "$d14 = neg $d13"->"$d16 = $d15 * $d14";
    "$d16 = $d15 * $d14"->"$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16)";
    "$d18 = staticinvoke <java.lang.Math: double abs(double)>($d16)"->"$d19 = $d17 + $d18";
    "$d19 = $d17 + $d18"->"r1[i1] = $d19";
    "r1[i1] = $d19"->"$d20 = r1[i1]";
    "$d20 = r1[i1]"->"d21 = d21 + $d20";
    "d21 = d21 + $d20"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i1 < $i0 goto $d0 = r0[i1]";
    "if i1 < $i0 goto $d0 = r0[i1]"->"return d21";
    "if i1 < $i0 goto $d0 = r0[i1]"->"$d0 = r0[i1]";
}
