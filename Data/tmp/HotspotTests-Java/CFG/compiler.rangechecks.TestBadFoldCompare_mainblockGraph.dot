digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 11 ]
r5 := @parameter0: java.lang.String[];
z4 = 1;
i48 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 11 ] [succs: 2 3 ]
$i0 = i48 % 2;
if $i0 != 0 goto $z5 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z5 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z5 = 0;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5);
$i1 = i48 % 2;
if $i1 != 0 goto $z6 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z6 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z6 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6);
$i2 = i48 % 2;
if $i2 != 0 goto $z7 = 0;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z7 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z7 = 0;
"
    "Block 10:
[preds: 8 9 ] [succs: 11 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0);
i48 = i48 + 1;
"
    "Block 11:
[preds: 0 10 ] [succs: 12 1 ]
if i48 < 20000 goto $i0 = i48 % 2;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1);
$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>;
if $z0 != 0 goto i49 = 0;
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\");
z4 = 0;
"
    "Block 14:
[preds: 12 13 ] [succs: 25 ]
i49 = 0;
goto [?= (branch)];
"
    "Block 15:
[preds: 25 ] [succs: 16 17 ]
$i12 = i49 % 2;
if $i12 != 0 goto $z8 = 0;
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z8 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)];
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z8 = 0;
"
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8);
$i13 = i49 % 2;
if $i13 != 0 goto $z9 = 0;
"
    "Block 19:
[preds: 18 ] [succs: 21 ]
$z9 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)];
"
    "Block 20:
[preds: 18 ] [succs: 21 ]
$z9 = 0;
"
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9);
$i14 = i49 % 2;
if $i14 != 0 goto $z10 = 0;
"
    "Block 22:
[preds: 21 ] [succs: 24 ]
$z10 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)];
"
    "Block 23:
[preds: 21 ] [succs: 24 ]
$z10 = 0;
"
    "Block 24:
[preds: 22 23 ] [succs: 25 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0);
i49 = i49 + 1;
"
    "Block 25:
[preds: 14 24 ] [succs: 26 15 ]
if i49 < 20000 goto $i12 = i49 % 2;
"
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1);
$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>;
if $z1 != 0 goto i50 = 0;
"
    "Block 27:
[preds: 26 ] [succs: 28 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\");
z4 = 0;
"
    "Block 28:
[preds: 26 27 ] [succs: 39 ]
i50 = 0;
goto [?= (branch)];
"
    "Block 29:
[preds: 39 ] [succs: 30 31 ]
$i24 = i50 % 2;
if $i24 != 0 goto $z11 = 0;
"
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z11 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)];
"
    "Block 31:
[preds: 29 ] [succs: 32 ]
$z11 = 0;
"
    "Block 32:
[preds: 30 31 ] [succs: 33 34 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11);
$i25 = i50 % 2;
if $i25 != 0 goto $z12 = 0;
"
    "Block 33:
[preds: 32 ] [succs: 35 ]
$z12 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)];
"
    "Block 34:
[preds: 32 ] [succs: 35 ]
$z12 = 0;
"
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12);
$i26 = i50 % 2;
if $i26 != 0 goto $z13 = 0;
"
    "Block 36:
[preds: 35 ] [succs: 38 ]
$z13 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)];
"
    "Block 37:
[preds: 35 ] [succs: 38 ]
$z13 = 0;
"
    "Block 38:
[preds: 36 37 ] [succs: 39 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0);
i50 = i50 + 1;
"
    "Block 39:
[preds: 28 38 ] [succs: 40 29 ]
if i50 < 20000 goto $i24 = i50 % 2;
"
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1);
$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>;
if $z2 != 0 goto i51 = 0;
"
    "Block 41:
[preds: 40 ] [succs: 42 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\");
z4 = 0;
"
    "Block 42:
[preds: 40 41 ] [succs: 53 ]
i51 = 0;
goto [?= (branch)];
"
    "Block 43:
[preds: 53 ] [succs: 44 45 ]
$i36 = i51 % 2;
if $i36 != 0 goto $z14 = 0;
"
    "Block 44:
[preds: 43 ] [succs: 46 ]
$z14 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)];
"
    "Block 45:
[preds: 43 ] [succs: 46 ]
$z14 = 0;
"
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14);
$i37 = i51 % 2;
if $i37 != 0 goto $z15 = 0;
"
    "Block 47:
[preds: 46 ] [succs: 49 ]
$z15 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)];
"
    "Block 48:
[preds: 46 ] [succs: 49 ]
$z15 = 0;
"
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15);
$i38 = i51 % 2;
if $i38 != 0 goto $z16 = 0;
"
    "Block 50:
[preds: 49 ] [succs: 52 ]
$z16 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)];
"
    "Block 51:
[preds: 49 ] [succs: 52 ]
$z16 = 0;
"
    "Block 52:
[preds: 50 51 ] [succs: 53 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0);
i51 = i51 + 1;
"
    "Block 53:
[preds: 42 52 ] [succs: 54 43 ]
if i51 < 20000 goto $i36 = i51 % 2;
"
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1);
$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>;
if $z3 != 0 goto (branch);
"
    "Block 55:
[preds: 54 ] [succs: 56 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\");
z4 = 0;
"
    "Block 56:
[preds: 54 55 ] [succs: 57 58 ]
if z4 != 0 goto return;
"
    "Block 57:
[preds: 56 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Some tests failed\");
throw $r0;
"
    "Block 58:
[preds: 56 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 11 ]
r5 := @parameter0: java.lang.String[];
z4 = 1;
i48 = 0;
goto [?= (branch)];
"->"Block 11:
[preds: 0 10 ] [succs: 12 1 ]
if i48 < 20000 goto $i0 = i48 % 2;
";
    "Block 1:
[preds: 11 ] [succs: 2 3 ]
$i0 = i48 % 2;
if $i0 != 0 goto $z5 = 0;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$z5 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)];
";
    "Block 1:
[preds: 11 ] [succs: 2 3 ]
$i0 = i48 % 2;
if $i0 != 0 goto $z5 = 0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$z5 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$z5 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5)];
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5);
$i1 = i48 % 2;
if $i1 != 0 goto $z6 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$z5 = 0;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5);
$i1 = i48 % 2;
if $i1 != 0 goto $z6 = 0;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5);
$i1 = i48 % 2;
if $i1 != 0 goto $z6 = 0;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z6 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(5, 0, 10, $z5);
$i1 = i48 % 2;
if $i1 != 0 goto $z6 = 0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$z6 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z6 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6)];
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6);
$i2 = i48 % 2;
if $i2 != 0 goto $z7 = 0;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$z6 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6);
$i2 = i48 % 2;
if $i2 != 0 goto $z7 = 0;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6);
$i2 = i48 % 2;
if $i2 != 0 goto $z7 = 0;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
$z7 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)];
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(-1, 0, 10, $z6);
$i2 = i48 % 2;
if $i2 != 0 goto $z7 = 0;
"->"Block 9:
[preds: 7 ] [succs: 10 ]
$z7 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z7 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7)];
"->"Block 10:
[preds: 8 9 ] [succs: 11 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0);
i48 = i48 + 1;
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z7 = 0;
"->"Block 10:
[preds: 8 9 ] [succs: 11 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0);
i48 = i48 + 1;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper1(int,int,int,boolean)>(15, 0, 10, $z7);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 0);
i48 = i48 + 1;
"->"Block 11:
[preds: 0 10 ] [succs: 12 1 ]
if i48 < 20000 goto $i0 = i48 % 2;
";
    "Block 11:
[preds: 0 10 ] [succs: 12 1 ]
if i48 < 20000 goto $i0 = i48 % 2;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1);
$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>;
if $z0 != 0 goto i49 = 0;
";
    "Block 11:
[preds: 0 10 ] [succs: 12 1 ]
if i48 < 20000 goto $i0 = i48 % 2;
"->"Block 1:
[preds: 11 ] [succs: 2 3 ]
$i0 = i48 % 2;
if $i0 != 0 goto $z5 = 0;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1);
$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>;
if $z0 != 0 goto i49 = 0;
"->"Block 13:
[preds: 12 ] [succs: 14 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\");
z4 = 0;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test1_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test1(int,boolean)>(0, 1);
$z0 = <compiler.rangechecks.TestBadFoldCompare: boolean test1_taken>;
if $z0 != 0 goto i49 = 0;
"->"Block 14:
[preds: 12 13 ] [succs: 25 ]
i49 = 0;
goto [?= (branch)];
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Test1 failed\");
z4 = 0;
"->"Block 14:
[preds: 12 13 ] [succs: 25 ]
i49 = 0;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 25 ]
i49 = 0;
goto [?= (branch)];
"->"Block 25:
[preds: 14 24 ] [succs: 26 15 ]
if i49 < 20000 goto $i12 = i49 % 2;
";
    "Block 15:
[preds: 25 ] [succs: 16 17 ]
$i12 = i49 % 2;
if $i12 != 0 goto $z8 = 0;
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$z8 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)];
";
    "Block 15:
[preds: 25 ] [succs: 16 17 ]
$i12 = i49 % 2;
if $i12 != 0 goto $z8 = 0;
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$z8 = 0;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z8 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8)];
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8);
$i13 = i49 % 2;
if $i13 != 0 goto $z9 = 0;
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z8 = 0;
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8);
$i13 = i49 % 2;
if $i13 != 0 goto $z9 = 0;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8);
$i13 = i49 % 2;
if $i13 != 0 goto $z9 = 0;
"->"Block 19:
[preds: 18 ] [succs: 21 ]
$z9 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)];
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(5, 0, 10, $z8);
$i13 = i49 % 2;
if $i13 != 0 goto $z9 = 0;
"->"Block 20:
[preds: 18 ] [succs: 21 ]
$z9 = 0;
";
    "Block 19:
[preds: 18 ] [succs: 21 ]
$z9 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9)];
"->"Block 21:
[preds: 19 20 ] [succs: 22 23 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9);
$i14 = i49 % 2;
if $i14 != 0 goto $z10 = 0;
";
    "Block 20:
[preds: 18 ] [succs: 21 ]
$z9 = 0;
"->"Block 21:
[preds: 19 20 ] [succs: 22 23 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9);
$i14 = i49 % 2;
if $i14 != 0 goto $z10 = 0;
";
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9);
$i14 = i49 % 2;
if $i14 != 0 goto $z10 = 0;
"->"Block 22:
[preds: 21 ] [succs: 24 ]
$z10 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)];
";
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(-1, 0, 10, $z9);
$i14 = i49 % 2;
if $i14 != 0 goto $z10 = 0;
"->"Block 23:
[preds: 21 ] [succs: 24 ]
$z10 = 0;
";
    "Block 22:
[preds: 21 ] [succs: 24 ]
$z10 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10)];
"->"Block 24:
[preds: 22 23 ] [succs: 25 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0);
i49 = i49 + 1;
";
    "Block 23:
[preds: 21 ] [succs: 24 ]
$z10 = 0;
"->"Block 24:
[preds: 22 23 ] [succs: 25 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0);
i49 = i49 + 1;
";
    "Block 24:
[preds: 22 23 ] [succs: 25 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper2(int,int,int,boolean)>(15, 0, 10, $z10);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 0);
i49 = i49 + 1;
"->"Block 25:
[preds: 14 24 ] [succs: 26 15 ]
if i49 < 20000 goto $i12 = i49 % 2;
";
    "Block 25:
[preds: 14 24 ] [succs: 26 15 ]
if i49 < 20000 goto $i12 = i49 % 2;
"->"Block 26:
[preds: 25 ] [succs: 27 28 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1);
$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>;
if $z1 != 0 goto i50 = 0;
";
    "Block 25:
[preds: 14 24 ] [succs: 26 15 ]
if i49 < 20000 goto $i12 = i49 % 2;
"->"Block 15:
[preds: 25 ] [succs: 16 17 ]
$i12 = i49 % 2;
if $i12 != 0 goto $z8 = 0;
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1);
$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>;
if $z1 != 0 goto i50 = 0;
"->"Block 27:
[preds: 26 ] [succs: 28 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\");
z4 = 0;
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test2_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test2(int,boolean)>(0, 1);
$z1 = <compiler.rangechecks.TestBadFoldCompare: boolean test2_taken>;
if $z1 != 0 goto i50 = 0;
"->"Block 28:
[preds: 26 27 ] [succs: 39 ]
i50 = 0;
goto [?= (branch)];
";
    "Block 27:
[preds: 26 ] [succs: 28 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Test2 failed\");
z4 = 0;
"->"Block 28:
[preds: 26 27 ] [succs: 39 ]
i50 = 0;
goto [?= (branch)];
";
    "Block 28:
[preds: 26 27 ] [succs: 39 ]
i50 = 0;
goto [?= (branch)];
"->"Block 39:
[preds: 28 38 ] [succs: 40 29 ]
if i50 < 20000 goto $i24 = i50 % 2;
";
    "Block 29:
[preds: 39 ] [succs: 30 31 ]
$i24 = i50 % 2;
if $i24 != 0 goto $z11 = 0;
"->"Block 30:
[preds: 29 ] [succs: 32 ]
$z11 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)];
";
    "Block 29:
[preds: 39 ] [succs: 30 31 ]
$i24 = i50 % 2;
if $i24 != 0 goto $z11 = 0;
"->"Block 31:
[preds: 29 ] [succs: 32 ]
$z11 = 0;
";
    "Block 30:
[preds: 29 ] [succs: 32 ]
$z11 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11)];
"->"Block 32:
[preds: 30 31 ] [succs: 33 34 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11);
$i25 = i50 % 2;
if $i25 != 0 goto $z12 = 0;
";
    "Block 31:
[preds: 29 ] [succs: 32 ]
$z11 = 0;
"->"Block 32:
[preds: 30 31 ] [succs: 33 34 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11);
$i25 = i50 % 2;
if $i25 != 0 goto $z12 = 0;
";
    "Block 32:
[preds: 30 31 ] [succs: 33 34 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11);
$i25 = i50 % 2;
if $i25 != 0 goto $z12 = 0;
"->"Block 33:
[preds: 32 ] [succs: 35 ]
$z12 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)];
";
    "Block 32:
[preds: 30 31 ] [succs: 33 34 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(5, 0, 10, $z11);
$i25 = i50 % 2;
if $i25 != 0 goto $z12 = 0;
"->"Block 34:
[preds: 32 ] [succs: 35 ]
$z12 = 0;
";
    "Block 33:
[preds: 32 ] [succs: 35 ]
$z12 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12)];
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12);
$i26 = i50 % 2;
if $i26 != 0 goto $z13 = 0;
";
    "Block 34:
[preds: 32 ] [succs: 35 ]
$z12 = 0;
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12);
$i26 = i50 % 2;
if $i26 != 0 goto $z13 = 0;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12);
$i26 = i50 % 2;
if $i26 != 0 goto $z13 = 0;
"->"Block 36:
[preds: 35 ] [succs: 38 ]
$z13 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)];
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(-1, 0, 10, $z12);
$i26 = i50 % 2;
if $i26 != 0 goto $z13 = 0;
"->"Block 37:
[preds: 35 ] [succs: 38 ]
$z13 = 0;
";
    "Block 36:
[preds: 35 ] [succs: 38 ]
$z13 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13)];
"->"Block 38:
[preds: 36 37 ] [succs: 39 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0);
i50 = i50 + 1;
";
    "Block 37:
[preds: 35 ] [succs: 38 ]
$z13 = 0;
"->"Block 38:
[preds: 36 37 ] [succs: 39 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0);
i50 = i50 + 1;
";
    "Block 38:
[preds: 36 37 ] [succs: 39 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper3(int,int,int,boolean)>(15, 0, 10, $z13);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 0);
i50 = i50 + 1;
"->"Block 39:
[preds: 28 38 ] [succs: 40 29 ]
if i50 < 20000 goto $i24 = i50 % 2;
";
    "Block 39:
[preds: 28 38 ] [succs: 40 29 ]
if i50 < 20000 goto $i24 = i50 % 2;
"->"Block 40:
[preds: 39 ] [succs: 41 42 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1);
$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>;
if $z2 != 0 goto i51 = 0;
";
    "Block 39:
[preds: 28 38 ] [succs: 40 29 ]
if i50 < 20000 goto $i24 = i50 % 2;
"->"Block 29:
[preds: 39 ] [succs: 30 31 ]
$i24 = i50 % 2;
if $i24 != 0 goto $z11 = 0;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1);
$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>;
if $z2 != 0 goto i51 = 0;
"->"Block 41:
[preds: 40 ] [succs: 42 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\");
z4 = 0;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test3_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test3(int,boolean)>(0, 1);
$z2 = <compiler.rangechecks.TestBadFoldCompare: boolean test3_taken>;
if $z2 != 0 goto i51 = 0;
"->"Block 42:
[preds: 40 41 ] [succs: 53 ]
i51 = 0;
goto [?= (branch)];
";
    "Block 41:
[preds: 40 ] [succs: 42 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Test3 failed\");
z4 = 0;
"->"Block 42:
[preds: 40 41 ] [succs: 53 ]
i51 = 0;
goto [?= (branch)];
";
    "Block 42:
[preds: 40 41 ] [succs: 53 ]
i51 = 0;
goto [?= (branch)];
"->"Block 53:
[preds: 42 52 ] [succs: 54 43 ]
if i51 < 20000 goto $i36 = i51 % 2;
";
    "Block 43:
[preds: 53 ] [succs: 44 45 ]
$i36 = i51 % 2;
if $i36 != 0 goto $z14 = 0;
"->"Block 44:
[preds: 43 ] [succs: 46 ]
$z14 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)];
";
    "Block 43:
[preds: 53 ] [succs: 44 45 ]
$i36 = i51 % 2;
if $i36 != 0 goto $z14 = 0;
"->"Block 45:
[preds: 43 ] [succs: 46 ]
$z14 = 0;
";
    "Block 44:
[preds: 43 ] [succs: 46 ]
$z14 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14)];
"->"Block 46:
[preds: 44 45 ] [succs: 47 48 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14);
$i37 = i51 % 2;
if $i37 != 0 goto $z15 = 0;
";
    "Block 45:
[preds: 43 ] [succs: 46 ]
$z14 = 0;
"->"Block 46:
[preds: 44 45 ] [succs: 47 48 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14);
$i37 = i51 % 2;
if $i37 != 0 goto $z15 = 0;
";
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14);
$i37 = i51 % 2;
if $i37 != 0 goto $z15 = 0;
"->"Block 47:
[preds: 46 ] [succs: 49 ]
$z15 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)];
";
    "Block 46:
[preds: 44 45 ] [succs: 47 48 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(5, 0, 10, $z14);
$i37 = i51 % 2;
if $i37 != 0 goto $z15 = 0;
"->"Block 48:
[preds: 46 ] [succs: 49 ]
$z15 = 0;
";
    "Block 47:
[preds: 46 ] [succs: 49 ]
$z15 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15)];
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15);
$i38 = i51 % 2;
if $i38 != 0 goto $z16 = 0;
";
    "Block 48:
[preds: 46 ] [succs: 49 ]
$z15 = 0;
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15);
$i38 = i51 % 2;
if $i38 != 0 goto $z16 = 0;
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15);
$i38 = i51 % 2;
if $i38 != 0 goto $z16 = 0;
"->"Block 50:
[preds: 49 ] [succs: 52 ]
$z16 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)];
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(-1, 0, 10, $z15);
$i38 = i51 % 2;
if $i38 != 0 goto $z16 = 0;
"->"Block 51:
[preds: 49 ] [succs: 52 ]
$z16 = 0;
";
    "Block 50:
[preds: 49 ] [succs: 52 ]
$z16 = 1;
goto [?= staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16)];
"->"Block 52:
[preds: 50 51 ] [succs: 53 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0);
i51 = i51 + 1;
";
    "Block 51:
[preds: 49 ] [succs: 52 ]
$z16 = 0;
"->"Block 52:
[preds: 50 51 ] [succs: 53 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0);
i51 = i51 + 1;
";
    "Block 52:
[preds: 50 51 ] [succs: 53 ]
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void helper4(int,int,int,boolean)>(15, 0, 10, $z16);
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 0);
i51 = i51 + 1;
"->"Block 53:
[preds: 42 52 ] [succs: 54 43 ]
if i51 < 20000 goto $i36 = i51 % 2;
";
    "Block 53:
[preds: 42 52 ] [succs: 54 43 ]
if i51 < 20000 goto $i36 = i51 % 2;
"->"Block 54:
[preds: 53 ] [succs: 55 56 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1);
$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>;
if $z3 != 0 goto (branch);
";
    "Block 53:
[preds: 42 52 ] [succs: 54 43 ]
if i51 < 20000 goto $i36 = i51 % 2;
"->"Block 43:
[preds: 53 ] [succs: 44 45 ]
$i36 = i51 % 2;
if $i36 != 0 goto $z14 = 0;
";
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1);
$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>;
if $z3 != 0 goto (branch);
"->"Block 55:
[preds: 54 ] [succs: 56 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\");
z4 = 0;
";
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
<compiler.rangechecks.TestBadFoldCompare: boolean test4_taken> = 0;
staticinvoke <compiler.rangechecks.TestBadFoldCompare: void test4(int,boolean)>(0, 1);
$z3 = <compiler.rangechecks.TestBadFoldCompare: boolean test4_taken>;
if $z3 != 0 goto (branch);
"->"Block 56:
[preds: 54 55 ] [succs: 57 58 ]
if z4 != 0 goto return;
";
    "Block 55:
[preds: 54 ] [succs: 56 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Test4 failed\");
z4 = 0;
"->"Block 56:
[preds: 54 55 ] [succs: 57 58 ]
if z4 != 0 goto return;
";
    "Block 56:
[preds: 54 55 ] [succs: 57 58 ]
if z4 != 0 goto return;
"->"Block 57:
[preds: 56 ] [succs: ]
$r0 = new java.lang.RuntimeException;
specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Some tests failed\");
throw $r0;
";
    "Block 56:
[preds: 54 55 ] [succs: 57 58 ]
if z4 != 0 goto return;
"->"Block 58:
[preds: 56 ] [succs: ]
return;
";
}
