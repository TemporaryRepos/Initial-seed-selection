digraph "unitGraph" {
    "r0 := @parameter0: long[]"
    "d0 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_MINUS_INF>"
    "d1 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_PLUS_INF>"
    "$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0)"
    "r0[0] = $l0"
    "$l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1)"
    "r0[1] = $l1"
    "return"
    "r0 := @parameter0: long[]"->"d0 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_MINUS_INF>";
    "d0 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_MINUS_INF>"->"d1 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_PLUS_INF>";
    "d1 = <compiler.c2.FloatingPointFoldingTest: double DOUBLE_PLUS_INF>"->"$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0)";
    "$l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0)"->"r0[0] = $l0";
    "r0[0] = $l0"->"$l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1)";
    "$l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1)"->"r0[1] = $l1";
    "r0[1] = $l1"->"return";
}
