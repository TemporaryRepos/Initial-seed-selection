digraph "unitGraph" {
    "r13 := @this: jdk.test.lib.apps.LingeredApp"
    "r6 := @parameter0: java.util.List"
    "r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.jdk\")"
    "if r14 != null goto (branch)"
    "r15 = staticinvoke <java.lang.System: java.util.Map getenv()>()"
    "$r12 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"TESTJAVA\")"
    "r14 = (java.lang.String) $r12"
    "if r14 != null goto r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Can\'t determine jdk path neither test.jdk property no TESTJAVA env are set\")"
    "throw $r11"
    "r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"
    "$r0 = new java.lang.StringBuilder"
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14)"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)"
    "$z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(\"window\")"
    "if $z0 == 0 goto $r17 = \"/bin/java\""
    "$r17 = \"/bin/java.exe\""
    "goto [?= $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)]"
    "$r17 = \"/bin/java\""
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)"
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r4 = new java.util.ArrayList"
    "specialinvoke $r4.<java.util.ArrayList: void <init>()>()"
    "r5 = $r4"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r3)"
    "if r6 != null goto interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)"
    "$r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.vm.opts\", \"\")"
    "r18 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")"
    "r9 = r18"
    "i0 = lengthof r18"
    "i1 = 0"
    "goto [?= (branch)]"
    "r10 = r9[i1]"
    "$z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"
    "if $z5 != 0 goto i1 = i1 + 1"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r10)"
    "i1 = i1 + 1"
    "if i1 < i0 goto r10 = r9[i1]"
    "goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")]"
    "interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")"
    "r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.class.path\")"
    "if r19 != null goto $r20 = r19"
    "$r20 = \".\""
    "goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)]"
    "$r20 = r19"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)"
    "return r5"
    "r13 := @this: jdk.test.lib.apps.LingeredApp"->"r6 := @parameter0: java.util.List";
    "r6 := @parameter0: java.util.List"->"r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.jdk\")";
    "r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.jdk\")"->"if r14 != null goto (branch)";
    "if r14 != null goto (branch)"->"r15 = staticinvoke <java.lang.System: java.util.Map getenv()>()";
    "if r14 != null goto (branch)"->"if r14 != null goto r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")";
    "r15 = staticinvoke <java.lang.System: java.util.Map getenv()>()"->"$r12 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"TESTJAVA\")";
    "$r12 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"TESTJAVA\")"->"r14 = (java.lang.String) $r12";
    "r14 = (java.lang.String) $r12"->"if r14 != null goto r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")";
    "if r14 != null goto r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"->"$r11 = new java.lang.RuntimeException";
    "if r14 != null goto r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"->"r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Can\'t determine jdk path neither test.jdk property no TESTJAVA env are set\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Can\'t determine jdk path neither test.jdk property no TESTJAVA env are set\")"->"throw $r11";
    "r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\")"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14)";
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14)"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1)"->"$z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(\"window\")";
    "$z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>(\"window\")"->"if $z0 == 0 goto $r17 = \"/bin/java\"";
    "if $z0 == 0 goto $r17 = \"/bin/java\""->"$r17 = \"/bin/java.exe\"";
    "if $z0 == 0 goto $r17 = \"/bin/java\""->"$r17 = \"/bin/java\"";
    "$r17 = \"/bin/java.exe\""->"goto [?= $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)]";
    "goto [?= $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)]"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)";
    "$r17 = \"/bin/java\""->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)"->"r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r4 = new java.util.ArrayList";
    "$r4 = new java.util.ArrayList"->"specialinvoke $r4.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r4.<java.util.ArrayList: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r3)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r3)"->"if r6 != null goto interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)";
    "if r6 != null goto interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)"->"$r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.vm.opts\", \"\")";
    "if r6 != null goto interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)"->"interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)";
    "$r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"test.vm.opts\", \"\")"->"r18 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")";
    "r18 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")"->"r9 = r18";
    "r9 = r18"->"i0 = lengthof r18";
    "i0 = lengthof r18"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto r10 = r9[i1]";
    "r10 = r9[i1]"->"$z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(\"\")";
    "$z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"->"if $z5 != 0 goto i1 = i1 + 1";
    "if $z5 != 0 goto i1 = i1 + 1"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r10)";
    "if $z5 != 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r10)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto r10 = r9[i1]";
    "if i1 < i0 goto r10 = r9[i1]"->"goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")]";
    "if i1 < i0 goto r10 = r9[i1]"->"r10 = r9[i1]";
    "goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")]"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")";
    "interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(\"-cp\")"->"r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.class.path\")";
    "r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"test.class.path\")"->"if r19 != null goto $r20 = r19";
    "if r19 != null goto $r20 = r19"->"$r20 = \".\"";
    "if r19 != null goto $r20 = r19"->"$r20 = r19";
    "$r20 = \".\""->"goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)]";
    "goto [?= interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)]"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)";
    "$r20 = r19"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)"->"return r5";
}
