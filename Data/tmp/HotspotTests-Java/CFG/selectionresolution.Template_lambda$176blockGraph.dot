digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
r4 = (selectionresolution.ClassData) $r3;
r5 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r7 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>;
$r6 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>;
r8 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r7, $r6);
$r9 = new selectionresolution.ClassData;
specialinvoke $r9.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r5, r8);
r10 = $r9;
i1 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addInterface(selectionresolution.ClassData)>(r10);
i2 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int methodref>;
$r11 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r11.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1);
return;
"
}
