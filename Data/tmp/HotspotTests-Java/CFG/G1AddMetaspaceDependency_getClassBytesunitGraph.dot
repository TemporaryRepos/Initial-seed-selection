digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r7 = null"
    "r8 = null"
    "r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)"
    "$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()"
    "r2 = newarray (byte)[$i0]"
    "virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)"
    "r7 = r2"
    "if r1 == null goto (branch)"
    "virtualinvoke r1.<java.io.InputStream: void close()>()"
    "goto [?= (branch)]"
    "$r6 := @caughtexception"
    "r8 = $r6"
    "if r1 == null goto throw r8"
    "throw r8"
    "$r5 := @caughtexception"
    "r9 = $r5"
    "if r8 != null goto (branch)"
    "r8 = r9"
    "goto [?= throw r8]"
    "if r8 == r9 goto throw r8"
    "virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)"
    "$r4 := @caughtexception"
    "if r7 != null goto return r7"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unable to load class file\")"
    "throw $r3"
    "return r7"
    "r0 := @parameter0: java.lang.String"->"r7 = null";
    "r7 = null"->"r8 = null";
    "r7 = null"->"$r4 := @caughtexception";
    "r8 = null"->"$r5 := @caughtexception";
    "r8 = null"->"$r4 := @caughtexception";
    "r8 = null"->"r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)";
    "r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)"->"$r6 := @caughtexception";
    "r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)"->"$r5 := @caughtexception";
    "r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)"->"$r4 := @caughtexception";
    "r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)"->"$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()";
    "$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()"->"$r6 := @caughtexception";
    "$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()"->"$r5 := @caughtexception";
    "$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()"->"$r4 := @caughtexception";
    "$i0 = virtualinvoke r1.<java.io.InputStream: int available()>()"->"r2 = newarray (byte)[$i0]";
    "r2 = newarray (byte)[$i0]"->"$r6 := @caughtexception";
    "r2 = newarray (byte)[$i0]"->"$r5 := @caughtexception";
    "r2 = newarray (byte)[$i0]"->"$r4 := @caughtexception";
    "r2 = newarray (byte)[$i0]"->"virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)";
    "virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)"->"$r6 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)"->"$r5 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)"->"$r4 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2)"->"r7 = r2";
    "r7 = r2"->"$r6 := @caughtexception";
    "r7 = r2"->"$r5 := @caughtexception";
    "r7 = r2"->"$r4 := @caughtexception";
    "r7 = r2"->"if r1 == null goto (branch)";
    "if r1 == null goto (branch)"->"virtualinvoke r1.<java.io.InputStream: void close()>()";
    "if r1 == null goto (branch)"->"if r7 != null goto return r7";
    "if r1 == null goto (branch)"->"$r5 := @caughtexception";
    "if r1 == null goto (branch)"->"$r4 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"$r5 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"$r4 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"$r5 := @caughtexception";
    "goto [?= (branch)]"->"$r4 := @caughtexception";
    "goto [?= (branch)]"->"if r7 != null goto return r7";
    "$r6 := @caughtexception"->"$r5 := @caughtexception";
    "$r6 := @caughtexception"->"$r4 := @caughtexception";
    "$r6 := @caughtexception"->"r8 = $r6";
    "r8 = $r6"->"$r5 := @caughtexception";
    "r8 = $r6"->"$r4 := @caughtexception";
    "r8 = $r6"->"if r1 == null goto throw r8";
    "if r1 == null goto throw r8"->"virtualinvoke r1.<java.io.InputStream: void close()>()";
    "if r1 == null goto throw r8"->"throw r8";
    "if r1 == null goto throw r8"->"$r5 := @caughtexception";
    "if r1 == null goto throw r8"->"$r4 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"$r5 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"$r4 := @caughtexception";
    "virtualinvoke r1.<java.io.InputStream: void close()>()"->"throw r8";
    "throw r8"->"$r5 := @caughtexception";
    "throw r8"->"$r4 := @caughtexception";
    "$r5 := @caughtexception"->"r9 = $r5";
    "$r5 := @caughtexception"->"$r4 := @caughtexception";
    "r9 = $r5"->"if r8 != null goto (branch)";
    "r9 = $r5"->"$r4 := @caughtexception";
    "if r8 != null goto (branch)"->"r8 = r9";
    "if r8 != null goto (branch)"->"if r8 == r9 goto throw r8";
    "if r8 != null goto (branch)"->"$r4 := @caughtexception";
    "r8 = r9"->"goto [?= throw r8]";
    "r8 = r9"->"$r4 := @caughtexception";
    "goto [?= throw r8]"->"throw r8";
    "goto [?= throw r8]"->"$r4 := @caughtexception";
    "if r8 == r9 goto throw r8"->"virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)";
    "if r8 == r9 goto throw r8"->"throw r8";
    "if r8 == r9 goto throw r8"->"$r4 := @caughtexception";
    "virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)"->"throw r8";
    "virtualinvoke r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)"->"$r4 := @caughtexception";
    "throw r8"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"if r7 != null goto return r7";
    "if r7 != null goto return r7"->"$r3 = new java.lang.RuntimeException";
    "if r7 != null goto return r7"->"return r7";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unable to load class file\")";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Unable to load class file\")"->"throw $r3";
}
