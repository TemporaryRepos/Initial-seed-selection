digraph "unitGraph" {
    "r1 := @parameter0: double[]"
    "r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)"
    "$r0 = new java.lang.Double"
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>(1.0)"
    "r6 = $r0"
    "r2 = r1"
    "i0 = lengthof r1"
    "i1 = 0"
    "goto [?= (branch)]"
    "$d0 = r2[i1]"
    "r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"
    "$d1 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()"
    "$d2 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()"
    "$d3 = $d1 + $d2"
    "r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"
    "$d4 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()"
    "$r4 = new java.lang.Double"
    "$d5 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()"
    "$d6 = $d5 + 1.0"
    "specialinvoke $r4.<java.lang.Double: void <init>(double)>($d6)"
    "$d7 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()"
    "$d8 = $d4 + $d7"
    "r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8)"
    "i1 = i1 + 1"
    "if i1 < i0 goto $d0 = r2[i1]"
    "$d9 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()"
    "$d10 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()"
    "$d11 = $d9 + $d10"
    "return $d11"
    "r1 := @parameter0: double[]"->"r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)";
    "r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0)"->"$r0 = new java.lang.Double";
    "$r0 = new java.lang.Double"->"specialinvoke $r0.<java.lang.Double: void <init>(double)>(1.0)";
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>(1.0)"->"r6 = $r0";
    "r6 = $r0"->"r2 = r1";
    "r2 = r1"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i1 = 0";
    "i1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < i0 goto $d0 = r2[i1]";
    "$d0 = r2[i1]"->"r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)";
    "r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"$d1 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()";
    "$d1 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()"->"$d2 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()";
    "$d2 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()"->"$d3 = $d1 + $d2";
    "$d3 = $d1 + $d2"->"r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)";
    "r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3)"->"$d4 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()";
    "$d4 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()"->"$r4 = new java.lang.Double";
    "$r4 = new java.lang.Double"->"$d5 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()";
    "$d5 = virtualinvoke r3.<java.lang.Double: double doubleValue()>()"->"$d6 = $d5 + 1.0";
    "$d6 = $d5 + 1.0"->"specialinvoke $r4.<java.lang.Double: void <init>(double)>($d6)";
    "specialinvoke $r4.<java.lang.Double: void <init>(double)>($d6)"->"$d7 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()";
    "$d7 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()"->"$d8 = $d4 + $d7";
    "$d8 = $d4 + $d7"->"r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8)";
    "r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 < i0 goto $d0 = r2[i1]";
    "if i1 < i0 goto $d0 = r2[i1]"->"$d9 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()";
    "if i1 < i0 goto $d0 = r2[i1]"->"$d0 = r2[i1]";
    "$d9 = virtualinvoke r5.<java.lang.Double: double doubleValue()>()"->"$d10 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()";
    "$d10 = virtualinvoke r6.<java.lang.Double: double doubleValue()>()"->"$d11 = $d9 + $d10";
    "$d11 = $d9 + $d10"->"return $d11";
}
