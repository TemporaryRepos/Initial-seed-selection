digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @parameter0: java.lang.String[];
r0 = newarray (int)[1000];
r1 = newarray (byte)[1000];
i4 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = lengthof r0;
$i1 = $i0 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test1(int[],int[],int)>(r0, r0, $i1);
$i2 = lengthof r1;
$i3 = $i2 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test2(byte[],byte[],int)>(r1, r1, $i3);
i4 = i4 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 20000 goto $i0 = lengthof r0;
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r2 := @parameter0: java.lang.String[];
r0 = newarray (int)[1000];
r1 = newarray (byte)[1000];
i4 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 20000 goto $i0 = lengthof r0;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = lengthof r0;
$i1 = $i0 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test1(int[],int[],int)>(r0, r0, $i1);
$i2 = lengthof r1;
$i3 = $i2 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test2(byte[],byte[],int)>(r1, r1, $i3);
i4 = i4 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 20000 goto $i0 = lengthof r0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 20000 goto $i0 = lengthof r0;
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i4 < 20000 goto $i0 = lengthof r0;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = lengthof r0;
$i1 = $i0 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test1(int[],int[],int)>(r0, r0, $i1);
$i2 = lengthof r1;
$i3 = $i2 - 250;
staticinvoke <compiler.vectorization.TestVectorUnalignedOffset: void test2(byte[],byte[],int)>(r1, r1, $i3);
i4 = i4 + 1;
";
}
