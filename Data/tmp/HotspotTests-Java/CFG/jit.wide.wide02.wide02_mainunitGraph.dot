digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)"
    "f0 = (float) $d0"
    "$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24)"
    "f1 = (float) $d1"
    "$f2 = f0 + f1"
    "$f3 = $f2 + f0"
    "$b0 = $f3 cmpl f1"
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")"
    "goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)]"
    "$r0 = new nsk.share.TestFailure"
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")"
    "throw $r0"
    "d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)"
    "d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53)"
    "$d4 = d2 + d3"
    "$d5 = $d4 + d2"
    "$b1 = $d5 cmpl d3"
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")"
    "goto [?= return]"
    "$r2 = new nsk.share.TestFailure"
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")"
    "throw $r2"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)";
    "$d0 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)"->"f0 = (float) $d0";
    "f0 = (float) $d0"->"$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24)";
    "$d1 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(24)"->"f1 = (float) $d1";
    "f1 = (float) $d1"->"$f2 = f0 + f1";
    "$f2 = f0 + f1"->"$f3 = $f2 + f0";
    "$f3 = $f2 + f0"->"$b0 = $f3 cmpl f1";
    "$b0 = $f3 cmpl f1"->"if $b0 != 0 goto $r0 = new nsk.share.TestFailure";
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if $b0 != 0 goto $r0 = new nsk.share.TestFailure"->"$r0 = new nsk.share.TestFailure";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"Float test PASSES.\")"->"goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)]";
    "goto [?= d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)]"->"d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)";
    "$r0 = new nsk.share.TestFailure"->"specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")";
    "specialinvoke $r0.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Float test FAILS\")"->"throw $r0";
    "d2 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(0)"->"d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53)";
    "d3 = staticinvoke <jit.wide.wide02.wide02: double twoto(int)>(53)"->"$d4 = d2 + d3";
    "$d4 = d2 + d3"->"$d5 = $d4 + d2";
    "$d5 = $d4 + d2"->"$b1 = $d5 cmpl d3";
    "$b1 = $d5 cmpl d3"->"if $b1 != 0 goto $r2 = new nsk.share.TestFailure";
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $b1 != 0 goto $r2 = new nsk.share.TestFailure"->"$r2 = new nsk.share.TestFailure";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"Double test PASSES.\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 = new nsk.share.TestFailure"->"specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")";
    "specialinvoke $r2.<nsk.share.TestFailure: void <init>(java.lang.String)>(\"Double test FAILS\")"->"throw $r2";
}
