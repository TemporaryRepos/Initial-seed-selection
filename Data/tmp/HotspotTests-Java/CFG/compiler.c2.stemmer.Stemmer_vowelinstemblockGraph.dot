digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
i1 = 0;
goto [?= $i0 = r0.<compiler.c2.stemmer.Stemmer: int j>];
"
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
if $z0 != 0 goto i1 = i1 + 1;
"
    "Block 2:
[preds: 1 ] [succs: ]
return 1;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i1 = i1 + 1;
"
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>;
if i1 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
"
    "Block 5:
[preds: 4 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 4 ]
r0 := @this: compiler.c2.stemmer.Stemmer;
i1 = 0;
goto [?= $i0 = r0.<compiler.c2.stemmer.Stemmer: int j>];
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>;
if i1 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 2:
[preds: 1 ] [succs: ]
return 1;
";
    "Block 1:
[preds: 4 ] [succs: 2 3 ]
$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i1 = i1 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i1 = i1 + 1;
"->"Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>;
if i1 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>;
if i1 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
"->"Block 5:
[preds: 4 ] [succs: ]
return 0;
";
    "Block 4:
[preds: 0 3 ] [succs: 5 1 ]
$i0 = r0.<compiler.c2.stemmer.Stemmer: int j>;
if i1 <= $i0 goto $z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
"->"Block 1:
[preds: 4 ] [succs: 2 3 ]
$z0 = specialinvoke r0.<compiler.c2.stemmer.Stemmer: boolean cons(int)>(i1);
if $z0 != 0 goto i1 = i1 + 1;
";
}
