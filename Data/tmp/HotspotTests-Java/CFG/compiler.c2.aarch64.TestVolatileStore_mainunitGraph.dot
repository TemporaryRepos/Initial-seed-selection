digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.c2.aarch64.TestVolatileStore"
    "specialinvoke $r0.<compiler.c2.aarch64.TestVolatileStore: void <init>()>()"
    "r1 = $r0"
    "i2 = 0"
    "goto [?= (branch)]"
    "r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1"
    "virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testInt(int)>(i2)"
    "$i0 = r1.<compiler.c2.aarch64.TestVolatileStore: int f_int>"
    "if $i0 == i2 goto i2 = i2 + 1"
    "$r2 = new java.lang.RuntimeException"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")"
    "throw $r2"
    "i2 = i2 + 1"
    "if i2 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1"
    "i3 = 0"
    "r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testObj(java.lang.Integer)>($r3)"
    "$r4 = r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj>"
    "$i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()"
    "if $i1 == i3 goto i3 = i3 + 1"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")"
    "throw $r5"
    "i3 = i3 + 1"
    "if i3 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = new compiler.c2.aarch64.TestVolatileStore";
    "$r0 = new compiler.c2.aarch64.TestVolatileStore"->"specialinvoke $r0.<compiler.c2.aarch64.TestVolatileStore: void <init>()>()";
    "specialinvoke $r0.<compiler.c2.aarch64.TestVolatileStore: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1";
    "r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1"->"virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testInt(int)>(i2)";
    "virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testInt(int)>(i2)"->"$i0 = r1.<compiler.c2.aarch64.TestVolatileStore: int f_int>";
    "$i0 = r1.<compiler.c2.aarch64.TestVolatileStore: int f_int>"->"if $i0 == i2 goto i2 = i2 + 1";
    "if $i0 == i2 goto i2 = i2 + 1"->"$r2 = new java.lang.RuntimeException";
    "if $i0 == i2 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r2 = new java.lang.RuntimeException"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")"->"throw $r2";
    "i2 = i2 + 1"->"if i2 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1";
    "if i2 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1"->"i3 = 0";
    "if i2 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1"->"r1.<compiler.c2.aarch64.TestVolatileStore: int f_int> = -1";
    "i3 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null";
    "r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testObj(java.lang.Integer)>($r3)";
    "virtualinvoke r1.<compiler.c2.aarch64.TestVolatileStore: void testObj(java.lang.Integer)>($r3)"->"$r4 = r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj>";
    "$r4 = r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj>"->"$i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()"->"if $i1 == i3 goto i3 = i3 + 1";
    "if $i1 == i3 goto i3 = i3 + 1"->"$r5 = new java.lang.RuntimeException";
    "if $i1 == i3 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"bad result!\")"->"throw $r5";
    "i3 = i3 + 1"->"if i3 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null";
    "if i3 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null"->"return";
    "if i3 < 100000 goto r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null"->"r1.<compiler.c2.aarch64.TestVolatileStore: java.lang.Integer f_obj> = null";
}
