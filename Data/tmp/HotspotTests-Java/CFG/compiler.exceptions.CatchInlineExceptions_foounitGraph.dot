digraph "unitGraph" {
    "i0 := @parameter0: int"
    "$i1 = i0 & 1023"
    "if $i1 != 2 goto return"
    "$i2 = <compiler.exceptions.CatchInlineExceptions: int counter0>"
    "$i3 = $i2 + 1"
    "<compiler.exceptions.CatchInlineExceptions: int counter0> = $i3"
    "$r0 = new compiler.exceptions.CatchInlineExceptions$Exception2"
    "specialinvoke $r0.<compiler.exceptions.CatchInlineExceptions$Exception2: void <init>()>()"
    "throw $r0"
    "return"
    "i0 := @parameter0: int"->"$i1 = i0 & 1023";
    "$i1 = i0 & 1023"->"if $i1 != 2 goto return";
    "if $i1 != 2 goto return"->"$i2 = <compiler.exceptions.CatchInlineExceptions: int counter0>";
    "if $i1 != 2 goto return"->"return";
    "$i2 = <compiler.exceptions.CatchInlineExceptions: int counter0>"->"$i3 = $i2 + 1";
    "$i3 = $i2 + 1"->"<compiler.exceptions.CatchInlineExceptions: int counter0> = $i3";
    "<compiler.exceptions.CatchInlineExceptions: int counter0> = $i3"->"$r0 = new compiler.exceptions.CatchInlineExceptions$Exception2";
    "$r0 = new compiler.exceptions.CatchInlineExceptions$Exception2"->"specialinvoke $r0.<compiler.exceptions.CatchInlineExceptions$Exception2: void <init>()>()";
    "specialinvoke $r0.<compiler.exceptions.CatchInlineExceptions$Exception2: void <init>()>()"->"throw $r0";
}
