digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new compiler.profiling.TestUnexpectedProfilingMismatch"
    "specialinvoke $r0.<compiler.profiling.TestUnexpectedProfilingMismatch: void <init>()>()"
    "r1 = $r0"
    "$r2 = new compiler.profiling.TestUnexpectedProfilingMismatch$A"
    "specialinvoke $r2.<compiler.profiling.TestUnexpectedProfilingMismatch$A: void <init>()>()"
    "r3 = $r2"
    "$r4 = new compiler.profiling.TestUnexpectedProfilingMismatch$B"
    "specialinvoke $r4.<compiler.profiling.TestUnexpectedProfilingMismatch$B: void <init>()>()"
    "r5 = $r4"
    "i0 = 0"
    "goto [?= (branch)]"
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"
    "i0 = i0 + 1"
    "if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 0)"
    "i1 = 0"
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"
    "i1 = i1 + 1"
    "if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"
    "goto [?= $r6 = <java.lang.System: java.io.PrintStream out>]"
    "$r7 := @caughtexception"
    "r9 = $r7"
    "virtualinvoke r9.<java.lang.Throwable: void printStackTrace()>()"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new compiler.profiling.TestUnexpectedProfilingMismatch";
    "$r0 = new compiler.profiling.TestUnexpectedProfilingMismatch"->"specialinvoke $r0.<compiler.profiling.TestUnexpectedProfilingMismatch: void <init>()>()";
    "specialinvoke $r0.<compiler.profiling.TestUnexpectedProfilingMismatch: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new compiler.profiling.TestUnexpectedProfilingMismatch$A";
    "$r2 = new compiler.profiling.TestUnexpectedProfilingMismatch$A"->"specialinvoke $r2.<compiler.profiling.TestUnexpectedProfilingMismatch$A: void <init>()>()";
    "specialinvoke $r2.<compiler.profiling.TestUnexpectedProfilingMismatch$A: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new compiler.profiling.TestUnexpectedProfilingMismatch$B";
    "$r4 = new compiler.profiling.TestUnexpectedProfilingMismatch$B"->"specialinvoke $r4.<compiler.profiling.TestUnexpectedProfilingMismatch$B: void <init>()>()";
    "specialinvoke $r4.<compiler.profiling.TestUnexpectedProfilingMismatch$B: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"i0 = 0";
    "r5 = $r4"->"$r7 := @caughtexception";
    "i0 = 0"->"goto [?= (branch)]";
    "i0 = 0"->"$r7 := @caughtexception";
    "goto [?= (branch)]"->"if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)";
    "goto [?= (branch)]"->"$r7 := @caughtexception";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"i0 = i0 + 1";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"$r7 := @caughtexception";
    "i0 = i0 + 1"->"if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)";
    "i0 = i0 + 1"->"$r7 := @caughtexception";
    "if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 0)";
    "if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)";
    "if i0 < 255 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"$r7 := @caughtexception";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 0)"->"i1 = 0";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 0)"->"$r7 := @caughtexception";
    "i1 = 0"->"goto [?= (branch)]";
    "i1 = 0"->"$r7 := @caughtexception";
    "goto [?= (branch)]"->"if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)";
    "goto [?= (branch)]"->"$r7 := @caughtexception";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"->"i1 = i1 + 1";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"->"$r7 := @caughtexception";
    "i1 = i1 + 1"->"if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)";
    "i1 = i1 + 1"->"$r7 := @caughtexception";
    "if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"->"virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)";
    "if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"->"virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)";
    "if i1 < 256 goto virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m2(compiler.profiling.TestUnexpectedProfilingMismatch$B)>(r5)"->"$r7 := @caughtexception";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"goto [?= $r6 = <java.lang.System: java.io.PrintStream out>]";
    "virtualinvoke r1.<compiler.profiling.TestUnexpectedProfilingMismatch: void m1(compiler.profiling.TestUnexpectedProfilingMismatch$A,boolean)>(r3, 1)"->"$r7 := @caughtexception";
    "goto [?= $r6 = <java.lang.System: java.io.PrintStream out>]"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r7 := @caughtexception"->"r9 = $r7";
    "r9 = $r7"->"virtualinvoke r9.<java.lang.Throwable: void printStackTrace()>()";
    "virtualinvoke r9.<java.lang.Throwable: void printStackTrace()>()"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"TEST PASSED\")"->"return";
}
