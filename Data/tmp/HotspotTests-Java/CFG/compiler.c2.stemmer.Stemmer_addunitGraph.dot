digraph "unitGraph" {
    "r0 := @this: compiler.c2.stemmer.Stemmer"
    "r3 := @parameter0: char[]"
    "i0 := @parameter1: int"
    "$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>"
    "$i3 = $i1 + i0"
    "$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$i2 = lengthof $r1"
    "if $i3 < $i2 goto i13 = 0"
    "$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>"
    "$i8 = $i7 + i0"
    "$i9 = $i8 + 50"
    "r5 = newarray (char)[$i9]"
    "i12 = 0"
    "goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>]"
    "$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$c11 = $r4[i12]"
    "r5[i12] = $c11"
    "i12 = i12 + 1"
    "$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>"
    "if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5"
    "i13 = 0"
    "goto [?= (branch)]"
    "$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>"
    "$i5 = $i4 + 1"
    "r0.<compiler.c2.stemmer.Stemmer: int i> = $i5"
    "$c6 = r3[i13]"
    "$r2[$i4] = $c6"
    "i13 = i13 + 1"
    "if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"
    "return"
    "r0 := @this: compiler.c2.stemmer.Stemmer"->"r3 := @parameter0: char[]";
    "r3 := @parameter0: char[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>";
    "$i1 = r0.<compiler.c2.stemmer.Stemmer: int i>"->"$i3 = $i1 + i0";
    "$i3 = $i1 + i0"->"$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$r1 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$i2 = lengthof $r1";
    "$i2 = lengthof $r1"->"if $i3 < $i2 goto i13 = 0";
    "if $i3 < $i2 goto i13 = 0"->"$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>";
    "if $i3 < $i2 goto i13 = 0"->"i13 = 0";
    "$i7 = r0.<compiler.c2.stemmer.Stemmer: int i>"->"$i8 = $i7 + i0";
    "$i8 = $i7 + i0"->"$i9 = $i8 + 50";
    "$i9 = $i8 + 50"->"r5 = newarray (char)[$i9]";
    "r5 = newarray (char)[$i9]"->"i12 = 0";
    "i12 = 0"->"goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>]";
    "goto [?= $i10 = r0.<compiler.c2.stemmer.Stemmer: int i>]"->"$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>";
    "$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$c11 = $r4[i12]";
    "$c11 = $r4[i12]"->"r5[i12] = $c11";
    "r5[i12] = $c11"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>";
    "$i10 = r0.<compiler.c2.stemmer.Stemmer: int i>"->"if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5";
    "if i12 < $i10 goto $r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$r4 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "r0.<compiler.c2.stemmer.Stemmer: char[] b> = r5"->"i13 = 0";
    "i13 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>";
    "$i4 = r0.<compiler.c2.stemmer.Stemmer: int i>"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"r0.<compiler.c2.stemmer.Stemmer: int i> = $i5";
    "r0.<compiler.c2.stemmer.Stemmer: int i> = $i5"->"$c6 = r3[i13]";
    "$c6 = r3[i13]"->"$r2[$i4] = $c6";
    "$r2[$i4] = $c6"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
    "if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"return";
    "if i13 < i0 goto $r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>"->"$r2 = r0.<compiler.c2.stemmer.Stemmer: char[] b>";
}
