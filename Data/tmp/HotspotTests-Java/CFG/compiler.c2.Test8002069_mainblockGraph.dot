digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
i2 = 0;
i3 = 0;
goto [?= (branch)];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
i2 = i2 + $i0;
i3 = i3 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
i2 = i2 + $i1;
i4 = i4 + 1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
"
    "Block 6:
[preds: 5 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"PASSED. sum = \");
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r4 := @parameter0: java.lang.String[];
i2 = 0;
i3 = 0;
goto [?= (branch)];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
i2 = i2 + $i0;
i3 = i3 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
if i3 < 8000 goto $i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$i0 = staticinvoke <compiler.c2.Test8002069: int test1(int)>(i3);
i2 = i2 + $i0;
i3 = i3 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
i4 = 0;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
";
    "Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
i2 = i2 + $i1;
i4 = i4 + 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
"->"Block 6:
[preds: 5 ] [succs: ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"PASSED. sum = \");
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
return;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 4 ]
if i4 < 100000 goto $i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
"->"Block 4:
[preds: 5 ] [succs: 5 ]
$i1 = staticinvoke <compiler.c2.Test8002069: int test2(int)>(i4);
i2 = i2 + $i1;
i4 = i4 + 1;
";
}
