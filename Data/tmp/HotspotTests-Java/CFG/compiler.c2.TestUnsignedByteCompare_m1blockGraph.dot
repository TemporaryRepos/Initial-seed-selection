digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @parameter0: byte[];
i6 = 0;
goto [?= $i7 = lengthof r0];
"
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$b0 = r0[i6];
$i1 = $b0 & 255;
if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
$i4 = <compiler.c2.TestUnsignedByteCompare: int p>;
$i5 = $i4 + 1;
<compiler.c2.TestUnsignedByteCompare: int p> = $i5;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1);
goto [?= i6 = i6 + 1];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
$i3 = $i2 + 1;
<compiler.c2.TestUnsignedByteCompare: int n> = $i3;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i6 = i6 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i7 = lengthof r0;
if i6 < $i7 goto $b0 = r0[i6];
"
    "Block 6:
[preds: 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r0 := @parameter0: byte[];
i6 = 0;
goto [?= $i7 = lengthof r0];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i7 = lengthof r0;
if i6 < $i7 goto $b0 = r0[i6];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$b0 = r0[i6];
$i1 = $b0 & 255;
if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
$i4 = <compiler.c2.TestUnsignedByteCompare: int p>;
$i5 = $i4 + 1;
<compiler.c2.TestUnsignedByteCompare: int p> = $i5;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1);
goto [?= i6 = i6 + 1];
";
    "Block 1:
[preds: 5 ] [succs: 2 3 ]
$b0 = r0[i6];
$i1 = $b0 & 255;
if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
$i3 = $i2 + 1;
<compiler.c2.TestUnsignedByteCompare: int n> = $i3;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0);
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
$i4 = <compiler.c2.TestUnsignedByteCompare: int p>;
$i5 = $i4 + 1;
<compiler.c2.TestUnsignedByteCompare: int p> = $i5;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 1);
goto [?= i6 = i6 + 1];
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i6 = i6 + 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
$i3 = $i2 + 1;
<compiler.c2.TestUnsignedByteCompare: int n> = $i3;
staticinvoke <compiler.c2.TestUnsignedByteCompare: void report(byte[],int,boolean)>(r0, i6, 0);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i6 = i6 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i6 = i6 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i7 = lengthof r0;
if i6 < $i7 goto $b0 = r0[i6];
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i7 = lengthof r0;
if i6 < $i7 goto $b0 = r0[i6];
"->"Block 6:
[preds: 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i7 = lengthof r0;
if i6 < $i7 goto $b0 = r0[i6];
"->"Block 1:
[preds: 5 ] [succs: 2 3 ]
$b0 = r0[i6];
$i1 = $b0 & 255;
if $i1 >= 16 goto $i2 = <compiler.c2.TestUnsignedByteCompare: int n>;
";
}
