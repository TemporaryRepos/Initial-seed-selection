digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 ]
r16 := @parameter0: java.lang.String[];
$r0 = newarray (int)[7];
$r0[0] = -10;
$r0[1] = -5;
$r0[3] = 5;
$r0[4] = 8;
$r0[5] = 16;
$r0[6] = 100;
r1 = $r0;
$r2 = newarray (int)[3];
$r2[0] = 16;
$r2[1] = 10;
r3 = $r2;
$i1 = lengthof r1;
$i0 = lengthof r3;
r4 = newmultiarray (boolean)[$i1][$i0];
i18 = 0;
goto [?= $i2 = lengthof r1];
"
    "Block 1:
[preds: 5 ] [succs: 3 ]
i19 = 0;
goto [?= $i3 = lengthof r3];
"
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r5 = r4[i18];
$r5[i19] = 1;
i19 = i19 + 1;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i3 = lengthof r3;
if i19 < $i3 goto $r5 = r4[i18];
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i18 = i18 + 1;
"
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i2 = lengthof r1;
if i18 < $i2 goto i19 = 0;
"
    "Block 6:
[preds: 5 ] [succs: 14 ]
$i5 = lengthof r1;
$i4 = lengthof r3;
r17 = newmultiarray (boolean)[$i5][$i4];
i20 = 0;
goto [?= $i6 = lengthof r1];
"
    "Block 7:
[preds: 14 ] [succs: 12 ]
i21 = 0;
goto [?= $i22 = lengthof r3];
"
    "Block 8:
[preds: 12 ] [succs: 9 10 ]
$r6 = r17[i20];
$i8 = i21;
$i7 = r3[i21];
if $i7 <= 0 goto $z0 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z0 = 1;
goto [?= $r6[$i8] = $z0];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z0 = 0;
"
    "Block 11:
[preds: 9 10 ] [succs: 12 ]
$r6[$i8] = $z0;
i21 = i21 + 1;
"
    "Block 12:
[preds: 7 11 ] [succs: 13 8 ]
$i22 = lengthof r3;
if i21 < $i22 goto $r6 = r17[i20];
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
i20 = i20 + 1;
"
    "Block 14:
[preds: 6 13 ] [succs: 15 7 ]
$i6 = lengthof r1;
if i20 < $i6 goto i21 = 0;
"
    "Block 15:
[preds: 14 ] [succs: 20 ]
$i9 = lengthof r3;
r18 = newarray (boolean)[$i9];
i23 = 0;
goto [?= $i24 = lengthof r3];
"
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
$i11 = i23;
$i10 = r3[i23];
if $i10 <= 0 goto $z1 = 0;
"
    "Block 17:
[preds: 16 ] [succs: 19 ]
$z1 = 1;
goto [?= r18[$i11] = $z1];
"
    "Block 18:
[preds: 16 ] [succs: 19 ]
$z1 = 0;
"
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
r18[$i11] = $z1;
i23 = i23 + 1;
"
    "Block 20:
[preds: 15 19 ] [succs: 21 16 ]
$i24 = lengthof r3;
if i23 < $i24 goto $i11 = i23;
"
    "Block 21:
[preds: 20 ] [succs: 26 ]
$i12 = lengthof r3;
r19 = newarray (boolean)[$i12];
i25 = 0;
goto [?= $i26 = lengthof r3];
"
    "Block 22:
[preds: 26 ] [succs: 23 24 ]
$i14 = i25;
$i13 = r3[i25];
if $i13 == 0 goto $z2 = 0;
"
    "Block 23:
[preds: 22 ] [succs: 25 ]
$z2 = 1;
goto [?= r19[$i14] = $z2];
"
    "Block 24:
[preds: 22 ] [succs: 25 ]
$z2 = 0;
"
    "Block 25:
[preds: 23 24 ] [succs: 26 ]
r19[$i14] = $z2;
i25 = i25 + 1;
"
    "Block 26:
[preds: 21 25 ] [succs: 27 22 ]
$i26 = lengthof r3;
if i25 < $i26 goto $i14 = i25;
"
    "Block 27:
[preds: 26 ] [succs: 32 ]
$i15 = lengthof r3;
r20 = newarray (boolean)[$i15];
i27 = 0;
goto [?= $i28 = lengthof r3];
"
    "Block 28:
[preds: 32 ] [succs: 29 30 ]
$i17 = i27;
$i16 = r3[i27];
if $i16 != 0 goto $z3 = 0;
"
    "Block 29:
[preds: 28 ] [succs: 31 ]
$z3 = 1;
goto [?= r20[$i17] = $z3];
"
    "Block 30:
[preds: 28 ] [succs: 31 ]
$z3 = 0;
"
    "Block 31:
[preds: 29 30 ] [succs: 32 ]
r20[$i17] = $z3;
i27 = i27 + 1;
"
    "Block 32:
[preds: 27 31 ] [succs: 33 28 ]
$i28 = lengthof r3;
if i27 < $i28 goto $i17 = i27;
"
    "Block 33:
[preds: 32 ] [succs: 35 ]
i29 = 0;
goto [?= (branch)];
"
    "Block 34:
[preds: 35 ] [succs: 35 ]
$r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test1\", $r10, r1, r3, r4);
$r11 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test2__63: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test2\", $r11, r1, r3, r17);
$r12 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test3__64: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test3\", $r12, r1, r3, r17);
$r13 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test4__65: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test4\", $r13, r3, r18);
$r14 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test5__66: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test5\", $r14, r3, r19);
$r15 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test6__67: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test6\", $r15, r3, r20);
i29 = i29 + 1;
"
    "Block 35:
[preds: 33 34 ] [succs: 36 34 ]
if i29 < 20000 goto $r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
"
    "Block 36:
[preds: 35 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 5 ]
r16 := @parameter0: java.lang.String[];
$r0 = newarray (int)[7];
$r0[0] = -10;
$r0[1] = -5;
$r0[3] = 5;
$r0[4] = 8;
$r0[5] = 16;
$r0[6] = 100;
r1 = $r0;
$r2 = newarray (int)[3];
$r2[0] = 16;
$r2[1] = 10;
r3 = $r2;
$i1 = lengthof r1;
$i0 = lengthof r3;
r4 = newmultiarray (boolean)[$i1][$i0];
i18 = 0;
goto [?= $i2 = lengthof r1];
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i2 = lengthof r1;
if i18 < $i2 goto i19 = 0;
";
    "Block 1:
[preds: 5 ] [succs: 3 ]
i19 = 0;
goto [?= $i3 = lengthof r3];
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i3 = lengthof r3;
if i19 < $i3 goto $r5 = r4[i18];
";
    "Block 2:
[preds: 3 ] [succs: 3 ]
$r5 = r4[i18];
$r5[i19] = 1;
i19 = i19 + 1;
"->"Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i3 = lengthof r3;
if i19 < $i3 goto $r5 = r4[i18];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i3 = lengthof r3;
if i19 < $i3 goto $r5 = r4[i18];
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i18 = i18 + 1;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 2 ]
$i3 = lengthof r3;
if i19 < $i3 goto $r5 = r4[i18];
"->"Block 2:
[preds: 3 ] [succs: 3 ]
$r5 = r4[i18];
$r5[i19] = 1;
i19 = i19 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i18 = i18 + 1;
"->"Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i2 = lengthof r1;
if i18 < $i2 goto i19 = 0;
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i2 = lengthof r1;
if i18 < $i2 goto i19 = 0;
"->"Block 6:
[preds: 5 ] [succs: 14 ]
$i5 = lengthof r1;
$i4 = lengthof r3;
r17 = newmultiarray (boolean)[$i5][$i4];
i20 = 0;
goto [?= $i6 = lengthof r1];
";
    "Block 5:
[preds: 0 4 ] [succs: 6 1 ]
$i2 = lengthof r1;
if i18 < $i2 goto i19 = 0;
"->"Block 1:
[preds: 5 ] [succs: 3 ]
i19 = 0;
goto [?= $i3 = lengthof r3];
";
    "Block 6:
[preds: 5 ] [succs: 14 ]
$i5 = lengthof r1;
$i4 = lengthof r3;
r17 = newmultiarray (boolean)[$i5][$i4];
i20 = 0;
goto [?= $i6 = lengthof r1];
"->"Block 14:
[preds: 6 13 ] [succs: 15 7 ]
$i6 = lengthof r1;
if i20 < $i6 goto i21 = 0;
";
    "Block 7:
[preds: 14 ] [succs: 12 ]
i21 = 0;
goto [?= $i22 = lengthof r3];
"->"Block 12:
[preds: 7 11 ] [succs: 13 8 ]
$i22 = lengthof r3;
if i21 < $i22 goto $r6 = r17[i20];
";
    "Block 8:
[preds: 12 ] [succs: 9 10 ]
$r6 = r17[i20];
$i8 = i21;
$i7 = r3[i21];
if $i7 <= 0 goto $z0 = 0;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
$z0 = 1;
goto [?= $r6[$i8] = $z0];
";
    "Block 8:
[preds: 12 ] [succs: 9 10 ]
$r6 = r17[i20];
$i8 = i21;
$i7 = r3[i21];
if $i7 <= 0 goto $z0 = 0;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
$z0 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
$z0 = 1;
goto [?= $r6[$i8] = $z0];
"->"Block 11:
[preds: 9 10 ] [succs: 12 ]
$r6[$i8] = $z0;
i21 = i21 + 1;
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
$z0 = 0;
"->"Block 11:
[preds: 9 10 ] [succs: 12 ]
$r6[$i8] = $z0;
i21 = i21 + 1;
";
    "Block 11:
[preds: 9 10 ] [succs: 12 ]
$r6[$i8] = $z0;
i21 = i21 + 1;
"->"Block 12:
[preds: 7 11 ] [succs: 13 8 ]
$i22 = lengthof r3;
if i21 < $i22 goto $r6 = r17[i20];
";
    "Block 12:
[preds: 7 11 ] [succs: 13 8 ]
$i22 = lengthof r3;
if i21 < $i22 goto $r6 = r17[i20];
"->"Block 13:
[preds: 12 ] [succs: 14 ]
i20 = i20 + 1;
";
    "Block 12:
[preds: 7 11 ] [succs: 13 8 ]
$i22 = lengthof r3;
if i21 < $i22 goto $r6 = r17[i20];
"->"Block 8:
[preds: 12 ] [succs: 9 10 ]
$r6 = r17[i20];
$i8 = i21;
$i7 = r3[i21];
if $i7 <= 0 goto $z0 = 0;
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
i20 = i20 + 1;
"->"Block 14:
[preds: 6 13 ] [succs: 15 7 ]
$i6 = lengthof r1;
if i20 < $i6 goto i21 = 0;
";
    "Block 14:
[preds: 6 13 ] [succs: 15 7 ]
$i6 = lengthof r1;
if i20 < $i6 goto i21 = 0;
"->"Block 15:
[preds: 14 ] [succs: 20 ]
$i9 = lengthof r3;
r18 = newarray (boolean)[$i9];
i23 = 0;
goto [?= $i24 = lengthof r3];
";
    "Block 14:
[preds: 6 13 ] [succs: 15 7 ]
$i6 = lengthof r1;
if i20 < $i6 goto i21 = 0;
"->"Block 7:
[preds: 14 ] [succs: 12 ]
i21 = 0;
goto [?= $i22 = lengthof r3];
";
    "Block 15:
[preds: 14 ] [succs: 20 ]
$i9 = lengthof r3;
r18 = newarray (boolean)[$i9];
i23 = 0;
goto [?= $i24 = lengthof r3];
"->"Block 20:
[preds: 15 19 ] [succs: 21 16 ]
$i24 = lengthof r3;
if i23 < $i24 goto $i11 = i23;
";
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
$i11 = i23;
$i10 = r3[i23];
if $i10 <= 0 goto $z1 = 0;
"->"Block 17:
[preds: 16 ] [succs: 19 ]
$z1 = 1;
goto [?= r18[$i11] = $z1];
";
    "Block 16:
[preds: 20 ] [succs: 17 18 ]
$i11 = i23;
$i10 = r3[i23];
if $i10 <= 0 goto $z1 = 0;
"->"Block 18:
[preds: 16 ] [succs: 19 ]
$z1 = 0;
";
    "Block 17:
[preds: 16 ] [succs: 19 ]
$z1 = 1;
goto [?= r18[$i11] = $z1];
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
r18[$i11] = $z1;
i23 = i23 + 1;
";
    "Block 18:
[preds: 16 ] [succs: 19 ]
$z1 = 0;
"->"Block 19:
[preds: 17 18 ] [succs: 20 ]
r18[$i11] = $z1;
i23 = i23 + 1;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 ]
r18[$i11] = $z1;
i23 = i23 + 1;
"->"Block 20:
[preds: 15 19 ] [succs: 21 16 ]
$i24 = lengthof r3;
if i23 < $i24 goto $i11 = i23;
";
    "Block 20:
[preds: 15 19 ] [succs: 21 16 ]
$i24 = lengthof r3;
if i23 < $i24 goto $i11 = i23;
"->"Block 21:
[preds: 20 ] [succs: 26 ]
$i12 = lengthof r3;
r19 = newarray (boolean)[$i12];
i25 = 0;
goto [?= $i26 = lengthof r3];
";
    "Block 20:
[preds: 15 19 ] [succs: 21 16 ]
$i24 = lengthof r3;
if i23 < $i24 goto $i11 = i23;
"->"Block 16:
[preds: 20 ] [succs: 17 18 ]
$i11 = i23;
$i10 = r3[i23];
if $i10 <= 0 goto $z1 = 0;
";
    "Block 21:
[preds: 20 ] [succs: 26 ]
$i12 = lengthof r3;
r19 = newarray (boolean)[$i12];
i25 = 0;
goto [?= $i26 = lengthof r3];
"->"Block 26:
[preds: 21 25 ] [succs: 27 22 ]
$i26 = lengthof r3;
if i25 < $i26 goto $i14 = i25;
";
    "Block 22:
[preds: 26 ] [succs: 23 24 ]
$i14 = i25;
$i13 = r3[i25];
if $i13 == 0 goto $z2 = 0;
"->"Block 23:
[preds: 22 ] [succs: 25 ]
$z2 = 1;
goto [?= r19[$i14] = $z2];
";
    "Block 22:
[preds: 26 ] [succs: 23 24 ]
$i14 = i25;
$i13 = r3[i25];
if $i13 == 0 goto $z2 = 0;
"->"Block 24:
[preds: 22 ] [succs: 25 ]
$z2 = 0;
";
    "Block 23:
[preds: 22 ] [succs: 25 ]
$z2 = 1;
goto [?= r19[$i14] = $z2];
"->"Block 25:
[preds: 23 24 ] [succs: 26 ]
r19[$i14] = $z2;
i25 = i25 + 1;
";
    "Block 24:
[preds: 22 ] [succs: 25 ]
$z2 = 0;
"->"Block 25:
[preds: 23 24 ] [succs: 26 ]
r19[$i14] = $z2;
i25 = i25 + 1;
";
    "Block 25:
[preds: 23 24 ] [succs: 26 ]
r19[$i14] = $z2;
i25 = i25 + 1;
"->"Block 26:
[preds: 21 25 ] [succs: 27 22 ]
$i26 = lengthof r3;
if i25 < $i26 goto $i14 = i25;
";
    "Block 26:
[preds: 21 25 ] [succs: 27 22 ]
$i26 = lengthof r3;
if i25 < $i26 goto $i14 = i25;
"->"Block 27:
[preds: 26 ] [succs: 32 ]
$i15 = lengthof r3;
r20 = newarray (boolean)[$i15];
i27 = 0;
goto [?= $i28 = lengthof r3];
";
    "Block 26:
[preds: 21 25 ] [succs: 27 22 ]
$i26 = lengthof r3;
if i25 < $i26 goto $i14 = i25;
"->"Block 22:
[preds: 26 ] [succs: 23 24 ]
$i14 = i25;
$i13 = r3[i25];
if $i13 == 0 goto $z2 = 0;
";
    "Block 27:
[preds: 26 ] [succs: 32 ]
$i15 = lengthof r3;
r20 = newarray (boolean)[$i15];
i27 = 0;
goto [?= $i28 = lengthof r3];
"->"Block 32:
[preds: 27 31 ] [succs: 33 28 ]
$i28 = lengthof r3;
if i27 < $i28 goto $i17 = i27;
";
    "Block 28:
[preds: 32 ] [succs: 29 30 ]
$i17 = i27;
$i16 = r3[i27];
if $i16 != 0 goto $z3 = 0;
"->"Block 29:
[preds: 28 ] [succs: 31 ]
$z3 = 1;
goto [?= r20[$i17] = $z3];
";
    "Block 28:
[preds: 32 ] [succs: 29 30 ]
$i17 = i27;
$i16 = r3[i27];
if $i16 != 0 goto $z3 = 0;
"->"Block 30:
[preds: 28 ] [succs: 31 ]
$z3 = 0;
";
    "Block 29:
[preds: 28 ] [succs: 31 ]
$z3 = 1;
goto [?= r20[$i17] = $z3];
"->"Block 31:
[preds: 29 30 ] [succs: 32 ]
r20[$i17] = $z3;
i27 = i27 + 1;
";
    "Block 30:
[preds: 28 ] [succs: 31 ]
$z3 = 0;
"->"Block 31:
[preds: 29 30 ] [succs: 32 ]
r20[$i17] = $z3;
i27 = i27 + 1;
";
    "Block 31:
[preds: 29 30 ] [succs: 32 ]
r20[$i17] = $z3;
i27 = i27 + 1;
"->"Block 32:
[preds: 27 31 ] [succs: 33 28 ]
$i28 = lengthof r3;
if i27 < $i28 goto $i17 = i27;
";
    "Block 32:
[preds: 27 31 ] [succs: 33 28 ]
$i28 = lengthof r3;
if i27 < $i28 goto $i17 = i27;
"->"Block 33:
[preds: 32 ] [succs: 35 ]
i29 = 0;
goto [?= (branch)];
";
    "Block 32:
[preds: 27 31 ] [succs: 33 28 ]
$i28 = lengthof r3;
if i27 < $i28 goto $i17 = i27;
"->"Block 28:
[preds: 32 ] [succs: 29 30 ]
$i17 = i27;
$i16 = r3[i27];
if $i16 != 0 goto $z3 = 0;
";
    "Block 33:
[preds: 32 ] [succs: 35 ]
i29 = 0;
goto [?= (branch)];
"->"Block 35:
[preds: 33 34 ] [succs: 36 34 ]
if i29 < 20000 goto $r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
";
    "Block 34:
[preds: 35 ] [succs: 35 ]
$r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test1\", $r10, r1, r3, r4);
$r11 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test2__63: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test2\", $r11, r1, r3, r17);
$r12 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test3__64: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test3\", $r12, r1, r3, r17);
$r13 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test4__65: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test4\", $r13, r3, r18);
$r14 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test5__66: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test5\", $r14, r3, r19);
$r15 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test6__67: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test6\", $r15, r3, r20);
i29 = i29 + 1;
"->"Block 35:
[preds: 33 34 ] [succs: 36 34 ]
if i29 < 20000 goto $r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
";
    "Block 35:
[preds: 33 34 ] [succs: 36 34 ]
if i29 < 20000 goto $r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
"->"Block 36:
[preds: 35 ] [succs: ]
return;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 34 ]
if i29 < 20000 goto $r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
"->"Block 34:
[preds: 35 ] [succs: 35 ]
$r10 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test1__62: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test1\", $r10, r1, r3, r4);
$r11 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test2__63: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test2\", $r11, r1, r3, r17);
$r12 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test3__64: java.util.function.BiFunction bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper(java.lang.String,java.util.function.BiFunction,int[],int[],boolean[][])>(\"test3\", $r12, r1, r3, r17);
$r13 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test4__65: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test4\", $r13, r3, r18);
$r14 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test5__66: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test5\", $r14, r3, r19);
$r15 = staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks$test6__67: java.util.function.Function bootstrap$()>();
staticinvoke <compiler.rangechecks.PowerOf2SizedArraysChecks: void helper2(java.lang.String,java.util.function.Function,int[],boolean[])>(\"test6\", $r15, r3, r20);
i29 = i29 + 1;
";
}
