digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "i0 = -2147483648"
    "i2 = 0"
    "goto [?= (branch)]"
    "i3 = -1"
    "i3 = i3 + 1"
    "if i3 < 10 goto i3 = i3 + 1"
    "i1 = i0 * i3"
    "r0 = newarray (int)[20]"
    "r1 = newarray (int)[20]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, i3, 1)"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i1, r1, i1, 1)"
    "i2 = i2 + 1"
    "if i2 < 1000000 goto i3 = -1"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"i0 = -2147483648";
    "i0 = -2147483648"->"i2 = 0";
    "i2 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 < 1000000 goto i3 = -1";
    "i3 = -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 10 goto i3 = i3 + 1";
    "i3 = i3 + 1"->"if i3 < 10 goto i3 = i3 + 1";
    "if i3 < 10 goto i3 = i3 + 1"->"i1 = i0 * i3";
    "if i3 < 10 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i1 = i0 * i3"->"r0 = newarray (int)[20]";
    "r0 = newarray (int)[20]"->"r1 = newarray (int)[20]";
    "r1 = newarray (int)[20]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, i3, 1)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i3, r1, i3, 1)"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i1, r1, i1, 1)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i1, r1, i1, 1)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"if i2 < 1000000 goto i3 = -1";
    "if i2 < 1000000 goto i3 = -1"->"return";
    "if i2 < 1000000 goto i3 = -1"->"i3 = -1";
}
