digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
r4 = (selectionresolution.ClassData) $r3;
r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>;
$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>;
$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>;
if $r7 != $r6 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>;
$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>;
$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10);
$r13 = new selectionresolution.ClassData;
specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12);
r14 = $r13;
i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>;
i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14);
$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2;
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
r4 = (selectionresolution.ClassData) $r3;
r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>;
$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>;
$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>;
if $r7 != $r6 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>;
$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>;
$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10);
$r13 = new selectionresolution.ClassData;
specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12);
r14 = $r13;
i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>;
i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14);
$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2;
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: java.util.HashMap classdata>;
$i0 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected>;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);
r4 = (selectionresolution.ClassData) $r3;
r5 = r4.<selectionresolution.ClassData: selectionresolution.MethodData methoddata>;
$r7 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context ABSTRACT>;
$r6 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Context context>;
if $r7 != $r6 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r4.<selectionresolution.ClassData: selectionresolution.ClassData$Package packageId>;
$r9 = r5.<selectionresolution.MethodData: selectionresolution.MethodData$Access access>;
$r11 = <selectionresolution.MethodData$Access: selectionresolution.MethodData$Access PUBLIC>;
$r10 = <selectionresolution.MethodData$Context: selectionresolution.MethodData$Context INSTANCE>;
r12 = staticinvoke <selectionresolution.Template: selectionresolution.MethodData getMethodData(selectionresolution.MethodData$Access,selectionresolution.MethodData$Context)>($r11, $r10);
$r13 = new selectionresolution.ClassData;
specialinvoke $r13.<selectionresolution.ClassData: void <init>(selectionresolution.ClassData$Package,selectionresolution.MethodData)>(r8, r12);
r14 = $r13;
i1 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref>;
i2 = virtualinvoke r0.<selectionresolution.SelectionResolutionTestCase$Builder: int addClass(selectionresolution.ClassData)>(r14);
$r15 = r0.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.HierarchyShape hier>;
virtualinvoke $r15.<selectionresolution.HierarchyShape: void addInherit(int,int)>(i2, i1);
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int objectref> = i2;
r0.<selectionresolution.SelectionResolutionTestCase$Builder: int expected> = i2;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
