digraph "unitGraph" {
    "r0 := @parameter0: jit.Arrays.ArrayBounds.ArrayBounds$Foo"
    "i0 := @parameter1: int"
    "i2 = 0"
    "i3 = 0"
    "goto [?= (branch)]"
    "$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"
    "$i1 = $r1[i3]"
    "i2 = i2 + $i1"
    "if i3 != 0 goto i3 = i3 + 1"
    "staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5)"
    "i3 = i3 + 1"
    "if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"
    "goto [?= return i2]"
    "$r2 := @caughtexception"
    "return i2"
    "r0 := @parameter0: jit.Arrays.ArrayBounds.ArrayBounds$Foo"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i2 = 0"->"$r2 := @caughtexception";
    "i3 = 0"->"goto [?= (branch)]";
    "i3 = 0"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"->"$i1 = $r1[i3]";
    "$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"->"$r2 := @caughtexception";
    "$i1 = $r1[i3]"->"i2 = i2 + $i1";
    "$i1 = $r1[i3]"->"$r2 := @caughtexception";
    "i2 = i2 + $i1"->"if i3 != 0 goto i3 = i3 + 1";
    "i2 = i2 + $i1"->"$r2 := @caughtexception";
    "if i3 != 0 goto i3 = i3 + 1"->"staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5)";
    "if i3 != 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "if i3 != 0 goto i3 = i3 + 1"->"$r2 := @caughtexception";
    "staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5)"->"i3 = i3 + 1";
    "staticinvoke <jit.Arrays.ArrayBounds.ArrayBounds: void changeLength(jit.Arrays.ArrayBounds.ArrayBounds$Foo,int)>(r0, 5)"->"$r2 := @caughtexception";
    "i3 = i3 + 1"->"if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>";
    "i3 = i3 + 1"->"$r2 := @caughtexception";
    "if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"->"goto [?= return i2]";
    "if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"->"$r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>";
    "if i3 < i0 goto $r1 = r0.<jit.Arrays.ArrayBounds.ArrayBounds$Foo: int[] a>"->"$r2 := @caughtexception";
    "goto [?= return i2]"->"return i2";
    "$r2 := @caughtexception"->"return i2";
}
