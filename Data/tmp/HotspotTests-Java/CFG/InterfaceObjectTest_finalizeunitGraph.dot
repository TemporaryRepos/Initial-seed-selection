digraph "unitGraph" {
    "r4 := @this: InterfaceObjectTest"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"In InterfaceObjectTest\'s finalize() method\n\")"
    "goto [?= return]"
    "$r1 := @caughtexception"
    "r2 = $r1"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2)"
    "throw $r3"
    "return"
    "r4 := @this: InterfaceObjectTest"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "r4 := @this: InterfaceObjectTest"->"$r1 := @caughtexception";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"In InterfaceObjectTest\'s finalize() method\n\")";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"$r1 := @caughtexception";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"In InterfaceObjectTest\'s finalize() method\n\")"->"goto [?= return]";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"In InterfaceObjectTest\'s finalize() method\n\")"->"$r1 := @caughtexception";
    "goto [?= return]"->"return";
    "$r1 := @caughtexception"->"r2 = $r1";
    "r2 = $r1"->"$r3 = new java.lang.AssertionError";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2)";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2)"->"throw $r3";
}
