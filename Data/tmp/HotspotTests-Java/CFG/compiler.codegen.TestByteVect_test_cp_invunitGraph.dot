digraph "unitGraph" {
    "r0 := @parameter0: byte[]"
    "r1 := @parameter1: byte[]"
    "i0 := @parameter2: int"
    "i6 = 0"
    "goto [?= $i1 = lengthof r0]"
    "$i5 = i6 + i0"
    "$i3 = i6 + i0"
    "$b4 = r1[$i3]"
    "r0[$i5] = $b4"
    "i6 = i6 + 1"
    "$i1 = lengthof r0"
    "$i2 = $i1 - i0"
    "if i6 < $i2 goto $i5 = i6 + i0"
    "return"
    "r0 := @parameter0: byte[]"->"r1 := @parameter1: byte[]";
    "r1 := @parameter1: byte[]"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i6 = 0";
    "i6 = 0"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$i5 = i6 + i0"->"$i3 = i6 + i0";
    "$i3 = i6 + i0"->"$b4 = r1[$i3]";
    "$b4 = r1[$i3]"->"r0[$i5] = $b4";
    "r0[$i5] = $b4"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"$i2 = $i1 - i0";
    "$i2 = $i1 - i0"->"if i6 < $i2 goto $i5 = i6 + i0";
    "if i6 < $i2 goto $i5 = i6 + i0"->"return";
    "if i6 < $i2 goto $i5 = i6 + i0"->"$i5 = i6 + i0";
}
