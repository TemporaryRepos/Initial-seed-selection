digraph "unitGraph" {
    "r17 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[256]"
    "r1 = newarray (int)[256]"
    "i4 = 0"
    "goto [?= (branch)]"
    "r1[i4] = i4"
    "i4 = i4 + 1"
    "if i4 < 256 goto r1[i4] = i4"
    "i5 = 0"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)"
    "i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0)"
    "z0 = 1"
    "i6 = 0"
    "i7 = 0"
    "$i1 = r1[i7]"
    "i6 = i6 + $i1"
    "$i2 = r0[i7]"
    "if $i2 == i6 goto i7 = i7 + 1"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \")"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \")"
    "$i3 = r0[i7]"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "z0 = 0"
    "i7 = i7 + 1"
    "if i7 < 256 goto $i1 = r1[i7]"
    "if i6 == i0 goto (branch)"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \")"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16)"
    "if z0 != 0 goto i5 = i5 + 1"
    "$r10 = new java.lang.RuntimeException"
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"
    "throw $r10"
    "i5 = i5 + 1"
    "if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)"
    "return"
    "r17 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[256]";
    "r0 = newarray (int)[256]"->"r1 = newarray (int)[256]";
    "r1 = newarray (int)[256]"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 256 goto r1[i4] = i4";
    "r1[i4] = i4"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < 256 goto r1[i4] = i4";
    "if i4 < 256 goto r1[i4] = i4"->"i5 = 0";
    "if i4 < 256 goto r1[i4] = i4"->"r1[i4] = i4";
    "i5 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)"->"i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0)";
    "i0 = staticinvoke <compiler.loopopts.superword.TestReductionWithLoopVariantUse: int m(int[])>(r0)"->"z0 = 1";
    "z0 = 1"->"i6 = 0";
    "i6 = 0"->"i7 = 0";
    "i7 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 256 goto $i1 = r1[i7]";
    "$i1 = r1[i7]"->"i6 = i6 + $i1";
    "i6 = i6 + $i1"->"$i2 = r0[i7]";
    "$i2 = r0[i7]"->"if $i2 == i6 goto i7 = i7 + 1";
    "if $i2 == i6 goto i7 = i7 + 1"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if $i2 == i6 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \")";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for \")"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : \")"->"$i3 = r0[i7]";
    "$i3 = r0[i7]"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"z0 = 0";
    "z0 = 0"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"if i7 < 256 goto $i1 = r1[i7]";
    "if i7 < 256 goto $i1 = r1[i7]"->"if i6 == i0 goto (branch)";
    "if i7 < 256 goto $i1 = r1[i7]"->"$i1 = r1[i7]";
    "if i6 == i0 goto (branch)"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "if i6 == i0 goto (branch)"->"if z0 != 0 goto i5 = i5 + 1";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \")";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Failed for sum: \")"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" != \")"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16)"->"if z0 != 0 goto i5 = i5 + 1";
    "if z0 != 0 goto i5 = i5 + 1"->"$r10 = new java.lang.RuntimeException";
    "if z0 != 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$r10 = new java.lang.RuntimeException"->"specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")";
    "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Test failed\")"->"throw $r10";
    "i5 = i5 + 1"->"if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)";
    "if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)"->"return";
    "if i5 < 20000 goto staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, 256)";
}
