digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r8 := @parameter0: java.lang.String[];
d0 = 1.0E-4;
$i0 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r0 = newarray (double)[$i0];
<jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx> = $r0;
$i1 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r1 = newarray (double)[$i1];
<jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy> = $r1;
$i2 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
d1 = (double) $i2;
d2 = 1.0 / d1;
d3 = 0.5;
d4 = 0.75;
i11 = 0;
goto [?= $i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d5 = (double) i11;
d6 = $d5 * d2;
$r2 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx>;
$d7 = 3.0 * d6;
$d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);
$d10 = d3 * $d8;
$d9 = 3.0 * d6;
$d11 = staticinvoke <java.lang.Math: double cos(double)>($d9);
$d12 = d4 * $d11;
$d13 = $d10 + $d12;
$r2[i11] = $d13;
i11 = i11 + 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
if i11 < $i3 goto $d5 = (double) i11;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r3 = new jit.FloatingPoint.gen_math.Filtering.Filtering;
specialinvoke $r3.<jit.FloatingPoint.gen_math.Filtering.Filtering: void <init>()>();
r9 = $r3;
$i4 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r4 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx>;
d14 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i4, $r4);
$i5 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter1(int)>($i5);
$i6 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r5 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d15 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i6, $r5);
$i7 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter2(int)>($i7);
$i8 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r6 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d16 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i8, $r6);
$i9 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter3(int)>($i9);
$i10 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r7 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d17 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i10, $r7);
$d19 = d15 * d15;
$d18 = d16 * d16;
$d21 = $d19 + $d18;
$d20 = d17 * d17;
$d22 = $d21 + $d20;
d25 = $d22 / 3.0;
d26 = staticinvoke <java.lang.Math: double sqrt(double)>(d25);
$d23 = d26 - d14;
d24 = staticinvoke <java.lang.Math: double abs(double)>($d23);
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Echeck(double,double)>(d24, d0);
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r8 := @parameter0: java.lang.String[];
d0 = 1.0E-4;
$i0 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r0 = newarray (double)[$i0];
<jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx> = $r0;
$i1 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r1 = newarray (double)[$i1];
<jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy> = $r1;
$i2 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
d1 = (double) $i2;
d2 = 1.0 / d1;
d3 = 0.5;
d4 = 0.75;
i11 = 0;
goto [?= $i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
if i11 < $i3 goto $d5 = (double) i11;
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$d5 = (double) i11;
d6 = $d5 * d2;
$r2 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx>;
$d7 = 3.0 * d6;
$d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);
$d10 = d3 * $d8;
$d9 = 3.0 * d6;
$d11 = staticinvoke <java.lang.Math: double cos(double)>($d9);
$d12 = d4 * $d11;
$d13 = $d10 + $d12;
$r2[i11] = $d13;
i11 = i11 + 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
if i11 < $i3 goto $d5 = (double) i11;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
if i11 < $i3 goto $d5 = (double) i11;
"->"Block 3:
[preds: 2 ] [succs: ]
$r3 = new jit.FloatingPoint.gen_math.Filtering.Filtering;
specialinvoke $r3.<jit.FloatingPoint.gen_math.Filtering.Filtering: void <init>()>();
r9 = $r3;
$i4 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r4 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx>;
d14 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i4, $r4);
$i5 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter1(int)>($i5);
$i6 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r5 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d15 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i6, $r5);
$i7 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter2(int)>($i7);
$i8 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r6 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d16 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i8, $r6);
$i9 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Filter3(int)>($i9);
$i10 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
$r7 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] yy>;
d17 = virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: double Norma1(int,double[])>($i10, $r7);
$d19 = d15 * d15;
$d18 = d16 * d16;
$d21 = $d19 + $d18;
$d20 = d17 * d17;
$d22 = $d21 + $d20;
d25 = $d22 / 3.0;
d26 = staticinvoke <java.lang.Math: double sqrt(double)>(d25);
$d23 = d26 - d14;
d24 = staticinvoke <java.lang.Math: double abs(double)>($d23);
virtualinvoke r9.<jit.FloatingPoint.gen_math.Filtering.Filtering: void Echeck(double,double)>(d24, d0);
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$i3 = <jit.FloatingPoint.gen_math.Filtering.Filtering: int N>;
if i11 < $i3 goto $d5 = (double) i11;
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$d5 = (double) i11;
d6 = $d5 * d2;
$r2 = <jit.FloatingPoint.gen_math.Filtering.Filtering: double[] xx>;
$d7 = 3.0 * d6;
$d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);
$d10 = d3 * $d8;
$d9 = 3.0 * d6;
$d11 = staticinvoke <java.lang.Math: double cos(double)>($d9);
$d12 = d4 * $d11;
$d13 = $d10 + $d12;
$r2[i11] = $d13;
i11 = i11 + 1;
";
}
