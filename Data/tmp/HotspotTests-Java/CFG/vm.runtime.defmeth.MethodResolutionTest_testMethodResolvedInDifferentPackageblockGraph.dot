digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.MethodResolutionTest;
$r1 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: java.lang.Object flags(int)>(0);
$r5 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r4;
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(10);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.J\");
$r12 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r12[0] = r10;
$r13 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder extend(vm.runtime.defmeth.shared.data.Interface[])>($r12);
r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r15 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.A\");
$r16 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r16[0] = r14;
$r17 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r16);
r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r19 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r20 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(10);
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\")];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r23 = virtualinvoke $r22.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IllegalAccessException;\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r24.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\");
virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.MethodResolutionTest;
$r1 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: java.lang.Object flags(int)>(0);
$r5 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r4;
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(10);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.J\");
$r12 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r12[0] = r10;
$r13 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder extend(vm.runtime.defmeth.shared.data.Interface[])>($r12);
r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r15 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.A\");
$r16 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r16[0] = r14;
$r17 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r16);
r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r19 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r20 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(10);
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\")];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: vm.runtime.defmeth.MethodResolutionTest;
$r1 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
r2 = virtualinvoke $r1.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: vm.runtime.defmeth.shared.builder.TestBuilder getBuilder()>();
$r3 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.I\");
$r4 = virtualinvoke $r3.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: java.lang.Object flags(int)>(0);
$r5 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r4;
$r6 = virtualinvoke $r5.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder defaultMethod(java.lang.String,java.lang.String)>(\"m\", \"()I\");
$r7 = virtualinvoke $r6.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: vm.runtime.defmeth.shared.builder.ClassMethodBuilder returns(int)>(10);
$r8 = virtualinvoke $r7.<vm.runtime.defmeth.shared.builder.ClassMethodBuilder: java.lang.Object build()>();
$r9 = (vm.runtime.defmeth.shared.builder.InterfaceBuilder) $r8;
r10 = virtualinvoke $r9.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r11 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder intf(java.lang.String)>(\"p1.J\");
$r12 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r12[0] = r10;
$r13 = virtualinvoke $r11.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.builder.InterfaceBuilder extend(vm.runtime.defmeth.shared.data.Interface[])>($r12);
r14 = virtualinvoke $r13.<vm.runtime.defmeth.shared.builder.InterfaceBuilder: vm.runtime.defmeth.shared.data.Interface build()>();
$r15 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.A\");
$r16 = newarray (vm.runtime.defmeth.shared.data.Interface)[1];
$r16[0] = r14;
$r17 = virtualinvoke $r15.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder implement(vm.runtime.defmeth.shared.data.Interface[])>($r16);
r18 = virtualinvoke $r17.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
$r19 = r0.<vm.runtime.defmeth.MethodResolutionTest: vm.runtime.defmeth.shared.builder.TestBuilderFactory factory>;
$r20 = virtualinvoke $r19.<vm.runtime.defmeth.shared.builder.TestBuilderFactory: java.lang.String getExecutionMode()>();
$z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"REFLECTION\");
if $z0 != 0 goto $r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r23 = virtualinvoke $r22.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IllegalAccessException;\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r24.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r27 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r28 = virtualinvoke $r27.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r29 = virtualinvoke $r28.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder returns(int)>(10);
$r30 = virtualinvoke $r29.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r30.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
goto [?= $r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\")];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\");
virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r21 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder test()>();
$r22 = virtualinvoke $r21.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder callSite(vm.runtime.defmeth.shared.data.Clazz,vm.runtime.defmeth.shared.data.ConcreteClass,java.lang.String,java.lang.String)>(r18, r18, \"m\", \"()I\");
$r23 = virtualinvoke $r22.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TesterBuilder throws_(java.lang.Class)>(class \"Ljava/lang/IllegalAccessException;\");
$r24 = virtualinvoke $r23.<vm.runtime.defmeth.shared.builder.TesterBuilder: vm.runtime.defmeth.shared.builder.TestBuilder done()>();
virtualinvoke $r24.<vm.runtime.defmeth.shared.builder.TestBuilder: void run()>();
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r25 = virtualinvoke r2.<vm.runtime.defmeth.shared.builder.TestBuilder: vm.runtime.defmeth.shared.builder.ConcreteClassBuilder clazz(java.lang.String)>(\"p2.B\");
virtualinvoke $r25.<vm.runtime.defmeth.shared.builder.ConcreteClassBuilder: vm.runtime.defmeth.shared.data.ConcreteClass build()>();
return;
";
}
