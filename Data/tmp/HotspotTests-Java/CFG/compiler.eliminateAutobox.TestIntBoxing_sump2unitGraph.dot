digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "r3 := @parameter1: java.lang.Integer"
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "r1 = r0"
    "i0 = lengthof r0"
    "i12 = 0"
    "goto [?= (branch)]"
    "$i1 = r1[i12]"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i4 = $i2 + $i3"
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "$i7 = $i6 + 1"
    "$i8 = $i5 + $i7"
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)"
    "i12 = i12 + 1"
    "if i12 < i0 goto $i1 = r1[i12]"
    "$i9 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"
    "$i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"
    "$i11 = $i9 + $i10"
    "return $i11"
    "r0 := @parameter0: int[]"->"r3 := @parameter1: java.lang.Integer";
    "r3 := @parameter1: java.lang.Integer"->"r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i12 = 0";
    "i12 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 < i0 goto $i1 = r1[i12]";
    "$i1 = r1[i12]"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"->"$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i4 = $i2 + $i3";
    "$i4 = $i2 + $i3"->"r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"$i7 = $i6 + 1";
    "$i7 = $i6 + 1"->"$i8 = $i5 + $i7";
    "$i8 = $i5 + $i7"->"r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)";
    "r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"if i12 < i0 goto $i1 = r1[i12]";
    "if i12 < i0 goto $i1 = r1[i12]"->"$i9 = virtualinvoke r4.<java.lang.Integer: int intValue()>()";
    "if i12 < i0 goto $i1 = r1[i12]"->"$i1 = r1[i12]";
    "$i9 = virtualinvoke r4.<java.lang.Integer: int intValue()>()"->"$i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>()";
    "$i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>()"->"$i11 = $i9 + $i10";
    "$i11 = $i9 + $i10"->"return $i11";
}
