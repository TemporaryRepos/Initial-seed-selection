digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i3 = 1"
    "r1 = r0"
    "i0 = lengthof r0"
    "i4 = 0"
    "goto [?= (branch)]"
    "$i1 = r1[i4]"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"
    "i3 = i3 + $i2"
    "i4 = i4 + 1"
    "if i4 < i0 goto $i1 = r1[i4]"
    "return i3"
    "r0 := @parameter0: int[]"->"i3 = 1";
    "i3 = 1"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i4 = 0";
    "i4 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < i0 goto $i1 = r1[i4]";
    "$i1 = r1[i4]"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>()"->"i3 = i3 + $i2";
    "i3 = i3 + $i2"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"if i4 < i0 goto $i1 = r1[i4]";
    "if i4 < i0 goto $i1 = r1[i4]"->"return i3";
    "if i4 < i0 goto $i1 = r1[i4]"->"$i1 = r1[i4]";
}
