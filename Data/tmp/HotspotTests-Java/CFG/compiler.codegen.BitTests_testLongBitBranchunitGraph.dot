digraph "unitGraph" {
    "r0 := @this: compiler.codegen.BitTests"
    "l6 := @parameter0: long"
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$l1 = $l0 & 1125899906842624L"
    "$b2 = $l1 cmp 0L"
    "if $b2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"
    "$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"
    "$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()"
    "$l4 = $l3 & 1125899906842624L"
    "$b5 = $l4 cmp 0L"
    "if $b5 == 0 goto return l6"
    "return l6"
    "r0 := @this: compiler.codegen.BitTests"->"l6 := @parameter0: long";
    "l6 := @parameter0: long"->"$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r1 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l0 = virtualinvoke $r1.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$l1 = $l0 & 1125899906842624L";
    "$l1 = $l0 & 1125899906842624L"->"$b2 = $l1 cmp 0L";
    "$b2 = $l1 cmp 0L"->"if $b2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "if $b2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)";
    "if $b2 == 0 goto $r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"->"$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>";
    "$r2 = r0.<compiler.codegen.BitTests: compiler.codegen.BitTests$XorShift r>"->"$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()";
    "$l3 = virtualinvoke $r2.<compiler.codegen.BitTests$XorShift: long nextLong()>()"->"$l4 = $l3 & 1125899906842624L";
    "$l4 = $l3 & 1125899906842624L"->"$b5 = $l4 cmp 0L";
    "$b5 = $l4 cmp 0L"->"if $b5 == 0 goto return l6";
    "if $b5 == 0 goto return l6"->"l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)";
    "if $b5 == 0 goto return l6"->"return l6";
    "l6 = specialinvoke r0.<compiler.codegen.BitTests: long increment(long)>(l6)"->"return l6";
}
