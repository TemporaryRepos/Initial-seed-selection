digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: selectionresolution.Template;
r7 := @parameter0: java.util.function.Consumer;
r5 := @parameter1: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.Template: java.util.Collection cases>;
r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.function.Consumer) $r3;
r6 = virtualinvoke r5.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r4.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
interfaceinvoke r7.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 2 ]
r0 := @this: selectionresolution.Template;
r7 := @parameter0: java.util.function.Consumer;
r5 := @parameter1: selectionresolution.SelectionResolutionTestCase$Builder;
$r1 = r0.<selectionresolution.Template: java.util.Collection cases>;
r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.function.Consumer) $r3;
r6 = virtualinvoke r5.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r4.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
interfaceinvoke r7.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
"->"Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
"->"Block 3:
[preds: 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 1 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 != 0 goto $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
"->"Block 1:
[preds: 2 ] [succs: 2 ]
$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.function.Consumer) $r3;
r6 = virtualinvoke r5.<selectionresolution.SelectionResolutionTestCase$Builder: selectionresolution.SelectionResolutionTestCase$Builder copy()>();
interfaceinvoke r4.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
interfaceinvoke r7.<java.util.function.Consumer: void accept(java.lang.Object)>(r6);
";
}
