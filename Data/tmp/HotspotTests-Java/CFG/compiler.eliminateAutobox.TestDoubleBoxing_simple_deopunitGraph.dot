digraph "unitGraph" {
    "d0 := @parameter0: double"
    "$r0 = new java.lang.Double"
    "$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0)"
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)"
    "r1 = $r0"
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"
    "$d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"
    "return $d2"
    "d0 := @parameter0: double"->"$r0 = new java.lang.Double";
    "$r0 = new java.lang.Double"->"$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0)";
    "$d1 = staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: double foo(double)>(d0)"->"specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)";
    "specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1)"->"r1 = $r0";
    "r1 = $r0"->"staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()";
    "staticinvoke <compiler.eliminateAutobox.TestDoubleBoxing: void dummy()>()"->"$d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()";
    "$d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>()"->"return $d2";
}
