digraph "unitGraph" {
    "r1 := @parameter0: java.lang.Long"
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)"
    "i8 = 0"
    "goto [?= (branch)]"
    "$i0 = i8 & 1"
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$r0 = new java.lang.Long"
    "$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "$l4 = $l3 + 1L"
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>($l4)"
    "r1 = $r0"
    "goto [?= i8 = i8 + 1]"
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l2 = $l1 + 2L"
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"
    "i8 = i8 + 1"
    "if i8 < 1000 goto $i0 = i8 & 1"
    "$l5 = virtualinvoke r1.<java.lang.Long: long longValue()>()"
    "$l6 = virtualinvoke r2.<java.lang.Long: long longValue()>()"
    "$l7 = $l5 + $l6"
    "return $l7"
    "r1 := @parameter0: java.lang.Long"->"r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)";
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)"->"i8 = 0";
    "i8 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 < 1000 goto $i0 = i8 & 1";
    "$i0 = i8 & 1"->"if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$r0 = new java.lang.Long";
    "if $i0 != 0 goto $l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$r0 = new java.lang.Long"->"$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"$l4 = $l3 + 1L";
    "$l4 = $l3 + 1L"->"specialinvoke $r0.<java.lang.Long: void <init>(long)>($l4)";
    "specialinvoke $r0.<java.lang.Long: void <init>(long)>($l4)"->"r1 = $r0";
    "r1 = $r0"->"goto [?= i8 = i8 + 1]";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "$l1 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l2 = $l1 + 2L";
    "$l2 = $l1 + 2L"->"r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)";
    "r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"if i8 < 1000 goto $i0 = i8 & 1";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$l5 = virtualinvoke r1.<java.lang.Long: long longValue()>()";
    "if i8 < 1000 goto $i0 = i8 & 1"->"$i0 = i8 & 1";
    "$l5 = virtualinvoke r1.<java.lang.Long: long longValue()>()"->"$l6 = virtualinvoke r2.<java.lang.Long: long longValue()>()";
    "$l6 = virtualinvoke r2.<java.lang.Long: long longValue()>()"->"$l7 = $l5 + $l6";
    "$l7 = $l5 + $l6"->"return $l7";
}
