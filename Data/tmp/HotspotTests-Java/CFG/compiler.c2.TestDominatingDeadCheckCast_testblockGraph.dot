digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
z0 := @parameter0: boolean;
z1 := @parameter1: boolean;
z2 := @parameter2: boolean;
z3 := @parameter3: boolean;
z4 := @parameter4: boolean;
$r0 = staticinvoke <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A not_inlined()>();
<compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field> = $r0;
$r1 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r1);
if z0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
if z1 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
if z2 == 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r2);
if z3 == 0 goto return;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if z4 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r3 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r3);
"
    "Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
z0 := @parameter0: boolean;
z1 := @parameter1: boolean;
z2 := @parameter2: boolean;
z3 := @parameter3: boolean;
z4 := @parameter4: boolean;
$r0 = staticinvoke <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A not_inlined()>();
<compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field> = $r0;
$r1 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r1);
if z0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 6 ]
if z1 == 0 goto return;
";
    "Block 0:
[preds: ] [succs: 1 6 ]
z0 := @parameter0: boolean;
z1 := @parameter1: boolean;
z2 := @parameter2: boolean;
z3 := @parameter3: boolean;
z4 := @parameter4: boolean;
$r0 = staticinvoke <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A not_inlined()>();
<compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field> = $r0;
$r1 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r1);
if z0 == 0 goto return;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
if z1 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
if z2 == 0 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
if z1 == 0 goto return;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
if z2 == 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r2);
if z3 == 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
if z2 == 0 goto return;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r2);
if z3 == 0 goto return;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
if z4 == 0 goto return;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r2);
if z3 == 0 goto return;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if z4 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r3 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r3);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if z4 == 0 goto return;
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r3 = <compiler.c2.TestDominatingDeadCheckCast: compiler.c2.TestDominatingDeadCheckCast$A field>;
staticinvoke <compiler.c2.TestDominatingDeadCheckCast: void inlined(compiler.c2.TestDominatingDeadCheckCast$A)>($r3);
"->"Block 6:
[preds: 0 1 2 3 4 5 ] [succs: ]
return;
";
}
