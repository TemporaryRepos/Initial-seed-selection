public class InvokeStaticICCE extends selectionresolution.SelectionResolutionTest {
	private static final selectionresolution.SelectionResolutionTestCase.Builder initBuilder = new selectionresolution.SelectionResolutionTestCase.Builder();

	static {
		initBuilder.setResult(selectionresolution.Result.ICCE);
	}

	private static final java.util.Collection<selectionresolution.SelectionResolutionTest.TestGroup> testgroups = java.util.Arrays.asList(new selectionresolution.SelectionResolutionTest.TestGroup.Simple(InvokeStaticICCE.initBuilder, selectionresolution.Template.SetInvoke(selectionresolution.SelectionResolutionTestCase.InvokeInstruction.INVOKESTATIC), selectionresolution.Template.ResultCombo(java.util.EnumSet.of(selectionresolution.Template.Kind.CLASS), java.util.EnumSet.of(selectionresolution.MethodData.Access.PUBLIC, selectionresolution.MethodData.Access.PACKAGE, selectionresolution.MethodData.Access.PROTECTED, selectionresolution.MethodData.Access.PRIVATE), java.util.EnumSet.of(selectionresolution.MethodData.Context.INSTANCE, selectionresolution.MethodData.Context.ABSTRACT), java.util.EnumSet.of(selectionresolution.ClassData.Package.SAME, selectionresolution.ClassData.Package.DIFFERENT)), selectionresolution.Template.OverrideAbstractExpectedClass, selectionresolution.Template.MethodrefEqualsExpected, selectionresolution.Template.AllCallsiteCases, selectionresolution.Template.TrivialObjectref), new selectionresolution.SelectionResolutionTest.TestGroup.Simple(InvokeStaticICCE.initBuilder, selectionresolution.Template.SetInvoke(selectionresolution.SelectionResolutionTestCase.InvokeInstruction.INVOKESTATIC), selectionresolution.Template.ResultCombo(java.util.EnumSet.of(selectionresolution.Template.Kind.INTERFACE), java.util.EnumSet.of(selectionresolution.MethodData.Access.PUBLIC, selectionresolution.MethodData.Access.PRIVATE), java.util.EnumSet.of(selectionresolution.MethodData.Context.INSTANCE, selectionresolution.MethodData.Context.ABSTRACT), java.util.EnumSet.of(selectionresolution.ClassData.Package.SAME, selectionresolution.ClassData.Package.DIFFERENT)), selectionresolution.Template.OverrideAbstractExpectedIface, selectionresolution.Template.MethodrefEqualsExpected, selectionresolution.Template.AllCallsiteCases, selectionresolution.Template.TrivialObjectref), new selectionresolution.SelectionResolutionTest.TestGroup.Simple(InvokeStaticICCE.initBuilder, selectionresolution.Template.SetInvoke(selectionresolution.SelectionResolutionTestCase.InvokeInstruction.INVOKESTATIC), selectionresolution.Template.ResultCombo(java.util.EnumSet.of(selectionresolution.Template.Kind.CLASS), java.util.EnumSet.of(selectionresolution.MethodData.Access.PUBLIC, selectionresolution.MethodData.Access.PACKAGE, selectionresolution.MethodData.Access.PROTECTED, selectionresolution.MethodData.Access.PRIVATE), java.util.EnumSet.of(selectionresolution.MethodData.Context.INSTANCE, selectionresolution.MethodData.Context.ABSTRACT), java.util.EnumSet.of(selectionresolution.ClassData.Package.SAME, selectionresolution.ClassData.Package.DIFFERENT)), selectionresolution.Template.OverrideAbstractExpectedClass, selectionresolution.Template.MethodrefNotEqualsExpectedClass, selectionresolution.Template.AllCallsiteCases, selectionresolution.Template.TrivialObjectref), new selectionresolution.SelectionResolutionTest.TestGroup.Simple(InvokeStaticICCE.initBuilder, selectionresolution.Template.SetInvoke(selectionresolution.SelectionResolutionTestCase.InvokeInstruction.INVOKESTATIC), selectionresolution.Template.ResultCombo(java.util.EnumSet.of(selectionresolution.Template.Kind.INTERFACE), java.util.EnumSet.of(selectionresolution.MethodData.Access.PUBLIC, selectionresolution.MethodData.Access.PRIVATE), java.util.EnumSet.of(selectionresolution.MethodData.Context.INSTANCE, selectionresolution.MethodData.Context.ABSTRACT), java.util.EnumSet.of(selectionresolution.ClassData.Package.SAME, selectionresolution.ClassData.Package.DIFFERENT)), selectionresolution.Template.OverrideAbstractExpectedIface, selectionresolution.Template.MethodrefNotEqualsExpectedIface, selectionresolution.Template.AllCallsiteCases, selectionresolution.Template.TrivialObjectref));

	private InvokeStaticICCE() {
		super(InvokeStaticICCE.testgroups);
	}

	public static void main(final java.lang.String... args) {
		new InvokeStaticICCE().run();
	}
}