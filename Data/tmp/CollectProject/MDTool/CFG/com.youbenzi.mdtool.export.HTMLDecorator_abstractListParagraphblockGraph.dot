digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r8 := @parameter0: java.util.List;
r2 := @parameter1: com.youbenzi.mdtool.export.HTMLDecorator$LineHelper;
$r0 = new java.lang.StringBuilder;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String parentTagBegin()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
r7 = $r0;
r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r10 = new java.lang.StringBuilder;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r18 = (com.youbenzi.mdtool.markdown.bean.Block) $r17;
r19 = virtualinvoke r18.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.Block getLineData()>();
$r20 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.BlockType getType()>();
$r21 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType HEADLINE>;
if $r20 != $r21 goto $r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r32 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$i0 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: int getLevel()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String headerParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],int)>($r32, $i0);
goto [?= $r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18)];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$z1 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: boolean needDefaultChild()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r23, $z1);
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
$r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r28 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String subList(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagEnd()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 1 ] [succs: ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String parentTagEnd()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();
return $r16;
"
    "Block 0:
[preds: ] [succs: 1 ]
r22 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r8 := @parameter0: java.util.List;
r2 := @parameter1: com.youbenzi.mdtool.export.HTMLDecorator$LineHelper;
$r0 = new java.lang.StringBuilder;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String parentTagBegin()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
r7 = $r0;
r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r10 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r10 = new java.lang.StringBuilder;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r18 = (com.youbenzi.mdtool.markdown.bean.Block) $r17;
r19 = virtualinvoke r18.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.Block getLineData()>();
$r20 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.BlockType getType()>();
$r21 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType HEADLINE>;
if $r20 != $r21 goto $r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r10 = new java.lang.StringBuilder;
"->"Block 6:
[preds: 1 ] [succs: ]
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String parentTagEnd()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
$r16 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();
return $r16;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r18 = (com.youbenzi.mdtool.markdown.bean.Block) $r17;
r19 = virtualinvoke r18.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.Block getLineData()>();
$r20 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.BlockType getType()>();
$r21 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType HEADLINE>;
if $r20 != $r21 goto $r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r32 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$i0 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: int getLevel()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String headerParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],int)>($r32, $i0);
goto [?= $r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r17 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r18 = (com.youbenzi.mdtool.markdown.bean.Block) $r17;
r19 = virtualinvoke r18.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.Block getLineData()>();
$r20 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.BlockType getType()>();
$r21 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType HEADLINE>;
if $r20 != $r21 goto $r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$z1 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: boolean needDefaultChild()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r23, $z1);
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r32 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$i0 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: int getLevel()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String headerParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],int)>($r32, $i0);
goto [?= $r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18)];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
$r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r28 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String subList(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagEnd()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r23 = virtualinvoke r19.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>();
$z1 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: boolean needDefaultChild()>();
r33 = specialinvoke r22.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r23, $z1);
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
$r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r28 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String subList(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagEnd()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
$r24 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagBegin(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n\");
$r28 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String subList(com.youbenzi.mdtool.markdown.bean.Block)>(r18);
virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
$r30 = virtualinvoke r2.<com.youbenzi.mdtool.export.HTMLDecorator$LineHelper: java.lang.String childTagEnd()>();
virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r10 = new java.lang.StringBuilder;
";
}
