digraph "unitGraph" {
    "r9 := @this: com.youbenzi.mdtool.export.HTMLDecorator"
    "r0 := @parameter0: java.util.List"
    "i0 = interfaceinvoke r0.<java.util.List: int size()>()"
    "i1 = 0"
    "r29 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r1 = new java.lang.StringBuilder"
    "$r25 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"
    "r30 = (java.util.List) $r25"
    "i2 = interfaceinvoke r30.<java.util.List: int size()>()"
    "if i1 >= i2 goto (branch)"
    "i1 = i2"
    "goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"<table>\n\")"
    "r31 = $r1"
    "i3 = 0"
    "if i3 >= i0 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<tr>\n\")"
    "$r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3)"
    "r32 = (java.util.List) $r5"
    "i4 = 0"
    "if i4 >= i1 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")"
    "$r7 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)"
    "r8 = (com.youbenzi.mdtool.markdown.bean.Block) $r7"
    "if i3 != 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= z1 = $z2]"
    "$z2 = 0"
    "z1 = $z2"
    "$r10 = virtualinvoke r8.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.TableCellAlign getAlign()>()"
    "$r11 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String buildColBegin(boolean,com.youbenzi.mdtool.markdown.TableCellAlign)>(z1, $r10)"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"
    "$r13 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)"
    "$r14 = (com.youbenzi.mdtool.markdown.bean.Block) $r13"
    "$r15 = virtualinvoke $r14.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>()"
    "$r16 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r15, 0)"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"
    "goto [?= $r18 = new java.lang.StringBuilder]"
    "$r26 := @caughtexception"
    "r27 = $r26"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$r18 = new java.lang.StringBuilder"
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")"
    "if z1 == 0 goto $r33 = \"td\""
    "$r33 = \"th\""
    "goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)]"
    "$r33 = \"td\""
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\n\")"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")"
    "i3 = i3 + 1"
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")"
    "$r3 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r3"
    "r9 := @this: com.youbenzi.mdtool.export.HTMLDecorator"->"r0 := @parameter0: java.util.List";
    "r0 := @parameter0: java.util.List"->"i0 = interfaceinvoke r0.<java.util.List: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.List: int size()>()"->"i1 = 0";
    "i1 = 0"->"r29 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()";
    "r29 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r1 = new java.lang.StringBuilder";
    "if $z0 == 0 goto $r1 = new java.lang.StringBuilder"->"$r25 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "$r25 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"->"r30 = (java.util.List) $r25";
    "r30 = (java.util.List) $r25"->"i2 = interfaceinvoke r30.<java.util.List: int size()>()";
    "i2 = interfaceinvoke r30.<java.util.List: int size()>()"->"if i1 >= i2 goto (branch)";
    "if i1 >= i2 goto (branch)"->"i1 = i2";
    "if i1 >= i2 goto (branch)"->"goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]";
    "i1 = i2"->"goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"<table>\n\")";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"<table>\n\")"->"r31 = $r1";
    "r31 = $r1"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")";
    "if i3 >= i0 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<tr>\n\")";
    "if i3 >= i0 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<tr>\n\")"->"$r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3)";
    "$r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3)"->"r32 = (java.util.List) $r5";
    "r32 = (java.util.List) $r5"->"i4 = 0";
    "i4 = 0"->"if i4 >= i1 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")";
    "if i4 >= i1 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")"->"$r7 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)";
    "if i4 >= i1 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")";
    "$r7 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)"->"r8 = (com.youbenzi.mdtool.markdown.bean.Block) $r7";
    "r8 = (com.youbenzi.mdtool.markdown.bean.Block) $r7"->"if i3 != 0 goto $z2 = 0";
    "if i3 != 0 goto $z2 = 0"->"$z2 = 1";
    "if i3 != 0 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= z1 = $z2]";
    "goto [?= z1 = $z2]"->"z1 = $z2";
    "$z2 = 0"->"z1 = $z2";
    "z1 = $z2"->"$r10 = virtualinvoke r8.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.TableCellAlign getAlign()>()";
    "$r10 = virtualinvoke r8.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.TableCellAlign getAlign()>()"->"$r11 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String buildColBegin(boolean,com.youbenzi.mdtool.markdown.TableCellAlign)>(z1, $r10)";
    "$r11 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String buildColBegin(boolean,com.youbenzi.mdtool.markdown.TableCellAlign)>(z1, $r10)"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"->"$r13 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"->"$r26 := @caughtexception";
    "$r13 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)"->"$r14 = (com.youbenzi.mdtool.markdown.bean.Block) $r13";
    "$r13 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i4)"->"$r26 := @caughtexception";
    "$r14 = (com.youbenzi.mdtool.markdown.bean.Block) $r13"->"$r15 = virtualinvoke $r14.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>()";
    "$r14 = (com.youbenzi.mdtool.markdown.bean.Block) $r13"->"$r26 := @caughtexception";
    "$r15 = virtualinvoke $r14.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>()"->"$r16 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r15, 0)";
    "$r15 = virtualinvoke $r14.<com.youbenzi.mdtool.markdown.bean.Block: com.youbenzi.mdtool.markdown.bean.ValuePart[] getValueParts()>()"->"$r26 := @caughtexception";
    "$r16 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r15, 0)"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)";
    "$r16 = specialinvoke r9.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String commonTextParagraph(com.youbenzi.mdtool.markdown.bean.ValuePart[],boolean)>($r15, 0)"->"$r26 := @caughtexception";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"->"goto [?= $r18 = new java.lang.StringBuilder]";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"->"$r26 := @caughtexception";
    "goto [?= $r18 = new java.lang.StringBuilder]"->"$r18 = new java.lang.StringBuilder";
    "$r26 := @caughtexception"->"r27 = $r26";
    "r27 = $r26"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$r18 = new java.lang.StringBuilder";
    "$r18 = new java.lang.StringBuilder"->"specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")"->"if z1 == 0 goto $r33 = \"td\"";
    "if z1 == 0 goto $r33 = \"td\""->"$r33 = \"th\"";
    "if z1 == 0 goto $r33 = \"td\""->"$r33 = \"td\"";
    "$r33 = \"th\""->"goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)]";
    "goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)]"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)";
    "$r33 = \"td\""->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\n\")";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\n\")"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i1 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</tr>\n\")"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")";
    "virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</table>\n\")"->"$r3 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r3 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r3";
}
