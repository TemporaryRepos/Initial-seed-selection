digraph "unitGraph" {
    "r0 := @this: com.youbenzi.mdtool.export.HTMLDecorator"
    "r1 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]"
    "i0 := @parameter1: int"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"h\")"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r6 = specialinvoke r0.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String oneLineHtml(com.youbenzi.mdtool.markdown.bean.ValuePart[],java.lang.String)>(r1, $r5)"
    "return $r6"
    "r0 := @this: com.youbenzi.mdtool.export.HTMLDecorator"->"r1 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]";
    "r1 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"h\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"h\")"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 = specialinvoke r0.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String oneLineHtml(com.youbenzi.mdtool.markdown.bean.ValuePart[],java.lang.String)>(r1, $r5)";
    "$r6 = specialinvoke r0.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String oneLineHtml(com.youbenzi.mdtool.markdown.bean.ValuePart[],java.lang.String)>(r1, $r5)"->"return $r6";
}
