digraph "unitGraph" {
    "r14 := @this: com.youbenzi.mdtool.export.HTMLDecorator"
    "r3 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]"
    "r2 := @parameter1: java.lang.String"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "if r2 == null goto r4 = r3"
    "$r18 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()"
    "$z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"
    "if $z2 != 0 goto r4 = r3"
    "$r19 = new java.lang.StringBuilder"
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<\")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"
    "r4 = r3"
    "i0 = lengthof r4"
    "i2 = 0"
    "if i2 >= i0 goto (branch)"
    "r12 = r4[i2]"
    "r13 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: com.youbenzi.mdtool.markdown.BlockType[] getTypes()>()"
    "r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getValue()>()"
    "$z1 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: boolean hasLink(com.youbenzi.mdtool.markdown.BlockType[])>(r13)"
    "if $z1 == 0 goto (branch)"
    "r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>()"
    "if r13 == null goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"
    "r16 = r13"
    "i1 = lengthof r16"
    "i3 = 0"
    "if i3 >= i1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"
    "r17 = r16[i3]"
    "r25 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String formatByType(com.youbenzi.mdtool.markdown.BlockType,java.lang.String,com.youbenzi.mdtool.markdown.bean.ValuePart)>(r17, r25, r12)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"
    "i2 = i2 + 1"
    "if r2 == null goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()"
    "$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"
    "if $z0 != 0 goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"
    "$r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r26"
    "r14 := @this: com.youbenzi.mdtool.export.HTMLDecorator"->"r3 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]";
    "r3 := @parameter0: com.youbenzi.mdtool.markdown.bean.ValuePart[]"->"r2 := @parameter1: java.lang.String";
    "r2 := @parameter1: java.lang.String"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"if r2 == null goto r4 = r3";
    "if r2 == null goto r4 = r3"->"$r18 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()";
    "if r2 == null goto r4 = r3"->"r4 = r3";
    "$r18 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()"->"$z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(\"\")";
    "$z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"->"if $z2 != 0 goto r4 = r3";
    "if $z2 != 0 goto r4 = r3"->"$r19 = new java.lang.StringBuilder";
    "if $z2 != 0 goto r4 = r3"->"r4 = r3";
    "$r19 = new java.lang.StringBuilder"->"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<\")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<\")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"->"r4 = r3";
    "r4 = r3"->"i0 = lengthof r4";
    "i0 = lengthof r4"->"i2 = 0";
    "i2 = 0"->"if i2 >= i0 goto (branch)";
    "if i2 >= i0 goto (branch)"->"r12 = r4[i2]";
    "if i2 >= i0 goto (branch)"->"if r2 == null goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r12 = r4[i2]"->"r13 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: com.youbenzi.mdtool.markdown.BlockType[] getTypes()>()";
    "r13 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: com.youbenzi.mdtool.markdown.BlockType[] getTypes()>()"->"r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getValue()>()";
    "r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getValue()>()"->"$z1 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: boolean hasLink(com.youbenzi.mdtool.markdown.BlockType[])>(r13)";
    "$z1 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: boolean hasLink(com.youbenzi.mdtool.markdown.BlockType[])>(r13)"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>()";
    "if $z1 == 0 goto (branch)"->"if r13 == null goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "r25 = virtualinvoke r12.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>()"->"if r13 == null goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "if r13 == null goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"r16 = r13";
    "if r13 == null goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "r16 = r13"->"i1 = lengthof r16";
    "i1 = lengthof r16"->"i3 = 0";
    "i3 = 0"->"if i3 >= i1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "if i3 >= i1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"r17 = r16[i3]";
    "if i3 >= i1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "r17 = r16[i3]"->"r25 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String formatByType(com.youbenzi.mdtool.markdown.BlockType,java.lang.String,com.youbenzi.mdtool.markdown.bean.ValuePart)>(r17, r25, r12)";
    "r25 = specialinvoke r14.<com.youbenzi.mdtool.export.HTMLDecorator: java.lang.String formatByType(com.youbenzi.mdtool.markdown.BlockType,java.lang.String,com.youbenzi.mdtool.markdown.bean.ValuePart)>(r17, r25, r12)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i1 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i0 goto (branch)";
    "if r2 == null goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()";
    "if r2 == null goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()"->"$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(\"\")";
    "$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(\"\")"->"if $z0 != 0 goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if $z0 != 0 goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 = new java.lang.StringBuilder";
    "if $z0 != 0 goto $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"->"$r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r26";
}
