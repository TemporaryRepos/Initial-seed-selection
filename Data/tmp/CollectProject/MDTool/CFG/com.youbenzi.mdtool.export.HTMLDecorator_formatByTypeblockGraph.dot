digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"
    "Block 1:
[preds: 0 ] [succs: ]
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<strong>\");
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</strong>\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
return $r45;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<em>\");
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</em>\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
return $r40;
"
    "Block 3:
[preds: 0 ] [succs: ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<del>\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</del>\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
return $r35;
"
    "Block 4:
[preds: 0 ] [succs: ]
r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");
r58 = virtualinvoke r57.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\">\", \"&gt;\");
$r26 = new java.lang.StringBuilder;
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<code>\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</code>\");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
return $r30;
"
    "Block 5:
[preds: 0 ] [succs: ]
$i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();
i3 = $i2 + 1;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<h\");
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</h\");
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
return $r54;
"
    "Block 6:
[preds: 0 ] [succs: ]
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<a href=\\\"\");
$r17 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getUrl()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" title=\\\"\");
$r20 = staticinvoke <com.youbenzi.mdtool.tool.Tools: java.lang.String filterHtml(java.lang.String)>(r56);
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\">\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</a>\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
return $r25;
"
    "Block 7:
[preds: 0 ] [succs: ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<img src=\\\"\");
$r5 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getUrl()>();
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" title=\\\"\");
$r8 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" alt=\\\"\");
$r11 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" />\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
return $r14;
"
    "Block 8:
[preds: 0 ] [succs: ]
return \"<br/>\";
"
    "Block 9:
[preds: 0 ] [succs: ]
return r56;
"
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 5:
[preds: 0 ] [succs: ]
$i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();
i3 = $i2 + 1;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<h\");
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</h\");
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\">\");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
return $r54;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 9:
[preds: 0 ] [succs: ]
return r56;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 1:
[preds: 0 ] [succs: ]
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<strong>\");
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</strong>\");
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
return $r45;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 2:
[preds: 0 ] [succs: ]
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<em>\");
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</em>\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
return $r40;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 3:
[preds: 0 ] [succs: ]
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<del>\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</del>\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
return $r35;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 4:
[preds: 0 ] [succs: ]
r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");
r58 = virtualinvoke r57.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\">\", \"&gt;\");
$r26 = new java.lang.StringBuilder;
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<code>\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</code>\");
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
return $r30;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 6:
[preds: 0 ] [succs: ]
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<a href=\\\"\");
$r17 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getUrl()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" title=\\\"\");
$r20 = staticinvoke <com.youbenzi.mdtool.tool.Tools: java.lang.String filterHtml(java.lang.String)>(r56);
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\">\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</a>\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
return $r25;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 7:
[preds: 0 ] [succs: ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<img src=\\\"\");
$r5 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getUrl()>();
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" title=\\\"\");
$r8 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" alt=\\\"\");
$r11 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: java.lang.String getTitle()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" />\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
return $r14;
";
    "Block 0:
[preds: ] [succs: 5 9 1 2 3 4 6 7 8 ]
r55 := @this: com.youbenzi.mdtool.export.HTMLDecorator;
r0 := @parameter0: com.youbenzi.mdtool.markdown.BlockType;
r56 := @parameter1: java.lang.String;
r4 := @parameter2: com.youbenzi.mdtool.markdown.bean.ValuePart;
$r1 = <com.youbenzi.mdtool.export.HTMLDecorator$2: int[] $SwitchMap$com$youbenzi$mdtool$markdown$BlockType>;
$i0 = virtualinvoke r0.<com.youbenzi.mdtool.markdown.BlockType: int ordinal()>();
$i1 = $r1[$i0];
tableswitch($i1) {     case 2: goto $i2 = virtualinvoke r4.<com.youbenzi.mdtool.markdown.bean.ValuePart: int getLevel()>();     case 3: goto return r56;     case 4: goto return r56;     case 5: goto return r56;     case 6: goto return r56;     case 7: goto return r56;     case 8: goto return r56;     case 9: goto $r41 = new java.lang.StringBuilder;     case 10: goto $r36 = new java.lang.StringBuilder;     case 11: goto $r31 = new java.lang.StringBuilder;     case 12: goto r57 = virtualinvoke r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"<\", \"&lt;\");     case 13: goto $r15 = new java.lang.StringBuilder;     case 14: goto $r2 = new java.lang.StringBuilder;     case 15: goto return \"<br/>\";     default: goto return r56; };
"->"Block 8:
[preds: 0 ] [succs: ]
return \"<br/>\";
";
}
