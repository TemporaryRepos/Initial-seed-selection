digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r12 := @parameter0: java.lang.String[];
$r0 = new com.youbenzi.mdtool.markdown.bean.ValuePart;
specialinvoke $r0.<com.youbenzi.mdtool.markdown.bean.ValuePart: void <init>()>();
r1 = $r0;
$r2 = newarray (com.youbenzi.mdtool.markdown.BlockType)[2];
$r3 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType BOLD_WORD>;
$r2[0] = $r3;
$r4 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType CODE>;
$r2[1] = $r4;
virtualinvoke r1.<com.youbenzi.mdtool.markdown.bean.ValuePart: void setTypes(com.youbenzi.mdtool.markdown.BlockType[])>($r2);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = r1.<com.youbenzi.mdtool.markdown.bean.ValuePart: com.youbenzi.mdtool.markdown.BlockType[] types>;
$r7 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r5);
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);
$r8 = <com.youbenzi.mdtool.markdown.BlockType: com.youbenzi.mdtool.markdown.BlockType HEADLINE>;
virtualinvoke r1.<com.youbenzi.mdtool.markdown.bean.ValuePart: void addType(com.youbenzi.mdtool.markdown.BlockType)>($r8);
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = r1.<com.youbenzi.mdtool.markdown.bean.ValuePart: com.youbenzi.mdtool.markdown.BlockType[] types>;
$r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r9);
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);
return;
"
}
