digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String"
    "r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"<([^>]*)>\")"
    "r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)"
    "$r3 = new java.lang.StringBuffer"
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()"
    "r4 = $r3"
    "z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()"
    "if z0 == 0 goto virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)"
    "virtualinvoke r2.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r4, \"\")"
    "goto [?= (branch)]"
    "virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)"
    "$r6 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"
    "return $r6"
    "r1 := @parameter0: java.lang.String"->"r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"<([^>]*)>\")";
    "r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"<([^>]*)>\")"->"r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)";
    "r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)"->"$r3 = new java.lang.StringBuffer";
    "$r3 = new java.lang.StringBuffer"->"specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()";
    "z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()"->"if z0 == 0 goto virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)";
    "if z0 == 0 goto virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)"->"virtualinvoke r2.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r4, \"\")";
    "if z0 == 0 goto virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)"->"virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)";
    "virtualinvoke r2.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r4, \"\")"->"z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()";
    "z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z0 == 0 goto virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)";
    "virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r4)"->"$r6 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r6 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"return $r6";
}
