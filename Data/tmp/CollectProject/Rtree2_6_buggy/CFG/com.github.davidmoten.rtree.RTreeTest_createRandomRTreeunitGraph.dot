digraph "unitGraph" {
    "l0 := @parameter0: long"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"
    "r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"
    "l2 = 0L"
    "$b1 = l2 cmp l0"
    "if $b1 >= 0 goto return r2"
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry randomEntry()>()"
    "r2 = virtualinvoke r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)"
    "l2 = l2 + 1L"
    "goto [?= $b1 = l2 cmp l0]"
    "return r2"
    "l0 := @parameter0: long"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"->"r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()";
    "r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"->"l2 = 0L";
    "l2 = 0L"->"$b1 = l2 cmp l0";
    "$b1 = l2 cmp l0"->"if $b1 >= 0 goto return r2";
    "if $b1 >= 0 goto return r2"->"r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry randomEntry()>()";
    "if $b1 >= 0 goto return r2"->"return r2";
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry randomEntry()>()"->"r2 = virtualinvoke r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)";
    "r2 = virtualinvoke r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)"->"l2 = l2 + 1L";
    "l2 = l2 + 1L"->"goto [?= $b1 = l2 cmp l0]";
    "goto [?= $b1 = l2 cmp l0]"->"$b1 = l2 cmp l0";
}
