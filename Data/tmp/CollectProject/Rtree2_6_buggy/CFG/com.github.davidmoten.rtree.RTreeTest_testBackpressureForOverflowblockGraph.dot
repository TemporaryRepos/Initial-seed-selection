digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r18 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>();
r25 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r26 = virtualinvoke r25.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r27 = virtualinvoke r26.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r3, $r4);
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r6 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r28 = virtualinvoke r27.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r5, $r6);
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r29 = virtualinvoke r28.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r7, $r8);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r10 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r30 = virtualinvoke r29.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r9, $r10);
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r12 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r31 = virtualinvoke r30.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r11, $r12);
$r13 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
r14 = $r13;
r15 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(12.9, 51.9, 13.1, 52.1);
$r16 = virtualinvoke r31.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r15);
$r17 = new com.github.davidmoten.rtree.RTreeTest$11;
specialinvoke $r17.<com.github.davidmoten.rtree.RTreeTest$11: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicInteger)>(r18, r14);
virtualinvoke $r16.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r17);
$i0 = virtualinvoke r14.<java.util.concurrent.atomic.AtomicInteger: int get()>();
$l1 = (long) $i0;
staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l1);
$r20 = virtualinvoke r31.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r15);
$r21 = virtualinvoke $r20.<rx.Observable: rx.Observable count()>();
$r22 = virtualinvoke $r21.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r23 = virtualinvoke $r22.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r24 = (java.lang.Integer) $r23;
$i2 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();
$l3 = (long) $i2;
staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l3);
return;
"
}
