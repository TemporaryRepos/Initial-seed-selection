digraph "unitGraph" {
    "r11 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r12 = null"
    "r13 = null"
    "r14 = \"target/locked.png\""
    "$r0 = new java.io.File"
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r14)"
    "r1 = $r0"
    "virtualinvoke r1.<java.io.File: boolean createNewFile()>()"
    "$r2 = new java.io.RandomAccessFile"
    "specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r1, \"rw\")"
    "r13 = $r2"
    "$r3 = virtualinvoke r13.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>()"
    "r12 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>()"
    "$r4 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.Visualizer visualize(int,int)>(600, 600)"
    "virtualinvoke $r5.<com.github.davidmoten.rtree.Visualizer: void save(java.lang.String,java.lang.String)>(r14, \"PNG\")"
    "virtualinvoke r12.<java.nio.channels.FileLock: void release()>()"
    "virtualinvoke r13.<java.io.RandomAccessFile: void close()>()"
    "goto [?= return]"
    "$r10 := @caughtexception"
    "r15 = $r10"
    "virtualinvoke r15.<java.io.IOException: void printStackTrace()>()"
    "$r9 := @caughtexception"
    "r8 = $r9"
    "goto [?= throw r8]"
    "$r6 := @caughtexception"
    "r7 = $r6"
    "virtualinvoke r7.<java.io.IOException: void printStackTrace()>()"
    "throw r8"
    "return"
    "r11 := @this: com.github.davidmoten.rtree.RTreeTest"->"r12 = null";
    "r12 = null"->"r13 = null";
    "r13 = null"->"r14 = \"target/locked.png\"";
    "r13 = null"->"$r9 := @caughtexception";
    "r14 = \"target/locked.png\""->"$r0 = new java.io.File";
    "r14 = \"target/locked.png\""->"$r9 := @caughtexception";
    "$r0 = new java.io.File"->"specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r14)";
    "$r0 = new java.io.File"->"$r9 := @caughtexception";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r14)"->"r1 = $r0";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r14)"->"$r9 := @caughtexception";
    "r1 = $r0"->"virtualinvoke r1.<java.io.File: boolean createNewFile()>()";
    "r1 = $r0"->"$r9 := @caughtexception";
    "virtualinvoke r1.<java.io.File: boolean createNewFile()>()"->"$r2 = new java.io.RandomAccessFile";
    "virtualinvoke r1.<java.io.File: boolean createNewFile()>()"->"$r9 := @caughtexception";
    "$r2 = new java.io.RandomAccessFile"->"specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r1, \"rw\")";
    "$r2 = new java.io.RandomAccessFile"->"$r9 := @caughtexception";
    "specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r1, \"rw\")"->"r13 = $r2";
    "specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r1, \"rw\")"->"$r9 := @caughtexception";
    "r13 = $r2"->"$r3 = virtualinvoke r13.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>()";
    "r13 = $r2"->"$r9 := @caughtexception";
    "$r3 = virtualinvoke r13.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>()"->"r12 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>()";
    "$r3 = virtualinvoke r13.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>()"->"$r9 := @caughtexception";
    "r12 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>()"->"$r4 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "r12 = virtualinvoke $r3.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>()"->"$r9 := @caughtexception";
    "$r4 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.Visualizer visualize(int,int)>(600, 600)";
    "$r4 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r9 := @caughtexception";
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.Visualizer visualize(int,int)>(600, 600)"->"virtualinvoke $r5.<com.github.davidmoten.rtree.Visualizer: void save(java.lang.String,java.lang.String)>(r14, \"PNG\")";
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.Visualizer visualize(int,int)>(600, 600)"->"$r9 := @caughtexception";
    "virtualinvoke $r5.<com.github.davidmoten.rtree.Visualizer: void save(java.lang.String,java.lang.String)>(r14, \"PNG\")"->"$r10 := @caughtexception";
    "virtualinvoke $r5.<com.github.davidmoten.rtree.Visualizer: void save(java.lang.String,java.lang.String)>(r14, \"PNG\")"->"$r9 := @caughtexception";
    "virtualinvoke $r5.<com.github.davidmoten.rtree.Visualizer: void save(java.lang.String,java.lang.String)>(r14, \"PNG\")"->"virtualinvoke r12.<java.nio.channels.FileLock: void release()>()";
    "virtualinvoke r12.<java.nio.channels.FileLock: void release()>()"->"virtualinvoke r13.<java.io.RandomAccessFile: void close()>()";
    "virtualinvoke r12.<java.nio.channels.FileLock: void release()>()"->"$r10 := @caughtexception";
    "virtualinvoke r13.<java.io.RandomAccessFile: void close()>()"->"goto [?= return]";
    "virtualinvoke r13.<java.io.RandomAccessFile: void close()>()"->"$r10 := @caughtexception";
    "goto [?= return]"->"return";
    "$r10 := @caughtexception"->"r15 = $r10";
    "r15 = $r10"->"virtualinvoke r15.<java.io.IOException: void printStackTrace()>()";
    "virtualinvoke r15.<java.io.IOException: void printStackTrace()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r9 := @caughtexception"->"r8 = $r9";
    "$r9 := @caughtexception"->"$r9 := @caughtexception";
    "r8 = $r9"->"$r6 := @caughtexception";
    "r8 = $r9"->"$r9 := @caughtexception";
    "r8 = $r9"->"virtualinvoke r12.<java.nio.channels.FileLock: void release()>()";
    "virtualinvoke r12.<java.nio.channels.FileLock: void release()>()"->"virtualinvoke r13.<java.io.RandomAccessFile: void close()>()";
    "virtualinvoke r12.<java.nio.channels.FileLock: void release()>()"->"$r6 := @caughtexception";
    "virtualinvoke r13.<java.io.RandomAccessFile: void close()>()"->"goto [?= throw r8]";
    "virtualinvoke r13.<java.io.RandomAccessFile: void close()>()"->"$r6 := @caughtexception";
    "goto [?= throw r8]"->"throw r8";
    "$r6 := @caughtexception"->"r7 = $r6";
    "r7 = $r6"->"virtualinvoke r7.<java.io.IOException: void printStackTrace()>()";
    "virtualinvoke r7.<java.io.IOException: void printStackTrace()>()"->"throw r8";
}
