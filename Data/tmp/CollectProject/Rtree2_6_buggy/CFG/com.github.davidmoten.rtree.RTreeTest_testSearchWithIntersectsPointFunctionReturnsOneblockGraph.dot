digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r11 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F);
r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2);
$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Circle circle(float,float,float)>(0.0F, 0.0F, 1.0F);
$r5 = <com.github.davidmoten.rtree.geometry.Intersects: rx.functions.Func2 pointIntersectsCircle>;
r6 = virtualinvoke r3.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Geometry,rx.functions.Func2)>($r4, $r5);
$r7 = virtualinvoke r6.<rx.Observable: rx.Observable count()>();
$r8 = virtualinvoke $r7.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r9 = virtualinvoke $r8.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r10 = (java.lang.Integer) $r9;
$i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
$l1 = (long) $i0;
staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);
return;
"
}
