digraph "unitGraph" {
    "r14 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)"
    "$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"
    "r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)"
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Circle circle(float,float,float)>(0.0F, 0.0F, 1.0F)"
    "$r8 = <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func2 distanceCircleToPoint>"
    "r9 = virtualinvoke r6.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Geometry,double,rx.functions.Func2)>($r7, 0.1, $r8)"
    "$r10 = virtualinvoke r9.<rx.Observable: rx.Observable count()>()"
    "$r11 = virtualinvoke $r10.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r12 = virtualinvoke $r11.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r13 = (java.lang.Integer) $r12"
    "$i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"
    "$l1 = (long) $i0"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)"
    "return"
    "r14 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)"->"$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)";
    "$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)";
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"->"r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)";
    "r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)"->"$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Circle circle(float,float,float)>(0.0F, 0.0F, 1.0F)";
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Circle circle(float,float,float)>(0.0F, 0.0F, 1.0F)"->"$r8 = <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func2 distanceCircleToPoint>";
    "$r8 = <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func2 distanceCircleToPoint>"->"r9 = virtualinvoke r6.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Geometry,double,rx.functions.Func2)>($r7, 0.1, $r8)";
    "r9 = virtualinvoke r6.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Geometry,double,rx.functions.Func2)>($r7, 0.1, $r8)"->"$r10 = virtualinvoke r9.<rx.Observable: rx.Observable count()>()";
    "$r10 = virtualinvoke r9.<rx.Observable: rx.Observable count()>()"->"$r11 = virtualinvoke $r10.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r11 = virtualinvoke $r10.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r12 = virtualinvoke $r11.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r12 = virtualinvoke $r11.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r13 = (java.lang.Integer) $r12";
    "$r13 = (java.lang.Integer) $r12"->"$i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"->"$l1 = (long) $i0";
    "$l1 = (long) $i0"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)"->"return";
}
