digraph "unitGraph" {
    "r17 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"
    "$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"
    "$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r8 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r0, 1)"
    "$r9 = interfaceinvoke r0.<com.github.davidmoten.rtree.Entry: com.github.davidmoten.rtree.geometry.Geometry geometry()>()"
    "$r10 = (com.github.davidmoten.rtree.geometry.Rectangle) $r9"
    "$r11 = interfaceinvoke $r10.<com.github.davidmoten.rtree.geometry.Rectangle: com.github.davidmoten.rtree.geometry.Rectangle mbr()>()"
    "$r12 = virtualinvoke $r8.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r11)"
    "$r13 = virtualinvoke $r12.<rx.Observable: rx.Observable count()>()"
    "$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r16 = (java.lang.Integer) $r15"
    "i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"
    "$l1 = (long) i0"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"
    "return"
    "r17 := @this: com.github.davidmoten.rtree.RTreeTest"->"r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)";
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"->"$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()";
    "$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"->"$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r8 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r0, 1)";
    "$r8 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r0, 1)"->"$r9 = interfaceinvoke r0.<com.github.davidmoten.rtree.Entry: com.github.davidmoten.rtree.geometry.Geometry geometry()>()";
    "$r9 = interfaceinvoke r0.<com.github.davidmoten.rtree.Entry: com.github.davidmoten.rtree.geometry.Geometry geometry()>()"->"$r10 = (com.github.davidmoten.rtree.geometry.Rectangle) $r9";
    "$r10 = (com.github.davidmoten.rtree.geometry.Rectangle) $r9"->"$r11 = interfaceinvoke $r10.<com.github.davidmoten.rtree.geometry.Rectangle: com.github.davidmoten.rtree.geometry.Rectangle mbr()>()";
    "$r11 = interfaceinvoke $r10.<com.github.davidmoten.rtree.geometry.Rectangle: com.github.davidmoten.rtree.geometry.Rectangle mbr()>()"->"$r12 = virtualinvoke $r8.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r11)";
    "$r12 = virtualinvoke $r8.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r11)"->"$r13 = virtualinvoke $r12.<rx.Observable: rx.Observable count()>()";
    "$r13 = virtualinvoke $r12.<rx.Observable: rx.Observable count()>()"->"$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r16 = (java.lang.Integer) $r15";
    "$r16 = (java.lang.Integer) $r15"->"i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()";
    "i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"->"$l1 = (long) i0";
    "$l1 = (long) i0"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"->"return";
}
