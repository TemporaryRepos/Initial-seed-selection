digraph "unitGraph" {
    "r34 := @this: com.github.davidmoten.rtree.RTreeTest"
    "s13 = 10000"
    "$l0 = (long) s13"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree createRandomRTree(long)>($l0)"
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "$r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r1)"
    "$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"
    "$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r3)"
    "$r5 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "r35 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>($r5)"
    "$i1 = s13 + 1"
    "$l2 = (long) $i1"
    "$r6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r7 = virtualinvoke $r6.<rx.Observable: rx.Observable count()>()"
    "$r8 = virtualinvoke $r7.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r9 = virtualinvoke $r8.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r10 = (java.lang.Integer) $r9"
    "$i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()"
    "$l4 = (long) $i3"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)"
    "$r11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r12 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "$r13 = virtualinvoke $r11.<rx.Observable: rx.Observable contains(java.lang.Object)>($r12)"
    "$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r16 = (java.lang.Boolean) $r15"
    "$z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>()"
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"
    "$r17 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r18 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"
    "$r19 = virtualinvoke $r17.<rx.Observable: rx.Observable contains(java.lang.Object)>($r18)"
    "$r20 = virtualinvoke $r19.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r21 = virtualinvoke $r20.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r22 = (java.lang.Boolean) $r21"
    "$z1 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>()"
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)"
    "i14 = s13 + 1"
    "$l5 = (long) i14"
    "$i6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()"
    "$l7 = (long) $i6"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)"
    "$r23 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r24 = virtualinvoke $r23.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r25 = virtualinvoke $r24.<rx.observables.BlockingObservable: java.lang.Iterable toIterable()>()"
    "r26 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto $r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r32 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()"
    "r33 = (com.github.davidmoten.rtree.Entry) $r32"
    "r35 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r33)"
    "i14 = i14 + -1"
    "$l10 = (long) i14"
    "$i11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()"
    "$l12 = (long) $i11"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12)"
    "goto [?= $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]"
    "$r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r28 = virtualinvoke $r27.<rx.Observable: rx.Observable count()>()"
    "$r29 = virtualinvoke $r28.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r30 = virtualinvoke $r29.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r31 = (java.lang.Integer) $r30"
    "$i8 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()"
    "$l9 = (long) $i8"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)"
    "$z3 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: boolean isEmpty()>()"
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)"
    "return"
    "r34 := @this: com.github.davidmoten.rtree.RTreeTest"->"s13 = 10000";
    "s13 = 10000"->"$l0 = (long) s13";
    "$l0 = (long) s13"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree createRandomRTree(long)>($l0)";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree createRandomRTree(long)>($l0)"->"$r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"$r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r1)";
    "$r2 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r1)"->"$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)";
    "$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"->"$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r3)";
    "$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r3)"->"$r5 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "$r5 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"r35 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>($r5)";
    "r35 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>($r5)"->"$i1 = s13 + 1";
    "$i1 = s13 + 1"->"$l2 = (long) $i1";
    "$l2 = (long) $i1"->"$r6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r7 = virtualinvoke $r6.<rx.Observable: rx.Observable count()>()";
    "$r7 = virtualinvoke $r6.<rx.Observable: rx.Observable count()>()"->"$r8 = virtualinvoke $r7.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r8 = virtualinvoke $r7.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r9 = virtualinvoke $r8.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r9 = virtualinvoke $r8.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r10 = (java.lang.Integer) $r9";
    "$r10 = (java.lang.Integer) $r9"->"$i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()"->"$l4 = (long) $i3";
    "$l4 = (long) $i3"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)"->"$r11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r12 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "$r12 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"$r13 = virtualinvoke $r11.<rx.Observable: rx.Observable contains(java.lang.Object)>($r12)";
    "$r13 = virtualinvoke $r11.<rx.Observable: rx.Observable contains(java.lang.Object)>($r12)"->"$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r14 = virtualinvoke $r13.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r15 = virtualinvoke $r14.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r16 = (java.lang.Boolean) $r15";
    "$r16 = (java.lang.Boolean) $r15"->"$z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>()";
    "$z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>()"->"staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"->"$r17 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r17 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r18 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)";
    "$r18 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"->"$r19 = virtualinvoke $r17.<rx.Observable: rx.Observable contains(java.lang.Object)>($r18)";
    "$r19 = virtualinvoke $r17.<rx.Observable: rx.Observable contains(java.lang.Object)>($r18)"->"$r20 = virtualinvoke $r19.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r20 = virtualinvoke $r19.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r21 = virtualinvoke $r20.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r21 = virtualinvoke $r20.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r22 = (java.lang.Boolean) $r21";
    "$r22 = (java.lang.Boolean) $r21"->"$z1 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>()";
    "$z1 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>()"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)";
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)"->"i14 = s13 + 1";
    "i14 = s13 + 1"->"$l5 = (long) i14";
    "$l5 = (long) i14"->"$i6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()";
    "$i6 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()"->"$l7 = (long) $i6";
    "$l7 = (long) $i6"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)"->"$r23 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r23 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r24 = virtualinvoke $r23.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r24 = virtualinvoke $r23.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r25 = virtualinvoke $r24.<rx.observables.BlockingObservable: java.lang.Iterable toIterable()>()";
    "$r25 = virtualinvoke $r24.<rx.observables.BlockingObservable: java.lang.Iterable toIterable()>()"->"r26 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>()";
    "r26 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto $r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "if $z2 == 0 goto $r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r32 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto $r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r32 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()"->"r33 = (com.github.davidmoten.rtree.Entry) $r32";
    "r33 = (com.github.davidmoten.rtree.Entry) $r32"->"r35 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r33)";
    "r35 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r33)"->"i14 = i14 + -1";
    "i14 = i14 + -1"->"$l10 = (long) i14";
    "$l10 = (long) i14"->"$i11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()";
    "$i11 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: int size()>()"->"$l12 = (long) $i11";
    "$l12 = (long) $i11"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12)"->"goto [?= $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()";
    "$r27 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r28 = virtualinvoke $r27.<rx.Observable: rx.Observable count()>()";
    "$r28 = virtualinvoke $r27.<rx.Observable: rx.Observable count()>()"->"$r29 = virtualinvoke $r28.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r29 = virtualinvoke $r28.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r30 = virtualinvoke $r29.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r30 = virtualinvoke $r29.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r31 = (java.lang.Integer) $r30";
    "$r31 = (java.lang.Integer) $r30"->"$i8 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()";
    "$i8 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()"->"$l9 = (long) $i8";
    "$l9 = (long) $i8"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)"->"$z3 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: boolean isEmpty()>()";
    "$z3 = virtualinvoke r35.<com.github.davidmoten.rtree.RTree: boolean isEmpty()>()"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)";
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)"->"return";
}
