digraph "unitGraph" {
    "r2 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()"
    "$z0 = virtualinvoke $r1.<com.github.davidmoten.guavamini.Optional: boolean isPresent()>()"
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"
    "return"
    "r2 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()";
    "$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()"->"$z0 = virtualinvoke $r1.<com.github.davidmoten.guavamini.Optional: boolean isPresent()>()";
    "$z0 = virtualinvoke $r1.<com.github.davidmoten.guavamini.Optional: boolean isPresent()>()"->"staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"->"return";
}
