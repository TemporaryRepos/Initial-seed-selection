digraph "unitGraph" {
    "r5 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = <com.github.davidmoten.rtree.geometry.Intersects: rx.functions.Func2 lineIntersectsPoint>"
    "$r1 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Line line(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"
    "$r3 = interfaceinvoke $r0.<rx.functions.Func2: java.lang.Object call(java.lang.Object,java.lang.Object)>($r1, $r2)"
    "$r4 = (java.lang.Boolean) $r3"
    "$z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>()"
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)"
    "return"
    "r5 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = <com.github.davidmoten.rtree.geometry.Intersects: rx.functions.Func2 lineIntersectsPoint>";
    "$r0 = <com.github.davidmoten.rtree.geometry.Intersects: rx.functions.Func2 lineIntersectsPoint>"->"$r1 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Line line(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)";
    "$r1 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Line line(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)"->"$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"->"$r3 = interfaceinvoke $r0.<rx.functions.Func2: java.lang.Object call(java.lang.Object,java.lang.Object)>($r1, $r2)";
    "$r3 = interfaceinvoke $r0.<rx.functions.Func2: java.lang.Object call(java.lang.Object,java.lang.Object)>($r1, $r2)"->"$r4 = (java.lang.Boolean) $r3";
    "$r4 = (java.lang.Boolean) $r3"->"$z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>()";
    "$z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>()"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)"->"return";
}
