digraph "unitGraph" {
    "r10 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = new java.lang.Object"
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"
    "r1 = $r0"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"
    "r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>(r1, $r3)"
    "$r5 = new java.util.concurrent.atomic.AtomicBoolean"
    "specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)"
    "r6 = $r5"
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)"
    "$r8 = virtualinvoke r4.<com.github.davidmoten.rtree.RTree: rx.Observable nearest(com.github.davidmoten.rtree.geometry.Point,double,int)>($r7, 10.0, 10)"
    "$r9 = new com.github.davidmoten.rtree.RTreeTest$2"
    "specialinvoke $r9.<com.github.davidmoten.rtree.RTreeTest$2: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r10, r6)"
    "virtualinvoke $r8.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r9)"
    "$z0 = virtualinvoke r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"
    "return"
    "r10 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = new java.lang.Object";
    "$r0 = new java.lang.Object"->"specialinvoke $r0.<java.lang.Object: void <init>()>()";
    "specialinvoke $r0.<java.lang.Object: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)";
    "$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"->"r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>(r1, $r3)";
    "r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>(r1, $r3)"->"$r5 = new java.util.concurrent.atomic.AtomicBoolean";
    "$r5 = new java.util.concurrent.atomic.AtomicBoolean"->"specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)";
    "specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)"->"r6 = $r5";
    "r6 = $r5"->"$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)";
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(0.0F, 0.0F)"->"$r8 = virtualinvoke r4.<com.github.davidmoten.rtree.RTree: rx.Observable nearest(com.github.davidmoten.rtree.geometry.Point,double,int)>($r7, 10.0, 10)";
    "$r8 = virtualinvoke r4.<com.github.davidmoten.rtree.RTree: rx.Observable nearest(com.github.davidmoten.rtree.geometry.Point,double,int)>($r7, 10.0, 10)"->"$r9 = new com.github.davidmoten.rtree.RTreeTest$2";
    "$r9 = new com.github.davidmoten.rtree.RTreeTest$2"->"specialinvoke $r9.<com.github.davidmoten.rtree.RTreeTest$2: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r10, r6)";
    "specialinvoke $r9.<com.github.davidmoten.rtree.RTreeTest$2: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r10, r6)"->"virtualinvoke $r8.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r9)";
    "virtualinvoke $r8.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r9)"->"$z0 = virtualinvoke r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()";
    "$z0 = virtualinvoke r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"->"staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"->"return";
}
