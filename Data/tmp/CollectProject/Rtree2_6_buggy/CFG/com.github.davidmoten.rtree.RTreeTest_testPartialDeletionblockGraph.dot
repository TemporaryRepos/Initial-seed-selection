digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r15 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4);
r16 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1);
$r2 = virtualinvoke r16.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r17 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r18 = virtualinvoke r17.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r1, 0);
$r3 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r4 = virtualinvoke $r3.<rx.Observable: rx.Observable toList()>();
$r5 = virtualinvoke $r4.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r6 = virtualinvoke $r5.<rx.observables.BlockingObservable: java.lang.Object single()>();
r7 = (java.util.List) $r6;
$r8 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable count()>();
$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r12 = (java.lang.Integer) $r11;
i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();
if i0 != 1 goto $z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);
$r13 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);
$r14 = (com.github.davidmoten.rtree.Entry) $r13;
$z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r15 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4);
r16 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1);
$r2 = virtualinvoke r16.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r17 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r18 = virtualinvoke r17.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r1, 0);
$r3 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r4 = virtualinvoke $r3.<rx.Observable: rx.Observable toList()>();
$r5 = virtualinvoke $r4.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r6 = virtualinvoke $r5.<rx.observables.BlockingObservable: java.lang.Object single()>();
r7 = (java.util.List) $r6;
$r8 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable count()>();
$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r12 = (java.lang.Integer) $r11;
i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();
if i0 != 1 goto $z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r15 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4);
r16 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1);
$r2 = virtualinvoke r16.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r17 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1);
r18 = virtualinvoke r17.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry,boolean)>(r1, 0);
$r3 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r4 = virtualinvoke $r3.<rx.Observable: rx.Observable toList()>();
$r5 = virtualinvoke $r4.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r6 = virtualinvoke $r5.<rx.observables.BlockingObservable: java.lang.Object single()>();
r7 = (java.util.List) $r6;
$r8 = virtualinvoke r18.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable count()>();
$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r12 = (java.lang.Integer) $r11;
i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();
if i0 != 1 goto $z1 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)];
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);
$r13 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);
$r14 = (com.github.davidmoten.rtree.Entry) $r13;
$z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);
$r13 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);
$r14 = (com.github.davidmoten.rtree.Entry) $r13;
$z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);
return;
";
}
