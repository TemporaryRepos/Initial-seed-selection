digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r6 := @this: com.github.davidmoten.rtree.RTreeTest;
r7 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>();
$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2);
r8 = virtualinvoke r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>($r0);
$r1 = virtualinvoke r8.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r2 = virtualinvoke $r1.<rx.Observable: rx.Observable count()>();
$r3 = virtualinvoke $r2.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r4 = virtualinvoke $r3.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r5 = (java.lang.Integer) $r4;
$i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$l1 = (long) $i0;
staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);
return;
"
}
