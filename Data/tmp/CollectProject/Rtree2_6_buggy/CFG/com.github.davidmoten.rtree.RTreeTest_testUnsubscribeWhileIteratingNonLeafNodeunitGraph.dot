digraph "unitGraph" {
    "r14 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = new java.util.concurrent.atomic.AtomicBoolean"
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)"
    "r1 = $r0"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(3)"
    "$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"
    "$r4 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "$r5 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r4)"
    "$r6 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"
    "$r7 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r6)"
    "$r8 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)"
    "$r9 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r8)"
    "$r10 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(4)"
    "r11 = virtualinvoke $r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r10)"
    "$r12 = virtualinvoke r11.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r13 = new com.github.davidmoten.rtree.RTreeTest$6"
    "specialinvoke $r13.<com.github.davidmoten.rtree.RTreeTest$6: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r14, r1)"
    "virtualinvoke $r12.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r13)"
    "$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"
    "return"
    "r14 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = new java.util.concurrent.atomic.AtomicBoolean";
    "$r0 = new java.util.concurrent.atomic.AtomicBoolean"->"specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)";
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)"->"r1 = $r0";
    "r1 = $r0"->"$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(3)";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(3)"->"$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()";
    "$r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"->"$r4 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "$r4 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"$r5 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r4)";
    "$r5 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r4)"->"$r6 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)";
    "$r6 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"->"$r7 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r6)";
    "$r7 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r6)"->"$r8 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)";
    "$r8 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)"->"$r9 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r8)";
    "$r9 = virtualinvoke $r7.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r8)"->"$r10 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(4)";
    "$r10 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(4)"->"r11 = virtualinvoke $r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r10)";
    "r11 = virtualinvoke $r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r10)"->"$r12 = virtualinvoke r11.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r12 = virtualinvoke r11.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r13 = new com.github.davidmoten.rtree.RTreeTest$6";
    "$r13 = new com.github.davidmoten.rtree.RTreeTest$6"->"specialinvoke $r13.<com.github.davidmoten.rtree.RTreeTest$6: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r14, r1)";
    "specialinvoke $r13.<com.github.davidmoten.rtree.RTreeTest$6: void <init>(com.github.davidmoten.rtree.RTreeTest,java.util.concurrent.atomic.AtomicBoolean)>(r14, r1)"->"virtualinvoke $r12.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r13)";
    "virtualinvoke $r12.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r13)"->"$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()";
    "$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"->"staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)"->"return";
}
