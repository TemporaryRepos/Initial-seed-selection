digraph "unitGraph" {
    "r10 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"
    "$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(2.0F, 2.0F)"
    "$r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)"
    "r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()"
    "$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)"
    "$r9 = virtualinvoke r7.<com.github.davidmoten.guavamini.Optional: java.lang.Object get()>()"
    "staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)"
    "return"
    "r10 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 1.0F)"->"$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)";
    "$r3 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(2.0F, 2.0F)";
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(2.0F, 2.0F)"->"$r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)";
    "$r6 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r4, $r5)"->"r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()";
    "r7 = virtualinvoke $r6.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.guavamini.Optional mbr()>()"->"$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)";
    "$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(1.0F, 1.0F, 2.0F, 2.0F)"->"$r9 = virtualinvoke r7.<com.github.davidmoten.guavamini.Optional: java.lang.Object get()>()";
    "$r9 = virtualinvoke r7.<com.github.davidmoten.guavamini.Optional: java.lang.Object get()>()"->"staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)";
    "staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)"->"return";
}
