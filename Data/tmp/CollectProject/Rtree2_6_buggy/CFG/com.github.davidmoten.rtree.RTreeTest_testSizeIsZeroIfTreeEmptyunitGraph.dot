digraph "unitGraph" {
    "r1 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 0)"
    "$i0 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: int size()>()"
    "$l1 = (long) $i0"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"
    "return"
    "r1 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 0)";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 0)"->"$i0 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: int size()>()";
    "$i0 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree: int size()>()"->"$l1 = (long) $i0";
    "$l1 = (long) $i0"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"->"return";
}
