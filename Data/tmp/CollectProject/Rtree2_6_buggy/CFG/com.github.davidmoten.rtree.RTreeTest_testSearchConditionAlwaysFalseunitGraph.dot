digraph "unitGraph" {
    "r7 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 3)"
    "$r1 = staticinvoke <com.github.davidmoten.rx.Functions: rx.functions.Func1 alwaysFalse()>()"
    "$r2 = virtualinvoke r0.<com.github.davidmoten.rtree.RTree: rx.Observable search(rx.functions.Func1)>($r1)"
    "$r3 = virtualinvoke $r2.<rx.Observable: rx.Observable count()>()"
    "$r4 = virtualinvoke $r3.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r5 = virtualinvoke $r4.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r6 = (java.lang.Integer) $r5"
    "$i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()"
    "$l1 = (long) $i0"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"
    "return"
    "r7 := @this: com.github.davidmoten.rtree.RTreeTest"->"r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 3)";
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 3)"->"$r1 = staticinvoke <com.github.davidmoten.rx.Functions: rx.functions.Func1 alwaysFalse()>()";
    "$r1 = staticinvoke <com.github.davidmoten.rx.Functions: rx.functions.Func1 alwaysFalse()>()"->"$r2 = virtualinvoke r0.<com.github.davidmoten.rtree.RTree: rx.Observable search(rx.functions.Func1)>($r1)";
    "$r2 = virtualinvoke r0.<com.github.davidmoten.rtree.RTree: rx.Observable search(rx.functions.Func1)>($r1)"->"$r3 = virtualinvoke $r2.<rx.Observable: rx.Observable count()>()";
    "$r3 = virtualinvoke $r2.<rx.Observable: rx.Observable count()>()"->"$r4 = virtualinvoke $r3.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r4 = virtualinvoke $r3.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r5 = virtualinvoke $r4.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r5 = virtualinvoke $r4.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r6 = (java.lang.Integer) $r5";
    "$r6 = (java.lang.Integer) $r5"->"$i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()"->"$l1 = (long) $i0";
    "$l1 = (long) $i0"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)"->"return";
}
