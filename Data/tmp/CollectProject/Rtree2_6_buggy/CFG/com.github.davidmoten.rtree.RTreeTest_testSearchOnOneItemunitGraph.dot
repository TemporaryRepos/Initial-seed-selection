digraph "unitGraph" {
    "r8 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r9 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "r10 = virtualinvoke r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r1 = newarray (com.github.davidmoten.rtree.Entry)[1]"
    "$r1[0] = r0"
    "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)"
    "$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Rectangle r(int)>(1)"
    "$r4 = virtualinvoke r10.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r3)"
    "$r5 = virtualinvoke $r4.<rx.Observable: rx.Observable toList()>()"
    "$r6 = virtualinvoke $r5.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r7 = virtualinvoke $r6.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r7)"
    "return"
    "r8 := @this: com.github.davidmoten.rtree.RTreeTest"->"r9 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "r9 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"r10 = virtualinvoke r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "r10 = virtualinvoke r9.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r1 = newarray (com.github.davidmoten.rtree.Entry)[1]";
    "$r1 = newarray (com.github.davidmoten.rtree.Entry)[1]"->"$r1[0] = r0";
    "$r1[0] = r0"->"$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)";
    "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)"->"$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Rectangle r(int)>(1)";
    "$r3 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Rectangle r(int)>(1)"->"$r4 = virtualinvoke r10.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r3)";
    "$r4 = virtualinvoke r10.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>($r3)"->"$r5 = virtualinvoke $r4.<rx.Observable: rx.Observable toList()>()";
    "$r5 = virtualinvoke $r4.<rx.Observable: rx.Observable toList()>()"->"$r6 = virtualinvoke $r5.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r6 = virtualinvoke $r5.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r7 = virtualinvoke $r6.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r7 = virtualinvoke $r6.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r7)";
    "staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r7)"->"return";
}
