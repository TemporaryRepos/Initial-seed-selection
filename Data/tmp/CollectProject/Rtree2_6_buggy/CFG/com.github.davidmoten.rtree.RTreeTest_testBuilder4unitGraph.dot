digraph "unitGraph" {
    "r7 := @this: com.github.davidmoten.rtree.RTreeTest"
    "$r0 = new com.github.davidmoten.rtree.SplitterQuadratic"
    "specialinvoke $r0.<com.github.davidmoten.rtree.SplitterQuadratic: void <init>()>()"
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder splitter(com.github.davidmoten.rtree.Splitter)>($r0)"
    "$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"
    "$r3 = new com.github.davidmoten.rtree.SelectorMinimalAreaIncrease"
    "specialinvoke $r3.<com.github.davidmoten.rtree.SelectorMinimalAreaIncrease: void <init>()>()"
    "$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder selector(com.github.davidmoten.rtree.Selector)>($r3)"
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder minChildren(int)>(1)"
    "r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"
    "specialinvoke r7.<com.github.davidmoten.rtree.RTreeTest: void testBuiltTree(com.github.davidmoten.rtree.RTree)>(r6)"
    "return"
    "r7 := @this: com.github.davidmoten.rtree.RTreeTest"->"$r0 = new com.github.davidmoten.rtree.SplitterQuadratic";
    "$r0 = new com.github.davidmoten.rtree.SplitterQuadratic"->"specialinvoke $r0.<com.github.davidmoten.rtree.SplitterQuadratic: void <init>()>()";
    "specialinvoke $r0.<com.github.davidmoten.rtree.SplitterQuadratic: void <init>()>()"->"$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder splitter(com.github.davidmoten.rtree.Splitter)>($r0)";
    "$r1 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder splitter(com.github.davidmoten.rtree.Splitter)>($r0)"->"$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)";
    "$r2 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4)"->"$r3 = new com.github.davidmoten.rtree.SelectorMinimalAreaIncrease";
    "$r3 = new com.github.davidmoten.rtree.SelectorMinimalAreaIncrease"->"specialinvoke $r3.<com.github.davidmoten.rtree.SelectorMinimalAreaIncrease: void <init>()>()";
    "specialinvoke $r3.<com.github.davidmoten.rtree.SelectorMinimalAreaIncrease: void <init>()>()"->"$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder selector(com.github.davidmoten.rtree.Selector)>($r3)";
    "$r4 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder selector(com.github.davidmoten.rtree.Selector)>($r3)"->"$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder minChildren(int)>(1)";
    "$r5 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder minChildren(int)>(1)"->"r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()";
    "r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"->"specialinvoke r7.<com.github.davidmoten.rtree.RTreeTest: void testBuiltTree(com.github.davidmoten.rtree.RTree)>(r6)";
    "specialinvoke r7.<com.github.davidmoten.rtree.RTreeTest: void testBuiltTree(com.github.davidmoten.rtree.RTree)>(r6)"->"return";
}
