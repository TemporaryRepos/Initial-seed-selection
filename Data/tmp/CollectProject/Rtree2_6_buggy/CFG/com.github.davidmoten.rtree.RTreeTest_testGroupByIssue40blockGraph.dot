digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r17 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>();
r28 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r29 = virtualinvoke r28.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r1, $r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r30 = virtualinvoke r29.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r3, $r4);
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r6 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r31 = virtualinvoke r30.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r5, $r6);
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r32 = virtualinvoke r31.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r7, $r8);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r10 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r33 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r9, $r10);
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r12 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(double,double)>(13.0, 52.0);
r34 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r11, $r12);
r13 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(12.9, 51.9, 13.1, 52.1);
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r15 = virtualinvoke r34.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r13);
$r16 = new com.github.davidmoten.rtree.RTreeTest$10;
specialinvoke $r16.<com.github.davidmoten.rtree.RTreeTest$10: void <init>(com.github.davidmoten.rtree.RTreeTest)>(r17);
$r18 = virtualinvoke $r15.<rx.Observable: rx.Observable doOnRequest(rx.functions.Action1)>($r16);
$r19 = new com.github.davidmoten.rtree.RTreeTest$9;
specialinvoke $r19.<com.github.davidmoten.rtree.RTreeTest$9: void <init>(com.github.davidmoten.rtree.RTreeTest)>(r17);
$r20 = virtualinvoke $r18.<rx.Observable: rx.Observable groupBy(rx.functions.Func1)>($r19);
$r21 = new com.github.davidmoten.rtree.RTreeTest$8;
specialinvoke $r21.<com.github.davidmoten.rtree.RTreeTest$8: void <init>(com.github.davidmoten.rtree.RTreeTest)>(r17);
$r22 = virtualinvoke $r20.<rx.Observable: rx.Observable doOnRequest(rx.functions.Action1)>($r21);
$r23 = new com.github.davidmoten.rtree.RTreeTest$7;
specialinvoke $r23.<com.github.davidmoten.rtree.RTreeTest$7: void <init>(com.github.davidmoten.rtree.RTreeTest)>(r17);
$r24 = virtualinvoke $r22.<rx.Observable: rx.Observable flatMap(rx.functions.Func1)>($r23);
$r25 = virtualinvoke $r24.<rx.Observable: rx.Observable count()>();
$r26 = virtualinvoke $r25.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r27 = virtualinvoke $r26.<rx.observables.BlockingObservable: java.lang.Object single()>();
staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r27);
return;
"
}
