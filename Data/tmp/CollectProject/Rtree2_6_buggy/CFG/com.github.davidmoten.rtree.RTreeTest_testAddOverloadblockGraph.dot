digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r7 := @this: com.github.davidmoten.rtree.RTreeTest;
r8 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.RTree create(int,int)>(3, 0);
$r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(123);
$r1 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Point point(float,float)>(1.0F, 2.0F);
r9 = virtualinvoke r8.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r0, $r1);
$r2 = virtualinvoke r9.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r3 = virtualinvoke $r2.<rx.Observable: rx.Observable count()>();
$r4 = virtualinvoke $r3.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r5 = virtualinvoke $r4.<rx.observables.BlockingObservable: java.lang.Object single()>();
$r6 = (java.lang.Integer) $r5;
$i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();
$l1 = (long) $i0;
staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);
return;
"
}
