digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r8 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(5);
$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
$r2 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1);
$r3 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r2);
$r4 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2);
r5 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>($r4);
$r6 = virtualinvoke r5.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>();
$r7 = new com.github.davidmoten.rtree.RTreeTest$5;
specialinvoke $r7.<com.github.davidmoten.rtree.RTreeTest$5: void <init>(com.github.davidmoten.rtree.RTreeTest)>(r8);
virtualinvoke $r6.<rx.Observable: rx.Subscription subscribe(rx.Subscriber)>($r7);
return;
"
}
