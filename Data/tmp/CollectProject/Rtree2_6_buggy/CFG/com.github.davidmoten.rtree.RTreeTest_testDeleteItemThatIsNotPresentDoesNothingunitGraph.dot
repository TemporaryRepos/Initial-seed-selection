digraph "unitGraph" {
    "r5 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r4 = virtualinvoke r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r1)"
    "if r3 != $r4 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]"
    "$z0 = 0"
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)"
    "return"
    "r5 := @this: com.github.davidmoten.rtree.RTreeTest"->"r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)";
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"->"$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "r3 = virtualinvoke $r2.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r4 = virtualinvoke r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r1)";
    "$r4 = virtualinvoke r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(com.github.davidmoten.rtree.Entry)>(r1)"->"if r3 != $r4 goto $z0 = 0";
    "if r3 != $r4 goto $z0 = 0"->"$z0 = 1";
    "if r3 != $r4 goto $z0 = 0"->"$z0 = 0";
    "$z0 = 1"->"goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]";
    "goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)";
    "$z0 = 0"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)";
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)"->"return";
}
