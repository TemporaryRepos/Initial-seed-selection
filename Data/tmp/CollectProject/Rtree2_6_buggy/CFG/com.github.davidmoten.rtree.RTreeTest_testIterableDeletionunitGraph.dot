digraph "unitGraph" {
    "r13 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r14 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"
    "r2 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)"
    "$r3 = virtualinvoke r14.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"
    "$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)"
    "r15 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r2)"
    "$r5 = new java.util.ArrayList"
    "specialinvoke $r5.<java.util.ArrayList: void <init>()>()"
    "r6 = $r5"
    "interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r0)"
    "interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)"
    "r7 = virtualinvoke r15.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(java.lang.Iterable)>(r6)"
    "$r8 = virtualinvoke r7.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"
    "$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable toList()>()"
    "$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "r12 = (java.util.List) $r11"
    "$z2 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r1)"
    "if $z2 == 0 goto $z5 = 0"
    "$z3 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r0)"
    "if $z3 != 0 goto $z5 = 0"
    "$z4 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r2)"
    "if $z4 != 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]"
    "$z5 = 0"
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)"
    "return"
    "r13 := @this: com.github.davidmoten.rtree.RTreeTest"->"r14 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "r14 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)";
    "r0 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(1)"->"r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)";
    "r1 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(2)"->"r2 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)";
    "r2 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.Entry e(int)>(3)"->"$r3 = virtualinvoke r14.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)";
    "$r3 = virtualinvoke r14.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r0)"->"$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)";
    "$r4 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r1)"->"r15 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r2)";
    "r15 = virtualinvoke $r4.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(com.github.davidmoten.rtree.Entry)>(r2)"->"$r5 = new java.util.ArrayList";
    "$r5 = new java.util.ArrayList"->"specialinvoke $r5.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r5.<java.util.ArrayList: void <init>()>()"->"r6 = $r5";
    "r6 = $r5"->"interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r0)";
    "interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r0)"->"interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)";
    "interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)"->"r7 = virtualinvoke r15.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(java.lang.Iterable)>(r6)";
    "r7 = virtualinvoke r15.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree delete(java.lang.Iterable)>(r6)"->"$r8 = virtualinvoke r7.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()";
    "$r8 = virtualinvoke r7.<com.github.davidmoten.rtree.RTree: rx.Observable entries()>()"->"$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable toList()>()";
    "$r9 = virtualinvoke $r8.<rx.Observable: rx.Observable toList()>()"->"$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r10 = virtualinvoke $r9.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r11 = virtualinvoke $r10.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"r12 = (java.util.List) $r11";
    "r12 = (java.util.List) $r11"->"$z2 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r1)";
    "$z2 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r1)"->"if $z2 == 0 goto $z5 = 0";
    "if $z2 == 0 goto $z5 = 0"->"$z3 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r0)";
    "if $z2 == 0 goto $z5 = 0"->"$z5 = 0";
    "$z3 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r0)"->"if $z3 != 0 goto $z5 = 0";
    "if $z3 != 0 goto $z5 = 0"->"$z4 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r2)";
    "if $z3 != 0 goto $z5 = 0"->"$z5 = 0";
    "$z4 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r2)"->"if $z4 != 0 goto $z5 = 0";
    "if $z4 != 0 goto $z5 = 0"->"$z5 = 1";
    "if $z4 != 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]";
    "goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)";
    "$z5 = 0"->"staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)";
    "staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)"->"return";
}
