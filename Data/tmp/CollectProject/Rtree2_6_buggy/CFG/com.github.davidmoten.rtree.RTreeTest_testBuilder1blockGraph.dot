digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r7 := @this: com.github.davidmoten.rtree.RTreeTest;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder minChildren(int)>(1);
$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(4);
$r2 = new com.github.davidmoten.rtree.SelectorMinimalAreaIncrease;
specialinvoke $r2.<com.github.davidmoten.rtree.SelectorMinimalAreaIncrease: void <init>()>();
$r3 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder selector(com.github.davidmoten.rtree.Selector)>($r2);
$r4 = new com.github.davidmoten.rtree.SplitterQuadratic;
specialinvoke $r4.<com.github.davidmoten.rtree.SplitterQuadratic: void <init>()>();
$r5 = virtualinvoke $r3.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder splitter(com.github.davidmoten.rtree.Splitter)>($r4);
r6 = virtualinvoke $r5.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
specialinvoke r7.<com.github.davidmoten.rtree.RTreeTest: void testBuiltTree(com.github.davidmoten.rtree.RTree)>(r6);
return;
"
}
