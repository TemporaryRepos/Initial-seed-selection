digraph "unitGraph" {
    "r31 := @this: com.github.davidmoten.rtree.RTreeTest"
    "r32 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>()"
    "r33 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"
    "$r1 = newarray (com.github.davidmoten.rtree.geometry.Rectangle)[7]"
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F)"
    "$r1[0] = $r2"
    "$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 100.0F, 100.0F)"
    "$r1[1] = $r3"
    "$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 10.0F, 10.0F)"
    "$r1[2] = $r4"
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(0.12, 0.25, 50.356, 50.756)"
    "$r1[3] = $r5"
    "$r6 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(1.0, 0.252, 50.0, 69.23)"
    "$r1[4] = $r6"
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(13.12, 23.123, 50.45, 80.9)"
    "$r1[5] = $r7"
    "$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(10.0F, 10.0F, 50.0F, 50.0F)"
    "$r1[6] = $r8"
    "r9 = $r1"
    "i4 = 1"
    "if i4 > 10000 goto r35 = r9"
    "r34 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Point nextPoint()>()"
    "$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "r32 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r29, r34)"
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "r33 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r30, r34)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "r35 = r9"
    "i5 = lengthof r35"
    "i6 = 0"
    "if i6 >= i5 goto return"
    "r10 = r35[i6]"
    "$r11 = new java.util.HashSet"
    "$r12 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)"
    "$r13 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()"
    "$r14 = virtualinvoke $r12.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r13)"
    "$r15 = virtualinvoke $r14.<rx.Observable: rx.Observable toList()>()"
    "$r16 = virtualinvoke $r15.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r17 = virtualinvoke $r16.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r18 = (java.util.Collection) $r17"
    "specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r18)"
    "r19 = $r11"
    "$r20 = new java.util.HashSet"
    "$r21 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)"
    "$r22 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()"
    "$r23 = virtualinvoke $r21.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r22)"
    "$r24 = virtualinvoke $r23.<rx.Observable: rx.Observable toList()>()"
    "$r25 = virtualinvoke $r24.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"
    "$r26 = virtualinvoke $r25.<rx.observables.BlockingObservable: java.lang.Object single()>()"
    "$r27 = (java.util.Collection) $r26"
    "specialinvoke $r20.<java.util.HashSet: void <init>(java.util.Collection)>($r27)"
    "r28 = $r20"
    "$i0 = interfaceinvoke r19.<java.util.Set: int size()>()"
    "$l1 = (long) $i0"
    "$i2 = interfaceinvoke r28.<java.util.Set: int size()>()"
    "$l3 = (long) $i2"
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)"
    "i6 = i6 + 1"
    "return"
    "r31 := @this: com.github.davidmoten.rtree.RTreeTest"->"r32 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()";
    "r32 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree create()>()"->"$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>()";
    "$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>()"->"r33 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()";
    "r33 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>()"->"$r1 = newarray (com.github.davidmoten.rtree.geometry.Rectangle)[7]";
    "$r1 = newarray (com.github.davidmoten.rtree.geometry.Rectangle)[7]"->"$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F)";
    "$r2 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F)"->"$r1[0] = $r2";
    "$r1[0] = $r2"->"$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 100.0F, 100.0F)";
    "$r3 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 100.0F, 100.0F)"->"$r1[1] = $r3";
    "$r1[1] = $r3"->"$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 10.0F, 10.0F)";
    "$r4 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(0.0F, 0.0F, 10.0F, 10.0F)"->"$r1[2] = $r4";
    "$r1[2] = $r4"->"$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(0.12, 0.25, 50.356, 50.756)";
    "$r5 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(0.12, 0.25, 50.356, 50.756)"->"$r1[3] = $r5";
    "$r1[3] = $r5"->"$r6 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(1.0, 0.252, 50.0, 69.23)";
    "$r6 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(1.0, 0.252, 50.0, 69.23)"->"$r1[4] = $r6";
    "$r1[4] = $r6"->"$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(13.12, 23.123, 50.45, 80.9)";
    "$r7 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(double,double,double,double)>(13.12, 23.123, 50.45, 80.9)"->"$r1[5] = $r7";
    "$r1[5] = $r7"->"$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(10.0F, 10.0F, 50.0F, 50.0F)";
    "$r8 = staticinvoke <com.github.davidmoten.rtree.geometry.Geometries: com.github.davidmoten.rtree.geometry.Rectangle rectangle(float,float,float,float)>(10.0F, 10.0F, 50.0F, 50.0F)"->"$r1[6] = $r8";
    "$r1[6] = $r8"->"r9 = $r1";
    "r9 = $r1"->"i4 = 1";
    "i4 = 1"->"if i4 > 10000 goto r35 = r9";
    "if i4 > 10000 goto r35 = r9"->"r34 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Point nextPoint()>()";
    "if i4 > 10000 goto r35 = r9"->"r35 = r9";
    "r34 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: com.github.davidmoten.rtree.geometry.Point nextPoint()>()"->"$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"r32 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r29, r34)";
    "r32 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r29, r34)"->"$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"r33 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r30, r34)";
    "r33 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree add(java.lang.Object,com.github.davidmoten.rtree.geometry.Geometry)>($r30, r34)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 > 10000 goto r35 = r9";
    "r35 = r9"->"i5 = lengthof r35";
    "i5 = lengthof r35"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto return";
    "if i6 >= i5 goto return"->"r10 = r35[i6]";
    "if i6 >= i5 goto return"->"return";
    "r10 = r35[i6]"->"$r11 = new java.util.HashSet";
    "$r11 = new java.util.HashSet"->"$r12 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)";
    "$r12 = virtualinvoke r32.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)"->"$r13 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()";
    "$r13 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()"->"$r14 = virtualinvoke $r12.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r13)";
    "$r14 = virtualinvoke $r12.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r13)"->"$r15 = virtualinvoke $r14.<rx.Observable: rx.Observable toList()>()";
    "$r15 = virtualinvoke $r14.<rx.Observable: rx.Observable toList()>()"->"$r16 = virtualinvoke $r15.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r16 = virtualinvoke $r15.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r17 = virtualinvoke $r16.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r17 = virtualinvoke $r16.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r18 = (java.util.Collection) $r17";
    "$r18 = (java.util.Collection) $r17"->"specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r18)";
    "specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r18)"->"r19 = $r11";
    "r19 = $r11"->"$r20 = new java.util.HashSet";
    "$r20 = new java.util.HashSet"->"$r21 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)";
    "$r21 = virtualinvoke r33.<com.github.davidmoten.rtree.RTree: rx.Observable search(com.github.davidmoten.rtree.geometry.Rectangle)>(r10)"->"$r22 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()";
    "$r22 = staticinvoke <com.github.davidmoten.rtree.RTreeTest: rx.functions.Func1 toValue()>()"->"$r23 = virtualinvoke $r21.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r22)";
    "$r23 = virtualinvoke $r21.<rx.Observable: rx.Observable map(rx.functions.Func1)>($r22)"->"$r24 = virtualinvoke $r23.<rx.Observable: rx.Observable toList()>()";
    "$r24 = virtualinvoke $r23.<rx.Observable: rx.Observable toList()>()"->"$r25 = virtualinvoke $r24.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()";
    "$r25 = virtualinvoke $r24.<rx.Observable: rx.observables.BlockingObservable toBlocking()>()"->"$r26 = virtualinvoke $r25.<rx.observables.BlockingObservable: java.lang.Object single()>()";
    "$r26 = virtualinvoke $r25.<rx.observables.BlockingObservable: java.lang.Object single()>()"->"$r27 = (java.util.Collection) $r26";
    "$r27 = (java.util.Collection) $r26"->"specialinvoke $r20.<java.util.HashSet: void <init>(java.util.Collection)>($r27)";
    "specialinvoke $r20.<java.util.HashSet: void <init>(java.util.Collection)>($r27)"->"r28 = $r20";
    "r28 = $r20"->"$i0 = interfaceinvoke r19.<java.util.Set: int size()>()";
    "$i0 = interfaceinvoke r19.<java.util.Set: int size()>()"->"$l1 = (long) $i0";
    "$l1 = (long) $i0"->"$i2 = interfaceinvoke r28.<java.util.Set: int size()>()";
    "$i2 = interfaceinvoke r28.<java.util.Set: int size()>()"->"$l3 = (long) $i2";
    "$l3 = (long) $i2"->"staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)";
    "staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto return";
}
