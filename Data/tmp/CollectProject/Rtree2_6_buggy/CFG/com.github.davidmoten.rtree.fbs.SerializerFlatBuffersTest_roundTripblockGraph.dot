digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r13 := @this: com.github.davidmoten.rtree.fbs.SerializerFlatBuffersTest;
r12 := @parameter0: com.github.davidmoten.rtree.InternalStructure;
z0 := @parameter1: boolean;
$r0 = staticinvoke <com.github.davidmoten.rtree.RTree: com.github.davidmoten.rtree.RTree$Builder star()>();
$r1 = virtualinvoke $r0.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree$Builder maxChildren(int)>(10);
r14 = virtualinvoke $r1.<com.github.davidmoten.rtree.RTree$Builder: com.github.davidmoten.rtree.RTree create()>();
$r2 = staticinvoke <com.github.davidmoten.rtree.GreekEarthquakes: rx.Observable entries()>();
$r3 = virtualinvoke r14.<com.github.davidmoten.rtree.RTree: rx.Observable add(rx.Observable)>($r2);
$r4 = virtualinvoke $r3.<rx.Observable: rx.Observable last()>();
$r5 = virtualinvoke $r4.<rx.Observable: rx.observables.BlockingObservable toBlocking()>();
$r6 = virtualinvoke $r5.<rx.observables.BlockingObservable: java.lang.Object single()>();
r15 = (com.github.davidmoten.rtree.RTree) $r6;
l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$r7 = new java.io.File;
specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(\"target/file\");
r8 = $r7;
$r9 = new java.io.FileOutputStream;
specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>(r8);
r10 = $r9;
r11 = staticinvoke <com.github.davidmoten.rtree.fbs.SerializerFlatBuffersTest: com.github.davidmoten.rtree.Serializer createSerializer()>();
staticinvoke <com.github.davidmoten.rtree.fbs.SerializerFlatBuffersTest: void serialize(com.github.davidmoten.rtree.RTree,long,java.io.File,java.io.FileOutputStream,com.github.davidmoten.rtree.Serializer)>(r15, l0, r8, r10, r11);
staticinvoke <com.github.davidmoten.rtree.fbs.SerializerFlatBuffersTest: void deserialize(com.github.davidmoten.rtree.InternalStructure,java.io.File,com.github.davidmoten.rtree.Serializer,boolean)>(r12, r8, r11, z0);
return;
"
}
