digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r38 := @parameter0: java.lang.String[];
r0 = staticinvoke <com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$lambda_main_0__72: com.flink.tutorials.java.chapter2_basics.lambda.AddInterface bootstrap$()>();
r1 = staticinvoke <com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$lambda_main_1__73: com.flink.tutorials.java.chapter2_basics.lambda.AddInterface bootstrap$()>();
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r4 = interfaceinvoke r0.<com.flink.tutorials.java.chapter2_basics.lambda.AddInterface: java.lang.Object add(java.lang.Object,java.lang.Object)>($r2, $r3);
$r5 = (java.lang.Integer) $r4;
i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lambda int add = \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.1);
$r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.2);
$r13 = interfaceinvoke r1.<com.flink.tutorials.java.chapter2_basics.lambda.AddInterface: java.lang.Object add(java.lang.Object,java.lang.Object)>($r11, $r12);
$r14 = (java.lang.Double) $r13;
d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lambda double  add = \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r20 = new com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$MyAdd;
specialinvoke $r20.<com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$MyAdd: void <init>()>();
$r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.1);
$r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.2);
$r23 = virtualinvoke $r20.<com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$MyAdd: java.lang.Double add(java.lang.Double,java.lang.Double)>($r21, $r22);
d1 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Class implementation add = \");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);
$r29 = new com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$1;
specialinvoke $r29.<com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$1: void <init>()>();
$r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
$r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);
$r32 = virtualinvoke $r29.<com.flink.tutorials.java.chapter2_basics.lambda.FunctionalInterfaceExample$1: java.lang.Double add(java.lang.Double,java.lang.Double)>($r30, $r31);
d2 = virtualinvoke $r32.<java.lang.Double: double doubleValue()>();
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Anonymous function add = \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
return;
"
}
