digraph "unitGraph" {
    "r12 := @this: manual.Issue29Repro"
    "$r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"
    "$r0 = <manual.Issue29Repro: java.lang.String xml>"
    "r15 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r0)"
    "$r2 = <manual.Issue29Repro: com.fasterxml.aalto.AsyncXMLInputFactory inputFactory>"
    "r3 = virtualinvoke $r2.<com.fasterxml.aalto.AsyncXMLInputFactory: com.fasterxml.aalto.AsyncXMLStreamReader createAsyncForByteBuffer()>()"
    "$r4 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: com.fasterxml.aalto.AsyncInputFeeder getInputFeeder()>()"
    "$r5 = (com.fasterxml.aalto.AsyncByteBufferFeeder) $r4"
    "interfaceinvoke $r5.<com.fasterxml.aalto.AsyncByteBufferFeeder: void feedInput(java.nio.ByteBuffer)>(r15)"
    "$z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()"
    "if $z0 == 0 goto (branch)"
    "i0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: int next()>()"
    "if i0 != 257 goto $r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"
    "goto [?= (branch)]"
    "$r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"
    "interfaceinvoke $r6.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r3)"
    "goto [?= $z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()]"
    "goto [?= return]"
    "$r8 := @caughtexception"
    "r16 = $r8"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error in \")"
    "$i1 = r12.<manual.Issue29Repro: int count>"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "virtualinvoke r16.<java.lang.Exception: void printStackTrace()>()"
    "return"
    "r12 := @this: manual.Issue29Repro"->"$r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>";
    "r12 := @this: manual.Issue29Repro"->"$r8 := @caughtexception";
    "$r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"->"$r0 = <manual.Issue29Repro: java.lang.String xml>";
    "$r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"->"$r8 := @caughtexception";
    "$r0 = <manual.Issue29Repro: java.lang.String xml>"->"r15 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r0)";
    "$r0 = <manual.Issue29Repro: java.lang.String xml>"->"$r8 := @caughtexception";
    "r15 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r0)"->"$r2 = <manual.Issue29Repro: com.fasterxml.aalto.AsyncXMLInputFactory inputFactory>";
    "r15 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r0)"->"$r8 := @caughtexception";
    "$r2 = <manual.Issue29Repro: com.fasterxml.aalto.AsyncXMLInputFactory inputFactory>"->"r3 = virtualinvoke $r2.<com.fasterxml.aalto.AsyncXMLInputFactory: com.fasterxml.aalto.AsyncXMLStreamReader createAsyncForByteBuffer()>()";
    "$r2 = <manual.Issue29Repro: com.fasterxml.aalto.AsyncXMLInputFactory inputFactory>"->"$r8 := @caughtexception";
    "r3 = virtualinvoke $r2.<com.fasterxml.aalto.AsyncXMLInputFactory: com.fasterxml.aalto.AsyncXMLStreamReader createAsyncForByteBuffer()>()"->"$r4 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: com.fasterxml.aalto.AsyncInputFeeder getInputFeeder()>()";
    "r3 = virtualinvoke $r2.<com.fasterxml.aalto.AsyncXMLInputFactory: com.fasterxml.aalto.AsyncXMLStreamReader createAsyncForByteBuffer()>()"->"$r8 := @caughtexception";
    "$r4 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: com.fasterxml.aalto.AsyncInputFeeder getInputFeeder()>()"->"$r5 = (com.fasterxml.aalto.AsyncByteBufferFeeder) $r4";
    "$r4 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: com.fasterxml.aalto.AsyncInputFeeder getInputFeeder()>()"->"$r8 := @caughtexception";
    "$r5 = (com.fasterxml.aalto.AsyncByteBufferFeeder) $r4"->"interfaceinvoke $r5.<com.fasterxml.aalto.AsyncByteBufferFeeder: void feedInput(java.nio.ByteBuffer)>(r15)";
    "$r5 = (com.fasterxml.aalto.AsyncByteBufferFeeder) $r4"->"$r8 := @caughtexception";
    "interfaceinvoke $r5.<com.fasterxml.aalto.AsyncByteBufferFeeder: void feedInput(java.nio.ByteBuffer)>(r15)"->"$z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()";
    "interfaceinvoke $r5.<com.fasterxml.aalto.AsyncByteBufferFeeder: void feedInput(java.nio.ByteBuffer)>(r15)"->"$r8 := @caughtexception";
    "$z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()"->"if $z0 == 0 goto (branch)";
    "$z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()"->"$r8 := @caughtexception";
    "if $z0 == 0 goto (branch)"->"i0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: int next()>()";
    "if $z0 == 0 goto (branch)"->"goto [?= return]";
    "if $z0 == 0 goto (branch)"->"$r8 := @caughtexception";
    "i0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: int next()>()"->"if i0 != 257 goto $r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>";
    "i0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: int next()>()"->"$r8 := @caughtexception";
    "if i0 != 257 goto $r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"->"goto [?= (branch)]";
    "if i0 != 257 goto $r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"->"$r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>";
    "if i0 != 257 goto $r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"->"$r8 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r8 := @caughtexception";
    "$r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"->"interfaceinvoke $r6.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r3)";
    "$r6 = <manual.Issue29Repro: javax.xml.stream.util.XMLEventAllocator allocator>"->"$r8 := @caughtexception";
    "interfaceinvoke $r6.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r3)"->"goto [?= $z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()]";
    "interfaceinvoke $r6.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r3)"->"$r8 := @caughtexception";
    "goto [?= $z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()]"->"$z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r3.<com.fasterxml.aalto.AsyncXMLStreamReader: boolean hasNext()>()]"->"$r8 := @caughtexception";
    "goto [?= return]"->"return";
    "$r8 := @caughtexception"->"r16 = $r8";
    "r16 = $r8"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error in \")";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error in \")"->"$i1 = r12.<manual.Issue29Repro: int count>";
    "$i1 = r12.<manual.Issue29Repro: int count>"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"virtualinvoke r16.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r16.<java.lang.Exception: void printStackTrace()>()"->"return";
}
