digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @this: test.TestBase64Reader;
$r0 = class \"Lcom/fasterxml/aalto/stax/InputFactoryImpl;\";
$r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();
staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"javax.xml.stream.XMLInputFactory\", $r1);
r3 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();
r4 = \"<root>TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\nIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg\ndGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu\ndWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo\nZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=\r\nTWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\nIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg\ndGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu\ndWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo\nZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=</root>\";
b0 = 19;
r5 = newarray (byte)[19];
$r6 = new java.io.StringReader;
specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>(r4);
$r7 = virtualinvoke r3.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($r6);
r8 = (org.codehaus.stax2.typed.TypedXMLStreamReader) $r7;
interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int next()>();
i6 = 0;
"
    "Block 1:
[preds: 0 6 ] [succs: 2 3 ]
$i2 = lengthof r5;
$r9 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>;
i3 = interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, 0, $i2, $r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result(\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"): \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r17);
if i3 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 7 ]
goto [?= $r22 = <java.lang.System: java.io.PrintStream out>];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void print(char)>(34);
i7 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i7 >= i3 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$b4 = r5[i7];
$c5 = (char) $b4;
virtualinvoke $r21.<java.io.PrintStream: void print(char)>($c5);
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 1 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void print(char)>(34);
i6 = i6 + i3;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println()>();
goto [?= $i2 = lengthof r5];
"
    "Block 7:
[preds: 2 ] [succs: ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"DONE!\");
interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @this: test.TestBase64Reader;
$r0 = class \"Lcom/fasterxml/aalto/stax/InputFactoryImpl;\";
$r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();
staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(\"javax.xml.stream.XMLInputFactory\", $r1);
r3 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();
r4 = \"<root>TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\nIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg\ndGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu\ndWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo\nZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=\r\nTWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\nIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg\ndGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu\ndWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo\nZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=</root>\";
b0 = 19;
r5 = newarray (byte)[19];
$r6 = new java.io.StringReader;
specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>(r4);
$r7 = virtualinvoke r3.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($r6);
r8 = (org.codehaus.stax2.typed.TypedXMLStreamReader) $r7;
interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int next()>();
i6 = 0;
"->"Block 1:
[preds: 0 6 ] [succs: 2 3 ]
$i2 = lengthof r5;
$r9 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>;
i3 = interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, 0, $i2, $r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result(\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"): \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r17);
if i3 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 3 ]
$i2 = lengthof r5;
$r9 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>;
i3 = interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, 0, $i2, $r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result(\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"): \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r17);
if i3 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 7 ]
goto [?= $r22 = <java.lang.System: java.io.PrintStream out>];
";
    "Block 1:
[preds: 0 6 ] [succs: 2 3 ]
$i2 = lengthof r5;
$r9 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>;
i3 = interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, 0, $i2, $r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result(\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"): \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r17);
if i3 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void print(char)>(34);
i7 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 7 ]
goto [?= $r22 = <java.lang.System: java.io.PrintStream out>];
"->"Block 7:
[preds: 2 ] [succs: ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"DONE!\");
interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: void close()>();
return;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void print(char)>(34);
i7 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i7 >= i3 goto $r19 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i7 >= i3 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$b4 = r5[i7];
$c5 = (char) $b4;
virtualinvoke $r21.<java.io.PrintStream: void print(char)>($c5);
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i7 >= i3 goto $r19 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 ] [succs: 1 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void print(char)>(34);
i6 = i6 + i3;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println()>();
goto [?= $i2 = lengthof r5];
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r21 = <java.lang.System: java.io.PrintStream out>;
$b4 = r5[i7];
$c5 = (char) $b4;
virtualinvoke $r21.<java.io.PrintStream: void print(char)>($c5);
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i7 >= i3 goto $r19 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 4 ] [succs: 1 ]
$r19 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r19.<java.io.PrintStream: void print(char)>(34);
i6 = i6 + i3;
$r20 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r20.<java.io.PrintStream: void println()>();
goto [?= $i2 = lengthof r5];
"->"Block 1:
[preds: 0 6 ] [succs: 2 3 ]
$i2 = lengthof r5;
$r9 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>;
i3 = interfaceinvoke r8.<org.codehaus.stax2.typed.TypedXMLStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, 0, $i2, $r9);
$r11 = <java.lang.System: java.io.PrintStream out>;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Result(\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"): \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r17);
if i3 >= 0 goto $r18 = <java.lang.System: java.io.PrintStream out>;
";
}
