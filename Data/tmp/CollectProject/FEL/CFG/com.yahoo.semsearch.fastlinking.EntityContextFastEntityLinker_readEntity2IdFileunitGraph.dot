digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String"
    "$r0 = new java.util.HashMap"
    "specialinvoke $r0.<java.util.HashMap: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.io.BufferedReader"
    "$r3 = new java.io.FileReader"
    "specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)"
    "specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)"
    "r5 = $r2"
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"
    "r7 = $r6"
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"
    "$r9 = r8[2]"
    "r18 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\" \", \"_\")"
    "$r10 = r8[3]"
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r10)"
    "goto [?= (branch)]"
    "$r12 := @caughtexception"
    "r19 = $r12"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "return r1"
    "r4 := @parameter0: java.lang.String"->"$r0 = new java.util.HashMap";
    "$r0 = new java.util.HashMap"->"specialinvoke $r0.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r0.<java.util.HashMap: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.io.BufferedReader";
    "$r2 = new java.io.BufferedReader"->"$r3 = new java.io.FileReader";
    "$r3 = new java.io.FileReader"->"specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)";
    "specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)"->"specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)";
    "specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)"->"r5 = $r2";
    "r5 = $r2"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"->"r7 = $r6";
    "r7 = $r6"->"if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"->"$r9 = r8[2]";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"->"$r12 := @caughtexception";
    "$r9 = r8[2]"->"r18 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\" \", \"_\")";
    "$r9 = r8[2]"->"$r12 := @caughtexception";
    "r18 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\" \", \"_\")"->"$r10 = r8[3]";
    "r18 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\" \", \"_\")"->"$r12 := @caughtexception";
    "$r10 = r8[3]"->"virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r10)";
    "$r10 = r8[3]"->"$r12 := @caughtexception";
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r10)"->"goto [?= (branch)]";
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r10)"->"$r12 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "$r12 := @caughtexception"->"r19 = $r12";
    "r19 = $r12"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"return r1";
}
