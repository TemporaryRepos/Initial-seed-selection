digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String"
    "$r0 = new java.util.HashMap"
    "specialinvoke $r0.<java.util.HashMap: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.io.BufferedReader"
    "$r3 = new java.io.FileReader"
    "specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)"
    "specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)"
    "r5 = $r2"
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"
    "r7 = $r6"
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"
    "$r9 = new java.lang.Short"
    "$r10 = r8[1]"
    "specialinvoke $r9.<java.lang.Short: void <init>(java.lang.String)>($r10)"
    "$r11 = r8[0]"
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11)"
    "goto [?= (branch)]"
    "$r13 := @caughtexception"
    "r14 = $r13"
    "$r16 = <java.lang.System: java.io.PrintStream out>"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)"
    "virtualinvoke r14.<java.lang.NumberFormatException: void printStackTrace()>()"
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "return r1"
    "r4 := @parameter0: java.lang.String"->"$r0 = new java.util.HashMap";
    "$r0 = new java.util.HashMap"->"specialinvoke $r0.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r0.<java.util.HashMap: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.io.BufferedReader";
    "$r2 = new java.io.BufferedReader"->"$r3 = new java.io.FileReader";
    "$r3 = new java.io.FileReader"->"specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)";
    "specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>(r4)"->"specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)";
    "specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3)"->"r5 = $r2";
    "r5 = $r2"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"->"r7 = $r6";
    "r7 = $r6"->"if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"->"$r9 = new java.lang.Short";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\")"->"$r13 := @caughtexception";
    "$r9 = new java.lang.Short"->"$r10 = r8[1]";
    "$r9 = new java.lang.Short"->"$r13 := @caughtexception";
    "$r10 = r8[1]"->"specialinvoke $r9.<java.lang.Short: void <init>(java.lang.String)>($r10)";
    "$r10 = r8[1]"->"$r13 := @caughtexception";
    "specialinvoke $r9.<java.lang.Short: void <init>(java.lang.String)>($r10)"->"$r11 = r8[0]";
    "specialinvoke $r9.<java.lang.Short: void <init>(java.lang.String)>($r10)"->"$r13 := @caughtexception";
    "$r11 = r8[0]"->"virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11)";
    "$r11 = r8[0]"->"$r13 := @caughtexception";
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11)"->"goto [?= (branch)]";
    "virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11)"->"$r13 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "$r13 := @caughtexception"->"r14 = $r13";
    "r14 = $r13"->"$r16 = <java.lang.System: java.io.PrintStream out>";
    "$r16 = <java.lang.System: java.io.PrintStream out>"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong line: \")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19)"->"virtualinvoke r14.<java.lang.NumberFormatException: void printStackTrace()>()";
    "virtualinvoke r14.<java.lang.NumberFormatException: void printStackTrace()>()"->"goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"return r1";
}
