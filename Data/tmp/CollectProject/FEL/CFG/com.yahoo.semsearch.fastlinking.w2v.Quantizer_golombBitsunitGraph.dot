digraph "unitGraph" {
    "r3 := @this: com.yahoo.semsearch.fastlinking.w2v.Quantizer"
    "r0 := @parameter0: float[]"
    "$i0 = lengthof r0"
    "r1 = newarray (double)[$i0]"
    "f9 = 0.0F"
    "i8 = 0"
    "$i1 = lengthof r0"
    "if i8 >= $i1 goto $b2 = f9 cmpl 0.0F"
    "$i7 = i8"
    "$d17 = r1[i8]"
    "$f2 = r0[i8]"
    "$b6 = $f2 cmpl 0.0F"
    "if $b6 < 0 goto $f3 = r0[i8]"
    "$f7 = r0[i8]"
    "$f8 = 2.0F * $f7"
    "$d22 = (double) $f8"
    "goto [?= $d18 = $d17 + $d22]"
    "$f3 = r0[i8]"
    "$f4 = 2.0F * $f3"
    "$f5 = $f4 + 1.0F"
    "$f6 = neg $f5"
    "$d22 = (double) $f6"
    "$d18 = $d17 + $d22"
    "r1[$i7] = $d18"
    "$d20 = (double) f9"
    "$d19 = r1[i8]"
    "$d21 = $d20 + $d19"
    "f9 = (float) $d21"
    "i8 = i8 + 1"
    "goto [?= $i1 = lengthof r0]"
    "$b2 = f9 cmpl 0.0F"
    "if $b2 != 0 goto $i3 = lengthof r0"
    "return 0.0"
    "$i3 = lengthof r0"
    "$f0 = (float) $i3"
    "$f1 = $f0 / f9"
    "d23 = (double) $f1"
    "$d0 = 2.0 - d23"
    "$d1 = staticinvoke <java.lang.Math: double log(double)>($d0)"
    "$d2 = 1.0 - d23"
    "$d3 = staticinvoke <java.lang.Math: double log(double)>($d2)"
    "$d4 = neg $d3"
    "$d5 = $d1 / $d4"
    "d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5)"
    "$d7 = staticinvoke <java.lang.Math: double log(double)>(d6)"
    "d8 = staticinvoke <java.lang.Math: double ceil(double)>($d7)"
    "d24 = 0.0"
    "d9 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, d8)"
    "i9 = 0"
    "$i4 = lengthof r0"
    "if i9 >= $i4 goto return d24"
    "$d11 = r1[i9]"
    "$d10 = d9 - d6"
    "$b5 = $d11 cmpg $d10"
    "if $b5 >= 0 goto $d25 = d8"
    "$d25 = d8 - 1.0"
    "goto [?= d12 = $d25]"
    "$d25 = d8"
    "d12 = $d25"
    "$d13 = r1[i9]"
    "$d14 = $d13 / d6"
    "$d15 = $d14 + 1.0"
    "$d16 = $d15 + d12"
    "d24 = d24 + $d16"
    "i9 = i9 + 1"
    "goto [?= $i4 = lengthof r0]"
    "return d24"
    "r3 := @this: com.yahoo.semsearch.fastlinking.w2v.Quantizer"->"r0 := @parameter0: float[]";
    "r0 := @parameter0: float[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"r1 = newarray (double)[$i0]";
    "r1 = newarray (double)[$i0]"->"f9 = 0.0F";
    "f9 = 0.0F"->"i8 = 0";
    "i8 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if i8 >= $i1 goto $b2 = f9 cmpl 0.0F";
    "if i8 >= $i1 goto $b2 = f9 cmpl 0.0F"->"$i7 = i8";
    "if i8 >= $i1 goto $b2 = f9 cmpl 0.0F"->"$b2 = f9 cmpl 0.0F";
    "$i7 = i8"->"$d17 = r1[i8]";
    "$d17 = r1[i8]"->"$f2 = r0[i8]";
    "$f2 = r0[i8]"->"$b6 = $f2 cmpl 0.0F";
    "$b6 = $f2 cmpl 0.0F"->"if $b6 < 0 goto $f3 = r0[i8]";
    "if $b6 < 0 goto $f3 = r0[i8]"->"$f7 = r0[i8]";
    "if $b6 < 0 goto $f3 = r0[i8]"->"$f3 = r0[i8]";
    "$f7 = r0[i8]"->"$f8 = 2.0F * $f7";
    "$f8 = 2.0F * $f7"->"$d22 = (double) $f8";
    "$d22 = (double) $f8"->"goto [?= $d18 = $d17 + $d22]";
    "goto [?= $d18 = $d17 + $d22]"->"$d18 = $d17 + $d22";
    "$f3 = r0[i8]"->"$f4 = 2.0F * $f3";
    "$f4 = 2.0F * $f3"->"$f5 = $f4 + 1.0F";
    "$f5 = $f4 + 1.0F"->"$f6 = neg $f5";
    "$f6 = neg $f5"->"$d22 = (double) $f6";
    "$d22 = (double) $f6"->"$d18 = $d17 + $d22";
    "$d18 = $d17 + $d22"->"r1[$i7] = $d18";
    "r1[$i7] = $d18"->"$d20 = (double) f9";
    "$d20 = (double) f9"->"$d19 = r1[i8]";
    "$d19 = r1[i8]"->"$d21 = $d20 + $d19";
    "$d21 = $d20 + $d19"->"f9 = (float) $d21";
    "f9 = (float) $d21"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$b2 = f9 cmpl 0.0F"->"if $b2 != 0 goto $i3 = lengthof r0";
    "if $b2 != 0 goto $i3 = lengthof r0"->"return 0.0";
    "if $b2 != 0 goto $i3 = lengthof r0"->"$i3 = lengthof r0";
    "$i3 = lengthof r0"->"$f0 = (float) $i3";
    "$f0 = (float) $i3"->"$f1 = $f0 / f9";
    "$f1 = $f0 / f9"->"d23 = (double) $f1";
    "d23 = (double) $f1"->"$d0 = 2.0 - d23";
    "$d0 = 2.0 - d23"->"$d1 = staticinvoke <java.lang.Math: double log(double)>($d0)";
    "$d1 = staticinvoke <java.lang.Math: double log(double)>($d0)"->"$d2 = 1.0 - d23";
    "$d2 = 1.0 - d23"->"$d3 = staticinvoke <java.lang.Math: double log(double)>($d2)";
    "$d3 = staticinvoke <java.lang.Math: double log(double)>($d2)"->"$d4 = neg $d3";
    "$d4 = neg $d3"->"$d5 = $d1 / $d4";
    "$d5 = $d1 / $d4"->"d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5)";
    "d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5)"->"$d7 = staticinvoke <java.lang.Math: double log(double)>(d6)";
    "$d7 = staticinvoke <java.lang.Math: double log(double)>(d6)"->"d8 = staticinvoke <java.lang.Math: double ceil(double)>($d7)";
    "d8 = staticinvoke <java.lang.Math: double ceil(double)>($d7)"->"d24 = 0.0";
    "d24 = 0.0"->"d9 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, d8)";
    "d9 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, d8)"->"i9 = 0";
    "i9 = 0"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"if i9 >= $i4 goto return d24";
    "if i9 >= $i4 goto return d24"->"$d11 = r1[i9]";
    "if i9 >= $i4 goto return d24"->"return d24";
    "$d11 = r1[i9]"->"$d10 = d9 - d6";
    "$d10 = d9 - d6"->"$b5 = $d11 cmpg $d10";
    "$b5 = $d11 cmpg $d10"->"if $b5 >= 0 goto $d25 = d8";
    "if $b5 >= 0 goto $d25 = d8"->"$d25 = d8 - 1.0";
    "if $b5 >= 0 goto $d25 = d8"->"$d25 = d8";
    "$d25 = d8 - 1.0"->"goto [?= d12 = $d25]";
    "goto [?= d12 = $d25]"->"d12 = $d25";
    "$d25 = d8"->"d12 = $d25";
    "d12 = $d25"->"$d13 = r1[i9]";
    "$d13 = r1[i9]"->"$d14 = $d13 / d6";
    "$d14 = $d13 / d6"->"$d15 = $d14 + 1.0";
    "$d15 = $d14 + 1.0"->"$d16 = $d15 + d12";
    "$d16 = $d15 + d12"->"d24 = d24 + $d16";
    "d24 = d24 + $d16"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i4 = lengthof r0]";
    "goto [?= $i4 = lengthof r0]"->"$i4 = lengthof r0";
}
