digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new com.martiansoftware.jsap.SimpleJSAP;
$r1 = class \"Lcom/yahoo/semsearch/fastlinking/utils/TypeLanguageModel;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
$r3 = newarray (com.martiansoftware.jsap.Parameter)[2];
$r4 = new com.martiansoftware.jsap.FlaggedOption;
$r6 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r5 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r4.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"input\", $r6, $r5, 1, 105, \"input\", \"Input file\");
$r3[0] = $r4;
$r7 = new com.martiansoftware.jsap.FlaggedOption;
$r9 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r8 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r7.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"output\", $r9, $r8, 0, 111, \"output\", \"File to serialize the data structure\");
$r3[1] = $r7;
specialinvoke $r0.<com.martiansoftware.jsap.SimpleJSAP: void <init>(java.lang.String,java.lang.String,com.martiansoftware.jsap.Parameter[])>($r2, \"Language model for types builder\", $r3);
r10 = $r0;
r12 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: com.martiansoftware.jsap.JSAPResult parse(java.lang.String[])>(r11);
$z0 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: boolean messagePrinted()>();
if $z0 == 0 goto $r13 = new java.io.BufferedReader;
"
    "Block 1:
[preds: 0 ] [succs: ]
return;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r13 = new java.io.BufferedReader;
$r14 = new java.io.FileReader;
$r15 = virtualinvoke r12.<com.martiansoftware.jsap.JSAPResult: java.lang.String getString(java.lang.String)>(\"input\");
specialinvoke $r14.<java.io.FileReader: void <init>(java.lang.String)>($r15);
specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);
r16 = $r13;
$r17 = new it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap;
specialinvoke $r17.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: void <init>()>();
r18 = $r17;
$r19 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r19.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r20 = $r19;
$r21 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r21.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r22 = $r21;
i12 = 0;
r48 = \"\";
"
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
$r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();
r49 = $r23;
if $r23 == null goto virtualinvoke r16.<java.io.BufferedReader: void close()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r50 = virtualinvoke r49.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\");
$r26 = r50[0];
$r27 = virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object get(java.lang.Object)>($r26);
r51 = (it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) $r27;
if r51 != null goto $r28 = r50[1];
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r44 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r44.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r51 = $r44;
$r45 = r50[0];
virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, r51);
$r47 = r50[0];
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>($r47, 0);
"
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
$r28 = r50[1];
r29 = virtualinvoke $r28.<java.lang.String: java.lang.String[] split(java.lang.String)>(\",\");
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
r30 = r29;
i0 = lengthof r30;
i13 = 0;
"
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
if i13 >= i0 goto (branch);
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r31 = r30[i13];
$r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(\\()(.+)\");
r53 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z1 = virtualinvoke r53.<java.util.regex.Matcher: boolean find()>();
if $z1 == 0 goto $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
$r43 = virtualinvoke r53.<java.util.regex.Matcher: java.lang.String group(int)>(2);
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43);
r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$i10 = virtualinvoke r54.<java.lang.Double: int intValue()>();
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);
"
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
r55 = virtualinvoke $r33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z2 = virtualinvoke r55.<java.util.regex.Matcher: boolean find()>();
if $z2 == 0 goto i13 = i13 + 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r34 = virtualinvoke r55.<java.util.regex.Matcher: java.lang.String group(int)>(1);
$r35 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.Normalize: java.lang.String normalize(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();
r56 = virtualinvoke $r36.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s\");
$r37 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: java.util.List getTrigrams(java.lang.String[])>(r56);
r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
$z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto i13 = i13 + 1;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.lang.String) $r39;
r41 = virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: java.lang.Integer get(java.lang.Object)>(r40);
if r41 != null goto $r42 = r50[0];
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
"
    "Block 15:
[preds: 13 14 ] [succs: 12 ]
$r42 = r50[0];
$i1 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>($r42, $i1);
$i3 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i3);
$i5 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i5);
$i7 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
i12 = i12 + $i7;
goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 16:
[preds: 10 12 ] [succs: 7 ]
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 17:
[preds: 7 ] [succs: 3 ]
goto [?= $r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>()];
"
    "Block 18:
[preds: 3 ] [succs: ]
virtualinvoke r16.<java.io.BufferedReader: void close()>();
$r24 = new com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel;
specialinvoke $r24.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: void <init>()>();
r57 = $r24;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap languageModels> = r18;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap freqs> = r20;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: int totalFreq> = i12;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap backgroundModel> = r22;
$r25 = virtualinvoke r12.<com.martiansoftware.jsap.JSAPResult: java.lang.String getString(java.lang.String)>(\"output\");
staticinvoke <it.unimi.dsi.fastutil.io.BinIO: void storeObject(java.lang.Object,java.lang.CharSequence)>(r57, $r25);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new com.martiansoftware.jsap.SimpleJSAP;
$r1 = class \"Lcom/yahoo/semsearch/fastlinking/utils/TypeLanguageModel;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
$r3 = newarray (com.martiansoftware.jsap.Parameter)[2];
$r4 = new com.martiansoftware.jsap.FlaggedOption;
$r6 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r5 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r4.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"input\", $r6, $r5, 1, 105, \"input\", \"Input file\");
$r3[0] = $r4;
$r7 = new com.martiansoftware.jsap.FlaggedOption;
$r9 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r8 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r7.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"output\", $r9, $r8, 0, 111, \"output\", \"File to serialize the data structure\");
$r3[1] = $r7;
specialinvoke $r0.<com.martiansoftware.jsap.SimpleJSAP: void <init>(java.lang.String,java.lang.String,com.martiansoftware.jsap.Parameter[])>($r2, \"Language model for types builder\", $r3);
r10 = $r0;
r12 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: com.martiansoftware.jsap.JSAPResult parse(java.lang.String[])>(r11);
$z0 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: boolean messagePrinted()>();
if $z0 == 0 goto $r13 = new java.io.BufferedReader;
"->"Block 1:
[preds: 0 ] [succs: ]
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r11 := @parameter0: java.lang.String[];
$r0 = new com.martiansoftware.jsap.SimpleJSAP;
$r1 = class \"Lcom/yahoo/semsearch/fastlinking/utils/TypeLanguageModel;\";
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
$r3 = newarray (com.martiansoftware.jsap.Parameter)[2];
$r4 = new com.martiansoftware.jsap.FlaggedOption;
$r6 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r5 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r4.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"input\", $r6, $r5, 1, 105, \"input\", \"Input file\");
$r3[0] = $r4;
$r7 = new com.martiansoftware.jsap.FlaggedOption;
$r9 = <com.martiansoftware.jsap.JSAP: com.martiansoftware.jsap.stringparsers.StringStringParser STRING_PARSER>;
$r8 = <com.martiansoftware.jsap.JSAP: java.lang.String NO_DEFAULT>;
specialinvoke $r7.<com.martiansoftware.jsap.FlaggedOption: void <init>(java.lang.String,com.martiansoftware.jsap.StringParser,java.lang.String,boolean,char,java.lang.String,java.lang.String)>(\"output\", $r9, $r8, 0, 111, \"output\", \"File to serialize the data structure\");
$r3[1] = $r7;
specialinvoke $r0.<com.martiansoftware.jsap.SimpleJSAP: void <init>(java.lang.String,java.lang.String,com.martiansoftware.jsap.Parameter[])>($r2, \"Language model for types builder\", $r3);
r10 = $r0;
r12 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: com.martiansoftware.jsap.JSAPResult parse(java.lang.String[])>(r11);
$z0 = virtualinvoke r10.<com.martiansoftware.jsap.SimpleJSAP: boolean messagePrinted()>();
if $z0 == 0 goto $r13 = new java.io.BufferedReader;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r13 = new java.io.BufferedReader;
$r14 = new java.io.FileReader;
$r15 = virtualinvoke r12.<com.martiansoftware.jsap.JSAPResult: java.lang.String getString(java.lang.String)>(\"input\");
specialinvoke $r14.<java.io.FileReader: void <init>(java.lang.String)>($r15);
specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);
r16 = $r13;
$r17 = new it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap;
specialinvoke $r17.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: void <init>()>();
r18 = $r17;
$r19 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r19.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r20 = $r19;
$r21 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r21.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r22 = $r21;
i12 = 0;
r48 = \"\";
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r13 = new java.io.BufferedReader;
$r14 = new java.io.FileReader;
$r15 = virtualinvoke r12.<com.martiansoftware.jsap.JSAPResult: java.lang.String getString(java.lang.String)>(\"input\");
specialinvoke $r14.<java.io.FileReader: void <init>(java.lang.String)>($r15);
specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);
r16 = $r13;
$r17 = new it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap;
specialinvoke $r17.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: void <init>()>();
r18 = $r17;
$r19 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r19.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r20 = $r19;
$r21 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r21.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r22 = $r21;
i12 = 0;
r48 = \"\";
"->"Block 3:
[preds: 2 17 ] [succs: 4 18 ]
$r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();
r49 = $r23;
if $r23 == null goto virtualinvoke r16.<java.io.BufferedReader: void close()>();
";
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
$r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();
r49 = $r23;
if $r23 == null goto virtualinvoke r16.<java.io.BufferedReader: void close()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
r50 = virtualinvoke r49.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\");
$r26 = r50[0];
$r27 = virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object get(java.lang.Object)>($r26);
r51 = (it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) $r27;
if r51 != null goto $r28 = r50[1];
";
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
$r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();
r49 = $r23;
if $r23 == null goto virtualinvoke r16.<java.io.BufferedReader: void close()>();
"->"Block 18:
[preds: 3 ] [succs: ]
virtualinvoke r16.<java.io.BufferedReader: void close()>();
$r24 = new com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel;
specialinvoke $r24.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: void <init>()>();
r57 = $r24;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap languageModels> = r18;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap freqs> = r20;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: int totalFreq> = i12;
r57.<com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap backgroundModel> = r22;
$r25 = virtualinvoke r12.<com.martiansoftware.jsap.JSAPResult: java.lang.String getString(java.lang.String)>(\"output\");
staticinvoke <it.unimi.dsi.fastutil.io.BinIO: void storeObject(java.lang.Object,java.lang.CharSequence)>(r57, $r25);
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r50 = virtualinvoke r49.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\");
$r26 = r50[0];
$r27 = virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object get(java.lang.Object)>($r26);
r51 = (it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) $r27;
if r51 != null goto $r28 = r50[1];
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r44 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r44.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r51 = $r44;
$r45 = r50[0];
virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, r51);
$r47 = r50[0];
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>($r47, 0);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r50 = virtualinvoke r49.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\t\");
$r26 = r50[0];
$r27 = virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object get(java.lang.Object)>($r26);
r51 = (it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) $r27;
if r51 != null goto $r28 = r50[1];
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
$r28 = r50[1];
r29 = virtualinvoke $r28.<java.lang.String: java.lang.String[] split(java.lang.String)>(\",\");
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
r30 = r29;
i0 = lengthof r30;
i13 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r44 = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
specialinvoke $r44.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: void <init>()>();
r51 = $r44;
$r45 = r50[0];
virtualinvoke r18.<it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, r51);
$r47 = r50[0];
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>($r47, 0);
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
$r28 = r50[1];
r29 = virtualinvoke $r28.<java.lang.String: java.lang.String[] split(java.lang.String)>(\",\");
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
r30 = r29;
i0 = lengthof r30;
i13 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
$r28 = r50[1];
r29 = virtualinvoke $r28.<java.lang.String: java.lang.String[] split(java.lang.String)>(\",\");
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
r30 = r29;
i0 = lengthof r30;
i13 = 0;
"->"Block 7:
[preds: 6 16 ] [succs: 8 17 ]
if i13 >= i0 goto (branch);
";
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
if i13 >= i0 goto (branch);
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
r31 = r30[i13];
$r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(\\()(.+)\");
r53 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z1 = virtualinvoke r53.<java.util.regex.Matcher: boolean find()>();
if $z1 == 0 goto $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
";
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
if i13 >= i0 goto (branch);
"->"Block 17:
[preds: 7 ] [succs: 3 ]
goto [?= $r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>()];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r31 = r30[i13];
$r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(\\()(.+)\");
r53 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z1 = virtualinvoke r53.<java.util.regex.Matcher: boolean find()>();
if $z1 == 0 goto $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
"->"Block 9:
[preds: 8 ] [succs: 10 ]
$r43 = virtualinvoke r53.<java.util.regex.Matcher: java.lang.String group(int)>(2);
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43);
r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$i10 = virtualinvoke r54.<java.lang.Double: int intValue()>();
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r31 = r30[i13];
$r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(\\()(.+)\");
r53 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z1 = virtualinvoke r53.<java.util.regex.Matcher: boolean find()>();
if $z1 == 0 goto $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
r55 = virtualinvoke $r33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z2 = virtualinvoke r55.<java.util.regex.Matcher: boolean find()>();
if $z2 == 0 goto i13 = i13 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
$r43 = virtualinvoke r53.<java.util.regex.Matcher: java.lang.String group(int)>(2);
$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43);
r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
$i10 = virtualinvoke r54.<java.lang.Double: int intValue()>();
r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
r55 = virtualinvoke $r33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z2 = virtualinvoke r55.<java.util.regex.Matcher: boolean find()>();
if $z2 == 0 goto i13 = i13 + 1;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
r55 = virtualinvoke $r33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z2 = virtualinvoke r55.<java.util.regex.Matcher: boolean find()>();
if $z2 == 0 goto i13 = i13 + 1;
"->"Block 11:
[preds: 10 ] [succs: 12 ]
$r34 = virtualinvoke r55.<java.util.regex.Matcher: java.lang.String group(int)>(1);
$r35 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.Normalize: java.lang.String normalize(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();
r56 = virtualinvoke $r36.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s\");
$r37 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: java.util.List getTrigrams(java.lang.String[])>(r56);
r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"(.+?)(\\))\");
r55 = virtualinvoke $r33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r31);
$z2 = virtualinvoke r55.<java.util.regex.Matcher: boolean find()>();
if $z2 == 0 goto i13 = i13 + 1;
"->"Block 16:
[preds: 10 12 ] [succs: 7 ]
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r34 = virtualinvoke r55.<java.util.regex.Matcher: java.lang.String group(int)>(1);
$r35 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.Normalize: java.lang.String normalize(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();
r56 = virtualinvoke $r36.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s\");
$r37 = staticinvoke <com.yahoo.semsearch.fastlinking.utils.TypeLanguageModel: java.util.List getTrigrams(java.lang.String[])>(r56);
r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
$z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto i13 = i13 + 1;
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
$z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto i13 = i13 + 1;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.lang.String) $r39;
r41 = virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: java.lang.Integer get(java.lang.Object)>(r40);
if r41 != null goto $r42 = r50[0];
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
$z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto i13 = i13 + 1;
"->"Block 16:
[preds: 10 12 ] [succs: 7 ]
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.lang.String) $r39;
r41 = virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: java.lang.Integer get(java.lang.Object)>(r40);
if r41 != null goto $r42 = r50[0];
"->"Block 14:
[preds: 13 ] [succs: 15 ]
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.lang.String) $r39;
r41 = virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: java.lang.Integer get(java.lang.Object)>(r40);
if r41 != null goto $r42 = r50[0];
"->"Block 15:
[preds: 13 14 ] [succs: 12 ]
$r42 = r50[0];
$i1 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>($r42, $i1);
$i3 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i3);
$i5 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i5);
$i7 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
i12 = i12 + $i7;
goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int put(java.lang.Object,int)>(r40, 0);
"->"Block 15:
[preds: 13 14 ] [succs: 12 ]
$r42 = r50[0];
$i1 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>($r42, $i1);
$i3 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i3);
$i5 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i5);
$i7 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
i12 = i12 + $i7;
goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 15:
[preds: 13 14 ] [succs: 12 ]
$r42 = r50[0];
$i1 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r20.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>($r42, $i1);
$i3 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r51.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i3);
$i5 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
virtualinvoke r22.<it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap: int addTo(java.lang.Object,int)>(r40, $i5);
$i7 = virtualinvoke r52.<java.lang.Integer: int intValue()>();
i12 = i12 + $i7;
goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()];
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
$z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto i13 = i13 + 1;
";
    "Block 16:
[preds: 10 12 ] [succs: 7 ]
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 16 ] [succs: 8 17 ]
if i13 >= i0 goto (branch);
";
    "Block 17:
[preds: 7 ] [succs: 3 ]
goto [?= $r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>()];
"->"Block 3:
[preds: 2 17 ] [succs: 4 18 ]
$r23 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();
r49 = $r23;
if $r23 == null goto virtualinvoke r16.<java.io.BufferedReader: void close()>();
";
}
