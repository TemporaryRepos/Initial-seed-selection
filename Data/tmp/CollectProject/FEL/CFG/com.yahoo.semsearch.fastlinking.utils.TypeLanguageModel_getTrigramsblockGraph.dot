digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i0 = interfaceinvoke r2.<java.util.List: int size()>();
i9 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i9 >= $i1 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r17 = (java.lang.String) $r16;
$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i6 = i9 + 1;
$r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);
$r21 = (java.lang.String) $r20;
$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23);
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r26 = (java.lang.String) $r25;
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i7 = i9 + 1;
$r29 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i7);
$r30 = (java.lang.String) $r29;
$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i8 = i9 + 2;
$r33 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i8);
$r34 = (java.lang.String) $r33;
$r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r36);
i9 = i9 + 1;
goto [?= $i1 = i0 - 2];
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
if i0 <= 1 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$i3 = i0 - 2;
$r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);
$r6 = (java.lang.String) $r5;
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i4 = i0 - 1;
$r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i4);
$r10 = (java.lang.String) $r9;
$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
$i5 = i0 - 2;
$r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i0 <= 0 goto return r1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
$r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i2);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i0 = interfaceinvoke r2.<java.util.List: int size()>();
i9 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i9 >= $i1 goto (branch);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i9 >= $i1 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r17 = (java.lang.String) $r16;
$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i6 = i9 + 1;
$r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);
$r21 = (java.lang.String) $r20;
$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23);
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r26 = (java.lang.String) $r25;
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i7 = i9 + 1;
$r29 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i7);
$r30 = (java.lang.String) $r29;
$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i8 = i9 + 2;
$r33 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i8);
$r34 = (java.lang.String) $r33;
$r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r36);
i9 = i9 + 1;
goto [?= $i1 = i0 - 2];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i9 >= $i1 goto (branch);
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
if i0 <= 1 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r17 = (java.lang.String) $r16;
$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i6 = i9 + 1;
$r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);
$r21 = (java.lang.String) $r20;
$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23);
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9);
$r26 = (java.lang.String) $r25;
$r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i7 = i9 + 1;
$r29 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i7);
$r30 = (java.lang.String) $r29;
$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i8 = i9 + 2;
$r33 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i8);
$r34 = (java.lang.String) $r33;
$r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r36);
i9 = i9 + 1;
goto [?= $i1 = i0 - 2];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i9 >= $i1 goto (branch);
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
if i0 <= 1 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$i3 = i0 - 2;
$r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);
$r6 = (java.lang.String) $r5;
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i4 = i0 - 1;
$r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i4);
$r10 = (java.lang.String) $r9;
$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
$i5 = i0 - 2;
$r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
if i0 <= 1 goto (branch);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i0 <= 0 goto return r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$i3 = i0 - 2;
$r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);
$r6 = (java.lang.String) $r5;
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"_\");
$i4 = i0 - 1;
$r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i4);
$r10 = (java.lang.String) $r9;
$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
$i5 = i0 - 2;
$r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i0 <= 0 goto return r1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i0 <= 0 goto return r1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
$r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i2);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if i0 <= 0 goto return r1;
"->"Block 7:
[preds: 5 6 ] [succs: ]
return r1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
$r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i2);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
"->"Block 7:
[preds: 5 6 ] [succs: ]
return r1;
";
}
