digraph "unitGraph" {
    "r8 := @this: com.yahoo.semsearch.fastlinking.w2v.Quantizer"
    "r4 := @parameter0: java.lang.String"
    "i4 := @parameter1: int"
    "$r0 = new java.io.BufferedReader"
    "$r1 = new java.io.InputStreamReader"
    "$r2 = new java.io.FileInputStream"
    "$r3 = new java.io.File"
    "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r4)"
    "specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3)"
    "specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2)"
    "specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)"
    "r5 = $r0"
    "d27 = 0.0"
    "i7 = 0"
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"
    "r13 = $r6"
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "r9 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")"
    "d28 = 0.0"
    "i7 = i7 + 1"
    "d29 = 0.0"
    "$i1 = lengthof r9"
    "r10 = newarray (double)[$i1]"
    "i8 = 1"
    "$i2 = lengthof r9"
    "if i8 >= $i2 goto d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)"
    "$r11 = new java.lang.Double"
    "$r12 = r9[i8]"
    "specialinvoke $r11.<java.lang.Double: void <init>(java.lang.String)>($r12)"
    "$d23 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>()"
    "r10[i8] = $d23"
    "$d25 = r10[i8]"
    "$d24 = r10[i8]"
    "$d26 = $d25 * $d24"
    "d28 = d28 + $d26"
    "i8 = i8 + 1"
    "goto [?= $i2 = lengthof r9]"
    "d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)"
    "i9 = 1"
    "$i3 = lengthof r9"
    "if i9 >= $i3 goto $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)"
    "$d4 = r10[i9]"
    "$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)"
    "$d6 = (double) i4"
    "$d7 = $d5 * $d6"
    "$i5 = (int) $d7"
    "$d9 = (double) $i5"
    "$d8 = r10[i9]"
    "$d10 = staticinvoke <java.lang.Math: double signum(double)>($d8)"
    "$d11 = $d9 * $d10"
    "i6 = (int) $d11"
    "$d12 = (double) i6"
    "$f0 = (float) i6"
    "$f1 = staticinvoke <java.lang.Math: float signum(float)>($f0)"
    "$d13 = (double) $f1"
    "$d14 = 0.5 * $d13"
    "$d16 = $d12 + $d14"
    "$d15 = (double) i4"
    "d17 = $d16 / $d15"
    "$d18 = r10[i9]"
    "$d21 = $d18 - d17"
    "$d19 = r10[i9]"
    "$d20 = $d19 - d17"
    "$d22 = $d21 * $d20"
    "d29 = d29 + $d22"
    "i9 = i9 + 1"
    "goto [?= $i3 = lengthof r9]"
    "$d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)"
    "$d3 = $d2 / d30"
    "d27 = d27 + $d3"
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"
    "$r7 = new com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder"
    "$i0 = i7 - 1"
    "$d0 = (double) i7"
    "$d1 = d27 / $d0"
    "specialinvoke $r7.<com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder: void <init>(com.yahoo.semsearch.fastlinking.w2v.Quantizer,int,double)>(r8, $i0, $d1)"
    "return $r7"
    "r8 := @this: com.yahoo.semsearch.fastlinking.w2v.Quantizer"->"r4 := @parameter0: java.lang.String";
    "r4 := @parameter0: java.lang.String"->"i4 := @parameter1: int";
    "i4 := @parameter1: int"->"$r0 = new java.io.BufferedReader";
    "$r0 = new java.io.BufferedReader"->"$r1 = new java.io.InputStreamReader";
    "$r1 = new java.io.InputStreamReader"->"$r2 = new java.io.FileInputStream";
    "$r2 = new java.io.FileInputStream"->"$r3 = new java.io.File";
    "$r3 = new java.io.File"->"specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r4)";
    "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r4)"->"specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3)";
    "specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3)"->"specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2)";
    "specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2)"->"specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)";
    "specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)"->"r5 = $r0";
    "r5 = $r0"->"d27 = 0.0";
    "d27 = 0.0"->"i7 = 0";
    "i7 = 0"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()"->"r13 = $r6";
    "r13 = $r6"->"if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"r9 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")";
    "if $r6 == null goto virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"virtualinvoke r5.<java.io.BufferedReader: void close()>()";
    "r9 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\s+\")"->"d28 = 0.0";
    "d28 = 0.0"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"d29 = 0.0";
    "d29 = 0.0"->"$i1 = lengthof r9";
    "$i1 = lengthof r9"->"r10 = newarray (double)[$i1]";
    "r10 = newarray (double)[$i1]"->"i8 = 1";
    "i8 = 1"->"$i2 = lengthof r9";
    "$i2 = lengthof r9"->"if i8 >= $i2 goto d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)";
    "if i8 >= $i2 goto d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)"->"$r11 = new java.lang.Double";
    "if i8 >= $i2 goto d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)"->"d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)";
    "$r11 = new java.lang.Double"->"$r12 = r9[i8]";
    "$r12 = r9[i8]"->"specialinvoke $r11.<java.lang.Double: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r11.<java.lang.Double: void <init>(java.lang.String)>($r12)"->"$d23 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>()";
    "$d23 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>()"->"r10[i8] = $d23";
    "r10[i8] = $d23"->"$d25 = r10[i8]";
    "$d25 = r10[i8]"->"$d24 = r10[i8]";
    "$d24 = r10[i8]"->"$d26 = $d25 * $d24";
    "$d26 = $d25 * $d24"->"d28 = d28 + $d26";
    "d28 = d28 + $d26"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i2 = lengthof r9]";
    "goto [?= $i2 = lengthof r9]"->"$i2 = lengthof r9";
    "d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d28)"->"i9 = 1";
    "i9 = 1"->"$i3 = lengthof r9";
    "$i3 = lengthof r9"->"if i9 >= $i3 goto $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)";
    "if i9 >= $i3 goto $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)"->"$d4 = r10[i9]";
    "if i9 >= $i3 goto $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)"->"$d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)";
    "$d4 = r10[i9]"->"$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)";
    "$d5 = staticinvoke <java.lang.Math: double abs(double)>($d4)"->"$d6 = (double) i4";
    "$d6 = (double) i4"->"$d7 = $d5 * $d6";
    "$d7 = $d5 * $d6"->"$i5 = (int) $d7";
    "$i5 = (int) $d7"->"$d9 = (double) $i5";
    "$d9 = (double) $i5"->"$d8 = r10[i9]";
    "$d8 = r10[i9]"->"$d10 = staticinvoke <java.lang.Math: double signum(double)>($d8)";
    "$d10 = staticinvoke <java.lang.Math: double signum(double)>($d8)"->"$d11 = $d9 * $d10";
    "$d11 = $d9 * $d10"->"i6 = (int) $d11";
    "i6 = (int) $d11"->"$d12 = (double) i6";
    "$d12 = (double) i6"->"$f0 = (float) i6";
    "$f0 = (float) i6"->"$f1 = staticinvoke <java.lang.Math: float signum(float)>($f0)";
    "$f1 = staticinvoke <java.lang.Math: float signum(float)>($f0)"->"$d13 = (double) $f1";
    "$d13 = (double) $f1"->"$d14 = 0.5 * $d13";
    "$d14 = 0.5 * $d13"->"$d16 = $d12 + $d14";
    "$d16 = $d12 + $d14"->"$d15 = (double) i4";
    "$d15 = (double) i4"->"d17 = $d16 / $d15";
    "d17 = $d16 / $d15"->"$d18 = r10[i9]";
    "$d18 = r10[i9]"->"$d21 = $d18 - d17";
    "$d21 = $d18 - d17"->"$d19 = r10[i9]";
    "$d19 = r10[i9]"->"$d20 = $d19 - d17";
    "$d20 = $d19 - d17"->"$d22 = $d21 * $d20";
    "$d22 = $d21 * $d20"->"d29 = d29 + $d22";
    "d29 = d29 + $d22"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i3 = lengthof r9]";
    "goto [?= $i3 = lengthof r9]"->"$i3 = lengthof r9";
    "$d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d29)"->"$d3 = $d2 / d30";
    "$d3 = $d2 / d30"->"d27 = d27 + $d3";
    "d27 = d27 + $d3"->"goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= $r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r6 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()";
    "virtualinvoke r5.<java.io.BufferedReader: void close()>()"->"$r7 = new com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder";
    "$r7 = new com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder"->"$i0 = i7 - 1";
    "$i0 = i7 - 1"->"$d0 = (double) i7";
    "$d0 = (double) i7"->"$d1 = d27 / $d0";
    "$d1 = d27 / $d0"->"specialinvoke $r7.<com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder: void <init>(com.yahoo.semsearch.fastlinking.w2v.Quantizer,int,double)>(r8, $i0, $d1)";
    "specialinvoke $r7.<com.yahoo.semsearch.fastlinking.w2v.Quantizer$ErrorHolder: void <init>(com.yahoo.semsearch.fastlinking.w2v.Quantizer,int,double)>(r8, $i0, $d1)"->"return $r7";
}
