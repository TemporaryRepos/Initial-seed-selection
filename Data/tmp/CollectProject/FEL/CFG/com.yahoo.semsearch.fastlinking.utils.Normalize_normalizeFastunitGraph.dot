digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "i0 = virtualinvoke r2.<java.lang.String: int length()>()"
    "z1 = 0"
    "i4 = 0"
    "if i4 >= i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4)"
    "$z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)"
    "if $z0 == 0 goto $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"
    "if z1 == 0 goto $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"
    "$c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)"
    "goto [?= i4 = i4 + 1]"
    "$i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"
    "if $i2 <= 0 goto i4 = i4 + 1"
    "z1 = 1"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r3"
    "r2 := @parameter0: java.lang.String"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i0 = virtualinvoke r2.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r2.<java.lang.String: int length()>()"->"z1 = 0";
    "z1 = 0"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if i4 >= i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4)";
    "if i4 >= i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4)"->"$z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)";
    "$z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)"->"if $z0 == 0 goto $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()";
    "if $z0 == 0 goto $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"->"if z1 == 0 goto $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)";
    "if $z0 == 0 goto $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"->"$i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()";
    "if z1 == 0 goto $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)";
    "if z1 == 0 goto $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)"->"$c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)"->"$c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)";
    "$c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)"->"z1 = 0";
    "z1 = 0"->"goto [?= i4 = i4 + 1]";
    "goto [?= i4 = i4 + 1]"->"i4 = i4 + 1";
    "$i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()"->"if $i2 <= 0 goto i4 = i4 + 1";
    "if $i2 <= 0 goto i4 = i4 + 1"->"z1 = 1";
    "if $i2 <= 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "z1 = 1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r3";
}
