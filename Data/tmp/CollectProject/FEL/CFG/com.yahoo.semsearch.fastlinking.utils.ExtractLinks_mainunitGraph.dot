digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 >= 2 goto $r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"
    "$r6 = <java.lang.System: java.io.PrintStream err>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\" USAGE java ExtractLinks  <inputFile> <output file> \")"
    "$r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"
    "$r2 = r0[1]"
    "specialinvoke $r1.<com.yahoo.semsearch.fastlinking.utils.ExtractLinks: void <init>(java.lang.String)>($r2)"
    "r8 = $r1"
    "$r3 = new info.bliki.wiki.dump.WikiXMLParser"
    "$r4 = r0[0]"
    "specialinvoke $r3.<info.bliki.wiki.dump.WikiXMLParser: void <init>(java.lang.String,info.bliki.wiki.dump.IArticleFilter)>($r4, r8)"
    "r5 = $r3"
    "virtualinvoke r5.<info.bliki.wiki.dump.WikiXMLParser: void parse()>()"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "r9 = $r7"
    "virtualinvoke r9.<java.lang.Exception: void printStackTrace()>()"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 >= 2 goto $r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks";
    "if $i0 >= 2 goto $r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"->"$r6 = <java.lang.System: java.io.PrintStream err>";
    "if $i0 >= 2 goto $r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"->"$r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks";
    "if $i0 >= 2 goto $r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"->"$r7 := @caughtexception";
    "$r6 = <java.lang.System: java.io.PrintStream err>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\" USAGE java ExtractLinks  <inputFile> <output file> \")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\" USAGE java ExtractLinks  <inputFile> <output file> \")"->"$r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\" USAGE java ExtractLinks  <inputFile> <output file> \")"->"$r7 := @caughtexception";
    "$r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"->"$r2 = r0[1]";
    "$r1 = new com.yahoo.semsearch.fastlinking.utils.ExtractLinks"->"$r7 := @caughtexception";
    "$r2 = r0[1]"->"specialinvoke $r1.<com.yahoo.semsearch.fastlinking.utils.ExtractLinks: void <init>(java.lang.String)>($r2)";
    "$r2 = r0[1]"->"$r7 := @caughtexception";
    "specialinvoke $r1.<com.yahoo.semsearch.fastlinking.utils.ExtractLinks: void <init>(java.lang.String)>($r2)"->"r8 = $r1";
    "specialinvoke $r1.<com.yahoo.semsearch.fastlinking.utils.ExtractLinks: void <init>(java.lang.String)>($r2)"->"$r7 := @caughtexception";
    "r8 = $r1"->"$r3 = new info.bliki.wiki.dump.WikiXMLParser";
    "r8 = $r1"->"$r7 := @caughtexception";
    "$r3 = new info.bliki.wiki.dump.WikiXMLParser"->"$r4 = r0[0]";
    "$r3 = new info.bliki.wiki.dump.WikiXMLParser"->"$r7 := @caughtexception";
    "$r4 = r0[0]"->"specialinvoke $r3.<info.bliki.wiki.dump.WikiXMLParser: void <init>(java.lang.String,info.bliki.wiki.dump.IArticleFilter)>($r4, r8)";
    "$r4 = r0[0]"->"$r7 := @caughtexception";
    "specialinvoke $r3.<info.bliki.wiki.dump.WikiXMLParser: void <init>(java.lang.String,info.bliki.wiki.dump.IArticleFilter)>($r4, r8)"->"r5 = $r3";
    "specialinvoke $r3.<info.bliki.wiki.dump.WikiXMLParser: void <init>(java.lang.String,info.bliki.wiki.dump.IArticleFilter)>($r4, r8)"->"$r7 := @caughtexception";
    "r5 = $r3"->"virtualinvoke r5.<info.bliki.wiki.dump.WikiXMLParser: void parse()>()";
    "r5 = $r3"->"$r7 := @caughtexception";
    "virtualinvoke r5.<info.bliki.wiki.dump.WikiXMLParser: void parse()>()"->"goto [?= return]";
    "virtualinvoke r5.<info.bliki.wiki.dump.WikiXMLParser: void parse()>()"->"$r7 := @caughtexception";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"r9 = $r7";
    "r9 = $r7"->"virtualinvoke r9.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r9.<java.lang.Exception: void printStackTrace()>()"->"return";
}
