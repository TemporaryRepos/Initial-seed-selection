digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Windows\")"
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")"
    "return \"Windows\""
    "$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")"
    "if $z1 != 0 goto return \"Mac\""
    "$z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Darwin\")"
    "if $z2 == 0 goto $z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")"
    "return \"Mac\""
    "$z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")"
    "if $z3 == 0 goto $z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()"
    "return \"AIX\""
    "$z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()"
    "if $z4 == 0 goto $z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()"
    "return \"Linux-Musl\""
    "$z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()"
    "if $z5 == 0 goto $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")"
    "return \"Linux-Android\""
    "$z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")"
    "if $z6 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")"
    "return \"Linux\""
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")"
    "return $r1"
    "r0 := @parameter0: java.lang.String"->"$z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Windows\")";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Windows\")"->"if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")"->"return \"Windows\"";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")"->"$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Mac\")"->"if $z1 != 0 goto return \"Mac\"";
    "if $z1 != 0 goto return \"Mac\""->"$z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Darwin\")";
    "if $z1 != 0 goto return \"Mac\""->"return \"Mac\"";
    "$z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Darwin\")"->"if $z2 == 0 goto $z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")";
    "if $z2 == 0 goto $z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")"->"return \"Mac\"";
    "if $z2 == 0 goto $z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")"->"$z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")";
    "$z3 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"AIX\")"->"if $z3 == 0 goto $z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()";
    "if $z3 == 0 goto $z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()"->"return \"AIX\"";
    "if $z3 == 0 goto $z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()"->"$z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()";
    "$z4 = staticinvoke <org.sqlite.util.OSInfo: boolean isMusl()>()"->"if $z4 == 0 goto $z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()";
    "if $z4 == 0 goto $z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()"->"return \"Linux-Musl\"";
    "if $z4 == 0 goto $z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()"->"$z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()";
    "$z5 = staticinvoke <org.sqlite.util.OSInfo: boolean isAndroid()>()"->"if $z5 == 0 goto $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")";
    "if $z5 == 0 goto $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")"->"return \"Linux-Android\"";
    "if $z5 == 0 goto $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")"->"$z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")";
    "$z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"Linux\")"->"if $z6 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")";
    "if $z6 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")"->"return \"Linux\"";
    "if $z6 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")"->"$r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")";
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\W\", \"\")"->"return $r1";
}
