digraph "unitGraph" {
    "$r0 = newarray (java.lang.String)[0]"
    "r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/proc/self/map_files\", $r0)"
    "r13 = staticinvoke <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>(r1)"
    "r14 = null"
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_0__300: java.util.function.Function bootstrap$()>()"
    "$r3 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2)"
    "$r4 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_1__301: java.util.function.Predicate bootstrap$()>()"
    "z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)"
    "if r13 == null goto return z1"
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"
    "goto [?= return z1]"
    "$r11 := @caughtexception"
    "r12 = $r11"
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12)"
    "return z1"
    "$r10 := @caughtexception"
    "r15 = $r10"
    "r14 = r15"
    "throw r15"
    "$r9 := @caughtexception"
    "r8 = $r9"
    "if r13 == null goto throw r8"
    "goto [?= throw r8]"
    "$r6 := @caughtexception"
    "r7 = $r6"
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7)"
    "throw r8"
    "$r5 := @caughtexception"
    "r16 = $r5"
    "$z0 = staticinvoke <org.sqlite.util.OSInfo: boolean isAlpineLinux()>()"
    "return $z0"
    "$r0 = newarray (java.lang.String)[0]"->"r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/proc/self/map_files\", $r0)";
    "r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/proc/self/map_files\", $r0)"->"r13 = staticinvoke <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>(r1)";
    "r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/proc/self/map_files\", $r0)"->"$r5 := @caughtexception";
    "r13 = staticinvoke <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>(r1)"->"r14 = null";
    "r13 = staticinvoke <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>(r1)"->"$r5 := @caughtexception";
    "r14 = null"->"$r10 := @caughtexception";
    "r14 = null"->"$r5 := @caughtexception";
    "r14 = null"->"$r9 := @caughtexception";
    "r14 = null"->"$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_0__300: java.util.function.Function bootstrap$()>()";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_0__300: java.util.function.Function bootstrap$()>()"->"$r10 := @caughtexception";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_0__300: java.util.function.Function bootstrap$()>()"->"$r9 := @caughtexception";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_0__300: java.util.function.Function bootstrap$()>()"->"$r3 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2)";
    "$r3 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2)"->"$r10 := @caughtexception";
    "$r3 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2)"->"$r9 := @caughtexception";
    "$r3 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2)"->"$r4 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_1__301: java.util.function.Predicate bootstrap$()>()";
    "$r4 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_1__301: java.util.function.Predicate bootstrap$()>()"->"$r10 := @caughtexception";
    "$r4 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_1__301: java.util.function.Predicate bootstrap$()>()"->"$r9 := @caughtexception";
    "$r4 = staticinvoke <org.sqlite.util.OSInfo$lambda_isMusl_1__301: java.util.function.Predicate bootstrap$()>()"->"z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)";
    "z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)"->"$r10 := @caughtexception";
    "z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)"->"$r5 := @caughtexception";
    "z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)"->"$r9 := @caughtexception";
    "z1 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4)"->"if r13 == null goto return z1";
    "if r13 == null goto return z1"->"if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r13 == null goto return z1"->"return z1";
    "if r13 == null goto return z1"->"$r5 := @caughtexception";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r11 := @caughtexception";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r11 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"goto [?= return z1]";
    "goto [?= return z1]"->"return z1";
    "goto [?= return z1]"->"$r5 := @caughtexception";
    "$r11 := @caughtexception"->"r12 = $r11";
    "$r11 := @caughtexception"->"$r5 := @caughtexception";
    "r12 = $r11"->"virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12)";
    "r12 = $r11"->"$r5 := @caughtexception";
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12)"->"goto [?= return z1]";
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12)"->"$r5 := @caughtexception";
    "goto [?= return z1]"->"return z1";
    "goto [?= return z1]"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"return z1";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "$r10 := @caughtexception"->"r15 = $r10";
    "$r10 := @caughtexception"->"$r9 := @caughtexception";
    "r15 = $r10"->"r14 = r15";
    "r15 = $r10"->"$r9 := @caughtexception";
    "r14 = r15"->"throw r15";
    "r14 = r15"->"$r9 := @caughtexception";
    "throw r15"->"$r9 := @caughtexception";
    "$r9 := @caughtexception"->"r8 = $r9";
    "$r9 := @caughtexception"->"$r9 := @caughtexception";
    "r8 = $r9"->"$r9 := @caughtexception";
    "r8 = $r9"->"$r5 := @caughtexception";
    "r8 = $r9"->"if r13 == null goto throw r8";
    "if r13 == null goto throw r8"->"if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r13 == null goto throw r8"->"throw r8";
    "if r13 == null goto throw r8"->"$r5 := @caughtexception";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r13.<java.util.stream.Stream: void close()>()";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r6 := @caughtexception";
    "if r14 == null goto interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r6 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"goto [?= throw r8]";
    "goto [?= throw r8]"->"throw r8";
    "goto [?= throw r8]"->"$r5 := @caughtexception";
    "$r6 := @caughtexception"->"r7 = $r6";
    "$r6 := @caughtexception"->"$r5 := @caughtexception";
    "r7 = $r6"->"virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7)";
    "r7 = $r6"->"$r5 := @caughtexception";
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7)"->"goto [?= throw r8]";
    "virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7)"->"$r5 := @caughtexception";
    "goto [?= throw r8]"->"throw r8";
    "goto [?= throw r8]"->"$r5 := @caughtexception";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"throw r8";
    "interfaceinvoke r13.<java.util.stream.Stream: void close()>()"->"$r5 := @caughtexception";
    "throw r8"->"$r5 := @caughtexception";
    "$r5 := @caughtexception"->"r16 = $r5";
    "r16 = $r5"->"$z0 = staticinvoke <org.sqlite.util.OSInfo: boolean isAlpineLinux()>()";
    "$z0 = staticinvoke <org.sqlite.util.OSInfo: boolean isAlpineLinux()>()"->"return $z0";
}
