digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <org.sqlite.util.OSInfo: org.sqlite.util.ProcessRunner processRunner>;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = virtualinvoke $r0.<org.sqlite.util.ProcessRunner: java.lang.String runAndWaitFor(java.lang.String)>(\"uname -m\");
"
    "Block 2:
[preds: 1 ] [succs: ]
return $r1;
"
    "Block 3:
[preds: 0 1 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
$r4 = staticinvoke <org.sqlite.util.OSInfo$LogHolder: org.slf4j.Logger access$000()>();
interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(\"Error while running uname -m\", r3);
return \"unknown\";
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <org.sqlite.util.OSInfo: org.sqlite.util.ProcessRunner processRunner>;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = virtualinvoke $r0.<org.sqlite.util.ProcessRunner: java.lang.String runAndWaitFor(java.lang.String)>(\"uname -m\");
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r0 = <org.sqlite.util.OSInfo: org.sqlite.util.ProcessRunner processRunner>;
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
$r4 = staticinvoke <org.sqlite.util.OSInfo$LogHolder: org.slf4j.Logger access$000()>();
interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(\"Error while running uname -m\", r3);
return \"unknown\";
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = virtualinvoke $r0.<org.sqlite.util.ProcessRunner: java.lang.String runAndWaitFor(java.lang.String)>(\"uname -m\");
"->"Block 2:
[preds: 1 ] [succs: ]
return $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r1 = virtualinvoke $r0.<org.sqlite.util.ProcessRunner: java.lang.String runAndWaitFor(java.lang.String)>(\"uname -m\");
"->"Block 3:
[preds: 0 1 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
$r4 = staticinvoke <org.sqlite.util.OSInfo$LogHolder: org.slf4j.Logger access$000()>();
interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(\"Error while running uname -m\", r3);
return \"unknown\";
";
}
