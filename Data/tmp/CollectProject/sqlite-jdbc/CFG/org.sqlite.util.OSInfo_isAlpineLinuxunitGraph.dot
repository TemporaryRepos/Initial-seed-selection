digraph "unitGraph" {
    "$r0 = newarray (java.lang.String)[0]"
    "$r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/etc/os-release\", $r0)"
    "r11 = staticinvoke <java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path)>($r1)"
    "r12 = null"
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isAlpineLinux_2__302: java.util.function.Predicate bootstrap$()>()"
    "z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)"
    "if r11 == null goto return z0"
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"
    "goto [?= return z0]"
    "$r9 := @caughtexception"
    "r10 = $r9"
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"
    "return z0"
    "$r8 := @caughtexception"
    "r13 = $r8"
    "r12 = r13"
    "throw r13"
    "$r7 := @caughtexception"
    "r6 = $r7"
    "if r11 == null goto throw r6"
    "goto [?= throw r6]"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5)"
    "throw r6"
    "$r3 := @caughtexception"
    "r14 = $r3"
    "return 0"
    "$r0 = newarray (java.lang.String)[0]"->"$r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/etc/os-release\", $r0)";
    "$r0 = newarray (java.lang.String)[0]"->"$r3 := @caughtexception";
    "$r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/etc/os-release\", $r0)"->"r11 = staticinvoke <java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path)>($r1)";
    "$r1 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(\"/etc/os-release\", $r0)"->"$r3 := @caughtexception";
    "r11 = staticinvoke <java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path)>($r1)"->"r12 = null";
    "r11 = staticinvoke <java.nio.file.Files: java.util.stream.Stream lines(java.nio.file.Path)>($r1)"->"$r3 := @caughtexception";
    "r12 = null"->"$r8 := @caughtexception";
    "r12 = null"->"$r3 := @caughtexception";
    "r12 = null"->"$r7 := @caughtexception";
    "r12 = null"->"$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isAlpineLinux_2__302: java.util.function.Predicate bootstrap$()>()";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isAlpineLinux_2__302: java.util.function.Predicate bootstrap$()>()"->"$r8 := @caughtexception";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isAlpineLinux_2__302: java.util.function.Predicate bootstrap$()>()"->"$r7 := @caughtexception";
    "$r2 = staticinvoke <org.sqlite.util.OSInfo$lambda_isAlpineLinux_2__302: java.util.function.Predicate bootstrap$()>()"->"z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)";
    "z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)"->"$r8 := @caughtexception";
    "z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)"->"$r3 := @caughtexception";
    "z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)"->"$r7 := @caughtexception";
    "z0 = interfaceinvoke r11.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r2)"->"if r11 == null goto return z0";
    "if r11 == null goto return z0"->"if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r11 == null goto return z0"->"return z0";
    "if r11 == null goto return z0"->"$r3 := @caughtexception";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r9 := @caughtexception";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r9 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"goto [?= return z0]";
    "goto [?= return z0]"->"return z0";
    "goto [?= return z0]"->"$r3 := @caughtexception";
    "$r9 := @caughtexception"->"r10 = $r9";
    "$r9 := @caughtexception"->"$r3 := @caughtexception";
    "r10 = $r9"->"virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)";
    "r10 = $r9"->"$r3 := @caughtexception";
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"->"goto [?= return z0]";
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r10)"->"$r3 := @caughtexception";
    "goto [?= return z0]"->"return z0";
    "goto [?= return z0]"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"return z0";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "$r8 := @caughtexception"->"r13 = $r8";
    "$r8 := @caughtexception"->"$r7 := @caughtexception";
    "r13 = $r8"->"r12 = r13";
    "r13 = $r8"->"$r7 := @caughtexception";
    "r12 = r13"->"throw r13";
    "r12 = r13"->"$r7 := @caughtexception";
    "throw r13"->"$r7 := @caughtexception";
    "$r7 := @caughtexception"->"r6 = $r7";
    "$r7 := @caughtexception"->"$r7 := @caughtexception";
    "r6 = $r7"->"$r7 := @caughtexception";
    "r6 = $r7"->"$r3 := @caughtexception";
    "r6 = $r7"->"if r11 == null goto throw r6";
    "if r11 == null goto throw r6"->"if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r11 == null goto throw r6"->"throw r6";
    "if r11 == null goto throw r6"->"$r3 := @caughtexception";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"interfaceinvoke r11.<java.util.stream.Stream: void close()>()";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r4 := @caughtexception";
    "if r12 == null goto interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r4 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"goto [?= throw r6]";
    "goto [?= throw r6]"->"throw r6";
    "goto [?= throw r6]"->"$r3 := @caughtexception";
    "$r4 := @caughtexception"->"r5 = $r4";
    "$r4 := @caughtexception"->"$r3 := @caughtexception";
    "r5 = $r4"->"virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5)";
    "r5 = $r4"->"$r3 := @caughtexception";
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5)"->"goto [?= throw r6]";
    "virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5)"->"$r3 := @caughtexception";
    "goto [?= throw r6]"->"throw r6";
    "goto [?= throw r6]"->"$r3 := @caughtexception";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"throw r6";
    "interfaceinvoke r11.<java.util.stream.Stream: void close()>()"->"$r3 := @caughtexception";
    "throw r6"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"r14 = $r3";
    "r14 = $r3"->"return 0";
}
