digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"ID\")"
    "if $z0 == 0 goto $z2 = 0"
    "$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"alpine\")"
    "if $z1 == 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= return $z2]"
    "$z2 = 0"
    "return $z2"
    "r0 := @parameter0: java.lang.String"->"$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"ID\")";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"ID\")"->"if $z0 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"alpine\")";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"alpine\")"->"if $z1 == 0 goto $z2 = 0";
    "if $z1 == 0 goto $z2 = 0"->"$z2 = 1";
    "if $z1 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= return $z2]";
    "goto [?= return $z2]"->"return $z2";
    "$z2 = 0"->"return $z2";
}
