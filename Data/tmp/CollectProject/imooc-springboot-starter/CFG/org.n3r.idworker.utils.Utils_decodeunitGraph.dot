digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String"
    "r0 := @parameter1: java.lang.String"
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "l6 = 0L"
    "r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"
    "i1 = lengthof r2"
    "i7 = 0"
    "if i7 >= i1 goto return l6"
    "c2 = r2[i7]"
    "$l3 = (long) i0"
    "l8 = l6 * $l3"
    "$i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(c2)"
    "$l5 = (long) $i4"
    "l6 = l8 + $l5"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "return l6"
    "r1 := @parameter0: java.lang.String"->"r0 := @parameter1: java.lang.String";
    "r0 := @parameter1: java.lang.String"->"i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"l6 = 0L";
    "l6 = 0L"->"r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()";
    "r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"->"i1 = lengthof r2";
    "i1 = lengthof r2"->"i7 = 0";
    "i7 = 0"->"if i7 >= i1 goto return l6";
    "if i7 >= i1 goto return l6"->"c2 = r2[i7]";
    "if i7 >= i1 goto return l6"->"return l6";
    "c2 = r2[i7]"->"$l3 = (long) i0";
    "$l3 = (long) i0"->"l8 = l6 * $l3";
    "l8 = l6 * $l3"->"$i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(c2)";
    "$i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(c2)"->"$l5 = (long) $i4";
    "$l5 = (long) $i4"->"l6 = l8 + $l5";
    "l6 = l8 + $l5"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i1 goto return l6";
}
