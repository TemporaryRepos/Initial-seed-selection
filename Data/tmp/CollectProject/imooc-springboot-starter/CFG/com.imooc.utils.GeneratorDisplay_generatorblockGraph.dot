digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r11 := @this: com.imooc.utils.GeneratorDisplay;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
z0 = 1;
$r2 = new java.io.File;
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"generatorConfig.xml\");
r3 = $r2;
$r4 = new org.mybatis.generator.config.xml.ConfigurationParser;
specialinvoke $r4.<org.mybatis.generator.config.xml.ConfigurationParser: void <init>(java.util.List)>(r1);
r5 = $r4;
r6 = virtualinvoke r5.<org.mybatis.generator.config.xml.ConfigurationParser: org.mybatis.generator.config.Configuration parseConfiguration(java.io.File)>(r3);
$r7 = new org.mybatis.generator.internal.DefaultShellCallback;
specialinvoke $r7.<org.mybatis.generator.internal.DefaultShellCallback: void <init>(boolean)>(z0);
r8 = $r7;
$r9 = new org.mybatis.generator.api.MyBatisGenerator;
specialinvoke $r9.<org.mybatis.generator.api.MyBatisGenerator: void <init>(org.mybatis.generator.config.Configuration,org.mybatis.generator.api.ShellCallback,java.util.List)>(r6, r8, r1);
r10 = $r9;
virtualinvoke r10.<org.mybatis.generator.api.MyBatisGenerator: void generate(org.mybatis.generator.api.ProgressCallback)>(null);
return;
"
}
