digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r9 = null"
    "r9 = staticinvoke <org.n3r.idworker.utils.Utils: java.io.InputStream classResourceToStream(java.lang.String)>(r0)"
    "$r1 = new java.io.BufferedReader"
    "$r2 = new java.io.InputStreamReader"
    "specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r9, \"UTF-8\")"
    "specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2)"
    "r10 = $r1"
    "r11 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>()"
    "if r9 == null goto return r11"
    "virtualinvoke r9.<java.io.InputStream: void close()>()"
    "goto [?= return r11]"
    "$r8 := @caughtexception"
    "return r11"
    "$r7 := @caughtexception"
    "if r9 == null goto return null"
    "goto [?= return null]"
    "$r6 := @caughtexception"
    "return null"
    "$r5 := @caughtexception"
    "r4 = $r5"
    "if r9 == null goto throw r4"
    "goto [?= throw r4]"
    "$r3 := @caughtexception"
    "throw r4"
    "r0 := @parameter0: java.lang.String"->"r9 = null";
    "r9 = null"->"$r7 := @caughtexception";
    "r9 = null"->"$r5 := @caughtexception";
    "r9 = null"->"r9 = staticinvoke <org.n3r.idworker.utils.Utils: java.io.InputStream classResourceToStream(java.lang.String)>(r0)";
    "r9 = staticinvoke <org.n3r.idworker.utils.Utils: java.io.InputStream classResourceToStream(java.lang.String)>(r0)"->"$r7 := @caughtexception";
    "r9 = staticinvoke <org.n3r.idworker.utils.Utils: java.io.InputStream classResourceToStream(java.lang.String)>(r0)"->"$r5 := @caughtexception";
    "r9 = staticinvoke <org.n3r.idworker.utils.Utils: java.io.InputStream classResourceToStream(java.lang.String)>(r0)"->"$r1 = new java.io.BufferedReader";
    "$r1 = new java.io.BufferedReader"->"$r7 := @caughtexception";
    "$r1 = new java.io.BufferedReader"->"$r5 := @caughtexception";
    "$r1 = new java.io.BufferedReader"->"$r2 = new java.io.InputStreamReader";
    "$r2 = new java.io.InputStreamReader"->"$r7 := @caughtexception";
    "$r2 = new java.io.InputStreamReader"->"$r5 := @caughtexception";
    "$r2 = new java.io.InputStreamReader"->"specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r9, \"UTF-8\")";
    "specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r9, \"UTF-8\")"->"$r7 := @caughtexception";
    "specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r9, \"UTF-8\")"->"$r5 := @caughtexception";
    "specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r9, \"UTF-8\")"->"specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2)";
    "specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2)"->"$r7 := @caughtexception";
    "specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2)"->"$r5 := @caughtexception";
    "specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2)"->"r10 = $r1";
    "r10 = $r1"->"$r7 := @caughtexception";
    "r10 = $r1"->"$r5 := @caughtexception";
    "r10 = $r1"->"r11 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>()";
    "r11 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r7 := @caughtexception";
    "r11 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r5 := @caughtexception";
    "r11 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>()"->"if r9 == null goto return r11";
    "if r9 == null goto return r11"->"virtualinvoke r9.<java.io.InputStream: void close()>()";
    "if r9 == null goto return r11"->"return r11";
    "if r9 == null goto return r11"->"$r8 := @caughtexception";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"goto [?= return r11]";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"$r8 := @caughtexception";
    "goto [?= return r11]"->"return r11";
    "$r8 := @caughtexception"->"return r11";
    "$r7 := @caughtexception"->"if r9 == null goto return null";
    "$r7 := @caughtexception"->"$r5 := @caughtexception";
    "if r9 == null goto return null"->"virtualinvoke r9.<java.io.InputStream: void close()>()";
    "if r9 == null goto return null"->"return null";
    "if r9 == null goto return null"->"$r6 := @caughtexception";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"goto [?= return null]";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"$r6 := @caughtexception";
    "goto [?= return null]"->"return null";
    "$r6 := @caughtexception"->"return null";
    "$r5 := @caughtexception"->"r4 = $r5";
    "$r5 := @caughtexception"->"$r5 := @caughtexception";
    "r4 = $r5"->"if r9 == null goto throw r4";
    "r4 = $r5"->"$r5 := @caughtexception";
    "if r9 == null goto throw r4"->"virtualinvoke r9.<java.io.InputStream: void close()>()";
    "if r9 == null goto throw r4"->"throw r4";
    "if r9 == null goto throw r4"->"$r3 := @caughtexception";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"goto [?= throw r4]";
    "virtualinvoke r9.<java.io.InputStream: void close()>()"->"$r3 := @caughtexception";
    "goto [?= throw r4]"->"throw r4";
    "$r3 := @caughtexception"->"throw r4";
}
