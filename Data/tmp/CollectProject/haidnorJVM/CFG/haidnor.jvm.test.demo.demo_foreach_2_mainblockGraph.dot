digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Integer) $r4;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r5);
goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto return;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Integer) $r4;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r5);
goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto return;
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Integer) $r4;
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r5);
goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto return;
";
}
