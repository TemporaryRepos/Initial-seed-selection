digraph "unitGraph" {
    "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"bcel.classloader\")"
    "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)"
    "if $z0 == 0 goto $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"
    "$r4 = new java.lang.IllegalStateException"
    "specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"The property \'bcel.classloader\' must be defined\")"
    "throw $r4"
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"
    "$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>()"
    "$r3 = (java.lang.ClassLoader) $r2"
    "return $r3"
    "$r5 := @caughtexception"
    "r6 = $r5"
    "$r7 = new java.lang.IllegalStateException"
    "$r8 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r6)"
    "throw $r7"
    "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"bcel.classloader\")"->"$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)";
    "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)"->"if $z0 == 0 goto $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)";
    "if $z0 == 0 goto $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r4 = new java.lang.IllegalStateException";
    "if $z0 == 0 goto $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)";
    "if $z0 == 0 goto $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r5 := @caughtexception";
    "$r4 = new java.lang.IllegalStateException"->"specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"The property \'bcel.classloader\' must be defined\")";
    "specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"The property \'bcel.classloader\' must be defined\")"->"throw $r4";
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>()";
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r5 := @caughtexception";
    "$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>()"->"$r3 = (java.lang.ClassLoader) $r2";
    "$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>()"->"$r5 := @caughtexception";
    "$r3 = (java.lang.ClassLoader) $r2"->"return $r3";
    "$r3 = (java.lang.ClassLoader) $r2"->"$r5 := @caughtexception";
    "$r5 := @caughtexception"->"r6 = $r5";
    "r6 = $r5"->"$r7 = new java.lang.IllegalStateException";
    "$r7 = new java.lang.IllegalStateException"->"$r8 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>()";
    "$r8 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r6)";
    "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r6)"->"throw $r7";
}
