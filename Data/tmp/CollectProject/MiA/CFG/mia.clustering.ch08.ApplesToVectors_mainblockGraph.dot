digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r43 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new org.apache.mahout.math.NamedVector;
$r3 = new org.apache.mahout.math.DenseVector;
$r4 = newarray (double)[3];
$r4[0] = 0.11;
$r4[1] = 510.0;
$r4[2] = 1.0;
specialinvoke $r3.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r4);
specialinvoke $r2.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r3, \"Small round green apple\");
r44 = $r2;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r44);
$r5 = new org.apache.mahout.math.NamedVector;
$r6 = new org.apache.mahout.math.DenseVector;
$r7 = newarray (double)[3];
$r7[0] = 0.23;
$r7[1] = 650.0;
$r7[2] = 3.0;
specialinvoke $r6.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r7);
specialinvoke $r5.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r6, \"Large oval red apple\");
r45 = $r5;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r45);
$r8 = new org.apache.mahout.math.NamedVector;
$r9 = new org.apache.mahout.math.DenseVector;
$r10 = newarray (double)[3];
$r10[0] = 0.09;
$r10[1] = 630.0;
$r10[2] = 1.0;
specialinvoke $r9.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r10);
specialinvoke $r8.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r9, \"Small elongated red apple\");
r46 = $r8;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r46);
$r11 = new org.apache.mahout.math.NamedVector;
$r12 = new org.apache.mahout.math.DenseVector;
$r13 = newarray (double)[3];
$r13[0] = 0.25;
$r13[1] = 590.0;
$r13[2] = 3.0;
specialinvoke $r12.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r13);
specialinvoke $r11.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r12, \"Large round yellow apple\");
r47 = $r11;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r47);
$r14 = new org.apache.mahout.math.NamedVector;
$r15 = new org.apache.mahout.math.DenseVector;
$r16 = newarray (double)[3];
$r16[0] = 0.18;
$r16[1] = 520.0;
$r16[2] = 2.0;
specialinvoke $r15.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r16);
specialinvoke $r14.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r15, \"Medium oval green apple\");
r48 = $r14;
$r17 = new org.apache.hadoop.conf.Configuration;
specialinvoke $r17.<org.apache.hadoop.conf.Configuration: void <init>()>();
r18 = $r17;
r19 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration)>(r18);
$r20 = new org.apache.hadoop.fs.Path;
specialinvoke $r20.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(\"appledata/apples\");
r21 = $r20;
$r22 = new org.apache.hadoop.io.SequenceFile$Writer;
specialinvoke $r22.<org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)>(r19, r18, r21, class \"Lorg/apache/hadoop/io/Text;\", class \"Lorg/apache/mahout/math/VectorWritable;\");
r23 = $r22;
$r24 = new org.apache.mahout.math.VectorWritable;
specialinvoke $r24.<org.apache.mahout.math.VectorWritable: void <init>()>();
r25 = $r24;
r49 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r40 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();
r50 = (org.apache.mahout.math.NamedVector) $r40;
virtualinvoke r25.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>(r50);
$r41 = new org.apache.hadoop.io.Text;
$r42 = virtualinvoke r50.<org.apache.mahout.math.NamedVector: java.lang.String getName()>();
specialinvoke $r41.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>($r42);
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>($r41, r25);
goto [?= $z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
$r26 = new org.apache.hadoop.io.SequenceFile$Reader;
$r27 = new org.apache.hadoop.fs.Path;
specialinvoke $r27.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(\"appledata/apples\");
specialinvoke $r26.<org.apache.hadoop.io.SequenceFile$Reader: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>(r19, $r27, r18);
r51 = $r26;
$r28 = new org.apache.hadoop.io.Text;
specialinvoke $r28.<org.apache.hadoop.io.Text: void <init>()>();
r52 = $r28;
$r29 = new org.apache.mahout.math.VectorWritable;
specialinvoke $r29.<org.apache.mahout.math.VectorWritable: void <init>()>();
r30 = $r29;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30);
if $z5 == 0 goto virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r33 = virtualinvoke r52.<org.apache.hadoop.io.Text: java.lang.String toString()>();
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r36 = virtualinvoke r30.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();
$r37 = interfaceinvoke $r36.<org.apache.mahout.math.Vector: java.lang.String asFormatString()>();
$r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r39);
goto [?= $z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30)];
"
    "Block 6:
[preds: 4 ] [succs: ]
virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r43 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new org.apache.mahout.math.NamedVector;
$r3 = new org.apache.mahout.math.DenseVector;
$r4 = newarray (double)[3];
$r4[0] = 0.11;
$r4[1] = 510.0;
$r4[2] = 1.0;
specialinvoke $r3.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r4);
specialinvoke $r2.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r3, \"Small round green apple\");
r44 = $r2;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r44);
$r5 = new org.apache.mahout.math.NamedVector;
$r6 = new org.apache.mahout.math.DenseVector;
$r7 = newarray (double)[3];
$r7[0] = 0.23;
$r7[1] = 650.0;
$r7[2] = 3.0;
specialinvoke $r6.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r7);
specialinvoke $r5.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r6, \"Large oval red apple\");
r45 = $r5;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r45);
$r8 = new org.apache.mahout.math.NamedVector;
$r9 = new org.apache.mahout.math.DenseVector;
$r10 = newarray (double)[3];
$r10[0] = 0.09;
$r10[1] = 630.0;
$r10[2] = 1.0;
specialinvoke $r9.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r10);
specialinvoke $r8.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r9, \"Small elongated red apple\");
r46 = $r8;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r46);
$r11 = new org.apache.mahout.math.NamedVector;
$r12 = new org.apache.mahout.math.DenseVector;
$r13 = newarray (double)[3];
$r13[0] = 0.25;
$r13[1] = 590.0;
$r13[2] = 3.0;
specialinvoke $r12.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r13);
specialinvoke $r11.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r12, \"Large round yellow apple\");
r47 = $r11;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r47);
$r14 = new org.apache.mahout.math.NamedVector;
$r15 = new org.apache.mahout.math.DenseVector;
$r16 = newarray (double)[3];
$r16[0] = 0.18;
$r16[1] = 520.0;
$r16[2] = 2.0;
specialinvoke $r15.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r16);
specialinvoke $r14.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r15, \"Medium oval green apple\");
r48 = $r14;
$r17 = new org.apache.hadoop.conf.Configuration;
specialinvoke $r17.<org.apache.hadoop.conf.Configuration: void <init>()>();
r18 = $r17;
r19 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration)>(r18);
$r20 = new org.apache.hadoop.fs.Path;
specialinvoke $r20.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(\"appledata/apples\");
r21 = $r20;
$r22 = new org.apache.hadoop.io.SequenceFile$Writer;
specialinvoke $r22.<org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)>(r19, r18, r21, class \"Lorg/apache/hadoop/io/Text;\", class \"Lorg/apache/mahout/math/VectorWritable;\");
r23 = $r22;
$r24 = new org.apache.mahout.math.VectorWritable;
specialinvoke $r24.<org.apache.mahout.math.VectorWritable: void <init>()>();
r25 = $r24;
r49 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r40 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();
r50 = (org.apache.mahout.math.NamedVector) $r40;
virtualinvoke r25.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>(r50);
$r41 = new org.apache.hadoop.io.Text;
$r42 = virtualinvoke r50.<org.apache.mahout.math.NamedVector: java.lang.String getName()>();
specialinvoke $r41.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>($r42);
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>($r41, r25);
goto [?= $z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
$r26 = new org.apache.hadoop.io.SequenceFile$Reader;
$r27 = new org.apache.hadoop.fs.Path;
specialinvoke $r27.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(\"appledata/apples\");
specialinvoke $r26.<org.apache.hadoop.io.SequenceFile$Reader: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>(r19, $r27, r18);
r51 = $r26;
$r28 = new org.apache.hadoop.io.Text;
specialinvoke $r28.<org.apache.hadoop.io.Text: void <init>()>();
r52 = $r28;
$r29 = new org.apache.mahout.math.VectorWritable;
specialinvoke $r29.<org.apache.mahout.math.VectorWritable: void <init>()>();
r30 = $r29;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r40 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();
r50 = (org.apache.mahout.math.NamedVector) $r40;
virtualinvoke r25.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>(r50);
$r41 = new org.apache.hadoop.io.Text;
$r42 = virtualinvoke r50.<org.apache.mahout.math.NamedVector: java.lang.String getName()>();
specialinvoke $r41.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>($r42);
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>($r41, r25);
goto [?= $z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
virtualinvoke r23.<org.apache.hadoop.io.SequenceFile$Writer: void close()>();
$r26 = new org.apache.hadoop.io.SequenceFile$Reader;
$r27 = new org.apache.hadoop.fs.Path;
specialinvoke $r27.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(\"appledata/apples\");
specialinvoke $r26.<org.apache.hadoop.io.SequenceFile$Reader: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>(r19, $r27, r18);
r51 = $r26;
$r28 = new org.apache.hadoop.io.Text;
specialinvoke $r28.<org.apache.hadoop.io.Text: void <init>()>();
r52 = $r28;
$r29 = new org.apache.mahout.math.VectorWritable;
specialinvoke $r29.<org.apache.mahout.math.VectorWritable: void <init>()>();
r30 = $r29;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30);
if $z5 == 0 goto virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30);
if $z5 == 0 goto virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r33 = virtualinvoke r52.<org.apache.hadoop.io.Text: java.lang.String toString()>();
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r36 = virtualinvoke r30.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();
$r37 = interfaceinvoke $r36.<org.apache.mahout.math.Vector: java.lang.String asFormatString()>();
$r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r39);
goto [?= $z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30);
if $z5 == 0 goto virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
"->"Block 6:
[preds: 4 ] [succs: ]
virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r32 = <java.lang.System: java.io.PrintStream out>;
$r31 = new java.lang.StringBuilder;
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
$r33 = virtualinvoke r52.<org.apache.hadoop.io.Text: java.lang.String toString()>();
$r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r36 = virtualinvoke r30.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();
$r37 = interfaceinvoke $r36.<org.apache.mahout.math.Vector: java.lang.String asFormatString()>();
$r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r39);
goto [?= $z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z5 = virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: boolean next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)>(r52, r30);
if $z5 == 0 goto virtualinvoke r51.<org.apache.hadoop.io.SequenceFile$Reader: void close()>();
";
}
