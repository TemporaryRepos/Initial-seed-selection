digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(10)"
    "$r1 = new java.util.ArrayList"
    "$i0 = lengthof r2"
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0)"
    "r3 = $r1"
    "r9 = r2"
    "i1 = lengthof r9"
    "i2 = 0"
    "if i2 >= i1 goto r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)"
    "r7 = r9[i2]"
    "$r8 = new us.monoid.web.parallel.Downloader$1"
    "specialinvoke $r8.<us.monoid.web.parallel.Downloader$1: void <init>(java.lang.String)>(r7)"
    "interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)"
    "r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return"
    "$r4 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"
    "r12 = (java.util.concurrent.Future) $r4"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r6 = interfaceinvoke r12.<java.util.concurrent.Future: java.lang.Object get()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)"
    "goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(10)";
    "r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(10)"->"$r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0)";
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0)"->"r3 = $r1";
    "r3 = $r1"->"r9 = r2";
    "r9 = r2"->"i1 = lengthof r9";
    "i1 = lengthof r9"->"i2 = 0";
    "i2 = 0"->"if i2 >= i1 goto r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)";
    "if i2 >= i1 goto r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)"->"r7 = r9[i2]";
    "if i2 >= i1 goto r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)"->"r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)";
    "r7 = r9[i2]"->"$r8 = new us.monoid.web.parallel.Downloader$1";
    "$r8 = new us.monoid.web.parallel.Downloader$1"->"specialinvoke $r8.<us.monoid.web.parallel.Downloader$1: void <init>(java.lang.String)>(r7)";
    "specialinvoke $r8.<us.monoid.web.parallel.Downloader$1: void <init>(java.lang.String)>(r7)"->"interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8)";
    "interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i1 goto r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)";
    "r10 = interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r3)"->"r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()";
    "r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r4 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return"->"return";
    "$r4 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"->"r12 = (java.util.concurrent.Future) $r4";
    "r12 = (java.util.concurrent.Future) $r4"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r6 = interfaceinvoke r12.<java.util.concurrent.Future: java.lang.Object get()>()";
    "$r6 = interfaceinvoke r12.<java.util.concurrent.Future: java.lang.Object get()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)"->"goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
}
