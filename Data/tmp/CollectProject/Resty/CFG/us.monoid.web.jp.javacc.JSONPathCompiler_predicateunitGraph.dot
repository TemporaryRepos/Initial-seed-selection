digraph "unitGraph" {
    "r2 := @this: us.monoid.web.jp.javacc.JSONPathCompiler"
    "$r0 = staticinvoke <us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.SimpleNode jjtCreate(int)>(6)"
    "r1 = (us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr) $r0"
    "z2 = 1"
    "$r3 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r3.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void openNodeScope(us.monoid.web.jp.javacc.Node)>(r1)"
    "r21 = null"
    "r22 = null"
    "r4 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"
    "$i0 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"
    "if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"
    "$i2 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk()>()"
    "goto [?= (branch)]"
    "$i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"
    "lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }"
    "r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16)"
    "r21 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"
    "goto [?= $r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>]"
    "$r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>"
    "$i1 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_gen>"
    "$r9[8] = $i1"
    "$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r5.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"
    "z2 = 0"
    "$r6 = new us.monoid.web.jp.javacc.Predicates$Operator"
    "$r7 = r22.<us.monoid.web.jp.javacc.Token: java.lang.String image>"
    "specialinvoke $r6.<us.monoid.web.jp.javacc.Predicates$Operator: void <init>(us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr,java.lang.String,us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr)>(r4, $r7, r21)"
    "r1.<us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr: java.lang.Object value> = $r6"
    "if z2 == 0 goto return"
    "$r8 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r8.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"
    "goto [?= return]"
    "$r13 := @caughtexception"
    "r14 = $r13"
    "if z2 == 0 goto $r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "$r20 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r20.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void clearNodeScope(us.monoid.web.jp.javacc.Node)>(r1)"
    "goto [?= $z0 = r14 instanceof java.lang.RuntimeException]"
    "$r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r15.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: us.monoid.web.jp.javacc.Node popNode()>()"
    "$z0 = r14 instanceof java.lang.RuntimeException"
    "if $z0 == 0 goto $z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"
    "$r19 = (java.lang.RuntimeException) r14"
    "throw $r19"
    "$z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"
    "if $z1 == 0 goto $r17 = (java.lang.Error) r14"
    "$r18 = (us.monoid.web.jp.javacc.ParseException) r14"
    "throw $r18"
    "$r17 = (java.lang.Error) r14"
    "throw $r17"
    "$r10 := @caughtexception"
    "r11 = $r10"
    "if z2 == 0 goto throw r11"
    "$r12 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"
    "virtualinvoke $r12.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"
    "throw r11"
    "return"
    "r2 := @this: us.monoid.web.jp.javacc.JSONPathCompiler"->"$r0 = staticinvoke <us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.SimpleNode jjtCreate(int)>(6)";
    "$r0 = staticinvoke <us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.SimpleNode jjtCreate(int)>(6)"->"r1 = (us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr) $r0";
    "r1 = (us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr) $r0"->"z2 = 1";
    "z2 = 1"->"$r3 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "$r3 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r3.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void openNodeScope(us.monoid.web.jp.javacc.Node)>(r1)";
    "virtualinvoke $r3.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void openNodeScope(us.monoid.web.jp.javacc.Node)>(r1)"->"r21 = null";
    "r21 = null"->"r22 = null";
    "r22 = null"->"$r13 := @caughtexception";
    "r22 = null"->"$r10 := @caughtexception";
    "r22 = null"->"r4 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()";
    "r4 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"$r13 := @caughtexception";
    "r4 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"$r10 := @caughtexception";
    "r4 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"$i0 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>";
    "$i0 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r13 := @caughtexception";
    "$i0 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r10 := @caughtexception";
    "$i0 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>";
    "if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$i2 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk()>()";
    "if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>";
    "if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r13 := @caughtexception";
    "if $i0 != -1 goto $i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r10 := @caughtexception";
    "$i2 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk()>()"->"$r13 := @caughtexception";
    "$i2 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk()>()"->"$r10 := @caughtexception";
    "$i2 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"$r13 := @caughtexception";
    "goto [?= (branch)]"->"$r10 := @caughtexception";
    "goto [?= (branch)]"->"lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }";
    "$i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r13 := @caughtexception";
    "$i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"$r10 := @caughtexception";
    "$i2 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_ntk>"->"lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }";
    "lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }"->"r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16)";
    "lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }"->"$r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>";
    "lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }"->"$r13 := @caughtexception";
    "lookupswitch($i2) {     case 16: goto r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16);     default: goto $r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>; }"->"$r10 := @caughtexception";
    "r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16)"->"$r13 := @caughtexception";
    "r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16)"->"$r10 := @caughtexception";
    "r22 = specialinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.Token jj_consume_token(int)>(16)"->"r21 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()";
    "r21 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"$r13 := @caughtexception";
    "r21 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"$r10 := @caughtexception";
    "r21 = virtualinvoke r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr primaryExpr()>()"->"goto [?= $r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>]";
    "goto [?= $r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>]"->"$r13 := @caughtexception";
    "goto [?= $r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>]"->"$r10 := @caughtexception";
    "goto [?= $r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>]"->"$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "$r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>"->"$r13 := @caughtexception";
    "$r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>"->"$r10 := @caughtexception";
    "$r9 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int[] jj_la1>"->"$i1 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_gen>";
    "$i1 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_gen>"->"$r13 := @caughtexception";
    "$i1 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_gen>"->"$r10 := @caughtexception";
    "$i1 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: int jj_gen>"->"$r9[8] = $i1";
    "$r9[8] = $i1"->"$r13 := @caughtexception";
    "$r9[8] = $i1"->"$r10 := @caughtexception";
    "$r9[8] = $i1"->"$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r13 := @caughtexception";
    "$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r10 := @caughtexception";
    "$r5 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r5.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)";
    "virtualinvoke $r5.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"->"$r13 := @caughtexception";
    "virtualinvoke $r5.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"->"$r10 := @caughtexception";
    "virtualinvoke $r5.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"->"z2 = 0";
    "z2 = 0"->"$r13 := @caughtexception";
    "z2 = 0"->"$r10 := @caughtexception";
    "z2 = 0"->"$r6 = new us.monoid.web.jp.javacc.Predicates$Operator";
    "$r6 = new us.monoid.web.jp.javacc.Predicates$Operator"->"$r13 := @caughtexception";
    "$r6 = new us.monoid.web.jp.javacc.Predicates$Operator"->"$r10 := @caughtexception";
    "$r6 = new us.monoid.web.jp.javacc.Predicates$Operator"->"$r7 = r22.<us.monoid.web.jp.javacc.Token: java.lang.String image>";
    "$r7 = r22.<us.monoid.web.jp.javacc.Token: java.lang.String image>"->"$r13 := @caughtexception";
    "$r7 = r22.<us.monoid.web.jp.javacc.Token: java.lang.String image>"->"$r10 := @caughtexception";
    "$r7 = r22.<us.monoid.web.jp.javacc.Token: java.lang.String image>"->"specialinvoke $r6.<us.monoid.web.jp.javacc.Predicates$Operator: void <init>(us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr,java.lang.String,us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr)>(r4, $r7, r21)";
    "specialinvoke $r6.<us.monoid.web.jp.javacc.Predicates$Operator: void <init>(us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr,java.lang.String,us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr)>(r4, $r7, r21)"->"$r13 := @caughtexception";
    "specialinvoke $r6.<us.monoid.web.jp.javacc.Predicates$Operator: void <init>(us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr,java.lang.String,us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr)>(r4, $r7, r21)"->"$r10 := @caughtexception";
    "specialinvoke $r6.<us.monoid.web.jp.javacc.Predicates$Operator: void <init>(us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr,java.lang.String,us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr)>(r4, $r7, r21)"->"r1.<us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr: java.lang.Object value> = $r6";
    "r1.<us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr: java.lang.Object value> = $r6"->"$r13 := @caughtexception";
    "r1.<us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr: java.lang.Object value> = $r6"->"$r10 := @caughtexception";
    "r1.<us.monoid.web.jp.javacc.JSONPathCompiler$JSONPathExpr: java.lang.Object value> = $r6"->"if z2 == 0 goto return";
    "if z2 == 0 goto return"->"$r8 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "if z2 == 0 goto return"->"return";
    "$r8 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r8.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)";
    "virtualinvoke $r8.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r13 := @caughtexception"->"r14 = $r13";
    "$r13 := @caughtexception"->"$r10 := @caughtexception";
    "r14 = $r13"->"if z2 == 0 goto $r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "r14 = $r13"->"$r10 := @caughtexception";
    "if z2 == 0 goto $r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r20 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "if z2 == 0 goto $r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "if z2 == 0 goto $r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r10 := @caughtexception";
    "$r20 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r20.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void clearNodeScope(us.monoid.web.jp.javacc.Node)>(r1)";
    "$r20 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r10 := @caughtexception";
    "virtualinvoke $r20.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void clearNodeScope(us.monoid.web.jp.javacc.Node)>(r1)"->"z2 = 0";
    "virtualinvoke $r20.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void clearNodeScope(us.monoid.web.jp.javacc.Node)>(r1)"->"$r10 := @caughtexception";
    "z2 = 0"->"goto [?= $z0 = r14 instanceof java.lang.RuntimeException]";
    "z2 = 0"->"$r10 := @caughtexception";
    "goto [?= $z0 = r14 instanceof java.lang.RuntimeException]"->"$z0 = r14 instanceof java.lang.RuntimeException";
    "goto [?= $z0 = r14 instanceof java.lang.RuntimeException]"->"$r10 := @caughtexception";
    "$r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r15.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: us.monoid.web.jp.javacc.Node popNode()>()";
    "$r15 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"$r10 := @caughtexception";
    "virtualinvoke $r15.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: us.monoid.web.jp.javacc.Node popNode()>()"->"$z0 = r14 instanceof java.lang.RuntimeException";
    "virtualinvoke $r15.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: us.monoid.web.jp.javacc.Node popNode()>()"->"$r10 := @caughtexception";
    "$z0 = r14 instanceof java.lang.RuntimeException"->"if $z0 == 0 goto $z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException";
    "$z0 = r14 instanceof java.lang.RuntimeException"->"$r10 := @caughtexception";
    "if $z0 == 0 goto $z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"->"$r19 = (java.lang.RuntimeException) r14";
    "if $z0 == 0 goto $z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"->"$z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException";
    "if $z0 == 0 goto $z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"->"$r10 := @caughtexception";
    "$r19 = (java.lang.RuntimeException) r14"->"throw $r19";
    "$r19 = (java.lang.RuntimeException) r14"->"$r10 := @caughtexception";
    "throw $r19"->"$r10 := @caughtexception";
    "$z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"->"if $z1 == 0 goto $r17 = (java.lang.Error) r14";
    "$z1 = r14 instanceof us.monoid.web.jp.javacc.ParseException"->"$r10 := @caughtexception";
    "if $z1 == 0 goto $r17 = (java.lang.Error) r14"->"$r18 = (us.monoid.web.jp.javacc.ParseException) r14";
    "if $z1 == 0 goto $r17 = (java.lang.Error) r14"->"$r17 = (java.lang.Error) r14";
    "if $z1 == 0 goto $r17 = (java.lang.Error) r14"->"$r10 := @caughtexception";
    "$r18 = (us.monoid.web.jp.javacc.ParseException) r14"->"throw $r18";
    "$r18 = (us.monoid.web.jp.javacc.ParseException) r14"->"$r10 := @caughtexception";
    "throw $r18"->"$r10 := @caughtexception";
    "$r17 = (java.lang.Error) r14"->"throw $r17";
    "$r17 = (java.lang.Error) r14"->"$r10 := @caughtexception";
    "throw $r17"->"$r10 := @caughtexception";
    "$r10 := @caughtexception"->"r11 = $r10";
    "$r10 := @caughtexception"->"$r10 := @caughtexception";
    "r11 = $r10"->"if z2 == 0 goto throw r11";
    "r11 = $r10"->"$r10 := @caughtexception";
    "if z2 == 0 goto throw r11"->"$r12 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>";
    "if z2 == 0 goto throw r11"->"throw r11";
    "$r12 = r2.<us.monoid.web.jp.javacc.JSONPathCompiler: us.monoid.web.jp.javacc.JJTJSONPathCompilerState jjtree>"->"virtualinvoke $r12.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)";
    "virtualinvoke $r12.<us.monoid.web.jp.javacc.JJTJSONPathCompilerState: void closeNodeScope(us.monoid.web.jp.javacc.Node,boolean)>(r1, 1)"->"throw r11";
}
