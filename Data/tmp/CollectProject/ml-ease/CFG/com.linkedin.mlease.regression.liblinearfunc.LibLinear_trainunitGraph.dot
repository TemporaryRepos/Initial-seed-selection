digraph "unitGraph" {
    "r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinear"
    "r1 := @parameter0: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset"
    "d0 := @parameter1: double"
    "r2 := @parameter2: java.lang.String"
    "virtualinvoke r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: void train(com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset,java.util.Map,java.util.Map,java.util.Map,double,java.lang.String)>(r1, null, null, null, d0, r2)"
    "return"
    "r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinear"->"r1 := @parameter0: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset";
    "r1 := @parameter0: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset"->"d0 := @parameter1: double";
    "d0 := @parameter1: double"->"r2 := @parameter2: java.lang.String";
    "r2 := @parameter2: java.lang.String"->"virtualinvoke r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: void train(com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset,java.util.Map,java.util.Map,java.util.Map,double,java.lang.String)>(r1, null, null, null, d0, r2)";
    "virtualinvoke r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: void train(com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset,java.util.Map,java.util.Map,java.util.Map,double,java.lang.String)>(r1, null, null, null, d0, r2)"->"return";
}
