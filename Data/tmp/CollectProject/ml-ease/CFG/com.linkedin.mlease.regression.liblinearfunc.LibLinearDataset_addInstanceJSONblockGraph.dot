digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: boolean finished>;
if $z0 == 0 goto i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"
    "Block 1:
[preds: 0 ] [succs: ]
$r64 = new java.io.IOException;
specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(\"Cannot add instances to a finished dataset.\");
throw $r64;
"
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i21 == 1 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i21 == 0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i21 == -1 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r58 = new java.io.IOException;
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response = \");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (only 1, 0, -1 are allowed)\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>($r63);
throw $r58;
"
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
i21 = -1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d2 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d2 cmpl 1.0;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d2 cmpl 1.0;
if $b0 == 0 goto d3 = 0.0;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b17 = d2 cmpg 0.0;
if $b17 >= 0 goto $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r52 = new java.io.IOException;
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weight = \");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (weight cannot < 0)\");
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r52.<java.io.IOException: void <init>(java.lang.String)>($r57);
throw $r52;
"
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$i18 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i19 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
$i20 = $i19 - 1;
if $i18 >= $i20 goto $r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"
    "Block 14:
[preds: 13 ] [succs: 13 ]
$r50 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r51 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);
goto [?= $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>];
"
    "Block 15:
[preds: 13 ] [succs: 16 ]
$r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r48.<java.util.ArrayList: boolean add(java.lang.Object)>($r49);
"
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d3 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d3 cmpl 0.0;
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
"
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d3 cmpl 0.0;
if $b1 == 0 goto r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$i14 = virtualinvoke $r40.<java.util.ArrayList: int size()>();
$r41 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i15 = virtualinvoke $r41.<java.util.ArrayList: int size()>();
$i16 = $i15 - 1;
if $i14 >= $i16 goto $r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
"
    "Block 20:
[preds: 19 ] [succs: 19 ]
$r44 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);
goto [?= $r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>];
"
    "Block 21:
[preds: 19 ] [succs: 22 ]
$r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r43 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);
virtualinvoke $r42.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);
"
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r65 != null goto $z4 = r65 instanceof java.util.List;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r39 = new java.io.IOException;
specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>(\"features is null\");
throw $r39;
"
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r65 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r65;
"
    "Block 25:
[preds: 24 ] [succs: ]
$r38 = new java.io.IOException;
specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>(\"features is not a list\");
throw $r38;
"
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r65;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
"
    "Block 27:
[preds: 26 ] [succs: 29 ]
$i13 = i2 + 1;
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[$i13];
goto [?= i22 = 0];
"
    "Block 28:
[preds: 26 ] [succs: 29 ]
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
"
    "Block 29:
[preds: 27 28 ] [succs: 30 ]
i22 = 0;
"
    "Block 30:
[preds: 29 47 ] [succs: 31 48 ]
if i22 >= i2 goto (branch);
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r67 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i22);
$z6 = r67 instanceof java.util.Map;
if $z6 != 0 goto r7 = (java.util.Map) r67;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r32 = new java.io.IOException;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"features[\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] is not a map\");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r37);
throw $r32;
"
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r7 = (java.util.Map) r67;
r68 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"term\", 1);
$r9 = \"\";
$z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z7 != 0 goto d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
"
    "Block 34:
[preds: 33 ] [succs: 35 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r68 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
"
    "Block 36:
[preds: 35 ] [succs: 37 ]
$r27 = new java.util.HashMap;
specialinvoke $r27.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex> = $r27;
"
    "Block 37:
[preds: 35 36 ] [succs: 38 39 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"
    "Block 38:
[preds: 37 ] [succs: 39 ]
$r26 = new java.util.ArrayList;
specialinvoke $r26.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName> = $r26;
"
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i4 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i4 == $i5 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"
    "Block 40:
[preds: 39 ] [succs: ]
$r25 = new java.io.IOException;
specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>(\"featureIndex.size() != featureName.size()\");
throw $r25;
"
    "Block 41:
[preds: 39 ] [succs: 42 47 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r68);
r69 = (java.lang.Integer) $r15;
if r69 != null goto $r16 = new de.bwaldvogel.liblinear.FeatureNode;
"
    "Block 42:
[preds: 41 ] [succs: 43 44 ]
$r17 = \"(INTERCEPT)\";
$z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r68);
if $z8 == 0 goto $i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"
    "Block 43:
[preds: 42 ] [succs: ]
$r24 = new java.io.IOException;
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>(\"feature name cannot be (INTERCEPT)\");
throw $r24;
"
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
$i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$i8 = $i7 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex> = $i8;
$r18 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i9 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r68, $r19);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r68);
$r22 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r22.<java.util.ArrayList: int size()>();
$i11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
if $i10 == $i11 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"
    "Block 45:
[preds: 44 ] [succs: ]
$r23 = new java.io.IOException;
specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>(\"featureName.size() != maxFeatureIndex\");
throw $r23;
"
    "Block 46:
[preds: 44 ] [succs: 47 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);
"
    "Block 47:
[preds: 41 46 ] [succs: 30 ]
$r16 = new de.bwaldvogel.liblinear.FeatureNode;
$i6 = virtualinvoke r69.<java.lang.Integer: int intValue()>();
specialinvoke $r16.<de.bwaldvogel.liblinear.FeatureNode: void <init>(int,double)>($i6, d1);
r66[i22] = $r16;
i22 = i22 + 1;
goto [?= (branch)];
"
    "Block 48:
[preds: 30 ] [succs: 49 50 ]
if i2 <= 1 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
"
    "Block 49:
[preds: 48 ] [succs: 50 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: com.linkedin.mlease.regression.liblinearfunc.FeatureNodeComparator featureNodeCmp>;
staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r66, 0, i2, $r6);
"
    "Block 50:
[preds: 48 49 ] [succs: ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r66);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: boolean finished>;
if $z0 == 0 goto i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"->"Block 1:
[preds: 0 ] [succs: ]
$r64 = new java.io.IOException;
specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(\"Cannot add instances to a finished dataset.\");
throw $r64;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: boolean finished>;
if $z0 == 0 goto i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"->"Block 2:
[preds: 0 ] [succs: 3 6 ]
i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i21 == 1 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i21 == 1 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
if i21 == 0 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i21 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i21 == 1 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i21 == 0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
if i21 == -1 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i21 == 0 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i21 == -1 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: ]
$r58 = new java.io.IOException;
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response = \");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (only 1, 0, -1 are allowed)\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>($r63);
throw $r58;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i21 == -1 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
";
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
i21 = -1;
";
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i21 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d2 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d2 cmpl 1.0;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
i21 = -1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d2 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d2 cmpl 1.0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d2 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d2 cmpl 1.0;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d2 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d2 cmpl 1.0;
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d2 cmpl 1.0;
if $b0 == 0 goto d3 = 0.0;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d2 cmpl 1.0;
if $b0 == 0 goto d3 = 0.0;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d2 cmpl 1.0;
if $b0 == 0 goto d3 = 0.0;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$b17 = d2 cmpg 0.0;
if $b17 >= 0 goto $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d2 cmpl 1.0;
if $b0 == 0 goto d3 = 0.0;
"->"Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d3 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d3 cmpl 0.0;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b17 = d2 cmpg 0.0;
if $b17 >= 0 goto $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"->"Block 12:
[preds: 11 ] [succs: ]
$r52 = new java.io.IOException;
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weight = \");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (weight cannot < 0)\");
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r52.<java.io.IOException: void <init>(java.lang.String)>($r57);
throw $r52;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b17 = d2 cmpg 0.0;
if $b17 >= 0 goto $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"->"Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$i18 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i19 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
$i20 = $i19 - 1;
if $i18 >= $i20 goto $r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
";
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$i18 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i19 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
$i20 = $i19 - 1;
if $i18 >= $i20 goto $r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"->"Block 14:
[preds: 13 ] [succs: 13 ]
$r50 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r51 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);
goto [?= $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>];
";
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$i18 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i19 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
$i20 = $i19 - 1;
if $i18 >= $i20 goto $r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
"->"Block 15:
[preds: 13 ] [succs: 16 ]
$r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r48.<java.util.ArrayList: boolean add(java.lang.Object)>($r49);
";
    "Block 14:
[preds: 13 ] [succs: 13 ]
$r50 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r51 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);
goto [?= $r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>];
"->"Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$i18 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i19 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
$i20 = $i19 - 1;
if $i18 >= $i20 goto $r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
";
    "Block 15:
[preds: 13 ] [succs: 16 ]
$r48 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList weight_temp>;
$r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r48.<java.util.ArrayList: boolean add(java.lang.Object)>($r49);
"->"Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d3 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d3 cmpl 0.0;
";
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d3 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d3 cmpl 0.0;
"->"Block 17:
[preds: 16 ] [succs: 18 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
";
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d3 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d3 cmpl 0.0;
"->"Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d3 cmpl 0.0;
if $b1 == 0 goto r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
"->"Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d3 cmpl 0.0;
if $b1 == 0 goto r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
";
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d3 cmpl 0.0;
if $b1 == 0 goto r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"->"Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$i14 = virtualinvoke $r40.<java.util.ArrayList: int size()>();
$r41 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i15 = virtualinvoke $r41.<java.util.ArrayList: int size()>();
$i16 = $i15 - 1;
if $i14 >= $i16 goto $r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d3 cmpl 0.0;
if $b1 == 0 goto r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"->"Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r65 != null goto $z4 = r65 instanceof java.util.List;
";
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$i14 = virtualinvoke $r40.<java.util.ArrayList: int size()>();
$r41 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i15 = virtualinvoke $r41.<java.util.ArrayList: int size()>();
$i16 = $i15 - 1;
if $i14 >= $i16 goto $r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
"->"Block 20:
[preds: 19 ] [succs: 19 ]
$r44 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);
goto [?= $r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>];
";
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$i14 = virtualinvoke $r40.<java.util.ArrayList: int size()>();
$r41 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i15 = virtualinvoke $r41.<java.util.ArrayList: int size()>();
$i16 = $i15 - 1;
if $i14 >= $i16 goto $r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
"->"Block 21:
[preds: 19 ] [succs: 22 ]
$r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r43 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);
virtualinvoke $r42.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);
";
    "Block 20:
[preds: 19 ] [succs: 19 ]
$r44 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);
goto [?= $r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>];
"->"Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r40 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$i14 = virtualinvoke $r40.<java.util.ArrayList: int size()>();
$r41 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList y_temp>;
$i15 = virtualinvoke $r41.<java.util.ArrayList: int size()>();
$i16 = $i15 - 1;
if $i14 >= $i16 goto $r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
";
    "Block 21:
[preds: 19 ] [succs: 22 ]
$r42 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList offset_temp>;
$r43 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);
virtualinvoke $r42.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);
"->"Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r65 != null goto $z4 = r65 instanceof java.util.List;
";
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r65 != null goto $z4 = r65 instanceof java.util.List;
"->"Block 23:
[preds: 22 ] [succs: ]
$r39 = new java.io.IOException;
specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>(\"features is null\");
throw $r39;
";
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r65 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r65 != null goto $z4 = r65 instanceof java.util.List;
"->"Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r65 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r65;
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r65 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r65;
"->"Block 25:
[preds: 24 ] [succs: ]
$r38 = new java.io.IOException;
specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>(\"features is not a list\");
throw $r38;
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r65 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r65;
"->"Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r65;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r65;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
"->"Block 27:
[preds: 26 ] [succs: 29 ]
$i13 = i2 + 1;
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[$i13];
goto [?= i22 = 0];
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r65;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
"->"Block 28:
[preds: 26 ] [succs: 29 ]
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
";
    "Block 27:
[preds: 26 ] [succs: 29 ]
$i13 = i2 + 1;
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[$i13];
goto [?= i22 = 0];
"->"Block 29:
[preds: 27 28 ] [succs: 30 ]
i22 = 0;
";
    "Block 28:
[preds: 26 ] [succs: 29 ]
r66 = newarray (de.bwaldvogel.liblinear.FeatureNode)[i2];
"->"Block 29:
[preds: 27 28 ] [succs: 30 ]
i22 = 0;
";
    "Block 29:
[preds: 27 28 ] [succs: 30 ]
i22 = 0;
"->"Block 30:
[preds: 29 47 ] [succs: 31 48 ]
if i22 >= i2 goto (branch);
";
    "Block 30:
[preds: 29 47 ] [succs: 31 48 ]
if i22 >= i2 goto (branch);
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
r67 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i22);
$z6 = r67 instanceof java.util.Map;
if $z6 != 0 goto r7 = (java.util.Map) r67;
";
    "Block 30:
[preds: 29 47 ] [succs: 31 48 ]
if i22 >= i2 goto (branch);
"->"Block 48:
[preds: 30 ] [succs: 49 50 ]
if i2 <= 1 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r67 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i22);
$z6 = r67 instanceof java.util.Map;
if $z6 != 0 goto r7 = (java.util.Map) r67;
"->"Block 32:
[preds: 31 ] [succs: ]
$r32 = new java.io.IOException;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"features[\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] is not a map\");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r37);
throw $r32;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r67 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i22);
$z6 = r67 instanceof java.util.Map;
if $z6 != 0 goto r7 = (java.util.Map) r67;
"->"Block 33:
[preds: 31 ] [succs: 34 35 ]
r7 = (java.util.Map) r67;
r68 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"term\", 1);
$r9 = \"\";
$z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z7 != 0 goto d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
";
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r7 = (java.util.Map) r67;
r68 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"term\", 1);
$r9 = \"\";
$z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z7 != 0 goto d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
"->"Block 34:
[preds: 33 ] [succs: 35 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r68 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r7 = (java.util.Map) r67;
r68 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r7, \"term\", 1);
$r9 = \"\";
$z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z7 != 0 goto d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
";
    "Block 34:
[preds: 33 ] [succs: 35 ]
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r68 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
"->"Block 36:
[preds: 35 ] [succs: 37 ]
$r27 = new java.util.HashMap;
specialinvoke $r27.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex> = $r27;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r7, \"value\");
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
"->"Block 37:
[preds: 35 36 ] [succs: 38 39 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
";
    "Block 36:
[preds: 35 ] [succs: 37 ]
$r27 = new java.util.HashMap;
specialinvoke $r27.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex> = $r27;
"->"Block 37:
[preds: 35 36 ] [succs: 38 39 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
";
    "Block 37:
[preds: 35 36 ] [succs: 38 39 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"->"Block 38:
[preds: 37 ] [succs: 39 ]
$r26 = new java.util.ArrayList;
specialinvoke $r26.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName> = $r26;
";
    "Block 37:
[preds: 35 36 ] [succs: 38 39 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"->"Block 39:
[preds: 37 38 ] [succs: 40 41 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i4 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i4 == $i5 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
";
    "Block 38:
[preds: 37 ] [succs: 39 ]
$r26 = new java.util.ArrayList;
specialinvoke $r26.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName> = $r26;
"->"Block 39:
[preds: 37 38 ] [succs: 40 41 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i4 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i4 == $i5 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
";
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i4 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i4 == $i5 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"->"Block 40:
[preds: 39 ] [succs: ]
$r25 = new java.io.IOException;
specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>(\"featureIndex.size() != featureName.size()\");
throw $r25;
";
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i4 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i4 == $i5 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
"->"Block 41:
[preds: 39 ] [succs: 42 47 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r68);
r69 = (java.lang.Integer) $r15;
if r69 != null goto $r16 = new de.bwaldvogel.liblinear.FeatureNode;
";
    "Block 41:
[preds: 39 ] [succs: 42 47 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r68);
r69 = (java.lang.Integer) $r15;
if r69 != null goto $r16 = new de.bwaldvogel.liblinear.FeatureNode;
"->"Block 42:
[preds: 41 ] [succs: 43 44 ]
$r17 = \"(INTERCEPT)\";
$z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r68);
if $z8 == 0 goto $i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
";
    "Block 41:
[preds: 39 ] [succs: 42 47 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r68);
r69 = (java.lang.Integer) $r15;
if r69 != null goto $r16 = new de.bwaldvogel.liblinear.FeatureNode;
"->"Block 47:
[preds: 41 46 ] [succs: 30 ]
$r16 = new de.bwaldvogel.liblinear.FeatureNode;
$i6 = virtualinvoke r69.<java.lang.Integer: int intValue()>();
specialinvoke $r16.<de.bwaldvogel.liblinear.FeatureNode: void <init>(int,double)>($i6, d1);
r66[i22] = $r16;
i22 = i22 + 1;
goto [?= (branch)];
";
    "Block 42:
[preds: 41 ] [succs: 43 44 ]
$r17 = \"(INTERCEPT)\";
$z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r68);
if $z8 == 0 goto $i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"->"Block 43:
[preds: 42 ] [succs: ]
$r24 = new java.io.IOException;
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>(\"feature name cannot be (INTERCEPT)\");
throw $r24;
";
    "Block 42:
[preds: 41 ] [succs: 43 44 ]
$r17 = \"(INTERCEPT)\";
$z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r68);
if $z8 == 0 goto $i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"->"Block 44:
[preds: 42 ] [succs: 45 46 ]
$i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$i8 = $i7 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex> = $i8;
$r18 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i9 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r68, $r19);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r68);
$r22 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r22.<java.util.ArrayList: int size()>();
$i11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
if $i10 == $i11 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
";
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
$i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$i8 = $i7 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex> = $i8;
$r18 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i9 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r68, $r19);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r68);
$r22 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r22.<java.util.ArrayList: int size()>();
$i11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
if $i10 == $i11 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"->"Block 45:
[preds: 44 ] [succs: ]
$r23 = new java.io.IOException;
specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>(\"featureName.size() != maxFeatureIndex\");
throw $r23;
";
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
$i7 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$i8 = $i7 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex> = $i8;
$r18 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.HashMap featureIndex>;
$i9 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r68, $r19);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r68);
$r22 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r22.<java.util.ArrayList: int size()>();
$i11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
if $i10 == $i11 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
"->"Block 46:
[preds: 44 ] [succs: 47 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);
";
    "Block 46:
[preds: 44 ] [succs: 47 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: int maxFeatureIndex>;
r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);
"->"Block 47:
[preds: 41 46 ] [succs: 30 ]
$r16 = new de.bwaldvogel.liblinear.FeatureNode;
$i6 = virtualinvoke r69.<java.lang.Integer: int intValue()>();
specialinvoke $r16.<de.bwaldvogel.liblinear.FeatureNode: void <init>(int,double)>($i6, d1);
r66[i22] = $r16;
i22 = i22 + 1;
goto [?= (branch)];
";
    "Block 47:
[preds: 41 46 ] [succs: 30 ]
$r16 = new de.bwaldvogel.liblinear.FeatureNode;
$i6 = virtualinvoke r69.<java.lang.Integer: int intValue()>();
specialinvoke $r16.<de.bwaldvogel.liblinear.FeatureNode: void <init>(int,double)>($i6, d1);
r66[i22] = $r16;
i22 = i22 + 1;
goto [?= (branch)];
"->"Block 30:
[preds: 29 47 ] [succs: 31 48 ]
if i22 >= i2 goto (branch);
";
    "Block 48:
[preds: 30 ] [succs: 49 50 ]
if i2 <= 1 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
"->"Block 49:
[preds: 48 ] [succs: 50 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: com.linkedin.mlease.regression.liblinearfunc.FeatureNodeComparator featureNodeCmp>;
staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r66, 0, i2, $r6);
";
    "Block 48:
[preds: 30 ] [succs: 49 50 ]
if i2 <= 1 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
"->"Block 50:
[preds: 48 49 ] [succs: ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r66);
return;
";
    "Block 49:
[preds: 48 ] [succs: 50 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: com.linkedin.mlease.regression.liblinearfunc.FeatureNodeComparator featureNodeCmp>;
staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r66, 0, i2, $r6);
"->"Block 50:
[preds: 48 49 ] [succs: ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: java.util.List x_temp>;
interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r66);
return;
";
}
