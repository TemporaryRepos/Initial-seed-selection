digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 == 2 goto r1 = r0[0]"
    "$r22 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\")"
    "staticinvoke <java.lang.System: void exit(int)>(0)"
    "r1 = r0[0]"
    "$r2 = new java.io.File"
    "$r3 = r0[1]"
    "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3)"
    "r4 = $r2"
    "$z0 = virtualinvoke r4.<java.io.File: boolean exists()>()"
    "if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset"
    "$r16 = <java.lang.System: java.io.PrintStream out>"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \")"
    "$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>()"
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)"
    "$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset"
    "specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0)"
    "r6 = $r5"
    "$r7 = \"libsvm\""
    "$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)"
    "if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4)"
    "goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)]"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)"
    "virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)"
    "$r13 = <java.lang.System: java.io.PrintStream out>"
    "$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>()"
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 == 2 goto r1 = r0[0]";
    "if $i0 == 2 goto r1 = r0[0]"->"$r22 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 == 2 goto r1 = r0[0]"->"r1 = r0[0]";
    "$r22 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\")";
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\")"->"staticinvoke <java.lang.System: void exit(int)>(0)";
    "staticinvoke <java.lang.System: void exit(int)>(0)"->"r1 = r0[0]";
    "r1 = r0[0]"->"$r2 = new java.io.File";
    "$r2 = new java.io.File"->"$r3 = r0[1]";
    "$r3 = r0[1]"->"specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3)";
    "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3)"->"r4 = $r2";
    "r4 = $r2"->"$z0 = virtualinvoke r4.<java.io.File: boolean exists()>()";
    "$z0 = virtualinvoke r4.<java.io.File: boolean exists()>()"->"if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset";
    "if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset"->"$r16 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset"->"$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset";
    "$r16 = <java.lang.System: java.io.PrintStream out>"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \")";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \")"->"$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>()";
    "$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>()"->"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)";
    "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21)"->"staticinvoke <java.lang.System: void exit(int)>(0)";
    "staticinvoke <java.lang.System: void exit(int)>(0)"->"$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset";
    "$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset"->"specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0)";
    "specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0)"->"r6 = $r5";
    "r6 = $r5"->"$r7 = \"libsvm\"";
    "$r7 = \"libsvm\""->"$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)";
    "$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)"->"if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4)";
    "if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4)"->"goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)]";
    "goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)]"->"virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \")";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)"->"staticinvoke <java.lang.System: void exit(int)>(0)";
    "staticinvoke <java.lang.System: void exit(int)>(0)"->"virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)";
    "virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)"->"$r13 = <java.lang.System: java.io.PrintStream out>";
    "$r13 = <java.lang.System: java.io.PrintStream out>"->"$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>()";
    "$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>()"->"virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"return";
}
