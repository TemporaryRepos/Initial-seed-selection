digraph "unitGraph" {
    "r5 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset"
    "r2 := @parameter0: java.io.File"
    "$r0 = new java.io.BufferedReader"
    "$r1 = new java.io.FileReader"
    "specialinvoke $r1.<java.io.FileReader: void <init>(java.io.File)>(r2)"
    "specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)"
    "r3 = $r0"
    "i0 = 0"
    "r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()"
    "if r4 != null goto i0 = i0 + 1"
    "goto [?= virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()]"
    "i0 = i0 + 1"
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void addInstanceLibSVM(java.lang.String)>(r4)"
    "goto [?= (branch)]"
    "$r8 := @caughtexception"
    "r9 = $r8"
    "$r10 = new de.bwaldvogel.liblinear.InvalidInputDataException"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error found when processing \")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r10.<de.bwaldvogel.liblinear.InvalidInputDataException: void <init>(java.lang.String,java.io.File,int,java.lang.Exception)>($r14, r2, i0, r9)"
    "throw $r10"
    "goto [?= r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()"
    "virtualinvoke r3.<java.io.BufferedReader: void close()>()"
    "goto [?= return]"
    "$r6 := @caughtexception"
    "r7 = $r6"
    "throw r7"
    "return"
    "r5 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset"->"r2 := @parameter0: java.io.File";
    "r2 := @parameter0: java.io.File"->"$r0 = new java.io.BufferedReader";
    "$r0 = new java.io.BufferedReader"->"$r1 = new java.io.FileReader";
    "$r1 = new java.io.FileReader"->"specialinvoke $r1.<java.io.FileReader: void <init>(java.io.File)>(r2)";
    "specialinvoke $r1.<java.io.FileReader: void <init>(java.io.File)>(r2)"->"specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)";
    "specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1)"->"r3 = $r0";
    "r3 = $r0"->"i0 = 0";
    "i0 = 0"->"r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()";
    "i0 = 0"->"$r6 := @caughtexception";
    "r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()"->"if r4 != null goto i0 = i0 + 1";
    "r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r6 := @caughtexception";
    "if r4 != null goto i0 = i0 + 1"->"goto [?= virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()]";
    "if r4 != null goto i0 = i0 + 1"->"i0 = i0 + 1";
    "if r4 != null goto i0 = i0 + 1"->"$r6 := @caughtexception";
    "goto [?= virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()]"->"virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()";
    "goto [?= virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()]"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"$r8 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void addInstanceLibSVM(java.lang.String)>(r4)";
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void addInstanceLibSVM(java.lang.String)>(r4)"->"$r8 := @caughtexception";
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void addInstanceLibSVM(java.lang.String)>(r4)"->"$r6 := @caughtexception";
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void addInstanceLibSVM(java.lang.String)>(r4)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= (branch)]"->"$r6 := @caughtexception";
    "$r8 := @caughtexception"->"r9 = $r8";
    "$r8 := @caughtexception"->"$r6 := @caughtexception";
    "r9 = $r8"->"$r10 = new de.bwaldvogel.liblinear.InvalidInputDataException";
    "r9 = $r8"->"$r6 := @caughtexception";
    "$r10 = new de.bwaldvogel.liblinear.InvalidInputDataException"->"$r11 = new java.lang.StringBuilder";
    "$r10 = new de.bwaldvogel.liblinear.InvalidInputDataException"->"$r6 := @caughtexception";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "$r11 = new java.lang.StringBuilder"->"$r6 := @caughtexception";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error found when processing \")";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r6 := @caughtexception";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error found when processing \")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error found when processing \")"->"$r6 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"->"$r6 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r10.<de.bwaldvogel.liblinear.InvalidInputDataException: void <init>(java.lang.String,java.io.File,int,java.lang.Exception)>($r14, r2, i0, r9)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 := @caughtexception";
    "specialinvoke $r10.<de.bwaldvogel.liblinear.InvalidInputDataException: void <init>(java.lang.String,java.io.File,int,java.lang.Exception)>($r14, r2, i0, r9)"->"throw $r10";
    "specialinvoke $r10.<de.bwaldvogel.liblinear.InvalidInputDataException: void <init>(java.lang.String,java.io.File,int,java.lang.Exception)>($r14, r2, i0, r9)"->"$r6 := @caughtexception";
    "throw $r10"->"$r6 := @caughtexception";
    "goto [?= r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()]"->"r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()";
    "goto [?= r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r6 := @caughtexception";
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()"->"virtualinvoke r3.<java.io.BufferedReader: void close()>()";
    "virtualinvoke r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearDataset: void finish()>()"->"$r6 := @caughtexception";
    "virtualinvoke r3.<java.io.BufferedReader: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r6 := @caughtexception"->"r7 = $r6";
    "$r6 := @caughtexception"->"$r6 := @caughtexception";
    "r7 = $r6"->"virtualinvoke r3.<java.io.BufferedReader: void close()>()";
    "r7 = $r6"->"$r6 := @caughtexception";
    "virtualinvoke r3.<java.io.BufferedReader: void close()>()"->"throw r7";
}
