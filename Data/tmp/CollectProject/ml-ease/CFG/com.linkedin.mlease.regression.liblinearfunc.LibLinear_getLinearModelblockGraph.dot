digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinear;
$r1 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
if $r1 != null goto $d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"This model has not been built.  Please call train() before calling getLinearModel().\");
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
$b0 = $d0 cmpl 0.0;
if $b0 <= 0 goto $r2 = new com.linkedin.mlease.models.LinearModel;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r4 = new com.linkedin.mlease.models.LinearModel;
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r4.<com.linkedin.mlease.models.LinearModel: void <init>(java.lang.String,java.util.Map)>(\"(INTERCEPT)\", $r5);
r7 = $r4;
goto [?= return r7];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r2 = new com.linkedin.mlease.models.LinearModel;
$r3 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r2.<com.linkedin.mlease.models.LinearModel: void <init>(double,java.util.Map)>(0.0, $r3);
r7 = $r2;
"
    "Block 5:
[preds: 3 4 ] [succs: ]
return r7;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinear;
$r1 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
if $r1 != null goto $d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"This model has not been built.  Please call train() before calling getLinearModel().\");
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinear;
$r1 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
if $r1 != null goto $d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
$b0 = $d0 cmpl 0.0;
if $b0 <= 0 goto $r2 = new com.linkedin.mlease.models.LinearModel;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
$b0 = $d0 cmpl 0.0;
if $b0 <= 0 goto $r2 = new com.linkedin.mlease.models.LinearModel;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r4 = new com.linkedin.mlease.models.LinearModel;
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r4.<com.linkedin.mlease.models.LinearModel: void <init>(java.lang.String,java.util.Map)>(\"(INTERCEPT)\", $r5);
r7 = $r4;
goto [?= return r7];
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: double bias>;
$b0 = $d0 cmpl 0.0;
if $b0 <= 0 goto $r2 = new com.linkedin.mlease.models.LinearModel;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r2 = new com.linkedin.mlease.models.LinearModel;
$r3 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r2.<com.linkedin.mlease.models.LinearModel: void <init>(double,java.util.Map)>(0.0, $r3);
r7 = $r2;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r4 = new com.linkedin.mlease.models.LinearModel;
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r4.<com.linkedin.mlease.models.LinearModel: void <init>(java.lang.String,java.util.Map)>(\"(INTERCEPT)\", $r5);
r7 = $r4;
goto [?= return r7];
"->"Block 5:
[preds: 3 4 ] [succs: ]
return r7;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r2 = new com.linkedin.mlease.models.LinearModel;
$r3 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinear: java.util.Map coeff>;
specialinvoke $r2.<com.linkedin.mlease.models.LinearModel: void <init>(double,java.util.Map)>(0.0, $r3);
r7 = $r2;
"->"Block 5:
[preds: 3 4 ] [succs: ]
return r7;
";
}
