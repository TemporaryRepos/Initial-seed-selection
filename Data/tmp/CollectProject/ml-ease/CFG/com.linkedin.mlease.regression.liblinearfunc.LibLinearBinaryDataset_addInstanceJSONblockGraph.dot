digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean finished>;
if $z0 == 0 goto i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"
    "Block 1:
[preds: 0 ] [succs: ]
$r69 = new java.io.IOException;
specialinvoke $r69.<java.io.IOException: void <init>(java.lang.String)>(\"Cannot add instances to a finished dataset.\");
throw $r69;
"
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i27 == 1 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i27 == 0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i27 == -1 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r63 = new java.io.IOException;
$r64 = new java.lang.StringBuilder;
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response = \");
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (only 1, 0, -1 are allowed)\");
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r63.<java.io.IOException: void <init>(java.lang.String)>($r68);
throw $r63;
"
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
i27 = -1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d1 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d1 cmpl 1.0;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d1 cmpl 1.0;
if $b0 == 0 goto d2 = 0.0;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b23 = d1 cmpg 0.0;
if $b23 >= 0 goto $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r57 = new java.io.IOException;
$r58 = new java.lang.StringBuilder;
specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weight = \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (weight cannot < 0)\");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.io.IOException: void <init>(java.lang.String)>($r62);
throw $r57;
"
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$i24 = virtualinvoke $r51.<java.util.ArrayList: int size()>();
$r52 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i25 = virtualinvoke $r52.<java.util.ArrayList: int size()>();
$i26 = $i25 - 1;
if $i24 >= $i26 goto $r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"
    "Block 14:
[preds: 13 ] [succs: 13 ]
$r55 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r56 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);
goto [?= $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>];
"
    "Block 15:
[preds: 13 ] [succs: 16 ]
$r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);
virtualinvoke $r53.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);
"
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d2 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d2 cmpl 0.0;
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
"
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d2 cmpl 0.0;
if $b1 == 0 goto r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$i20 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i21 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$i22 = $i21 - 1;
if $i20 >= $i22 goto $r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
"
    "Block 20:
[preds: 19 ] [succs: 19 ]
$r49 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r50 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);
goto [?= $r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>];
"
    "Block 21:
[preds: 19 ] [succs: 22 ]
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);
"
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r70 != null goto $z4 = r70 instanceof java.util.List;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r44 = new java.io.IOException;
specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>(\"features is null\");
throw $r44;
"
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r70 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r70;
"
    "Block 25:
[preds: 24 ] [succs: ]
$r43 = new java.io.IOException;
specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>(\"features is not a list\");
throw $r43;
"
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r70;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r71 = newarray (int)[i2];
"
    "Block 27:
[preds: 26 ] [succs: 29 ]
$i19 = i2 + 1;
r71 = newarray (int)[$i19];
r71[i2] = -1;
goto [?= i28 = 0];
"
    "Block 28:
[preds: 26 ] [succs: 29 ]
r71 = newarray (int)[i2];
"
    "Block 29:
[preds: 27 28 ] [succs: 30 ]
i28 = 0;
"
    "Block 30:
[preds: 29 50 ] [succs: 31 51 ]
if i28 >= i2 goto (branch);
"
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r72 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i28);
$z8 = r72 instanceof java.util.Map;
if $z8 != 0 goto r73 = (java.util.Map) r72;
"
    "Block 32:
[preds: 31 ] [succs: ]
$r37 = new java.io.IOException;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"features[\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] is not a map\");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r42);
throw $r37;
"
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r73 = (java.util.Map) r72;
r74 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"term\", 1);
$r9 = \"\";
$z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z9 != 0 goto $z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
"
    "Block 34:
[preds: 33 ] [succs: 35 ]
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r74 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 35:
[preds: 33 34 ] [succs: 36 38 ]
$z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
if $z10 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r73, \"value\");
$b18 = d3 cmpl 1.0;
if $b18 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"
    "Block 37:
[preds: 36 ] [succs: ]
$r27 = new java.io.IOException;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot handle non-binary feature value (all feature values have to be 1; or just do not specify the value): \");
$r30 = virtualinvoke r73.<java.lang.Object: java.lang.String toString()>();
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r32);
throw $r27;
"
    "Block 38:
[preds: 35 36 ] [succs: 39 40 ]
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
"
    "Block 39:
[preds: 38 ] [succs: 40 ]
$r26 = new java.util.HashMap;
specialinvoke $r26.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex> = $r26;
"
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"
    "Block 41:
[preds: 40 ] [succs: 42 ]
$r25 = new java.util.ArrayList;
specialinvoke $r25.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName> = $r25;
"
    "Block 42:
[preds: 40 41 ] [succs: 43 44 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i9 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i9 == $i10 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"
    "Block 43:
[preds: 42 ] [succs: ]
$r24 = new java.io.IOException;
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>(\"featureIndex.size() != featureName.size()\");
throw $r24;
"
    "Block 44:
[preds: 42 ] [succs: 45 50 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r74);
r75 = (java.lang.Integer) $r15;
if r75 != null goto $i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
"
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
$r16 = \"(INTERCEPT)\";
$z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r74);
if $z11 == 0 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"
    "Block 46:
[preds: 45 ] [succs: ]
$r23 = new java.io.IOException;
specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>(\"feature name cannot be (INTERCEPT)\");
throw $r23;
"
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$i13 = $i12 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex> = $i13;
$r17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);
virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r74, $r18);
$r20 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r74);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i15 = virtualinvoke $r21.<java.util.ArrayList: int size()>();
$i16 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i15 == $i16 goto $i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"
    "Block 48:
[preds: 47 ] [succs: ]
$r22 = new java.io.IOException;
specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>(\"featureName.size() != maxFeatureIndex\");
throw $r22;
"
    "Block 49:
[preds: 47 ] [succs: 50 ]
$i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);
"
    "Block 50:
[preds: 44 49 ] [succs: 30 ]
$i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
r71[i28] = $i11;
i28 = i28 + 1;
goto [?= (branch)];
"
    "Block 51:
[preds: 30 ] [succs: 52 53 ]
if i2 <= 1 goto $z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
"
    "Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <java.util.Arrays: void sort(int[],int,int)>(r71, 0, i2);
"
    "Block 53:
[preds: 51 52 ] [succs: 54 60 ]
$z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
if $z5 == 0 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
"
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
$i4 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i4 < 32767 goto $i5 = lengthof r71;
"
    "Block 55:
[preds: 54 ] [succs: ]
$r7 = new java.io.IOException;
specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>(\"When using short to store feature indices, you cannot have more than 32766 features!!\");
throw $r7;
"
    "Block 56:
[preds: 54 ] [succs: 57 ]
$i5 = lengthof r71;
r76 = newarray (short)[$i5];
i29 = 0;
"
    "Block 57:
[preds: 56 58 ] [succs: 58 59 ]
$i6 = lengthof r76;
if i29 >= $i6 goto $r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
"
    "Block 58:
[preds: 57 ] [succs: 57 ]
$i7 = r71[i29];
$s8 = (short) $i7;
r76[i29] = $s8;
i29 = i29 + 1;
goto [?= $i6 = lengthof r76];
"
    "Block 59:
[preds: 57 ] [succs: 61 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r76);
goto [?= return];
"
    "Block 60:
[preds: 53 ] [succs: 61 ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r71);
"
    "Block 61:
[preds: 59 60 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean finished>;
if $z0 == 0 goto i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"->"Block 1:
[preds: 0 ] [succs: ]
$r69 = new java.io.IOException;
specialinvoke $r69.<java.io.IOException: void <init>(java.lang.String)>(\"Cannot add instances to a finished dataset.\");
throw $r69;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
r1 := @parameter0: java.util.Map;
$z0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean finished>;
if $z0 == 0 goto i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
"->"Block 2:
[preds: 0 ] [succs: 3 6 ]
i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i27 == 1 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i27 == 1 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
if i27 == 0 goto (branch);
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
i27 = staticinvoke <com.linkedin.mlease.utils.Util: int getInt(java.util.Map,java.lang.String)>(r1, \"response\");
if i27 == 1 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i27 == 0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
if i27 == -1 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
if i27 == 0 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i27 == -1 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: ]
$r63 = new java.io.IOException;
$r64 = new java.lang.StringBuilder;
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"response = \");
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (only 1, 0, -1 are allowed)\");
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r63.<java.io.IOException: void <init>(java.lang.String)>($r68);
throw $r63;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
if i27 == -1 goto (branch);
"->"Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
";
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
i27 = -1;
";
    "Block 6:
[preds: 2 3 4 ] [succs: 7 8 ]
if i27 != 0 goto $r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d1 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d1 cmpl 1.0;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
i27 = -1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d1 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d1 cmpl 1.0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d1 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d1 cmpl 1.0;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$r2 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
d1 = 1.0;
$z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"weight\");
if $z2 == 0 goto $b0 = d1 cmpl 1.0;
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d1 cmpl 1.0;
if $b0 == 0 goto d2 = 0.0;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
d1 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"weight\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d1 cmpl 1.0;
if $b0 == 0 goto d2 = 0.0;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d1 cmpl 1.0;
if $b0 == 0 goto d2 = 0.0;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$b23 = d1 cmpg 0.0;
if $b23 >= 0 goto $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 16 ]
$b0 = d1 cmpl 1.0;
if $b0 == 0 goto d2 = 0.0;
"->"Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d2 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d2 cmpl 0.0;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b23 = d1 cmpg 0.0;
if $b23 >= 0 goto $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"->"Block 12:
[preds: 11 ] [succs: ]
$r57 = new java.io.IOException;
$r58 = new java.lang.StringBuilder;
specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weight = \");
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (weight cannot < 0)\");
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.io.IOException: void <init>(java.lang.String)>($r62);
throw $r57;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$b23 = d1 cmpg 0.0;
if $b23 >= 0 goto $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"->"Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$i24 = virtualinvoke $r51.<java.util.ArrayList: int size()>();
$r52 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i25 = virtualinvoke $r52.<java.util.ArrayList: int size()>();
$i26 = $i25 - 1;
if $i24 >= $i26 goto $r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
";
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$i24 = virtualinvoke $r51.<java.util.ArrayList: int size()>();
$r52 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i25 = virtualinvoke $r52.<java.util.ArrayList: int size()>();
$i26 = $i25 - 1;
if $i24 >= $i26 goto $r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"->"Block 14:
[preds: 13 ] [succs: 13 ]
$r55 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r56 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);
goto [?= $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>];
";
    "Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$i24 = virtualinvoke $r51.<java.util.ArrayList: int size()>();
$r52 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i25 = virtualinvoke $r52.<java.util.ArrayList: int size()>();
$i26 = $i25 - 1;
if $i24 >= $i26 goto $r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
"->"Block 15:
[preds: 13 ] [succs: 16 ]
$r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);
virtualinvoke $r53.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);
";
    "Block 14:
[preds: 13 ] [succs: 13 ]
$r55 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r56 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);
virtualinvoke $r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);
goto [?= $r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>];
"->"Block 13:
[preds: 11 14 ] [succs: 14 15 ]
$r51 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$i24 = virtualinvoke $r51.<java.util.ArrayList: int size()>();
$r52 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i25 = virtualinvoke $r52.<java.util.ArrayList: int size()>();
$i26 = $i25 - 1;
if $i24 >= $i26 goto $r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
";
    "Block 15:
[preds: 13 ] [succs: 16 ]
$r53 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList weight_temp>;
$r54 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);
virtualinvoke $r53.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);
"->"Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d2 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d2 cmpl 0.0;
";
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d2 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d2 cmpl 0.0;
"->"Block 17:
[preds: 16 ] [succs: 18 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
";
    "Block 16:
[preds: 10 15 ] [succs: 17 18 ]
d2 = 0.0;
$z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(\"offset\");
if $z3 == 0 goto $b1 = d2 cmpl 0.0;
"->"Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d2 cmpl 0.0;
if $b1 == 0 goto r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
d2 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r1, \"offset\");
"->"Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d2 cmpl 0.0;
if $b1 == 0 goto r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
";
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d2 cmpl 0.0;
if $b1 == 0 goto r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"->"Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$i20 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i21 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$i22 = $i21 - 1;
if $i20 >= $i22 goto $r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 22 ]
$b1 = d2 cmpl 0.0;
if $b1 == 0 goto r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
"->"Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r70 != null goto $z4 = r70 instanceof java.util.List;
";
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$i20 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i21 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$i22 = $i21 - 1;
if $i20 >= $i22 goto $r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
"->"Block 20:
[preds: 19 ] [succs: 19 ]
$r49 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r50 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);
goto [?= $r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>];
";
    "Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$i20 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i21 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$i22 = $i21 - 1;
if $i20 >= $i22 goto $r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
"->"Block 21:
[preds: 19 ] [succs: 22 ]
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);
";
    "Block 20:
[preds: 19 ] [succs: 19 ]
$r49 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r50 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);
virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);
goto [?= $r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>];
"->"Block 19:
[preds: 18 20 ] [succs: 20 21 ]
$r45 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$i20 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
$r46 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList y_temp>;
$i21 = virtualinvoke $r46.<java.util.ArrayList: int size()>();
$i22 = $i21 - 1;
if $i20 >= $i22 goto $r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
";
    "Block 21:
[preds: 19 ] [succs: 22 ]
$r47 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList offset_temp>;
$r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);
virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);
"->"Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r70 != null goto $z4 = r70 instanceof java.util.List;
";
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r70 != null goto $z4 = r70 instanceof java.util.List;
"->"Block 23:
[preds: 22 ] [succs: ]
$r44 = new java.io.IOException;
specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>(\"features is null\");
throw $r44;
";
    "Block 22:
[preds: 18 21 ] [succs: 23 24 ]
r70 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"features\");
if r70 != null goto $z4 = r70 instanceof java.util.List;
"->"Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r70 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r70;
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r70 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r70;
"->"Block 25:
[preds: 24 ] [succs: ]
$r43 = new java.io.IOException;
specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>(\"features is not a list\");
throw $r43;
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
$z4 = r70 instanceof java.util.List;
if $z4 != 0 goto r4 = (java.util.List) r70;
"->"Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r70;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r71 = newarray (int)[i2];
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r70;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r71 = newarray (int)[i2];
"->"Block 27:
[preds: 26 ] [succs: 29 ]
$i19 = i2 + 1;
r71 = newarray (int)[$i19];
r71[i2] = -1;
goto [?= i28 = 0];
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
r4 = (java.util.List) r70;
i2 = interfaceinvoke r4.<java.util.List: int size()>();
$d0 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: double bias>;
$b3 = $d0 cmpl 0.0;
if $b3 <= 0 goto r71 = newarray (int)[i2];
"->"Block 28:
[preds: 26 ] [succs: 29 ]
r71 = newarray (int)[i2];
";
    "Block 27:
[preds: 26 ] [succs: 29 ]
$i19 = i2 + 1;
r71 = newarray (int)[$i19];
r71[i2] = -1;
goto [?= i28 = 0];
"->"Block 29:
[preds: 27 28 ] [succs: 30 ]
i28 = 0;
";
    "Block 28:
[preds: 26 ] [succs: 29 ]
r71 = newarray (int)[i2];
"->"Block 29:
[preds: 27 28 ] [succs: 30 ]
i28 = 0;
";
    "Block 29:
[preds: 27 28 ] [succs: 30 ]
i28 = 0;
"->"Block 30:
[preds: 29 50 ] [succs: 31 51 ]
if i28 >= i2 goto (branch);
";
    "Block 30:
[preds: 29 50 ] [succs: 31 51 ]
if i28 >= i2 goto (branch);
"->"Block 31:
[preds: 30 ] [succs: 32 33 ]
r72 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i28);
$z8 = r72 instanceof java.util.Map;
if $z8 != 0 goto r73 = (java.util.Map) r72;
";
    "Block 30:
[preds: 29 50 ] [succs: 31 51 ]
if i28 >= i2 goto (branch);
"->"Block 51:
[preds: 30 ] [succs: 52 53 ]
if i2 <= 1 goto $z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r72 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i28);
$z8 = r72 instanceof java.util.Map;
if $z8 != 0 goto r73 = (java.util.Map) r72;
"->"Block 32:
[preds: 31 ] [succs: ]
$r37 = new java.io.IOException;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"features[\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] is not a map\");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r42);
throw $r37;
";
    "Block 31:
[preds: 30 ] [succs: 32 33 ]
r72 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i28);
$z8 = r72 instanceof java.util.Map;
if $z8 != 0 goto r73 = (java.util.Map) r72;
"->"Block 33:
[preds: 31 ] [succs: 34 35 ]
r73 = (java.util.Map) r72;
r74 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"term\", 1);
$r9 = \"\";
$z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z9 != 0 goto $z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
";
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r73 = (java.util.Map) r72;
r74 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"term\", 1);
$r9 = \"\";
$z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z9 != 0 goto $z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
"->"Block 34:
[preds: 33 ] [succs: 35 ]
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r74 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 33:
[preds: 31 ] [succs: 34 35 ]
r73 = (java.util.Map) r72;
r74 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"name\", 0);
r8 = staticinvoke <com.linkedin.mlease.utils.Util: java.lang.String getString(java.util.Map,java.lang.String,boolean)>(r73, \"term\", 1);
$r9 = \"\";
$z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
if $z9 != 0 goto $z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
"->"Block 35:
[preds: 33 34 ] [succs: 36 38 ]
$z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
if $z10 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 34:
[preds: 33 ] [succs: 35 ]
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u0001\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
r74 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 35:
[preds: 33 34 ] [succs: 36 38 ]
$z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
if $z10 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 38 ]
$z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
if $z10 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 36:
[preds: 35 ] [succs: 37 38 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r73, \"value\");
$b18 = d3 cmpl 1.0;
if $b18 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 38 ]
$z10 = interfaceinvoke r73.<java.util.Map: boolean containsKey(java.lang.Object)>(\"value\");
if $z10 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 38:
[preds: 35 36 ] [succs: 39 40 ]
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
";
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r73, \"value\");
$b18 = d3 cmpl 1.0;
if $b18 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 37:
[preds: 36 ] [succs: ]
$r27 = new java.io.IOException;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot handle non-binary feature value (all feature values have to be 1; or just do not specify the value): \");
$r30 = virtualinvoke r73.<java.lang.Object: java.lang.String toString()>();
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r32);
throw $r27;
";
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
d3 = staticinvoke <com.linkedin.mlease.utils.Util: double getDouble(java.util.Map,java.lang.String)>(r73, \"value\");
$b18 = d3 cmpl 1.0;
if $b18 == 0 goto $r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 38:
[preds: 35 36 ] [succs: 39 40 ]
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
";
    "Block 38:
[preds: 35 36 ] [succs: 39 40 ]
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
"->"Block 39:
[preds: 38 ] [succs: 40 ]
$r26 = new java.util.HashMap;
specialinvoke $r26.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex> = $r26;
";
    "Block 38:
[preds: 35 36 ] [succs: 39 40 ]
$r10 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
if $r10 != null goto $r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
"->"Block 40:
[preds: 38 39 ] [succs: 41 42 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 39:
[preds: 38 ] [succs: 40 ]
$r26 = new java.util.HashMap;
specialinvoke $r26.<java.util.HashMap: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex> = $r26;
"->"Block 40:
[preds: 38 39 ] [succs: 41 42 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 41:
[preds: 40 ] [succs: 42 ]
$r25 = new java.util.ArrayList;
specialinvoke $r25.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName> = $r25;
";
    "Block 40:
[preds: 38 39 ] [succs: 41 42 ]
$r11 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
if $r11 != null goto $r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 42:
[preds: 40 41 ] [succs: 43 44 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i9 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i9 == $i10 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 41:
[preds: 40 ] [succs: 42 ]
$r25 = new java.util.ArrayList;
specialinvoke $r25.<java.util.ArrayList: void <init>()>();
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName> = $r25;
"->"Block 42:
[preds: 40 41 ] [succs: 43 44 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i9 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i9 == $i10 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
";
    "Block 42:
[preds: 40 41 ] [succs: 43 44 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i9 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i9 == $i10 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 43:
[preds: 42 ] [succs: ]
$r24 = new java.io.IOException;
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>(\"featureIndex.size() != featureName.size()\");
throw $r24;
";
    "Block 42:
[preds: 40 41 ] [succs: 43 44 ]
$r12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i9 = virtualinvoke $r12.<java.util.HashMap: int size()>();
$r13 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i10 = virtualinvoke $r13.<java.util.ArrayList: int size()>();
if $i9 == $i10 goto $r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
"->"Block 44:
[preds: 42 ] [succs: 45 50 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r74);
r75 = (java.lang.Integer) $r15;
if r75 != null goto $i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
";
    "Block 44:
[preds: 42 ] [succs: 45 50 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r74);
r75 = (java.lang.Integer) $r15;
if r75 != null goto $i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
"->"Block 45:
[preds: 44 ] [succs: 46 47 ]
$r16 = \"(INTERCEPT)\";
$z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r74);
if $z11 == 0 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
";
    "Block 44:
[preds: 42 ] [succs: 45 50 ]
$r14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r74);
r75 = (java.lang.Integer) $r15;
if r75 != null goto $i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
"->"Block 50:
[preds: 44 49 ] [succs: 30 ]
$i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
r71[i28] = $i11;
i28 = i28 + 1;
goto [?= (branch)];
";
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
$r16 = \"(INTERCEPT)\";
$z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r74);
if $z11 == 0 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"->"Block 46:
[preds: 45 ] [succs: ]
$r23 = new java.io.IOException;
specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>(\"feature name cannot be (INTERCEPT)\");
throw $r23;
";
    "Block 45:
[preds: 44 ] [succs: 46 47 ]
$r16 = \"(INTERCEPT)\";
$z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r74);
if $z11 == 0 goto $i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"->"Block 47:
[preds: 45 ] [succs: 48 49 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$i13 = $i12 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex> = $i13;
$r17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);
virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r74, $r18);
$r20 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r74);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i15 = virtualinvoke $r21.<java.util.ArrayList: int size()>();
$i16 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i15 == $i16 goto $i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
";
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$i13 = $i12 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex> = $i13;
$r17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);
virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r74, $r18);
$r20 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r74);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i15 = virtualinvoke $r21.<java.util.ArrayList: int size()>();
$i16 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i15 == $i16 goto $i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"->"Block 48:
[preds: 47 ] [succs: ]
$r22 = new java.io.IOException;
specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>(\"featureName.size() != maxFeatureIndex\");
throw $r22;
";
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i12 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$i13 = $i12 + 1;
r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex> = $i13;
$r17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.HashMap featureIndex>;
$i14 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);
virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r74, $r18);
$r20 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r74);
$r21 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList featureName>;
$i15 = virtualinvoke $r21.<java.util.ArrayList: int size()>();
$i16 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i15 == $i16 goto $i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
"->"Block 49:
[preds: 47 ] [succs: 50 ]
$i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);
";
    "Block 49:
[preds: 47 ] [succs: 50 ]
$i17 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);
"->"Block 50:
[preds: 44 49 ] [succs: 30 ]
$i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
r71[i28] = $i11;
i28 = i28 + 1;
goto [?= (branch)];
";
    "Block 50:
[preds: 44 49 ] [succs: 30 ]
$i11 = virtualinvoke r75.<java.lang.Integer: int intValue()>();
r71[i28] = $i11;
i28 = i28 + 1;
goto [?= (branch)];
"->"Block 30:
[preds: 29 50 ] [succs: 31 51 ]
if i28 >= i2 goto (branch);
";
    "Block 51:
[preds: 30 ] [succs: 52 53 ]
if i2 <= 1 goto $z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
"->"Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <java.util.Arrays: void sort(int[],int,int)>(r71, 0, i2);
";
    "Block 51:
[preds: 30 ] [succs: 52 53 ]
if i2 <= 1 goto $z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
"->"Block 53:
[preds: 51 52 ] [succs: 54 60 ]
$z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
if $z5 == 0 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
";
    "Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <java.util.Arrays: void sort(int[],int,int)>(r71, 0, i2);
"->"Block 53:
[preds: 51 52 ] [succs: 54 60 ]
$z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
if $z5 == 0 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
";
    "Block 53:
[preds: 51 52 ] [succs: 54 60 ]
$z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
if $z5 == 0 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
"->"Block 54:
[preds: 53 ] [succs: 55 56 ]
$i4 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i4 < 32767 goto $i5 = lengthof r71;
";
    "Block 53:
[preds: 51 52 ] [succs: 54 60 ]
$z5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: boolean useShort>;
if $z5 == 0 goto $r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
"->"Block 60:
[preds: 53 ] [succs: 61 ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r71);
";
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
$i4 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i4 < 32767 goto $i5 = lengthof r71;
"->"Block 55:
[preds: 54 ] [succs: ]
$r7 = new java.io.IOException;
specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>(\"When using short to store feature indices, you cannot have more than 32766 features!!\");
throw $r7;
";
    "Block 54:
[preds: 53 ] [succs: 55 56 ]
$i4 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: int maxFeatureIndex>;
if $i4 < 32767 goto $i5 = lengthof r71;
"->"Block 56:
[preds: 54 ] [succs: 57 ]
$i5 = lengthof r71;
r76 = newarray (short)[$i5];
i29 = 0;
";
    "Block 56:
[preds: 54 ] [succs: 57 ]
$i5 = lengthof r71;
r76 = newarray (short)[$i5];
i29 = 0;
"->"Block 57:
[preds: 56 58 ] [succs: 58 59 ]
$i6 = lengthof r76;
if i29 >= $i6 goto $r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
";
    "Block 57:
[preds: 56 58 ] [succs: 58 59 ]
$i6 = lengthof r76;
if i29 >= $i6 goto $r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
"->"Block 58:
[preds: 57 ] [succs: 57 ]
$i7 = r71[i29];
$s8 = (short) $i7;
r76[i29] = $s8;
i29 = i29 + 1;
goto [?= $i6 = lengthof r76];
";
    "Block 57:
[preds: 56 58 ] [succs: 58 59 ]
$i6 = lengthof r76;
if i29 >= $i6 goto $r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
"->"Block 59:
[preds: 57 ] [succs: 61 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r76);
goto [?= return];
";
    "Block 58:
[preds: 57 ] [succs: 57 ]
$i7 = r71[i29];
$s8 = (short) $i7;
r76[i29] = $s8;
i29 = i29 + 1;
goto [?= $i6 = lengthof r76];
"->"Block 57:
[preds: 56 58 ] [succs: 58 59 ]
$i6 = lengthof r76;
if i29 >= $i6 goto $r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
";
    "Block 59:
[preds: 57 ] [succs: 61 ]
$r6 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_short>;
virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r76);
goto [?= return];
"->"Block 61:
[preds: 59 60 ] [succs: ]
return;
";
    "Block 60:
[preds: 53 ] [succs: 61 ]
$r5 = r0.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.util.ArrayList x_int>;
virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r71);
"->"Block 61:
[preds: 59 60 ] [succs: ]
return;
";
}
