digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 2 goto r1 = r0[0];
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\");
staticinvoke <java.lang.System: void exit(int)>(0);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r1 = r0[0];
$r2 = new java.io.File;
$r3 = r0[1];
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$z0 = virtualinvoke r4.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \");
$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
staticinvoke <java.lang.System: void exit(int)>(0);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0);
r6 = $r5;
$r7 = \"libsvm\";
$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4);
goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
staticinvoke <java.lang.System: void exit(int)>(0);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10);
$r13 = <java.lang.System: java.io.PrintStream out>;
$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 2 goto r1 = r0[0];
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\");
staticinvoke <java.lang.System: void exit(int)>(0);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
$i0 = lengthof r0;
if $i0 == 2 goto r1 = r0[0];
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r1 = r0[0];
$r2 = new java.io.File;
$r3 = r0[1];
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$z0 = virtualinvoke r4.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>(\"Please give two input parameters: <type> <filename>, where type = libsvm or json\");
staticinvoke <java.lang.System: void exit(int)>(0);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r1 = r0[0];
$r2 = new java.io.File;
$r3 = r0[1];
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$z0 = virtualinvoke r4.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r1 = r0[0];
$r2 = new java.io.File;
$r3 = r0[1];
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$z0 = virtualinvoke r4.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \");
$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
staticinvoke <java.lang.System: void exit(int)>(0);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
r1 = r0[0];
$r2 = new java.io.File;
$r3 = r0[1];
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$z0 = virtualinvoke r4.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0);
r6 = $r5;
$r7 = \"libsvm\";
$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \");
$r18 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not exist\");
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);
staticinvoke <java.lang.System: void exit(int)>(0);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0);
r6 = $r5;
$r7 = \"libsvm\";
$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0);
r6 = $r5;
$r7 = \"libsvm\";
$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4);
goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r5 = new com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset;
specialinvoke $r5.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void <init>(double,boolean)>(0.0, 0);
r6 = $r5;
$r7 = \"libsvm\";
$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z1 == 0 goto $r9 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
staticinvoke <java.lang.System: void exit(int)>(0);
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void readFromLibSVM(java.io.File)>(r4);
goto [?= virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10)];
"->"Block 7:
[preds: 5 6 ] [succs: ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10);
$r13 = <java.lang.System: java.io.PrintStream out>;
$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14);
return;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown file type: \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
staticinvoke <java.lang.System: void exit(int)>(0);
"->"Block 7:
[preds: 5 6 ] [succs: ]
virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: void sanity_check(int)>(10);
$r13 = <java.lang.System: java.io.PrintStream out>;
$r14 = virtualinvoke r6.<com.linkedin.mlease.regression.liblinearfunc.LibLinearBinaryDataset: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14);
return;
";
}
