digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r80 := @parameter0: java.lang.String[];
$r0 = newarray (int[])[3];
$r1 = newarray (int)[8];
$r1[0] = 2;
$r1[1] = 4;
$r1[2] = 4;
$r1[3] = 4;
$r1[4] = 5;
$r1[5] = 5;
$r1[6] = 7;
$r1[7] = 9;
$r0[0] = $r1;
$r2 = newarray (int)[8];
$r2[0] = 20;
$r2[1] = 40;
$r2[2] = 40;
$r2[3] = 40;
$r2[4] = 50;
$r2[5] = 50;
$r2[6] = 70;
$r2[7] = 90;
$r0[1] = $r2;
$r3 = newarray (int)[16];
$r3[0] = 2;
$r3[1] = 4;
$r3[2] = 4;
$r3[3] = 4;
$r3[4] = 5;
$r3[5] = 5;
$r3[6] = 7;
$r3[7] = 9;
$r3[8] = 20;
$r3[9] = 40;
$r3[10] = 40;
$r3[11] = 40;
$r3[12] = 50;
$r3[13] = 50;
$r3[14] = 70;
$r3[15] = 90;
$r0[2] = $r3;
r4 = $r0;
$r5 = newarray (int)[3];
$r5[0] = 0;
$r5[1] = 0;
$r5[2] = 0;
r6 = $r5;
$r7 = newarray (int)[3];
$r7[0] = 0;
$r7[1] = 0;
$r7[2] = 0;
r8 = $r7;
i51 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r6;
if i51 >= $i0 goto $r9 = newarray (int)[3];
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i52 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r63 = r4[i51];
$i41 = lengthof $r63;
if i52 >= $i41 goto $r65 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$i49 = r6[i51];
$r79 = r4[i51];
$i48 = $r79[i52];
$i50 = $i49 + $i48;
r6[i51] = $i50;
i52 = i52 + 1;
goto [?= $r63 = r4[i51]];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
$r65 = <java.lang.System: java.io.PrintStream out>;
$r64 = new java.lang.StringBuilder;
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
$r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sum[\");
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i42 = r6[i51];
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r70);
$i43 = r8[i51];
$d63 = (double) $i43;
$i44 = r6[i51];
$d61 = (double) $i44;
$r71 = r4[i51];
$i45 = lengthof $r71;
$d60 = (double) $i45;
$d62 = $d61 / $d60;
$d64 = $d63 + $d62;
$i46 = (int) $d64;
r8[i51] = $i46;
$r73 = <java.lang.System: java.io.PrintStream out>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"avg[\");
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i47 = r8[i51];
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r78);
i51 = i51 + 1;
goto [?= $i0 = lengthof r6];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r9 = newarray (int)[3];
$r9[0] = 0;
$r9[1] = 0;
$r9[2] = 0;
r81 = $r9;
$r10 = newarray (double)[3];
$r10[0] = 0.0;
$r10[1] = 0.0;
$r10[2] = 0.0;
r82 = $r10;
i53 = 0;
"
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r81;
if i53 >= $i1 goto $r11 = r4[0];
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
i54 = 0;
"
    "Block 9:
[preds: 8 10 ] [succs: 10 11 ]
$r46 = r4[i53];
$i32 = lengthof $r46;
if i54 >= $i32 goto $r48 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 10:
[preds: 9 ] [succs: 9 ]
$i36 = r81[i53];
$d57 = (double) $i36;
$r62 = r4[i53];
$i38 = $r62[i54];
$i37 = r8[i53];
$i39 = $i38 - $i37;
$d56 = (double) $i39;
$d58 = staticinvoke <java.lang.Math: double pow(double,double)>($d56, 2.0);
$d59 = $d57 + $d58;
$i40 = (int) $d59;
r81[i53] = $i40;
i54 = i54 + 1;
goto [?= $r46 = r4[i53]];
"
    "Block 11:
[preds: 9 ] [succs: 7 ]
$r48 = <java.lang.System: java.io.PrintStream out>;
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumSig[\");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i33 = r81[i53];
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r53);
$d52 = r82[i53];
$i34 = r81[i53];
$d50 = (double) $i34;
$r54 = r4[i53];
$i35 = lengthof $r54;
$d49 = (double) $i35;
$d51 = $d50 / $d49;
$d53 = staticinvoke <java.lang.Math: double sqrt(double)>($d51);
$d54 = $d52 + $d53;
r82[i53] = $d54;
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma[\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$d55 = r82[i53];
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d55);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
i53 = i53 + 1;
goto [?= $i1 = lengthof r81];
"
    "Block 12:
[preds: 7 ] [succs: 13 14 ]
$r11 = r4[0];
$i2 = lengthof $r11;
$i3 = $i2 % 2;
if $i3 != 0 goto $i5 = r8[0];
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
$d65 = 0.0;
goto [?= d66 = $d65];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
$i5 = r8[0];
$i4 = r8[2];
$i6 = $i5 - $i4;
$d0 = (double) $i6;
$d65 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
d66 = $d65;
$r12 = r4[1];
$i7 = lengthof $r12;
$i8 = $i7 % 2;
if $i8 != 0 goto $i10 = r8[1];
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$d67 = 0.0;
goto [?= d2 = $d67];
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$i10 = r8[1];
$i9 = r8[2];
$i11 = $i10 - $i9;
$d1 = (double) $i11;
$d67 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);
"
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
d2 = $d67;
$r13 = r4[0];
$i12 = lengthof $r13;
$i13 = $i12 % 2;
if $i13 != 0 goto $r14 = r4[0];
"
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r45 = r4[0];
$i31 = lengthof $r45;
$d48 = (double) $i31;
$d68 = $d48 / 2.0;
goto [?= d4 = $d68];
"
    "Block 20:
[preds: 18 ] [succs: 21 ]
$r14 = r4[0];
$i14 = lengthof $r14;
$i15 = $i14 - 1;
$d3 = (double) $i15;
$d68 = $d3 / 2.0;
"
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
d4 = $d68;
$r15 = r4[1];
$i16 = lengthof $r15;
$i17 = $i16 % 2;
if $i17 != 0 goto $r16 = r4[1];
"
    "Block 22:
[preds: 21 ] [succs: 24 ]
$r44 = r4[1];
$i30 = lengthof $r44;
$d47 = (double) $i30;
$d69 = $d47 / 2.0;
goto [?= d6 = $d69];
"
    "Block 23:
[preds: 21 ] [succs: 24 ]
$r16 = r4[1];
$i18 = lengthof $r16;
$i19 = $i18 - 1;
$d5 = (double) $i19;
$d69 = $d5 / 2.0;
"
    "Block 24:
[preds: 22 23 ] [succs: 25 26 ]
d6 = $d69;
$i20 = r8[0];
$d8 = (double) $i20;
$d7 = r82[0];
$d10 = $d8 + $d7;
$i21 = r8[2];
$d9 = (double) $i21;
$d11 = $d10 - $d9;
$d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);
$d18 = $d12 * d4;
$i22 = r8[0];
$d14 = (double) $i22;
$d13 = r82[0];
$d16 = $d14 - $d13;
$i23 = r8[2];
$d15 = (double) $i23;
$d17 = $d16 - $d15;
$d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);
$d20 = $d19 * d4;
$d21 = $d18 + $d20;
$d27 = $d21 + d66;
$i24 = r8[1];
$d23 = (double) $i24;
$d22 = r82[1];
$d25 = $d23 + $d22;
$i25 = r8[2];
$d24 = (double) $i25;
$d26 = $d25 - $d24;
$d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, 2.0);
$d29 = $d28 * d6;
$d35 = $d27 + $d29;
$i26 = r8[1];
$d31 = (double) $i26;
$d30 = r82[1];
$d33 = $d31 - $d30;
$i27 = r8[2];
$d32 = (double) $i27;
$d34 = $d33 - $d32;
$d36 = staticinvoke <java.lang.Math: double pow(double,double)>($d34, 2.0);
$d37 = $d36 * d6;
$d38 = $d35 + $d37;
d39 = $d38 + d2;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"SumBoth=\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d39);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
$r22 = r4[2];
$i28 = lengthof $r22;
$d40 = (double) $i28;
$d41 = d39 / $d40;
d42 = staticinvoke <java.lang.Math: double sqrt(double)>($d41);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"foo: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d66);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r29 = <java.lang.System: java.io.PrintStream out>;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bar: \");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma both samples=\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d42);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
$d43 = r82[2];
$d44 = d42 - $d43;
$b29 = $d44 cmpl 0.0;
if $b29 != 0 goto $r39 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 25:
[preds: 24 ] [succs: 27 ]
$r43 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>(\"Combined stdev of both samples are equal to stddev of merged samples.\");
goto [?= return];
"
    "Block 26:
[preds: 24 ] [succs: 27 ]
$r39 = <java.lang.System: java.io.PrintStream out>;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Combined stddev of both samples are not equal to stddev of merged samples, but should. Diff: \");
$d45 = r82[2];
$d46 = d42 - $d45;
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d46);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r42);
"
    "Block 27:
[preds: 25 26 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r80 := @parameter0: java.lang.String[];
$r0 = newarray (int[])[3];
$r1 = newarray (int)[8];
$r1[0] = 2;
$r1[1] = 4;
$r1[2] = 4;
$r1[3] = 4;
$r1[4] = 5;
$r1[5] = 5;
$r1[6] = 7;
$r1[7] = 9;
$r0[0] = $r1;
$r2 = newarray (int)[8];
$r2[0] = 20;
$r2[1] = 40;
$r2[2] = 40;
$r2[3] = 40;
$r2[4] = 50;
$r2[5] = 50;
$r2[6] = 70;
$r2[7] = 90;
$r0[1] = $r2;
$r3 = newarray (int)[16];
$r3[0] = 2;
$r3[1] = 4;
$r3[2] = 4;
$r3[3] = 4;
$r3[4] = 5;
$r3[5] = 5;
$r3[6] = 7;
$r3[7] = 9;
$r3[8] = 20;
$r3[9] = 40;
$r3[10] = 40;
$r3[11] = 40;
$r3[12] = 50;
$r3[13] = 50;
$r3[14] = 70;
$r3[15] = 90;
$r0[2] = $r3;
r4 = $r0;
$r5 = newarray (int)[3];
$r5[0] = 0;
$r5[1] = 0;
$r5[2] = 0;
r6 = $r5;
$r7 = newarray (int)[3];
$r7[0] = 0;
$r7[1] = 0;
$r7[2] = 0;
r8 = $r7;
i51 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r6;
if i51 >= $i0 goto $r9 = newarray (int)[3];
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r6;
if i51 >= $i0 goto $r9 = newarray (int)[3];
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i52 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r6;
if i51 >= $i0 goto $r9 = newarray (int)[3];
"->"Block 6:
[preds: 1 ] [succs: 7 ]
$r9 = newarray (int)[3];
$r9[0] = 0;
$r9[1] = 0;
$r9[2] = 0;
r81 = $r9;
$r10 = newarray (double)[3];
$r10[0] = 0.0;
$r10[1] = 0.0;
$r10[2] = 0.0;
r82 = $r10;
i53 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i52 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r63 = r4[i51];
$i41 = lengthof $r63;
if i52 >= $i41 goto $r65 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r63 = r4[i51];
$i41 = lengthof $r63;
if i52 >= $i41 goto $r65 = <java.lang.System: java.io.PrintStream out>;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$i49 = r6[i51];
$r79 = r4[i51];
$i48 = $r79[i52];
$i50 = $i49 + $i48;
r6[i51] = $i50;
i52 = i52 + 1;
goto [?= $r63 = r4[i51]];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r63 = r4[i51];
$i41 = lengthof $r63;
if i52 >= $i41 goto $r65 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 3 ] [succs: 1 ]
$r65 = <java.lang.System: java.io.PrintStream out>;
$r64 = new java.lang.StringBuilder;
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
$r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sum[\");
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i42 = r6[i51];
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r70);
$i43 = r8[i51];
$d63 = (double) $i43;
$i44 = r6[i51];
$d61 = (double) $i44;
$r71 = r4[i51];
$i45 = lengthof $r71;
$d60 = (double) $i45;
$d62 = $d61 / $d60;
$d64 = $d63 + $d62;
$i46 = (int) $d64;
r8[i51] = $i46;
$r73 = <java.lang.System: java.io.PrintStream out>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"avg[\");
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i47 = r8[i51];
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r78);
i51 = i51 + 1;
goto [?= $i0 = lengthof r6];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$i49 = r6[i51];
$r79 = r4[i51];
$i48 = $r79[i52];
$i50 = $i49 + $i48;
r6[i51] = $i50;
i52 = i52 + 1;
goto [?= $r63 = r4[i51]];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r63 = r4[i51];
$i41 = lengthof $r63;
if i52 >= $i41 goto $r65 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
$r65 = <java.lang.System: java.io.PrintStream out>;
$r64 = new java.lang.StringBuilder;
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
$r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sum[\");
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i42 = r6[i51];
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r70);
$i43 = r8[i51];
$d63 = (double) $i43;
$i44 = r6[i51];
$d61 = (double) $i44;
$r71 = r4[i51];
$i45 = lengthof $r71;
$d60 = (double) $i45;
$d62 = $d61 / $d60;
$d64 = $d63 + $d62;
$i46 = (int) $d64;
r8[i51] = $i46;
$r73 = <java.lang.System: java.io.PrintStream out>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"avg[\");
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i51);
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i47 = r8[i51];
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r78);
i51 = i51 + 1;
goto [?= $i0 = lengthof r6];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r6;
if i51 >= $i0 goto $r9 = newarray (int)[3];
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r9 = newarray (int)[3];
$r9[0] = 0;
$r9[1] = 0;
$r9[2] = 0;
r81 = $r9;
$r10 = newarray (double)[3];
$r10[0] = 0.0;
$r10[1] = 0.0;
$r10[2] = 0.0;
r82 = $r10;
i53 = 0;
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r81;
if i53 >= $i1 goto $r11 = r4[0];
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r81;
if i53 >= $i1 goto $r11 = r4[0];
"->"Block 8:
[preds: 7 ] [succs: 9 ]
i54 = 0;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r81;
if i53 >= $i1 goto $r11 = r4[0];
"->"Block 12:
[preds: 7 ] [succs: 13 14 ]
$r11 = r4[0];
$i2 = lengthof $r11;
$i3 = $i2 % 2;
if $i3 != 0 goto $i5 = r8[0];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
i54 = 0;
"->"Block 9:
[preds: 8 10 ] [succs: 10 11 ]
$r46 = r4[i53];
$i32 = lengthof $r46;
if i54 >= $i32 goto $r48 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 9:
[preds: 8 10 ] [succs: 10 11 ]
$r46 = r4[i53];
$i32 = lengthof $r46;
if i54 >= $i32 goto $r48 = <java.lang.System: java.io.PrintStream out>;
"->"Block 10:
[preds: 9 ] [succs: 9 ]
$i36 = r81[i53];
$d57 = (double) $i36;
$r62 = r4[i53];
$i38 = $r62[i54];
$i37 = r8[i53];
$i39 = $i38 - $i37;
$d56 = (double) $i39;
$d58 = staticinvoke <java.lang.Math: double pow(double,double)>($d56, 2.0);
$d59 = $d57 + $d58;
$i40 = (int) $d59;
r81[i53] = $i40;
i54 = i54 + 1;
goto [?= $r46 = r4[i53]];
";
    "Block 9:
[preds: 8 10 ] [succs: 10 11 ]
$r46 = r4[i53];
$i32 = lengthof $r46;
if i54 >= $i32 goto $r48 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 9 ] [succs: 7 ]
$r48 = <java.lang.System: java.io.PrintStream out>;
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumSig[\");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i33 = r81[i53];
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r53);
$d52 = r82[i53];
$i34 = r81[i53];
$d50 = (double) $i34;
$r54 = r4[i53];
$i35 = lengthof $r54;
$d49 = (double) $i35;
$d51 = $d50 / $d49;
$d53 = staticinvoke <java.lang.Math: double sqrt(double)>($d51);
$d54 = $d52 + $d53;
r82[i53] = $d54;
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma[\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$d55 = r82[i53];
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d55);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
i53 = i53 + 1;
goto [?= $i1 = lengthof r81];
";
    "Block 10:
[preds: 9 ] [succs: 9 ]
$i36 = r81[i53];
$d57 = (double) $i36;
$r62 = r4[i53];
$i38 = $r62[i54];
$i37 = r8[i53];
$i39 = $i38 - $i37;
$d56 = (double) $i39;
$d58 = staticinvoke <java.lang.Math: double pow(double,double)>($d56, 2.0);
$d59 = $d57 + $d58;
$i40 = (int) $d59;
r81[i53] = $i40;
i54 = i54 + 1;
goto [?= $r46 = r4[i53]];
"->"Block 9:
[preds: 8 10 ] [succs: 10 11 ]
$r46 = r4[i53];
$i32 = lengthof $r46;
if i54 >= $i32 goto $r48 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 11:
[preds: 9 ] [succs: 7 ]
$r48 = <java.lang.System: java.io.PrintStream out>;
$r47 = new java.lang.StringBuilder;
specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumSig[\");
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$i33 = r81[i53];
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r53);
$d52 = r82[i53];
$i34 = r81[i53];
$d50 = (double) $i34;
$r54 = r4[i53];
$i35 = lengthof $r54;
$d49 = (double) $i35;
$d51 = $d50 / $d49;
$d53 = staticinvoke <java.lang.Math: double sqrt(double)>($d51);
$d54 = $d52 + $d53;
r82[i53] = $d54;
$r56 = <java.lang.System: java.io.PrintStream out>;
$r55 = new java.lang.StringBuilder;
specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma[\");
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$d55 = r82[i53];
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d55);
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r61);
i53 = i53 + 1;
goto [?= $i1 = lengthof r81];
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i1 = lengthof r81;
if i53 >= $i1 goto $r11 = r4[0];
";
    "Block 12:
[preds: 7 ] [succs: 13 14 ]
$r11 = r4[0];
$i2 = lengthof $r11;
$i3 = $i2 % 2;
if $i3 != 0 goto $i5 = r8[0];
"->"Block 13:
[preds: 12 ] [succs: 15 ]
$d65 = 0.0;
goto [?= d66 = $d65];
";
    "Block 12:
[preds: 7 ] [succs: 13 14 ]
$r11 = r4[0];
$i2 = lengthof $r11;
$i3 = $i2 % 2;
if $i3 != 0 goto $i5 = r8[0];
"->"Block 14:
[preds: 12 ] [succs: 15 ]
$i5 = r8[0];
$i4 = r8[2];
$i6 = $i5 - $i4;
$d0 = (double) $i6;
$d65 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
$d65 = 0.0;
goto [?= d66 = $d65];
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
d66 = $d65;
$r12 = r4[1];
$i7 = lengthof $r12;
$i8 = $i7 % 2;
if $i8 != 0 goto $i10 = r8[1];
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
$i5 = r8[0];
$i4 = r8[2];
$i6 = $i5 - $i4;
$d0 = (double) $i6;
$d65 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
d66 = $d65;
$r12 = r4[1];
$i7 = lengthof $r12;
$i8 = $i7 % 2;
if $i8 != 0 goto $i10 = r8[1];
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
d66 = $d65;
$r12 = r4[1];
$i7 = lengthof $r12;
$i8 = $i7 % 2;
if $i8 != 0 goto $i10 = r8[1];
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$d67 = 0.0;
goto [?= d2 = $d67];
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
d66 = $d65;
$r12 = r4[1];
$i7 = lengthof $r12;
$i8 = $i7 % 2;
if $i8 != 0 goto $i10 = r8[1];
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$i10 = r8[1];
$i9 = r8[2];
$i11 = $i10 - $i9;
$d1 = (double) $i11;
$d67 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$d67 = 0.0;
goto [?= d2 = $d67];
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
d2 = $d67;
$r13 = r4[0];
$i12 = lengthof $r13;
$i13 = $i12 % 2;
if $i13 != 0 goto $r14 = r4[0];
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$i10 = r8[1];
$i9 = r8[2];
$i11 = $i10 - $i9;
$d1 = (double) $i11;
$d67 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);
"->"Block 18:
[preds: 16 17 ] [succs: 19 20 ]
d2 = $d67;
$r13 = r4[0];
$i12 = lengthof $r13;
$i13 = $i12 % 2;
if $i13 != 0 goto $r14 = r4[0];
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
d2 = $d67;
$r13 = r4[0];
$i12 = lengthof $r13;
$i13 = $i12 % 2;
if $i13 != 0 goto $r14 = r4[0];
"->"Block 19:
[preds: 18 ] [succs: 21 ]
$r45 = r4[0];
$i31 = lengthof $r45;
$d48 = (double) $i31;
$d68 = $d48 / 2.0;
goto [?= d4 = $d68];
";
    "Block 18:
[preds: 16 17 ] [succs: 19 20 ]
d2 = $d67;
$r13 = r4[0];
$i12 = lengthof $r13;
$i13 = $i12 % 2;
if $i13 != 0 goto $r14 = r4[0];
"->"Block 20:
[preds: 18 ] [succs: 21 ]
$r14 = r4[0];
$i14 = lengthof $r14;
$i15 = $i14 - 1;
$d3 = (double) $i15;
$d68 = $d3 / 2.0;
";
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r45 = r4[0];
$i31 = lengthof $r45;
$d48 = (double) $i31;
$d68 = $d48 / 2.0;
goto [?= d4 = $d68];
"->"Block 21:
[preds: 19 20 ] [succs: 22 23 ]
d4 = $d68;
$r15 = r4[1];
$i16 = lengthof $r15;
$i17 = $i16 % 2;
if $i17 != 0 goto $r16 = r4[1];
";
    "Block 20:
[preds: 18 ] [succs: 21 ]
$r14 = r4[0];
$i14 = lengthof $r14;
$i15 = $i14 - 1;
$d3 = (double) $i15;
$d68 = $d3 / 2.0;
"->"Block 21:
[preds: 19 20 ] [succs: 22 23 ]
d4 = $d68;
$r15 = r4[1];
$i16 = lengthof $r15;
$i17 = $i16 % 2;
if $i17 != 0 goto $r16 = r4[1];
";
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
d4 = $d68;
$r15 = r4[1];
$i16 = lengthof $r15;
$i17 = $i16 % 2;
if $i17 != 0 goto $r16 = r4[1];
"->"Block 22:
[preds: 21 ] [succs: 24 ]
$r44 = r4[1];
$i30 = lengthof $r44;
$d47 = (double) $i30;
$d69 = $d47 / 2.0;
goto [?= d6 = $d69];
";
    "Block 21:
[preds: 19 20 ] [succs: 22 23 ]
d4 = $d68;
$r15 = r4[1];
$i16 = lengthof $r15;
$i17 = $i16 % 2;
if $i17 != 0 goto $r16 = r4[1];
"->"Block 23:
[preds: 21 ] [succs: 24 ]
$r16 = r4[1];
$i18 = lengthof $r16;
$i19 = $i18 - 1;
$d5 = (double) $i19;
$d69 = $d5 / 2.0;
";
    "Block 22:
[preds: 21 ] [succs: 24 ]
$r44 = r4[1];
$i30 = lengthof $r44;
$d47 = (double) $i30;
$d69 = $d47 / 2.0;
goto [?= d6 = $d69];
"->"Block 24:
[preds: 22 23 ] [succs: 25 26 ]
d6 = $d69;
$i20 = r8[0];
$d8 = (double) $i20;
$d7 = r82[0];
$d10 = $d8 + $d7;
$i21 = r8[2];
$d9 = (double) $i21;
$d11 = $d10 - $d9;
$d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);
$d18 = $d12 * d4;
$i22 = r8[0];
$d14 = (double) $i22;
$d13 = r82[0];
$d16 = $d14 - $d13;
$i23 = r8[2];
$d15 = (double) $i23;
$d17 = $d16 - $d15;
$d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);
$d20 = $d19 * d4;
$d21 = $d18 + $d20;
$d27 = $d21 + d66;
$i24 = r8[1];
$d23 = (double) $i24;
$d22 = r82[1];
$d25 = $d23 + $d22;
$i25 = r8[2];
$d24 = (double) $i25;
$d26 = $d25 - $d24;
$d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, 2.0);
$d29 = $d28 * d6;
$d35 = $d27 + $d29;
$i26 = r8[1];
$d31 = (double) $i26;
$d30 = r82[1];
$d33 = $d31 - $d30;
$i27 = r8[2];
$d32 = (double) $i27;
$d34 = $d33 - $d32;
$d36 = staticinvoke <java.lang.Math: double pow(double,double)>($d34, 2.0);
$d37 = $d36 * d6;
$d38 = $d35 + $d37;
d39 = $d38 + d2;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"SumBoth=\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d39);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
$r22 = r4[2];
$i28 = lengthof $r22;
$d40 = (double) $i28;
$d41 = d39 / $d40;
d42 = staticinvoke <java.lang.Math: double sqrt(double)>($d41);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"foo: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d66);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r29 = <java.lang.System: java.io.PrintStream out>;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bar: \");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma both samples=\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d42);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
$d43 = r82[2];
$d44 = d42 - $d43;
$b29 = $d44 cmpl 0.0;
if $b29 != 0 goto $r39 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 23:
[preds: 21 ] [succs: 24 ]
$r16 = r4[1];
$i18 = lengthof $r16;
$i19 = $i18 - 1;
$d5 = (double) $i19;
$d69 = $d5 / 2.0;
"->"Block 24:
[preds: 22 23 ] [succs: 25 26 ]
d6 = $d69;
$i20 = r8[0];
$d8 = (double) $i20;
$d7 = r82[0];
$d10 = $d8 + $d7;
$i21 = r8[2];
$d9 = (double) $i21;
$d11 = $d10 - $d9;
$d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);
$d18 = $d12 * d4;
$i22 = r8[0];
$d14 = (double) $i22;
$d13 = r82[0];
$d16 = $d14 - $d13;
$i23 = r8[2];
$d15 = (double) $i23;
$d17 = $d16 - $d15;
$d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);
$d20 = $d19 * d4;
$d21 = $d18 + $d20;
$d27 = $d21 + d66;
$i24 = r8[1];
$d23 = (double) $i24;
$d22 = r82[1];
$d25 = $d23 + $d22;
$i25 = r8[2];
$d24 = (double) $i25;
$d26 = $d25 - $d24;
$d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, 2.0);
$d29 = $d28 * d6;
$d35 = $d27 + $d29;
$i26 = r8[1];
$d31 = (double) $i26;
$d30 = r82[1];
$d33 = $d31 - $d30;
$i27 = r8[2];
$d32 = (double) $i27;
$d34 = $d33 - $d32;
$d36 = staticinvoke <java.lang.Math: double pow(double,double)>($d34, 2.0);
$d37 = $d36 * d6;
$d38 = $d35 + $d37;
d39 = $d38 + d2;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"SumBoth=\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d39);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
$r22 = r4[2];
$i28 = lengthof $r22;
$d40 = (double) $i28;
$d41 = d39 / $d40;
d42 = staticinvoke <java.lang.Math: double sqrt(double)>($d41);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"foo: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d66);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r29 = <java.lang.System: java.io.PrintStream out>;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bar: \");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma both samples=\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d42);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
$d43 = r82[2];
$d44 = d42 - $d43;
$b29 = $d44 cmpl 0.0;
if $b29 != 0 goto $r39 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 24:
[preds: 22 23 ] [succs: 25 26 ]
d6 = $d69;
$i20 = r8[0];
$d8 = (double) $i20;
$d7 = r82[0];
$d10 = $d8 + $d7;
$i21 = r8[2];
$d9 = (double) $i21;
$d11 = $d10 - $d9;
$d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);
$d18 = $d12 * d4;
$i22 = r8[0];
$d14 = (double) $i22;
$d13 = r82[0];
$d16 = $d14 - $d13;
$i23 = r8[2];
$d15 = (double) $i23;
$d17 = $d16 - $d15;
$d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);
$d20 = $d19 * d4;
$d21 = $d18 + $d20;
$d27 = $d21 + d66;
$i24 = r8[1];
$d23 = (double) $i24;
$d22 = r82[1];
$d25 = $d23 + $d22;
$i25 = r8[2];
$d24 = (double) $i25;
$d26 = $d25 - $d24;
$d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, 2.0);
$d29 = $d28 * d6;
$d35 = $d27 + $d29;
$i26 = r8[1];
$d31 = (double) $i26;
$d30 = r82[1];
$d33 = $d31 - $d30;
$i27 = r8[2];
$d32 = (double) $i27;
$d34 = $d33 - $d32;
$d36 = staticinvoke <java.lang.Math: double pow(double,double)>($d34, 2.0);
$d37 = $d36 * d6;
$d38 = $d35 + $d37;
d39 = $d38 + d2;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"SumBoth=\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d39);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
$r22 = r4[2];
$i28 = lengthof $r22;
$d40 = (double) $i28;
$d41 = d39 / $d40;
d42 = staticinvoke <java.lang.Math: double sqrt(double)>($d41);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"foo: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d66);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r29 = <java.lang.System: java.io.PrintStream out>;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bar: \");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma both samples=\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d42);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
$d43 = r82[2];
$d44 = d42 - $d43;
$b29 = $d44 cmpl 0.0;
if $b29 != 0 goto $r39 = <java.lang.System: java.io.PrintStream out>;
"->"Block 25:
[preds: 24 ] [succs: 27 ]
$r43 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>(\"Combined stdev of both samples are equal to stddev of merged samples.\");
goto [?= return];
";
    "Block 24:
[preds: 22 23 ] [succs: 25 26 ]
d6 = $d69;
$i20 = r8[0];
$d8 = (double) $i20;
$d7 = r82[0];
$d10 = $d8 + $d7;
$i21 = r8[2];
$d9 = (double) $i21;
$d11 = $d10 - $d9;
$d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);
$d18 = $d12 * d4;
$i22 = r8[0];
$d14 = (double) $i22;
$d13 = r82[0];
$d16 = $d14 - $d13;
$i23 = r8[2];
$d15 = (double) $i23;
$d17 = $d16 - $d15;
$d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);
$d20 = $d19 * d4;
$d21 = $d18 + $d20;
$d27 = $d21 + d66;
$i24 = r8[1];
$d23 = (double) $i24;
$d22 = r82[1];
$d25 = $d23 + $d22;
$i25 = r8[2];
$d24 = (double) $i25;
$d26 = $d25 - $d24;
$d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, 2.0);
$d29 = $d28 * d6;
$d35 = $d27 + $d29;
$i26 = r8[1];
$d31 = (double) $i26;
$d30 = r82[1];
$d33 = $d31 - $d30;
$i27 = r8[2];
$d32 = (double) $i27;
$d34 = $d33 - $d32;
$d36 = staticinvoke <java.lang.Math: double pow(double,double)>($d34, 2.0);
$d37 = $d36 * d6;
$d38 = $d35 + $d37;
d39 = $d38 + d2;
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"SumBoth=\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d39);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
$r22 = r4[2];
$i28 = lengthof $r22;
$d40 = (double) $i28;
$d41 = d39 / $d40;
d42 = staticinvoke <java.lang.Math: double sqrt(double)>($d41);
$r24 = <java.lang.System: java.io.PrintStream out>;
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"foo: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d66);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r29 = <java.lang.System: java.io.PrintStream out>;
$r28 = new java.lang.StringBuilder;
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"bar: \");
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);
$r34 = <java.lang.System: java.io.PrintStream out>;
$r33 = new java.lang.StringBuilder;
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Sigma both samples=\");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d42);
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);
$d43 = r82[2];
$d44 = d42 - $d43;
$b29 = $d44 cmpl 0.0;
if $b29 != 0 goto $r39 = <java.lang.System: java.io.PrintStream out>;
"->"Block 26:
[preds: 24 ] [succs: 27 ]
$r39 = <java.lang.System: java.io.PrintStream out>;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Combined stddev of both samples are not equal to stddev of merged samples, but should. Diff: \");
$d45 = r82[2];
$d46 = d42 - $d45;
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d46);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r42);
";
    "Block 25:
[preds: 24 ] [succs: 27 ]
$r43 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>(\"Combined stdev of both samples are equal to stddev of merged samples.\");
goto [?= return];
"->"Block 27:
[preds: 25 26 ] [succs: ]
return;
";
    "Block 26:
[preds: 24 ] [succs: 27 ]
$r39 = <java.lang.System: java.io.PrintStream out>;
$r38 = new java.lang.StringBuilder;
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Combined stddev of both samples are not equal to stddev of merged samples, but should. Diff: \");
$d45 = r82[2];
$d46 = d42 - $d45;
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d46);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r42);
"->"Block 27:
[preds: 25 26 ] [succs: ]
return;
";
}
