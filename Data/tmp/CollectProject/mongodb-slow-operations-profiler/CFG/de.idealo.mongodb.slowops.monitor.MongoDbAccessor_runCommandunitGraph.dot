digraph "unitGraph" {
    "r3 := @this: de.idealo.mongodb.slowops.monitor.MongoDbAccessor"
    "r0 := @parameter0: java.lang.String"
    "r5 := @parameter1: com.mongodb.DBObject"
    "if r0 == null goto $r1 = new java.lang.IllegalStateException"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"
    "if $z0 != 0 goto $r1 = new java.lang.IllegalStateException"
    "l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$r2 = new org.bson.Document"
    "specialinvoke $r2.<org.bson.Document: void <init>()>()"
    "r17 = $r2"
    "$r4 = virtualinvoke r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.client.MongoDatabase getMongoDatabase(java.lang.String)>(r0)"
    "$r6 = (org.bson.conversions.Bson) r5"
    "$z1 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: boolean isSecondaryReadPreferred>"
    "if $z1 == 0 goto $r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference secondaryPreferred()>()"
    "goto [?= r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)]"
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"
    "r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)"
    "goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]"
    "$r12 := @caughtexception"
    "r20 = $r12"
    "$r14 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>"
    "$r13 = newarray (java.lang.Object)[3]"
    "$r15 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()"
    "$r13[0] = $r15"
    "$r16 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>"
    "$r13[1] = $r16"
    "$r13[2] = r0"
    "interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand failed {} on {}/{}\", $r13)"
    "throw r20"
    "l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$r8 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>"
    "$r7 = newarray (java.lang.Object)[4]"
    "$r9 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()"
    "$r7[0] = $r9"
    "$l1 = l2 - l0"
    "$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"
    "$r7[1] = $r10"
    "$r11 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>"
    "$r7[2] = $r11"
    "$r7[3] = r0"
    "interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand {} execTime in ms: {} on {}/{}\", $r7)"
    "return r19"
    "$r1 = new java.lang.IllegalStateException"
    "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Database not initialized\")"
    "throw $r1"
    "r3 := @this: de.idealo.mongodb.slowops.monitor.MongoDbAccessor"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r5 := @parameter1: com.mongodb.DBObject";
    "r5 := @parameter1: com.mongodb.DBObject"->"if r0 == null goto $r1 = new java.lang.IllegalStateException";
    "if r0 == null goto $r1 = new java.lang.IllegalStateException"->"$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()";
    "if r0 == null goto $r1 = new java.lang.IllegalStateException"->"$r1 = new java.lang.IllegalStateException";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"->"if $z0 != 0 goto $r1 = new java.lang.IllegalStateException";
    "if $z0 != 0 goto $r1 = new java.lang.IllegalStateException"->"l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "if $z0 != 0 goto $r1 = new java.lang.IllegalStateException"->"$r1 = new java.lang.IllegalStateException";
    "l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$r2 = new org.bson.Document";
    "$r2 = new org.bson.Document"->"specialinvoke $r2.<org.bson.Document: void <init>()>()";
    "specialinvoke $r2.<org.bson.Document: void <init>()>()"->"r17 = $r2";
    "r17 = $r2"->"$r4 = virtualinvoke r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.client.MongoDatabase getMongoDatabase(java.lang.String)>(r0)";
    "r17 = $r2"->"$r12 := @caughtexception";
    "$r4 = virtualinvoke r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.client.MongoDatabase getMongoDatabase(java.lang.String)>(r0)"->"$r6 = (org.bson.conversions.Bson) r5";
    "$r4 = virtualinvoke r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.client.MongoDatabase getMongoDatabase(java.lang.String)>(r0)"->"$r12 := @caughtexception";
    "$r6 = (org.bson.conversions.Bson) r5"->"$z1 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: boolean isSecondaryReadPreferred>";
    "$r6 = (org.bson.conversions.Bson) r5"->"$r12 := @caughtexception";
    "$z1 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: boolean isSecondaryReadPreferred>"->"if $z1 == 0 goto $r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()";
    "$z1 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: boolean isSecondaryReadPreferred>"->"$r12 := @caughtexception";
    "if $z1 == 0 goto $r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"->"$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference secondaryPreferred()>()";
    "if $z1 == 0 goto $r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"->"$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()";
    "if $z1 == 0 goto $r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"->"$r12 := @caughtexception";
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference secondaryPreferred()>()"->"goto [?= r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)]";
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference secondaryPreferred()>()"->"$r12 := @caughtexception";
    "goto [?= r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)]"->"r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)";
    "goto [?= r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)]"->"$r12 := @caughtexception";
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"->"r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)";
    "$r18 = staticinvoke <com.mongodb.ReadPreference: com.mongodb.ReadPreference primaryPreferred()>()"->"$r12 := @caughtexception";
    "r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)"->"goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]";
    "r19 = interfaceinvoke $r4.<com.mongodb.client.MongoDatabase: org.bson.Document runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference)>($r6, $r18)"->"$r12 := @caughtexception";
    "goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]"->"l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "$r12 := @caughtexception"->"r20 = $r12";
    "r20 = $r12"->"$r14 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>";
    "$r14 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>"->"$r13 = newarray (java.lang.Object)[3]";
    "$r13 = newarray (java.lang.Object)[3]"->"$r15 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()";
    "$r15 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()"->"$r13[0] = $r15";
    "$r13[0] = $r15"->"$r16 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>";
    "$r16 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>"->"$r13[1] = $r16";
    "$r13[1] = $r16"->"$r13[2] = r0";
    "$r13[2] = r0"->"interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand failed {} on {}/{}\", $r13)";
    "interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand failed {} on {}/{}\", $r13)"->"throw r20";
    "l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$r8 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>";
    "$r8 = <de.idealo.mongodb.slowops.monitor.MongoDbAccessor: org.slf4j.Logger LOG>"->"$r7 = newarray (java.lang.Object)[4]";
    "$r7 = newarray (java.lang.Object)[4]"->"$r9 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()";
    "$r9 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()"->"$r7[0] = $r9";
    "$r7[0] = $r9"->"$l1 = l2 - l0";
    "$l1 = l2 - l0"->"$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)";
    "$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"$r7[1] = $r10";
    "$r7[1] = $r10"->"$r11 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>";
    "$r11 = r3.<de.idealo.mongodb.slowops.monitor.MongoDbAccessor: com.mongodb.ServerAddress[] serverAddresses>"->"$r7[2] = $r11";
    "$r7[2] = $r11"->"$r7[3] = r0";
    "$r7[3] = r0"->"interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand {} execTime in ms: {} on {}/{}\", $r7)";
    "interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(\"runCommand {} execTime in ms: {} on {}/{}\", $r7)"->"return r19";
    "$r1 = new java.lang.IllegalStateException"->"specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Database not initialized\")";
    "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\"Database not initialized\")"->"throw $r1";
}
