digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 30 31 1 ]
r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher;
r4 := @parameter0: java.lang.StringBuffer;
r14 := @parameter1: java.lang.Object[];
r6 := @parameter2: java.lang.StringBuffer;
r8 := @parameter3: java.lang.StringBuffer;
$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto;
specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.String)[19];
$r2[0] = \"count\";
$r2[1] = \"minSec\";
$r2[2] = \"maxSec\";
$r2[3] = \"sumSec\";
$r2[4] = \"stdDevMs\";
$r2[5] = \"nRet\";
$r2[6] = \"minRet\";
$r2[7] = \"maxRet\";
$r2[8] = \"avgRet\";
$r2[9] = \"stdDevRet\";
$r2[10] = \"len\";
$r2[11] = \"minLen\";
$r2[12] = \"maxLen\";
$r2[13] = \"avgLen\";
$r2[14] = \"stdDevLen\";
$r2[15] = \"rKeys\";
$r2[16] = \"rDocs\";
$r2[17] = \"wDocs\";
$r2[18] = \"memSort\";
r3 = $r2;
$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4);
$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6);
$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8);
"
    "Block 1:
[preds: 0 ] [succs: 30 31 2 ]
$r10 = new java.util.Date;
"
    "Block 2:
[preds: 1 ] [succs: 30 31 3 ]
specialinvoke $r10.<java.util.Date: void <init>()>();
"
    "Block 3:
[preds: 2 ] [succs: 30 31 4 ]
r123 = $r10;
"
    "Block 4:
[preds: 3 ] [succs: 30 31 5 ]
$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>;
"
    "Block 5:
[preds: 4 ] [succs: 30 31 6 ]
$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
"
    "Block 6:
[preds: 5 ] [succs: 30 31 7 ]
$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14);
"
    "Block 7:
[preds: 6 ] [succs: 30 31 8 ]
$r16 = new java.lang.StringBuilder;
"
    "Block 8:
[preds: 7 ] [succs: 30 31 9 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
"
    "Block 9:
[preds: 8 ] [succs: 30 31 10 ]
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\");
"
    "Block 10:
[preds: 9 ] [succs: 30 31 11 ]
$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();
"
    "Block 11:
[preds: 10 ] [succs: 30 31 12 ]
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
"
    "Block 12:
[preds: 11 ] [succs: 30 31 13 ]
$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();
"
    "Block 13:
[preds: 12 ] [succs: 30 31 14 ]
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
"
    "Block 14:
[preds: 13 ] [succs: 30 31 15 ]
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\");
"
    "Block 15:
[preds: 14 ] [succs: 30 31 16 ]
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 16:
[preds: 15 ] [succs: 30 31 17 ]
$r24 = newarray (java.lang.Object)[0];
"
    "Block 17:
[preds: 16 ] [succs: 30 31 18 ]
$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24);
"
    "Block 18:
[preds: 17 ] [succs: 30 31 19 ]
$r26 = newarray (java.lang.Object)[0];
"
    "Block 19:
[preds: 18 ] [succs: 30 31 20 ]
$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26);
"
    "Block 20:
[preds: 19 ] [succs: 30 31 21 ]
r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\");
"
    "Block 21:
[preds: 20 ] [succs: 30 31 22 ]
$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
"
    "Block 22:
[preds: 21 ] [succs: 30 31 23 ]
$r28 = new java.util.Date;
"
    "Block 23:
[preds: 22 ] [succs: 30 31 24 ]
specialinvoke $r28.<java.util.Date: void <init>()>();
"
    "Block 24:
[preds: 23 ] [succs: 30 31 25 ]
$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>();
"
    "Block 25:
[preds: 24 ] [succs: 30 31 26 ]
$l1 = virtualinvoke r123.<java.util.Date: long getTime()>();
"
    "Block 26:
[preds: 25 ] [succs: 30 31 27 ]
$l2 = $l0 - $l1;
"
    "Block 27:
[preds: 26 ] [succs: 30 31 28 ]
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
"
    "Block 28:
[preds: 27 ] [succs: 30 31 29 ]
interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30);
"
    "Block 29:
[preds: 28 ] [succs: 32 ]
goto [?= $r31 = new java.util.TreeMap];
"
    "Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
"
    "Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
"
    "Block 32:
[preds: 29 ] [succs: 33 ]
$r31 = new java.util.TreeMap;
specialinvoke $r31.<java.util.TreeMap: void <init>()>();
r127 = $r31;
r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>();
$r33 = new java.util.HashMap;
specialinvoke $r33.<java.util.HashMap: void <init>()>();
r34 = $r33;
i86 = 0;
$r35 = new java.util.GregorianCalendar;
specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>();
r128 = $r35;
d32 = 0.0;
d33 = 0.0;
d34 = 0.0;
l87 = 0L;
r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>();
"
    "Block 33:
[preds: 32 51 ] [succs: 34 52 ]
$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r36 = new java.lang.StringBuffer;
"
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();
r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110;
r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132);
if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
"
    "Block 35:
[preds: 34 ] [succs: 36 ]
$i85 = i86;
i86 = i86 + 1;
$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85);
virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117);
"
    "Block 36:
[preds: 34 35 ] [succs: 37 38 ]
$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
"
    "Block 37:
[preds: 36 ] [succs: 39 ]
$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>();
virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116);
goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()];
"
    "Block 38:
[preds: 36 ] [succs: 39 ]
$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111;
virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130);
"
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>();
$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133);
r134 = (java.util.Set) $r113;
if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
"
    "Block 40:
[preds: 39 ] [succs: 41 ]
$r115 = new java.util.HashSet;
specialinvoke $r115.<java.util.HashSet: void <init>()>();
r134 = $r115;
interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134);
"
    "Block 41:
[preds: 39 40 ] [succs: 42 43 ]
interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133);
if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
"
    "Block 42:
[preds: 41 ] [succs: 43 ]
$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>();
r128 = (java.util.Calendar) $r114;
"
    "Block 43:
[preds: 41 42 ] [succs: 44 45 ]
$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$b80 = d32 cmpg $d29;
if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
"
    "Block 44:
[preds: 43 ] [succs: 45 ]
d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
"
    "Block 45:
[preds: 43 44 ] [succs: 46 47 ]
$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$b81 = d33 cmpg $d30;
if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
"
    "Block 46:
[preds: 45 ] [succs: 47 ]
d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
"
    "Block 47:
[preds: 45 46 ] [succs: 48 49 ]
$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$b82 = d34 cmpg $d31;
if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
"
    "Block 48:
[preds: 47 ] [succs: 49 ]
d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
"
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$b84 = l87 cmp $l83;
if $b84 >= 0 goto (branch);
"
    "Block 50:
[preds: 49 ] [succs: 51 ]
l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
"
    "Block 51:
[preds: 49 50 ] [succs: 33 ]
goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 52:
[preds: 33 ] [succs: 53 ]
$r36 = new java.lang.StringBuffer;
specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\");
r135 = $r36;
r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>();
i88 = 0;
"
    "Block 53:
[preds: 52 57 ] [succs: 54 58 ]
if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
"
    "Block 54:
[preds: 53 ] [succs: 55 ]
$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88);
$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103);
$r105 = (java.lang.String) $r104;
$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);
virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = 0;
"
    "Block 55:
[preds: 54 56 ] [succs: 56 57 ]
$i79 = lengthof r3;
if i89 >= $i79 goto i88 = i88 + 1;
"
    "Block 56:
[preds: 55 ] [succs: 55 ]
$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r108 = r3[i89];
$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);
virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = i89 + 1;
goto [?= $i79 = lengthof r3];
"
    "Block 57:
[preds: 55 ] [succs: 53 ]
i88 = i88 + 1;
goto [?= (branch)];
"
    "Block 58:
[preds: 53 ] [succs: 59 60 ]
$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
if $i3 <= 0 goto $r37 = new java.lang.StringBuffer;
"
    "Block 59:
[preds: 58 ] [succs: 60 ]
$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
$i78 = $i77 - 1;
virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78);
"
    "Block 60:
[preds: 58 59 ] [succs: 61 ]
$r37 = new java.lang.StringBuffer;
specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\");
r137 = $r37;
$r38 = new java.text.SimpleDateFormat;
specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\");
r138 = $r38;
$r39 = new java.text.DecimalFormatSymbols;
specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>();
r139 = $r39;
virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
$r40 = new java.text.DecimalFormat;
specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139);
r140 = $r40;
virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1);
$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>();
$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42);
$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);
virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i5 = neg $i4;
$d0 = (double) $i5;
$d1 = d32 / $d0;
$d2 = $d1 / 10.0;
$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2);
$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);
virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\");
$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i7 = neg $i6;
$d3 = (double) $i7;
$d4 = d33 / $d3;
$d5 = $d4 / 10.0;
$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5);
$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);
virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i9 = neg $i8;
$d6 = (double) $i9;
$d7 = d34 / $d6;
$d8 = $d7 / 10.0;
$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8);
$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);
virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i11 = neg $i10;
$l12 = (long) $i11;
$l13 = l87 / $l12;
$l14 = $l13 / 10L;
$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14);
$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);
virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i18 = $i15 - 1;
$i16 = lengthof r3;
$i17 = $i16 + 1;
i19 = $i18 * $i17;
i90 = 0;
"
    "Block 61:
[preds: 60 62 ] [succs: 62 63 ]
if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"
    "Block 62:
[preds: 61 ] [succs: 61 ]
$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\");
virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i90 = i90 + 1;
goto [?= (branch)];
"
    "Block 63:
[preds: 61 ] [succs: 64 ]
$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i21 = $i20 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>();
r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 64:
[preds: 63 77 ] [succs: 65 78 ]
$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"
    "Block 65:
[preds: 64 ] [succs: 66 ]
$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>();
r142 = (java.util.Calendar) $r54;
$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142);
r143 = (java.util.Set) $r55;
$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>();
$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57);
$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);
virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i33 = lengthof r3;
$i34 = $i33 + 1;
$i35 = $i32 * $i34;
r144 = newarray (java.lang.String)[$i35];
r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 66:
[preds: 65 70 ] [succs: 67 71 ]
$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto i91 = 0;
"
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>();
r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63;
r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66);
r68 = (java.lang.Integer) $r67;
$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>();
$i40 = lengthof r3;
$i41 = $i40 + 1;
i42 = $i39 * $i41;
$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d10 = (double) $i43;
$d11 = $d9 / $d10;
$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11);
r144[i42] = $r69;
$i44 = i42 + 1;
$r70 = new java.lang.StringBuilder;
specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>();
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i44] = $r73;
$i46 = i42 + 2;
$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d13 = (double) $i47;
$d14 = $d12 / $d13;
$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14);
r144[$i46] = $r74;
$i48 = i42 + 3;
$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d16 = (double) $i49;
$d17 = $d15 / $d16;
$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17);
r144[$i48] = $r75;
$i50 = i42 + 4;
$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$l53 = (long) $i52;
$l54 = $l51 / $l53;
$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54);
r144[$i50] = $r76;
$i55 = i42 + 5;
$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>();
$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18);
r144[$i55] = $r77;
$i56 = i42 + 6;
$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>();
$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19);
r144[$i56] = $r78;
$i57 = i42 + 7;
$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>();
$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20);
r144[$i57] = $r79;
$i58 = i42 + 8;
$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>();
$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21);
r144[$i58] = $r80;
$i59 = i42 + 9;
$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>();
$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22);
r144[$i59] = $r81;
$i60 = i42 + 10;
$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>();
$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23);
r144[$i60] = $r82;
$i61 = i42 + 11;
$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>();
$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24);
r144[$i61] = $r83;
$i62 = i42 + 12;
$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>();
$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25);
r144[$i62] = $r84;
$i63 = i42 + 13;
$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>();
$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26);
r144[$i63] = $r85;
$i64 = i42 + 14;
$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>();
$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27);
r144[$i64] = $r86;
$i65 = i42 + 15;
$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>();
$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28);
r144[$i65] = $r87;
$i66 = i42 + 16;
$r88 = new java.lang.StringBuilder;
specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i66] = $r91;
$i68 = i42 + 17;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>();
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69);
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i68] = $r95;
$i70 = i42 + 18;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>();
$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>();
$l73 = $l71 + $l72;
$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>();
$l75 = $l73 + $l74;
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i70] = $r99;
$i76 = i42 + 19;
$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>();
if $z3 == 0 goto $r146 = \"0\";
"
    "Block 68:
[preds: 67 ] [succs: 70 ]
$r146 = \"1\";
goto [?= r144[$i76] = $r146];
"
    "Block 69:
[preds: 67 ] [succs: 70 ]
$r146 = \"0\";
"
    "Block 70:
[preds: 68 69 ] [succs: 66 ]
r144[$i76] = $r146;
goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 71:
[preds: 66 ] [succs: 72 ]
i91 = 0;
"
    "Block 72:
[preds: 71 76 ] [succs: 73 77 ]
$i36 = lengthof r144;
if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r60 = r144[i91];
if $r60 != null goto $r147 = r144[i91];
"
    "Block 74:
[preds: 73 ] [succs: 76 ]
$r147 = \"0\";
goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)];
"
    "Block 75:
[preds: 73 ] [succs: 76 ]
$r147 = r144[i91];
"
    "Block 76:
[preds: 74 75 ] [succs: 72 ]
$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147);
virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i91 = i91 + 1;
goto [?= $i36 = lengthof r144];
"
    "Block 77:
[preds: 72 ] [succs: 64 ]
$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i38 = $i37 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 78:
[preds: 64 ] [succs: 79 ]
$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i23 = $i22 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\");
$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i25 = lengthof r3;
$i26 = $i25 + 1;
$i27 = $i24 * $i26;
r148 = newarray (boolean)[$i27];
i92 = 0;
i93 = 0;
"
    "Block 79:
[preds: 78 83 ] [succs: 80 84 ]
$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
"
    "Block 80:
[preds: 79 ] [succs: 81 ]
$i29 = i92;
i92 = i92 + 1;
r148[$i29] = 1;
i94 = 0;
"
    "Block 81:
[preds: 80 82 ] [succs: 82 83 ]
$i30 = lengthof r3;
if i94 >= $i30 goto i93 = i93 + 1;
"
    "Block 82:
[preds: 81 ] [succs: 81 ]
$i31 = i92;
i92 = i92 + 1;
r148[$i31] = 0;
i94 = i94 + 1;
goto [?= $i30 = lengthof r3];
"
    "Block 83:
[preds: 81 ] [succs: 79 ]
i93 = i93 + 1;
goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()];
"
    "Block 84:
[preds: 79 ] [succs: ]
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setDataGrid(java.lang.StringBuffer)>(r137);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setVisibilityValues(boolean[])>(r148);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabelSeries(java.util.HashMap)>(r34);
return r1;
"
    "Block 0:
[preds: ] [succs: 30 31 1 ]
r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher;
r4 := @parameter0: java.lang.StringBuffer;
r14 := @parameter1: java.lang.Object[];
r6 := @parameter2: java.lang.StringBuffer;
r8 := @parameter3: java.lang.StringBuffer;
$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto;
specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.String)[19];
$r2[0] = \"count\";
$r2[1] = \"minSec\";
$r2[2] = \"maxSec\";
$r2[3] = \"sumSec\";
$r2[4] = \"stdDevMs\";
$r2[5] = \"nRet\";
$r2[6] = \"minRet\";
$r2[7] = \"maxRet\";
$r2[8] = \"avgRet\";
$r2[9] = \"stdDevRet\";
$r2[10] = \"len\";
$r2[11] = \"minLen\";
$r2[12] = \"maxLen\";
$r2[13] = \"avgLen\";
$r2[14] = \"stdDevLen\";
$r2[15] = \"rKeys\";
$r2[16] = \"rDocs\";
$r2[17] = \"wDocs\";
$r2[18] = \"memSort\";
r3 = $r2;
$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4);
$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6);
$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 0:
[preds: ] [succs: 30 31 1 ]
r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher;
r4 := @parameter0: java.lang.StringBuffer;
r14 := @parameter1: java.lang.Object[];
r6 := @parameter2: java.lang.StringBuffer;
r8 := @parameter3: java.lang.StringBuffer;
$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto;
specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.String)[19];
$r2[0] = \"count\";
$r2[1] = \"minSec\";
$r2[2] = \"maxSec\";
$r2[3] = \"sumSec\";
$r2[4] = \"stdDevMs\";
$r2[5] = \"nRet\";
$r2[6] = \"minRet\";
$r2[7] = \"maxRet\";
$r2[8] = \"avgRet\";
$r2[9] = \"stdDevRet\";
$r2[10] = \"len\";
$r2[11] = \"minLen\";
$r2[12] = \"maxLen\";
$r2[13] = \"avgLen\";
$r2[14] = \"stdDevLen\";
$r2[15] = \"rKeys\";
$r2[16] = \"rDocs\";
$r2[17] = \"wDocs\";
$r2[18] = \"memSort\";
r3 = $r2;
$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4);
$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6);
$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 0:
[preds: ] [succs: 30 31 1 ]
r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher;
r4 := @parameter0: java.lang.StringBuffer;
r14 := @parameter1: java.lang.Object[];
r6 := @parameter2: java.lang.StringBuffer;
r8 := @parameter3: java.lang.StringBuffer;
$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto;
specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.String)[19];
$r2[0] = \"count\";
$r2[1] = \"minSec\";
$r2[2] = \"maxSec\";
$r2[3] = \"sumSec\";
$r2[4] = \"stdDevMs\";
$r2[5] = \"nRet\";
$r2[6] = \"minRet\";
$r2[7] = \"maxRet\";
$r2[8] = \"avgRet\";
$r2[9] = \"stdDevRet\";
$r2[10] = \"len\";
$r2[11] = \"minLen\";
$r2[12] = \"maxLen\";
$r2[13] = \"avgLen\";
$r2[14] = \"stdDevLen\";
$r2[15] = \"rKeys\";
$r2[16] = \"rDocs\";
$r2[17] = \"wDocs\";
$r2[18] = \"memSort\";
r3 = $r2;
$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4);
$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6);
$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8);
"->"Block 1:
[preds: 0 ] [succs: 30 31 2 ]
$r10 = new java.util.Date;
";
    "Block 1:
[preds: 0 ] [succs: 30 31 2 ]
$r10 = new java.util.Date;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 1:
[preds: 0 ] [succs: 30 31 2 ]
$r10 = new java.util.Date;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 1:
[preds: 0 ] [succs: 30 31 2 ]
$r10 = new java.util.Date;
"->"Block 2:
[preds: 1 ] [succs: 30 31 3 ]
specialinvoke $r10.<java.util.Date: void <init>()>();
";
    "Block 2:
[preds: 1 ] [succs: 30 31 3 ]
specialinvoke $r10.<java.util.Date: void <init>()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 30 31 3 ]
specialinvoke $r10.<java.util.Date: void <init>()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 30 31 3 ]
specialinvoke $r10.<java.util.Date: void <init>()>();
"->"Block 3:
[preds: 2 ] [succs: 30 31 4 ]
r123 = $r10;
";
    "Block 3:
[preds: 2 ] [succs: 30 31 4 ]
r123 = $r10;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 3:
[preds: 2 ] [succs: 30 31 4 ]
r123 = $r10;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 3:
[preds: 2 ] [succs: 30 31 4 ]
r123 = $r10;
"->"Block 4:
[preds: 3 ] [succs: 30 31 5 ]
$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>;
";
    "Block 4:
[preds: 3 ] [succs: 30 31 5 ]
$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 4:
[preds: 3 ] [succs: 30 31 5 ]
$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 4:
[preds: 3 ] [succs: 30 31 5 ]
$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>;
"->"Block 5:
[preds: 4 ] [succs: 30 31 6 ]
$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
";
    "Block 5:
[preds: 4 ] [succs: 30 31 6 ]
$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 5:
[preds: 4 ] [succs: 30 31 6 ]
$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 5:
[preds: 4 ] [succs: 30 31 6 ]
$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 6:
[preds: 5 ] [succs: 30 31 7 ]
$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14);
";
    "Block 6:
[preds: 5 ] [succs: 30 31 7 ]
$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 6:
[preds: 5 ] [succs: 30 31 7 ]
$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 6:
[preds: 5 ] [succs: 30 31 7 ]
$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14);
"->"Block 7:
[preds: 6 ] [succs: 30 31 8 ]
$r16 = new java.lang.StringBuilder;
";
    "Block 7:
[preds: 6 ] [succs: 30 31 8 ]
$r16 = new java.lang.StringBuilder;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 7:
[preds: 6 ] [succs: 30 31 8 ]
$r16 = new java.lang.StringBuilder;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 7:
[preds: 6 ] [succs: 30 31 8 ]
$r16 = new java.lang.StringBuilder;
"->"Block 8:
[preds: 7 ] [succs: 30 31 9 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
";
    "Block 8:
[preds: 7 ] [succs: 30 31 9 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 8:
[preds: 7 ] [succs: 30 31 9 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 8:
[preds: 7 ] [succs: 30 31 9 ]
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
"->"Block 9:
[preds: 8 ] [succs: 30 31 10 ]
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\");
";
    "Block 9:
[preds: 8 ] [succs: 30 31 10 ]
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\");
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 9:
[preds: 8 ] [succs: 30 31 10 ]
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\");
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 9:
[preds: 8 ] [succs: 30 31 10 ]
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\");
"->"Block 10:
[preds: 9 ] [succs: 30 31 11 ]
$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();
";
    "Block 10:
[preds: 9 ] [succs: 30 31 11 ]
$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 10:
[preds: 9 ] [succs: 30 31 11 ]
$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 10:
[preds: 9 ] [succs: 30 31 11 ]
$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 11:
[preds: 10 ] [succs: 30 31 12 ]
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
";
    "Block 11:
[preds: 10 ] [succs: 30 31 12 ]
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 11:
[preds: 10 ] [succs: 30 31 12 ]
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 11:
[preds: 10 ] [succs: 30 31 12 ]
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
"->"Block 12:
[preds: 11 ] [succs: 30 31 13 ]
$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();
";
    "Block 12:
[preds: 11 ] [succs: 30 31 13 ]
$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 12:
[preds: 11 ] [succs: 30 31 13 ]
$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 12:
[preds: 11 ] [succs: 30 31 13 ]
$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 13:
[preds: 12 ] [succs: 30 31 14 ]
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
";
    "Block 13:
[preds: 12 ] [succs: 30 31 14 ]
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 13:
[preds: 12 ] [succs: 30 31 14 ]
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 13:
[preds: 12 ] [succs: 30 31 14 ]
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
"->"Block 14:
[preds: 13 ] [succs: 30 31 15 ]
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\");
";
    "Block 14:
[preds: 13 ] [succs: 30 31 15 ]
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\");
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 14:
[preds: 13 ] [succs: 30 31 15 ]
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\");
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 14:
[preds: 13 ] [succs: 30 31 15 ]
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\");
"->"Block 15:
[preds: 14 ] [succs: 30 31 16 ]
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 15:
[preds: 14 ] [succs: 30 31 16 ]
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 15:
[preds: 14 ] [succs: 30 31 16 ]
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 15:
[preds: 14 ] [succs: 30 31 16 ]
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 16:
[preds: 15 ] [succs: 30 31 17 ]
$r24 = newarray (java.lang.Object)[0];
";
    "Block 16:
[preds: 15 ] [succs: 30 31 17 ]
$r24 = newarray (java.lang.Object)[0];
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 16:
[preds: 15 ] [succs: 30 31 17 ]
$r24 = newarray (java.lang.Object)[0];
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 16:
[preds: 15 ] [succs: 30 31 17 ]
$r24 = newarray (java.lang.Object)[0];
"->"Block 17:
[preds: 16 ] [succs: 30 31 18 ]
$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24);
";
    "Block 17:
[preds: 16 ] [succs: 30 31 18 ]
$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 17:
[preds: 16 ] [succs: 30 31 18 ]
$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 17:
[preds: 16 ] [succs: 30 31 18 ]
$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24);
"->"Block 18:
[preds: 17 ] [succs: 30 31 19 ]
$r26 = newarray (java.lang.Object)[0];
";
    "Block 18:
[preds: 17 ] [succs: 30 31 19 ]
$r26 = newarray (java.lang.Object)[0];
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 18:
[preds: 17 ] [succs: 30 31 19 ]
$r26 = newarray (java.lang.Object)[0];
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 18:
[preds: 17 ] [succs: 30 31 19 ]
$r26 = newarray (java.lang.Object)[0];
"->"Block 19:
[preds: 18 ] [succs: 30 31 20 ]
$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26);
";
    "Block 19:
[preds: 18 ] [succs: 30 31 20 ]
$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 19:
[preds: 18 ] [succs: 30 31 20 ]
$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 19:
[preds: 18 ] [succs: 30 31 20 ]
$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26);
"->"Block 20:
[preds: 19 ] [succs: 30 31 21 ]
r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\");
";
    "Block 20:
[preds: 19 ] [succs: 30 31 21 ]
r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\");
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 20:
[preds: 19 ] [succs: 30 31 21 ]
r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\");
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 20:
[preds: 19 ] [succs: 30 31 21 ]
r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\");
"->"Block 21:
[preds: 20 ] [succs: 30 31 22 ]
$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
";
    "Block 21:
[preds: 20 ] [succs: 30 31 22 ]
$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 21:
[preds: 20 ] [succs: 30 31 22 ]
$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 21:
[preds: 20 ] [succs: 30 31 22 ]
$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
"->"Block 22:
[preds: 21 ] [succs: 30 31 23 ]
$r28 = new java.util.Date;
";
    "Block 22:
[preds: 21 ] [succs: 30 31 23 ]
$r28 = new java.util.Date;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 22:
[preds: 21 ] [succs: 30 31 23 ]
$r28 = new java.util.Date;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 22:
[preds: 21 ] [succs: 30 31 23 ]
$r28 = new java.util.Date;
"->"Block 23:
[preds: 22 ] [succs: 30 31 24 ]
specialinvoke $r28.<java.util.Date: void <init>()>();
";
    "Block 23:
[preds: 22 ] [succs: 30 31 24 ]
specialinvoke $r28.<java.util.Date: void <init>()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 23:
[preds: 22 ] [succs: 30 31 24 ]
specialinvoke $r28.<java.util.Date: void <init>()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 23:
[preds: 22 ] [succs: 30 31 24 ]
specialinvoke $r28.<java.util.Date: void <init>()>();
"->"Block 24:
[preds: 23 ] [succs: 30 31 25 ]
$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>();
";
    "Block 24:
[preds: 23 ] [succs: 30 31 25 ]
$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 24:
[preds: 23 ] [succs: 30 31 25 ]
$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 24:
[preds: 23 ] [succs: 30 31 25 ]
$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>();
"->"Block 25:
[preds: 24 ] [succs: 30 31 26 ]
$l1 = virtualinvoke r123.<java.util.Date: long getTime()>();
";
    "Block 25:
[preds: 24 ] [succs: 30 31 26 ]
$l1 = virtualinvoke r123.<java.util.Date: long getTime()>();
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 25:
[preds: 24 ] [succs: 30 31 26 ]
$l1 = virtualinvoke r123.<java.util.Date: long getTime()>();
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 25:
[preds: 24 ] [succs: 30 31 26 ]
$l1 = virtualinvoke r123.<java.util.Date: long getTime()>();
"->"Block 26:
[preds: 25 ] [succs: 30 31 27 ]
$l2 = $l0 - $l1;
";
    "Block 26:
[preds: 25 ] [succs: 30 31 27 ]
$l2 = $l0 - $l1;
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 26:
[preds: 25 ] [succs: 30 31 27 ]
$l2 = $l0 - $l1;
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 26:
[preds: 25 ] [succs: 30 31 27 ]
$l2 = $l0 - $l1;
"->"Block 27:
[preds: 26 ] [succs: 30 31 28 ]
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
";
    "Block 27:
[preds: 26 ] [succs: 30 31 28 ]
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 27:
[preds: 26 ] [succs: 30 31 28 ]
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 27:
[preds: 26 ] [succs: 30 31 28 ]
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
"->"Block 28:
[preds: 27 ] [succs: 30 31 29 ]
interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30);
";
    "Block 28:
[preds: 27 ] [succs: 30 31 29 ]
interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30);
"->"Block 30:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r120 := @caughtexception;
r125 = $r120;
$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125);
$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>();
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122);
return r1;
";
    "Block 28:
[preds: 27 ] [succs: 30 31 29 ]
interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30);
"->"Block 31:
[preds: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 ] [succs: ]
$r118 := @caughtexception;
r126 = $r118;
$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>;
interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\");
return r1;
";
    "Block 28:
[preds: 27 ] [succs: 30 31 29 ]
interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30);
"->"Block 29:
[preds: 28 ] [succs: 32 ]
goto [?= $r31 = new java.util.TreeMap];
";
    "Block 29:
[preds: 28 ] [succs: 32 ]
goto [?= $r31 = new java.util.TreeMap];
"->"Block 32:
[preds: 29 ] [succs: 33 ]
$r31 = new java.util.TreeMap;
specialinvoke $r31.<java.util.TreeMap: void <init>()>();
r127 = $r31;
r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>();
$r33 = new java.util.HashMap;
specialinvoke $r33.<java.util.HashMap: void <init>()>();
r34 = $r33;
i86 = 0;
$r35 = new java.util.GregorianCalendar;
specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>();
r128 = $r35;
d32 = 0.0;
d33 = 0.0;
d34 = 0.0;
l87 = 0L;
r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>();
";
    "Block 32:
[preds: 29 ] [succs: 33 ]
$r31 = new java.util.TreeMap;
specialinvoke $r31.<java.util.TreeMap: void <init>()>();
r127 = $r31;
r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>();
$r33 = new java.util.HashMap;
specialinvoke $r33.<java.util.HashMap: void <init>()>();
r34 = $r33;
i86 = 0;
$r35 = new java.util.GregorianCalendar;
specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>();
r128 = $r35;
d32 = 0.0;
d33 = 0.0;
d34 = 0.0;
l87 = 0L;
r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>();
"->"Block 33:
[preds: 32 51 ] [succs: 34 52 ]
$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r36 = new java.lang.StringBuffer;
";
    "Block 33:
[preds: 32 51 ] [succs: 34 52 ]
$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r36 = new java.lang.StringBuffer;
"->"Block 34:
[preds: 33 ] [succs: 35 36 ]
$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();
r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110;
r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132);
if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
";
    "Block 33:
[preds: 32 51 ] [succs: 34 52 ]
$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r36 = new java.lang.StringBuffer;
"->"Block 52:
[preds: 33 ] [succs: 53 ]
$r36 = new java.lang.StringBuffer;
specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\");
r135 = $r36;
r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>();
i88 = 0;
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();
r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110;
r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132);
if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
"->"Block 35:
[preds: 34 ] [succs: 36 ]
$i85 = i86;
i86 = i86 + 1;
$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85);
virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117);
";
    "Block 34:
[preds: 33 ] [succs: 35 36 ]
$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();
r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110;
r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132);
if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
"->"Block 36:
[preds: 34 35 ] [succs: 37 38 ]
$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
";
    "Block 35:
[preds: 34 ] [succs: 36 ]
$i85 = i86;
i86 = i86 + 1;
$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85);
virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117);
"->"Block 36:
[preds: 34 35 ] [succs: 37 38 ]
$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
";
    "Block 36:
[preds: 34 35 ] [succs: 37 38 ]
$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
"->"Block 37:
[preds: 36 ] [succs: 39 ]
$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>();
virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116);
goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()];
";
    "Block 36:
[preds: 34 35 ] [succs: 37 38 ]
$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132);
if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
"->"Block 38:
[preds: 36 ] [succs: 39 ]
$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111;
virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130);
";
    "Block 37:
[preds: 36 ] [succs: 39 ]
$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>();
virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116);
goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()];
"->"Block 39:
[preds: 37 38 ] [succs: 40 41 ]
r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>();
$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133);
r134 = (java.util.Set) $r113;
if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
";
    "Block 38:
[preds: 36 ] [succs: 39 ]
$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132);
$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111;
virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130);
"->"Block 39:
[preds: 37 38 ] [succs: 40 41 ]
r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>();
$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133);
r134 = (java.util.Set) $r113;
if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
";
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>();
$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133);
r134 = (java.util.Set) $r113;
if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
"->"Block 40:
[preds: 39 ] [succs: 41 ]
$r115 = new java.util.HashSet;
specialinvoke $r115.<java.util.HashSet: void <init>()>();
r134 = $r115;
interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134);
";
    "Block 39:
[preds: 37 38 ] [succs: 40 41 ]
r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>();
$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133);
r134 = (java.util.Set) $r113;
if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
"->"Block 41:
[preds: 39 40 ] [succs: 42 43 ]
interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133);
if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
";
    "Block 40:
[preds: 39 ] [succs: 41 ]
$r115 = new java.util.HashSet;
specialinvoke $r115.<java.util.HashSet: void <init>()>();
r134 = $r115;
interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134);
"->"Block 41:
[preds: 39 40 ] [succs: 42 43 ]
interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133);
if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
";
    "Block 41:
[preds: 39 40 ] [succs: 42 43 ]
interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133);
if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
"->"Block 42:
[preds: 41 ] [succs: 43 ]
$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>();
r128 = (java.util.Calendar) $r114;
";
    "Block 41:
[preds: 39 40 ] [succs: 42 43 ]
interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130);
$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133);
if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
"->"Block 43:
[preds: 41 42 ] [succs: 44 45 ]
$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$b80 = d32 cmpg $d29;
if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
";
    "Block 42:
[preds: 41 ] [succs: 43 ]
$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>();
r128 = (java.util.Calendar) $r114;
"->"Block 43:
[preds: 41 42 ] [succs: 44 45 ]
$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$b80 = d32 cmpg $d29;
if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
";
    "Block 43:
[preds: 41 42 ] [succs: 44 45 ]
$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$b80 = d32 cmpg $d29;
if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
"->"Block 44:
[preds: 43 ] [succs: 45 ]
d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
";
    "Block 43:
[preds: 41 42 ] [succs: 44 45 ]
$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$b80 = d32 cmpg $d29;
if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
"->"Block 45:
[preds: 43 44 ] [succs: 46 47 ]
$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$b81 = d33 cmpg $d30;
if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
";
    "Block 44:
[preds: 43 ] [succs: 45 ]
d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
"->"Block 45:
[preds: 43 44 ] [succs: 46 47 ]
$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$b81 = d33 cmpg $d30;
if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
";
    "Block 45:
[preds: 43 44 ] [succs: 46 47 ]
$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$b81 = d33 cmpg $d30;
if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
"->"Block 46:
[preds: 45 ] [succs: 47 ]
d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
";
    "Block 45:
[preds: 43 44 ] [succs: 46 47 ]
$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$b81 = d33 cmpg $d30;
if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
"->"Block 47:
[preds: 45 46 ] [succs: 48 49 ]
$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$b82 = d34 cmpg $d31;
if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
";
    "Block 46:
[preds: 45 ] [succs: 47 ]
d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
"->"Block 47:
[preds: 45 46 ] [succs: 48 49 ]
$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$b82 = d34 cmpg $d31;
if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
";
    "Block 47:
[preds: 45 46 ] [succs: 48 49 ]
$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$b82 = d34 cmpg $d31;
if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
"->"Block 48:
[preds: 47 ] [succs: 49 ]
d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
";
    "Block 47:
[preds: 45 46 ] [succs: 48 49 ]
$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$b82 = d34 cmpg $d31;
if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$b84 = l87 cmp $l83;
if $b84 >= 0 goto (branch);
";
    "Block 48:
[preds: 47 ] [succs: 49 ]
d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$b84 = l87 cmp $l83;
if $b84 >= 0 goto (branch);
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$b84 = l87 cmp $l83;
if $b84 >= 0 goto (branch);
"->"Block 50:
[preds: 49 ] [succs: 51 ]
l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$b84 = l87 cmp $l83;
if $b84 >= 0 goto (branch);
"->"Block 51:
[preds: 49 50 ] [succs: 33 ]
goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 50:
[preds: 49 ] [succs: 51 ]
l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
"->"Block 51:
[preds: 49 50 ] [succs: 33 ]
goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 51:
[preds: 49 50 ] [succs: 33 ]
goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()];
"->"Block 33:
[preds: 32 51 ] [succs: 34 52 ]
$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r36 = new java.lang.StringBuffer;
";
    "Block 52:
[preds: 33 ] [succs: 53 ]
$r36 = new java.lang.StringBuffer;
specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\");
r135 = $r36;
r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>();
i88 = 0;
"->"Block 53:
[preds: 52 57 ] [succs: 54 58 ]
if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
";
    "Block 53:
[preds: 52 57 ] [succs: 54 58 ]
if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
"->"Block 54:
[preds: 53 ] [succs: 55 ]
$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88);
$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103);
$r105 = (java.lang.String) $r104;
$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);
virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = 0;
";
    "Block 53:
[preds: 52 57 ] [succs: 54 58 ]
if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
"->"Block 58:
[preds: 53 ] [succs: 59 60 ]
$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
if $i3 <= 0 goto $r37 = new java.lang.StringBuffer;
";
    "Block 54:
[preds: 53 ] [succs: 55 ]
$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88);
$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103);
$r105 = (java.lang.String) $r104;
$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105);
virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = 0;
"->"Block 55:
[preds: 54 56 ] [succs: 56 57 ]
$i79 = lengthof r3;
if i89 >= $i79 goto i88 = i88 + 1;
";
    "Block 55:
[preds: 54 56 ] [succs: 56 57 ]
$i79 = lengthof r3;
if i89 >= $i79 goto i88 = i88 + 1;
"->"Block 56:
[preds: 55 ] [succs: 55 ]
$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r108 = r3[i89];
$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);
virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = i89 + 1;
goto [?= $i79 = lengthof r3];
";
    "Block 55:
[preds: 54 56 ] [succs: 56 57 ]
$i79 = lengthof r3;
if i89 >= $i79 goto i88 = i88 + 1;
"->"Block 57:
[preds: 55 ] [succs: 53 ]
i88 = i88 + 1;
goto [?= (branch)];
";
    "Block 56:
[preds: 55 ] [succs: 55 ]
$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\");
$r108 = r3[i89];
$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108);
virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\");
i89 = i89 + 1;
goto [?= $i79 = lengthof r3];
"->"Block 55:
[preds: 54 56 ] [succs: 56 57 ]
$i79 = lengthof r3;
if i89 >= $i79 goto i88 = i88 + 1;
";
    "Block 57:
[preds: 55 ] [succs: 53 ]
i88 = i88 + 1;
goto [?= (branch)];
"->"Block 53:
[preds: 52 57 ] [succs: 54 58 ]
if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
";
    "Block 58:
[preds: 53 ] [succs: 59 60 ]
$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
if $i3 <= 0 goto $r37 = new java.lang.StringBuffer;
"->"Block 59:
[preds: 58 ] [succs: 60 ]
$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
$i78 = $i77 - 1;
virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78);
";
    "Block 58:
[preds: 53 ] [succs: 59 60 ]
$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
if $i3 <= 0 goto $r37 = new java.lang.StringBuffer;
"->"Block 60:
[preds: 58 59 ] [succs: 61 ]
$r37 = new java.lang.StringBuffer;
specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\");
r137 = $r37;
$r38 = new java.text.SimpleDateFormat;
specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\");
r138 = $r38;
$r39 = new java.text.DecimalFormatSymbols;
specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>();
r139 = $r39;
virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
$r40 = new java.text.DecimalFormat;
specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139);
r140 = $r40;
virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1);
$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>();
$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42);
$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);
virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i5 = neg $i4;
$d0 = (double) $i5;
$d1 = d32 / $d0;
$d2 = $d1 / 10.0;
$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2);
$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);
virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\");
$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i7 = neg $i6;
$d3 = (double) $i7;
$d4 = d33 / $d3;
$d5 = $d4 / 10.0;
$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5);
$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);
virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i9 = neg $i8;
$d6 = (double) $i9;
$d7 = d34 / $d6;
$d8 = $d7 / 10.0;
$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8);
$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);
virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i11 = neg $i10;
$l12 = (long) $i11;
$l13 = l87 / $l12;
$l14 = $l13 / 10L;
$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14);
$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);
virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i18 = $i15 - 1;
$i16 = lengthof r3;
$i17 = $i16 + 1;
i19 = $i18 * $i17;
i90 = 0;
";
    "Block 59:
[preds: 58 ] [succs: 60 ]
$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>();
$i78 = $i77 - 1;
virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78);
"->"Block 60:
[preds: 58 59 ] [succs: 61 ]
$r37 = new java.lang.StringBuffer;
specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\");
r137 = $r37;
$r38 = new java.text.SimpleDateFormat;
specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\");
r138 = $r38;
$r39 = new java.text.DecimalFormatSymbols;
specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>();
r139 = $r39;
virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
$r40 = new java.text.DecimalFormat;
specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139);
r140 = $r40;
virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1);
$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>();
$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42);
$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);
virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i5 = neg $i4;
$d0 = (double) $i5;
$d1 = d32 / $d0;
$d2 = $d1 / 10.0;
$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2);
$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);
virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\");
$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i7 = neg $i6;
$d3 = (double) $i7;
$d4 = d33 / $d3;
$d5 = $d4 / 10.0;
$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5);
$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);
virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i9 = neg $i8;
$d6 = (double) $i9;
$d7 = d34 / $d6;
$d8 = $d7 / 10.0;
$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8);
$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);
virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i11 = neg $i10;
$l12 = (long) $i11;
$l13 = l87 / $l12;
$l14 = $l13 / 10L;
$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14);
$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);
virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i18 = $i15 - 1;
$i16 = lengthof r3;
$i17 = $i16 + 1;
i19 = $i18 * $i17;
i90 = 0;
";
    "Block 60:
[preds: 58 59 ] [succs: 61 ]
$r37 = new java.lang.StringBuffer;
specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\");
r137 = $r37;
$r38 = new java.text.SimpleDateFormat;
specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\");
r138 = $r38;
$r39 = new java.text.DecimalFormatSymbols;
specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>();
r139 = $r39;
virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
$r40 = new java.text.DecimalFormat;
specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139);
r140 = $r40;
virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1);
$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>();
$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42);
$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);
virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i5 = neg $i4;
$d0 = (double) $i5;
$d1 = d32 / $d0;
$d2 = $d1 / 10.0;
$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2);
$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);
virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\");
$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i7 = neg $i6;
$d3 = (double) $i7;
$d4 = d33 / $d3;
$d5 = $d4 / 10.0;
$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5);
$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);
virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i9 = neg $i8;
$d6 = (double) $i9;
$d7 = d34 / $d6;
$d8 = $d7 / 10.0;
$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8);
$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);
virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$i11 = neg $i10;
$l12 = (long) $i11;
$l13 = l87 / $l12;
$l14 = $l13 / 10L;
$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14);
$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);
virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\");
$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i18 = $i15 - 1;
$i16 = lengthof r3;
$i17 = $i16 + 1;
i19 = $i18 * $i17;
i90 = 0;
"->"Block 61:
[preds: 60 62 ] [succs: 62 63 ]
if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 61:
[preds: 60 62 ] [succs: 62 63 ]
if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 62:
[preds: 61 ] [succs: 61 ]
$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\");
virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i90 = i90 + 1;
goto [?= (branch)];
";
    "Block 61:
[preds: 60 62 ] [succs: 62 63 ]
if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 63:
[preds: 61 ] [succs: 64 ]
$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i21 = $i20 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>();
r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 62:
[preds: 61 ] [succs: 61 ]
$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\");
virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i90 = i90 + 1;
goto [?= (branch)];
"->"Block 61:
[preds: 60 62 ] [succs: 62 63 ]
if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 63:
[preds: 61 ] [succs: 64 ]
$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i21 = $i20 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>();
r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 64:
[preds: 63 77 ] [succs: 65 78 ]
$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 64:
[preds: 63 77 ] [succs: 65 78 ]
$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 65:
[preds: 64 ] [succs: 66 ]
$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>();
r142 = (java.util.Calendar) $r54;
$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142);
r143 = (java.util.Set) $r55;
$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>();
$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57);
$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);
virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i33 = lengthof r3;
$i34 = $i33 + 1;
$i35 = $i32 * $i34;
r144 = newarray (java.lang.String)[$i35];
r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 64:
[preds: 63 77 ] [succs: 65 78 ]
$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 78:
[preds: 64 ] [succs: 79 ]
$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i23 = $i22 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\");
$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i25 = lengthof r3;
$i26 = $i25 + 1;
$i27 = $i24 * $i26;
r148 = newarray (boolean)[$i27];
i92 = 0;
i93 = 0;
";
    "Block 65:
[preds: 64 ] [succs: 66 ]
$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>();
r142 = (java.util.Calendar) $r54;
$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142);
r143 = (java.util.Set) $r55;
$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\");
$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>();
$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57);
$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);
virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\");
$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i33 = lengthof r3;
$i34 = $i33 + 1;
$i35 = $i32 * $i34;
r144 = newarray (java.lang.String)[$i35];
r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 66:
[preds: 65 70 ] [succs: 67 71 ]
$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto i91 = 0;
";
    "Block 66:
[preds: 65 70 ] [succs: 67 71 ]
$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto i91 = 0;
"->"Block 67:
[preds: 66 ] [succs: 68 69 ]
$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>();
r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63;
r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66);
r68 = (java.lang.Integer) $r67;
$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>();
$i40 = lengthof r3;
$i41 = $i40 + 1;
i42 = $i39 * $i41;
$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d10 = (double) $i43;
$d11 = $d9 / $d10;
$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11);
r144[i42] = $r69;
$i44 = i42 + 1;
$r70 = new java.lang.StringBuilder;
specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>();
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i44] = $r73;
$i46 = i42 + 2;
$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d13 = (double) $i47;
$d14 = $d12 / $d13;
$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14);
r144[$i46] = $r74;
$i48 = i42 + 3;
$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d16 = (double) $i49;
$d17 = $d15 / $d16;
$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17);
r144[$i48] = $r75;
$i50 = i42 + 4;
$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$l53 = (long) $i52;
$l54 = $l51 / $l53;
$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54);
r144[$i50] = $r76;
$i55 = i42 + 5;
$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>();
$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18);
r144[$i55] = $r77;
$i56 = i42 + 6;
$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>();
$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19);
r144[$i56] = $r78;
$i57 = i42 + 7;
$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>();
$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20);
r144[$i57] = $r79;
$i58 = i42 + 8;
$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>();
$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21);
r144[$i58] = $r80;
$i59 = i42 + 9;
$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>();
$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22);
r144[$i59] = $r81;
$i60 = i42 + 10;
$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>();
$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23);
r144[$i60] = $r82;
$i61 = i42 + 11;
$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>();
$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24);
r144[$i61] = $r83;
$i62 = i42 + 12;
$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>();
$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25);
r144[$i62] = $r84;
$i63 = i42 + 13;
$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>();
$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26);
r144[$i63] = $r85;
$i64 = i42 + 14;
$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>();
$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27);
r144[$i64] = $r86;
$i65 = i42 + 15;
$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>();
$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28);
r144[$i65] = $r87;
$i66 = i42 + 16;
$r88 = new java.lang.StringBuilder;
specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i66] = $r91;
$i68 = i42 + 17;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>();
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69);
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i68] = $r95;
$i70 = i42 + 18;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>();
$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>();
$l73 = $l71 + $l72;
$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>();
$l75 = $l73 + $l74;
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i70] = $r99;
$i76 = i42 + 19;
$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>();
if $z3 == 0 goto $r146 = \"0\";
";
    "Block 66:
[preds: 65 70 ] [succs: 67 71 ]
$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto i91 = 0;
"->"Block 71:
[preds: 66 ] [succs: 72 ]
i91 = 0;
";
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>();
r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63;
r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66);
r68 = (java.lang.Integer) $r67;
$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>();
$i40 = lengthof r3;
$i41 = $i40 + 1;
i42 = $i39 * $i41;
$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d10 = (double) $i43;
$d11 = $d9 / $d10;
$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11);
r144[i42] = $r69;
$i44 = i42 + 1;
$r70 = new java.lang.StringBuilder;
specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>();
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i44] = $r73;
$i46 = i42 + 2;
$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d13 = (double) $i47;
$d14 = $d12 / $d13;
$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14);
r144[$i46] = $r74;
$i48 = i42 + 3;
$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d16 = (double) $i49;
$d17 = $d15 / $d16;
$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17);
r144[$i48] = $r75;
$i50 = i42 + 4;
$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$l53 = (long) $i52;
$l54 = $l51 / $l53;
$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54);
r144[$i50] = $r76;
$i55 = i42 + 5;
$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>();
$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18);
r144[$i55] = $r77;
$i56 = i42 + 6;
$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>();
$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19);
r144[$i56] = $r78;
$i57 = i42 + 7;
$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>();
$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20);
r144[$i57] = $r79;
$i58 = i42 + 8;
$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>();
$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21);
r144[$i58] = $r80;
$i59 = i42 + 9;
$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>();
$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22);
r144[$i59] = $r81;
$i60 = i42 + 10;
$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>();
$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23);
r144[$i60] = $r82;
$i61 = i42 + 11;
$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>();
$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24);
r144[$i61] = $r83;
$i62 = i42 + 12;
$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>();
$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25);
r144[$i62] = $r84;
$i63 = i42 + 13;
$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>();
$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26);
r144[$i63] = $r85;
$i64 = i42 + 14;
$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>();
$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27);
r144[$i64] = $r86;
$i65 = i42 + 15;
$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>();
$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28);
r144[$i65] = $r87;
$i66 = i42 + 16;
$r88 = new java.lang.StringBuilder;
specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i66] = $r91;
$i68 = i42 + 17;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>();
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69);
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i68] = $r95;
$i70 = i42 + 18;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>();
$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>();
$l73 = $l71 + $l72;
$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>();
$l75 = $l73 + $l74;
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i70] = $r99;
$i76 = i42 + 19;
$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>();
if $z3 == 0 goto $r146 = \"0\";
"->"Block 68:
[preds: 67 ] [succs: 70 ]
$r146 = \"1\";
goto [?= r144[$i76] = $r146];
";
    "Block 67:
[preds: 66 ] [succs: 68 69 ]
$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>();
r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63;
r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>();
r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0);
$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66);
r68 = (java.lang.Integer) $r67;
$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>();
$i40 = lengthof r3;
$i41 = $i40 + 1;
i42 = $i39 * $i41;
$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>();
$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d10 = (double) $i43;
$d11 = $d9 / $d10;
$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11);
r144[i42] = $r69;
$i44 = i42 + 1;
$r70 = new java.lang.StringBuilder;
specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>();
$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);
$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i44] = $r73;
$i46 = i42 + 2;
$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>();
$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d13 = (double) $i47;
$d14 = $d12 / $d13;
$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14);
r144[$i46] = $r74;
$i48 = i42 + 3;
$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>();
$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$d16 = (double) $i49;
$d17 = $d15 / $d16;
$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17);
r144[$i48] = $r75;
$i50 = i42 + 4;
$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>();
$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>;
$l53 = (long) $i52;
$l54 = $l51 / $l53;
$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54);
r144[$i50] = $r76;
$i55 = i42 + 5;
$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>();
$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18);
r144[$i55] = $r77;
$i56 = i42 + 6;
$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>();
$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19);
r144[$i56] = $r78;
$i57 = i42 + 7;
$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>();
$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20);
r144[$i57] = $r79;
$i58 = i42 + 8;
$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>();
$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21);
r144[$i58] = $r80;
$i59 = i42 + 9;
$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>();
$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22);
r144[$i59] = $r81;
$i60 = i42 + 10;
$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>();
$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23);
r144[$i60] = $r82;
$i61 = i42 + 11;
$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>();
$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24);
r144[$i61] = $r83;
$i62 = i42 + 12;
$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>();
$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25);
r144[$i62] = $r84;
$i63 = i42 + 13;
$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>();
$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26);
r144[$i63] = $r85;
$i64 = i42 + 14;
$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>();
$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27);
r144[$i64] = $r86;
$i65 = i42 + 15;
$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>();
$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28);
r144[$i65] = $r87;
$i66 = i42 + 16;
$r88 = new java.lang.StringBuilder;
specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>();
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i66] = $r91;
$i68 = i42 + 17;
$r92 = new java.lang.StringBuilder;
specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>();
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69);
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i68] = $r95;
$i70 = i42 + 18;
$r96 = new java.lang.StringBuilder;
specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>();
$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>();
$l73 = $l71 + $l72;
$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>();
$l75 = $l73 + $l74;
$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75);
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
r144[$i70] = $r99;
$i76 = i42 + 19;
$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>();
if $z3 == 0 goto $r146 = \"0\";
"->"Block 69:
[preds: 67 ] [succs: 70 ]
$r146 = \"0\";
";
    "Block 68:
[preds: 67 ] [succs: 70 ]
$r146 = \"1\";
goto [?= r144[$i76] = $r146];
"->"Block 70:
[preds: 68 69 ] [succs: 66 ]
r144[$i76] = $r146;
goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 69:
[preds: 67 ] [succs: 70 ]
$r146 = \"0\";
"->"Block 70:
[preds: 68 69 ] [succs: 66 ]
r144[$i76] = $r146;
goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 70:
[preds: 68 69 ] [succs: 66 ]
r144[$i76] = $r146;
goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()];
"->"Block 66:
[preds: 65 70 ] [succs: 67 71 ]
$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto i91 = 0;
";
    "Block 71:
[preds: 66 ] [succs: 72 ]
i91 = 0;
"->"Block 72:
[preds: 71 76 ] [succs: 73 77 ]
$i36 = lengthof r144;
if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 72:
[preds: 71 76 ] [succs: 73 77 ]
$i36 = lengthof r144;
if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 73:
[preds: 72 ] [succs: 74 75 ]
$r60 = r144[i91];
if $r60 != null goto $r147 = r144[i91];
";
    "Block 72:
[preds: 71 76 ] [succs: 73 77 ]
$i36 = lengthof r144;
if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
"->"Block 77:
[preds: 72 ] [succs: 64 ]
$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i38 = $i37 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r60 = r144[i91];
if $r60 != null goto $r147 = r144[i91];
"->"Block 74:
[preds: 73 ] [succs: 76 ]
$r147 = \"0\";
goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)];
";
    "Block 73:
[preds: 72 ] [succs: 74 75 ]
$r60 = r144[i91];
if $r60 != null goto $r147 = r144[i91];
"->"Block 75:
[preds: 73 ] [succs: 76 ]
$r147 = r144[i91];
";
    "Block 74:
[preds: 73 ] [succs: 76 ]
$r147 = \"0\";
goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)];
"->"Block 76:
[preds: 74 75 ] [succs: 72 ]
$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147);
virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i91 = i91 + 1;
goto [?= $i36 = lengthof r144];
";
    "Block 75:
[preds: 73 ] [succs: 76 ]
$r147 = r144[i91];
"->"Block 76:
[preds: 74 75 ] [succs: 72 ]
$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147);
virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i91 = i91 + 1;
goto [?= $i36 = lengthof r144];
";
    "Block 76:
[preds: 74 75 ] [succs: 72 ]
$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147);
virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\");
i91 = i91 + 1;
goto [?= $i36 = lengthof r144];
"->"Block 72:
[preds: 71 76 ] [succs: 73 77 ]
$i36 = lengthof r144;
if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 77:
[preds: 72 ] [succs: 64 ]
$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i38 = $i37 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\");
goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()];
"->"Block 64:
[preds: 63 77 ] [succs: 65 78 ]
$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
";
    "Block 78:
[preds: 64 ] [succs: 79 ]
$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>();
$i23 = $i22 - 1;
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23);
virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\");
$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
$i25 = lengthof r3;
$i26 = $i25 + 1;
$i27 = $i24 * $i26;
r148 = newarray (boolean)[$i27];
i92 = 0;
i93 = 0;
"->"Block 79:
[preds: 78 83 ] [succs: 80 84 ]
$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
";
    "Block 79:
[preds: 78 83 ] [succs: 80 84 ]
$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
"->"Block 80:
[preds: 79 ] [succs: 81 ]
$i29 = i92;
i92 = i92 + 1;
r148[$i29] = 1;
i94 = 0;
";
    "Block 79:
[preds: 78 83 ] [succs: 80 84 ]
$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
"->"Block 84:
[preds: 79 ] [succs: ]
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setDataGrid(java.lang.StringBuffer)>(r137);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setVisibilityValues(boolean[])>(r148);
virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabelSeries(java.util.HashMap)>(r34);
return r1;
";
    "Block 80:
[preds: 79 ] [succs: 81 ]
$i29 = i92;
i92 = i92 + 1;
r148[$i29] = 1;
i94 = 0;
"->"Block 81:
[preds: 80 82 ] [succs: 82 83 ]
$i30 = lengthof r3;
if i94 >= $i30 goto i93 = i93 + 1;
";
    "Block 81:
[preds: 80 82 ] [succs: 82 83 ]
$i30 = lengthof r3;
if i94 >= $i30 goto i93 = i93 + 1;
"->"Block 82:
[preds: 81 ] [succs: 81 ]
$i31 = i92;
i92 = i92 + 1;
r148[$i31] = 0;
i94 = i94 + 1;
goto [?= $i30 = lengthof r3];
";
    "Block 81:
[preds: 80 82 ] [succs: 82 83 ]
$i30 = lengthof r3;
if i94 >= $i30 goto i93 = i93 + 1;
"->"Block 83:
[preds: 81 ] [succs: 79 ]
i93 = i93 + 1;
goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()];
";
    "Block 82:
[preds: 81 ] [succs: 81 ]
$i31 = i92;
i92 = i92 + 1;
r148[$i31] = 0;
i94 = i94 + 1;
goto [?= $i30 = lengthof r3];
"->"Block 81:
[preds: 80 82 ] [succs: 82 83 ]
$i30 = lengthof r3;
if i94 >= $i30 goto i93 = i93 + 1;
";
    "Block 83:
[preds: 81 ] [succs: 79 ]
i93 = i93 + 1;
goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()];
"->"Block 79:
[preds: 78 83 ] [succs: 80 84 ]
$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>();
if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135);
";
}
