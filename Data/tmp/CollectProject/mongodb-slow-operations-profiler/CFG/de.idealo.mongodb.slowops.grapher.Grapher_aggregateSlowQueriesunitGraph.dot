digraph "unitGraph" {
    "r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher"
    "r4 := @parameter0: java.lang.StringBuffer"
    "r14 := @parameter1: java.lang.Object[]"
    "r6 := @parameter2: java.lang.StringBuffer"
    "r8 := @parameter3: java.lang.StringBuffer"
    "$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto"
    "specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (java.lang.String)[19]"
    "$r2[0] = \"count\""
    "$r2[1] = \"minSec\""
    "$r2[2] = \"maxSec\""
    "$r2[3] = \"sumSec\""
    "$r2[4] = \"stdDevMs\""
    "$r2[5] = \"nRet\""
    "$r2[6] = \"minRet\""
    "$r2[7] = \"maxRet\""
    "$r2[8] = \"avgRet\""
    "$r2[9] = \"stdDevRet\""
    "$r2[10] = \"len\""
    "$r2[11] = \"minLen\""
    "$r2[12] = \"maxLen\""
    "$r2[13] = \"avgLen\""
    "$r2[14] = \"stdDevLen\""
    "$r2[15] = \"rKeys\""
    "$r2[16] = \"rDocs\""
    "$r2[17] = \"wDocs\""
    "$r2[18] = \"memSort\""
    "r3 = $r2"
    "$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4)"
    "$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6)"
    "$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8)"
    "$r10 = new java.util.Date"
    "specialinvoke $r10.<java.util.Date: void <init>()>()"
    "r123 = $r10"
    "$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>"
    "$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14)"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\")"
    "$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"
    "$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\")"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r24 = newarray (java.lang.Object)[0]"
    "$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24)"
    "$r26 = newarray (java.lang.Object)[0]"
    "$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26)"
    "r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\")"
    "$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "$r28 = new java.util.Date"
    "specialinvoke $r28.<java.util.Date: void <init>()>()"
    "$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>()"
    "$l1 = virtualinvoke r123.<java.util.Date: long getTime()>()"
    "$l2 = $l0 - $l1"
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"
    "interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30)"
    "goto [?= $r31 = new java.util.TreeMap]"
    "$r120 := @caughtexception"
    "r125 = $r120"
    "$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125)"
    "$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>()"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122)"
    "return r1"
    "$r118 := @caughtexception"
    "r126 = $r118"
    "$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"
    "interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126)"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\")"
    "$r31 = new java.util.TreeMap"
    "specialinvoke $r31.<java.util.TreeMap: void <init>()>()"
    "r127 = $r31"
    "r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>()"
    "$r33 = new java.util.HashMap"
    "specialinvoke $r33.<java.util.HashMap: void <init>()>()"
    "r34 = $r33"
    "i86 = 0"
    "$r35 = new java.util.GregorianCalendar"
    "specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>()"
    "r128 = $r35"
    "d32 = 0.0"
    "d33 = 0.0"
    "d34 = 0.0"
    "l87 = 0L"
    "r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r36 = new java.lang.StringBuffer"
    "$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>()"
    "r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110"
    "r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()"
    "r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)"
    "$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132)"
    "if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)"
    "$i85 = i86"
    "i86 = i86 + 1"
    "$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85)"
    "virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117)"
    "$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)"
    "if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)"
    "$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>()"
    "virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116)"
    "goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()]"
    "$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)"
    "$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111"
    "virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130)"
    "r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()"
    "$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133)"
    "r134 = (java.util.Set) $r113"
    "if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)"
    "$r115 = new java.util.HashSet"
    "specialinvoke $r115.<java.util.HashSet: void <init>()>()"
    "r134 = $r115"
    "interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134)"
    "interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)"
    "$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133)"
    "if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"
    "$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>()"
    "r128 = (java.util.Calendar) $r114"
    "$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"
    "$b80 = d32 cmpg $d29"
    "if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"
    "d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"
    "$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"
    "$b81 = d33 cmpg $d30"
    "if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"
    "d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"
    "$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"
    "$b82 = d34 cmpg $d31"
    "if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"
    "d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"
    "$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"
    "$b84 = l87 cmp $l83"
    "if $b84 >= 0 goto (branch)"
    "l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"
    "goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()]"
    "$r36 = new java.lang.StringBuffer"
    "specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\")"
    "r135 = $r36"
    "r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>()"
    "i88 = 0"
    "if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"
    "$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")"
    "$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88)"
    "$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103)"
    "$r105 = (java.lang.String) $r104"
    "$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105)"
    "virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")"
    "i89 = 0"
    "$i79 = lengthof r3"
    "if i89 >= $i79 goto i88 = i88 + 1"
    "$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")"
    "$r108 = r3[i89]"
    "$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108)"
    "virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")"
    "i89 = i89 + 1"
    "goto [?= $i79 = lengthof r3]"
    "i88 = i88 + 1"
    "goto [?= (branch)]"
    "$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"
    "if $i3 <= 0 goto $r37 = new java.lang.StringBuffer"
    "$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"
    "$i78 = $i77 - 1"
    "virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78)"
    "$r37 = new java.lang.StringBuffer"
    "specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\")"
    "r137 = $r37"
    "$r38 = new java.text.SimpleDateFormat"
    "specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\")"
    "r138 = $r38"
    "$r39 = new java.text.DecimalFormatSymbols"
    "specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>()"
    "r139 = $r39"
    "virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46)"
    "$r40 = new java.text.DecimalFormat"
    "specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139)"
    "r140 = $r40"
    "virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1)"
    "$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")"
    "$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>()"
    "$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42)"
    "$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43)"
    "virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")"
    "$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$i5 = neg $i4"
    "$d0 = (double) $i5"
    "$d1 = d32 / $d0"
    "$d2 = $d1 / 10.0"
    "$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2)"
    "$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45)"
    "virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\")"
    "$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$i7 = neg $i6"
    "$d3 = (double) $i7"
    "$d4 = d33 / $d3"
    "$d5 = $d4 / 10.0"
    "$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5)"
    "$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47)"
    "virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"
    "$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$i9 = neg $i8"
    "$d6 = (double) $i9"
    "$d7 = d34 / $d6"
    "$d8 = $d7 / 10.0"
    "$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8)"
    "$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49)"
    "virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"
    "$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$i11 = neg $i10"
    "$l12 = (long) $i11"
    "$l13 = l87 / $l12"
    "$l14 = $l13 / 10L"
    "$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14)"
    "$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51)"
    "virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"
    "$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"
    "$i18 = $i15 - 1"
    "$i16 = lengthof r3"
    "$i17 = $i16 + 1"
    "i19 = $i18 * $i17"
    "i90 = 0"
    "if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\")"
    "virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"
    "i90 = i90 + 1"
    "$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$i21 = $i20 - 1"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21)"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\")"
    "$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>()"
    "r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>()"
    "r142 = (java.util.Calendar) $r54"
    "$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142)"
    "r143 = (java.util.Set) $r55"
    "$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")"
    "$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>()"
    "$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57)"
    "$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58)"
    "virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")"
    "$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"
    "$i33 = lengthof r3"
    "$i34 = $i33 + 1"
    "$i35 = $i32 * $i34"
    "r144 = newarray (java.lang.String)[$i35]"
    "r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto i91 = 0"
    "$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>()"
    "r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63"
    "r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()"
    "r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)"
    "$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66)"
    "r68 = (java.lang.Integer) $r67"
    "$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>()"
    "$i40 = lengthof r3"
    "$i41 = $i40 + 1"
    "i42 = $i39 * $i41"
    "$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"
    "$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$d10 = (double) $i43"
    "$d11 = $d9 / $d10"
    "$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11)"
    "r144[i42] = $r69"
    "$i44 = i42 + 1"
    "$r70 = new java.lang.StringBuilder"
    "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()"
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>()"
    "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45)"
    "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r144[$i44] = $r73"
    "$i46 = i42 + 2"
    "$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"
    "$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$d13 = (double) $i47"
    "$d14 = $d12 / $d13"
    "$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14)"
    "r144[$i46] = $r74"
    "$i48 = i42 + 3"
    "$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"
    "$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$d16 = (double) $i49"
    "$d17 = $d15 / $d16"
    "$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17)"
    "r144[$i48] = $r75"
    "$i50 = i42 + 4"
    "$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"
    "$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"
    "$l53 = (long) $i52"
    "$l54 = $l51 / $l53"
    "$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54)"
    "r144[$i50] = $r76"
    "$i55 = i42 + 5"
    "$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>()"
    "$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18)"
    "r144[$i55] = $r77"
    "$i56 = i42 + 6"
    "$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>()"
    "$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19)"
    "r144[$i56] = $r78"
    "$i57 = i42 + 7"
    "$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>()"
    "$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20)"
    "r144[$i57] = $r79"
    "$i58 = i42 + 8"
    "$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>()"
    "$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21)"
    "r144[$i58] = $r80"
    "$i59 = i42 + 9"
    "$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>()"
    "$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22)"
    "r144[$i59] = $r81"
    "$i60 = i42 + 10"
    "$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>()"
    "$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23)"
    "r144[$i60] = $r82"
    "$i61 = i42 + 11"
    "$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>()"
    "$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24)"
    "r144[$i61] = $r83"
    "$i62 = i42 + 12"
    "$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>()"
    "$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25)"
    "r144[$i62] = $r84"
    "$i63 = i42 + 13"
    "$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>()"
    "$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26)"
    "r144[$i63] = $r85"
    "$i64 = i42 + 14"
    "$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>()"
    "$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27)"
    "r144[$i64] = $r86"
    "$i65 = i42 + 15"
    "$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>()"
    "$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28)"
    "r144[$i65] = $r87"
    "$i66 = i42 + 16"
    "$r88 = new java.lang.StringBuilder"
    "specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()"
    "$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>()"
    "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67)"
    "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r144[$i66] = $r91"
    "$i68 = i42 + 17"
    "$r92 = new java.lang.StringBuilder"
    "specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()"
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>()"
    "$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69)"
    "$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r144[$i68] = $r95"
    "$i70 = i42 + 18"
    "$r96 = new java.lang.StringBuilder"
    "specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()"
    "$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>()"
    "$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>()"
    "$l73 = $l71 + $l72"
    "$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>()"
    "$l75 = $l73 + $l74"
    "$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75)"
    "$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r144[$i70] = $r99"
    "$i76 = i42 + 19"
    "$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>()"
    "if $z3 == 0 goto $r146 = \"0\""
    "$r146 = \"1\""
    "goto [?= r144[$i76] = $r146]"
    "$r146 = \"0\""
    "r144[$i76] = $r146"
    "goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()]"
    "i91 = 0"
    "$i36 = lengthof r144"
    "if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$r60 = r144[i91]"
    "if $r60 != null goto $r147 = r144[i91]"
    "$r147 = \"0\""
    "goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)]"
    "$r147 = r144[i91]"
    "$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)"
    "virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"
    "i91 = i91 + 1"
    "goto [?= $i36 = lengthof r144]"
    "$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$i38 = $i37 - 1"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38)"
    "goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()]"
    "$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"
    "$i23 = $i22 - 1"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23)"
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\")"
    "$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"
    "$i25 = lengthof r3"
    "$i26 = $i25 + 1"
    "$i27 = $i24 * $i26"
    "r148 = newarray (boolean)[$i27]"
    "i92 = 0"
    "i93 = 0"
    "$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"
    "if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)"
    "$i29 = i92"
    "i92 = i92 + 1"
    "r148[$i29] = 1"
    "i94 = 0"
    "$i30 = lengthof r3"
    "if i94 >= $i30 goto i93 = i93 + 1"
    "$i31 = i92"
    "r148[$i31] = 0"
    "i94 = i94 + 1"
    "goto [?= $i30 = lengthof r3]"
    "i93 = i93 + 1"
    "goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()]"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setDataGrid(java.lang.StringBuffer)>(r137)"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setVisibilityValues(boolean[])>(r148)"
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabelSeries(java.util.HashMap)>(r34)"
    "r11 := @this: de.idealo.mongodb.slowops.grapher.Grapher"->"r4 := @parameter0: java.lang.StringBuffer";
    "r4 := @parameter0: java.lang.StringBuffer"->"r14 := @parameter1: java.lang.Object[]";
    "r14 := @parameter1: java.lang.Object[]"->"r6 := @parameter2: java.lang.StringBuffer";
    "r6 := @parameter2: java.lang.StringBuffer"->"r8 := @parameter3: java.lang.StringBuffer";
    "r8 := @parameter3: java.lang.StringBuffer"->"$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto";
    "$r0 = new de.idealo.mongodb.slowops.dto.SlowOpsDto"->"specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>()";
    "specialinvoke $r0.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (java.lang.String)[19]";
    "$r2 = newarray (java.lang.String)[19]"->"$r2[0] = \"count\"";
    "$r2[0] = \"count\""->"$r2[1] = \"minSec\"";
    "$r2[1] = \"minSec\""->"$r2[2] = \"maxSec\"";
    "$r2[2] = \"maxSec\""->"$r2[3] = \"sumSec\"";
    "$r2[3] = \"sumSec\""->"$r2[4] = \"stdDevMs\"";
    "$r2[4] = \"stdDevMs\""->"$r2[5] = \"nRet\"";
    "$r2[5] = \"nRet\""->"$r2[6] = \"minRet\"";
    "$r2[6] = \"minRet\""->"$r2[7] = \"maxRet\"";
    "$r2[7] = \"maxRet\""->"$r2[8] = \"avgRet\"";
    "$r2[8] = \"avgRet\""->"$r2[9] = \"stdDevRet\"";
    "$r2[9] = \"stdDevRet\""->"$r2[10] = \"len\"";
    "$r2[10] = \"len\""->"$r2[11] = \"minLen\"";
    "$r2[11] = \"minLen\""->"$r2[12] = \"maxLen\"";
    "$r2[12] = \"maxLen\""->"$r2[13] = \"avgLen\"";
    "$r2[13] = \"avgLen\""->"$r2[14] = \"stdDevLen\"";
    "$r2[14] = \"stdDevLen\""->"$r2[15] = \"rKeys\"";
    "$r2[15] = \"rKeys\""->"$r2[16] = \"rDocs\"";
    "$r2[16] = \"rDocs\""->"$r2[17] = \"wDocs\"";
    "$r2[17] = \"wDocs\""->"$r2[18] = \"memSort\"";
    "$r2[18] = \"memSort\""->"r3 = $r2";
    "r3 = $r2"->"$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r5 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4)";
    "interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"filter: {}\", r4)"->"$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r7 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6)";
    "interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupExp: {}\", r6)"->"$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r9 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8)";
    "interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8)"->"$r120 := @caughtexception";
    "interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8)"->"$r118 := @caughtexception";
    "interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"groupTime: {}\", r8)"->"$r10 = new java.util.Date";
    "$r10 = new java.util.Date"->"$r120 := @caughtexception";
    "$r10 = new java.util.Date"->"$r118 := @caughtexception";
    "$r10 = new java.util.Date"->"specialinvoke $r10.<java.util.Date: void <init>()>()";
    "specialinvoke $r10.<java.util.Date: void <init>()>()"->"$r120 := @caughtexception";
    "specialinvoke $r10.<java.util.Date: void <init>()>()"->"$r118 := @caughtexception";
    "specialinvoke $r10.<java.util.Date: void <init>()>()"->"r123 = $r10";
    "r123 = $r10"->"$r120 := @caughtexception";
    "r123 = $r10"->"$r118 := @caughtexception";
    "r123 = $r10"->"$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>";
    "$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>"->"$r120 := @caughtexception";
    "$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>"->"$r118 := @caughtexception";
    "$r12 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: org.jongo.MongoCollection coll>"->"$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r120 := @caughtexception";
    "$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r118 := @caughtexception";
    "$r13 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14)";
    "$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14)"->"$r120 := @caughtexception";
    "$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14)"->"$r118 := @caughtexception";
    "$r15 = virtualinvoke $r12.<org.jongo.MongoCollection: org.jongo.Aggregate aggregate(java.lang.String,java.lang.Object[])>($r13, r14)"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"$r120 := @caughtexception";
    "$r16 = new java.lang.StringBuilder"->"$r118 := @caughtexception";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r120 := @caughtexception";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r118 := @caughtexception";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\")"->"$r120 := @caughtexception";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\")"->"$r118 := @caughtexception";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{$group:{_id:{\")"->"$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r120 := @caughtexception";
    "$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r118 := @caughtexception";
    "$r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"->"$r120 := @caughtexception";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"->"$r118 := @caughtexception";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)"->"$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r120 := @caughtexception";
    "$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r118 := @caughtexception";
    "$r20 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)";
    "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"->"$r120 := @caughtexception";
    "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"->"$r118 := @caughtexception";
    "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\")"->"$r120 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\")"->"$r118 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"},count : { $sum : 1 },millis : { $sum : \'$millis\' },avgMs : { $avg : \'$millis\' },minMs : { $min : \'$millis\' },maxMs : { $max : \'$millis\' },stdDevMs : { $stdDevPop : \'$millis\' },nRet : { $sum : \'$nret\' },avgRet : { $avg : \'$nret\' },minRet : { $min : \'$nret\' },maxRet : { $max : \'$nret\' },stdDevRet : { $stdDevPop : \'$nret\' },len : { $sum : \'$resplen\' },avgLen : { $avg : \'$resplen\' },minLen : { $min : \'$resplen\' },maxLen : { $max : \'$resplen\' },stdDevLen : { $stdDevPop : \'$resplen\' },firstts : { $first : \'$ts\' },keys : { $sum : \'$keys\' },docs : { $sum : \'$docs\' },del : { $sum : \'$del\' },ins : { $sum : \'$ins\' },mod : { $sum : \'$mod\' },sortstages : { $addToSet : \'$sortstg\' }}}\")"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r120 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r118 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r24 = newarray (java.lang.Object)[0]";
    "$r24 = newarray (java.lang.Object)[0]"->"$r120 := @caughtexception";
    "$r24 = newarray (java.lang.Object)[0]"->"$r118 := @caughtexception";
    "$r24 = newarray (java.lang.Object)[0]"->"$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24)";
    "$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24)"->"$r120 := @caughtexception";
    "$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24)"->"$r118 := @caughtexception";
    "$r25 = virtualinvoke $r15.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>($r23, $r24)"->"$r26 = newarray (java.lang.Object)[0]";
    "$r26 = newarray (java.lang.Object)[0]"->"$r120 := @caughtexception";
    "$r26 = newarray (java.lang.Object)[0]"->"$r118 := @caughtexception";
    "$r26 = newarray (java.lang.Object)[0]"->"$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26)";
    "$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26)"->"$r120 := @caughtexception";
    "$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26)"->"$r118 := @caughtexception";
    "$r27 = virtualinvoke $r25.<org.jongo.Aggregate: org.jongo.Aggregate and(java.lang.String,java.lang.Object[])>(\"{$sort:{firstts:1}}\", $r26)"->"r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\")";
    "r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\")"->"$r120 := @caughtexception";
    "r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\")"->"$r118 := @caughtexception";
    "r124 = virtualinvoke $r27.<org.jongo.Aggregate: org.jongo.Aggregate$ResultsIterator as(java.lang.Class)>(class \"Lde/idealo/mongodb/slowops/grapher/AggregatedProfiling;\")"->"$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"$r120 := @caughtexception";
    "$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"$r118 := @caughtexception";
    "$r29 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"$r28 = new java.util.Date";
    "$r28 = new java.util.Date"->"$r120 := @caughtexception";
    "$r28 = new java.util.Date"->"$r118 := @caughtexception";
    "$r28 = new java.util.Date"->"specialinvoke $r28.<java.util.Date: void <init>()>()";
    "specialinvoke $r28.<java.util.Date: void <init>()>()"->"$r120 := @caughtexception";
    "specialinvoke $r28.<java.util.Date: void <init>()>()"->"$r118 := @caughtexception";
    "specialinvoke $r28.<java.util.Date: void <init>()>()"->"$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>()";
    "$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>()"->"$r120 := @caughtexception";
    "$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>()"->"$r118 := @caughtexception";
    "$l0 = virtualinvoke $r28.<java.util.Date: long getTime()>()"->"$l1 = virtualinvoke r123.<java.util.Date: long getTime()>()";
    "$l1 = virtualinvoke r123.<java.util.Date: long getTime()>()"->"$r120 := @caughtexception";
    "$l1 = virtualinvoke r123.<java.util.Date: long getTime()>()"->"$r118 := @caughtexception";
    "$l1 = virtualinvoke r123.<java.util.Date: long getTime()>()"->"$l2 = $l0 - $l1";
    "$l2 = $l0 - $l1"->"$r120 := @caughtexception";
    "$l2 = $l0 - $l1"->"$r118 := @caughtexception";
    "$l2 = $l0 - $l1"->"$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)";
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"$r120 := @caughtexception";
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"$r118 := @caughtexception";
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30)";
    "interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30)"->"$r120 := @caughtexception";
    "interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30)"->"$r118 := @caughtexception";
    "interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(\"Duration in ms: {}\", $r30)"->"goto [?= $r31 = new java.util.TreeMap]";
    "goto [?= $r31 = new java.util.TreeMap]"->"$r31 = new java.util.TreeMap";
    "$r120 := @caughtexception"->"r125 = $r120";
    "r125 = $r120"->"$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r121 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125)";
    "interfaceinvoke $r121.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r125)"->"$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>()";
    "$r122 = virtualinvoke r125.<com.mongodb.MongoException: java.lang.String getMessage()>()"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122)";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>($r122)"->"return r1";
    "$r118 := @caughtexception"->"r126 = $r118";
    "r126 = $r118"->"$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>";
    "$r119 = <de.idealo.mongodb.slowops.grapher.Grapher: org.slf4j.Logger LOG>"->"interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126)";
    "interfaceinvoke $r119.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(\"MongoException while aggregating.\", r126)"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\")";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setErrorMessage(java.lang.String)>(\"Please enter only valid values!\")"->"return r1";
    "$r31 = new java.util.TreeMap"->"specialinvoke $r31.<java.util.TreeMap: void <init>()>()";
    "specialinvoke $r31.<java.util.TreeMap: void <init>()>()"->"r127 = $r31";
    "r127 = $r31"->"r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>()";
    "r32 = staticinvoke <com.google.common.collect.HashBiMap: com.google.common.collect.HashBiMap create()>()"->"$r33 = new java.util.HashMap";
    "$r33 = new java.util.HashMap"->"specialinvoke $r33.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r33.<java.util.HashMap: void <init>()>()"->"r34 = $r33";
    "r34 = $r33"->"i86 = 0";
    "i86 = 0"->"$r35 = new java.util.GregorianCalendar";
    "$r35 = new java.util.GregorianCalendar"->"specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>()";
    "specialinvoke $r35.<java.util.GregorianCalendar: void <init>()>()"->"r128 = $r35";
    "r128 = $r35"->"d32 = 0.0";
    "d32 = 0.0"->"d33 = 0.0";
    "d33 = 0.0"->"d34 = 0.0";
    "d34 = 0.0"->"l87 = 0L";
    "l87 = 0L"->"r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>()";
    "r129 = virtualinvoke r124.<org.jongo.Aggregate$ResultsIterator: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r36 = new java.lang.StringBuffer";
    "if $z0 == 0 goto $r36 = new java.lang.StringBuffer"->"$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r36 = new java.lang.StringBuffer"->"$r36 = new java.lang.StringBuffer";
    "$r110 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>()"->"r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110";
    "r130 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r110"->"r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()";
    "r131 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()"->"r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)";
    "r132 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)"->"$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132)";
    "$z4 = virtualinvoke r32.<com.google.common.collect.HashBiMap: boolean containsKey(java.lang.Object)>(r132)"->"if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)";
    "if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)"->"$i85 = i86";
    "if $z4 != 0 goto $z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)"->"$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)";
    "$i85 = i86"->"i86 = i86 + 1";
    "i86 = i86 + 1"->"$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85)";
    "$r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i85)"->"virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117)";
    "virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r117)"->"$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)";
    "$z5 = virtualinvoke r34.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r132)"->"if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)";
    "if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)"->"$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>()";
    "if $z5 != 0 goto $r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)"->"$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)";
    "$r116 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfiling clone()>()"->"virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116)";
    "virtualinvoke r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r132, $r116)"->"goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()]";
    "goto [?= r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()]"->"r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()";
    "$r111 = virtualinvoke r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r132)"->"$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111";
    "$r112 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r111"->"virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130)";
    "virtualinvoke $r112.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: void combine(de.idealo.mongodb.slowops.grapher.AggregatedProfiling)>(r130)"->"r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()";
    "r133 = virtualinvoke r131.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.util.Calendar getCalendar()>()"->"$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133)";
    "$r113 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r133)"->"r134 = (java.util.Set) $r113";
    "r134 = (java.util.Set) $r113"->"if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)";
    "if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)"->"$r115 = new java.util.HashSet";
    "if r134 != null goto interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)"->"interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)";
    "$r115 = new java.util.HashSet"->"specialinvoke $r115.<java.util.HashSet: void <init>()>()";
    "specialinvoke $r115.<java.util.HashSet: void <init>()>()"->"r134 = $r115";
    "r134 = $r115"->"interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134)";
    "interfaceinvoke r127.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r133, r134)"->"interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)";
    "interfaceinvoke r134.<java.util.Set: boolean add(java.lang.Object)>(r130)"->"$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133)";
    "$z6 = virtualinvoke r128.<java.util.Calendar: boolean after(java.lang.Object)>(r133)"->"if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()";
    "if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"->"$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>()";
    "if $z6 == 0 goto $d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"->"$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()";
    "$r114 = virtualinvoke r133.<java.util.Calendar: java.lang.Object clone()>()"->"r128 = (java.util.Calendar) $r114";
    "r128 = (java.util.Calendar) $r114"->"$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()";
    "$d29 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"->"$b80 = d32 cmpg $d29";
    "$b80 = d32 cmpg $d29"->"if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()";
    "if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"->"d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()";
    "if $b80 >= 0 goto $d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"->"$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()";
    "d32 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"->"$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()";
    "$d30 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"->"$b81 = d33 cmpg $d30";
    "$b81 = d33 cmpg $d30"->"if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()";
    "if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"->"d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()";
    "if $b81 >= 0 goto $d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"->"$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()";
    "d33 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"->"$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()";
    "$d31 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"->"$b82 = d34 cmpg $d31";
    "$b82 = d34 cmpg $d31"->"if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()";
    "if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"->"d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()";
    "if $b82 >= 0 goto $l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"->"$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()";
    "d34 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"->"$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()";
    "$l83 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"->"$b84 = l87 cmp $l83";
    "$b84 = l87 cmp $l83"->"if $b84 >= 0 goto (branch)";
    "if $b84 >= 0 goto (branch)"->"l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()";
    "if $b84 >= 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()]";
    "l87 = virtualinvoke r130.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"->"goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>()";
    "$r36 = new java.lang.StringBuffer"->"specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\")";
    "specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\\\"Date\\\",\")"->"r135 = $r36";
    "r135 = $r36"->"r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>()";
    "r136 = virtualinvoke r32.<com.google.common.collect.HashBiMap: com.google.common.collect.BiMap inverse()>()"->"i88 = 0";
    "i88 = 0"->"if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()";
    "if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"->"$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")";
    "if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"->"$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()";
    "$r102 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")"->"$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88)";
    "$r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88)"->"$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103)";
    "$r104 = interfaceinvoke r136.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>($r103)"->"$r105 = (java.lang.String) $r104";
    "$r105 = (java.lang.String) $r104"->"$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105)";
    "$r106 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r105)"->"virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")";
    "virtualinvoke $r106.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")"->"i89 = 0";
    "i89 = 0"->"$i79 = lengthof r3";
    "$i79 = lengthof r3"->"if i89 >= $i79 goto i88 = i88 + 1";
    "if i89 >= $i79 goto i88 = i88 + 1"->"$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")";
    "if i89 >= $i79 goto i88 = i88 + 1"->"i88 = i88 + 1";
    "$r107 = virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"\")"->"$r108 = r3[i89]";
    "$r108 = r3[i89]"->"$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108)";
    "$r109 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r108)"->"virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")";
    "virtualinvoke $r109.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\",\")"->"i89 = i89 + 1";
    "i89 = i89 + 1"->"goto [?= $i79 = lengthof r3]";
    "goto [?= $i79 = lengthof r3]"->"$i79 = lengthof r3";
    "i88 = i88 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i88 >= i86 goto $i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()";
    "$i3 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"->"if $i3 <= 0 goto $r37 = new java.lang.StringBuffer";
    "if $i3 <= 0 goto $r37 = new java.lang.StringBuffer"->"$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()";
    "if $i3 <= 0 goto $r37 = new java.lang.StringBuffer"->"$r37 = new java.lang.StringBuffer";
    "$i77 = virtualinvoke r135.<java.lang.StringBuffer: int length()>()"->"$i78 = $i77 - 1";
    "$i78 = $i77 - 1"->"virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78)";
    "virtualinvoke r135.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i78)"->"$r37 = new java.lang.StringBuffer";
    "$r37 = new java.lang.StringBuffer"->"specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\")";
    "specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"[\")"->"r137 = $r37";
    "r137 = $r37"->"$r38 = new java.text.SimpleDateFormat";
    "$r38 = new java.text.SimpleDateFormat"->"specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\")";
    "specialinvoke $r38.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy/MM/dd HH:mm:ss\")"->"r138 = $r38";
    "r138 = $r38"->"$r39 = new java.text.DecimalFormatSymbols";
    "$r39 = new java.text.DecimalFormatSymbols"->"specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>()";
    "specialinvoke $r39.<java.text.DecimalFormatSymbols: void <init>()>()"->"r139 = $r39";
    "r139 = $r39"->"virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46)";
    "virtualinvoke r139.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46)"->"$r40 = new java.text.DecimalFormat";
    "$r40 = new java.text.DecimalFormat"->"specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139)";
    "specialinvoke $r40.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>(\"#\", r139)"->"r140 = $r40";
    "r140 = $r40"->"virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1)";
    "virtualinvoke r128.<java.util.Calendar: void add(int,int)>(12, -1)"->"$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")";
    "$r41 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")"->"$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>()";
    "$r42 = virtualinvoke r128.<java.util.Calendar: java.util.Date getTime()>()"->"$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42)";
    "$r43 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r42)"->"$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43)";
    "$r44 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43)"->"virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")";
    "virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")"->"$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i4 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$i5 = neg $i4";
    "$i5 = neg $i4"->"$d0 = (double) $i5";
    "$d0 = (double) $i5"->"$d1 = d32 / $d0";
    "$d1 = d32 / $d0"->"$d2 = $d1 / 10.0";
    "$d2 = $d1 / 10.0"->"$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2)";
    "$r45 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d2)"->"$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45)";
    "$r46 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45)"->"virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\")";
    "virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",0,\")"->"$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i6 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$i7 = neg $i6";
    "$i7 = neg $i6"->"$d3 = (double) $i7";
    "$d3 = (double) $i7"->"$d4 = d33 / $d3";
    "$d4 = d33 / $d3"->"$d5 = $d4 / 10.0";
    "$d5 = $d4 / 10.0"->"$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5)";
    "$r47 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d5)"->"$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47)";
    "$r48 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47)"->"virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")";
    "virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"->"$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i8 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$i9 = neg $i8";
    "$i9 = neg $i8"->"$d6 = (double) $i9";
    "$d6 = (double) $i9"->"$d7 = d34 / $d6";
    "$d7 = d34 / $d6"->"$d8 = $d7 / 10.0";
    "$d8 = $d7 / 10.0"->"$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8)";
    "$r49 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d8)"->"$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49)";
    "$r50 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49)"->"virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")";
    "virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"->"$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i10 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$i11 = neg $i10";
    "$i11 = neg $i10"->"$l12 = (long) $i11";
    "$l12 = (long) $i11"->"$l13 = l87 / $l12";
    "$l13 = l87 / $l12"->"$l14 = $l13 / 10L";
    "$l14 = $l13 / 10L"->"$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14)";
    "$r51 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l14)"->"$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51)";
    "$r52 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51)"->"virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")";
    "virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0,\")"->"$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()";
    "$i15 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"->"$i18 = $i15 - 1";
    "$i18 = $i15 - 1"->"$i16 = lengthof r3";
    "$i16 = lengthof r3"->"$i17 = $i16 + 1";
    "$i17 = $i16 + 1"->"i19 = $i18 * $i17";
    "i19 = $i18 * $i17"->"i90 = 0";
    "i90 = 0"->"if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\")";
    "if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "$r101 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0\")"->"virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")";
    "virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"->"i90 = i90 + 1";
    "i90 = i90 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i90 >= i19 goto $i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "$i20 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i21 = $i20 - 1";
    "$i21 = $i20 - 1"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21)";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i21)"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\")"->"$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>()";
    "$r53 = interfaceinvoke r127.<java.util.Map: java.util.Set keySet()>()"->"r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()";
    "r141 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto $i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "$r54 = interfaceinvoke r141.<java.util.Iterator: java.lang.Object next()>()"->"r142 = (java.util.Calendar) $r54";
    "r142 = (java.util.Calendar) $r54"->"$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142)";
    "$r55 = interfaceinvoke r127.<java.util.Map: java.lang.Object get(java.lang.Object)>(r142)"->"r143 = (java.util.Set) $r55";
    "r143 = (java.util.Set) $r55"->"$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")";
    "$r56 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[new Date(\\\"\")"->"$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>()";
    "$r57 = virtualinvoke r142.<java.util.Calendar: java.util.Date getTime()>()"->"$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57)";
    "$r58 = virtualinvoke r138.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r57)"->"$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58)";
    "$r59 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58)"->"virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")";
    "virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\\\"),\")"->"$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()";
    "$i32 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"->"$i33 = lengthof r3";
    "$i33 = lengthof r3"->"$i34 = $i33 + 1";
    "$i34 = $i33 + 1"->"$i35 = $i32 * $i34";
    "$i35 = $i32 * $i34"->"r144 = newarray (java.lang.String)[$i35]";
    "r144 = newarray (java.lang.String)[$i35]"->"r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>()";
    "r145 = interfaceinvoke r143.<java.util.Set: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto i91 = 0";
    "if $z2 == 0 goto i91 = 0"->"$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto i91 = 0"->"i91 = 0";
    "$r63 = interfaceinvoke r145.<java.util.Iterator: java.lang.Object next()>()"->"r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63";
    "r64 = (de.idealo.mongodb.slowops.grapher.AggregatedProfiling) $r63"->"r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()";
    "r65 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: de.idealo.mongodb.slowops.grapher.AggregatedProfilingId getId()>()"->"r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)";
    "r66 = virtualinvoke r65.<de.idealo.mongodb.slowops.grapher.AggregatedProfilingId: java.lang.String getLabel(boolean)>(0)"->"$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66)";
    "$r67 = virtualinvoke r32.<com.google.common.collect.HashBiMap: java.lang.Object get(java.lang.Object)>(r66)"->"r68 = (java.lang.Integer) $r67";
    "r68 = (java.lang.Integer) $r67"->"$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>()";
    "$i39 = virtualinvoke r68.<java.lang.Integer: int intValue()>()"->"$i40 = lengthof r3";
    "$i40 = lengthof r3"->"$i41 = $i40 + 1";
    "$i41 = $i40 + 1"->"i42 = $i39 * $i41";
    "i42 = $i39 * $i41"->"$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()";
    "$d9 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgMs()>()"->"$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i43 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$d10 = (double) $i43";
    "$d10 = (double) $i43"->"$d11 = $d9 / $d10";
    "$d11 = $d9 / $d10"->"$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11)";
    "$r69 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d11)"->"r144[i42] = $r69";
    "r144[i42] = $r69"->"$i44 = i42 + 1";
    "$i44 = i42 + 1"->"$r70 = new java.lang.StringBuilder";
    "$r70 = new java.lang.StringBuilder"->"specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()"->"$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>()";
    "$i45 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: int getCount()>()"->"$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45)";
    "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45)"->"$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()"->"r144[$i44] = $r73";
    "r144[$i44] = $r73"->"$i46 = i42 + 2";
    "$i46 = i42 + 2"->"$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()";
    "$d12 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinMs()>()"->"$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i47 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$d13 = (double) $i47";
    "$d13 = (double) $i47"->"$d14 = $d12 / $d13";
    "$d14 = $d12 / $d13"->"$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14)";
    "$r74 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d14)"->"r144[$i46] = $r74";
    "r144[$i46] = $r74"->"$i48 = i42 + 3";
    "$i48 = i42 + 3"->"$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()";
    "$d15 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxMs()>()"->"$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i49 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$d16 = (double) $i49";
    "$d16 = (double) $i49"->"$d17 = $d15 / $d16";
    "$d17 = $d15 / $d16"->"$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17)";
    "$r75 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d17)"->"r144[$i48] = $r75";
    "r144[$i48] = $r75"->"$i50 = i42 + 4";
    "$i50 = i42 + 4"->"$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()";
    "$l51 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMillis()>()"->"$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>";
    "$i52 = r11.<de.idealo.mongodb.slowops.grapher.Grapher: int scale>"->"$l53 = (long) $i52";
    "$l53 = (long) $i52"->"$l54 = $l51 / $l53";
    "$l54 = $l51 / $l53"->"$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54)";
    "$r76 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(long)>($l54)"->"r144[$i50] = $r76";
    "r144[$i50] = $r76"->"$i55 = i42 + 5";
    "$i55 = i42 + 5"->"$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>()";
    "$d18 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevMs()>()"->"$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18)";
    "$r77 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d18)"->"r144[$i55] = $r77";
    "r144[$i55] = $r77"->"$i56 = i42 + 6";
    "$i56 = i42 + 6"->"$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>()";
    "$d19 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getNRet()>()"->"$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19)";
    "$r78 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d19)"->"r144[$i56] = $r78";
    "r144[$i56] = $r78"->"$i57 = i42 + 7";
    "$i57 = i42 + 7"->"$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>()";
    "$d20 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinRet()>()"->"$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20)";
    "$r79 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d20)"->"r144[$i57] = $r79";
    "r144[$i57] = $r79"->"$i58 = i42 + 8";
    "$i58 = i42 + 8"->"$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>()";
    "$d21 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxRet()>()"->"$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21)";
    "$r80 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d21)"->"r144[$i58] = $r80";
    "r144[$i58] = $r80"->"$i59 = i42 + 9";
    "$i59 = i42 + 9"->"$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>()";
    "$d22 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgRet()>()"->"$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22)";
    "$r81 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d22)"->"r144[$i59] = $r81";
    "r144[$i59] = $r81"->"$i60 = i42 + 10";
    "$i60 = i42 + 10"->"$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>()";
    "$d23 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevRet()>()"->"$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23)";
    "$r82 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d23)"->"r144[$i60] = $r82";
    "r144[$i60] = $r82"->"$i61 = i42 + 11";
    "$i61 = i42 + 11"->"$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>()";
    "$d24 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getLen()>()"->"$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24)";
    "$r83 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d24)"->"r144[$i61] = $r83";
    "r144[$i61] = $r83"->"$i62 = i42 + 12";
    "$i62 = i42 + 12"->"$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>()";
    "$d25 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMinLen()>()"->"$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25)";
    "$r84 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d25)"->"r144[$i62] = $r84";
    "r144[$i62] = $r84"->"$i63 = i42 + 13";
    "$i63 = i42 + 13"->"$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>()";
    "$d26 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getMaxLen()>()"->"$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26)";
    "$r85 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d26)"->"r144[$i63] = $r85";
    "r144[$i63] = $r85"->"$i64 = i42 + 14";
    "$i64 = i42 + 14"->"$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>()";
    "$d27 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getAvgLen()>()"->"$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27)";
    "$r86 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d27)"->"r144[$i64] = $r86";
    "r144[$i64] = $r86"->"$i65 = i42 + 15";
    "$i65 = i42 + 15"->"$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>()";
    "$d28 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: double getStdDevLen()>()"->"$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28)";
    "$r87 = virtualinvoke r140.<java.text.DecimalFormat: java.lang.String format(double)>($d28)"->"r144[$i65] = $r87";
    "r144[$i65] = $r87"->"$i66 = i42 + 16";
    "$i66 = i42 + 16"->"$r88 = new java.lang.StringBuilder";
    "$r88 = new java.lang.StringBuilder"->"specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()"->"$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>()";
    "$l67 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getKeys()>()"->"$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67)";
    "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l67)"->"$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()"->"r144[$i66] = $r91";
    "r144[$i66] = $r91"->"$i68 = i42 + 17";
    "$i68 = i42 + 17"->"$r92 = new java.lang.StringBuilder";
    "$r92 = new java.lang.StringBuilder"->"specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()"->"$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>()";
    "$l69 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDocs()>()"->"$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69)";
    "$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l69)"->"$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>()"->"r144[$i68] = $r95";
    "r144[$i68] = $r95"->"$i70 = i42 + 18";
    "$i70 = i42 + 18"->"$r96 = new java.lang.StringBuilder";
    "$r96 = new java.lang.StringBuilder"->"specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()"->"$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>()";
    "$l71 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getDel()>()"->"$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>()";
    "$l72 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getIns()>()"->"$l73 = $l71 + $l72";
    "$l73 = $l71 + $l72"->"$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>()";
    "$l74 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: long getMod()>()"->"$l75 = $l73 + $l74";
    "$l75 = $l73 + $l74"->"$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75)";
    "$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75)"->"$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>()"->"r144[$i70] = $r99";
    "r144[$i70] = $r99"->"$i76 = i42 + 19";
    "$i76 = i42 + 19"->"$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>()";
    "$z3 = virtualinvoke r64.<de.idealo.mongodb.slowops.grapher.AggregatedProfiling: boolean hasSortStage()>()"->"if $z3 == 0 goto $r146 = \"0\"";
    "if $z3 == 0 goto $r146 = \"0\""->"$r146 = \"1\"";
    "if $z3 == 0 goto $r146 = \"0\""->"$r146 = \"0\"";
    "$r146 = \"1\""->"goto [?= r144[$i76] = $r146]";
    "goto [?= r144[$i76] = $r146]"->"r144[$i76] = $r146";
    "$r146 = \"0\""->"r144[$i76] = $r146";
    "r144[$i76] = $r146"->"goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r145.<java.util.Iterator: boolean hasNext()>()";
    "i91 = 0"->"$i36 = lengthof r144";
    "$i36 = lengthof r144"->"if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$r60 = r144[i91]";
    "if i91 >= $i36 goto $i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()";
    "$r60 = r144[i91]"->"if $r60 != null goto $r147 = r144[i91]";
    "if $r60 != null goto $r147 = r144[i91]"->"$r147 = \"0\"";
    "if $r60 != null goto $r147 = r144[i91]"->"$r147 = r144[i91]";
    "$r147 = \"0\""->"goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)]";
    "goto [?= $r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)]"->"$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)";
    "$r147 = r144[i91]"->"$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)";
    "$r61 = virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r147)"->"virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")";
    "virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\",\")"->"i91 = i91 + 1";
    "i91 = i91 + 1"->"goto [?= $i36 = lengthof r144]";
    "goto [?= $i36 = lengthof r144]"->"$i36 = lengthof r144";
    "$i37 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i38 = $i37 - 1";
    "$i38 = $i37 - 1"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38)";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i38)"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"],\n\")"->"goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r141.<java.util.Iterator: boolean hasNext()>()";
    "$i22 = virtualinvoke r137.<java.lang.StringBuffer: int length()>()"->"$i23 = $i22 - 1";
    "$i23 = $i22 - 1"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23)";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i23)"->"virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\")";
    "virtualinvoke r137.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"];\n\")"->"$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()";
    "$i24 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"->"$i25 = lengthof r3";
    "$i25 = lengthof r3"->"$i26 = $i25 + 1";
    "$i26 = $i25 + 1"->"$i27 = $i24 * $i26";
    "$i27 = $i24 * $i26"->"r148 = newarray (boolean)[$i27]";
    "r148 = newarray (boolean)[$i27]"->"i92 = 0";
    "i92 = 0"->"i93 = 0";
    "i93 = 0"->"$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()";
    "$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()"->"if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)";
    "if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)"->"$i29 = i92";
    "if i93 >= $i28 goto virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)";
    "$i29 = i92"->"i92 = i92 + 1";
    "i92 = i92 + 1"->"r148[$i29] = 1";
    "r148[$i29] = 1"->"i94 = 0";
    "i94 = 0"->"$i30 = lengthof r3";
    "$i30 = lengthof r3"->"if i94 >= $i30 goto i93 = i93 + 1";
    "if i94 >= $i30 goto i93 = i93 + 1"->"$i31 = i92";
    "if i94 >= $i30 goto i93 = i93 + 1"->"i93 = i93 + 1";
    "$i31 = i92"->"i92 = i92 + 1";
    "i92 = i92 + 1"->"r148[$i31] = 0";
    "r148[$i31] = 0"->"i94 = i94 + 1";
    "i94 = i94 + 1"->"goto [?= $i30 = lengthof r3]";
    "goto [?= $i30 = lengthof r3]"->"$i30 = lengthof r3";
    "i93 = i93 + 1"->"goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()]";
    "goto [?= $i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()]"->"$i28 = virtualinvoke r32.<com.google.common.collect.HashBiMap: int size()>()";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabels(java.lang.StringBuffer)>(r135)"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setDataGrid(java.lang.StringBuffer)>(r137)";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setDataGrid(java.lang.StringBuffer)>(r137)"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setVisibilityValues(boolean[])>(r148)";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setVisibilityValues(boolean[])>(r148)"->"virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabelSeries(java.util.HashMap)>(r34)";
    "virtualinvoke r1.<de.idealo.mongodb.slowops.dto.SlowOpsDto: void setLabelSeries(java.util.HashMap)>(r34)"->"return r1";
}
