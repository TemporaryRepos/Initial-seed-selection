digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.lang.String[];
i1 = 1;
b2 = 0;
$i0 = lengthof r0;
if $i0 <= 2 goto i3 = b2;
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r6 = r0[0];
$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\");
if $z0 == 0 goto i3 = b2;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r7 = r0[1];
i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7);
if i1 >= 0 goto b2 = 2;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.IllegalArgumentException;
specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"invalid type\");
throw $r8;
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
b2 = 2;
"
    "Block 5:
[preds: 0 1 4 ] [succs: 6 ]
i3 = b2;
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i4 = lengthof r0;
if i3 >= $i4 goto return;
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r1 = new org.xbill.DNS.Lookup;
$r2 = r0[i3];
specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1);
r3 = $r1;
virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>();
$r5 = r0[i3];
staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3);
i3 = i3 + 1;
goto [?= $i4 = lengthof r0];
"
    "Block 8:
[preds: 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.lang.String[];
i1 = 1;
b2 = 0;
$i0 = lengthof r0;
if $i0 <= 2 goto i3 = b2;
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
$r6 = r0[0];
$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\");
if $z0 == 0 goto i3 = b2;
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.lang.String[];
i1 = 1;
b2 = 0;
$i0 = lengthof r0;
if $i0 <= 2 goto i3 = b2;
"->"Block 5:
[preds: 0 1 4 ] [succs: 6 ]
i3 = b2;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r6 = r0[0];
$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\");
if $z0 == 0 goto i3 = b2;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r7 = r0[1];
i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7);
if i1 >= 0 goto b2 = 2;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r6 = r0[0];
$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\");
if $z0 == 0 goto i3 = b2;
"->"Block 5:
[preds: 0 1 4 ] [succs: 6 ]
i3 = b2;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r7 = r0[1];
i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7);
if i1 >= 0 goto b2 = 2;
"->"Block 3:
[preds: 2 ] [succs: ]
$r8 = new java.lang.IllegalArgumentException;
specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"invalid type\");
throw $r8;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r7 = r0[1];
i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7);
if i1 >= 0 goto b2 = 2;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
b2 = 2;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
b2 = 2;
"->"Block 5:
[preds: 0 1 4 ] [succs: 6 ]
i3 = b2;
";
    "Block 5:
[preds: 0 1 4 ] [succs: 6 ]
i3 = b2;
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i4 = lengthof r0;
if i3 >= $i4 goto return;
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i4 = lengthof r0;
if i3 >= $i4 goto return;
"->"Block 7:
[preds: 6 ] [succs: 6 ]
$r1 = new org.xbill.DNS.Lookup;
$r2 = r0[i3];
specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1);
r3 = $r1;
virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>();
$r5 = r0[i3];
staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3);
i3 = i3 + 1;
goto [?= $i4 = lengthof r0];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i4 = lengthof r0;
if i3 >= $i4 goto return;
"->"Block 8:
[preds: 6 ] [succs: ]
return;
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r1 = new org.xbill.DNS.Lookup;
$r2 = r0[i3];
specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1);
r3 = $r1;
virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>();
$r5 = r0[i3];
staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3);
i3 = i3 + 1;
goto [?= $i4 = lengthof r0];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i4 = lengthof r0;
if i3 >= $i4 goto return;
";
}
