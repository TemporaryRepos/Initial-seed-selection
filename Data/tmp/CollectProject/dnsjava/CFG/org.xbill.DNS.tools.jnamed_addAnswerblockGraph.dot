digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.xbill.DNS.tools.jnamed;
r3 := @parameter0: org.xbill.DNS.Message;
r1 := @parameter1: org.xbill.DNS.Name;
i2 := @parameter2: int;
i1 := @parameter3: int;
i0 := @parameter4: int;
i3 := @parameter5: int;
b4 = 0;
if i0 <= 6 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i2 == 24 goto i2 = 255;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i2 = 255;
i3 = i3 | 2;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2);
goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3);
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>();
if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1);
"
    "Block 10:
[preds: 8 9 ] [succs: 11 15 ]
$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3);
if r2 == null goto b4 = 3;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto b4 = 3;
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5);
"
    "Block 14:
[preds: 11 12 13 ] [succs: 43 ]
b4 = 3;
goto [?= return b4];
"
    "Block 15:
[preds: 10 ] [succs: 16 19 ]
$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 43 ]
if r2 == null goto return b4;
"
    "Block 17:
[preds: 16 ] [succs: 18 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto return b4;
"
    "Block 18:
[preds: 17 ] [succs: 43 ]
$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
"
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
"
    "Block 20:
[preds: 19 ] [succs: 43 ]
r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>();
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3);
goto [?= return b4];
"
    "Block 21:
[preds: 19 ] [succs: 22 26 ]
$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
"
    "Block 22:
[preds: 21 ] [succs: 23 25 ]
r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>();
$r12 = new org.xbill.DNS.RRset;
specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23);
r24 = $r12;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3);
if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"
    "Block 24:
[preds: 23 ] [succs: 25 ]
$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5);
"
    "Block 25:
[preds: 22 23 24 ] [succs: 43 ]
$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
$i5 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3);
goto [?= return b4];
"
    "Block 26:
[preds: 21 ] [succs: 27 35 ]
$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
"
    "Block 27:
[preds: 26 ] [succs: 28 30 ]
r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>();
$r7 = new org.xbill.DNS.RRset;
specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26);
r27 = $r7;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3);
"
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26);
"
    "Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= $r8 = new org.xbill.DNS.CNAMERecord];
"
    "Block 30:
[preds: 27 28 ] [succs: ]
$r19 := @caughtexception;
r29 = $r19;
return 6;
"
    "Block 31:
[preds: 29 ] [succs: 32 34 ]
$r8 = new org.xbill.DNS.CNAMERecord;
specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28);
r30 = $r8;
$r9 = new org.xbill.DNS.RRset;
specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30);
r10 = $r9;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3);
if r2 == null goto $i6 = i0 + 1;
"
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
if i0 != 0 goto $i6 = i0 + 1;
"
    "Block 33:
[preds: 32 ] [succs: 34 ]
$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5);
"
    "Block 34:
[preds: 31 32 33 ] [succs: 43 ]
$i6 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3);
goto [?= return b4];
"
    "Block 35:
[preds: 26 ] [succs: 36 43 ]
$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
if $z6 == 0 goto return b4;
"
    "Block 36:
[preds: 35 ] [succs: 37 ]
r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>();
r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 37:
[preds: 36 38 ] [succs: 38 39 ]
$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z7 == 0 goto (branch);
"
    "Block 38:
[preds: 37 ] [succs: 37 ]
$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (org.xbill.DNS.RRset) $r6;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3);
goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"
    "Block 40:
[preds: 39 ] [succs: 41 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3);
if i0 != 0 goto return b4;
"
    "Block 41:
[preds: 40 ] [succs: 43 ]
$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
"
    "Block 42:
[preds: 39 ] [succs: 43 ]
$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1);
"
    "Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.xbill.DNS.tools.jnamed;
r3 := @parameter0: org.xbill.DNS.Message;
r1 := @parameter1: org.xbill.DNS.Name;
i2 := @parameter2: int;
i1 := @parameter3: int;
i0 := @parameter4: int;
i3 := @parameter5: int;
b4 = 0;
if i0 <= 6 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.xbill.DNS.tools.jnamed;
r3 := @parameter0: org.xbill.DNS.Message;
r1 := @parameter1: org.xbill.DNS.Name;
i2 := @parameter2: int;
i1 := @parameter3: int;
i0 := @parameter4: int;
i3 := @parameter5: int;
b4 = 0;
if i0 <= 6 goto (branch);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
if i2 == 24 goto i2 = 255;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i2 == 24 goto i2 = 255;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i2 == 24 goto i2 = 255;
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i2 = 255;
i3 = i3 | 2;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
i2 = 255;
i3 = i3 | 2;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
i2 = 255;
i3 = i3 | 2;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2);
goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1);
if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"->"Block 7:
[preds: 5 ] [succs: 8 ]
r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3);
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2);
goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()];
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>();
if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3);
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>();
if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>();
if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
"->"Block 9:
[preds: 8 ] [succs: 10 ]
$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>();
if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
"->"Block 10:
[preds: 8 9 ] [succs: 11 15 ]
$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1);
"->"Block 10:
[preds: 8 9 ] [succs: 11 15 ]
$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
";
    "Block 10:
[preds: 8 9 ] [succs: 11 15 ]
$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
"->"Block 11:
[preds: 10 ] [succs: 12 14 ]
$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3);
if r2 == null goto b4 = 3;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 15 ]
$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>();
if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
"->"Block 15:
[preds: 10 ] [succs: 16 19 ]
$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3);
if r2 == null goto b4 = 3;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto b4 = 3;
";
    "Block 11:
[preds: 10 ] [succs: 12 14 ]
$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3);
if r2 == null goto b4 = 3;
"->"Block 14:
[preds: 11 12 13 ] [succs: 43 ]
b4 = 3;
goto [?= return b4];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto b4 = 3;
"->"Block 13:
[preds: 12 ] [succs: 14 ]
$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5);
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto b4 = 3;
"->"Block 14:
[preds: 11 12 13 ] [succs: 43 ]
b4 = 3;
goto [?= return b4];
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5);
"->"Block 14:
[preds: 11 12 13 ] [succs: 43 ]
b4 = 3;
goto [?= return b4];
";
    "Block 14:
[preds: 11 12 13 ] [succs: 43 ]
b4 = 3;
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 15:
[preds: 10 ] [succs: 16 19 ]
$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
"->"Block 16:
[preds: 15 ] [succs: 17 43 ]
if r2 == null goto return b4;
";
    "Block 15:
[preds: 10 ] [succs: 16 19 ]
$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>();
if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
"->"Block 19:
[preds: 15 ] [succs: 20 21 ]
$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
";
    "Block 16:
[preds: 15 ] [succs: 17 43 ]
if r2 == null goto return b4;
"->"Block 17:
[preds: 16 ] [succs: 18 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto return b4;
";
    "Block 16:
[preds: 15 ] [succs: 17 43 ]
if r2 == null goto return b4;
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 17:
[preds: 16 ] [succs: 18 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto return b4;
"->"Block 18:
[preds: 17 ] [succs: 43 ]
$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
";
    "Block 17:
[preds: 16 ] [succs: 18 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2);
if i0 != 0 goto return b4;
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 18:
[preds: 17 ] [succs: 43 ]
$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
"->"Block 20:
[preds: 19 ] [succs: 43 ]
r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>();
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3);
goto [?= return b4];
";
    "Block 19:
[preds: 15 ] [succs: 20 21 ]
$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
"->"Block 21:
[preds: 19 ] [succs: 22 26 ]
$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
";
    "Block 20:
[preds: 19 ] [succs: 43 ]
r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>();
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3);
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 21:
[preds: 19 ] [succs: 22 26 ]
$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
"->"Block 22:
[preds: 21 ] [succs: 23 25 ]
r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>();
$r12 = new org.xbill.DNS.RRset;
specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23);
r24 = $r12;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3);
if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
";
    "Block 21:
[preds: 19 ] [succs: 22 26 ]
$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>();
if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
"->"Block 26:
[preds: 21 ] [succs: 27 35 ]
$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
";
    "Block 22:
[preds: 21 ] [succs: 23 25 ]
r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>();
$r12 = new org.xbill.DNS.RRset;
specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23);
r24 = $r12;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3);
if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"->"Block 23:
[preds: 22 ] [succs: 24 25 ]
if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
";
    "Block 22:
[preds: 21 ] [succs: 23 25 ]
r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>();
$r12 = new org.xbill.DNS.RRset;
specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23);
r24 = $r12;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3);
if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"->"Block 25:
[preds: 22 23 24 ] [succs: 43 ]
$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
$i5 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3);
goto [?= return b4];
";
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"->"Block 24:
[preds: 23 ] [succs: 25 ]
$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5);
";
    "Block 23:
[preds: 22 ] [succs: 24 25 ]
if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
"->"Block 25:
[preds: 22 23 24 ] [succs: 43 ]
$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
$i5 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3);
goto [?= return b4];
";
    "Block 24:
[preds: 23 ] [succs: 25 ]
$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5);
"->"Block 25:
[preds: 22 23 24 ] [succs: 43 ]
$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
$i5 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3);
goto [?= return b4];
";
    "Block 25:
[preds: 22 23 24 ] [succs: 43 ]
$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>();
$i5 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3);
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 26:
[preds: 21 ] [succs: 27 35 ]
$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
"->"Block 27:
[preds: 26 ] [succs: 28 30 ]
r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>();
$r7 = new org.xbill.DNS.RRset;
specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26);
r27 = $r7;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3);
";
    "Block 26:
[preds: 21 ] [succs: 27 35 ]
$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>();
if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
"->"Block 35:
[preds: 26 ] [succs: 36 43 ]
$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
if $z6 == 0 goto return b4;
";
    "Block 27:
[preds: 26 ] [succs: 28 30 ]
r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>();
$r7 = new org.xbill.DNS.RRset;
specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26);
r27 = $r7;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3);
"->"Block 28:
[preds: 27 ] [succs: 29 30 ]
r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26);
";
    "Block 27:
[preds: 26 ] [succs: 28 30 ]
r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>();
$r7 = new org.xbill.DNS.RRset;
specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26);
r27 = $r7;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3);
"->"Block 30:
[preds: 27 28 ] [succs: ]
$r19 := @caughtexception;
r29 = $r19;
return 6;
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26);
"->"Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= $r8 = new org.xbill.DNS.CNAMERecord];
";
    "Block 28:
[preds: 27 ] [succs: 29 30 ]
r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26);
"->"Block 30:
[preds: 27 28 ] [succs: ]
$r19 := @caughtexception;
r29 = $r19;
return 6;
";
    "Block 29:
[preds: 28 ] [succs: 31 ]
goto [?= $r8 = new org.xbill.DNS.CNAMERecord];
"->"Block 31:
[preds: 29 ] [succs: 32 34 ]
$r8 = new org.xbill.DNS.CNAMERecord;
specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28);
r30 = $r8;
$r9 = new org.xbill.DNS.RRset;
specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30);
r10 = $r9;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3);
if r2 == null goto $i6 = i0 + 1;
";
    "Block 31:
[preds: 29 ] [succs: 32 34 ]
$r8 = new org.xbill.DNS.CNAMERecord;
specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28);
r30 = $r8;
$r9 = new org.xbill.DNS.RRset;
specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30);
r10 = $r9;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3);
if r2 == null goto $i6 = i0 + 1;
"->"Block 32:
[preds: 31 ] [succs: 33 34 ]
if i0 != 0 goto $i6 = i0 + 1;
";
    "Block 31:
[preds: 29 ] [succs: 32 34 ]
$r8 = new org.xbill.DNS.CNAMERecord;
specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28);
r30 = $r8;
$r9 = new org.xbill.DNS.RRset;
specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30);
r10 = $r9;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3);
if r2 == null goto $i6 = i0 + 1;
"->"Block 34:
[preds: 31 32 33 ] [succs: 43 ]
$i6 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3);
goto [?= return b4];
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
if i0 != 0 goto $i6 = i0 + 1;
"->"Block 33:
[preds: 32 ] [succs: 34 ]
$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5);
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
if i0 != 0 goto $i6 = i0 + 1;
"->"Block 34:
[preds: 31 32 33 ] [succs: 43 ]
$i6 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3);
goto [?= return b4];
";
    "Block 33:
[preds: 32 ] [succs: 34 ]
$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5);
"->"Block 34:
[preds: 31 32 33 ] [succs: 43 ]
$i6 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3);
goto [?= return b4];
";
    "Block 34:
[preds: 31 32 33 ] [succs: 43 ]
$i6 = i0 + 1;
b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3);
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 35:
[preds: 26 ] [succs: 36 43 ]
$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
if $z6 == 0 goto return b4;
"->"Block 36:
[preds: 35 ] [succs: 37 ]
r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>();
r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 35:
[preds: 26 ] [succs: 36 43 ]
$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>();
if $z6 == 0 goto return b4;
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 36:
[preds: 35 ] [succs: 37 ]
r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>();
r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
"->"Block 37:
[preds: 36 38 ] [succs: 38 39 ]
$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z7 == 0 goto (branch);
";
    "Block 37:
[preds: 36 38 ] [succs: 38 39 ]
$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z7 == 0 goto (branch);
"->"Block 38:
[preds: 37 ] [succs: 37 ]
$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (org.xbill.DNS.RRset) $r6;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3);
goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 37:
[preds: 36 38 ] [succs: 38 39 ]
$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z7 == 0 goto (branch);
"->"Block 39:
[preds: 37 ] [succs: 40 42 ]
if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
";
    "Block 38:
[preds: 37 ] [succs: 37 ]
$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r33 = (org.xbill.DNS.RRset) $r6;
virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3);
goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"->"Block 37:
[preds: 36 38 ] [succs: 38 39 ]
$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z7 == 0 goto (branch);
";
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"->"Block 40:
[preds: 39 ] [succs: 41 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3);
if i0 != 0 goto return b4;
";
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
"->"Block 42:
[preds: 39 ] [succs: 43 ]
$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1);
";
    "Block 40:
[preds: 39 ] [succs: 41 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3);
if i0 != 0 goto return b4;
"->"Block 41:
[preds: 40 ] [succs: 43 ]
$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
";
    "Block 40:
[preds: 39 ] [succs: 41 43 ]
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3);
if i0 != 0 goto return b4;
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 41:
[preds: 40 ] [succs: 43 ]
$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5);
goto [?= return b4];
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
    "Block 42:
[preds: 39 ] [succs: 43 ]
$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1);
specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1);
"->"Block 43:
[preds: 14 16 17 18 20 25 34 35 40 41 42 ] [succs: ]
return b4;
";
}
