digraph "unitGraph" {
    "r0 := @this: org.xbill.DNS.tools.jnamed"
    "r1 := @parameter0: org.xbill.DNS.Name"
    "$r2 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>"
    "$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)"
    "r8 = (org.xbill.DNS.Zone) $r3"
    "if r8 == null goto i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()"
    "return r8"
    "i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()"
    "i1 = 1"
    "if i1 >= i0 goto return null"
    "$r4 = new org.xbill.DNS.Name"
    "specialinvoke $r4.<org.xbill.DNS.Name: void <init>(org.xbill.DNS.Name,int)>(r1, i1)"
    "r5 = $r4"
    "$r6 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>"
    "$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)"
    "r9 = (org.xbill.DNS.Zone) $r7"
    "if r9 == null goto i1 = i1 + 1"
    "return r9"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return null"
    "r0 := @this: org.xbill.DNS.tools.jnamed"->"r1 := @parameter0: org.xbill.DNS.Name";
    "r1 := @parameter0: org.xbill.DNS.Name"->"$r2 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>";
    "$r2 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>"->"$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)";
    "$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)"->"r8 = (org.xbill.DNS.Zone) $r3";
    "r8 = (org.xbill.DNS.Zone) $r3"->"if r8 == null goto i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()";
    "if r8 == null goto i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()"->"return r8";
    "if r8 == null goto i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()"->"i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()";
    "i0 = virtualinvoke r1.<org.xbill.DNS.Name: int labels()>()"->"i1 = 1";
    "i1 = 1"->"if i1 >= i0 goto return null";
    "if i1 >= i0 goto return null"->"$r4 = new org.xbill.DNS.Name";
    "if i1 >= i0 goto return null"->"return null";
    "$r4 = new org.xbill.DNS.Name"->"specialinvoke $r4.<org.xbill.DNS.Name: void <init>(org.xbill.DNS.Name,int)>(r1, i1)";
    "specialinvoke $r4.<org.xbill.DNS.Name: void <init>(org.xbill.DNS.Name,int)>(r1, i1)"->"r5 = $r4";
    "r5 = $r4"->"$r6 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>";
    "$r6 = r0.<org.xbill.DNS.tools.jnamed: java.util.Map znames>"->"$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)";
    "$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)"->"r9 = (org.xbill.DNS.Zone) $r7";
    "r9 = (org.xbill.DNS.Zone) $r7"->"if r9 == null goto i1 = i1 + 1";
    "if r9 == null goto i1 = i1 + 1"->"return r9";
    "if r9 == null goto i1 = i1 + 1"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return null";
}
