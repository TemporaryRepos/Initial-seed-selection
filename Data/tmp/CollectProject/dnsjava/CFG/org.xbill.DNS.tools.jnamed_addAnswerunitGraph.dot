digraph "unitGraph" {
    "r0 := @this: org.xbill.DNS.tools.jnamed"
    "r3 := @parameter0: org.xbill.DNS.Message"
    "r1 := @parameter1: org.xbill.DNS.Name"
    "i2 := @parameter2: int"
    "i1 := @parameter3: int"
    "i0 := @parameter4: int"
    "i3 := @parameter5: int"
    "b4 = 0"
    "if i0 <= 6 goto (branch)"
    "return 0"
    "if i2 == 24 goto i2 = 255"
    "if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)"
    "i2 = 255"
    "i3 = i3 | 2"
    "r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)"
    "if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"
    "r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2)"
    "goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()]"
    "r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"
    "r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3)"
    "$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()"
    "if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()"
    "$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1)"
    "$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()"
    "if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()"
    "$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3)"
    "if r2 == null goto b4 = 3"
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2)"
    "if i0 != 0 goto b4 = 3"
    "$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5)"
    "b4 = 3"
    "goto [?= return b4]"
    "$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()"
    "if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()"
    "if r2 == null goto return b4"
    "if i0 != 0 goto return b4"
    "$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5)"
    "$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()"
    "if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()"
    "r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>()"
    "$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>()"
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3)"
    "$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()"
    "if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()"
    "r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>()"
    "$r12 = new org.xbill.DNS.RRset"
    "specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23)"
    "r24 = $r12"
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3)"
    "if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"
    "if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"
    "$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5)"
    "$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"
    "$i5 = i0 + 1"
    "b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3)"
    "$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()"
    "if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()"
    "r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>()"
    "$r7 = new org.xbill.DNS.RRset"
    "specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26)"
    "r27 = $r7"
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3)"
    "r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26)"
    "goto [?= $r8 = new org.xbill.DNS.CNAMERecord]"
    "$r19 := @caughtexception"
    "r29 = $r19"
    "return 6"
    "$r8 = new org.xbill.DNS.CNAMERecord"
    "specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28)"
    "r30 = $r8"
    "$r9 = new org.xbill.DNS.RRset"
    "specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30)"
    "r10 = $r9"
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3)"
    "if r2 == null goto $i6 = i0 + 1"
    "if i0 != 0 goto $i6 = i0 + 1"
    "$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5)"
    "$i6 = i0 + 1"
    "b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3)"
    "$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()"
    "if $z6 == 0 goto return b4"
    "r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>()"
    "r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()"
    "$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"
    "if $z7 == 0 goto (branch)"
    "$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"
    "r33 = (org.xbill.DNS.RRset) $r6"
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3)"
    "goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"
    "if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3)"
    "$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"
    "virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5)"
    "$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1)"
    "return b4"
    "r0 := @this: org.xbill.DNS.tools.jnamed"->"r3 := @parameter0: org.xbill.DNS.Message";
    "r3 := @parameter0: org.xbill.DNS.Message"->"r1 := @parameter1: org.xbill.DNS.Name";
    "r1 := @parameter1: org.xbill.DNS.Name"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"i1 := @parameter3: int";
    "i1 := @parameter3: int"->"i0 := @parameter4: int";
    "i0 := @parameter4: int"->"i3 := @parameter5: int";
    "i3 := @parameter5: int"->"b4 = 0";
    "b4 = 0"->"if i0 <= 6 goto (branch)";
    "if i0 <= 6 goto (branch)"->"return 0";
    "if i0 <= 6 goto (branch)"->"if i2 == 24 goto i2 = 255";
    "if i2 == 24 goto i2 = 255"->"if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)";
    "if i2 == 24 goto i2 = 255"->"i2 = 255";
    "if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)"->"i2 = 255";
    "if i2 != 46 goto r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)"->"r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)";
    "i2 = 255"->"i3 = i3 | 2";
    "i3 = i3 | 2"->"r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)";
    "r2 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Zone findBestZone(org.xbill.DNS.Name)>(r1)"->"if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)";
    "if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2)";
    "if r2 == null goto r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)";
    "r20 = virtualinvoke r2.<org.xbill.DNS.Zone: org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int)>(r1, i2)"->"goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()]";
    "goto [?= $z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()]"->"$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()";
    "r21 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3)";
    "r20 = virtualinvoke r21.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, i2, 3)"->"$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()";
    "$z0 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isUnknown()>()"->"if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()";
    "if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()"->"$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)";
    "if $z0 == 0 goto $z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()"->"$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()";
    "$r18 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1)";
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r18, r1)"->"$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()";
    "$z1 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXDOMAIN()>()"->"if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()";
    "if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()"->"$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if $z1 == 0 goto $z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()"->"$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()";
    "$r16 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3)";
    "virtualinvoke $r16.<org.xbill.DNS.Header: void setRcode(int)>(3)"->"if r2 == null goto b4 = 3";
    "if r2 == null goto b4 = 3"->"specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2)";
    "if r2 == null goto b4 = 3"->"b4 = 3";
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2)"->"if i0 != 0 goto b4 = 3";
    "if i0 != 0 goto b4 = 3"->"$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if i0 != 0 goto b4 = 3"->"b4 = 3";
    "$r17 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5)";
    "virtualinvoke $r17.<org.xbill.DNS.Header: void setFlag(int)>(5)"->"b4 = 3";
    "b4 = 3"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$z2 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isNXRRSET()>()"->"if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()";
    "if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()"->"if r2 == null goto return b4";
    "if $z2 == 0 goto $z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()"->"$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()";
    "if r2 == null goto return b4"->"specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2)";
    "if r2 == null goto return b4"->"return b4";
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addSOA(org.xbill.DNS.Message,org.xbill.DNS.Zone)>(r3, r2)"->"if i0 != 0 goto return b4";
    "if i0 != 0 goto return b4"->"$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if i0 != 0 goto return b4"->"return b4";
    "$r15 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5)";
    "virtualinvoke $r15.<org.xbill.DNS.Header: void setFlag(int)>(5)"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$z3 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDelegation()>()"->"if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()";
    "if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()"->"r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>()";
    "if $z3 == 0 goto $z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()"->"$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()";
    "r22 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>()"->"$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>()";
    "$r14 = virtualinvoke r22.<org.xbill.DNS.RRset: org.xbill.DNS.Name getName()>()"->"virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>($r14, r3, r22, 2, i3)"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$z4 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isCNAME()>()"->"if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()";
    "if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()"->"r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>()";
    "if $z4 == 0 goto $z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()"->"$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()";
    "r23 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.CNAMERecord getCNAME()>()"->"$r12 = new org.xbill.DNS.RRset";
    "$r12 = new org.xbill.DNS.RRset"->"specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23)";
    "specialinvoke $r12.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r23)"->"r24 = $r12";
    "r24 = $r12"->"virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r24, 1, i3)"->"if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()";
    "if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"->"if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()";
    "if r2 == null goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"->"$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()";
    "if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"->"$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if i0 != 0 goto $r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"->"$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()";
    "$r13 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5)";
    "virtualinvoke $r13.<org.xbill.DNS.Header: void setFlag(int)>(5)"->"$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()";
    "$r25 = virtualinvoke r23.<org.xbill.DNS.CNAMERecord: org.xbill.DNS.Name getTarget()>()"->"$i5 = i0 + 1";
    "$i5 = i0 + 1"->"b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3)";
    "b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, $r25, i2, i1, $i5, i3)"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$z5 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isDNAME()>()"->"if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()";
    "if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()"->"r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>()";
    "if $z5 == 0 goto $z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()"->"$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()";
    "r26 = virtualinvoke r20.<org.xbill.DNS.SetResponse: org.xbill.DNS.DNAMERecord getDNAME()>()"->"$r7 = new org.xbill.DNS.RRset";
    "$r7 = new org.xbill.DNS.RRset"->"specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26)";
    "specialinvoke $r7.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r26)"->"r27 = $r7";
    "r27 = $r7"->"virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3)"->"r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r27, 1, i3)"->"$r19 := @caughtexception";
    "r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26)"->"goto [?= $r8 = new org.xbill.DNS.CNAMERecord]";
    "r28 = virtualinvoke r1.<org.xbill.DNS.Name: org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord)>(r26)"->"$r19 := @caughtexception";
    "goto [?= $r8 = new org.xbill.DNS.CNAMERecord]"->"$r8 = new org.xbill.DNS.CNAMERecord";
    "$r19 := @caughtexception"->"r29 = $r19";
    "r29 = $r19"->"return 6";
    "$r8 = new org.xbill.DNS.CNAMERecord"->"specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28)";
    "specialinvoke $r8.<org.xbill.DNS.CNAMERecord: void <init>(org.xbill.DNS.Name,int,long,org.xbill.DNS.Name)>(r1, i1, 0L, r28)"->"r30 = $r8";
    "r30 = $r8"->"$r9 = new org.xbill.DNS.RRset";
    "$r9 = new org.xbill.DNS.RRset"->"specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30)";
    "specialinvoke $r9.<org.xbill.DNS.RRset: void <init>(org.xbill.DNS.Record)>(r30)"->"r10 = $r9";
    "r10 = $r9"->"virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r10, 1, i3)"->"if r2 == null goto $i6 = i0 + 1";
    "if r2 == null goto $i6 = i0 + 1"->"if i0 != 0 goto $i6 = i0 + 1";
    "if r2 == null goto $i6 = i0 + 1"->"$i6 = i0 + 1";
    "if i0 != 0 goto $i6 = i0 + 1"->"$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if i0 != 0 goto $i6 = i0 + 1"->"$i6 = i0 + 1";
    "$r11 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5)";
    "virtualinvoke $r11.<org.xbill.DNS.Header: void setFlag(int)>(5)"->"$i6 = i0 + 1";
    "$i6 = i0 + 1"->"b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3)";
    "b4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r3, r28, i2, i1, $i6, i3)"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$z6 = virtualinvoke r20.<org.xbill.DNS.SetResponse: boolean isSuccessful()>()"->"if $z6 == 0 goto return b4";
    "if $z6 == 0 goto return b4"->"r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>()";
    "if $z6 == 0 goto return b4"->"return b4";
    "r31 = virtualinvoke r20.<org.xbill.DNS.SetResponse: java.util.List answers()>()"->"r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()";
    "r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()"->"$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
    "$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"->"if $z7 == 0 goto (branch)";
    "if $z7 == 0 goto (branch)"->"$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()";
    "if $z7 == 0 goto (branch)"->"if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)";
    "$r6 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"->"r33 = (org.xbill.DNS.RRset) $r6";
    "r33 = (org.xbill.DNS.RRset) $r6"->"virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3)";
    "virtualinvoke r0.<org.xbill.DNS.tools.jnamed: void addRRset(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.RRset,int,int)>(r1, r3, r33, 1, i3)"->"goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"->"$z7 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
    "if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3)";
    "if r2 == null goto $r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)";
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addNS(org.xbill.DNS.Message,org.xbill.DNS.Zone,int)>(r3, r2, i3)"->"if i0 != 0 goto return b4";
    "if i0 != 0 goto return b4"->"$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()";
    "if i0 != 0 goto return b4"->"return b4";
    "$r5 = virtualinvoke r3.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>()"->"virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5)";
    "virtualinvoke $r5.<org.xbill.DNS.Header: void setFlag(int)>(5)"->"goto [?= return b4]";
    "goto [?= return b4]"->"return b4";
    "$r4 = virtualinvoke r0.<org.xbill.DNS.tools.jnamed: org.xbill.DNS.Cache getCache(int)>(i1)"->"specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1)";
    "specialinvoke r0.<org.xbill.DNS.tools.jnamed: void addCacheNS(org.xbill.DNS.Message,org.xbill.DNS.Cache,org.xbill.DNS.Name)>(r3, $r4, r1)"->"return b4";
}
