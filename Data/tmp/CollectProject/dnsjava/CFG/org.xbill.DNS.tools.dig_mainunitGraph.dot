digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r67 = null"
    "r68 = null"
    "z2 = 0"
    "$i0 = lengthof r0"
    "if $i0 >= 1 goto i22 = 0"
    "staticinvoke <org.xbill.DNS.tools.dig: void usage()>()"
    "i22 = 0"
    "$r1 = r0[i22]"
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"@\")"
    "if $z0 == 0 goto (branch)"
    "$i21 = i22"
    "i22 = i22 + 1"
    "$r59 = r0[$i21]"
    "r67 = virtualinvoke $r59.<java.lang.String: java.lang.String substring(int)>(1)"
    "if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver"
    "$r58 = new org.xbill.DNS.SimpleResolver"
    "specialinvoke $r58.<org.xbill.DNS.SimpleResolver: void <init>(java.lang.String)>(r67)"
    "r68 = $r58"
    "goto [?= i23 = i22 + 1]"
    "$r2 = new org.xbill.DNS.SimpleResolver"
    "specialinvoke $r2.<org.xbill.DNS.SimpleResolver: void <init>()>()"
    "r68 = $r2"
    "i23 = i22 + 1"
    "r69 = r0[i22]"
    "$z1 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>(\"-x\")"
    "if $z1 == 0 goto $r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"
    "$i20 = i23"
    "i23 = i23 + 1"
    "$r56 = r0[$i20]"
    "$r57 = staticinvoke <org.xbill.DNS.ReverseMap: org.xbill.DNS.Name fromAddress(java.lang.String)>($r56)"
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r57"
    "<org.xbill.DNS.tools.dig: int type> = 12"
    "<org.xbill.DNS.tools.dig: int dclass> = 1"
    "goto [?= $r70 = r0[i23]]"
    "$r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"
    "$r4 = staticinvoke <org.xbill.DNS.Name: org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name)>(r69, $r3)"
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r4"
    "$r5 = r0[i23]"
    "$i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r5)"
    "<org.xbill.DNS.tools.dig: int type> = $i1"
    "$i2 = <org.xbill.DNS.tools.dig: int type>"
    "if $i2 >= 0 goto i23 = i23 + 1"
    "<org.xbill.DNS.tools.dig: int type> = 1"
    "goto [?= $r6 = r0[i23]]"
    "$r6 = r0[i23]"
    "$i3 = staticinvoke <org.xbill.DNS.DClass: int value(java.lang.String)>($r6)"
    "<org.xbill.DNS.tools.dig: int dclass> = $i3"
    "$i4 = <org.xbill.DNS.tools.dig: int dclass>"
    "if $i4 >= 0 goto i23 = i23 + 1"
    "$r70 = r0[i23]"
    "$z3 = virtualinvoke $r70.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\")"
    "if $z3 == 0 goto (branch)"
    "$r25 = r0[i23]"
    "$i11 = virtualinvoke $r25.<java.lang.String: int length()>()"
    "if $i11 <= 1 goto (branch)"
    "$r26 = r0[i23]"
    "$c12 = virtualinvoke $r26.<java.lang.String: char charAt(int)>(1)"
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"
    "$r27 = r0[i23]"
    "$i13 = virtualinvoke $r27.<java.lang.String: int length()>()"
    "if $i13 <= 2 goto i23 = i23 + 1"
    "$r29 = r0[i23]"
    "r71 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>(2)"
    "goto [?= i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)]"
    "r71 = r0[i23]"
    "i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)"
    "if i14 < 0 goto $r28 = <java.lang.System: java.io.PrintStream out>"
    "if i14 <= 65535 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"
    "$r28 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid port\")"
    "return"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"
    "goto [?= i23 = i23 + 1]"
    "$r50 = r0[i23]"
    "$i19 = virtualinvoke $r50.<java.lang.String: int length()>()"
    "if $i19 <= 2 goto i23 = i23 + 1"
    "$r52 = r0[i23]"
    "r72 = virtualinvoke $r52.<java.lang.String: java.lang.String substring(int)>(2)"
    "goto [?= r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)]"
    "r72 = r0[i23]"
    "r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)"
    "goto [?= virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)]"
    "$r65 := @caughtexception"
    "r73 = $r65"
    "$r66 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid address\")"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)"
    "$r30 = r0[i23]"
    "$i15 = virtualinvoke $r30.<java.lang.String: int length()>()"
    "if $i15 <= 2 goto i23 = i23 + 1"
    "$r41 = r0[i23]"
    "r74 = virtualinvoke $r41.<java.lang.String: java.lang.String substring(int)>(2)"
    "goto [?= r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)]"
    "r74 = r0[i23]"
    "r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)"
    "$i16 = lengthof r31"
    "lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }"
    "$r36 = new org.xbill.DNS.TSIG"
    "$r39 = <org.xbill.DNS.TSIG: org.xbill.DNS.Name HMAC_MD5>"
    "$r38 = r31[0]"
    "$r37 = r31[1]"
    "specialinvoke $r36.<org.xbill.DNS.TSIG: void <init>(org.xbill.DNS.Name,java.lang.String,java.lang.String)>($r39, $r38, $r37)"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r36)"
    "$r32 = new org.xbill.DNS.TSIG"
    "$r35 = r31[0]"
    "$r34 = r31[1]"
    "$r33 = r31[2]"
    "specialinvoke $r32.<org.xbill.DNS.TSIG: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r35, $r34, $r33)"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r32)"
    "$r40 = new java.lang.IllegalArgumentException"
    "specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid TSIG key specification\")"
    "throw $r40"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1)"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1)"
    "$r42 = r0[i23]"
    "$i17 = virtualinvoke $r42.<java.lang.String: int length()>()"
    "if $i17 <= 2 goto i23 = i23 + 1"
    "$r48 = r0[i23]"
    "r75 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>(2)"
    "goto [?= i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)]"
    "r75 = r0[i23]"
    "i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)"
    "if i18 < 0 goto $r44 = <java.lang.System: java.io.PrintStream out>"
    "if i18 <= 1 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"
    "$r44 = <java.lang.System: java.io.PrintStream out>"
    "$r43 = new java.lang.StringBuilder"
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unsupported EDNS level: \")"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"
    "$r49 = newarray (org.xbill.DNS.EDNSOption)[0]"
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int,int,int,org.xbill.DNS.EDNSOption[])>(0, 0, 32768, $r49)"
    "z2 = 1"
    "$r53 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r53.<java.io.PrintStream: void print(java.lang.String)>(\"Invalid option: \")"
    "$r55 = <java.lang.System: java.io.PrintStream out>"
    "$r54 = r0[i23]"
    "virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r54)"
    "goto [?= (branch)]"
    "$r63 := @caughtexception"
    "r76 = $r63"
    "$r64 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"
    "if $r64 != null goto (branch)"
    "if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"
    "$r24 = new org.xbill.DNS.SimpleResolver"
    "specialinvoke $r24.<org.xbill.DNS.SimpleResolver: void <init>()>()"
    "r68 = $r24"
    "$r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"
    "$i6 = <org.xbill.DNS.tools.dig: int type>"
    "$i5 = <org.xbill.DNS.tools.dig: int dclass>"
    "r8 = staticinvoke <org.xbill.DNS.Record: org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int)>($r7, $i6, $i5)"
    "r9 = staticinvoke <org.xbill.DNS.Message: org.xbill.DNS.Message newQuery(org.xbill.DNS.Record)>(r8)"
    "if z2 == 0 goto $i7 = <org.xbill.DNS.tools.dig: int type>"
    "$r23 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.Object)>(r9)"
    "$i7 = <org.xbill.DNS.tools.dig: int type>"
    "if $i7 != 252 goto l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; dnsjava dig <> \")"
    "$r14 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" axfr\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)"
    "$r18 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"
    "$r19 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.net.InetSocketAddress getAddress()>()"
    "$r20 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.TSIG getTSIGKey()>()"
    "r77 = staticinvoke <org.xbill.DNS.ZoneTransferIn: org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG)>($r18, $r19, $r20)"
    "$r21 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.time.Duration getTimeout()>()"
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void setTimeout(java.time.Duration)>($r21)"
    "$r22 = new org.xbill.DNS.tools.dig$1"
    "specialinvoke $r22.<org.xbill.DNS.tools.dig$1: void <init>()>()"
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void run(org.xbill.DNS.ZoneTransferIn$ZoneTransferHandler)>($r22)"
    "$r60 := @caughtexception"
    "r78 = $r60"
    "$r61 = new org.xbill.DNS.WireParseException"
    "$r62 = virtualinvoke r78.<org.xbill.DNS.ZoneTransferException: java.lang.String getMessage()>()"
    "specialinvoke $r61.<org.xbill.DNS.WireParseException: void <init>(java.lang.String)>($r62)"
    "throw $r61"
    "goto [?= return]"
    "l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "r10 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.Message send(org.xbill.DNS.Message)>(r9)"
    "l9 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$l10 = l9 - l8"
    "staticinvoke <org.xbill.DNS.tools.dig: void doQuery(org.xbill.DNS.Message,long)>(r10, $l10)"
    "r0 := @parameter0: java.lang.String[]"->"r67 = null";
    "r67 = null"->"r68 = null";
    "r68 = null"->"z2 = 0";
    "z2 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 >= 1 goto i22 = 0";
    "if $i0 >= 1 goto i22 = 0"->"staticinvoke <org.xbill.DNS.tools.dig: void usage()>()";
    "if $i0 >= 1 goto i22 = 0"->"i22 = 0";
    "if $i0 >= 1 goto i22 = 0"->"$r63 := @caughtexception";
    "staticinvoke <org.xbill.DNS.tools.dig: void usage()>()"->"i22 = 0";
    "staticinvoke <org.xbill.DNS.tools.dig: void usage()>()"->"$r63 := @caughtexception";
    "i22 = 0"->"$r1 = r0[i22]";
    "i22 = 0"->"$r63 := @caughtexception";
    "$r1 = r0[i22]"->"$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"@\")";
    "$r1 = r0[i22]"->"$r63 := @caughtexception";
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"@\")"->"if $z0 == 0 goto (branch)";
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"@\")"->"$r63 := @caughtexception";
    "if $z0 == 0 goto (branch)"->"$i21 = i22";
    "if $z0 == 0 goto (branch)"->"if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver";
    "if $z0 == 0 goto (branch)"->"$r63 := @caughtexception";
    "$i21 = i22"->"i22 = i22 + 1";
    "$i21 = i22"->"$r63 := @caughtexception";
    "i22 = i22 + 1"->"$r59 = r0[$i21]";
    "i22 = i22 + 1"->"$r63 := @caughtexception";
    "$r59 = r0[$i21]"->"r67 = virtualinvoke $r59.<java.lang.String: java.lang.String substring(int)>(1)";
    "$r59 = r0[$i21]"->"$r63 := @caughtexception";
    "r67 = virtualinvoke $r59.<java.lang.String: java.lang.String substring(int)>(1)"->"if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver";
    "r67 = virtualinvoke $r59.<java.lang.String: java.lang.String substring(int)>(1)"->"$r63 := @caughtexception";
    "if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver"->"$r58 = new org.xbill.DNS.SimpleResolver";
    "if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver"->"$r2 = new org.xbill.DNS.SimpleResolver";
    "if r67 == null goto $r2 = new org.xbill.DNS.SimpleResolver"->"$r63 := @caughtexception";
    "$r58 = new org.xbill.DNS.SimpleResolver"->"specialinvoke $r58.<org.xbill.DNS.SimpleResolver: void <init>(java.lang.String)>(r67)";
    "$r58 = new org.xbill.DNS.SimpleResolver"->"$r63 := @caughtexception";
    "specialinvoke $r58.<org.xbill.DNS.SimpleResolver: void <init>(java.lang.String)>(r67)"->"r68 = $r58";
    "specialinvoke $r58.<org.xbill.DNS.SimpleResolver: void <init>(java.lang.String)>(r67)"->"$r63 := @caughtexception";
    "r68 = $r58"->"goto [?= i23 = i22 + 1]";
    "r68 = $r58"->"$r63 := @caughtexception";
    "goto [?= i23 = i22 + 1]"->"i23 = i22 + 1";
    "goto [?= i23 = i22 + 1]"->"$r63 := @caughtexception";
    "$r2 = new org.xbill.DNS.SimpleResolver"->"specialinvoke $r2.<org.xbill.DNS.SimpleResolver: void <init>()>()";
    "$r2 = new org.xbill.DNS.SimpleResolver"->"$r63 := @caughtexception";
    "specialinvoke $r2.<org.xbill.DNS.SimpleResolver: void <init>()>()"->"r68 = $r2";
    "specialinvoke $r2.<org.xbill.DNS.SimpleResolver: void <init>()>()"->"$r63 := @caughtexception";
    "r68 = $r2"->"i23 = i22 + 1";
    "r68 = $r2"->"$r63 := @caughtexception";
    "i23 = i22 + 1"->"r69 = r0[i22]";
    "i23 = i22 + 1"->"$r63 := @caughtexception";
    "r69 = r0[i22]"->"$z1 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>(\"-x\")";
    "r69 = r0[i22]"->"$r63 := @caughtexception";
    "$z1 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>(\"-x\")"->"if $z1 == 0 goto $r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>";
    "$z1 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>(\"-x\")"->"$r63 := @caughtexception";
    "if $z1 == 0 goto $r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"->"$i20 = i23";
    "if $z1 == 0 goto $r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"->"$r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>";
    "if $z1 == 0 goto $r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"->"$r63 := @caughtexception";
    "$i20 = i23"->"i23 = i23 + 1";
    "$i20 = i23"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"$r56 = r0[$i20]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r56 = r0[$i20]"->"$r57 = staticinvoke <org.xbill.DNS.ReverseMap: org.xbill.DNS.Name fromAddress(java.lang.String)>($r56)";
    "$r56 = r0[$i20]"->"$r63 := @caughtexception";
    "$r57 = staticinvoke <org.xbill.DNS.ReverseMap: org.xbill.DNS.Name fromAddress(java.lang.String)>($r56)"->"<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r57";
    "$r57 = staticinvoke <org.xbill.DNS.ReverseMap: org.xbill.DNS.Name fromAddress(java.lang.String)>($r56)"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r57"->"<org.xbill.DNS.tools.dig: int type> = 12";
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r57"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int type> = 12"->"<org.xbill.DNS.tools.dig: int dclass> = 1";
    "<org.xbill.DNS.tools.dig: int type> = 12"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int dclass> = 1"->"goto [?= $r70 = r0[i23]]";
    "<org.xbill.DNS.tools.dig: int dclass> = 1"->"$r63 := @caughtexception";
    "goto [?= $r70 = r0[i23]]"->"$r70 = r0[i23]";
    "goto [?= $r70 = r0[i23]]"->"$r63 := @caughtexception";
    "$r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"->"$r4 = staticinvoke <org.xbill.DNS.Name: org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name)>(r69, $r3)";
    "$r3 = <org.xbill.DNS.Name: org.xbill.DNS.Name root>"->"$r63 := @caughtexception";
    "$r4 = staticinvoke <org.xbill.DNS.Name: org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name)>(r69, $r3)"->"<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r4";
    "$r4 = staticinvoke <org.xbill.DNS.Name: org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name)>(r69, $r3)"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r4"->"$r5 = r0[i23]";
    "<org.xbill.DNS.tools.dig: org.xbill.DNS.Name name> = $r4"->"$r63 := @caughtexception";
    "$r5 = r0[i23]"->"$i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r5)";
    "$r5 = r0[i23]"->"$r63 := @caughtexception";
    "$i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r5)"->"<org.xbill.DNS.tools.dig: int type> = $i1";
    "$i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r5)"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int type> = $i1"->"$i2 = <org.xbill.DNS.tools.dig: int type>";
    "<org.xbill.DNS.tools.dig: int type> = $i1"->"$r63 := @caughtexception";
    "$i2 = <org.xbill.DNS.tools.dig: int type>"->"if $i2 >= 0 goto i23 = i23 + 1";
    "$i2 = <org.xbill.DNS.tools.dig: int type>"->"$r63 := @caughtexception";
    "if $i2 >= 0 goto i23 = i23 + 1"->"<org.xbill.DNS.tools.dig: int type> = 1";
    "if $i2 >= 0 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i2 >= 0 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int type> = 1"->"goto [?= $r6 = r0[i23]]";
    "<org.xbill.DNS.tools.dig: int type> = 1"->"$r63 := @caughtexception";
    "goto [?= $r6 = r0[i23]]"->"$r6 = r0[i23]";
    "goto [?= $r6 = r0[i23]]"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"$r6 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r6 = r0[i23]"->"$i3 = staticinvoke <org.xbill.DNS.DClass: int value(java.lang.String)>($r6)";
    "$r6 = r0[i23]"->"$r63 := @caughtexception";
    "$i3 = staticinvoke <org.xbill.DNS.DClass: int value(java.lang.String)>($r6)"->"<org.xbill.DNS.tools.dig: int dclass> = $i3";
    "$i3 = staticinvoke <org.xbill.DNS.DClass: int value(java.lang.String)>($r6)"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int dclass> = $i3"->"$i4 = <org.xbill.DNS.tools.dig: int dclass>";
    "<org.xbill.DNS.tools.dig: int dclass> = $i3"->"$r63 := @caughtexception";
    "$i4 = <org.xbill.DNS.tools.dig: int dclass>"->"if $i4 >= 0 goto i23 = i23 + 1";
    "$i4 = <org.xbill.DNS.tools.dig: int dclass>"->"$r63 := @caughtexception";
    "if $i4 >= 0 goto i23 = i23 + 1"->"<org.xbill.DNS.tools.dig: int dclass> = 1";
    "if $i4 >= 0 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i4 >= 0 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "<org.xbill.DNS.tools.dig: int dclass> = 1"->"goto [?= $r70 = r0[i23]]";
    "<org.xbill.DNS.tools.dig: int dclass> = 1"->"$r63 := @caughtexception";
    "goto [?= $r70 = r0[i23]]"->"$r70 = r0[i23]";
    "goto [?= $r70 = r0[i23]]"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"$r70 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r70 = r0[i23]"->"$z3 = virtualinvoke $r70.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\")";
    "$r70 = r0[i23]"->"$r63 := @caughtexception";
    "$z3 = virtualinvoke $r70.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\")"->"if $z3 == 0 goto (branch)";
    "$z3 = virtualinvoke $r70.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\")"->"$r63 := @caughtexception";
    "if $z3 == 0 goto (branch)"->"$r25 = r0[i23]";
    "if $z3 == 0 goto (branch)"->"goto [?= (branch)]";
    "if $z3 == 0 goto (branch)"->"$r63 := @caughtexception";
    "$r25 = r0[i23]"->"$i11 = virtualinvoke $r25.<java.lang.String: int length()>()";
    "$r25 = r0[i23]"->"$r63 := @caughtexception";
    "$i11 = virtualinvoke $r25.<java.lang.String: int length()>()"->"if $i11 <= 1 goto (branch)";
    "$i11 = virtualinvoke $r25.<java.lang.String: int length()>()"->"$r63 := @caughtexception";
    "if $i11 <= 1 goto (branch)"->"$r26 = r0[i23]";
    "if $i11 <= 1 goto (branch)"->"goto [?= (branch)]";
    "if $i11 <= 1 goto (branch)"->"$r63 := @caughtexception";
    "$r26 = r0[i23]"->"$c12 = virtualinvoke $r26.<java.lang.String: char charAt(int)>(1)";
    "$r26 = r0[i23]"->"$r63 := @caughtexception";
    "$c12 = virtualinvoke $r26.<java.lang.String: char charAt(int)>(1)"->"tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }";
    "$c12 = virtualinvoke $r26.<java.lang.String: char charAt(int)>(1)"->"$r63 := @caughtexception";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r50 = r0[i23]";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r53 = <java.lang.System: java.io.PrintStream out>";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r49 = newarray (org.xbill.DNS.EDNSOption)[0]";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r42 = r0[i23]";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1)";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r30 = r0[i23]";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r27 = r0[i23]";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"z2 = 1";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1)";
    "tableswitch($c12) {     case 98: goto $r50 = r0[i23];     case 99: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 100: goto $r49 = newarray (org.xbill.DNS.EDNSOption)[0];     case 101: goto $r42 = r0[i23];     case 102: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 103: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 104: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 105: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1);     case 106: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 107: goto $r30 = r0[i23];     case 108: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 109: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 110: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 111: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 112: goto $r27 = r0[i23];     case 113: goto z2 = 1;     case 114: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 115: goto $r53 = <java.lang.System: java.io.PrintStream out>;     case 116: goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1);     default: goto $r53 = <java.lang.System: java.io.PrintStream out>; }"->"$r63 := @caughtexception";
    "$r27 = r0[i23]"->"$i13 = virtualinvoke $r27.<java.lang.String: int length()>()";
    "$r27 = r0[i23]"->"$r63 := @caughtexception";
    "$i13 = virtualinvoke $r27.<java.lang.String: int length()>()"->"if $i13 <= 2 goto i23 = i23 + 1";
    "$i13 = virtualinvoke $r27.<java.lang.String: int length()>()"->"$r63 := @caughtexception";
    "if $i13 <= 2 goto i23 = i23 + 1"->"$r29 = r0[i23]";
    "if $i13 <= 2 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i13 <= 2 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r29 = r0[i23]"->"r71 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>(2)";
    "$r29 = r0[i23]"->"$r63 := @caughtexception";
    "r71 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>(2)"->"goto [?= i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)]";
    "r71 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>(2)"->"$r63 := @caughtexception";
    "goto [?= i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)]"->"i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)";
    "goto [?= i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)]"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"r71 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "r71 = r0[i23]"->"i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)";
    "r71 = r0[i23]"->"$r63 := @caughtexception";
    "i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)"->"if i14 < 0 goto $r28 = <java.lang.System: java.io.PrintStream out>";
    "i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r71)"->"$r63 := @caughtexception";
    "if i14 < 0 goto $r28 = <java.lang.System: java.io.PrintStream out>"->"if i14 <= 65535 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)";
    "if i14 < 0 goto $r28 = <java.lang.System: java.io.PrintStream out>"->"$r28 = <java.lang.System: java.io.PrintStream out>";
    "if i14 < 0 goto $r28 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "if i14 <= 65535 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"->"$r28 = <java.lang.System: java.io.PrintStream out>";
    "if i14 <= 65535 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)";
    "if i14 <= 65535 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"->"$r63 := @caughtexception";
    "$r28 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid port\")";
    "$r28 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid port\")"->"return";
    "virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid port\")"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setPort(int)>(i14)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r50 = r0[i23]"->"$i19 = virtualinvoke $r50.<java.lang.String: int length()>()";
    "$r50 = r0[i23]"->"$r63 := @caughtexception";
    "$i19 = virtualinvoke $r50.<java.lang.String: int length()>()"->"if $i19 <= 2 goto i23 = i23 + 1";
    "$i19 = virtualinvoke $r50.<java.lang.String: int length()>()"->"$r63 := @caughtexception";
    "if $i19 <= 2 goto i23 = i23 + 1"->"$r52 = r0[i23]";
    "if $i19 <= 2 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i19 <= 2 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r52 = r0[i23]"->"r72 = virtualinvoke $r52.<java.lang.String: java.lang.String substring(int)>(2)";
    "$r52 = r0[i23]"->"$r63 := @caughtexception";
    "r72 = virtualinvoke $r52.<java.lang.String: java.lang.String substring(int)>(2)"->"goto [?= r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)]";
    "r72 = virtualinvoke $r52.<java.lang.String: java.lang.String substring(int)>(2)"->"$r63 := @caughtexception";
    "goto [?= r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)]"->"$r65 := @caughtexception";
    "goto [?= r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)]"->"$r63 := @caughtexception";
    "goto [?= r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)]"->"r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)";
    "i23 = i23 + 1"->"r72 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "r72 = r0[i23]"->"$r65 := @caughtexception";
    "r72 = r0[i23]"->"$r63 := @caughtexception";
    "r72 = r0[i23]"->"r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)";
    "r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)"->"$r65 := @caughtexception";
    "r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)"->"$r63 := @caughtexception";
    "r51 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r72)"->"goto [?= virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)]";
    "goto [?= virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)]"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)";
    "goto [?= virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)]"->"$r63 := @caughtexception";
    "$r65 := @caughtexception"->"r73 = $r65";
    "$r65 := @caughtexception"->"$r63 := @caughtexception";
    "r73 = $r65"->"$r66 = <java.lang.System: java.io.PrintStream out>";
    "r73 = $r65"->"$r63 := @caughtexception";
    "$r66 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid address\")";
    "$r66 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid address\")"->"return";
    "virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>(\"Invalid address\")"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setLocalAddress(java.net.InetAddress)>(r51)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r30 = r0[i23]"->"$i15 = virtualinvoke $r30.<java.lang.String: int length()>()";
    "$r30 = r0[i23]"->"$r63 := @caughtexception";
    "$i15 = virtualinvoke $r30.<java.lang.String: int length()>()"->"if $i15 <= 2 goto i23 = i23 + 1";
    "$i15 = virtualinvoke $r30.<java.lang.String: int length()>()"->"$r63 := @caughtexception";
    "if $i15 <= 2 goto i23 = i23 + 1"->"$r41 = r0[i23]";
    "if $i15 <= 2 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i15 <= 2 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r41 = r0[i23]"->"r74 = virtualinvoke $r41.<java.lang.String: java.lang.String substring(int)>(2)";
    "$r41 = r0[i23]"->"$r63 := @caughtexception";
    "r74 = virtualinvoke $r41.<java.lang.String: java.lang.String substring(int)>(2)"->"goto [?= r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)]";
    "r74 = virtualinvoke $r41.<java.lang.String: java.lang.String substring(int)>(2)"->"$r63 := @caughtexception";
    "goto [?= r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)]"->"r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)";
    "goto [?= r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)]"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"r74 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "r74 = r0[i23]"->"r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)";
    "r74 = r0[i23]"->"$r63 := @caughtexception";
    "r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)"->"$i16 = lengthof r31";
    "r31 = virtualinvoke r74.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(\"[:/]\", 3)"->"$r63 := @caughtexception";
    "$i16 = lengthof r31"->"lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }";
    "$i16 = lengthof r31"->"$r63 := @caughtexception";
    "lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }"->"$r36 = new org.xbill.DNS.TSIG";
    "lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }"->"$r32 = new org.xbill.DNS.TSIG";
    "lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }"->"$r40 = new java.lang.IllegalArgumentException";
    "lookupswitch($i16) {     case 2: goto $r36 = new org.xbill.DNS.TSIG;     case 3: goto $r32 = new org.xbill.DNS.TSIG;     default: goto $r40 = new java.lang.IllegalArgumentException; }"->"$r63 := @caughtexception";
    "$r36 = new org.xbill.DNS.TSIG"->"$r39 = <org.xbill.DNS.TSIG: org.xbill.DNS.Name HMAC_MD5>";
    "$r36 = new org.xbill.DNS.TSIG"->"$r63 := @caughtexception";
    "$r39 = <org.xbill.DNS.TSIG: org.xbill.DNS.Name HMAC_MD5>"->"$r38 = r31[0]";
    "$r39 = <org.xbill.DNS.TSIG: org.xbill.DNS.Name HMAC_MD5>"->"$r63 := @caughtexception";
    "$r38 = r31[0]"->"$r37 = r31[1]";
    "$r38 = r31[0]"->"$r63 := @caughtexception";
    "$r37 = r31[1]"->"specialinvoke $r36.<org.xbill.DNS.TSIG: void <init>(org.xbill.DNS.Name,java.lang.String,java.lang.String)>($r39, $r38, $r37)";
    "$r37 = r31[1]"->"$r63 := @caughtexception";
    "specialinvoke $r36.<org.xbill.DNS.TSIG: void <init>(org.xbill.DNS.Name,java.lang.String,java.lang.String)>($r39, $r38, $r37)"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r36)";
    "specialinvoke $r36.<org.xbill.DNS.TSIG: void <init>(org.xbill.DNS.Name,java.lang.String,java.lang.String)>($r39, $r38, $r37)"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r36)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r36)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r32 = new org.xbill.DNS.TSIG"->"$r35 = r31[0]";
    "$r32 = new org.xbill.DNS.TSIG"->"$r63 := @caughtexception";
    "$r35 = r31[0]"->"$r34 = r31[1]";
    "$r35 = r31[0]"->"$r63 := @caughtexception";
    "$r34 = r31[1]"->"$r33 = r31[2]";
    "$r34 = r31[1]"->"$r63 := @caughtexception";
    "$r33 = r31[2]"->"specialinvoke $r32.<org.xbill.DNS.TSIG: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r35, $r34, $r33)";
    "$r33 = r31[2]"->"$r63 := @caughtexception";
    "specialinvoke $r32.<org.xbill.DNS.TSIG: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r35, $r34, $r33)"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r32)";
    "specialinvoke $r32.<org.xbill.DNS.TSIG: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r35, $r34, $r33)"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r32)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTSIGKey(org.xbill.DNS.TSIG)>($r32)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r40 = new java.lang.IllegalArgumentException"->"specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid TSIG key specification\")";
    "$r40 = new java.lang.IllegalArgumentException"->"$r63 := @caughtexception";
    "specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid TSIG key specification\")"->"throw $r40";
    "specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid TSIG key specification\")"->"$r63 := @caughtexception";
    "throw $r40"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setTCP(boolean)>(1)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setIgnoreTruncation(boolean)>(1)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r42 = r0[i23]"->"$i17 = virtualinvoke $r42.<java.lang.String: int length()>()";
    "$r42 = r0[i23]"->"$r63 := @caughtexception";
    "$i17 = virtualinvoke $r42.<java.lang.String: int length()>()"->"if $i17 <= 2 goto i23 = i23 + 1";
    "$i17 = virtualinvoke $r42.<java.lang.String: int length()>()"->"$r63 := @caughtexception";
    "if $i17 <= 2 goto i23 = i23 + 1"->"$r48 = r0[i23]";
    "if $i17 <= 2 goto i23 = i23 + 1"->"i23 = i23 + 1";
    "if $i17 <= 2 goto i23 = i23 + 1"->"$r63 := @caughtexception";
    "$r48 = r0[i23]"->"r75 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>(2)";
    "$r48 = r0[i23]"->"$r63 := @caughtexception";
    "r75 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>(2)"->"goto [?= i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)]";
    "r75 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>(2)"->"$r63 := @caughtexception";
    "goto [?= i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)]"->"i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)";
    "goto [?= i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)]"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"r75 = r0[i23]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "r75 = r0[i23]"->"i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)";
    "r75 = r0[i23]"->"$r63 := @caughtexception";
    "i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)"->"if i18 < 0 goto $r44 = <java.lang.System: java.io.PrintStream out>";
    "i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r75)"->"$r63 := @caughtexception";
    "if i18 < 0 goto $r44 = <java.lang.System: java.io.PrintStream out>"->"if i18 <= 1 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)";
    "if i18 < 0 goto $r44 = <java.lang.System: java.io.PrintStream out>"->"$r44 = <java.lang.System: java.io.PrintStream out>";
    "if i18 < 0 goto $r44 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "if i18 <= 1 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"->"$r44 = <java.lang.System: java.io.PrintStream out>";
    "if i18 <= 1 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)";
    "if i18 <= 1 goto virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"->"$r63 := @caughtexception";
    "$r44 = <java.lang.System: java.io.PrintStream out>"->"$r43 = new java.lang.StringBuilder";
    "$r44 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "$r43 = new java.lang.StringBuilder"->"specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()";
    "$r43 = new java.lang.StringBuilder"->"$r63 := @caughtexception";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unsupported EDNS level: \")";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r63 := @caughtexception";
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unsupported EDNS level: \")"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)";
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unsupported EDNS level: \")"->"$r63 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"->"$r63 := @caughtexception";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r63 := @caughtexception";
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"->"return";
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int)>(i18)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r49 = newarray (org.xbill.DNS.EDNSOption)[0]"->"virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int,int,int,org.xbill.DNS.EDNSOption[])>(0, 0, 32768, $r49)";
    "$r49 = newarray (org.xbill.DNS.EDNSOption)[0]"->"$r63 := @caughtexception";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int,int,int,org.xbill.DNS.EDNSOption[])>(0, 0, 32768, $r49)"->"goto [?= i23 = i23 + 1]";
    "virtualinvoke r68.<org.xbill.DNS.SimpleResolver: void setEDNS(int,int,int,org.xbill.DNS.EDNSOption[])>(0, 0, 32768, $r49)"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "z2 = 1"->"goto [?= i23 = i23 + 1]";
    "z2 = 1"->"$r63 := @caughtexception";
    "goto [?= i23 = i23 + 1]"->"i23 = i23 + 1";
    "goto [?= i23 = i23 + 1]"->"$r63 := @caughtexception";
    "$r53 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r53.<java.io.PrintStream: void print(java.lang.String)>(\"Invalid option: \")";
    "$r53 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "virtualinvoke $r53.<java.io.PrintStream: void print(java.lang.String)>(\"Invalid option: \")"->"$r55 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke $r53.<java.io.PrintStream: void print(java.lang.String)>(\"Invalid option: \")"->"$r63 := @caughtexception";
    "$r55 = <java.lang.System: java.io.PrintStream out>"->"$r54 = r0[i23]";
    "$r55 = <java.lang.System: java.io.PrintStream out>"->"$r63 := @caughtexception";
    "$r54 = r0[i23]"->"virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r54)";
    "$r54 = r0[i23]"->"$r63 := @caughtexception";
    "virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r54)"->"i23 = i23 + 1";
    "virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r54)"->"$r63 := @caughtexception";
    "i23 = i23 + 1"->"goto [?= $r70 = r0[i23]]";
    "i23 = i23 + 1"->"$r63 := @caughtexception";
    "goto [?= $r70 = r0[i23]]"->"$r70 = r0[i23]";
    "goto [?= $r70 = r0[i23]]"->"$r63 := @caughtexception";
    "goto [?= (branch)]"->"if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r63 := @caughtexception"->"r76 = $r63";
    "r76 = $r63"->"$r64 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r64 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"if $r64 != null goto (branch)";
    "if $r64 != null goto (branch)"->"staticinvoke <org.xbill.DNS.tools.dig: void usage()>()";
    "if $r64 != null goto (branch)"->"if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "staticinvoke <org.xbill.DNS.tools.dig: void usage()>()"->"if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"$r24 = new org.xbill.DNS.SimpleResolver";
    "if r68 != null goto $r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"$r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r24 = new org.xbill.DNS.SimpleResolver"->"specialinvoke $r24.<org.xbill.DNS.SimpleResolver: void <init>()>()";
    "specialinvoke $r24.<org.xbill.DNS.SimpleResolver: void <init>()>()"->"r68 = $r24";
    "r68 = $r24"->"$r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r7 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"$i6 = <org.xbill.DNS.tools.dig: int type>";
    "$i6 = <org.xbill.DNS.tools.dig: int type>"->"$i5 = <org.xbill.DNS.tools.dig: int dclass>";
    "$i5 = <org.xbill.DNS.tools.dig: int dclass>"->"r8 = staticinvoke <org.xbill.DNS.Record: org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int)>($r7, $i6, $i5)";
    "r8 = staticinvoke <org.xbill.DNS.Record: org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int)>($r7, $i6, $i5)"->"r9 = staticinvoke <org.xbill.DNS.Message: org.xbill.DNS.Message newQuery(org.xbill.DNS.Record)>(r8)";
    "r9 = staticinvoke <org.xbill.DNS.Message: org.xbill.DNS.Message newQuery(org.xbill.DNS.Record)>(r8)"->"if z2 == 0 goto $i7 = <org.xbill.DNS.tools.dig: int type>";
    "if z2 == 0 goto $i7 = <org.xbill.DNS.tools.dig: int type>"->"$r23 = <java.lang.System: java.io.PrintStream out>";
    "if z2 == 0 goto $i7 = <org.xbill.DNS.tools.dig: int type>"->"$i7 = <org.xbill.DNS.tools.dig: int type>";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.Object)>(r9)";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.Object)>(r9)"->"$i7 = <org.xbill.DNS.tools.dig: int type>";
    "$i7 = <org.xbill.DNS.tools.dig: int type>"->"if $i7 != 252 goto l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "if $i7 != 252 goto l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "if $i7 != 252 goto l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; dnsjava dig <> \")";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; dnsjava dig <> \")"->"$r14 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r14 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" axfr\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" axfr\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)"->"$r18 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>";
    "$r18 = <org.xbill.DNS.tools.dig: org.xbill.DNS.Name name>"->"$r19 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.net.InetSocketAddress getAddress()>()";
    "$r19 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.net.InetSocketAddress getAddress()>()"->"$r20 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.TSIG getTSIGKey()>()";
    "$r20 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.TSIG getTSIGKey()>()"->"r77 = staticinvoke <org.xbill.DNS.ZoneTransferIn: org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG)>($r18, $r19, $r20)";
    "r77 = staticinvoke <org.xbill.DNS.ZoneTransferIn: org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG)>($r18, $r19, $r20)"->"$r21 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.time.Duration getTimeout()>()";
    "$r21 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: java.time.Duration getTimeout()>()"->"virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void setTimeout(java.time.Duration)>($r21)";
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void setTimeout(java.time.Duration)>($r21)"->"$r22 = new org.xbill.DNS.tools.dig$1";
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void setTimeout(java.time.Duration)>($r21)"->"$r60 := @caughtexception";
    "$r22 = new org.xbill.DNS.tools.dig$1"->"specialinvoke $r22.<org.xbill.DNS.tools.dig$1: void <init>()>()";
    "$r22 = new org.xbill.DNS.tools.dig$1"->"$r60 := @caughtexception";
    "specialinvoke $r22.<org.xbill.DNS.tools.dig$1: void <init>()>()"->"virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void run(org.xbill.DNS.ZoneTransferIn$ZoneTransferHandler)>($r22)";
    "specialinvoke $r22.<org.xbill.DNS.tools.dig$1: void <init>()>()"->"$r60 := @caughtexception";
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void run(org.xbill.DNS.ZoneTransferIn$ZoneTransferHandler)>($r22)"->"goto [?= (branch)]";
    "virtualinvoke r77.<org.xbill.DNS.ZoneTransferIn: void run(org.xbill.DNS.ZoneTransferIn$ZoneTransferHandler)>($r22)"->"$r60 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "$r60 := @caughtexception"->"r78 = $r60";
    "r78 = $r60"->"$r61 = new org.xbill.DNS.WireParseException";
    "$r61 = new org.xbill.DNS.WireParseException"->"$r62 = virtualinvoke r78.<org.xbill.DNS.ZoneTransferException: java.lang.String getMessage()>()";
    "$r62 = virtualinvoke r78.<org.xbill.DNS.ZoneTransferException: java.lang.String getMessage()>()"->"specialinvoke $r61.<org.xbill.DNS.WireParseException: void <init>(java.lang.String)>($r62)";
    "specialinvoke $r61.<org.xbill.DNS.WireParseException: void <init>(java.lang.String)>($r62)"->"throw $r61";
    "goto [?= return]"->"return";
    "l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"r10 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.Message send(org.xbill.DNS.Message)>(r9)";
    "r10 = virtualinvoke r68.<org.xbill.DNS.SimpleResolver: org.xbill.DNS.Message send(org.xbill.DNS.Message)>(r9)"->"l9 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "l9 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$l10 = l9 - l8";
    "$l10 = l9 - l8"->"staticinvoke <org.xbill.DNS.tools.dig: void doQuery(org.xbill.DNS.Message,long)>(r10, $l10)";
    "staticinvoke <org.xbill.DNS.tools.dig: void doQuery(org.xbill.DNS.Message,long)>(r10, $l10)"->"return";
}
