digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @this: org.xbill.DNS.tools.jnamed;
r8 := @parameter0: org.xbill.DNS.Message;
r0 := @parameter1: org.xbill.DNS.Cache;
r1 := @parameter2: org.xbill.DNS.Name;
r2 = virtualinvoke r0.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, 2, 0);
$z0 = virtualinvoke r2.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z0 != 0 goto r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
"
    "Block 1:
[preds: 0 ] [succs: ]
return;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r4 = virtualinvoke r3.<org.xbill.DNS.RRset: java.util.List rrs()>();
r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (org.xbill.DNS.Record) $r6;
virtualinvoke r8.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r7, 2);
goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 5:
[preds: 3 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @this: org.xbill.DNS.tools.jnamed;
r8 := @parameter0: org.xbill.DNS.Message;
r0 := @parameter1: org.xbill.DNS.Cache;
r1 := @parameter2: org.xbill.DNS.Name;
r2 = virtualinvoke r0.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, 2, 0);
$z0 = virtualinvoke r2.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z0 != 0 goto r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
"->"Block 1:
[preds: 0 ] [succs: ]
return;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @this: org.xbill.DNS.tools.jnamed;
r8 := @parameter0: org.xbill.DNS.Message;
r0 := @parameter1: org.xbill.DNS.Cache;
r1 := @parameter2: org.xbill.DNS.Name;
r2 = virtualinvoke r0.<org.xbill.DNS.Cache: org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int)>(r1, 2, 0);
$z0 = virtualinvoke r2.<org.xbill.DNS.SetResponse: boolean isDelegation()>();
if $z0 != 0 goto r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r4 = virtualinvoke r3.<org.xbill.DNS.RRset: java.util.List rrs()>();
r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r3 = virtualinvoke r2.<org.xbill.DNS.SetResponse: org.xbill.DNS.RRset getNS()>();
$r4 = virtualinvoke r3.<org.xbill.DNS.RRset: java.util.List rrs()>();
r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (org.xbill.DNS.Record) $r6;
virtualinvoke r8.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r7, 2);
goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 5:
[preds: 3 ] [succs: ]
return;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (org.xbill.DNS.Record) $r6;
virtualinvoke r8.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r7, 2);
goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
}
