digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @this: org.xbill.DNS.tools.jnamed;
r0 := @parameter0: org.xbill.DNS.Message;
r18 := @parameter1: byte[];
r5 := @parameter2: java.net.Socket;
b10 = 0;
r1 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z0 = virtualinvoke r1.<org.xbill.DNS.Header: boolean getFlag(int)>(0);
if $z0 == 0 goto $i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
"
    "Block 1:
[preds: 0 ] [succs: ]
return null;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
if $i0 == 0 goto $i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$r21 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 1);
return $r21;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
if $i1 == 0 goto r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
$r20 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 4);
return $r20;
"
    "Block 6:
[preds: 4 ] [succs: 7 10 ]
r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
r3 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.TSIGRecord getTSIG()>();
r22 = null;
if r3 == null goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r15 = r8.<org.xbill.DNS.tools.jnamed: java.util.Map TSIGs>;
$r16 = virtualinvoke r3.<org.xbill.DNS.TSIGRecord: org.xbill.DNS.Name getName()>();
$r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);
r22 = (org.xbill.DNS.TSIG) $r17;
if r22 == null goto $r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i9 = virtualinvoke r22.<org.xbill.DNS.TSIG: int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord)>(r0, r18, null);
if $i9 == 0 goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"
    "Block 9:
[preds: 7 8 ] [succs: ]
$r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
return $r19;
"
    "Block 10:
[preds: 6 8 ] [succs: 11 12 ]
r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
if r5 == null goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 15 ]
i11 = 65535;
goto [?= (branch)];
"
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
if r4 == null goto i11 = 512;
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
$i8 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getPayloadSize()>();
i11 = staticinvoke <java.lang.Math: int max(int,int)>($i8, 512);
goto [?= (branch)];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
i11 = 512;
"
    "Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i6 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getFlags()>();
$i7 = $i6 & 32768;
if $i7 == 0 goto $r23 = new org.xbill.DNS.Message;
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
b10 = 1;
"
    "Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
"
    "Block 19:
[preds: 18 ] [succs: 20 ]
$r14 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r14.<org.xbill.DNS.Header: void setFlag(int)>(7);
"
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
r7 = virtualinvoke r2.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>();
i2 = virtualinvoke r2.<org.xbill.DNS.Record: int getType()>();
i3 = virtualinvoke r2.<org.xbill.DNS.Record: int getDClass()>();
if i2 != 252 goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if r5 == null goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"
    "Block 22:
[preds: 21 ] [succs: ]
$r13 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] doAXFR(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.TSIG,org.xbill.DNS.TSIGRecord,java.net.Socket)>(r7, r0, r22, r3, r5);
return $r13;
"
    "Block 23:
[preds: 20 21 ] [succs: 24 26 ]
$z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
if $z1 != 0 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i2 == 255 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"
    "Block 25:
[preds: 24 ] [succs: ]
$r12 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 4);
return $r12;
"
    "Block 26:
[preds: 23 24 ] [succs: 27 29 ]
b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
if b4 == 0 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
if b4 == 3 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"
    "Block 28:
[preds: 27 ] [succs: ]
$r11 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, b4);
return $r11;
"
    "Block 29:
[preds: 26 27 ] [succs: 30 34 ]
specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
if r4 == null goto virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
"
    "Block 30:
[preds: 29 ] [succs: 31 32 ]
if b10 != 1 goto $c13 = 0;
"
    "Block 31:
[preds: 30 ] [succs: 33 ]
$c13 = 32768;
goto [?= c5 = $c13];
"
    "Block 32:
[preds: 30 ] [succs: 33 ]
$c13 = 0;
"
    "Block 33:
[preds: 31 32 ] [succs: 34 ]
c5 = $c13;
$r9 = new org.xbill.DNS.OPTRecord;
specialinvoke $r9.<org.xbill.DNS.OPTRecord: void <init>(int,int,int,int)>(4096, b4, 0, c5);
r10 = $r9;
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r10, 3);
"
    "Block 34:
[preds: 29 33 ] [succs: ]
virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
$r27 = virtualinvoke r6.<org.xbill.DNS.Message: byte[] toWire(int)>(i11);
return $r27;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @this: org.xbill.DNS.tools.jnamed;
r0 := @parameter0: org.xbill.DNS.Message;
r18 := @parameter1: byte[];
r5 := @parameter2: java.net.Socket;
b10 = 0;
r1 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z0 = virtualinvoke r1.<org.xbill.DNS.Header: boolean getFlag(int)>(0);
if $z0 == 0 goto $i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
"->"Block 1:
[preds: 0 ] [succs: ]
return null;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @this: org.xbill.DNS.tools.jnamed;
r0 := @parameter0: org.xbill.DNS.Message;
r18 := @parameter1: byte[];
r5 := @parameter2: java.net.Socket;
b10 = 0;
r1 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z0 = virtualinvoke r1.<org.xbill.DNS.Header: boolean getFlag(int)>(0);
if $z0 == 0 goto $i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
if $i0 == 0 goto $i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
if $i0 == 0 goto $i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$r21 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 1);
return $r21;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$i0 = virtualinvoke r1.<org.xbill.DNS.Header: int getRcode()>();
if $i0 == 0 goto $i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
if $i1 == 0 goto r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
if $i1 == 0 goto r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
"->"Block 5:
[preds: 4 ] [succs: ]
$r20 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 4);
return $r20;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i1 = virtualinvoke r1.<org.xbill.DNS.Header: int getOpcode()>();
if $i1 == 0 goto r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
"->"Block 6:
[preds: 4 ] [succs: 7 10 ]
r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
r3 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.TSIGRecord getTSIG()>();
r22 = null;
if r3 == null goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
";
    "Block 6:
[preds: 4 ] [succs: 7 10 ]
r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
r3 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.TSIGRecord getTSIG()>();
r22 = null;
if r3 == null goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r15 = r8.<org.xbill.DNS.tools.jnamed: java.util.Map TSIGs>;
$r16 = virtualinvoke r3.<org.xbill.DNS.TSIGRecord: org.xbill.DNS.Name getName()>();
$r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);
r22 = (org.xbill.DNS.TSIG) $r17;
if r22 == null goto $r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
";
    "Block 6:
[preds: 4 ] [succs: 7 10 ]
r2 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Record getQuestion()>();
r3 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.TSIGRecord getTSIG()>();
r22 = null;
if r3 == null goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"->"Block 10:
[preds: 6 8 ] [succs: 11 12 ]
r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
if r5 == null goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r15 = r8.<org.xbill.DNS.tools.jnamed: java.util.Map TSIGs>;
$r16 = virtualinvoke r3.<org.xbill.DNS.TSIGRecord: org.xbill.DNS.Name getName()>();
$r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);
r22 = (org.xbill.DNS.TSIG) $r17;
if r22 == null goto $r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$i9 = virtualinvoke r22.<org.xbill.DNS.TSIG: int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord)>(r0, r18, null);
if $i9 == 0 goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r15 = r8.<org.xbill.DNS.tools.jnamed: java.util.Map TSIGs>;
$r16 = virtualinvoke r3.<org.xbill.DNS.TSIGRecord: org.xbill.DNS.Name getName()>();
$r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);
r22 = (org.xbill.DNS.TSIG) $r17;
if r22 == null goto $r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
"->"Block 9:
[preds: 7 8 ] [succs: ]
$r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
return $r19;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i9 = virtualinvoke r22.<org.xbill.DNS.TSIG: int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord)>(r0, r18, null);
if $i9 == 0 goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"->"Block 9:
[preds: 7 8 ] [succs: ]
$r19 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] formerrMessage(byte[])>(r18);
return $r19;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i9 = virtualinvoke r22.<org.xbill.DNS.TSIG: int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord)>(r0, r18, null);
if $i9 == 0 goto r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
"->"Block 10:
[preds: 6 8 ] [succs: 11 12 ]
r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
if r5 == null goto (branch);
";
    "Block 10:
[preds: 6 8 ] [succs: 11 12 ]
r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
if r5 == null goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 15 ]
i11 = 65535;
goto [?= (branch)];
";
    "Block 10:
[preds: 6 8 ] [succs: 11 12 ]
r4 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.OPTRecord getOPT()>();
if r5 == null goto (branch);
"->"Block 12:
[preds: 10 ] [succs: 13 14 ]
if r4 == null goto i11 = 512;
";
    "Block 11:
[preds: 10 ] [succs: 15 ]
i11 = 65535;
goto [?= (branch)];
"->"Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
if r4 == null goto i11 = 512;
"->"Block 13:
[preds: 12 ] [succs: 15 ]
$i8 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getPayloadSize()>();
i11 = staticinvoke <java.lang.Math: int max(int,int)>($i8, 512);
goto [?= (branch)];
";
    "Block 12:
[preds: 10 ] [succs: 13 14 ]
if r4 == null goto i11 = 512;
"->"Block 14:
[preds: 12 ] [succs: 15 ]
i11 = 512;
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
$i8 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getPayloadSize()>();
i11 = staticinvoke <java.lang.Math: int max(int,int)>($i8, 512);
goto [?= (branch)];
"->"Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
i11 = 512;
"->"Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
";
    "Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$i6 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getFlags()>();
$i7 = $i6 & 32768;
if $i7 == 0 goto $r23 = new org.xbill.DNS.Message;
";
    "Block 15:
[preds: 11 13 14 ] [succs: 16 18 ]
if r4 == null goto $r23 = new org.xbill.DNS.Message;
"->"Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i6 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getFlags()>();
$i7 = $i6 & 32768;
if $i7 == 0 goto $r23 = new org.xbill.DNS.Message;
"->"Block 17:
[preds: 16 ] [succs: 18 ]
b10 = 1;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i6 = virtualinvoke r4.<org.xbill.DNS.OPTRecord: int getFlags()>();
$i7 = $i6 & 32768;
if $i7 == 0 goto $r23 = new org.xbill.DNS.Message;
"->"Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
b10 = 1;
"->"Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
";
    "Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
"->"Block 19:
[preds: 18 ] [succs: 20 ]
$r14 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r14.<org.xbill.DNS.Header: void setFlag(int)>(7);
";
    "Block 18:
[preds: 15 16 17 ] [succs: 19 20 ]
$r23 = new org.xbill.DNS.Message;
$r24 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$i12 = virtualinvoke $r24.<org.xbill.DNS.Header: int getID()>();
specialinvoke $r23.<org.xbill.DNS.Message: void <init>(int)>($i12);
r6 = $r23;
$r25 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r25.<org.xbill.DNS.Header: void setFlag(int)>(0);
$r26 = virtualinvoke r0.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
$z2 = virtualinvoke $r26.<org.xbill.DNS.Header: boolean getFlag(int)>(7);
if $z2 == 0 goto virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
"->"Block 20:
[preds: 18 19 ] [succs: 21 23 ]
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
r7 = virtualinvoke r2.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>();
i2 = virtualinvoke r2.<org.xbill.DNS.Record: int getType()>();
i3 = virtualinvoke r2.<org.xbill.DNS.Record: int getDClass()>();
if i2 != 252 goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
";
    "Block 19:
[preds: 18 ] [succs: 20 ]
$r14 = virtualinvoke r6.<org.xbill.DNS.Message: org.xbill.DNS.Header getHeader()>();
virtualinvoke $r14.<org.xbill.DNS.Header: void setFlag(int)>(7);
"->"Block 20:
[preds: 18 19 ] [succs: 21 23 ]
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
r7 = virtualinvoke r2.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>();
i2 = virtualinvoke r2.<org.xbill.DNS.Record: int getType()>();
i3 = virtualinvoke r2.<org.xbill.DNS.Record: int getDClass()>();
if i2 != 252 goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
";
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
r7 = virtualinvoke r2.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>();
i2 = virtualinvoke r2.<org.xbill.DNS.Record: int getType()>();
i3 = virtualinvoke r2.<org.xbill.DNS.Record: int getDClass()>();
if i2 != 252 goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"->"Block 21:
[preds: 20 ] [succs: 22 23 ]
if r5 == null goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
";
    "Block 20:
[preds: 18 19 ] [succs: 21 23 ]
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r2, 0);
r7 = virtualinvoke r2.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>();
i2 = virtualinvoke r2.<org.xbill.DNS.Record: int getType()>();
i3 = virtualinvoke r2.<org.xbill.DNS.Record: int getDClass()>();
if i2 != 252 goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"->"Block 23:
[preds: 20 21 ] [succs: 24 26 ]
$z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
if $z1 != 0 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if r5 == null goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"->"Block 22:
[preds: 21 ] [succs: ]
$r13 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] doAXFR(org.xbill.DNS.Name,org.xbill.DNS.Message,org.xbill.DNS.TSIG,org.xbill.DNS.TSIGRecord,java.net.Socket)>(r7, r0, r22, r3, r5);
return $r13;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
if r5 == null goto $z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
"->"Block 23:
[preds: 20 21 ] [succs: 24 26 ]
$z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
if $z1 != 0 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
";
    "Block 23:
[preds: 20 21 ] [succs: 24 26 ]
$z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
if $z1 != 0 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"->"Block 24:
[preds: 23 ] [succs: 25 26 ]
if i2 == 255 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
";
    "Block 23:
[preds: 20 21 ] [succs: 24 26 ]
$z1 = staticinvoke <org.xbill.DNS.Type: boolean isRR(int)>(i2);
if $z1 != 0 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"->"Block 26:
[preds: 23 24 ] [succs: 27 29 ]
b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
if b4 == 0 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i2 == 255 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"->"Block 25:
[preds: 24 ] [succs: ]
$r12 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, 4);
return $r12;
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
if i2 == 255 goto b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
"->"Block 26:
[preds: 23 24 ] [succs: 27 29 ]
b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
if b4 == 0 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
";
    "Block 26:
[preds: 23 24 ] [succs: 27 29 ]
b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
if b4 == 0 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"->"Block 27:
[preds: 26 ] [succs: 28 29 ]
if b4 == 3 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
";
    "Block 26:
[preds: 23 24 ] [succs: 27 29 ]
b4 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte addAnswer(org.xbill.DNS.Message,org.xbill.DNS.Name,int,int,int,int)>(r6, r7, i2, i3, 0, b10);
if b4 == 0 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"->"Block 29:
[preds: 26 27 ] [succs: 30 34 ]
specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
if r4 == null goto virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
if b4 == 3 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"->"Block 28:
[preds: 27 ] [succs: ]
$r11 = virtualinvoke r8.<org.xbill.DNS.tools.jnamed: byte[] errorMessage(org.xbill.DNS.Message,int)>(r0, b4);
return $r11;
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
if b4 == 3 goto specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
"->"Block 29:
[preds: 26 27 ] [succs: 30 34 ]
specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
if r4 == null goto virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
";
    "Block 29:
[preds: 26 27 ] [succs: 30 34 ]
specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
if r4 == null goto virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
"->"Block 30:
[preds: 29 ] [succs: 31 32 ]
if b10 != 1 goto $c13 = 0;
";
    "Block 29:
[preds: 26 27 ] [succs: 30 34 ]
specialinvoke r8.<org.xbill.DNS.tools.jnamed: void addAdditional(org.xbill.DNS.Message,int)>(r6, b10);
if r4 == null goto virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
"->"Block 34:
[preds: 29 33 ] [succs: ]
virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
$r27 = virtualinvoke r6.<org.xbill.DNS.Message: byte[] toWire(int)>(i11);
return $r27;
";
    "Block 30:
[preds: 29 ] [succs: 31 32 ]
if b10 != 1 goto $c13 = 0;
"->"Block 31:
[preds: 30 ] [succs: 33 ]
$c13 = 32768;
goto [?= c5 = $c13];
";
    "Block 30:
[preds: 29 ] [succs: 31 32 ]
if b10 != 1 goto $c13 = 0;
"->"Block 32:
[preds: 30 ] [succs: 33 ]
$c13 = 0;
";
    "Block 31:
[preds: 30 ] [succs: 33 ]
$c13 = 32768;
goto [?= c5 = $c13];
"->"Block 33:
[preds: 31 32 ] [succs: 34 ]
c5 = $c13;
$r9 = new org.xbill.DNS.OPTRecord;
specialinvoke $r9.<org.xbill.DNS.OPTRecord: void <init>(int,int,int,int)>(4096, b4, 0, c5);
r10 = $r9;
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r10, 3);
";
    "Block 32:
[preds: 30 ] [succs: 33 ]
$c13 = 0;
"->"Block 33:
[preds: 31 32 ] [succs: 34 ]
c5 = $c13;
$r9 = new org.xbill.DNS.OPTRecord;
specialinvoke $r9.<org.xbill.DNS.OPTRecord: void <init>(int,int,int,int)>(4096, b4, 0, c5);
r10 = $r9;
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r10, 3);
";
    "Block 33:
[preds: 31 32 ] [succs: 34 ]
c5 = $c13;
$r9 = new org.xbill.DNS.OPTRecord;
specialinvoke $r9.<org.xbill.DNS.OPTRecord: void <init>(int,int,int,int)>(4096, b4, 0, c5);
r10 = $r9;
virtualinvoke r6.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r10, 3);
"->"Block 34:
[preds: 29 33 ] [succs: ]
virtualinvoke r6.<org.xbill.DNS.Message: void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord)>(r22, 0, r3);
$r27 = virtualinvoke r6.<org.xbill.DNS.Message: byte[] toWire(int)>(i11);
return $r27;
";
}
