digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i1 = 1"
    "b2 = 0"
    "$i0 = lengthof r0"
    "if $i0 <= 2 goto i3 = b2"
    "$r6 = r0[0]"
    "$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\")"
    "if $z0 == 0 goto i3 = b2"
    "$r7 = r0[1]"
    "i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7)"
    "if i1 >= 0 goto b2 = 2"
    "$r8 = new java.lang.IllegalArgumentException"
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"invalid type\")"
    "throw $r8"
    "b2 = 2"
    "i3 = b2"
    "$i4 = lengthof r0"
    "if i3 >= $i4 goto return"
    "$r1 = new org.xbill.DNS.Lookup"
    "$r2 = r0[i3]"
    "specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1)"
    "r3 = $r1"
    "virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>()"
    "$r5 = r0[i3]"
    "staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3)"
    "i3 = i3 + 1"
    "goto [?= $i4 = lengthof r0]"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i1 = 1";
    "i1 = 1"->"b2 = 0";
    "b2 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 <= 2 goto i3 = b2";
    "if $i0 <= 2 goto i3 = b2"->"$r6 = r0[0]";
    "if $i0 <= 2 goto i3 = b2"->"i3 = b2";
    "$r6 = r0[0]"->"$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\")";
    "$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"-t\")"->"if $z0 == 0 goto i3 = b2";
    "if $z0 == 0 goto i3 = b2"->"$r7 = r0[1]";
    "if $z0 == 0 goto i3 = b2"->"i3 = b2";
    "$r7 = r0[1]"->"i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7)";
    "i1 = staticinvoke <org.xbill.DNS.Type: int value(java.lang.String)>($r7)"->"if i1 >= 0 goto b2 = 2";
    "if i1 >= 0 goto b2 = 2"->"$r8 = new java.lang.IllegalArgumentException";
    "if i1 >= 0 goto b2 = 2"->"b2 = 2";
    "$r8 = new java.lang.IllegalArgumentException"->"specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"invalid type\")";
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"invalid type\")"->"throw $r8";
    "b2 = 2"->"i3 = b2";
    "i3 = b2"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"if i3 >= $i4 goto return";
    "if i3 >= $i4 goto return"->"$r1 = new org.xbill.DNS.Lookup";
    "if i3 >= $i4 goto return"->"return";
    "$r1 = new org.xbill.DNS.Lookup"->"$r2 = r0[i3]";
    "$r2 = r0[i3]"->"specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1)";
    "specialinvoke $r1.<org.xbill.DNS.Lookup: void <init>(java.lang.String,int)>($r2, i1)"->"r3 = $r1";
    "r3 = $r1"->"virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>()";
    "virtualinvoke r3.<org.xbill.DNS.Lookup: org.xbill.DNS.Record[] run()>()"->"$r5 = r0[i3]";
    "$r5 = r0[i3]"->"staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3)";
    "staticinvoke <org.xbill.DNS.tools.lookup: void printAnswer(java.lang.String,org.xbill.DNS.Lookup)>($r5, r3)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i4 = lengthof r0]";
    "goto [?= $i4 = lengthof r0]"->"$i4 = lengthof r0";
}
