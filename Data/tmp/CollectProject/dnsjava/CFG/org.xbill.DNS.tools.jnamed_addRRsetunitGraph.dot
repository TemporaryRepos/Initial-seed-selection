digraph "unitGraph" {
    "r9 := @this: org.xbill.DNS.tools.jnamed"
    "r5 := @parameter0: org.xbill.DNS.Name"
    "r4 := @parameter1: org.xbill.DNS.Message"
    "r0 := @parameter2: org.xbill.DNS.RRset"
    "i0 := @parameter3: int"
    "i1 := @parameter4: int"
    "i5 = 1"
    "if i5 > i0 goto $i2 = i1 & 2"
    "$i4 = virtualinvoke r0.<org.xbill.DNS.RRset: int getType()>()"
    "$z6 = virtualinvoke r4.<org.xbill.DNS.Message: boolean findRRset(org.xbill.DNS.Name,int,int)>(r5, $i4, i5)"
    "if $z6 == 0 goto i5 = i5 + 1"
    "return"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "$i2 = i1 & 2"
    "if $i2 != 0 goto $i3 = i1 & 3"
    "$r6 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List rrs()>()"
    "r10 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()"
    "$z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()"
    "if $z3 == 0 goto $i3 = i1 & 3"
    "$r7 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()"
    "r11 = (org.xbill.DNS.Record) $r7"
    "$r8 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()"
    "$z4 = virtualinvoke $r8.<org.xbill.DNS.Name: boolean isWild()>()"
    "if $z4 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"
    "$z5 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()"
    "if $z5 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"
    "r11 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)"
    "virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"
    "goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]"
    "$i3 = i1 & 3"
    "if $i3 == 0 goto return"
    "$r1 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List sigs()>()"
    "r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return"
    "$r2 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"
    "r13 = (org.xbill.DNS.Record) $r2"
    "$r3 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()"
    "$z1 = virtualinvoke $r3.<org.xbill.DNS.Name: boolean isWild()>()"
    "if $z1 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"
    "$z2 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()"
    "if $z2 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"
    "r13 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)"
    "virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"
    "goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"
    "r9 := @this: org.xbill.DNS.tools.jnamed"->"r5 := @parameter0: org.xbill.DNS.Name";
    "r5 := @parameter0: org.xbill.DNS.Name"->"r4 := @parameter1: org.xbill.DNS.Message";
    "r4 := @parameter1: org.xbill.DNS.Message"->"r0 := @parameter2: org.xbill.DNS.RRset";
    "r0 := @parameter2: org.xbill.DNS.RRset"->"i0 := @parameter3: int";
    "i0 := @parameter3: int"->"i1 := @parameter4: int";
    "i1 := @parameter4: int"->"i5 = 1";
    "i5 = 1"->"if i5 > i0 goto $i2 = i1 & 2";
    "if i5 > i0 goto $i2 = i1 & 2"->"$i4 = virtualinvoke r0.<org.xbill.DNS.RRset: int getType()>()";
    "if i5 > i0 goto $i2 = i1 & 2"->"$i2 = i1 & 2";
    "$i4 = virtualinvoke r0.<org.xbill.DNS.RRset: int getType()>()"->"$z6 = virtualinvoke r4.<org.xbill.DNS.Message: boolean findRRset(org.xbill.DNS.Name,int,int)>(r5, $i4, i5)";
    "$z6 = virtualinvoke r4.<org.xbill.DNS.Message: boolean findRRset(org.xbill.DNS.Name,int,int)>(r5, $i4, i5)"->"if $z6 == 0 goto i5 = i5 + 1";
    "if $z6 == 0 goto i5 = i5 + 1"->"return";
    "if $z6 == 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 > i0 goto $i2 = i1 & 2";
    "$i2 = i1 & 2"->"if $i2 != 0 goto $i3 = i1 & 3";
    "if $i2 != 0 goto $i3 = i1 & 3"->"$r6 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List rrs()>()";
    "if $i2 != 0 goto $i3 = i1 & 3"->"$i3 = i1 & 3";
    "$r6 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List rrs()>()"->"r10 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()";
    "r10 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()"->"$z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()"->"if $z3 == 0 goto $i3 = i1 & 3";
    "if $z3 == 0 goto $i3 = i1 & 3"->"$r7 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()";
    "if $z3 == 0 goto $i3 = i1 & 3"->"$i3 = i1 & 3";
    "$r7 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()"->"r11 = (org.xbill.DNS.Record) $r7";
    "r11 = (org.xbill.DNS.Record) $r7"->"$r8 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()";
    "$r8 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()"->"$z4 = virtualinvoke $r8.<org.xbill.DNS.Name: boolean isWild()>()";
    "$z4 = virtualinvoke $r8.<org.xbill.DNS.Name: boolean isWild()>()"->"if $z4 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)";
    "if $z4 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"->"$z5 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()";
    "if $z4 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)";
    "$z5 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()"->"if $z5 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)";
    "if $z5 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"->"r11 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)";
    "if $z5 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)";
    "r11 = virtualinvoke r11.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)";
    "virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r11, i0)"->"goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]"->"$z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()";
    "$i3 = i1 & 3"->"if $i3 == 0 goto return";
    "if $i3 == 0 goto return"->"$r1 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List sigs()>()";
    "if $i3 == 0 goto return"->"return";
    "$r1 = virtualinvoke r0.<org.xbill.DNS.RRset: java.util.List sigs()>()"->"r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()";
    "r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r2 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return"->"return";
    "$r2 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"->"r13 = (org.xbill.DNS.Record) $r2";
    "r13 = (org.xbill.DNS.Record) $r2"->"$r3 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()";
    "$r3 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Name getName()>()"->"$z1 = virtualinvoke $r3.<org.xbill.DNS.Name: boolean isWild()>()";
    "$z1 = virtualinvoke $r3.<org.xbill.DNS.Name: boolean isWild()>()"->"if $z1 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)";
    "if $z1 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"->"$z2 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()";
    "if $z1 == 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)";
    "$z2 = virtualinvoke r5.<org.xbill.DNS.Name: boolean isWild()>()"->"if $z2 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)";
    "if $z2 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"->"r13 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)";
    "if $z2 != 0 goto virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)";
    "r13 = virtualinvoke r13.<org.xbill.DNS.Record: org.xbill.DNS.Record withName(org.xbill.DNS.Name)>(r5)"->"virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)";
    "virtualinvoke r4.<org.xbill.DNS.Message: void addRecord(org.xbill.DNS.Record,int)>(r13, i0)"->"goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
}
