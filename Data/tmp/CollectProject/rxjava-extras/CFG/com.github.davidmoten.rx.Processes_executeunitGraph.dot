digraph "unitGraph" {
    "r1 := @parameter0: com.github.davidmoten.rx.Processes$Parameters"
    "$r0 = new com.github.davidmoten.rx.Processes$2"
    "specialinvoke $r0.<com.github.davidmoten.rx.Processes$2: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)"
    "r2 = $r0"
    "$r3 = new com.github.davidmoten.rx.Processes$3"
    "specialinvoke $r3.<com.github.davidmoten.rx.Processes$3: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)"
    "r4 = $r3"
    "$r5 = new com.github.davidmoten.rx.Processes$4"
    "specialinvoke $r5.<com.github.davidmoten.rx.Processes$4: void <init>()>()"
    "r6 = $r5"
    "$r7 = staticinvoke <rx.Observable: rx.Observable using(rx.functions.Func0,rx.functions.Func1,rx.functions.Action1)>(r2, r4, r6)"
    "return $r7"
    "r1 := @parameter0: com.github.davidmoten.rx.Processes$Parameters"->"$r0 = new com.github.davidmoten.rx.Processes$2";
    "$r0 = new com.github.davidmoten.rx.Processes$2"->"specialinvoke $r0.<com.github.davidmoten.rx.Processes$2: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)";
    "specialinvoke $r0.<com.github.davidmoten.rx.Processes$2: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"$r3 = new com.github.davidmoten.rx.Processes$3";
    "$r3 = new com.github.davidmoten.rx.Processes$3"->"specialinvoke $r3.<com.github.davidmoten.rx.Processes$3: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)";
    "specialinvoke $r3.<com.github.davidmoten.rx.Processes$3: void <init>(com.github.davidmoten.rx.Processes$Parameters)>(r1)"->"r4 = $r3";
    "r4 = $r3"->"$r5 = new com.github.davidmoten.rx.Processes$4";
    "$r5 = new com.github.davidmoten.rx.Processes$4"->"specialinvoke $r5.<com.github.davidmoten.rx.Processes$4: void <init>()>()";
    "specialinvoke $r5.<com.github.davidmoten.rx.Processes$4: void <init>()>()"->"r6 = $r5";
    "r6 = $r5"->"$r7 = staticinvoke <rx.Observable: rx.Observable using(rx.functions.Func0,rx.functions.Func1,rx.functions.Action1)>(r2, r4, r6)";
    "$r7 = staticinvoke <rx.Observable: rx.Observable using(rx.functions.Func0,rx.functions.Func1,rx.functions.Action1)>(r2, r4, r6)"->"return $r7";
}
