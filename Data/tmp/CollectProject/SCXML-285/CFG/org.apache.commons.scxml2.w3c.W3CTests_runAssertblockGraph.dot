digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r30 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion;
r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests;
r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel;
z4 := @parameter3: boolean;
z2 := @parameter4: boolean;
r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>();
$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>();
$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3);
r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4;
if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
"
    "Block 1:
[preds: 0 ] [succs: ]
$r49 = new java.lang.IllegalStateException;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No test configuration found for W3C IRP test with id: \");
$r52 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>();
$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54);
throw $r49;
"
    "Block 2:
[preds: 0 ] [succs: 3 27 ]
$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
if $z0 == 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>();
r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 26 ] [succs: 5 27 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8;
r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>();
i0 = lengthof r10;
i7 = 0;
"
    "Block 6:
[preds: 5 25 ] [succs: 7 26 ]
if i7 >= i0 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r11 = r10[i7];
$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>;
if r11 != $r48 goto z7 = 1;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 25 ]
$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if r11 != $r13 goto i7 = i7 + 1;
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
z7 = 1;
if r14 == null goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
if r14 != r11 goto (branch);
"
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"
    "Block 14:
[preds: 13 ] [succs: 15 23 ]
$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
if z4 != $z6 goto (branch);
"
    "Block 15:
[preds: 12 13 14 ] [succs: 16 ]
$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 16:
[preds: 15 22 ] [succs: 17 23 ]
$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();
r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20;
$r22 = new java.io.File;
$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>();
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28);
r29 = $r22;
z7 = 0;
z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29);
if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>;
$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i6 = $i5 + 1;
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44);
goto [?= (branch)];
"
    "Block 19:
[preds: 17 ] [succs: 20 ]
$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i4 = $i3 + 1;
$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32);
"
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z3 == z4 goto (branch);
"
    "Block 21:
[preds: 20 ] [succs: 22 ]
$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>();
$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>();
$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);
"
    "Block 22:
[preds: 20 21 ] [succs: 16 ]
goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
"
    "Block 24:
[preds: 23 ] [succs: 25 ]
$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>;
$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i2 = $i1 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18);
"
    "Block 25:
[preds: 9 23 24 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 26:
[preds: 6 ] [succs: 4 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 27:
[preds: 2 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r30 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion;
r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests;
r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel;
z4 := @parameter3: boolean;
z2 := @parameter4: boolean;
r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>();
$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>();
$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3);
r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4;
if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
"->"Block 1:
[preds: 0 ] [succs: ]
$r49 = new java.lang.IllegalStateException;
$r50 = new java.lang.StringBuilder;
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No test configuration found for W3C IRP test with id: \");
$r52 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>();
$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54);
throw $r49;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r30 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion;
r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests;
r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel;
z4 := @parameter3: boolean;
z2 := @parameter4: boolean;
r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>();
$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>();
$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3);
r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4;
if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
"->"Block 2:
[preds: 0 ] [succs: 3 27 ]
$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
if $z0 == 0 goto return;
";
    "Block 2:
[preds: 0 ] [succs: 3 27 ]
$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
if $z0 == 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>();
r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 0 ] [succs: 3 27 ]
$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>();
if $z0 == 0 goto return;
"->"Block 27:
[preds: 2 4 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>();
r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 26 ] [succs: 5 27 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
    "Block 4:
[preds: 3 26 ] [succs: 5 27 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8;
r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>();
i0 = lengthof r10;
i7 = 0;
";
    "Block 4:
[preds: 3 26 ] [succs: 5 27 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 27:
[preds: 2 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8;
r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>();
i0 = lengthof r10;
i7 = 0;
"->"Block 6:
[preds: 5 25 ] [succs: 7 26 ]
if i7 >= i0 goto (branch);
";
    "Block 6:
[preds: 5 25 ] [succs: 7 26 ]
if i7 >= i0 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
r11 = r10[i7];
$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
";
    "Block 6:
[preds: 5 25 ] [succs: 7 26 ]
if i7 >= i0 goto (branch);
"->"Block 26:
[preds: 6 ] [succs: 4 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r11 = r10[i7];
$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>;
if r11 != $r48 goto z7 = 1;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r11 = r10[i7];
$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
"->"Block 9:
[preds: 7 8 ] [succs: 10 25 ]
$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if r11 != $r13 goto i7 = i7 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>;
if r11 != $r48 goto z7 = 1;
"->"Block 9:
[preds: 7 8 ] [succs: 10 25 ]
$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if r11 != $r13 goto i7 = i7 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>;
if r11 != $r48 goto z7 = 1;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
z7 = 1;
if r14 == null goto (branch);
";
    "Block 9:
[preds: 7 8 ] [succs: 10 25 ]
$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if r11 != $r13 goto i7 = i7 + 1;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
z7 = 1;
if r14 == null goto (branch);
";
    "Block 9:
[preds: 7 8 ] [succs: 10 25 ]
$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>();
if r11 != $r13 goto i7 = i7 + 1;
"->"Block 25:
[preds: 9 23 24 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
z7 = 1;
if r14 == null goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 12 23 ]
if r14 != r11 goto (branch);
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
z7 = 1;
if r14 == null goto (branch);
"->"Block 12:
[preds: 10 11 ] [succs: 13 15 ]
if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
if r14 != r11 goto (branch);
"->"Block 12:
[preds: 10 11 ] [succs: 13 15 ]
if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
if r14 != r11 goto (branch);
"->"Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
";
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
";
    "Block 12:
[preds: 10 11 ] [succs: 13 15 ]
if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"->"Block 15:
[preds: 12 13 14 ] [succs: 16 ]
$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"->"Block 14:
[preds: 13 ] [succs: 15 23 ]
$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
if z4 != $z6 goto (branch);
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
"->"Block 15:
[preds: 12 13 14 ] [succs: 16 ]
$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 14:
[preds: 13 ] [succs: 15 23 ]
$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
if z4 != $z6 goto (branch);
"->"Block 15:
[preds: 12 13 14 ] [succs: 16 ]
$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 14:
[preds: 13 ] [succs: 15 23 ]
$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
if z4 != $z6 goto (branch);
"->"Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
";
    "Block 15:
[preds: 12 13 14 ] [succs: 16 ]
$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>();
r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();
"->"Block 16:
[preds: 15 22 ] [succs: 17 23 ]
$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 16:
[preds: 15 22 ] [succs: 17 23 ]
$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();
r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20;
$r22 = new java.io.File;
$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>();
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28);
r29 = $r22;
z7 = 0;
z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29);
if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
";
    "Block 16:
[preds: 15 22 ] [succs: 17 23 ]
$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"->"Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();
r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20;
$r22 = new java.io.File;
$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>();
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28);
r29 = $r22;
z7 = 0;
z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29);
if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
"->"Block 18:
[preds: 17 ] [succs: 20 ]
$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>;
$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i6 = $i5 + 1;
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44);
goto [?= (branch)];
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();
r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20;
$r22 = new java.io.File;
$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>();
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28);
r29 = $r22;
z7 = 0;
z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29);
if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
"->"Block 19:
[preds: 17 ] [succs: 20 ]
$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i4 = $i3 + 1;
$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32);
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>;
$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i6 = $i5 + 1;
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44);
goto [?= (branch)];
"->"Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z3 == z4 goto (branch);
";
    "Block 19:
[preds: 17 ] [succs: 20 ]
$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>;
$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i4 = $i3 + 1;
$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32);
"->"Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z3 == z4 goto (branch);
";
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z3 == z4 goto (branch);
"->"Block 21:
[preds: 20 ] [succs: 22 ]
$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>();
$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>();
$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);
";
    "Block 20:
[preds: 18 19 ] [succs: 21 22 ]
if z3 == z4 goto (branch);
"->"Block 22:
[preds: 20 21 ] [succs: 16 ]
goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 21:
[preds: 20 ] [succs: 22 ]
$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>;
$r34 = new java.lang.StringBuilder;
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>();
$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>();
$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>();
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);
"->"Block 22:
[preds: 20 21 ] [succs: 16 ]
goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 22:
[preds: 20 21 ] [succs: 16 ]
goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()];
"->"Block 16:
[preds: 15 22 ] [succs: 17 23 ]
$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
"->"Block 24:
[preds: 23 ] [succs: 25 ]
$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>;
$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i2 = $i1 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18);
";
    "Block 23:
[preds: 11 14 16 ] [succs: 24 25 ]
if z7 == 0 goto i7 = i7 + 1;
"->"Block 25:
[preds: 9 23 24 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 24:
[preds: 23 ] [succs: 25 ]
$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>;
$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11);
$i2 = $i1 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18);
"->"Block 25:
[preds: 9 23 24 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 25:
[preds: 9 23 24 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 25 ] [succs: 7 26 ]
if i7 >= i0 goto (branch);
";
    "Block 26:
[preds: 6 ] [succs: 4 ]
goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 26 ] [succs: 5 27 ]
$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
}
