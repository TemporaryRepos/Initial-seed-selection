digraph "unitGraph" {
    "r12 := @this: org.apache.commons.scxml2.w3c.W3CTests"
    "$r0 = new java.io.File"
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"src/w3c/scxml-irp/\")"
    "r1 = $r0"
    "r2 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance(java.lang.String,java.lang.ClassLoader)>(\"net.sf.saxon.TransformerFactoryImpl\", null)"
    "virtualinvoke r2.<javax.xml.transform.TransformerFactory: void setFeature(java.lang.String,boolean)>(\"http://saxon.sf.net/feature/suppressXsltNamespaceCheck\", 1)"
    "$r3 = new java.util.HashMap"
    "specialinvoke $r3.<java.util.HashMap: void <init>()>()"
    "r4 = $r3"
    "$r8 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel ECMA>"
    "$r5 = new javax.xml.transform.stream.StreamSource"
    "$r6 = new java.io.FileInputStream"
    "$r7 = new java.io.File"
    "specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"confEcma.xsl\")"
    "specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7)"
    "specialinvoke $r5.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r6)"
    "$r9 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r5)"
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)"
    "$r13 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>"
    "$r11 = new javax.xml.transform.stream.StreamSource"
    "$r14 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"
    "$r15 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_MINIMAL_XSL_FILENAME>"
    "$r16 = virtualinvoke $r14.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r15)"
    "specialinvoke $r11.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r16)"
    "$r17 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r11)"
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r17)"
    "$r20 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel JEXL>"
    "$r19 = new javax.xml.transform.stream.StreamSource"
    "$r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"
    "$r22 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_JEXL_XSL_FILENAME>"
    "$r23 = virtualinvoke $r21.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r22)"
    "specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r23)"
    "$r24 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r19)"
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r24)"
    "$r27 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel GROOVY>"
    "$r26 = new javax.xml.transform.stream.StreamSource"
    "$r28 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"
    "$r29 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_GROOVY_XSL_FILENAME>"
    "$r30 = virtualinvoke $r28.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r29)"
    "specialinvoke $r26.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r30)"
    "$r31 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r26)"
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r31)"
    "r33 = virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: org.apache.commons.scxml2.w3c.W3CTests$Assertions loadAssertions()>()"
    "$r34 = virtualinvoke r33.<org.apache.commons.scxml2.w3c.W3CTests$Assertions: java.util.LinkedHashMap getAssertions()>()"
    "$r35 = virtualinvoke $r34.<java.util.LinkedHashMap: java.util.Collection values()>()"
    "r36 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return"
    "$r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()"
    "r38 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion) $r37"
    "$r39 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()"
    "r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto (branch)"
    "$r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()"
    "r42 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r41"
    "$r43 = virtualinvoke r42.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getResources()>()"
    "r44 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto (branch)"
    "$r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()"
    "r46 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r45"
    "$r47 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getSpecId()>()"
    "virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: void processResource(java.lang.String,org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource,java.util.Map)>($r47, r46, r4)"
    "goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r12 := @this: org.apache.commons.scxml2.w3c.W3CTests"->"$r0 = new java.io.File";
    "$r0 = new java.io.File"->"specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"src/w3c/scxml-irp/\")";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"src/w3c/scxml-irp/\")"->"r1 = $r0";
    "r1 = $r0"->"r2 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance(java.lang.String,java.lang.ClassLoader)>(\"net.sf.saxon.TransformerFactoryImpl\", null)";
    "r2 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance(java.lang.String,java.lang.ClassLoader)>(\"net.sf.saxon.TransformerFactoryImpl\", null)"->"virtualinvoke r2.<javax.xml.transform.TransformerFactory: void setFeature(java.lang.String,boolean)>(\"http://saxon.sf.net/feature/suppressXsltNamespaceCheck\", 1)";
    "virtualinvoke r2.<javax.xml.transform.TransformerFactory: void setFeature(java.lang.String,boolean)>(\"http://saxon.sf.net/feature/suppressXsltNamespaceCheck\", 1)"->"$r3 = new java.util.HashMap";
    "$r3 = new java.util.HashMap"->"specialinvoke $r3.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r3.<java.util.HashMap: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"$r8 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel ECMA>";
    "$r8 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel ECMA>"->"$r5 = new javax.xml.transform.stream.StreamSource";
    "$r5 = new javax.xml.transform.stream.StreamSource"->"$r6 = new java.io.FileInputStream";
    "$r6 = new java.io.FileInputStream"->"$r7 = new java.io.File";
    "$r7 = new java.io.File"->"specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"confEcma.xsl\")";
    "specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"confEcma.xsl\")"->"specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7)";
    "specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7)"->"specialinvoke $r5.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r6)";
    "specialinvoke $r5.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r6)"->"$r9 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r5)";
    "$r9 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r5)"->"interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)";
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)"->"$r13 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>";
    "$r13 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>"->"$r11 = new javax.xml.transform.stream.StreamSource";
    "$r11 = new javax.xml.transform.stream.StreamSource"->"$r14 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()";
    "$r14 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"->"$r15 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_MINIMAL_XSL_FILENAME>";
    "$r15 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_MINIMAL_XSL_FILENAME>"->"$r16 = virtualinvoke $r14.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r15)";
    "$r16 = virtualinvoke $r14.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r15)"->"specialinvoke $r11.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r16)";
    "specialinvoke $r11.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r16)"->"$r17 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r11)";
    "$r17 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r11)"->"interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r17)";
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r17)"->"$r20 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel JEXL>";
    "$r20 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel JEXL>"->"$r19 = new javax.xml.transform.stream.StreamSource";
    "$r19 = new javax.xml.transform.stream.StreamSource"->"$r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()";
    "$r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"->"$r22 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_JEXL_XSL_FILENAME>";
    "$r22 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_JEXL_XSL_FILENAME>"->"$r23 = virtualinvoke $r21.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r22)";
    "$r23 = virtualinvoke $r21.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r22)"->"specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r23)";
    "specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r23)"->"$r24 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r19)";
    "$r24 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r19)"->"interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r24)";
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r24)"->"$r27 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel GROOVY>";
    "$r27 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel GROOVY>"->"$r26 = new javax.xml.transform.stream.StreamSource";
    "$r26 = new javax.xml.transform.stream.StreamSource"->"$r28 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()";
    "$r28 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"->"$r29 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_GROOVY_XSL_FILENAME>";
    "$r29 = <org.apache.commons.scxml2.w3c.W3CTests: java.lang.String SCXML_IRP_GROOVY_XSL_FILENAME>"->"$r30 = virtualinvoke $r28.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r29)";
    "$r30 = virtualinvoke $r28.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r29)"->"specialinvoke $r26.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r30)";
    "specialinvoke $r26.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r30)"->"$r31 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r26)";
    "$r31 = virtualinvoke r2.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r26)"->"interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r31)";
    "interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r31)"->"r33 = virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: org.apache.commons.scxml2.w3c.W3CTests$Assertions loadAssertions()>()";
    "r33 = virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: org.apache.commons.scxml2.w3c.W3CTests$Assertions loadAssertions()>()"->"$r34 = virtualinvoke r33.<org.apache.commons.scxml2.w3c.W3CTests$Assertions: java.util.LinkedHashMap getAssertions()>()";
    "$r34 = virtualinvoke r33.<org.apache.commons.scxml2.w3c.W3CTests$Assertions: java.util.LinkedHashMap getAssertions()>()"->"$r35 = virtualinvoke $r34.<java.util.LinkedHashMap: java.util.Collection values()>()";
    "$r35 = virtualinvoke $r34.<java.util.LinkedHashMap: java.util.Collection values()>()"->"r36 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>()";
    "r36 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return"->"return";
    "$r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()"->"r38 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion) $r37";
    "r38 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion) $r37"->"$r39 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()";
    "$r39 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()"->"r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>()";
    "r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"$r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]";
    "$r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()"->"r42 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r41";
    "r42 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r41"->"$r43 = virtualinvoke r42.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getResources()>()";
    "$r43 = virtualinvoke r42.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getResources()>()"->"r44 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>()";
    "r44 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"$r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]";
    "$r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()"->"r46 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r45";
    "r46 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r45"->"$r47 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getSpecId()>()";
    "$r47 = virtualinvoke r38.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getSpecId()>()"->"virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: void processResource(java.lang.String,org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource,java.util.Map)>($r47, r46, r4)";
    "virtualinvoke r12.<org.apache.commons.scxml2.w3c.W3CTests: void processResource(java.lang.String,org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource,java.util.Map)>($r47, r46, r4)"->"goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()";
}
