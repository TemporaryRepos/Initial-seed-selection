digraph "unitGraph" {
    "r30 := @this: org.apache.commons.scxml2.w3c.W3CTests"
    "r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion"
    "r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests"
    "r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel"
    "z4 := @parameter3: boolean"
    "z2 := @parameter4: boolean"
    "r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults"
    "$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>()"
    "$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()"
    "$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3)"
    "r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4"
    "if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()"
    "$r49 = new java.lang.IllegalStateException"
    "$r50 = new java.lang.StringBuilder"
    "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()"
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No test configuration found for W3C IRP test with id: \")"
    "$r52 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()"
    "$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)"
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54)"
    "throw $r49"
    "$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()"
    "if $z0 == 0 goto return"
    "$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()"
    "r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return"
    "$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8"
    "r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>()"
    "i0 = lengthof r10"
    "i7 = 0"
    "if i7 >= i0 goto (branch)"
    "r11 = r10[i7]"
    "$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"
    "if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"
    "$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>"
    "if r11 != $r48 goto z7 = 1"
    "$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"
    "if r11 != $r13 goto i7 = i7 + 1"
    "z7 = 1"
    "if r14 == null goto (branch)"
    "if r14 != r11 goto (branch)"
    "if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"
    "$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"
    "if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"
    "$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"
    "$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>()"
    "if z4 != $z6 goto (branch)"
    "$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"
    "r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>()"
    "$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()"
    "if $z8 == 0 goto (branch)"
    "$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()"
    "r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20"
    "$r22 = new java.io.File"
    "$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>()"
    "$r24 = new java.lang.StringBuilder"
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>()"
    "$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28)"
    "r29 = $r22"
    "z7 = 0"
    "z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29)"
    "if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>"
    "$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>"
    "$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"
    "$i6 = $i5 + 1"
    "$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"
    "interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44)"
    "goto [?= (branch)]"
    "$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>"
    "$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"
    "$i4 = $i3 + 1"
    "$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32)"
    "if z3 == z4 goto (branch)"
    "$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>"
    "$r34 = new java.lang.StringBuilder"
    "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()"
    "$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>()"
    "$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>()"
    "$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"
    "$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>()"
    "$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42)"
    "goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]"
    "if z7 == 0 goto i7 = i7 + 1"
    "$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>"
    "$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"
    "$i2 = $i1 + 1"
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18)"
    "i7 = i7 + 1"
    "goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r30 := @this: org.apache.commons.scxml2.w3c.W3CTests"->"r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion";
    "r2 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion"->"r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests";
    "r0 := @parameter1: org.apache.commons.scxml2.w3c.W3CTests$Tests"->"r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel";
    "r14 := @parameter2: org.apache.commons.scxml2.w3c.W3CTests$Datamodel"->"z4 := @parameter3: boolean";
    "z4 := @parameter3: boolean"->"z2 := @parameter4: boolean";
    "z2 := @parameter4: boolean"->"r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults";
    "r16 := @parameter5: org.apache.commons.scxml2.w3c.W3CTests$TestResults"->"$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>()";
    "$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Tests: java.util.LinkedHashMap getTests()>()"->"$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()";
    "$r3 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()"->"$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3)";
    "$r4 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r3)"->"r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4";
    "r5 = (org.apache.commons.scxml2.w3c.W3CTests$Tests$Test) $r4"->"if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()";
    "if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()"->"$r49 = new java.lang.IllegalStateException";
    "if r5 != null goto $z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()"->"$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()";
    "$r49 = new java.lang.IllegalStateException"->"$r50 = new java.lang.StringBuilder";
    "$r50 = new java.lang.StringBuilder"->"specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()"->"$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No test configuration found for W3C IRP test with id: \")";
    "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No test configuration found for W3C IRP test with id: \")"->"$r52 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()";
    "$r52 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.lang.String getId()>()"->"$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)";
    "$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)"->"$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54)";
    "specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54)"->"throw $r49";
    "$z0 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: boolean isImplemented()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()";
    "if $z0 == 0 goto return"->"return";
    "$r6 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: java.util.List getTestCases()>()"->"r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()";
    "r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return";
    "if $z1 == 0 goto return"->"$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return"->"return";
    "$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8";
    "r9 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase) $r8"->"r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>()";
    "r10 = staticinvoke <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel[] values()>()"->"i0 = lengthof r10";
    "i0 = lengthof r10"->"i7 = 0";
    "i7 = 0"->"if i7 >= i0 goto (branch)";
    "if i7 >= i0 goto (branch)"->"r11 = r10[i7]";
    "if i7 >= i0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]";
    "r11 = r10[i7]"->"$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()";
    "$r12 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"->"if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()";
    "if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"->"$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>";
    "if $r12 != null goto $r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"->"$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()";
    "$r48 = <org.apache.commons.scxml2.w3c.W3CTests$Datamodel: org.apache.commons.scxml2.w3c.W3CTests$Datamodel MINIMAL>"->"if r11 != $r48 goto z7 = 1";
    "if r11 != $r48 goto z7 = 1"->"$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()";
    "if r11 != $r48 goto z7 = 1"->"z7 = 1";
    "$r13 = virtualinvoke r2.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Assertion: org.apache.commons.scxml2.w3c.W3CTests$Datamodel getDatamodel()>()"->"if r11 != $r13 goto i7 = i7 + 1";
    "if r11 != $r13 goto i7 = i7 + 1"->"z7 = 1";
    "if r11 != $r13 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "z7 = 1"->"if r14 == null goto (branch)";
    "if r14 == null goto (branch)"->"if r14 != r11 goto (branch)";
    "if r14 == null goto (branch)"->"if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "if r14 != r11 goto (branch)"->"if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "if r14 != r11 goto (branch)"->"if z7 == 0 goto i7 = i7 + 1";
    "if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"->"$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)";
    "if z2 != 0 goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"->"$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "$r46 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"->"if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"->"$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)";
    "if $r46 == null goto $r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"->"$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "$r47 = virtualinvoke r5.<org.apache.commons.scxml2.w3c.W3CTests$Tests$Test: java.lang.Boolean getStatus(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"->"$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>()";
    "$z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>()"->"if z4 != $z6 goto (branch)";
    "if z4 != $z6 goto (branch)"->"$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()";
    "if z4 != $z6 goto (branch)"->"if z7 == 0 goto i7 = i7 + 1";
    "$r55 = virtualinvoke r9.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase: java.util.List getScxmlResources()>()"->"r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>()";
    "r15 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>()"->"$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()";
    "$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()"->"if $z8 == 0 goto (branch)";
    "if $z8 == 0 goto (branch)"->"$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()";
    "if $z8 == 0 goto (branch)"->"if z7 == 0 goto i7 = i7 + 1";
    "$r20 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()"->"r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20";
    "r21 = (org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource) $r20"->"$r22 = new java.io.File";
    "$r22 = new java.io.File"->"$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>()";
    "$r23 = virtualinvoke r11.<org.apache.commons.scxml2.w3c.W3CTests$Datamodel: java.lang.String testDir()>()"->"$r24 = new java.lang.StringBuilder";
    "$r24 = new java.lang.StringBuilder"->"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>()";
    "$r25 = virtualinvoke r21.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>()"->"$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)";
    "$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28)";
    "specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r23, $r28)"->"r29 = $r22";
    "r29 = $r22"->"z7 = 0";
    "z7 = 0"->"z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29)";
    "z3 = virtualinvoke r30.<org.apache.commons.scxml2.w3c.W3CTests: boolean runTest(org.apache.commons.scxml2.w3c.W3CTests$Assertions$TestCase,org.apache.commons.scxml2.w3c.W3CTests$Tests$Test,java.io.File)>(r9, r5, r29)"->"if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>";
    "if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>"->"$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>";
    "if z3 != 0 goto $r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>"->"$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>";
    "$r43 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map failed>"->"$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)";
    "$i5 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int failed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"->"$i6 = $i5 + 1";
    "$i6 = $i5 + 1"->"$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)";
    "$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"->"interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44)";
    "interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r44)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z3 == z4 goto (branch)";
    "$r31 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map passed>"->"$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)";
    "$i3 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int passed(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"->"$i4 = $i3 + 1";
    "$i4 = $i3 + 1"->"$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32)";
    "interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r32)"->"if z3 == z4 goto (branch)";
    "if z3 == z4 goto (branch)"->"$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>";
    "if z3 == z4 goto (branch)"->"goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]";
    "$r35 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.ArrayList changedStatusTests>"->"$r34 = new java.lang.StringBuilder";
    "$r34 = new java.lang.StringBuilder"->"specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()"->"$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>()";
    "$r36 = virtualinvoke r29.<java.io.File: java.io.File getParentFile()>()"->"$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>()";
    "$r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>()"->"$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)";
    "$r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"->"$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>()";
    "$r40 = virtualinvoke r29.<java.io.File: java.lang.String getName()>()"->"$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)";
    "$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42)";
    "virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r42)"->"goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]"->"$z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()";
    "if z7 == 0 goto i7 = i7 + 1"->"$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>";
    "if z7 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r17 = r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: java.util.Map skipped>"->"$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)";
    "$i1 = virtualinvoke r16.<org.apache.commons.scxml2.w3c.W3CTests$TestResults: int skipped(org.apache.commons.scxml2.w3c.W3CTests$Datamodel)>(r11)"->"$i2 = $i1 + 1";
    "$i2 = $i1 + 1"->"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18)";
    "interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r18)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i0 goto (branch)";
    "goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
}
