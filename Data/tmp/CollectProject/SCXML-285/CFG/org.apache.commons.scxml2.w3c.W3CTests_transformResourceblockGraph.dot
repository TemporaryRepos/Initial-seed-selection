digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r21 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r0 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource;
r12 := @parameter1: javax.xml.transform.Transformer;
r5 := @parameter2: java.lang.String;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
$z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(\".txml\");
if $z0 == 0 goto $r2 = new java.io.File;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r7 = new javax.xml.transform.stream.StreamSource;
$r8 = new java.io.FileInputStream;
$r9 = new java.io.File;
$r10 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r10);
specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r9);
specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r8);
r11 = $r7;
$r13 = new javax.xml.transform.stream.StreamResult;
$r14 = new java.io.FileOutputStream;
$r15 = new java.io.File;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r20);
specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>($r15);
specialinvoke $r13.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r14);
virtualinvoke r12.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r11, $r13);
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.io.File;
$r3 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r3);
$r4 = new java.io.File;
$r6 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r6);
staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>($r2, $r4);
"
    "Block 3:
[preds: 1 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r21 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r0 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource;
r12 := @parameter1: javax.xml.transform.Transformer;
r5 := @parameter2: java.lang.String;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
$z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(\".txml\");
if $z0 == 0 goto $r2 = new java.io.File;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r7 = new javax.xml.transform.stream.StreamSource;
$r8 = new java.io.FileInputStream;
$r9 = new java.io.File;
$r10 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r10);
specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r9);
specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r8);
r11 = $r7;
$r13 = new javax.xml.transform.stream.StreamResult;
$r14 = new java.io.FileOutputStream;
$r15 = new java.io.File;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r20);
specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>($r15);
specialinvoke $r13.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r14);
virtualinvoke r12.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r11, $r13);
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r21 := @this: org.apache.commons.scxml2.w3c.W3CTests;
r0 := @parameter0: org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource;
r12 := @parameter1: javax.xml.transform.Transformer;
r5 := @parameter2: java.lang.String;
$r1 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
$z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(\".txml\");
if $z0 == 0 goto $r2 = new java.io.File;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.io.File;
$r3 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r3);
$r4 = new java.io.File;
$r6 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r6);
staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>($r2, $r4);
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r7 = new javax.xml.transform.stream.StreamSource;
$r8 = new java.io.FileInputStream;
$r9 = new java.io.File;
$r10 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r10);
specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r9);
specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r8);
r11 = $r7;
$r13 = new javax.xml.transform.stream.StreamResult;
$r14 = new java.io.FileOutputStream;
$r15 = new java.io.File;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getName()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".scxml\");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r15.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r20);
specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>($r15);
specialinvoke $r13.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r14);
virtualinvoke r12.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r11, $r13);
goto [?= return];
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.io.File;
$r3 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>(\"src/w3c/scxml-irp/txml/\", $r3);
$r4 = new java.io.File;
$r6 = virtualinvoke r0.<org.apache.commons.scxml2.w3c.W3CTests$Assertions$Resource: java.lang.String getFilename()>();
specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, $r6);
staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>($r2, $r4);
"->"Block 3:
[preds: 1 2 ] [succs: ]
return;
";
}
