digraph "unitGraph" {
    "r0 := @parameter0: java.math.BigInteger"
    "r1 := @parameter1: java.math.BigInteger"
    "r2 := @parameter2: java.math.BigInteger"
    "r3 := @parameter3: java.lang.String"
    "r4 := @parameter4: java.math.BigInteger"
    "r5 := @parameter5: java.lang.String"
    "b0 := @parameter6: byte"
    "r11 := @parameter7: java.lang.String"
    "r6 = staticinvoke <org.web3j.crypto.RawTransaction: org.web3j.crypto.RawTransaction createTransaction(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,java.math.BigInteger,java.lang.String)>(r0, r1, r2, r3, r4, r5)"
    "$z0 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>(\"0x\")"
    "if $z0 == 0 goto $r7 = new java.math.BigInteger"
    "r11 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(2)"
    "$r7 = new java.math.BigInteger"
    "specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String,int)>(r11, 16)"
    "r8 = staticinvoke <org.web3j.crypto.ECKeyPair: org.web3j.crypto.ECKeyPair create(java.math.BigInteger)>($r7)"
    "r9 = staticinvoke <org.web3j.crypto.Credentials: org.web3j.crypto.Credentials create(org.web3j.crypto.ECKeyPair)>(r8)"
    "if b0 <= -1 goto r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)"
    "r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,byte,org.web3j.crypto.Credentials)>(r6, b0, r9)"
    "goto [?= r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)]"
    "r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)"
    "r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)"
    "return r10"
    "r0 := @parameter0: java.math.BigInteger"->"r1 := @parameter1: java.math.BigInteger";
    "r1 := @parameter1: java.math.BigInteger"->"r2 := @parameter2: java.math.BigInteger";
    "r2 := @parameter2: java.math.BigInteger"->"r3 := @parameter3: java.lang.String";
    "r3 := @parameter3: java.lang.String"->"r4 := @parameter4: java.math.BigInteger";
    "r4 := @parameter4: java.math.BigInteger"->"r5 := @parameter5: java.lang.String";
    "r5 := @parameter5: java.lang.String"->"b0 := @parameter6: byte";
    "b0 := @parameter6: byte"->"r11 := @parameter7: java.lang.String";
    "r11 := @parameter7: java.lang.String"->"r6 = staticinvoke <org.web3j.crypto.RawTransaction: org.web3j.crypto.RawTransaction createTransaction(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,java.math.BigInteger,java.lang.String)>(r0, r1, r2, r3, r4, r5)";
    "r6 = staticinvoke <org.web3j.crypto.RawTransaction: org.web3j.crypto.RawTransaction createTransaction(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,java.math.BigInteger,java.lang.String)>(r0, r1, r2, r3, r4, r5)"->"$z0 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>(\"0x\")";
    "$z0 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>(\"0x\")"->"if $z0 == 0 goto $r7 = new java.math.BigInteger";
    "if $z0 == 0 goto $r7 = new java.math.BigInteger"->"r11 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(2)";
    "if $z0 == 0 goto $r7 = new java.math.BigInteger"->"$r7 = new java.math.BigInteger";
    "r11 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(2)"->"$r7 = new java.math.BigInteger";
    "$r7 = new java.math.BigInteger"->"specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String,int)>(r11, 16)";
    "specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String,int)>(r11, 16)"->"r8 = staticinvoke <org.web3j.crypto.ECKeyPair: org.web3j.crypto.ECKeyPair create(java.math.BigInteger)>($r7)";
    "r8 = staticinvoke <org.web3j.crypto.ECKeyPair: org.web3j.crypto.ECKeyPair create(java.math.BigInteger)>($r7)"->"r9 = staticinvoke <org.web3j.crypto.Credentials: org.web3j.crypto.Credentials create(org.web3j.crypto.ECKeyPair)>(r8)";
    "r9 = staticinvoke <org.web3j.crypto.Credentials: org.web3j.crypto.Credentials create(org.web3j.crypto.ECKeyPair)>(r8)"->"if b0 <= -1 goto r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)";
    "if b0 <= -1 goto r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)"->"r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,byte,org.web3j.crypto.Credentials)>(r6, b0, r9)";
    "if b0 <= -1 goto r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)"->"r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)";
    "r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,byte,org.web3j.crypto.Credentials)>(r6, b0, r9)"->"goto [?= r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)]";
    "goto [?= r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)]"->"r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)";
    "r12 = staticinvoke <org.web3j.crypto.TransactionEncoder: byte[] signMessage(org.web3j.crypto.RawTransaction,org.web3j.crypto.Credentials)>(r6, r9)"->"r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)";
    "r10 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r12)"->"return r10";
}
