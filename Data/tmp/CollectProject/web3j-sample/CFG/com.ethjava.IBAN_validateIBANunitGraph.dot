digraph "unitGraph" {
    "r12 := @parameter0: java.lang.String"
    "i0 = virtualinvoke r12.<java.lang.String: int length()>()"
    "if i0 < 4 goto return 0"
    "$z0 = virtualinvoke r12.<java.lang.String: boolean matches(java.lang.String)>(\"[0-9A-Z]+\")"
    "if $z0 != 0 goto $r0 = new java.lang.StringBuilder"
    "return 0"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>(4)"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)"
    "$r3 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, 4)"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)"
    "r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "r6 = $r5"
    "i4 = 0"
    "if i4 >= i0 goto $r7 = new java.math.BigInteger"
    "$c2 = virtualinvoke r13.<java.lang.String: char charAt(int)>(i4)"
    "$i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 36)"
    "virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "$r7 = new java.math.BigInteger"
    "$r8 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>($r8)"
    "r14 = $r7"
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(97L)"
    "$r10 = virtualinvoke r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r9)"
    "$i1 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>()"
    "if $i1 != 1 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= return $z1]"
    "$z1 = 0"
    "return $z1"
    "r12 := @parameter0: java.lang.String"->"i0 = virtualinvoke r12.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r12.<java.lang.String: int length()>()"->"if i0 < 4 goto return 0";
    "if i0 < 4 goto return 0"->"$z0 = virtualinvoke r12.<java.lang.String: boolean matches(java.lang.String)>(\"[0-9A-Z]+\")";
    "if i0 < 4 goto return 0"->"return 0";
    "$z0 = virtualinvoke r12.<java.lang.String: boolean matches(java.lang.String)>(\"[0-9A-Z]+\")"->"if $z0 != 0 goto $r0 = new java.lang.StringBuilder";
    "if $z0 != 0 goto $r0 = new java.lang.StringBuilder"->"return 0";
    "if $z0 != 0 goto $r0 = new java.lang.StringBuilder"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>(4)";
    "$r1 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>(4)"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)"->"$r3 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, 4)";
    "$r3 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, 4)"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)"->"r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"r6 = $r5";
    "r6 = $r5"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto $r7 = new java.math.BigInteger";
    "if i4 >= i0 goto $r7 = new java.math.BigInteger"->"$c2 = virtualinvoke r13.<java.lang.String: char charAt(int)>(i4)";
    "if i4 >= i0 goto $r7 = new java.math.BigInteger"->"$r7 = new java.math.BigInteger";
    "$c2 = virtualinvoke r13.<java.lang.String: char charAt(int)>(i4)"->"$i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 36)";
    "$i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 36)"->"virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)";
    "virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto $r7 = new java.math.BigInteger";
    "$r7 = new java.math.BigInteger"->"$r8 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>($r8)"->"r14 = $r7";
    "r14 = $r7"->"$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(97L)";
    "$r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(97L)"->"$r10 = virtualinvoke r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r9)";
    "$r10 = virtualinvoke r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r9)"->"$i1 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>()";
    "$i1 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>()"->"if $i1 != 1 goto $z1 = 0";
    "if $i1 != 1 goto $z1 = 0"->"$z1 = 1";
    "if $i1 != 1 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= return $z1]";
    "goto [?= return $z1]"->"return $z1";
    "$z1 = 0"->"return $z1";
}
