digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "l0 := @parameter1: long"
    "r1 = staticinvoke <org.web3j.utils.Numeric: byte[] hexStringToByteArray(java.lang.String)>(r0)"
    "$r2 = new org.web3j.rlp.RlpList"
    "$r3 = newarray (org.web3j.rlp.RlpType)[2]"
    "$r4 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(byte[])>(r1)"
    "$r3[0] = $r4"
    "$r5 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(long)>(l0)"
    "$r3[1] = $r5"
    "specialinvoke $r2.<org.web3j.rlp.RlpList: void <init>(org.web3j.rlp.RlpType[])>($r3)"
    "$r6 = staticinvoke <org.web3j.rlp.RlpEncoder: byte[] encode(org.web3j.rlp.RlpType)>($r2)"
    "r8 = staticinvoke <org.web3j.crypto.Hash: byte[] sha3(byte[])>($r6)"
    "$i1 = lengthof r8"
    "r9 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r8, 12, $i1)"
    "r7 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r9)"
    "return r7"
    "r0 := @parameter0: java.lang.String"->"l0 := @parameter1: long";
    "l0 := @parameter1: long"->"r1 = staticinvoke <org.web3j.utils.Numeric: byte[] hexStringToByteArray(java.lang.String)>(r0)";
    "r1 = staticinvoke <org.web3j.utils.Numeric: byte[] hexStringToByteArray(java.lang.String)>(r0)"->"$r2 = new org.web3j.rlp.RlpList";
    "$r2 = new org.web3j.rlp.RlpList"->"$r3 = newarray (org.web3j.rlp.RlpType)[2]";
    "$r3 = newarray (org.web3j.rlp.RlpType)[2]"->"$r4 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(byte[])>(r1)";
    "$r4 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(byte[])>(r1)"->"$r3[0] = $r4";
    "$r3[0] = $r4"->"$r5 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(long)>(l0)";
    "$r5 = staticinvoke <org.web3j.rlp.RlpString: org.web3j.rlp.RlpString create(long)>(l0)"->"$r3[1] = $r5";
    "$r3[1] = $r5"->"specialinvoke $r2.<org.web3j.rlp.RlpList: void <init>(org.web3j.rlp.RlpType[])>($r3)";
    "specialinvoke $r2.<org.web3j.rlp.RlpList: void <init>(org.web3j.rlp.RlpType[])>($r3)"->"$r6 = staticinvoke <org.web3j.rlp.RlpEncoder: byte[] encode(org.web3j.rlp.RlpType)>($r2)";
    "$r6 = staticinvoke <org.web3j.rlp.RlpEncoder: byte[] encode(org.web3j.rlp.RlpType)>($r2)"->"r8 = staticinvoke <org.web3j.crypto.Hash: byte[] sha3(byte[])>($r6)";
    "r8 = staticinvoke <org.web3j.crypto.Hash: byte[] sha3(byte[])>($r6)"->"$i1 = lengthof r8";
    "$i1 = lengthof r8"->"r9 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r8, 12, $i1)";
    "r9 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r8, 12, $i1)"->"r7 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r9)";
    "r7 = staticinvoke <org.web3j.utils.Numeric: java.lang.String toHexString(byte[])>(r9)"->"return r7";
}
