digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$r2 = <org.dynalang.dynalink.support.Lookup: org.dynalang.dynalink.support.Lookup PUBLIC>"
    "$r1 = <java.lang.Integer: java.lang.Class TYPE>"
    "$r3 = staticinvoke <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>($r1, class \"Ljava/lang/Object;\")"
    "$r4 = virtualinvoke $r2.<org.dynalang.dynalink.support.Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>(class \"LTestCatchException;\", r0, $r3)"
    "return $r4"
    "r0 := @parameter0: java.lang.String"->"$r2 = <org.dynalang.dynalink.support.Lookup: org.dynalang.dynalink.support.Lookup PUBLIC>";
    "$r2 = <org.dynalang.dynalink.support.Lookup: org.dynalang.dynalink.support.Lookup PUBLIC>"->"$r1 = <java.lang.Integer: java.lang.Class TYPE>";
    "$r1 = <java.lang.Integer: java.lang.Class TYPE>"->"$r3 = staticinvoke <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>($r1, class \"Ljava/lang/Object;\")";
    "$r3 = staticinvoke <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>($r1, class \"Ljava/lang/Object;\")"->"$r4 = virtualinvoke $r2.<org.dynalang.dynalink.support.Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>(class \"LTestCatchException;\", r0, $r3)";
    "$r4 = virtualinvoke $r2.<org.dynalang.dynalink.support.Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>(class \"LTestCatchException;\", r0, $r3)"->"return $r4";
}
