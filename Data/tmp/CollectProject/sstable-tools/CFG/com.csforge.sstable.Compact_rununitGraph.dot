digraph "unitGraph" {
    "r9 := @this: com.csforge.sstable.Compact"
    "$r0 = new org.apache.cassandra.io.sstable.Descriptor"
    "$r1 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"
    "$r2 = $r1.<org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat info>"
    "$r3 = interfaceinvoke $r2.<org.apache.cassandra.io.sstable.format.SSTableFormat: org.apache.cassandra.io.sstable.format.Version getLatestVersion()>()"
    "$r4 = new java.io.File"
    "specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(\".\")"
    "$r6 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"
    "$r5 = <org.apache.cassandra.io.sstable.format.big.BigFormat: org.apache.cassandra.io.sstable.format.Version latestVersion>"
    "$r7 = virtualinvoke $r5.<org.apache.cassandra.io.sstable.format.Version: org.apache.cassandra.utils.ChecksumType uncompressedChecksumType()>()"
    "$r8 = staticinvoke <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component digestFor(org.apache.cassandra.utils.ChecksumType)>($r7)"
    "specialinvoke $r0.<org.apache.cassandra.io.sstable.Descriptor: void <init>(org.apache.cassandra.io.sstable.format.Version,java.io.File,java.lang.String,java.lang.String,int,org.apache.cassandra.io.sstable.format.SSTableFormat$Type,org.apache.cassandra.io.sstable.Component)>($r3, $r4, \"keyspace\", \"table\", 0, $r6, $r8)"
    "r38 = $r0"
    "$r12 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"
    "$r11 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"
    "$r10 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"
    "$r13 = staticinvoke <org.apache.cassandra.db.SerializationHeader: org.apache.cassandra.db.SerializationHeader make(org.apache.cassandra.config.CFMetaData,java.util.Collection)>($r11, $r10)"
    "$r14 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()"
    "r15 = staticinvoke <org.apache.cassandra.io.sstable.SSTableTxnWriter: org.apache.cassandra.io.sstable.SSTableTxnWriter create(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.io.sstable.Descriptor,long,long,int,org.apache.cassandra.db.SerializationHeader,java.util.Collection)>($r12, r38, 0L, 0L, 0, $r13, $r14)"
    "$r17 = <java.lang.System: java.io.PrintStream out>"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Merging \")"
    "$r19 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"
    "$i0 = interfaceinvoke $r19.<java.util.Collection: int size()>()"
    "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sstables to \")"
    "$r22 = <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component DATA>"
    "$r23 = virtualinvoke r38.<org.apache.cassandra.io.sstable.Descriptor: java.lang.String filenameFor(org.apache.cassandra.io.sstable.Component)>($r22)"
    "$r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r25)"
    "$r26 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"
    "$r27 = interfaceinvoke $r26.<java.util.Collection: java.util.stream.Stream stream()>()"
    "$r28 = staticinvoke <com.csforge.sstable.Compact$getScanner__303: java.util.function.Function bootstrap$()>()"
    "$r29 = interfaceinvoke $r27.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r28)"
    "$r30 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>()"
    "$r31 = interfaceinvoke $r29.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r30)"
    "$r32 = (java.util.List) $r31"
    "$i1 = staticinvoke <org.apache.cassandra.utils.FBUtilities: int nowInSeconds()>()"
    "r33 = staticinvoke <org.apache.cassandra.db.partitions.UnfilteredPartitionIterators: org.apache.cassandra.db.partitions.UnfilteredPartitionIterator mergeLazily(java.util.List,int)>($r32, $i1)"
    "$z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()"
    "if $z0 == 0 goto virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"
    "$r35 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: java.lang.Object next()>()"
    "$r36 = (org.apache.cassandra.db.rows.UnfilteredRowIterator) $r35"
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: boolean append(org.apache.cassandra.db.rows.UnfilteredRowIterator)>($r36)"
    "goto [?= $z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()]"
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"
    "goto [?= return]"
    "$r37 := @caughtexception"
    "r39 = $r37"
    "virtualinvoke r39.<java.lang.Exception: void printStackTrace()>()"
    "return"
    "r9 := @this: com.csforge.sstable.Compact"->"$r0 = new org.apache.cassandra.io.sstable.Descriptor";
    "r9 := @this: com.csforge.sstable.Compact"->"$r37 := @caughtexception";
    "$r0 = new org.apache.cassandra.io.sstable.Descriptor"->"$r1 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>";
    "$r0 = new org.apache.cassandra.io.sstable.Descriptor"->"$r37 := @caughtexception";
    "$r1 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"->"$r2 = $r1.<org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat info>";
    "$r1 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"->"$r37 := @caughtexception";
    "$r2 = $r1.<org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat info>"->"$r3 = interfaceinvoke $r2.<org.apache.cassandra.io.sstable.format.SSTableFormat: org.apache.cassandra.io.sstable.format.Version getLatestVersion()>()";
    "$r2 = $r1.<org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat info>"->"$r37 := @caughtexception";
    "$r3 = interfaceinvoke $r2.<org.apache.cassandra.io.sstable.format.SSTableFormat: org.apache.cassandra.io.sstable.format.Version getLatestVersion()>()"->"$r4 = new java.io.File";
    "$r3 = interfaceinvoke $r2.<org.apache.cassandra.io.sstable.format.SSTableFormat: org.apache.cassandra.io.sstable.format.Version getLatestVersion()>()"->"$r37 := @caughtexception";
    "$r4 = new java.io.File"->"specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(\".\")";
    "$r4 = new java.io.File"->"$r37 := @caughtexception";
    "specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(\".\")"->"$r6 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>";
    "specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(\".\")"->"$r37 := @caughtexception";
    "$r6 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"->"$r5 = <org.apache.cassandra.io.sstable.format.big.BigFormat: org.apache.cassandra.io.sstable.format.Version latestVersion>";
    "$r6 = <org.apache.cassandra.io.sstable.format.SSTableFormat$Type: org.apache.cassandra.io.sstable.format.SSTableFormat$Type BIG>"->"$r37 := @caughtexception";
    "$r5 = <org.apache.cassandra.io.sstable.format.big.BigFormat: org.apache.cassandra.io.sstable.format.Version latestVersion>"->"$r7 = virtualinvoke $r5.<org.apache.cassandra.io.sstable.format.Version: org.apache.cassandra.utils.ChecksumType uncompressedChecksumType()>()";
    "$r5 = <org.apache.cassandra.io.sstable.format.big.BigFormat: org.apache.cassandra.io.sstable.format.Version latestVersion>"->"$r37 := @caughtexception";
    "$r7 = virtualinvoke $r5.<org.apache.cassandra.io.sstable.format.Version: org.apache.cassandra.utils.ChecksumType uncompressedChecksumType()>()"->"$r8 = staticinvoke <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component digestFor(org.apache.cassandra.utils.ChecksumType)>($r7)";
    "$r7 = virtualinvoke $r5.<org.apache.cassandra.io.sstable.format.Version: org.apache.cassandra.utils.ChecksumType uncompressedChecksumType()>()"->"$r37 := @caughtexception";
    "$r8 = staticinvoke <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component digestFor(org.apache.cassandra.utils.ChecksumType)>($r7)"->"specialinvoke $r0.<org.apache.cassandra.io.sstable.Descriptor: void <init>(org.apache.cassandra.io.sstable.format.Version,java.io.File,java.lang.String,java.lang.String,int,org.apache.cassandra.io.sstable.format.SSTableFormat$Type,org.apache.cassandra.io.sstable.Component)>($r3, $r4, \"keyspace\", \"table\", 0, $r6, $r8)";
    "$r8 = staticinvoke <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component digestFor(org.apache.cassandra.utils.ChecksumType)>($r7)"->"$r37 := @caughtexception";
    "specialinvoke $r0.<org.apache.cassandra.io.sstable.Descriptor: void <init>(org.apache.cassandra.io.sstable.format.Version,java.io.File,java.lang.String,java.lang.String,int,org.apache.cassandra.io.sstable.format.SSTableFormat$Type,org.apache.cassandra.io.sstable.Component)>($r3, $r4, \"keyspace\", \"table\", 0, $r6, $r8)"->"r38 = $r0";
    "specialinvoke $r0.<org.apache.cassandra.io.sstable.Descriptor: void <init>(org.apache.cassandra.io.sstable.format.Version,java.io.File,java.lang.String,java.lang.String,int,org.apache.cassandra.io.sstable.format.SSTableFormat$Type,org.apache.cassandra.io.sstable.Component)>($r3, $r4, \"keyspace\", \"table\", 0, $r6, $r8)"->"$r37 := @caughtexception";
    "r38 = $r0"->"$r12 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>";
    "r38 = $r0"->"$r37 := @caughtexception";
    "$r12 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"->"$r11 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>";
    "$r12 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"->"$r37 := @caughtexception";
    "$r11 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"->"$r10 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>";
    "$r11 = r9.<com.csforge.sstable.Compact: org.apache.cassandra.config.CFMetaData metadata>"->"$r37 := @caughtexception";
    "$r10 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$r13 = staticinvoke <org.apache.cassandra.db.SerializationHeader: org.apache.cassandra.db.SerializationHeader make(org.apache.cassandra.config.CFMetaData,java.util.Collection)>($r11, $r10)";
    "$r10 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$r37 := @caughtexception";
    "$r13 = staticinvoke <org.apache.cassandra.db.SerializationHeader: org.apache.cassandra.db.SerializationHeader make(org.apache.cassandra.config.CFMetaData,java.util.Collection)>($r11, $r10)"->"$r14 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()";
    "$r13 = staticinvoke <org.apache.cassandra.db.SerializationHeader: org.apache.cassandra.db.SerializationHeader make(org.apache.cassandra.config.CFMetaData,java.util.Collection)>($r11, $r10)"->"$r37 := @caughtexception";
    "$r14 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()"->"r15 = staticinvoke <org.apache.cassandra.io.sstable.SSTableTxnWriter: org.apache.cassandra.io.sstable.SSTableTxnWriter create(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.io.sstable.Descriptor,long,long,int,org.apache.cassandra.db.SerializationHeader,java.util.Collection)>($r12, r38, 0L, 0L, 0, $r13, $r14)";
    "$r14 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()"->"$r37 := @caughtexception";
    "r15 = staticinvoke <org.apache.cassandra.io.sstable.SSTableTxnWriter: org.apache.cassandra.io.sstable.SSTableTxnWriter create(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.io.sstable.Descriptor,long,long,int,org.apache.cassandra.db.SerializationHeader,java.util.Collection)>($r12, r38, 0L, 0L, 0, $r13, $r14)"->"$r17 = <java.lang.System: java.io.PrintStream out>";
    "r15 = staticinvoke <org.apache.cassandra.io.sstable.SSTableTxnWriter: org.apache.cassandra.io.sstable.SSTableTxnWriter create(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.io.sstable.Descriptor,long,long,int,org.apache.cassandra.db.SerializationHeader,java.util.Collection)>($r12, r38, 0L, 0L, 0, $r13, $r14)"->"$r37 := @caughtexception";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"$r16 = new java.lang.StringBuilder";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"$r37 := @caughtexception";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "$r16 = new java.lang.StringBuilder"->"$r37 := @caughtexception";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Merging \")";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r37 := @caughtexception";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Merging \")"->"$r19 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Merging \")"->"$r37 := @caughtexception";
    "$r19 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$i0 = interfaceinvoke $r19.<java.util.Collection: int size()>()";
    "$r19 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$r37 := @caughtexception";
    "$i0 = interfaceinvoke $r19.<java.util.Collection: int size()>()"->"$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)";
    "$i0 = interfaceinvoke $r19.<java.util.Collection: int size()>()"->"$r37 := @caughtexception";
    "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sstables to \")";
    "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"$r37 := @caughtexception";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sstables to \")"->"$r22 = <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component DATA>";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" sstables to \")"->"$r37 := @caughtexception";
    "$r22 = <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component DATA>"->"$r23 = virtualinvoke r38.<org.apache.cassandra.io.sstable.Descriptor: java.lang.String filenameFor(org.apache.cassandra.io.sstable.Component)>($r22)";
    "$r22 = <org.apache.cassandra.io.sstable.Component: org.apache.cassandra.io.sstable.Component DATA>"->"$r37 := @caughtexception";
    "$r23 = virtualinvoke r38.<org.apache.cassandra.io.sstable.Descriptor: java.lang.String filenameFor(org.apache.cassandra.io.sstable.Component)>($r22)"->"$r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)";
    "$r23 = virtualinvoke r38.<org.apache.cassandra.io.sstable.Descriptor: java.lang.String filenameFor(org.apache.cassandra.io.sstable.Component)>($r22)"->"$r37 := @caughtexception";
    "$r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"->"$r37 := @caughtexception";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r25)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r37 := @caughtexception";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r25)"->"$r26 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r25)"->"$r37 := @caughtexception";
    "$r26 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$r27 = interfaceinvoke $r26.<java.util.Collection: java.util.stream.Stream stream()>()";
    "$r26 = r9.<com.csforge.sstable.Compact: java.util.Collection sstables>"->"$r37 := @caughtexception";
    "$r27 = interfaceinvoke $r26.<java.util.Collection: java.util.stream.Stream stream()>()"->"$r28 = staticinvoke <com.csforge.sstable.Compact$getScanner__303: java.util.function.Function bootstrap$()>()";
    "$r27 = interfaceinvoke $r26.<java.util.Collection: java.util.stream.Stream stream()>()"->"$r37 := @caughtexception";
    "$r28 = staticinvoke <com.csforge.sstable.Compact$getScanner__303: java.util.function.Function bootstrap$()>()"->"$r29 = interfaceinvoke $r27.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r28)";
    "$r28 = staticinvoke <com.csforge.sstable.Compact$getScanner__303: java.util.function.Function bootstrap$()>()"->"$r37 := @caughtexception";
    "$r29 = interfaceinvoke $r27.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r28)"->"$r30 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>()";
    "$r29 = interfaceinvoke $r27.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r28)"->"$r37 := @caughtexception";
    "$r30 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>()"->"$r31 = interfaceinvoke $r29.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r30)";
    "$r30 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>()"->"$r37 := @caughtexception";
    "$r31 = interfaceinvoke $r29.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r30)"->"$r32 = (java.util.List) $r31";
    "$r31 = interfaceinvoke $r29.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r30)"->"$r37 := @caughtexception";
    "$r32 = (java.util.List) $r31"->"$i1 = staticinvoke <org.apache.cassandra.utils.FBUtilities: int nowInSeconds()>()";
    "$r32 = (java.util.List) $r31"->"$r37 := @caughtexception";
    "$i1 = staticinvoke <org.apache.cassandra.utils.FBUtilities: int nowInSeconds()>()"->"r33 = staticinvoke <org.apache.cassandra.db.partitions.UnfilteredPartitionIterators: org.apache.cassandra.db.partitions.UnfilteredPartitionIterator mergeLazily(java.util.List,int)>($r32, $i1)";
    "$i1 = staticinvoke <org.apache.cassandra.utils.FBUtilities: int nowInSeconds()>()"->"$r37 := @caughtexception";
    "r33 = staticinvoke <org.apache.cassandra.db.partitions.UnfilteredPartitionIterators: org.apache.cassandra.db.partitions.UnfilteredPartitionIterator mergeLazily(java.util.List,int)>($r32, $i1)"->"$z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()";
    "r33 = staticinvoke <org.apache.cassandra.db.partitions.UnfilteredPartitionIterators: org.apache.cassandra.db.partitions.UnfilteredPartitionIterator mergeLazily(java.util.List,int)>($r32, $i1)"->"$r37 := @caughtexception";
    "$z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()"->"if $z0 == 0 goto virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)";
    "$z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()"->"$r37 := @caughtexception";
    "if $z0 == 0 goto virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"->"$r35 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: java.lang.Object next()>()";
    "if $z0 == 0 goto virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"->"virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)";
    "if $z0 == 0 goto virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"->"$r37 := @caughtexception";
    "$r35 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: java.lang.Object next()>()"->"$r36 = (org.apache.cassandra.db.rows.UnfilteredRowIterator) $r35";
    "$r35 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: java.lang.Object next()>()"->"$r37 := @caughtexception";
    "$r36 = (org.apache.cassandra.db.rows.UnfilteredRowIterator) $r35"->"virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: boolean append(org.apache.cassandra.db.rows.UnfilteredRowIterator)>($r36)";
    "$r36 = (org.apache.cassandra.db.rows.UnfilteredRowIterator) $r35"->"$r37 := @caughtexception";
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: boolean append(org.apache.cassandra.db.rows.UnfilteredRowIterator)>($r36)"->"goto [?= $z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()]";
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: boolean append(org.apache.cassandra.db.rows.UnfilteredRowIterator)>($r36)"->"$r37 := @caughtexception";
    "goto [?= $z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r33.<org.apache.cassandra.db.partitions.UnfilteredPartitionIterator: boolean hasNext()>()]"->"$r37 := @caughtexception";
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"->"goto [?= return]";
    "virtualinvoke r15.<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)>(0)"->"$r37 := @caughtexception";
    "goto [?= return]"->"return";
    "$r37 := @caughtexception"->"r39 = $r37";
    "r39 = $r37"->"virtualinvoke r39.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r39.<java.lang.Exception: void printStackTrace()>()"->"return";
}
