digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r1 := @parameter0: java.lang.String;
i1 := @parameter1: int;
r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\");
if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
"
    "Block 1:
[preds: 0 ] [succs: ]
return -999999999;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
"
    "Block 3:
[preds: 2 ] [succs: ]
return 999999999;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
"
    "Block 5:
[preds: 4 ] [succs: ]
return i1;
"
    "Block 6:
[preds: 4 ] [succs: ]
$i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
return $i0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r1 := @parameter0: java.lang.String;
i1 := @parameter1: int;
r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\");
if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
"->"Block 1:
[preds: 0 ] [succs: ]
return -999999999;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r1 := @parameter0: java.lang.String;
i1 := @parameter1: int;
r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\");
if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
"->"Block 3:
[preds: 2 ] [succs: ]
return 999999999;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
"->"Block 5:
[preds: 4 ] [succs: ]
return i1;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\");
if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
"->"Block 6:
[preds: 4 ] [succs: ]
$i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
return $i0;
";
}
