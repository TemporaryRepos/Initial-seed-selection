digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r2 := @parameter0: java.util.StringTokenizer;
r0 := @parameter1: org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime;
$r3 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r4 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.Month parseMonth(java.lang.String)>($r3);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.Month month> = $r4;
$z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r15 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(\"last\");
if $z1 == 0 goto i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
"
    "Block 2:
[preds: 1 ] [succs: 8 ]
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = -1;
$r13 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(4);
$r14 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r13);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r14;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
goto [?= $z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
if i9 <= 0 goto i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
"
    "Block 4:
[preds: 3 ] [succs: 7 ]
$r11 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i9);
$r12 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r11);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r12;
$i8 = i9 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i8);
goto [?= $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15)];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
if i10 <= 0 goto $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r9 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i10);
$r10 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r9);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r10;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
$i7 = i10 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i7);
"
    "Block 7:
[preds: 4 5 6 ] [succs: 8 ]
$i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = $i11;
"
    "Block 8:
[preds: 2 7 ] [succs: 9 10 ]
$z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z2 == 0 goto return;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
r16 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseSecs(java.lang.String)>(r16);
$i1 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorMod(int,int)>(i0, 86400);
$l2 = (long) $i1;
$r5 = staticinvoke <org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofSecondOfDay(long)>($l2);
$r6 = virtualinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.Object deduplicate(java.lang.Object)>($r5);
r7 = (org.threeten.bp.LocalTime) $r6;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.LocalTime time> = r7;
$i3 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorDiv(int,int)>(i0, 86400);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int adjustDays> = $i3;
$i4 = virtualinvoke r16.<java.lang.String: int length()>();
$i5 = $i4 - 1;
$c6 = virtualinvoke r16.<java.lang.String: char charAt(int)>($i5);
$r8 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition parseTimeDefinition(char)>($c6);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition timeDefinition> = $r8;
"
    "Block 10:
[preds: 0 8 9 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r2 := @parameter0: java.util.StringTokenizer;
r0 := @parameter1: org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime;
$r3 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r4 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.Month parseMonth(java.lang.String)>($r3);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.Month month> = $r4;
$z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
r15 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(\"last\");
if $z1 == 0 goto i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
";
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r2 := @parameter0: java.util.StringTokenizer;
r0 := @parameter1: org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime;
$r3 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r4 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.Month parseMonth(java.lang.String)>($r3);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.Month month> = $r4;
$z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z0 == 0 goto return;
"->"Block 10:
[preds: 0 8 9 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r15 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(\"last\");
if $z1 == 0 goto i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
"->"Block 2:
[preds: 1 ] [succs: 8 ]
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = -1;
$r13 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(4);
$r14 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r13);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r14;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
goto [?= $z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
r15 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
$z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(\"last\");
if $z1 == 0 goto i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
if i9 <= 0 goto i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
";
    "Block 2:
[preds: 1 ] [succs: 8 ]
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = -1;
$r13 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>(4);
$r14 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r13);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r14;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
goto [?= $z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()];
"->"Block 8:
[preds: 2 7 ] [succs: 9 10 ]
$z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z2 == 0 goto return;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
if i9 <= 0 goto i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
"->"Block 4:
[preds: 3 ] [succs: 7 ]
$r11 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i9);
$r12 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r11);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r12;
$i8 = i9 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i8);
goto [?= $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15)];
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
i9 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\">=\");
if i9 <= 0 goto i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
if i10 <= 0 goto $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
";
    "Block 4:
[preds: 3 ] [succs: 7 ]
$r11 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i9);
$r12 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r11);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r12;
$i8 = i9 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i8);
goto [?= $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15)];
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 ]
$i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = $i11;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
if i10 <= 0 goto $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r9 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i10);
$r10 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r9);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r10;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
$i7 = i10 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i7);
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
i10 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>(\"<=\");
if i10 <= 0 goto $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 ]
$i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = $i11;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r9 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i10);
$r10 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.DayOfWeek parseDayOfWeek(java.lang.String)>($r9);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.DayOfWeek dayOfWeek> = $r10;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: boolean adjustForwards> = 0;
$i7 = i10 + 2;
r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i7);
"->"Block 7:
[preds: 4 5 6 ] [succs: 8 ]
$i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = $i11;
";
    "Block 7:
[preds: 4 5 6 ] [succs: 8 ]
$i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int dayOfMonth> = $i11;
"->"Block 8:
[preds: 2 7 ] [succs: 9 10 ]
$z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z2 == 0 goto return;
";
    "Block 8:
[preds: 2 7 ] [succs: 9 10 ]
$z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z2 == 0 goto return;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
r16 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseSecs(java.lang.String)>(r16);
$i1 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorMod(int,int)>(i0, 86400);
$l2 = (long) $i1;
$r5 = staticinvoke <org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofSecondOfDay(long)>($l2);
$r6 = virtualinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.Object deduplicate(java.lang.Object)>($r5);
r7 = (org.threeten.bp.LocalTime) $r6;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.LocalTime time> = r7;
$i3 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorDiv(int,int)>(i0, 86400);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int adjustDays> = $i3;
$i4 = virtualinvoke r16.<java.lang.String: int length()>();
$i5 = $i4 - 1;
$c6 = virtualinvoke r16.<java.lang.String: char charAt(int)>($i5);
$r8 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition parseTimeDefinition(char)>($c6);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition timeDefinition> = $r8;
";
    "Block 8:
[preds: 2 7 ] [succs: 9 10 ]
$z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if $z2 == 0 goto return;
"->"Block 10:
[preds: 0 8 9 ] [succs: ]
return;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
r16 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseSecs(java.lang.String)>(r16);
$i1 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorMod(int,int)>(i0, 86400);
$l2 = (long) $i1;
$r5 = staticinvoke <org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofSecondOfDay(long)>($l2);
$r6 = virtualinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.Object deduplicate(java.lang.Object)>($r5);
r7 = (org.threeten.bp.LocalTime) $r6;
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.LocalTime time> = r7;
$i3 = staticinvoke <org.threeten.bp.jdk8.Jdk8Methods: int floorDiv(int,int)>(i0, 86400);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: int adjustDays> = $i3;
$i4 = virtualinvoke r16.<java.lang.String: int length()>();
$i5 = $i4 - 1;
$c6 = virtualinvoke r16.<java.lang.String: char charAt(int)>($i5);
$r8 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition parseTimeDefinition(char)>($c6);
r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition timeDefinition> = $r8;
"->"Block 10:
[preds: 0 8 9 ] [succs: ]
return;
";
}
