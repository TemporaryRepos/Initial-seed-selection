digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.OutputStream;
r3 := @parameter1: java.util.Map;
r8 := @parameter2: java.util.Set;
r12 := @parameter3: java.util.Set;
$r0 = new java.io.DataOutputStream;
specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);
r2 = $r0;
virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(1);
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(\"TZDB\");
$r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
$i0 = interfaceinvoke r3.<java.util.Map: int size()>();
$r5 = newarray (java.lang.String)[$i0];
$r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);
r7 = (java.lang.String[]) $r6;
$i1 = lengthof r7;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i1);
r26 = r7;
i9 = lengthof r26;
i10 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r27 = r26[i10];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27);
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = interfaceinvoke r8.<java.util.Set: int size()>();
$r9 = newarray (java.lang.String)[$i2];
$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9);
r28 = (java.lang.String[]) $r10;
$i3 = lengthof r28;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3);
r29 = r28;
i11 = lengthof r29;
i12 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i12 >= i11 goto $r11 = new java.util.ArrayList;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
r30 = r29[i12];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30);
i12 = i12 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12);
r31 = $r11;
$i4 = interfaceinvoke r31.<java.util.List: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4);
$r13 = new java.io.ByteArrayOutputStream;
specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);
r32 = $r13;
r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.threeten.bp.zone.ZoneRules) $r24;
virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>();
$r25 = new java.io.DataOutputStream;
specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32);
r35 = $r25;
staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35);
virtualinvoke r35.<java.io.DataOutputStream: void close()>();
r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
$i8 = lengthof r36;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8);
virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36);
goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();
r38 = (java.lang.String) $r15;
$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r17 = (java.util.SortedMap) $r16;
$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5);
$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r19 = (java.util.SortedMap) $r18;
$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>();
r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"
    "Block 13:
[preds: 12 ] [succs: 12 ]
$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.util.Map$Entry) $r21;
$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();
i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22);
$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();
i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7);
goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 14:
[preds: 12 ] [succs: 10 ]
goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 15:
[preds: 10 ] [succs: ]
virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.io.OutputStream;
r3 := @parameter1: java.util.Map;
r8 := @parameter2: java.util.Set;
r12 := @parameter3: java.util.Set;
$r0 = new java.io.DataOutputStream;
specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);
r2 = $r0;
virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(1);
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(\"TZDB\");
$r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
$i0 = interfaceinvoke r3.<java.util.Map: int size()>();
$r5 = newarray (java.lang.String)[$i0];
$r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);
r7 = (java.lang.String[]) $r6;
$i1 = lengthof r7;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i1);
r26 = r7;
i9 = lengthof r26;
i10 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r27 = r26[i10];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27);
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = interfaceinvoke r8.<java.util.Set: int size()>();
$r9 = newarray (java.lang.String)[$i2];
$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9);
r28 = (java.lang.String[]) $r10;
$i3 = lengthof r28;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3);
r29 = r28;
i11 = lengthof r29;
i12 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r27 = r26[i10];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27);
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i2 = interfaceinvoke r8.<java.util.Set: int size()>();
$r9 = newarray (java.lang.String)[$i2];
$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9);
r28 = (java.lang.String[]) $r10;
$i3 = lengthof r28;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3);
r29 = r28;
i11 = lengthof r29;
i12 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i12 >= i11 goto $r11 = new java.util.ArrayList;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i12 >= i11 goto $r11 = new java.util.ArrayList;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
r30 = r29[i12];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30);
i12 = i12 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i12 >= i11 goto $r11 = new java.util.ArrayList;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12);
r31 = $r11;
$i4 = interfaceinvoke r31.<java.util.List: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4);
$r13 = new java.io.ByteArrayOutputStream;
specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);
r32 = $r13;
r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
r30 = r29[i12];
virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30);
i12 = i12 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i12 >= i11 goto $r11 = new java.util.ArrayList;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12);
r31 = $r11;
$i4 = interfaceinvoke r31.<java.util.List: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4);
$r13 = new java.io.ByteArrayOutputStream;
specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);
r32 = $r13;
r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.threeten.bp.zone.ZoneRules) $r24;
virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>();
$r25 = new java.io.DataOutputStream;
specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32);
r35 = $r25;
staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35);
virtualinvoke r35.<java.io.DataOutputStream: void close()>();
r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
$i8 = lengthof r36;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8);
virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36);
goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
"->"Block 9:
[preds: 7 ] [succs: 10 ]
$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.threeten.bp.zone.ZoneRules) $r24;
virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>();
$r25 = new java.io.DataOutputStream;
specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32);
r35 = $r25;
staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35);
virtualinvoke r35.<java.io.DataOutputStream: void close()>();
r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
$i8 = lengthof r36;
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8);
virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36);
goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
"->"Block 11:
[preds: 10 ] [succs: 12 ]
$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();
r38 = (java.lang.String) $r15;
$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r17 = (java.util.SortedMap) $r16;
$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5);
$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r19 = (java.util.SortedMap) $r18;
$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>();
r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
"->"Block 15:
[preds: 10 ] [succs: ]
virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
return;
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();
r38 = (java.lang.String) $r15;
$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r17 = (java.util.SortedMap) $r16;
$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>();
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5);
$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);
$r19 = (java.util.SortedMap) $r18;
$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>();
r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 12:
[preds: 11 13 ] [succs: 13 14 ]
$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
";
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"->"Block 13:
[preds: 12 ] [succs: 12 ]
$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.util.Map$Entry) $r21;
$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();
i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22);
$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();
i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7);
goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"->"Block 14:
[preds: 12 ] [succs: 10 ]
goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 13:
[preds: 12 ] [succs: 12 ]
$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();
r40 = (java.util.Map$Entry) $r21;
$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();
i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22);
$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();
i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6);
virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7);
goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()];
"->"Block 12:
[preds: 11 13 ] [succs: 13 14 ]
$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
";
    "Block 14:
[preds: 12 ] [succs: 10 ]
goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()];
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>();
";
}
