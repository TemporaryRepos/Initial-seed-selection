digraph "unitGraph" {
    "r1 := @parameter0: java.io.OutputStream"
    "r3 := @parameter1: java.util.Map"
    "r8 := @parameter2: java.util.Set"
    "r12 := @parameter3: java.util.Set"
    "$r0 = new java.io.DataOutputStream"
    "specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1)"
    "r2 = $r0"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(1)"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(\"TZDB\")"
    "$r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"
    "$i0 = interfaceinvoke r3.<java.util.Map: int size()>()"
    "$r5 = newarray (java.lang.String)[$i0]"
    "$r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5)"
    "r7 = (java.lang.String[]) $r6"
    "$i1 = lengthof r7"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i1)"
    "r26 = r7"
    "i9 = lengthof r26"
    "i10 = 0"
    "if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>()"
    "r27 = r26[i10]"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27)"
    "i10 = i10 + 1"
    "goto [?= (branch)]"
    "$i2 = interfaceinvoke r8.<java.util.Set: int size()>()"
    "$r9 = newarray (java.lang.String)[$i2]"
    "$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9)"
    "r28 = (java.lang.String[]) $r10"
    "$i3 = lengthof r28"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3)"
    "r29 = r28"
    "i11 = lengthof r29"
    "i12 = 0"
    "if i12 >= i11 goto $r11 = new java.util.ArrayList"
    "r30 = r29[i12]"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30)"
    "i12 = i12 + 1"
    "$r11 = new java.util.ArrayList"
    "specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12)"
    "r31 = $r11"
    "$i4 = interfaceinvoke r31.<java.util.List: int size()>()"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4)"
    "$r13 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024)"
    "r32 = $r13"
    "r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"
    "$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()"
    "r34 = (org.threeten.bp.zone.ZoneRules) $r24"
    "virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>()"
    "$r25 = new java.io.DataOutputStream"
    "specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32)"
    "r35 = $r25"
    "staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35)"
    "virtualinvoke r35.<java.io.DataOutputStream: void close()>()"
    "r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "$i8 = lengthof r36"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8)"
    "virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36)"
    "goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]"
    "$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"
    "r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>()"
    "$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()"
    "r38 = (java.lang.String) $r15"
    "$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)"
    "$r17 = (java.util.SortedMap) $r16"
    "$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>()"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5)"
    "$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)"
    "$r19 = (java.util.SortedMap) $r18"
    "$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>()"
    "r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto (branch)"
    "$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()"
    "r40 = (java.util.Map$Entry) $r21"
    "$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22)"
    "$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23)"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6)"
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7)"
    "goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]"
    "virtualinvoke r2.<java.io.DataOutputStream: void flush()>()"
    "return"
    "r1 := @parameter0: java.io.OutputStream"->"r3 := @parameter1: java.util.Map";
    "r3 := @parameter1: java.util.Map"->"r8 := @parameter2: java.util.Set";
    "r8 := @parameter2: java.util.Set"->"r12 := @parameter3: java.util.Set";
    "r12 := @parameter3: java.util.Set"->"$r0 = new java.io.DataOutputStream";
    "$r0 = new java.io.DataOutputStream"->"specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1)";
    "specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(1)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(1)"->"virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(\"TZDB\")";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(\"TZDB\")"->"$r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()";
    "$r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"->"$i0 = interfaceinvoke r3.<java.util.Map: int size()>()";
    "$i0 = interfaceinvoke r3.<java.util.Map: int size()>()"->"$r5 = newarray (java.lang.String)[$i0]";
    "$r5 = newarray (java.lang.String)[$i0]"->"$r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5)";
    "$r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5)"->"r7 = (java.lang.String[]) $r6";
    "r7 = (java.lang.String[]) $r6"->"$i1 = lengthof r7";
    "$i1 = lengthof r7"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i1)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i1)"->"r26 = r7";
    "r26 = r7"->"i9 = lengthof r26";
    "i9 = lengthof r26"->"i10 = 0";
    "i10 = 0"->"if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>()";
    "if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>()"->"r27 = r26[i10]";
    "if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>()"->"$i2 = interfaceinvoke r8.<java.util.Set: int size()>()";
    "r27 = r26[i10]"->"virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r27)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= i9 goto $i2 = interfaceinvoke r8.<java.util.Set: int size()>()";
    "$i2 = interfaceinvoke r8.<java.util.Set: int size()>()"->"$r9 = newarray (java.lang.String)[$i2]";
    "$r9 = newarray (java.lang.String)[$i2]"->"$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9)";
    "$r10 = interfaceinvoke r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9)"->"r28 = (java.lang.String[]) $r10";
    "r28 = (java.lang.String[]) $r10"->"$i3 = lengthof r28";
    "$i3 = lengthof r28"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3)"->"r29 = r28";
    "r29 = r28"->"i11 = lengthof r29";
    "i11 = lengthof r29"->"i12 = 0";
    "i12 = 0"->"if i12 >= i11 goto $r11 = new java.util.ArrayList";
    "if i12 >= i11 goto $r11 = new java.util.ArrayList"->"r30 = r29[i12]";
    "if i12 >= i11 goto $r11 = new java.util.ArrayList"->"$r11 = new java.util.ArrayList";
    "r30 = r29[i12]"->"virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r30)"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i11 goto $r11 = new java.util.ArrayList";
    "$r11 = new java.util.ArrayList"->"specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12)";
    "specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r12)"->"r31 = $r11";
    "r31 = $r11"->"$i4 = interfaceinvoke r31.<java.util.List: int size()>()";
    "$i4 = interfaceinvoke r31.<java.util.List: int size()>()"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i4)"->"$r13 = new java.io.ByteArrayOutputStream";
    "$r13 = new java.io.ByteArrayOutputStream"->"specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024)";
    "specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(1024)"->"r32 = $r13";
    "r32 = $r13"->"r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()";
    "r33 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()";
    "if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"->"$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"->"$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()";
    "$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()"->"r34 = (org.threeten.bp.zone.ZoneRules) $r24";
    "r34 = (org.threeten.bp.zone.ZoneRules) $r24"->"virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>()";
    "virtualinvoke r32.<java.io.ByteArrayOutputStream: void reset()>()"->"$r25 = new java.io.DataOutputStream";
    "$r25 = new java.io.DataOutputStream"->"specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32)";
    "specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r32)"->"r35 = $r25";
    "r35 = $r25"->"staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35)";
    "staticinvoke <org.threeten.bp.zone.Ser: void write(java.lang.Object,java.io.DataOutput)>(r34, r35)"->"virtualinvoke r35.<java.io.DataOutputStream: void close()>()";
    "virtualinvoke r35.<java.io.DataOutputStream: void close()>()"->"r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "r36 = virtualinvoke r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$i8 = lengthof r36";
    "$i8 = lengthof r36"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i8)"->"virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36)";
    "virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r36)"->"goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()";
    "$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>()"->"r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()";
    "r37 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>()";
    "if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>()"->"$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto virtualinvoke r2.<java.io.DataOutputStream: void flush()>()"->"virtualinvoke r2.<java.io.DataOutputStream: void flush()>()";
    "$r15 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()"->"r38 = (java.lang.String) $r15";
    "r38 = (java.lang.String) $r15"->"$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)";
    "$r16 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)"->"$r17 = (java.util.SortedMap) $r16";
    "$r17 = (java.util.SortedMap) $r16"->"$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>()";
    "$i5 = interfaceinvoke $r17.<java.util.SortedMap: int size()>()"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i5)"->"$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)";
    "$r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)"->"$r19 = (java.util.SortedMap) $r18";
    "$r19 = (java.util.SortedMap) $r18"->"$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>()";
    "$r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>()"->"r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()";
    "r39 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]";
    "$r21 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()"->"r40 = (java.util.Map$Entry) $r21";
    "r40 = (java.util.Map$Entry) $r21"->"$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>()"->"i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22)";
    "i6 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r28, $r22)"->"$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "$r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>()"->"i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23)";
    "i7 = interfaceinvoke r31.<java.util.List: int indexOf(java.lang.Object)>($r23)"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i6)"->"virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7)";
    "virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(i7)"->"goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()";
    "virtualinvoke r2.<java.io.DataOutputStream: void flush()>()"->"return";
}
