digraph "unitGraph" {
    "r0 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler"
    "r1 := @parameter0: java.lang.String"
    "i1 := @parameter1: int"
    "r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()"
    "$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\")"
    "if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")"
    "return -999999999"
    "$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")"
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")"
    "return 999999999"
    "$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")"
    "if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)"
    "return i1"
    "$i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)"
    "return $i0"
    "r0 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler"->"r1 := @parameter0: java.lang.String";
    "r1 := @parameter0: java.lang.String"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()";
    "r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()"->"$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\")";
    "$z0 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"minimum\")"->"if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")";
    "if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")"->"return -999999999";
    "if $z0 == 0 goto $z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")"->"$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")";
    "$z1 = specialinvoke r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler: boolean matches(java.lang.String,java.lang.String)>(r2, \"maximum\")"->"if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")";
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")"->"return 999999999";
    "if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")"->"$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")";
    "$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"only\")"->"if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)";
    "if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)"->"return i1";
    "if $z2 == 0 goto $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)"->"$i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)";
    "$i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)"->"return $i0";
}
