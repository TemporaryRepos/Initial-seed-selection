digraph "unitGraph" {
    "r3 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler"
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3)"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2)"
    "if $z0 == 0 goto $z2 = 0"
    "$z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r0)"
    "if $z1 == 0 goto $z2 = 0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if $i0 > $i1 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= return $z2]"
    "$z2 = 0"
    "return $z2"
    "r3 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3)";
    "$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3)"->"$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2)";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2)"->"if $z0 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"$z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r0)";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r0)"->"if $z1 == 0 goto $z2 = 0";
    "if $z1 == 0 goto $z2 = 0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $z1 == 0 goto $z2 = 0"->"$z2 = 0";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if $i0 > $i1 goto $z2 = 0";
    "if $i0 > $i1 goto $z2 = 0"->"$z2 = 1";
    "if $i0 > $i1 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= return $z2]";
    "goto [?= return $z2]"->"return $z2";
    "$z2 = 0"->"return $z2";
}
