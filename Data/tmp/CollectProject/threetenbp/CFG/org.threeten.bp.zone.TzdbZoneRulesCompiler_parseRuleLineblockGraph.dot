digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r3 := @parameter0: java.util.StringTokenizer;
$r0 = new org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule;
specialinvoke $r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: void <init>(org.threeten.bp.zone.TzdbZoneRulesCompiler)>(r1);
r2 = $r0;
r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r5 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
if $z0 != 0 goto $r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r24 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r23 = new java.util.ArrayList;
specialinvoke $r23.<java.util.ArrayList: void <init>()>();
interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
$r8 = (java.util.List) $r7;
interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);
$r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r9, 0);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear> = $i0;
$r10 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i1 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i2 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r10, $i1);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear> = $i2;
$i4 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i3 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
if $i4 <= $i3 goto $r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.IllegalArgumentException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Year order invalid: \");
$i6 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" > \");
$i7 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);
throw $r16;
"
    "Block 4:
[preds: 2 ] [succs: ]
$r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.String parseOptional(java.lang.String)>($r11);
specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: void parseMonthDayTime(java.util.StringTokenizer,org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime)>(r3, r2);
$r13 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i5 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parsePeriod(java.lang.String)>($r13);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int savingsAmount> = $i5;
$r14 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r15 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.String parseOptional(java.lang.String)>($r14);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: java.lang.String text> = $r15;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r3 := @parameter0: java.util.StringTokenizer;
$r0 = new org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule;
specialinvoke $r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: void <init>(org.threeten.bp.zone.TzdbZoneRulesCompiler)>(r1);
r2 = $r0;
r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r5 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
if $z0 != 0 goto $r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r24 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r23 = new java.util.ArrayList;
specialinvoke $r23.<java.util.ArrayList: void <init>()>();
interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: org.threeten.bp.zone.TzdbZoneRulesCompiler;
r3 := @parameter0: java.util.StringTokenizer;
$r0 = new org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule;
specialinvoke $r0.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: void <init>(org.threeten.bp.zone.TzdbZoneRulesCompiler)>(r1);
r2 = $r0;
r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r5 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
if $z0 != 0 goto $r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
$r8 = (java.util.List) $r7;
interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);
$r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r9, 0);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear> = $i0;
$r10 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i1 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i2 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r10, $i1);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear> = $i2;
$i4 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i3 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
if $i4 <= $i3 goto $r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r24 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r23 = new java.util.ArrayList;
specialinvoke $r23.<java.util.ArrayList: void <init>()>();
interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
$r8 = (java.util.List) $r7;
interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);
$r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r9, 0);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear> = $i0;
$r10 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i1 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i2 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r10, $i1);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear> = $i2;
$i4 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i3 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
if $i4 <= $i3 goto $r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
$r8 = (java.util.List) $r7;
interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);
$r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r9, 0);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear> = $i0;
$r10 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i1 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i2 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r10, $i1);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear> = $i2;
$i4 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i3 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
if $i4 <= $i3 goto $r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$r16 = new java.lang.IllegalArgumentException;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Year order invalid: \");
$i6 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" > \");
$i7 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);
throw $r16;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r6 = r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.util.Map rules>;
$r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
$r8 = (java.util.List) $r7;
interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);
$r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i0 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r9, 0);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear> = $i0;
$r10 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i1 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i2 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parseYear(java.lang.String,int)>($r10, $i1);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear> = $i2;
$i4 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int startYear>;
$i3 = r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int endYear>;
if $i4 <= $i3 goto $r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
"->"Block 4:
[preds: 2 ] [succs: ]
$r11 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.String parseOptional(java.lang.String)>($r11);
specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: void parseMonthDayTime(java.util.StringTokenizer,org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime)>(r3, r2);
$r13 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$i5 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: int parsePeriod(java.lang.String)>($r13);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: int savingsAmount> = $i5;
$r14 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
$r15 = specialinvoke r1.<org.threeten.bp.zone.TzdbZoneRulesCompiler: java.lang.String parseOptional(java.lang.String)>($r14);
r2.<org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule: java.lang.String text> = $r15;
return;
";
}
