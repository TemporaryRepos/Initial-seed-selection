digraph "unitGraph" {
    "r0 := @parameter0: org.yinwang.pysonar.Binding"
    "r10 := @parameter1: org.yinwang.pysonar.Analyzer"
    "r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator"
    "$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>"
    "$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47)"
    "r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\")"
    "$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>"
    "$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3)"
    "if $z0 != 0 goto return"
    "$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>"
    "interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3)"
    "r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>()"
    "if r6 == null goto return"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>()"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3)"
    "$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8)"
    "$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9)"
    "$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0)"
    "$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1)"
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()"
    "return"
    "r0 := @parameter0: org.yinwang.pysonar.Binding"->"r10 := @parameter1: org.yinwang.pysonar.Analyzer";
    "r10 := @parameter1: org.yinwang.pysonar.Analyzer"->"r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator";
    "r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator"->"$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>";
    "$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>"->"$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47)";
    "$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47)"->"r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\")";
    "r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\")"->"$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>";
    "$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>"->"$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3)";
    "$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>";
    "if $z0 != 0 goto return"->"return";
    "$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>"->"interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3)";
    "interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3)"->"r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>()";
    "r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>()"->"if r6 == null goto return";
    "if r6 == null goto return"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>()";
    "if r6 == null goto return"->"return";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>()"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3)";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3)"->"$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>";
    "$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8)";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8)"->"$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>";
    "$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9)";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9)"->"$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>";
    "$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0)";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0)"->"$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>";
    "$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1)";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1)"->"virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()";
    "virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()"->"return";
}
