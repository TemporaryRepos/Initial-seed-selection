digraph "unitGraph" {
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"Usage: java org.yinwang.pysonar.dump <source-path> <include-paths> <out-root> [verbose]\")"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <source-path> is path to source unit (package directory or module file) that will be graphed\")"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <include-paths> are colon-separated paths to included libs\")"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <out-root> is the prefix of the output files.  There are 3 output files: <out-root>-doc, <out-root>-sym, <out-root>-ref\")"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  [verbose] if set, then verbose logging is used (optional)\")"
    "return"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"Usage: java org.yinwang.pysonar.dump <source-path> <include-paths> <out-root> [verbose]\")"->"staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <source-path> is path to source unit (package directory or module file) that will be graphed\")";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <source-path> is path to source unit (package directory or module file) that will be graphed\")"->"staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <include-paths> are colon-separated paths to included libs\")";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <include-paths> are colon-separated paths to included libs\")"->"staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <out-root> is the prefix of the output files.  There are 3 output files: <out-root>-doc, <out-root>-sym, <out-root>-ref\")";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  <out-root> is the prefix of the output files.  There are 3 output files: <out-root>-doc, <out-root>-sym, <out-root>-ref\")"->"staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  [verbose] if set, then verbose logging is used (optional)\")";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void info(java.lang.Object)>(\"  [verbose] if set, then verbose logging is used (optional)\")"->"return";
}
