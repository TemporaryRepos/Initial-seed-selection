digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 < 3 goto staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()"
    "$i1 = lengthof r0"
    "if $i1 <= 4 goto $r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()"
    "return"
    "$r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "$r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>"
    "virtualinvoke $r2.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r1)"
    "$i2 = lengthof r0"
    "if $i2 < 4 goto r3 = r0[0]"
    "$r31 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "$r30 = <java.util.logging.Level: java.util.logging.Level ALL>"
    "virtualinvoke $r31.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r30)"
    "$r32 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "virtualinvoke $r32.<java.util.logging.Logger: void info(java.lang.String)>(\"LOGGING VERBOSE\")"
    "$r34 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "$r33 = new java.lang.StringBuilder"
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ARGS: \")"
    "$r36 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r0)"
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r34.<java.util.logging.Logger: void info(java.lang.String)>($r38)"
    "r3 = r0[0]"
    "$r4 = r0[1]"
    "r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(\":\")"
    "r6 = r0[2]"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-sym\")"
    "r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-ref\")"
    "r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-doc\")"
    "r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r48 = null"
    "r49 = null"
    "r50 = null"
    "$r19 = new java.io.BufferedOutputStream"
    "$r20 = new java.io.FileOutputStream"
    "specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18)"
    "specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r20)"
    "r50 = $r19"
    "$r21 = new java.io.BufferedOutputStream"
    "$r22 = new java.io.FileOutputStream"
    "specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10)"
    "specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r22)"
    "r48 = $r21"
    "$r23 = new java.io.BufferedOutputStream"
    "$r24 = new java.io.FileOutputStream"
    "specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>(r14)"
    "specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24)"
    "r49 = $r23"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"graphing: \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <org.yinwang.pysonar.$: void msg(java.lang.String)>($r28)"
    "staticinvoke <org.yinwang.pysonar.JSONDump: void graph(java.lang.String,java.lang.String[],java.io.OutputStream,java.io.OutputStream,java.io.OutputStream)>(r3, r5, r48, r49, r50)"
    "virtualinvoke r50.<java.io.OutputStream: void flush()>()"
    "virtualinvoke r48.<java.io.OutputStream: void flush()>()"
    "virtualinvoke r49.<java.io.OutputStream: void flush()>()"
    "if r50 == null goto (branch)"
    "virtualinvoke r50.<java.io.OutputStream: void close()>()"
    "if r48 == null goto (branch)"
    "virtualinvoke r48.<java.io.OutputStream: void close()>()"
    "if r49 == null goto $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "virtualinvoke r49.<java.io.OutputStream: void close()>()"
    "goto [?= $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>]"
    "$r41 := @caughtexception"
    "r42 = $r41"
    "$r44 = <java.lang.System: java.io.PrintStream err>"
    "$r43 = new java.lang.StringBuilder"
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not find file: \")"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42)"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"
    "if r49 == null goto return"
    "$r39 := @caughtexception"
    "r40 = $r39"
    "if r49 == null goto throw r40"
    "throw r40"
    "$r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "virtualinvoke $r29.<java.util.logging.Logger: void info(java.lang.String)>(\"SUCCESS\")"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 < 3 goto staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()";
    "if $i0 < 3 goto staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()"->"$i1 = lengthof r0";
    "if $i0 < 3 goto staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()"->"staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()";
    "$i1 = lengthof r0"->"if $i1 <= 4 goto $r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "if $i1 <= 4 goto $r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()";
    "if $i1 <= 4 goto $r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void usage()>()"->"return";
    "$r2 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>";
    "$r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>"->"virtualinvoke $r2.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r1)";
    "virtualinvoke $r2.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r1)"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if $i2 < 4 goto r3 = r0[0]";
    "if $i2 < 4 goto r3 = r0[0]"->"$r31 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "if $i2 < 4 goto r3 = r0[0]"->"r3 = r0[0]";
    "$r31 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r30 = <java.util.logging.Level: java.util.logging.Level ALL>";
    "$r30 = <java.util.logging.Level: java.util.logging.Level ALL>"->"virtualinvoke $r31.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r30)";
    "virtualinvoke $r31.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r30)"->"$r32 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "$r32 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"virtualinvoke $r32.<java.util.logging.Logger: void info(java.lang.String)>(\"LOGGING VERBOSE\")";
    "virtualinvoke $r32.<java.util.logging.Logger: void info(java.lang.String)>(\"LOGGING VERBOSE\")"->"$r34 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "$r34 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r33 = new java.lang.StringBuilder";
    "$r33 = new java.lang.StringBuilder"->"specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"->"$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ARGS: \")";
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ARGS: \")"->"$r36 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r0)";
    "$r36 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r0)"->"$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)";
    "$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r34.<java.util.logging.Logger: void info(java.lang.String)>($r38)";
    "virtualinvoke $r34.<java.util.logging.Logger: void info(java.lang.String)>($r38)"->"r3 = r0[0]";
    "r3 = r0[0]"->"$r4 = r0[1]";
    "$r4 = r0[1]"->"r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(\":\")";
    "r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(\":\")"->"r6 = r0[2]";
    "r6 = r0[2]"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-sym\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-sym\")"->"r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-ref\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-ref\")"->"r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-doc\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-doc\")"->"r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"r48 = null";
    "r48 = null"->"r49 = null";
    "r49 = null"->"r50 = null";
    "r50 = null"->"$r41 := @caughtexception";
    "r50 = null"->"$r39 := @caughtexception";
    "r50 = null"->"$r19 = new java.io.BufferedOutputStream";
    "$r19 = new java.io.BufferedOutputStream"->"$r41 := @caughtexception";
    "$r19 = new java.io.BufferedOutputStream"->"$r39 := @caughtexception";
    "$r19 = new java.io.BufferedOutputStream"->"$r20 = new java.io.FileOutputStream";
    "$r20 = new java.io.FileOutputStream"->"$r41 := @caughtexception";
    "$r20 = new java.io.FileOutputStream"->"$r39 := @caughtexception";
    "$r20 = new java.io.FileOutputStream"->"specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18)";
    "specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18)"->"$r41 := @caughtexception";
    "specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18)"->"$r39 := @caughtexception";
    "specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>(r18)"->"specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r20)";
    "specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r20)"->"$r41 := @caughtexception";
    "specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r20)"->"$r39 := @caughtexception";
    "specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r20)"->"r50 = $r19";
    "r50 = $r19"->"$r41 := @caughtexception";
    "r50 = $r19"->"$r39 := @caughtexception";
    "r50 = $r19"->"$r21 = new java.io.BufferedOutputStream";
    "$r21 = new java.io.BufferedOutputStream"->"$r41 := @caughtexception";
    "$r21 = new java.io.BufferedOutputStream"->"$r39 := @caughtexception";
    "$r21 = new java.io.BufferedOutputStream"->"$r22 = new java.io.FileOutputStream";
    "$r22 = new java.io.FileOutputStream"->"$r41 := @caughtexception";
    "$r22 = new java.io.FileOutputStream"->"$r39 := @caughtexception";
    "$r22 = new java.io.FileOutputStream"->"specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10)";
    "specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10)"->"$r41 := @caughtexception";
    "specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10)"->"$r39 := @caughtexception";
    "specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10)"->"specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r22)";
    "specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r22)"->"$r41 := @caughtexception";
    "specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r22)"->"$r39 := @caughtexception";
    "specialinvoke $r21.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r22)"->"r48 = $r21";
    "r48 = $r21"->"$r41 := @caughtexception";
    "r48 = $r21"->"$r39 := @caughtexception";
    "r48 = $r21"->"$r23 = new java.io.BufferedOutputStream";
    "$r23 = new java.io.BufferedOutputStream"->"$r41 := @caughtexception";
    "$r23 = new java.io.BufferedOutputStream"->"$r39 := @caughtexception";
    "$r23 = new java.io.BufferedOutputStream"->"$r24 = new java.io.FileOutputStream";
    "$r24 = new java.io.FileOutputStream"->"$r41 := @caughtexception";
    "$r24 = new java.io.FileOutputStream"->"$r39 := @caughtexception";
    "$r24 = new java.io.FileOutputStream"->"specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>(r14)";
    "specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>(r14)"->"$r41 := @caughtexception";
    "specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>(r14)"->"$r39 := @caughtexception";
    "specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>(r14)"->"specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24)";
    "specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24)"->"$r41 := @caughtexception";
    "specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24)"->"$r39 := @caughtexception";
    "specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24)"->"r49 = $r23";
    "r49 = $r23"->"$r41 := @caughtexception";
    "r49 = $r23"->"$r39 := @caughtexception";
    "r49 = $r23"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"$r41 := @caughtexception";
    "$r25 = new java.lang.StringBuilder"->"$r39 := @caughtexception";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r41 := @caughtexception";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"graphing: \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"graphing: \")"->"$r41 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"graphing: \")"->"$r39 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"graphing: \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r41 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r39 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r41 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r39 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <org.yinwang.pysonar.$: void msg(java.lang.String)>($r28)";
    "staticinvoke <org.yinwang.pysonar.$: void msg(java.lang.String)>($r28)"->"$r41 := @caughtexception";
    "staticinvoke <org.yinwang.pysonar.$: void msg(java.lang.String)>($r28)"->"$r39 := @caughtexception";
    "staticinvoke <org.yinwang.pysonar.$: void msg(java.lang.String)>($r28)"->"staticinvoke <org.yinwang.pysonar.JSONDump: void graph(java.lang.String,java.lang.String[],java.io.OutputStream,java.io.OutputStream,java.io.OutputStream)>(r3, r5, r48, r49, r50)";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void graph(java.lang.String,java.lang.String[],java.io.OutputStream,java.io.OutputStream,java.io.OutputStream)>(r3, r5, r48, r49, r50)"->"$r41 := @caughtexception";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void graph(java.lang.String,java.lang.String[],java.io.OutputStream,java.io.OutputStream,java.io.OutputStream)>(r3, r5, r48, r49, r50)"->"$r39 := @caughtexception";
    "staticinvoke <org.yinwang.pysonar.JSONDump: void graph(java.lang.String,java.lang.String[],java.io.OutputStream,java.io.OutputStream,java.io.OutputStream)>(r3, r5, r48, r49, r50)"->"virtualinvoke r50.<java.io.OutputStream: void flush()>()";
    "virtualinvoke r50.<java.io.OutputStream: void flush()>()"->"$r41 := @caughtexception";
    "virtualinvoke r50.<java.io.OutputStream: void flush()>()"->"$r39 := @caughtexception";
    "virtualinvoke r50.<java.io.OutputStream: void flush()>()"->"virtualinvoke r48.<java.io.OutputStream: void flush()>()";
    "virtualinvoke r48.<java.io.OutputStream: void flush()>()"->"$r41 := @caughtexception";
    "virtualinvoke r48.<java.io.OutputStream: void flush()>()"->"$r39 := @caughtexception";
    "virtualinvoke r48.<java.io.OutputStream: void flush()>()"->"virtualinvoke r49.<java.io.OutputStream: void flush()>()";
    "virtualinvoke r49.<java.io.OutputStream: void flush()>()"->"$r41 := @caughtexception";
    "virtualinvoke r49.<java.io.OutputStream: void flush()>()"->"$r39 := @caughtexception";
    "virtualinvoke r49.<java.io.OutputStream: void flush()>()"->"if r50 == null goto (branch)";
    "if r50 == null goto (branch)"->"virtualinvoke r50.<java.io.OutputStream: void close()>()";
    "if r50 == null goto (branch)"->"if r48 == null goto (branch)";
    "virtualinvoke r50.<java.io.OutputStream: void close()>()"->"if r48 == null goto (branch)";
    "if r48 == null goto (branch)"->"virtualinvoke r48.<java.io.OutputStream: void close()>()";
    "if r48 == null goto (branch)"->"if r49 == null goto $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "virtualinvoke r48.<java.io.OutputStream: void close()>()"->"if r49 == null goto $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "if r49 == null goto $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"virtualinvoke r49.<java.io.OutputStream: void close()>()";
    "if r49 == null goto $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "virtualinvoke r49.<java.io.OutputStream: void close()>()"->"goto [?= $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>]";
    "goto [?= $r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>]"->"$r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "$r41 := @caughtexception"->"r42 = $r41";
    "$r41 := @caughtexception"->"$r39 := @caughtexception";
    "r42 = $r41"->"$r44 = <java.lang.System: java.io.PrintStream err>";
    "r42 = $r41"->"$r39 := @caughtexception";
    "$r44 = <java.lang.System: java.io.PrintStream err>"->"$r43 = new java.lang.StringBuilder";
    "$r44 = <java.lang.System: java.io.PrintStream err>"->"$r39 := @caughtexception";
    "$r43 = new java.lang.StringBuilder"->"specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()";
    "$r43 = new java.lang.StringBuilder"->"$r39 := @caughtexception";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not find file: \")";
    "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not find file: \")"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42)";
    "$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not find file: \")"->"$r39 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42)"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42)"->"$r39 := @caughtexception";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r39 := @caughtexception";
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"->"if r50 == null goto (branch)";
    "virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47)"->"$r39 := @caughtexception";
    "if r50 == null goto (branch)"->"virtualinvoke r50.<java.io.OutputStream: void close()>()";
    "if r50 == null goto (branch)"->"if r48 == null goto (branch)";
    "virtualinvoke r50.<java.io.OutputStream: void close()>()"->"if r48 == null goto (branch)";
    "if r48 == null goto (branch)"->"virtualinvoke r48.<java.io.OutputStream: void close()>()";
    "if r48 == null goto (branch)"->"if r49 == null goto return";
    "virtualinvoke r48.<java.io.OutputStream: void close()>()"->"if r49 == null goto return";
    "if r49 == null goto return"->"virtualinvoke r49.<java.io.OutputStream: void close()>()";
    "if r49 == null goto return"->"return";
    "virtualinvoke r49.<java.io.OutputStream: void close()>()"->"return";
    "$r39 := @caughtexception"->"r40 = $r39";
    "$r39 := @caughtexception"->"$r39 := @caughtexception";
    "r40 = $r39"->"if r50 == null goto (branch)";
    "r40 = $r39"->"$r39 := @caughtexception";
    "if r50 == null goto (branch)"->"virtualinvoke r50.<java.io.OutputStream: void close()>()";
    "if r50 == null goto (branch)"->"if r48 == null goto (branch)";
    "virtualinvoke r50.<java.io.OutputStream: void close()>()"->"if r48 == null goto (branch)";
    "if r48 == null goto (branch)"->"virtualinvoke r48.<java.io.OutputStream: void close()>()";
    "if r48 == null goto (branch)"->"if r49 == null goto throw r40";
    "virtualinvoke r48.<java.io.OutputStream: void close()>()"->"if r49 == null goto throw r40";
    "if r49 == null goto throw r40"->"virtualinvoke r49.<java.io.OutputStream: void close()>()";
    "if r49 == null goto throw r40"->"throw r40";
    "virtualinvoke r49.<java.io.OutputStream: void close()>()"->"throw r40";
    "$r29 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"virtualinvoke $r29.<java.util.logging.Logger: void info(java.lang.String)>(\"SUCCESS\")";
    "virtualinvoke $r29.<java.util.logging.Logger: void info(java.lang.String)>(\"SUCCESS\")"->"return";
}
