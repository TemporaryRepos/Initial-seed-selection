digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.lang.String;
r2 := @parameter1: java.lang.String[];
$r0 = new org.yinwang.pysonar.Analyzer;
specialinvoke $r0.<org.yinwang.pysonar.Analyzer: void <init>()>();
r1 = $r0;
r22 = r2;
i1 = lengthof r22;
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r23 = r22[i2];
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23);
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 10 ]
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>();
$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>();
if $i0 <= 0 goto return r1;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\");
$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>();
r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>();
"
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
r25 = (java.lang.String) $r8;
$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13);
$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25);
r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>();
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();
r16 = (org.yinwang.pysonar.Diagnostic) $r15;
$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21);
goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 9:
[preds: 7 ] [succs: 5 ]
goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 10:
[preds: 3 5 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.lang.String;
r2 := @parameter1: java.lang.String[];
$r0 = new org.yinwang.pysonar.Analyzer;
specialinvoke $r0.<org.yinwang.pysonar.Analyzer: void <init>()>();
r1 = $r0;
r22 = r2;
i1 = lengthof r22;
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r23 = r22[i2];
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23);
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
"->"Block 3:
[preds: 1 ] [succs: 4 10 ]
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>();
$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>();
if $i0 <= 0 goto return r1;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r23 = r22[i2];
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23);
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
";
    "Block 3:
[preds: 1 ] [succs: 4 10 ]
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>();
$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>();
if $i0 <= 0 goto return r1;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\");
$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>();
r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 10 ]
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3);
virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>();
$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>();
if $i0 <= 0 goto return r1;
"->"Block 10:
[preds: 3 5 ] [succs: ]
return r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\");
$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>();
r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>();
"->"Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
r25 = (java.lang.String) $r8;
$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13);
$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25);
r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>();
";
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 10:
[preds: 3 5 ] [succs: ]
return r1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
r25 = (java.lang.String) $r8;
$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13);
$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>;
r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25);
r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>();
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();
r16 = (org.yinwang.pysonar.Diagnostic) $r15;
$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21);
goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 9:
[preds: 7 ] [succs: 5 ]
goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();
r16 = (org.yinwang.pysonar.Diagnostic) $r15;
$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \");
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21);
goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 9:
[preds: 7 ] [succs: 5 ]
goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
}
