digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String"
    "r2 := @parameter1: java.lang.String[]"
    "$r0 = new org.yinwang.pysonar.Analyzer"
    "specialinvoke $r0.<org.yinwang.pysonar.Analyzer: void <init>()>()"
    "r1 = $r0"
    "r22 = r2"
    "i1 = lengthof r22"
    "i2 = 0"
    "if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)"
    "r23 = r22[i2]"
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)"
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>()"
    "$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"
    "$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>()"
    "if $i0 <= 0 goto return r1"
    "$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\")"
    "$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"
    "$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>()"
    "r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return r1"
    "$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()"
    "r25 = (java.lang.String) $r8"
    "$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13)"
    "$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"
    "r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25)"
    "r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto (branch)"
    "$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()"
    "r16 = (org.yinwang.pysonar.Diagnostic) $r15"
    "$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21)"
    "goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]"
    "return r1"
    "r3 := @parameter0: java.lang.String"->"r2 := @parameter1: java.lang.String[]";
    "r2 := @parameter1: java.lang.String[]"->"$r0 = new org.yinwang.pysonar.Analyzer";
    "$r0 = new org.yinwang.pysonar.Analyzer"->"specialinvoke $r0.<org.yinwang.pysonar.Analyzer: void <init>()>()";
    "specialinvoke $r0.<org.yinwang.pysonar.Analyzer: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r22 = r2";
    "r22 = r2"->"i1 = lengthof r22";
    "i1 = lengthof r22"->"i2 = 0";
    "i2 = 0"->"if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)";
    "if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)"->"r23 = r22[i2]";
    "if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)"->"virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)";
    "r23 = r22[i2]"->"virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23)";
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void addPath(java.lang.String)>(r23)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i1 goto virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)";
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void analyze(java.lang.String)>(r3)"->"virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>()";
    "virtualinvoke r1.<org.yinwang.pysonar.Analyzer: void finish()>()"->"$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>";
    "$r4 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"->"$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>()";
    "$i0 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: int size()>()"->"if $i0 <= 0 goto return r1";
    "if $i0 <= 0 goto return r1"->"$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "if $i0 <= 0 goto return r1"->"return r1";
    "$r5 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\")";
    "virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>(\"Analyzer errors:\")"->"$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>";
    "$r6 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"->"$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>()";
    "$r7 = interfaceinvoke $r6.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>()"->"r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>()";
    "r24 = interfaceinvoke $r7.<com.google.common.collect.Multiset: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return r1";
    "if $z0 == 0 goto return r1"->"$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return r1"->"return r1";
    "$r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()"->"r25 = (java.lang.String) $r8";
    "r25 = (java.lang.String) $r8"->"$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "$r10 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \")";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  File: \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13)";
    "virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>($r13)"->"$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>";
    "$r14 = r1.<org.yinwang.pysonar.Analyzer: com.google.common.collect.ListMultimap semanticErrors>"->"r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25)";
    "r26 = interfaceinvoke $r14.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r25)"->"r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>()";
    "r27 = interfaceinvoke r26.<java.util.Collection: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]";
    "$r15 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()"->"r16 = (org.yinwang.pysonar.Diagnostic) $r15";
    "r16 = (org.yinwang.pysonar.Diagnostic) $r15"->"$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>";
    "$r18 = <org.yinwang.pysonar.JSONDump: java.util.logging.Logger log>"->"$r17 = new java.lang.StringBuilder";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16)"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21)";
    "virtualinvoke $r18.<java.util.logging.Logger: void info(java.lang.String)>($r21)"->"goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()";
}
