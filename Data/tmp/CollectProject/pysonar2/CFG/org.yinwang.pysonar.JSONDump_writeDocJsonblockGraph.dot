digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: org.yinwang.pysonar.Binding;
r10 := @parameter1: org.yinwang.pysonar.Analyzer;
r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator;
$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>;
$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\");
$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);
if $z0 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);
r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>();
if r6 == null goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3);
$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8);
$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9);
$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0);
$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1);
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
"
    "Block 3:
[preds: 0 1 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: org.yinwang.pysonar.Binding;
r10 := @parameter1: org.yinwang.pysonar.Analyzer;
r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator;
$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>;
$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\");
$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);
if $z0 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);
r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>();
if r6 == null goto return;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: org.yinwang.pysonar.Binding;
r10 := @parameter1: org.yinwang.pysonar.Analyzer;
r7 := @parameter2: com.fasterxml.jackson.core.JsonGenerator;
$r1 = r0.<org.yinwang.pysonar.Binding: java.lang.String qname>;
$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"%20\", \".\");
$r4 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
$z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);
if $z0 != 0 goto return;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);
r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>();
if r6 == null goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3);
$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8);
$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9);
$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0);
$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1);
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r5 = <org.yinwang.pysonar.JSONDump: java.util.Set seenDocs>;
interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);
r6 = virtualinvoke r0.<org.yinwang.pysonar.Binding: org.yinwang.pysonar.ast.Str getDocstring()>();
if r6 == null goto return;
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"sym\", r3);
$r8 = r0.<org.yinwang.pysonar.Binding: java.lang.String fileOrUrl>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"file\", $r8);
$r9 = r6.<org.yinwang.pysonar.ast.Str: java.lang.String value>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>(\"body\", $r9);
$i0 = r6.<org.yinwang.pysonar.ast.Str: int start>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"start\", $i0);
$i1 = r6.<org.yinwang.pysonar.ast.Str: int end>;
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeNumberField(java.lang.String,int)>(\"end\", $i1);
virtualinvoke r7.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
"->"Block 3:
[preds: 0 1 2 ] [succs: ]
return;
";
}
