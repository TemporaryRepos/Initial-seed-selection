digraph "unitGraph" {
    "r0 := @parameter0: org.nlpcn.commons.lang.tire.domain.SmartForest[]"
    "c6 := @parameter1: char"
    "$i0 = lengthof r0"
    "i8 = $i0 - 1"
    "$i1 = lengthof r0"
    "if $i1 >= 1 goto i9 = 0"
    "return i8"
    "i9 = 0"
    "if i9 > i8 goto $i2 = i9 + 1"
    "$i4 = i9 + i8"
    "i5 = $i4 >>> 1"
    "$r1 = r0[i5]"
    "i7 = virtualinvoke $r1.<org.nlpcn.commons.lang.tire.domain.SmartForest: int compareTo(char)>(c6)"
    "if i7 >= 0 goto (branch)"
    "i9 = i5 + 1"
    "goto [?= (branch)]"
    "if i7 <= 0 goto return i5"
    "i8 = i5 - 1"
    "return i5"
    "$i2 = i9 + 1"
    "$i3 = neg $i2"
    "return $i3"
    "r0 := @parameter0: org.nlpcn.commons.lang.tire.domain.SmartForest[]"->"c6 := @parameter1: char";
    "c6 := @parameter1: char"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"i8 = $i0 - 1";
    "i8 = $i0 - 1"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if $i1 >= 1 goto i9 = 0";
    "if $i1 >= 1 goto i9 = 0"->"return i8";
    "if $i1 >= 1 goto i9 = 0"->"i9 = 0";
    "i9 = 0"->"if i9 > i8 goto $i2 = i9 + 1";
    "if i9 > i8 goto $i2 = i9 + 1"->"$i4 = i9 + i8";
    "if i9 > i8 goto $i2 = i9 + 1"->"$i2 = i9 + 1";
    "$i4 = i9 + i8"->"i5 = $i4 >>> 1";
    "i5 = $i4 >>> 1"->"$r1 = r0[i5]";
    "$r1 = r0[i5]"->"i7 = virtualinvoke $r1.<org.nlpcn.commons.lang.tire.domain.SmartForest: int compareTo(char)>(c6)";
    "i7 = virtualinvoke $r1.<org.nlpcn.commons.lang.tire.domain.SmartForest: int compareTo(char)>(c6)"->"if i7 >= 0 goto (branch)";
    "if i7 >= 0 goto (branch)"->"i9 = i5 + 1";
    "if i7 >= 0 goto (branch)"->"if i7 <= 0 goto return i5";
    "i9 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "if i7 <= 0 goto return i5"->"i8 = i5 - 1";
    "if i7 <= 0 goto return i5"->"return i5";
    "i8 = i5 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 > i8 goto $i2 = i9 + 1";
    "$i2 = i9 + 1"->"$i3 = neg $i2";
    "$i3 = neg $i2"->"return $i3";
}
