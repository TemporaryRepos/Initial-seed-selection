digraph "unitGraph" {
    "r5 := @parameter0: java.lang.Object[]"
    "i1 := @parameter1: int"
    "i0 := @parameter2: int"
    "r0 := @parameter3: java.lang.Class"
    "i2 = i0 - i1"
    "if i2 >= 0 goto (branch)"
    "$r7 = new java.lang.IllegalArgumentException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" > \")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)"
    "throw $r7"
    "if r0 != class \"[Ljava/lang/Object;\" goto $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()"
    "$r6 = newarray (java.lang.Object)[i2]"
    "$r13 = (java.lang.Object[]) $r6"
    "goto [?= r4 = $r13]"
    "$r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()"
    "$r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, i2)"
    "$r3 = (java.lang.Object[]) $r2"
    "$r13 = (java.lang.Object[]) $r3"
    "r4 = $r13"
    "$i3 = lengthof r5"
    "$i4 = $i3 - i1"
    "$i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i2)"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, i1, r4, 0, $i5)"
    "return r4"
    "r5 := @parameter0: java.lang.Object[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"r0 := @parameter3: java.lang.Class";
    "r0 := @parameter3: java.lang.Class"->"i2 = i0 - i1";
    "i2 = i0 - i1"->"if i2 >= 0 goto (branch)";
    "if i2 >= 0 goto (branch)"->"$r7 = new java.lang.IllegalArgumentException";
    "if i2 >= 0 goto (branch)"->"if r0 != class \"[Ljava/lang/Object;\" goto $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()";
    "$r7 = new java.lang.IllegalArgumentException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" > \")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" > \")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)";
    "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)"->"throw $r7";
    "if r0 != class \"[Ljava/lang/Object;\" goto $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()"->"$r6 = newarray (java.lang.Object)[i2]";
    "if r0 != class \"[Ljava/lang/Object;\" goto $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()"->"$r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()";
    "$r6 = newarray (java.lang.Object)[i2]"->"$r13 = (java.lang.Object[]) $r6";
    "$r13 = (java.lang.Object[]) $r6"->"goto [?= r4 = $r13]";
    "goto [?= r4 = $r13]"->"r4 = $r13";
    "$r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()"->"$r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, i2)";
    "$r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, i2)"->"$r3 = (java.lang.Object[]) $r2";
    "$r3 = (java.lang.Object[]) $r2"->"$r13 = (java.lang.Object[]) $r3";
    "$r13 = (java.lang.Object[]) $r3"->"r4 = $r13";
    "r4 = $r13"->"$i3 = lengthof r5";
    "$i3 = lengthof r5"->"$i4 = $i3 - i1";
    "$i4 = $i3 - i1"->"$i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i2)";
    "$i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i2)"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, i1, r4, 0, $i5)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, i1, r4, 0, $i5)"->"return r4";
}
