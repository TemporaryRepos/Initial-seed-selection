digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r10 := @parameter0: java.lang.String[];
b0 = 4;
b1 = 5;
b2 = 6;
$r0 = newarray (int[])[2];
$r1 = newarray (int)[4];
$r1[0] = 1;
$r1[1] = 2;
$r1[2] = 3;
$r1[3] = 4;
$r0[0] = $r1;
$r2 = newarray (int)[5];
$r2[0] = 1;
$r2[1] = 2;
$r2[2] = 3;
$r2[3] = 4;
$r2[4] = 5;
$r0[1] = $r2;
r3 = $r0;
$r4 = <java.lang.System: java.io.PrintStream out>;
$z0 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find(int,int[][])>(b0, r3);
virtualinvoke $r4.<java.io.PrintStream: void println(boolean)>($z0);
$r5 = <java.lang.System: java.io.PrintStream out>;
$z1 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find(int,int[][])>(b1, r3);
virtualinvoke $r5.<java.io.PrintStream: void println(boolean)>($z1);
$r6 = <java.lang.System: java.io.PrintStream out>;
$z2 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find(int,int[][])>(b2, r3);
virtualinvoke $r6.<java.io.PrintStream: void println(boolean)>($z2);
$r7 = <java.lang.System: java.io.PrintStream out>;
$z3 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find2(int,int[][])>(b0, r3);
virtualinvoke $r7.<java.io.PrintStream: void println(boolean)>($z3);
$r8 = <java.lang.System: java.io.PrintStream out>;
$z4 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find2(int,int[][])>(b1, r3);
virtualinvoke $r8.<java.io.PrintStream: void println(boolean)>($z4);
$r9 = <java.lang.System: java.io.PrintStream out>;
$z5 = staticinvoke <com.pancm.question.QuestionTest1: boolean Find2(int,int[][])>(b2, r3);
virtualinvoke $r9.<java.io.PrintStream: void println(boolean)>($z5);
return;
"
}
