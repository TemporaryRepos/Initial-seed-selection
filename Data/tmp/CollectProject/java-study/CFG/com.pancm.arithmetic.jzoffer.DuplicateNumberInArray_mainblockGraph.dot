digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (int)[1];
$r1 = newarray (int)[5];
$r1[0] = 2;
$r1[1] = 4;
$r1[2] = 2;
$r1[3] = 1;
$r1[4] = 4;
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: boolean jz(int[],int,int[])>($r1, 5, r0);
$r2 = <java.lang.System: java.io.PrintStream out>;
$i0 = r0[0];
virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i0);
$r3 = newarray (int)[5];
$r3[0] = 2;
$r3[1] = 4;
$r3[2] = 3;
$r3[3] = 1;
$r3[4] = 4;
r4 = $r3;
$i1 = lengthof r4;
$i2 = $i1 - 1;
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void quickSort(int[],int,int)>(r4, 0, $i2);
i5 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = lengthof r4;
if i5 >= $i3 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$i4 = r4[i5];
virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i4);
i5 = i5 + 1;
goto [?= $i3 = lengthof r4];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (int)[1];
$r1 = newarray (int)[5];
$r1[0] = 2;
$r1[1] = 4;
$r1[2] = 2;
$r1[3] = 1;
$r1[4] = 4;
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: boolean jz(int[],int,int[])>($r1, 5, r0);
$r2 = <java.lang.System: java.io.PrintStream out>;
$i0 = r0[0];
virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i0);
$r3 = newarray (int)[5];
$r3[0] = 2;
$r3[1] = 4;
$r3[2] = 3;
$r3[3] = 1;
$r3[4] = 4;
r4 = $r3;
$i1 = lengthof r4;
$i2 = $i1 - 1;
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void quickSort(int[],int,int)>(r4, 0, $i2);
i5 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = lengthof r4;
if i5 >= $i3 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = lengthof r4;
if i5 >= $i3 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$i4 = r4[i5];
virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i4);
i5 = i5 + 1;
goto [?= $i3 = lengthof r4];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = lengthof r4;
if i5 >= $i3 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$i4 = r4[i5];
virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i4);
i5 = i5 + 1;
goto [?= $i3 = lengthof r4];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i3 = lengthof r4;
if i5 >= $i3 goto return;
";
}
