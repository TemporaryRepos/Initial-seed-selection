digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = newarray (int)[4];
$r0[0] = 1;
$r0[1] = 4;
$r0[2] = 3;
$r0[3] = 2;
r1 = $r0;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"max:\");
$i0 = staticinvoke <com.google.common.primitives.Ints: int max(int[])>(r1);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r7 = new java.util.ArrayList;
specialinvoke $r7.<java.util.ArrayList: void <init>()>();
r8 = $r7;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r9);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r10);
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r11);
r12 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>(r8);
i3 = 0;
i1 = lengthof r12;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i1 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"arr:\");
$i2 = r12[i3];
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = newarray (int)[4];
$r0[0] = 1;
$r0[1] = 4;
$r0[2] = 3;
$r0[3] = 2;
r1 = $r0;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"max:\");
$i0 = staticinvoke <com.google.common.primitives.Ints: int max(int[])>(r1);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r7 = new java.util.ArrayList;
specialinvoke $r7.<java.util.ArrayList: void <init>()>();
r8 = $r7;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r9);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r10);
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r11);
r12 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>(r8);
i3 = 0;
i1 = lengthof r12;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i1 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i1 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"arr:\");
$i2 = r12[i3];
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i1 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"arr:\");
$i2 = r12[i3];
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i3 >= i1 goto return;
";
}
