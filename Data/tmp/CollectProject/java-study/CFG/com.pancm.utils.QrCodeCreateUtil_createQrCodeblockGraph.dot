digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r18 := @parameter0: java.io.OutputStream;
r7 := @parameter1: java.lang.String;
i0 := @parameter2: int;
r17 := @parameter3: java.lang.String;
$r0 = new java.util.Hashtable;
specialinvoke $r0.<java.util.Hashtable: void <init>()>();
r1 = $r0;
$r3 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>;
$r2 = <com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L>;
virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);
$r5 = new com.google.zxing.qrcode.QRCodeWriter;
specialinvoke $r5.<com.google.zxing.qrcode.QRCodeWriter: void <init>()>();
r6 = $r5;
$r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE>;
r9 = virtualinvoke r6.<com.google.zxing.qrcode.QRCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>(r7, $r8, i0, i0, r1);
i1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: int getWidth()>();
$r10 = new java.awt.image.BufferedImage;
$i3 = i1 - 200;
$i2 = i1 - 200;
specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1);
r11 = $r10;
virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r13 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();
r14 = (java.awt.Graphics2D) $r13;
$r15 = <java.awt.Color: java.awt.Color WHITE>;
virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15);
virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i1);
$r16 = <java.awt.Color: java.awt.Color BLACK>;
virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);
i6 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i1 goto i6 = i6 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7);
if $z1 == 0 goto i7 = i7 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$i5 = i6 - 100;
$i4 = i7 - 100;
virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1);
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: ]
$z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
return $z0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r18 := @parameter0: java.io.OutputStream;
r7 := @parameter1: java.lang.String;
i0 := @parameter2: int;
r17 := @parameter3: java.lang.String;
$r0 = new java.util.Hashtable;
specialinvoke $r0.<java.util.Hashtable: void <init>()>();
r1 = $r0;
$r3 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>;
$r2 = <com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L>;
virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);
$r5 = new com.google.zxing.qrcode.QRCodeWriter;
specialinvoke $r5.<com.google.zxing.qrcode.QRCodeWriter: void <init>()>();
r6 = $r5;
$r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE>;
r9 = virtualinvoke r6.<com.google.zxing.qrcode.QRCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>(r7, $r8, i0, i0, r1);
i1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: int getWidth()>();
$r10 = new java.awt.image.BufferedImage;
$i3 = i1 - 200;
$i2 = i1 - 200;
specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1);
r11 = $r10;
virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r13 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();
r14 = (java.awt.Graphics2D) $r13;
$r15 = <java.awt.Color: java.awt.Color WHITE>;
virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15);
virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i1);
$r16 = <java.awt.Color: java.awt.Color BLACK>;
virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);
i6 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
"->"Block 8:
[preds: 1 ] [succs: ]
$z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
return $z0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i1 goto i6 = i6 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i1 goto i6 = i6 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7);
if $z1 == 0 goto i7 = i7 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i1 goto i6 = i6 + 1;
"->"Block 7:
[preds: 3 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7);
if $z1 == 0 goto i7 = i7 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$i5 = i6 - 100;
$i4 = i7 - 100;
virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7);
if $z1 == 0 goto i7 = i7 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$i5 = i6 - 100;
$i4 = i7 - 100;
virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1);
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i1 goto i6 = i6 + 1;
";
    "Block 7:
[preds: 3 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18);
";
}
