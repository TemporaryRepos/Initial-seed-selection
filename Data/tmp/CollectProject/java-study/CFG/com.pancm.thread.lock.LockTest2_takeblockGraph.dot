digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 23 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"
    "Block 1:
[preds: 0 5 ] [succs: 2 23 ]
$i0 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 2:
[preds: 1 ] [succs: 3 6 23 ]
if $i0 != 0 goto $r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 3:
[preds: 2 ] [succs: 4 23 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"
    "Block 4:
[preds: 3 ] [succs: 5 23 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"
    "Block 5:
[preds: 4 ] [succs: 1 23 ]
goto [?= $i0 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"
    "Block 6:
[preds: 2 ] [succs: 7 23 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 7:
[preds: 6 ] [succs: 8 23 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"
    "Block 8:
[preds: 7 ] [succs: 9 23 ]
r3 = $r2[$i1];
"
    "Block 9:
[preds: 8 ] [succs: 10 23 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"
    "Block 10:
[preds: 9 ] [succs: 11 23 ]
$i3 = $i2 + 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = $i3;
"
    "Block 12:
[preds: 11 ] [succs: 13 23 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 13:
[preds: 12 ] [succs: 14 23 ]
$i4 = lengthof $r4;
"
    "Block 14:
[preds: 13 ] [succs: 15 16 23 ]
if $i3 != $i4 goto $i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 15:
[preds: 14 ] [succs: 16 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = 0;
"
    "Block 16:
[preds: 14 15 ] [succs: 17 23 ]
$i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 17:
[preds: 16 ] [succs: 18 23 ]
$i6 = $i5 - 1;
"
    "Block 18:
[preds: 17 ] [succs: 19 23 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i6;
"
    "Block 19:
[preds: 18 ] [succs: 20 23 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"
    "Block 20:
[preds: 19 ] [succs: 21 23 ]
interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();
"
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
r6 = r3;
"
    "Block 22:
[preds: 21 ] [succs: ]
$r7 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();
return r6;
"
    "Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
"
    "Block 0:
[preds: ] [succs: 1 23 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"->"Block 1:
[preds: 0 5 ] [succs: 2 23 ]
$i0 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 0:
[preds: ] [succs: 1 23 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 23 ]
$i0 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 2:
[preds: 1 ] [succs: 3 6 23 ]
if $i0 != 0 goto $r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 23 ]
$i0 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 23 ]
if $i0 != 0 goto $r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 3:
[preds: 2 ] [succs: 4 23 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 23 ]
if $i0 != 0 goto $r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 6:
[preds: 2 ] [succs: 7 23 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 23 ]
if $i0 != 0 goto $r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 3:
[preds: 2 ] [succs: 4 23 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"->"Block 4:
[preds: 3 ] [succs: 5 23 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 23 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 4:
[preds: 3 ] [succs: 5 23 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"->"Block 5:
[preds: 4 ] [succs: 1 23 ]
goto [?= $i0 = r0.<com.pancm.thread.lock.LockTest2: int count>];
";
    "Block 4:
[preds: 3 ] [succs: 5 23 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 5:
[preds: 4 ] [succs: 1 23 ]
goto [?= $i0 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"->"Block 1:
[preds: 0 5 ] [succs: 2 23 ]
$i0 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 5:
[preds: 4 ] [succs: 1 23 ]
goto [?= $i0 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 6:
[preds: 2 ] [succs: 7 23 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 7:
[preds: 6 ] [succs: 8 23 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
";
    "Block 6:
[preds: 2 ] [succs: 7 23 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 7:
[preds: 6 ] [succs: 8 23 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"->"Block 8:
[preds: 7 ] [succs: 9 23 ]
r3 = $r2[$i1];
";
    "Block 7:
[preds: 6 ] [succs: 8 23 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 8:
[preds: 7 ] [succs: 9 23 ]
r3 = $r2[$i1];
"->"Block 9:
[preds: 8 ] [succs: 10 23 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
";
    "Block 8:
[preds: 7 ] [succs: 9 23 ]
r3 = $r2[$i1];
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 9:
[preds: 8 ] [succs: 10 23 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"->"Block 10:
[preds: 9 ] [succs: 11 23 ]
$i3 = $i2 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 23 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int takeptr>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 10:
[preds: 9 ] [succs: 11 23 ]
$i3 = $i2 + 1;
"->"Block 11:
[preds: 10 ] [succs: 12 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = $i3;
";
    "Block 10:
[preds: 9 ] [succs: 11 23 ]
$i3 = $i2 + 1;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = $i3;
"->"Block 12:
[preds: 11 ] [succs: 13 23 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 11:
[preds: 10 ] [succs: 12 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = $i3;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 12:
[preds: 11 ] [succs: 13 23 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 13:
[preds: 12 ] [succs: 14 23 ]
$i4 = lengthof $r4;
";
    "Block 12:
[preds: 11 ] [succs: 13 23 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 13:
[preds: 12 ] [succs: 14 23 ]
$i4 = lengthof $r4;
"->"Block 14:
[preds: 13 ] [succs: 15 16 23 ]
if $i3 != $i4 goto $i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 13:
[preds: 12 ] [succs: 14 23 ]
$i4 = lengthof $r4;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 14:
[preds: 13 ] [succs: 15 16 23 ]
if $i3 != $i4 goto $i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 15:
[preds: 14 ] [succs: 16 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = 0;
";
    "Block 14:
[preds: 13 ] [succs: 15 16 23 ]
if $i3 != $i4 goto $i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 16:
[preds: 14 15 ] [succs: 17 23 ]
$i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 14:
[preds: 13 ] [succs: 15 16 23 ]
if $i3 != $i4 goto $i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 15:
[preds: 14 ] [succs: 16 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = 0;
"->"Block 16:
[preds: 14 15 ] [succs: 17 23 ]
$i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 15:
[preds: 14 ] [succs: 16 23 ]
r0.<com.pancm.thread.lock.LockTest2: int takeptr> = 0;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 16:
[preds: 14 15 ] [succs: 17 23 ]
$i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 17:
[preds: 16 ] [succs: 18 23 ]
$i6 = $i5 - 1;
";
    "Block 16:
[preds: 14 15 ] [succs: 17 23 ]
$i5 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 17:
[preds: 16 ] [succs: 18 23 ]
$i6 = $i5 - 1;
"->"Block 18:
[preds: 17 ] [succs: 19 23 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i6;
";
    "Block 17:
[preds: 16 ] [succs: 18 23 ]
$i6 = $i5 - 1;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 18:
[preds: 17 ] [succs: 19 23 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i6;
"->"Block 19:
[preds: 18 ] [succs: 20 23 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
";
    "Block 18:
[preds: 17 ] [succs: 19 23 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i6;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 19:
[preds: 18 ] [succs: 20 23 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"->"Block 20:
[preds: 19 ] [succs: 21 23 ]
interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();
";
    "Block 19:
[preds: 18 ] [succs: 20 23 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 20:
[preds: 19 ] [succs: 21 23 ]
interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();
"->"Block 21:
[preds: 20 ] [succs: 22 23 ]
r6 = r3;
";
    "Block 20:
[preds: 19 ] [succs: 21 23 ]
interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
r6 = r3;
"->"Block 22:
[preds: 21 ] [succs: ]
$r7 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();
return r6;
";
    "Block 21:
[preds: 20 ] [succs: 22 23 ]
r6 = r3;
"->"Block 23:
[preds: 0 5 1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
}
