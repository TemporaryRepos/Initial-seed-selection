digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r0 := @parameter1: int[]"
    "if i0 > 2 goto $i1 = r0[i0]"
    "return i0"
    "$i1 = r0[i0]"
    "if $i1 == 0 goto $i2 = i0 - 1"
    "$i8 = r0[i0]"
    "return $i8"
    "$i2 = i0 - 1"
    "$i3 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i2)"
    "$i4 = i0 - 2"
    "$i5 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i4)"
    "$i6 = $i3 + $i5"
    "r0[i0] = $i6"
    "$i7 = r0[i0]"
    "return $i7"
    "i0 := @parameter0: int"->"r0 := @parameter1: int[]";
    "r0 := @parameter1: int[]"->"if i0 > 2 goto $i1 = r0[i0]";
    "if i0 > 2 goto $i1 = r0[i0]"->"return i0";
    "if i0 > 2 goto $i1 = r0[i0]"->"$i1 = r0[i0]";
    "$i1 = r0[i0]"->"if $i1 == 0 goto $i2 = i0 - 1";
    "if $i1 == 0 goto $i2 = i0 - 1"->"$i8 = r0[i0]";
    "if $i1 == 0 goto $i2 = i0 - 1"->"$i2 = i0 - 1";
    "$i8 = r0[i0]"->"return $i8";
    "$i2 = i0 - 1"->"$i3 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i2)";
    "$i3 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i2)"->"$i4 = i0 - 2";
    "$i4 = i0 - 2"->"$i5 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i4)";
    "$i5 = staticinvoke <com.pancm.arithmetic.StockTest: int f(int)>($i4)"->"$i6 = $i3 + $i5";
    "$i6 = $i3 + $i5"->"r0[i0] = $i6";
    "r0[i0] = $i6"->"$i7 = r0[i0]";
    "$i7 = r0[i0]"->"return $i7";
}
