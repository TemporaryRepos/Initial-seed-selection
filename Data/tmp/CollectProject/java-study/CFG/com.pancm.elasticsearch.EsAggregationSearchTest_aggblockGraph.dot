digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 12 ]
r0 := @parameter0: org.elasticsearch.search.aggregations.AggregationBuilder;
r5 := @parameter1: java.lang.String;
r52 := @parameter2: java.lang.String;
r1 = staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: org.elasticsearch.action.search.SearchResponse search(org.elasticsearch.search.aggregations.AggregationBuilder)>(r0);
$r2 = <org.elasticsearch.rest.RestStatus: org.elasticsearch.rest.RestStatus OK>;
$r3 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.rest.RestStatus status()>();
$z0 = virtualinvoke $r2.<org.elasticsearch.rest.RestStatus: boolean equals(java.lang.Object)>($r3);
if $z0 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
r4 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r6 = virtualinvoke r4.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r5);
r7 = (org.elasticsearch.search.aggregations.bucket.terms.Terms) $r6;
$r9 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \u7ed3\u679c\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r12);
$r14 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"name: \");
$r16 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getName()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>($r18);
$r20 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"type: \");
$r22 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getType()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r24);
$r26 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumOfOtherDocCounts: \");
$l0 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: long getSumOfOtherDocCounts()>();
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r29);
$r30 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
$r31 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.util.List getBuckets()>();
r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 2:
[preds: 1 11 ] [succs: 3 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket) $r33;
$r36 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"key: \");
$r38 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: java.lang.Number getKeyAsNumber()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String)>($r40);
$r42 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCount: \");
$l1 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCount()>();
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r45);
$r47 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCountError: \");
$l2 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCountError()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r47.<org.slf4j.Logger: void info(java.lang.String)>($r50);
$z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"avg\");
if $z2 == 0 goto $z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
"
    "Block 4:
[preds: 3 ] [succs: 11 ]
$r79 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r80 = virtualinvoke $r79.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r88 = (org.elasticsearch.search.aggregations.metrics.avg.Avg) $r80;
$r82 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r81 = new java.lang.StringBuilder;
specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
$r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d3 = interfaceinvoke r88.<org.elasticsearch.search.aggregations.metrics.avg.Avg: double getValue()>();
$r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r82.<org.slf4j.Logger: void info(java.lang.String)>($r86);
$r87 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r87.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
if $z3 == 0 goto $z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
"
    "Block 6:
[preds: 5 ] [succs: 11 ]
$r70 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r71 = virtualinvoke $r70.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r89 = (org.elasticsearch.search.aggregations.metrics.max.Max) $r71;
$r73 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d2 = interfaceinvoke r89.<org.elasticsearch.search.aggregations.metrics.max.Max: double getValue()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r73.<org.slf4j.Logger: void info(java.lang.String)>($r77);
$r78 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r78.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
if $z4 == 0 goto $z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
"
    "Block 8:
[preds: 7 ] [succs: 11 ]
$r61 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r62 = virtualinvoke $r61.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r90 = (org.elasticsearch.search.aggregations.metrics.min.Min) $r62;
$r64 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r63 = new java.lang.StringBuilder;
specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
$r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d1 = interfaceinvoke r90.<org.elasticsearch.search.aggregations.metrics.min.Min: double getValue()>();
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r64.<org.slf4j.Logger: void info(java.lang.String)>($r68);
$r69 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r69.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
if $z5 == 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r51 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r53 = virtualinvoke $r51.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r91 = (org.elasticsearch.search.aggregations.metrics.sum.Sum) $r53;
$r55 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d0 = interfaceinvoke r91.<org.elasticsearch.search.aggregations.metrics.sum.Sum: double getValue()>();
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r55.<org.slf4j.Logger: void info(java.lang.String)>($r59);
$r60 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r60.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
"
    "Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 12:
[preds: 0 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 12 ]
r0 := @parameter0: org.elasticsearch.search.aggregations.AggregationBuilder;
r5 := @parameter1: java.lang.String;
r52 := @parameter2: java.lang.String;
r1 = staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: org.elasticsearch.action.search.SearchResponse search(org.elasticsearch.search.aggregations.AggregationBuilder)>(r0);
$r2 = <org.elasticsearch.rest.RestStatus: org.elasticsearch.rest.RestStatus OK>;
$r3 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.rest.RestStatus status()>();
$z0 = virtualinvoke $r2.<org.elasticsearch.rest.RestStatus: boolean equals(java.lang.Object)>($r3);
if $z0 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
r4 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r6 = virtualinvoke r4.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r5);
r7 = (org.elasticsearch.search.aggregations.bucket.terms.Terms) $r6;
$r9 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \u7ed3\u679c\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r12);
$r14 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"name: \");
$r16 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getName()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>($r18);
$r20 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"type: \");
$r22 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getType()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r24);
$r26 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumOfOtherDocCounts: \");
$l0 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: long getSumOfOtherDocCounts()>();
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r29);
$r30 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
$r31 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.util.List getBuckets()>();
r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 0:
[preds: ] [succs: 1 12 ]
r0 := @parameter0: org.elasticsearch.search.aggregations.AggregationBuilder;
r5 := @parameter1: java.lang.String;
r52 := @parameter2: java.lang.String;
r1 = staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: org.elasticsearch.action.search.SearchResponse search(org.elasticsearch.search.aggregations.AggregationBuilder)>(r0);
$r2 = <org.elasticsearch.rest.RestStatus: org.elasticsearch.rest.RestStatus OK>;
$r3 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.rest.RestStatus status()>();
$z0 = virtualinvoke $r2.<org.elasticsearch.rest.RestStatus: boolean equals(java.lang.Object)>($r3);
if $z0 == 0 goto return;
"->"Block 12:
[preds: 0 2 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
r4 = virtualinvoke r1.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r6 = virtualinvoke r4.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r5);
r7 = (org.elasticsearch.search.aggregations.bucket.terms.Terms) $r6;
$r9 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \u7ed3\u679c\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r12);
$r14 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"name: \");
$r16 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getName()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>($r18);
$r20 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"type: \");
$r22 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.lang.String getType()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r24);
$r26 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"sumOfOtherDocCounts: \");
$l0 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: long getSumOfOtherDocCounts()>();
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r29);
$r30 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
$r31 = interfaceinvoke r7.<org.elasticsearch.search.aggregations.bucket.terms.Terms: java.util.List getBuckets()>();
r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();
"->"Block 2:
[preds: 1 11 ] [succs: 3 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
    "Block 2:
[preds: 1 11 ] [succs: 3 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket) $r33;
$r36 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"key: \");
$r38 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: java.lang.Number getKeyAsNumber()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String)>($r40);
$r42 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCount: \");
$l1 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCount()>();
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r45);
$r47 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCountError: \");
$l2 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCountError()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r47.<org.slf4j.Logger: void info(java.lang.String)>($r50);
$z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"avg\");
if $z2 == 0 goto $z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
";
    "Block 2:
[preds: 1 11 ] [succs: 3 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 12:
[preds: 0 2 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket) $r33;
$r36 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"key: \");
$r38 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: java.lang.Number getKeyAsNumber()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String)>($r40);
$r42 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCount: \");
$l1 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCount()>();
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r45);
$r47 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCountError: \");
$l2 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCountError()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r47.<org.slf4j.Logger: void info(java.lang.String)>($r50);
$z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"avg\");
if $z2 == 0 goto $z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
"->"Block 4:
[preds: 3 ] [succs: 11 ]
$r79 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r80 = virtualinvoke $r79.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r88 = (org.elasticsearch.search.aggregations.metrics.avg.Avg) $r80;
$r82 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r81 = new java.lang.StringBuilder;
specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
$r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d3 = interfaceinvoke r88.<org.elasticsearch.search.aggregations.metrics.avg.Avg: double getValue()>();
$r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r82.<org.slf4j.Logger: void info(java.lang.String)>($r86);
$r87 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r87.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
r34 = (org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket) $r33;
$r36 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"key: \");
$r38 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: java.lang.Number getKeyAsNumber()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String)>($r40);
$r42 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCount: \");
$l1 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCount()>();
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r45);
$r47 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r46 = new java.lang.StringBuilder;
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"docCountError: \");
$l2 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: long getDocCountError()>();
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r47.<org.slf4j.Logger: void info(java.lang.String)>($r50);
$z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"avg\");
if $z2 == 0 goto $z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
if $z3 == 0 goto $z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
";
    "Block 4:
[preds: 3 ] [succs: 11 ]
$r79 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r80 = virtualinvoke $r79.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r88 = (org.elasticsearch.search.aggregations.metrics.avg.Avg) $r80;
$r82 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r81 = new java.lang.StringBuilder;
specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
$r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d3 = interfaceinvoke r88.<org.elasticsearch.search.aggregations.metrics.avg.Avg: double getValue()>();
$r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r82.<org.slf4j.Logger: void info(java.lang.String)>($r86);
$r87 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r87.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"->"Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
if $z3 == 0 goto $z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
"->"Block 6:
[preds: 5 ] [succs: 11 ]
$r70 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r71 = virtualinvoke $r70.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r89 = (org.elasticsearch.search.aggregations.metrics.max.Max) $r71;
$r73 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d2 = interfaceinvoke r89.<org.elasticsearch.search.aggregations.metrics.max.Max: double getValue()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r73.<org.slf4j.Logger: void info(java.lang.String)>($r77);
$r78 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r78.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z3 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"max\");
if $z3 == 0 goto $z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
"->"Block 7:
[preds: 5 ] [succs: 8 9 ]
$z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
if $z4 == 0 goto $z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
";
    "Block 6:
[preds: 5 ] [succs: 11 ]
$r70 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r71 = virtualinvoke $r70.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r89 = (org.elasticsearch.search.aggregations.metrics.max.Max) $r71;
$r73 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r72 = new java.lang.StringBuilder;
specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
$r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d2 = interfaceinvoke r89.<org.elasticsearch.search.aggregations.metrics.max.Max: double getValue()>();
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r73.<org.slf4j.Logger: void info(java.lang.String)>($r77);
$r78 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r78.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"->"Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
if $z4 == 0 goto $z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
"->"Block 8:
[preds: 7 ] [succs: 11 ]
$r61 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r62 = virtualinvoke $r61.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r90 = (org.elasticsearch.search.aggregations.metrics.min.Min) $r62;
$r64 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r63 = new java.lang.StringBuilder;
specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
$r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d1 = interfaceinvoke r90.<org.elasticsearch.search.aggregations.metrics.min.Min: double getValue()>();
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r64.<org.slf4j.Logger: void info(java.lang.String)>($r68);
$r69 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r69.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z4 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"min\");
if $z4 == 0 goto $z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
"->"Block 9:
[preds: 7 ] [succs: 10 11 ]
$z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
if $z5 == 0 goto (branch);
";
    "Block 8:
[preds: 7 ] [succs: 11 ]
$r61 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r62 = virtualinvoke $r61.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r90 = (org.elasticsearch.search.aggregations.metrics.min.Min) $r62;
$r64 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r63 = new java.lang.StringBuilder;
specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
$r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d1 = interfaceinvoke r90.<org.elasticsearch.search.aggregations.metrics.min.Min: double getValue()>();
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r64.<org.slf4j.Logger: void info(java.lang.String)>($r68);
$r69 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r69.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
goto [?= (branch)];
"->"Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
if $z5 == 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 11 ]
$r51 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r53 = virtualinvoke $r51.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r91 = (org.elasticsearch.search.aggregations.metrics.sum.Sum) $r53;
$r55 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d0 = interfaceinvoke r91.<org.elasticsearch.search.aggregations.metrics.sum.Sum: double getValue()>();
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r55.<org.slf4j.Logger: void info(java.lang.String)>($r59);
$r60 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r60.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z5 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"sum\");
if $z5 == 0 goto (branch);
"->"Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
$r51 = interfaceinvoke r34.<org.elasticsearch.search.aggregations.bucket.terms.Terms$Bucket: org.elasticsearch.search.aggregations.Aggregations getAggregations()>();
$r53 = virtualinvoke $r51.<org.elasticsearch.search.aggregations.Aggregations: org.elasticsearch.search.aggregations.Aggregation get(java.lang.String)>(r52);
r91 = (org.elasticsearch.search.aggregations.metrics.sum.Sum) $r53;
$r55 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
$r54 = new java.lang.StringBuilder;
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$d0 = interfaceinvoke r91.<org.elasticsearch.search.aggregations.metrics.sum.Sum: double getValue()>();
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke $r55.<org.slf4j.Logger: void info(java.lang.String)>($r59);
$r60 = <com.pancm.elasticsearch.EsAggregationSearchTest: org.slf4j.Logger logger>;
interfaceinvoke $r60.<org.slf4j.Logger: void info(java.lang.String)>(\"------------------------------------\");
"->"Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 11:
[preds: 4 6 8 9 10 ] [succs: 2 ]
goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()];
"->"Block 2:
[preds: 1 11 ] [succs: 3 12 ]
$z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
}
