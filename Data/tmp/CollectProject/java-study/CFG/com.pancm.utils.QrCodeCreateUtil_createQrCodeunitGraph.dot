digraph "unitGraph" {
    "r18 := @parameter0: java.io.OutputStream"
    "r7 := @parameter1: java.lang.String"
    "i0 := @parameter2: int"
    "r17 := @parameter3: java.lang.String"
    "$r0 = new java.util.Hashtable"
    "specialinvoke $r0.<java.util.Hashtable: void <init>()>()"
    "r1 = $r0"
    "$r3 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>"
    "$r2 = <com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L>"
    "virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2)"
    "$r5 = new com.google.zxing.qrcode.QRCodeWriter"
    "specialinvoke $r5.<com.google.zxing.qrcode.QRCodeWriter: void <init>()>()"
    "r6 = $r5"
    "$r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE>"
    "r9 = virtualinvoke r6.<com.google.zxing.qrcode.QRCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>(r7, $r8, i0, i0, r1)"
    "i1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: int getWidth()>()"
    "$r10 = new java.awt.image.BufferedImage"
    "$i3 = i1 - 200"
    "$i2 = i1 - 200"
    "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1)"
    "r11 = $r10"
    "virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>()"
    "$r13 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()"
    "r14 = (java.awt.Graphics2D) $r13"
    "$r15 = <java.awt.Color: java.awt.Color WHITE>"
    "virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15)"
    "virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i1)"
    "$r16 = <java.awt.Color: java.awt.Color BLACK>"
    "virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16)"
    "i6 = 0"
    "if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)"
    "i7 = 0"
    "if i7 >= i1 goto i6 = i6 + 1"
    "$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7)"
    "if $z1 == 0 goto i7 = i7 + 1"
    "$i5 = i6 - 100"
    "$i4 = i7 - 100"
    "virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "i6 = i6 + 1"
    "$z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)"
    "return $z0"
    "r18 := @parameter0: java.io.OutputStream"->"r7 := @parameter1: java.lang.String";
    "r7 := @parameter1: java.lang.String"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"r17 := @parameter3: java.lang.String";
    "r17 := @parameter3: java.lang.String"->"$r0 = new java.util.Hashtable";
    "$r0 = new java.util.Hashtable"->"specialinvoke $r0.<java.util.Hashtable: void <init>()>()";
    "specialinvoke $r0.<java.util.Hashtable: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r3 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>";
    "$r3 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType ERROR_CORRECTION>"->"$r2 = <com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L>";
    "$r2 = <com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L>"->"virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2)";
    "virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2)"->"$r5 = new com.google.zxing.qrcode.QRCodeWriter";
    "$r5 = new com.google.zxing.qrcode.QRCodeWriter"->"specialinvoke $r5.<com.google.zxing.qrcode.QRCodeWriter: void <init>()>()";
    "specialinvoke $r5.<com.google.zxing.qrcode.QRCodeWriter: void <init>()>()"->"r6 = $r5";
    "r6 = $r5"->"$r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE>";
    "$r8 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE>"->"r9 = virtualinvoke r6.<com.google.zxing.qrcode.QRCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>(r7, $r8, i0, i0, r1)";
    "r9 = virtualinvoke r6.<com.google.zxing.qrcode.QRCodeWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map)>(r7, $r8, i0, i0, r1)"->"i1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: int getWidth()>()";
    "i1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: int getWidth()>()"->"$r10 = new java.awt.image.BufferedImage";
    "$r10 = new java.awt.image.BufferedImage"->"$i3 = i1 - 200";
    "$i3 = i1 - 200"->"$i2 = i1 - 200";
    "$i2 = i1 - 200"->"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1)";
    "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1)"->"r11 = $r10";
    "r11 = $r10"->"virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>()";
    "virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>()"->"$r13 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()";
    "$r13 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()"->"r14 = (java.awt.Graphics2D) $r13";
    "r14 = (java.awt.Graphics2D) $r13"->"$r15 = <java.awt.Color: java.awt.Color WHITE>";
    "$r15 = <java.awt.Color: java.awt.Color WHITE>"->"virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15)";
    "virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15)"->"virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i1)";
    "virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i1)"->"$r16 = <java.awt.Color: java.awt.Color BLACK>";
    "$r16 = <java.awt.Color: java.awt.Color BLACK>"->"virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16)";
    "virtualinvoke r14.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16)"->"i6 = 0";
    "i6 = 0"->"if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)";
    "if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)"->"i7 = 0";
    "if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)"->"$z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)";
    "i7 = 0"->"if i7 >= i1 goto i6 = i6 + 1";
    "if i7 >= i1 goto i6 = i6 + 1"->"$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7)";
    "if i7 >= i1 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$z1 = virtualinvoke r9.<com.google.zxing.common.BitMatrix: boolean get(int,int)>(i6, i7)"->"if $z1 == 0 goto i7 = i7 + 1";
    "if $z1 == 0 goto i7 = i7 + 1"->"$i5 = i6 - 100";
    "if $z1 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$i5 = i6 - 100"->"$i4 = i7 - 100";
    "$i4 = i7 - 100"->"virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1)";
    "virtualinvoke r14.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, 1, 1)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i1 goto i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i1 goto $z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)";
    "$z0 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r11, r17, r18)"->"return $z0";
}
