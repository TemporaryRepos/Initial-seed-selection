digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i1 := @parameter2: int;
if i0 >= i1 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
i2 = staticinvoke <com.pancm.arithmetic.SortTest: int getMiddle(int[],int,int)>(r0, i0, i1);
$i3 = i2 - 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, 0, $i3);
$i4 = i2 + 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, $i4, i1);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i1 := @parameter2: int;
if i0 >= i1 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
i2 = staticinvoke <com.pancm.arithmetic.SortTest: int getMiddle(int[],int,int)>(r0, i0, i1);
$i3 = i2 - 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, 0, $i3);
$i4 = i2 + 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, $i4, i1);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
i1 := @parameter2: int;
if i0 >= i1 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
i2 = staticinvoke <com.pancm.arithmetic.SortTest: int getMiddle(int[],int,int)>(r0, i0, i1);
$i3 = i2 - 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, 0, $i3);
$i4 = i2 + 1;
staticinvoke <com.pancm.arithmetic.SortTest: void quickSort(int[],int,int)>(r0, $i4, i1);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
