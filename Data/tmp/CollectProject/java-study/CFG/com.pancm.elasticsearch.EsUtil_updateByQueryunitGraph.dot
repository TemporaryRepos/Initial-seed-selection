digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "r10 := @parameter2: org.elasticsearch.index.query.QueryBuilder[]"
    "if r0 == null goto return null"
    "if r1 != null goto $r2 = new java.util.HashMap"
    "return null"
    "$r2 = new java.util.HashMap"
    "specialinvoke $r2.<java.util.HashMap: void <init>()>()"
    "r3 = $r2"
    "$r4 = new org.elasticsearch.index.reindex.UpdateByQueryRequest"
    "specialinvoke $r4.<org.elasticsearch.index.reindex.UpdateByQueryRequest: void <init>()>()"
    "r5 = $r4"
    "$r6 = newarray (java.lang.String)[1]"
    "$r6[0] = r0"
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.action.IndicesRequest indices(java.lang.String[])>($r6)"
    "$r8 = newarray (java.lang.String)[1]"
    "$r8[0] = r1"
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setDocTypes(java.lang.String[])>($r8)"
    "if r10 == null goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "r22 = r10"
    "i2 = lengthof r22"
    "i3 = 0"
    "if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "r18 = r22[i3]"
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setQuery(org.elasticsearch.index.query.QueryBuilder)>(r18)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "$r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "$r11 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"
    "r23 = virtualinvoke $r12.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.index.reindex.BulkByScrollResponse updateByQuery(org.elasticsearch.index.reindex.UpdateByQueryRequest,org.elasticsearch.client.RequestOptions)>(r5, $r11)"
    "$r13 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: org.elasticsearch.common.unit.TimeValue getTook()>()"
    "$l0 = virtualinvoke $r13.<org.elasticsearch.common.unit.TimeValue: long getMillis()>()"
    "$r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"time\", $r14)"
    "$l1 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: long getTotal()>()"
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"total\", $r16)"
    "$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z0 == 0 goto return r3"
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"
    "goto [?= return r3]"
    "$r20 := @caughtexception"
    "r21 = $r20"
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z1 == 0 goto throw r21"
    "throw r21"
    "return r3"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"r10 := @parameter2: org.elasticsearch.index.query.QueryBuilder[]";
    "r10 := @parameter2: org.elasticsearch.index.query.QueryBuilder[]"->"if r0 == null goto return null";
    "if r0 == null goto return null"->"if r1 != null goto $r2 = new java.util.HashMap";
    "if r0 == null goto return null"->"return null";
    "if r1 != null goto $r2 = new java.util.HashMap"->"return null";
    "if r1 != null goto $r2 = new java.util.HashMap"->"$r2 = new java.util.HashMap";
    "$r2 = new java.util.HashMap"->"specialinvoke $r2.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r2.<java.util.HashMap: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new org.elasticsearch.index.reindex.UpdateByQueryRequest";
    "r3 = $r2"->"$r20 := @caughtexception";
    "$r4 = new org.elasticsearch.index.reindex.UpdateByQueryRequest"->"specialinvoke $r4.<org.elasticsearch.index.reindex.UpdateByQueryRequest: void <init>()>()";
    "$r4 = new org.elasticsearch.index.reindex.UpdateByQueryRequest"->"$r20 := @caughtexception";
    "specialinvoke $r4.<org.elasticsearch.index.reindex.UpdateByQueryRequest: void <init>()>()"->"r5 = $r4";
    "specialinvoke $r4.<org.elasticsearch.index.reindex.UpdateByQueryRequest: void <init>()>()"->"$r20 := @caughtexception";
    "r5 = $r4"->"$r6 = newarray (java.lang.String)[1]";
    "r5 = $r4"->"$r20 := @caughtexception";
    "$r6 = newarray (java.lang.String)[1]"->"$r6[0] = r0";
    "$r6 = newarray (java.lang.String)[1]"->"$r20 := @caughtexception";
    "$r6[0] = r0"->"virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.action.IndicesRequest indices(java.lang.String[])>($r6)";
    "$r6[0] = r0"->"$r20 := @caughtexception";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.action.IndicesRequest indices(java.lang.String[])>($r6)"->"$r8 = newarray (java.lang.String)[1]";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.action.IndicesRequest indices(java.lang.String[])>($r6)"->"$r20 := @caughtexception";
    "$r8 = newarray (java.lang.String)[1]"->"$r8[0] = r1";
    "$r8 = newarray (java.lang.String)[1]"->"$r20 := @caughtexception";
    "$r8[0] = r1"->"virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setDocTypes(java.lang.String[])>($r8)";
    "$r8[0] = r1"->"$r20 := @caughtexception";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setDocTypes(java.lang.String[])>($r8)"->"if r10 == null goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setDocTypes(java.lang.String[])>($r8)"->"$r20 := @caughtexception";
    "if r10 == null goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"r22 = r10";
    "if r10 == null goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "if r10 == null goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r20 := @caughtexception";
    "r22 = r10"->"i2 = lengthof r22";
    "r22 = r10"->"$r20 := @caughtexception";
    "i2 = lengthof r22"->"i3 = 0";
    "i2 = lengthof r22"->"$r20 := @caughtexception";
    "i3 = 0"->"if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "i3 = 0"->"$r20 := @caughtexception";
    "if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"r18 = r22[i3]";
    "if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r20 := @caughtexception";
    "r18 = r22[i3]"->"virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setQuery(org.elasticsearch.index.query.QueryBuilder)>(r18)";
    "r18 = r22[i3]"->"$r20 := @caughtexception";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setQuery(org.elasticsearch.index.query.QueryBuilder)>(r18)"->"i3 = i3 + 1";
    "virtualinvoke r5.<org.elasticsearch.index.reindex.UpdateByQueryRequest: org.elasticsearch.index.reindex.UpdateByQueryRequest setQuery(org.elasticsearch.index.query.QueryBuilder)>(r18)"->"$r20 := @caughtexception";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "i3 = i3 + 1"->"$r20 := @caughtexception";
    "goto [?= (branch)]"->"if i3 >= i2 goto $r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "goto [?= (branch)]"->"$r20 := @caughtexception";
    "$r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r11 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>";
    "$r12 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r20 := @caughtexception";
    "$r11 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"r23 = virtualinvoke $r12.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.index.reindex.BulkByScrollResponse updateByQuery(org.elasticsearch.index.reindex.UpdateByQueryRequest,org.elasticsearch.client.RequestOptions)>(r5, $r11)";
    "$r11 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"$r20 := @caughtexception";
    "r23 = virtualinvoke $r12.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.index.reindex.BulkByScrollResponse updateByQuery(org.elasticsearch.index.reindex.UpdateByQueryRequest,org.elasticsearch.client.RequestOptions)>(r5, $r11)"->"$r13 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: org.elasticsearch.common.unit.TimeValue getTook()>()";
    "r23 = virtualinvoke $r12.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.index.reindex.BulkByScrollResponse updateByQuery(org.elasticsearch.index.reindex.UpdateByQueryRequest,org.elasticsearch.client.RequestOptions)>(r5, $r11)"->"$r20 := @caughtexception";
    "$r13 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: org.elasticsearch.common.unit.TimeValue getTook()>()"->"$l0 = virtualinvoke $r13.<org.elasticsearch.common.unit.TimeValue: long getMillis()>()";
    "$r13 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: org.elasticsearch.common.unit.TimeValue getTook()>()"->"$r20 := @caughtexception";
    "$l0 = virtualinvoke $r13.<org.elasticsearch.common.unit.TimeValue: long getMillis()>()"->"$r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)";
    "$l0 = virtualinvoke $r13.<org.elasticsearch.common.unit.TimeValue: long getMillis()>()"->"$r20 := @caughtexception";
    "$r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"time\", $r14)";
    "$r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"->"$r20 := @caughtexception";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"time\", $r14)"->"$l1 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: long getTotal()>()";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"time\", $r14)"->"$r20 := @caughtexception";
    "$l1 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: long getTotal()>()"->"$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)";
    "$l1 = virtualinvoke r23.<org.elasticsearch.index.reindex.BulkByScrollResponse: long getTotal()>()"->"$r20 := @caughtexception";
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"total\", $r16)";
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"$r20 := @caughtexception";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"total\", $r16)"->"$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"total\", $r16)"->"$r20 := @caughtexception";
    "$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z0 == 0 goto return r3";
    "if $z0 == 0 goto return r3"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z0 == 0 goto return r3"->"return r3";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"goto [?= return r3]";
    "goto [?= return r3]"->"return r3";
    "$r20 := @caughtexception"->"r21 = $r20";
    "$r20 := @caughtexception"->"$r20 := @caughtexception";
    "r21 = $r20"->"$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "r21 = $r20"->"$r20 := @caughtexception";
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z1 == 0 goto throw r21";
    "if $z1 == 0 goto throw r21"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z1 == 0 goto throw r21"->"throw r21";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"throw r21";
}
