digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void init()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void createIndex()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void bulk()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void groupbySearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgGroupSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxGroupSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumGroupSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void topSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"
    "$r0 := @caughtexception"
    "r1 = $r0"
    "throw r1"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"$r0 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void init()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void init()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void init()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void init()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void createIndex()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void createIndex()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void createIndex()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void createIndex()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void bulk()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void bulk()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void bulk()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void bulk()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void groupbySearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void groupbySearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void groupbySearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void groupbySearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgGroupSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgGroupSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgGroupSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void avgGroupSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxGroupSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxGroupSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxGroupSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void maxGroupSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumGroupSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumGroupSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumGroupSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void sumGroupSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void topSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void topSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void topSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void topSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r3 = $r2";
    "$r2 := @caughtexception"->"$r0 := @caughtexception";
    "r3 = $r2"->"virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()";
    "r3 = $r2"->"$r0 := @caughtexception";
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()";
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r0 := @caughtexception"->"r1 = $r0";
    "r1 = $r0"->"staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()";
    "staticinvoke <com.pancm.elasticsearch.EsAggregationSearchTest: void close()>()"->"throw r1";
}
