digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Jhon\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Jency\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Mike\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Dmitri\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Mike\");
$r2 = new java.util.HashSet;
specialinvoke $r2.<java.util.HashSet: void <init>()>();
r3 = $r2;
i1 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = interfaceinvoke r1.<java.util.List: int size()>();
if i1 >= $i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"items:\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$z5 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r10);
if $z5 != 0 goto i1 = i1 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u91cd\u590d\u7684\u6570\u636e: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = interfaceinvoke r1.<java.util.List: int size()>()];
"
    "Block 5:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"list:\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Jhon\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Jency\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Mike\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Dmitri\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"Mike\");
$r2 = new java.util.HashSet;
specialinvoke $r2.<java.util.HashSet: void <init>()>();
r3 = $r2;
i1 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = interfaceinvoke r1.<java.util.List: int size()>();
if i1 >= $i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = interfaceinvoke r1.<java.util.List: int size()>();
if i1 >= $i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"items:\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$z5 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r10);
if $z5 != 0 goto i1 = i1 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = interfaceinvoke r1.<java.util.List: int size()>();
if i1 >= $i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"list:\");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"items:\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$z5 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r10);
if $z5 != 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u91cd\u590d\u7684\u6570\u636e: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"items:\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$z5 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r10);
if $z5 != 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u91cd\u590d\u7684\u6570\u636e: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = interfaceinvoke r1.<java.util.List: int size()>()];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = interfaceinvoke r1.<java.util.List: int size()>()];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = interfaceinvoke r1.<java.util.List: int size()>();
if i1 >= $i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
}
