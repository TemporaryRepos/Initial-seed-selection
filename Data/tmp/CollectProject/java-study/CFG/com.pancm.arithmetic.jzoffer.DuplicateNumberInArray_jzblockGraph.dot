digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
r1 := @parameter2: int[];
i7 = 0;
"
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i7 >= i0 goto return 0;
"
    "Block 2:
[preds: 1 5 ] [succs: 3 6 ]
$i1 = r0[i7];
if $i1 == i7 goto i7 = i7 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i2 = r0[i7];
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 != $i3 goto $i5 = r0[i7];
"
    "Block 4:
[preds: 3 ] [succs: ]
$i6 = r0[i7];
r1[0] = $i6;
return 1;
"
    "Block 5:
[preds: 3 ] [succs: 2 ]
$i5 = r0[i7];
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5);
goto [?= $i1 = r0[i7]];
"
    "Block 6:
[preds: 2 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 1 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i0 := @parameter1: int;
r1 := @parameter2: int[];
i7 = 0;
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i7 >= i0 goto return 0;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i7 >= i0 goto return 0;
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 ]
$i1 = r0[i7];
if $i1 == i7 goto i7 = i7 + 1;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i7 >= i0 goto return 0;
"->"Block 7:
[preds: 1 ] [succs: ]
return 0;
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 ]
$i1 = r0[i7];
if $i1 == i7 goto i7 = i7 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$i2 = r0[i7];
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 != $i3 goto $i5 = r0[i7];
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 ]
$i1 = r0[i7];
if $i1 == i7 goto i7 = i7 + 1;
"->"Block 6:
[preds: 2 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i2 = r0[i7];
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 != $i3 goto $i5 = r0[i7];
"->"Block 4:
[preds: 3 ] [succs: ]
$i6 = r0[i7];
r1[0] = $i6;
return 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i2 = r0[i7];
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 != $i3 goto $i5 = r0[i7];
"->"Block 5:
[preds: 3 ] [succs: 2 ]
$i5 = r0[i7];
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5);
goto [?= $i1 = r0[i7]];
";
    "Block 5:
[preds: 3 ] [succs: 2 ]
$i5 = r0[i7];
staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5);
goto [?= $i1 = r0[i7]];
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 ]
$i1 = r0[i7];
if $i1 == i7 goto i7 = i7 + 1;
";
    "Block 6:
[preds: 2 ] [succs: 1 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i7 >= i0 goto return 0;
";
}
