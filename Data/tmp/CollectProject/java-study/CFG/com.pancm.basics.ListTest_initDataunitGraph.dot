digraph "unitGraph" {
    "i0 := @parameter0: int"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "i1 = 1"
    "if i1 > i0 goto return r1"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return r1"
    "i0 := @parameter0: int"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i1 = 1";
    "i1 = 1"->"if i1 > i0 goto return r1";
    "if i1 > i0 goto return r1"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "if i1 > i0 goto return r1"->"return r1";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 > i0 goto return r1";
}
