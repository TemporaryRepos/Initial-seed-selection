digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
i1 = virtualinvoke r3.<java.lang.String: int length()>();
i9 = 1;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 > i1 goto return r5;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i9 - 1;
$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9);
i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i5 = i1 - i9;
$d0 = (double) $i5;
$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);
$i6 = (int) $d1;
$i7 = $i6 * i3;
$i8 = $i4 + $i7;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r5;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
i1 = virtualinvoke r3.<java.lang.String: int length()>();
i9 = 1;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 > i1 goto return r5;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 > i1 goto return r5;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i9 - 1;
$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9);
i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i5 = i1 - i9;
$d0 = (double) $i5;
$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);
$i6 = (int) $d1;
$i7 = $i6 * i3;
$i8 = $i4 + $i7;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 > i1 goto return r5;
"->"Block 3:
[preds: 1 ] [succs: ]
return r5;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i2 = i9 - 1;
$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9);
i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
$i5 = i1 - i9;
$d0 = (double) $i5;
$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);
$i6 = (int) $d1;
$i7 = $i6 * i3;
$i8 = $i4 + $i7;
r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i9 > i1 goto return r5;
";
}
