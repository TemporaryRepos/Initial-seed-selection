digraph "unitGraph" {
    "i3 := @parameter0: int"
    "r0 := @parameter1: int[][]"
    "r1 = r0"
    "i0 = lengthof r1"
    "i4 = 0"
    "if i4 >= i0 goto return 0"
    "r2 = r1[i4]"
    "r3 = r2"
    "i1 = lengthof r3"
    "i5 = 0"
    "if i5 >= i1 goto i4 = i4 + 1"
    "i2 = r3[i5]"
    "if i2 != i3 goto i5 = i5 + 1"
    "return 1"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "i4 = i4 + 1"
    "return 0"
    "i3 := @parameter0: int"->"r0 := @parameter1: int[][]";
    "r0 := @parameter1: int[][]"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto return 0";
    "if i4 >= i0 goto return 0"->"r2 = r1[i4]";
    "if i4 >= i0 goto return 0"->"return 0";
    "r2 = r1[i4]"->"r3 = r2";
    "r3 = r2"->"i1 = lengthof r3";
    "i1 = lengthof r3"->"i5 = 0";
    "i5 = 0"->"if i5 >= i1 goto i4 = i4 + 1";
    "if i5 >= i1 goto i4 = i4 + 1"->"i2 = r3[i5]";
    "if i5 >= i1 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "i2 = r3[i5]"->"if i2 != i3 goto i5 = i5 + 1";
    "if i2 != i3 goto i5 = i5 + 1"->"return 1";
    "if i2 != i3 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i1 goto i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto return 0";
}
