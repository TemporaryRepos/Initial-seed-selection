digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "r1 := @parameter2: int[]"
    "i7 = 0"
    "if i7 >= i0 goto return 0"
    "$i1 = r0[i7]"
    "if $i1 == i7 goto i7 = i7 + 1"
    "$i2 = r0[i7]"
    "$i4 = r0[$i2]"
    "$i3 = r0[i7]"
    "if $i4 != $i3 goto $i5 = r0[i7]"
    "$i6 = r0[i7]"
    "r1[0] = $i6"
    "return 1"
    "$i5 = r0[i7]"
    "staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5)"
    "goto [?= $i1 = r0[i7]]"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "return 0"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r1 := @parameter2: int[]";
    "r1 := @parameter2: int[]"->"i7 = 0";
    "i7 = 0"->"if i7 >= i0 goto return 0";
    "if i7 >= i0 goto return 0"->"$i1 = r0[i7]";
    "if i7 >= i0 goto return 0"->"return 0";
    "$i1 = r0[i7]"->"if $i1 == i7 goto i7 = i7 + 1";
    "if $i1 == i7 goto i7 = i7 + 1"->"$i2 = r0[i7]";
    "if $i1 == i7 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$i2 = r0[i7]"->"$i4 = r0[$i2]";
    "$i4 = r0[$i2]"->"$i3 = r0[i7]";
    "$i3 = r0[i7]"->"if $i4 != $i3 goto $i5 = r0[i7]";
    "if $i4 != $i3 goto $i5 = r0[i7]"->"$i6 = r0[i7]";
    "if $i4 != $i3 goto $i5 = r0[i7]"->"$i5 = r0[i7]";
    "$i6 = r0[i7]"->"r1[0] = $i6";
    "r1[0] = $i6"->"return 1";
    "$i5 = r0[i7]"->"staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5)";
    "staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void swap(int[],int,int)>(r0, i7, $i5)"->"goto [?= $i1 = r0[i7]]";
    "goto [?= $i1 = r0[i7]]"->"$i1 = r0[i7]";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i0 goto return 0";
}
