digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i6 = 1"
    "i0 = lengthof r0"
    "if i6 >= i0 goto return r0"
    "i1 = r0[i6]"
    "i7 = i6 - 1"
    "if i7 < 0 goto $i2 = i7 + 1"
    "$i3 = r0[i7]"
    "if $i3 <= i1 goto $i2 = i7 + 1"
    "$i5 = i7 + 1"
    "$i4 = r0[i7]"
    "r0[$i5] = $i4"
    "i7 = i7 + -1"
    "goto [?= (branch)]"
    "$i2 = i7 + 1"
    "r0[$i2] = i1"
    "i6 = i6 + 1"
    "return r0"
    "r0 := @parameter0: int[]"->"i6 = 1";
    "i6 = 1"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"if i6 >= i0 goto return r0";
    "if i6 >= i0 goto return r0"->"i1 = r0[i6]";
    "if i6 >= i0 goto return r0"->"return r0";
    "i1 = r0[i6]"->"i7 = i6 - 1";
    "i7 = i6 - 1"->"if i7 < 0 goto $i2 = i7 + 1";
    "if i7 < 0 goto $i2 = i7 + 1"->"$i3 = r0[i7]";
    "if i7 < 0 goto $i2 = i7 + 1"->"$i2 = i7 + 1";
    "$i3 = r0[i7]"->"if $i3 <= i1 goto $i2 = i7 + 1";
    "if $i3 <= i1 goto $i2 = i7 + 1"->"$i5 = i7 + 1";
    "if $i3 <= i1 goto $i2 = i7 + 1"->"$i2 = i7 + 1";
    "$i5 = i7 + 1"->"$i4 = r0[i7]";
    "$i4 = r0[i7]"->"r0[$i5] = $i4";
    "r0[$i5] = $i4"->"i7 = i7 + -1";
    "i7 = i7 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 0 goto $i2 = i7 + 1";
    "$i2 = i7 + 1"->"r0[$i2] = i1";
    "r0[$i2] = i1"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i0 goto return r0";
}
