digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"-\")"
    "i0 = lengthof r1"
    "i1 = 0"
    "if i1 >= i0 goto return 1"
    "r2 = r1[i1]"
    "$r3 = <com.pancm.utils.IPWhiteCheck: java.util.regex.Pattern pattern>"
    "$r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)"
    "$z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>()"
    "if $z0 != 0 goto i1 = i1 + 1"
    "return 0"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return 1"
    "r0 := @parameter0: java.lang.String"->"r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"-\")";
    "r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"-\")"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return 1";
    "if i1 >= i0 goto return 1"->"r2 = r1[i1]";
    "if i1 >= i0 goto return 1"->"return 1";
    "r2 = r1[i1]"->"$r3 = <com.pancm.utils.IPWhiteCheck: java.util.regex.Pattern pattern>";
    "$r3 = <com.pancm.utils.IPWhiteCheck: java.util.regex.Pattern pattern>"->"$r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)";
    "$r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)"->"$z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>()";
    "$z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>()"->"if $z0 != 0 goto i1 = i1 + 1";
    "if $z0 != 0 goto i1 = i1 + 1"->"return 0";
    "if $z0 != 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return 1";
}
