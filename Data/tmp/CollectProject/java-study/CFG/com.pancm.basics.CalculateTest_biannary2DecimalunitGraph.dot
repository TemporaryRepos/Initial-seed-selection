digraph "unitGraph" {
    "i0 := @parameter0: int"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "i1 = virtualinvoke r3.<java.lang.String: int length()>()"
    "i9 = 1"
    "if i9 > i1 goto return r5"
    "$i2 = i9 - 1"
    "$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9)"
    "i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4)"
    "$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"
    "$i5 = i1 - i9"
    "$d0 = (double) $i5"
    "$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0)"
    "$i6 = (int) $d1"
    "$i7 = $i6 * i3"
    "$i8 = $i4 + $i7"
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)"
    "i9 = i9 + 1"
    "goto [?= (branch)]"
    "return r5"
    "i0 := @parameter0: int"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"i1 = virtualinvoke r3.<java.lang.String: int length()>()";
    "i1 = virtualinvoke r3.<java.lang.String: int length()>()"->"i9 = 1";
    "i9 = 1"->"if i9 > i1 goto return r5";
    "if i9 > i1 goto return r5"->"$i2 = i9 - 1";
    "if i9 > i1 goto return r5"->"return r5";
    "$i2 = i9 - 1"->"$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9)";
    "$r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i9)"->"i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4)";
    "i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4)"->"$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>()"->"$i5 = i1 - i9";
    "$i5 = i1 - i9"->"$d0 = (double) $i5";
    "$d0 = (double) $i5"->"$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0)";
    "$d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0)"->"$i6 = (int) $d1";
    "$i6 = (int) $d1"->"$i7 = $i6 * i3";
    "$i7 = $i6 * i3"->"$i8 = $i4 + $i7";
    "$i8 = $i4 + $i7"->"r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)";
    "r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 > i1 goto return r5";
}
