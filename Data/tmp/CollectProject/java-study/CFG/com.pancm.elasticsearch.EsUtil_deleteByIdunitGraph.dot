digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "r2 := @parameter2: java.lang.String"
    "if r0 == null goto return 1"
    "if r1 == null goto return 1"
    "if r2 != null goto $r3 = new org.elasticsearch.action.delete.DeleteRequest"
    "return 1"
    "$r3 = new org.elasticsearch.action.delete.DeleteRequest"
    "specialinvoke $r3.<org.elasticsearch.action.delete.DeleteRequest: void <init>()>()"
    "r4 = $r3"
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest id(java.lang.String)>(r2)"
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.support.replication.ReplicationRequest index(java.lang.String)>(r0)"
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest type(java.lang.String)>(r1)"
    "$r9 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "$r8 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"
    "virtualinvoke $r9.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.delete.DeleteResponse delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.client.RequestOptions)>(r4, $r8)"
    "$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z0 == 0 goto return 1"
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"
    "goto [?= return 1]"
    "$r11 := @caughtexception"
    "r12 = $r11"
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z1 == 0 goto throw r12"
    "throw r12"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"r2 := @parameter2: java.lang.String";
    "r2 := @parameter2: java.lang.String"->"if r0 == null goto return 1";
    "if r0 == null goto return 1"->"if r1 == null goto return 1";
    "if r0 == null goto return 1"->"return 1";
    "if r1 == null goto return 1"->"if r2 != null goto $r3 = new org.elasticsearch.action.delete.DeleteRequest";
    "if r1 == null goto return 1"->"return 1";
    "if r2 != null goto $r3 = new org.elasticsearch.action.delete.DeleteRequest"->"return 1";
    "if r2 != null goto $r3 = new org.elasticsearch.action.delete.DeleteRequest"->"$r3 = new org.elasticsearch.action.delete.DeleteRequest";
    "if r2 != null goto $r3 = new org.elasticsearch.action.delete.DeleteRequest"->"$r11 := @caughtexception";
    "$r3 = new org.elasticsearch.action.delete.DeleteRequest"->"specialinvoke $r3.<org.elasticsearch.action.delete.DeleteRequest: void <init>()>()";
    "$r3 = new org.elasticsearch.action.delete.DeleteRequest"->"$r11 := @caughtexception";
    "specialinvoke $r3.<org.elasticsearch.action.delete.DeleteRequest: void <init>()>()"->"r4 = $r3";
    "specialinvoke $r3.<org.elasticsearch.action.delete.DeleteRequest: void <init>()>()"->"$r11 := @caughtexception";
    "r4 = $r3"->"virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest id(java.lang.String)>(r2)";
    "r4 = $r3"->"$r11 := @caughtexception";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest id(java.lang.String)>(r2)"->"virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.support.replication.ReplicationRequest index(java.lang.String)>(r0)";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest id(java.lang.String)>(r2)"->"$r11 := @caughtexception";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.support.replication.ReplicationRequest index(java.lang.String)>(r0)"->"virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest type(java.lang.String)>(r1)";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.support.replication.ReplicationRequest index(java.lang.String)>(r0)"->"$r11 := @caughtexception";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest type(java.lang.String)>(r1)"->"$r9 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "virtualinvoke r4.<org.elasticsearch.action.delete.DeleteRequest: org.elasticsearch.action.delete.DeleteRequest type(java.lang.String)>(r1)"->"$r11 := @caughtexception";
    "$r9 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r8 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>";
    "$r9 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r11 := @caughtexception";
    "$r8 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"virtualinvoke $r9.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.delete.DeleteResponse delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.client.RequestOptions)>(r4, $r8)";
    "$r8 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"$r11 := @caughtexception";
    "virtualinvoke $r9.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.delete.DeleteResponse delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.client.RequestOptions)>(r4, $r8)"->"$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "virtualinvoke $r9.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.delete.DeleteResponse delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.client.RequestOptions)>(r4, $r8)"->"$r11 := @caughtexception";
    "$z0 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z0 == 0 goto return 1";
    "if $z0 == 0 goto return 1"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z0 == 0 goto return 1"->"return 1";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"goto [?= return 1]";
    "goto [?= return 1]"->"return 1";
    "$r11 := @caughtexception"->"r12 = $r11";
    "$r11 := @caughtexception"->"$r11 := @caughtexception";
    "r12 = $r11"->"$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "r12 = $r11"->"$r11 := @caughtexception";
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z1 == 0 goto throw r12";
    "if $z1 == 0 goto throw r12"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z1 == 0 goto throw r12"->"throw r12";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"throw r12";
}
