digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
$r0 = <com.pancm.basics.MapTest: java.util.Map map>;
if $r0 == null goto $r1 = new java.util.HashMap;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = <com.pancm.basics.MapTest: java.util.Map map>;
$z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();
if $z0 == 0 goto $r3 = <com.pancm.basics.MapTest: java.util.Map map>;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
<com.pancm.basics.MapTest: java.util.Map map> = $r1;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r3 = <com.pancm.basics.MapTest: java.util.Map map>;
return $r3;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
$r0 = <com.pancm.basics.MapTest: java.util.Map map>;
if $r0 == null goto $r1 = new java.util.HashMap;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = <com.pancm.basics.MapTest: java.util.Map map>;
$z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();
if $z0 == 0 goto $r3 = <com.pancm.basics.MapTest: java.util.Map map>;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
$r0 = <com.pancm.basics.MapTest: java.util.Map map>;
if $r0 == null goto $r1 = new java.util.HashMap;
"->"Block 2:
[preds: 0 1 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
<com.pancm.basics.MapTest: java.util.Map map> = $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = <com.pancm.basics.MapTest: java.util.Map map>;
$z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();
if $z0 == 0 goto $r3 = <com.pancm.basics.MapTest: java.util.Map map>;
"->"Block 2:
[preds: 0 1 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
<com.pancm.basics.MapTest: java.util.Map map> = $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = <com.pancm.basics.MapTest: java.util.Map map>;
$z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();
if $z0 == 0 goto $r3 = <com.pancm.basics.MapTest: java.util.Map map>;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r3 = <com.pancm.basics.MapTest: java.util.Map map>;
return $r3;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
<com.pancm.basics.MapTest: java.util.Map map> = $r1;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r3 = <com.pancm.basics.MapTest: java.util.Map map>;
return $r3;
";
}
