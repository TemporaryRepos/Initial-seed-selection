digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"\u4f60\u597d,java\";
$r1 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(\",\");
$r2 = virtualinvoke $r1.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);
r17 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"s:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
$r4 = virtualinvoke $r3.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);
r19 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r5 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
r20 = (java.lang.String) $r5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"d:\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"\u4f60\u597d,java\";
$r1 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(\",\");
$r2 = virtualinvoke $r1.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);
r17 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"s:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
$r4 = virtualinvoke $r3.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);
r19 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"s:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter fixedLength(int)>(2);
$r4 = virtualinvoke $r3.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);
r19 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r5 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
r20 = (java.lang.String) $r5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"d:\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r5 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
r20 = (java.lang.String) $r5;
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"d:\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return;
";
}
