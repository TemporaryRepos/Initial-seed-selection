digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"_doc\";
r1 = \"test1\";
$r2 = new org.elasticsearch.action.search.SearchRequest;
$r3 = newarray (java.lang.String)[1];
$r3[0] = r1;
specialinvoke $r2.<org.elasticsearch.action.search.SearchRequest: void <init>(java.lang.String[])>($r3);
r4 = $r2;
$r5 = newarray (java.lang.String)[1];
$r5[0] = r0;
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest types(java.lang.String[])>($r5);
$r7 = new org.elasticsearch.search.builder.SearchSourceBuilder;
specialinvoke $r7.<org.elasticsearch.search.builder.SearchSourceBuilder: void <init>()>();
r8 = $r7;
$r9 = staticinvoke <org.elasticsearch.index.query.QueryBuilders: org.elasticsearch.index.query.TermQueryBuilder termQuery(java.lang.String,java.lang.String)>(\"uid\", \"1234\");
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder query(org.elasticsearch.index.query.QueryBuilder)>($r9);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder 'from'(int)>(0);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder size(int)>(5);
$r13 = new org.elasticsearch.common.unit.TimeValue;
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
specialinvoke $r13.<org.elasticsearch.common.unit.TimeValue: void <init>(long,java.util.concurrent.TimeUnit)>(60L, $r14);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder timeout(org.elasticsearch.common.unit.TimeValue)>($r13);
$r16 = staticinvoke <org.elasticsearch.action.support.IndicesOptions: org.elasticsearch.action.support.IndicesOptions lenientExpandOpen()>();
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest indicesOptions(org.elasticsearch.action.support.IndicesOptions)>($r16);
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest preference(java.lang.String)>(\"_local\");
$r19 = newarray (java.lang.String)[3];
$r19[0] = \"title\";
$r19[1] = \"user\";
$r19[2] = \"innerObject.*\";
r20 = $r19;
$r21 = newarray (java.lang.String)[1];
$r21[0] = \"_type\";
r22 = $r21;
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest source(org.elasticsearch.search.builder.SearchSourceBuilder)>(r8);
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u666e\u901a\u67e5\u8be2\u7684DSL\u8bed\u53e5:\");
$r27 = virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: java.lang.String toString()>();
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);
$r31 = <com.pancm.elasticsearch.EsHighLevelRestSearchTest: org.elasticsearch.client.RestHighLevelClient client>;
$r30 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>;
r32 = virtualinvoke $r31.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.search.SearchResponse search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.client.RequestOptions)>(r4, $r30);
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.rest.RestStatus status()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.common.unit.TimeValue getTook()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: java.lang.Boolean isTerminatedEarly()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: boolean isTimedOut()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getTotalShards()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getSuccessfulShards()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getFailedShards()>();
r36 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.action.search.ShardSearchFailure[] getShardFailures()>();
i3 = lengthof r36;
i4 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto $r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r40 = r36[i4];
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
$r38 = staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest$lambda_genSearch_6__163: java.util.function.Consumer bootstrap$()>();
virtualinvoke $r37.<org.elasticsearch.search.SearchHits: void forEach(java.util.function.Consumer)>($r38);
$r39 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>(\"\n=================\n\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 = \"_doc\";
r1 = \"test1\";
$r2 = new org.elasticsearch.action.search.SearchRequest;
$r3 = newarray (java.lang.String)[1];
$r3[0] = r1;
specialinvoke $r2.<org.elasticsearch.action.search.SearchRequest: void <init>(java.lang.String[])>($r3);
r4 = $r2;
$r5 = newarray (java.lang.String)[1];
$r5[0] = r0;
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest types(java.lang.String[])>($r5);
$r7 = new org.elasticsearch.search.builder.SearchSourceBuilder;
specialinvoke $r7.<org.elasticsearch.search.builder.SearchSourceBuilder: void <init>()>();
r8 = $r7;
$r9 = staticinvoke <org.elasticsearch.index.query.QueryBuilders: org.elasticsearch.index.query.TermQueryBuilder termQuery(java.lang.String,java.lang.String)>(\"uid\", \"1234\");
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder query(org.elasticsearch.index.query.QueryBuilder)>($r9);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder 'from'(int)>(0);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder size(int)>(5);
$r13 = new org.elasticsearch.common.unit.TimeValue;
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
specialinvoke $r13.<org.elasticsearch.common.unit.TimeValue: void <init>(long,java.util.concurrent.TimeUnit)>(60L, $r14);
virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: org.elasticsearch.search.builder.SearchSourceBuilder timeout(org.elasticsearch.common.unit.TimeValue)>($r13);
$r16 = staticinvoke <org.elasticsearch.action.support.IndicesOptions: org.elasticsearch.action.support.IndicesOptions lenientExpandOpen()>();
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest indicesOptions(org.elasticsearch.action.support.IndicesOptions)>($r16);
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest preference(java.lang.String)>(\"_local\");
$r19 = newarray (java.lang.String)[3];
$r19[0] = \"title\";
$r19[1] = \"user\";
$r19[2] = \"innerObject.*\";
r20 = $r19;
$r21 = newarray (java.lang.String)[1];
$r21[0] = \"_type\";
r22 = $r21;
virtualinvoke r4.<org.elasticsearch.action.search.SearchRequest: org.elasticsearch.action.search.SearchRequest source(org.elasticsearch.search.builder.SearchSourceBuilder)>(r8);
$r25 = <java.lang.System: java.io.PrintStream out>;
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u666e\u901a\u67e5\u8be2\u7684DSL\u8bed\u53e5:\");
$r27 = virtualinvoke r8.<org.elasticsearch.search.builder.SearchSourceBuilder: java.lang.String toString()>();
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);
$r31 = <com.pancm.elasticsearch.EsHighLevelRestSearchTest: org.elasticsearch.client.RestHighLevelClient client>;
$r30 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>;
r32 = virtualinvoke $r31.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.action.search.SearchResponse search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.client.RequestOptions)>(r4, $r30);
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.rest.RestStatus status()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.common.unit.TimeValue getTook()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: java.lang.Boolean isTerminatedEarly()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: boolean isTimedOut()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getTotalShards()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getSuccessfulShards()>();
virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: int getFailedShards()>();
r36 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.action.search.ShardSearchFailure[] getShardFailures()>();
i3 = lengthof r36;
i4 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto $r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto $r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r40 = r36[i4];
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto $r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
"->"Block 3:
[preds: 1 ] [succs: ]
$r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
$r38 = staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest$lambda_genSearch_6__163: java.util.function.Consumer bootstrap$()>();
virtualinvoke $r37.<org.elasticsearch.search.SearchHits: void forEach(java.util.function.Consumer)>($r38);
$r39 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>(\"\n=================\n\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r40 = r36[i4];
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i3 goto $r37 = virtualinvoke r32.<org.elasticsearch.action.search.SearchResponse: org.elasticsearch.search.SearchHits getHits()>();
";
}
