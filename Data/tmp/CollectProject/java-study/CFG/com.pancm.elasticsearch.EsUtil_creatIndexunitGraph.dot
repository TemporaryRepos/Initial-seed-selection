digraph "unitGraph" {
    "r0 := @parameter0: com.pancm.elasticsearch.EsBasicModelConfig"
    "z6 = 1"
    "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"esBasicModelConfig is not null\")"
    "$r2 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getType()>()"
    "$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r2, \"type is not null\")"
    "r4 = (java.lang.String) $r3"
    "$r5 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getIndex()>()"
    "$r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r5, \"index is not null\")"
    "r7 = (java.lang.String) $r6"
    "$z0 = staticinvoke <com.pancm.elasticsearch.EsUtil: boolean exitsIndex(java.lang.String)>(r7)"
    "if $z0 == 0 goto r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()"
    "$r21 = <com.pancm.elasticsearch.EsUtil: org.slf4j.Logger logger>"
    "interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>(\"\u7d22\u5f15\u5e93{}\u5df2\u7ecf\u5b58\u5728!\u65e0\u9700\u5728\u8fdb\u884c\u521b\u5efa!\", r7)"
    "return 1"
    "r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()"
    "r9 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.util.Map getSettings()>()"
    "r10 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getAlias()>()"
    "$r11 = new org.elasticsearch.action.admin.indices.create.CreateIndexRequest"
    "specialinvoke $r11.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: void <init>(java.lang.String)>(r7)"
    "r12 = $r11"
    "$z1 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r8)"
    "if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"
    "$r19 = newarray (java.lang.Object)[1]"
    "$r19[0] = r8"
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest mapping(java.lang.String,java.lang.Object[])>(r4, $r19)"
    "$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"
    "if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest settings(java.util.Map)>(r9)"
    "$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"
    "if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "$r16 = new org.elasticsearch.action.admin.indices.alias.Alias"
    "specialinvoke $r16.<org.elasticsearch.action.admin.indices.alias.Alias: void <init>(java.lang.String)>(r10)"
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest alias(org.elasticsearch.action.admin.indices.alias.Alias)>($r16)"
    "$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "$r14 = virtualinvoke $r13.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"
    "$r15 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"
    "r25 = virtualinvoke $r14.<org.elasticsearch.client.IndicesClient: org.elasticsearch.action.admin.indices.create.CreateIndexResponse create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.client.RequestOptions)>(r12, $r15)"
    "z7 = virtualinvoke r25.<org.elasticsearch.action.admin.indices.create.CreateIndexResponse: boolean isAcknowledged()>()"
    "$z4 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z4 == 0 goto return z7"
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"
    "goto [?= return z7]"
    "$r24 := @caughtexception"
    "r26 = $r24"
    "throw r26"
    "$r22 := @caughtexception"
    "r23 = $r22"
    "$z5 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z5 == 0 goto throw r23"
    "throw r23"
    "return z7"
    "r0 := @parameter0: com.pancm.elasticsearch.EsBasicModelConfig"->"z6 = 1";
    "z6 = 1"->"staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"esBasicModelConfig is not null\")";
    "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"esBasicModelConfig is not null\")"->"$r2 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getType()>()";
    "$r2 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getType()>()"->"$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r2, \"type is not null\")";
    "$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r2, \"type is not null\")"->"r4 = (java.lang.String) $r3";
    "r4 = (java.lang.String) $r3"->"$r5 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getIndex()>()";
    "$r5 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getIndex()>()"->"$r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r5, \"index is not null\")";
    "$r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r5, \"index is not null\")"->"r7 = (java.lang.String) $r6";
    "r7 = (java.lang.String) $r6"->"$z0 = staticinvoke <com.pancm.elasticsearch.EsUtil: boolean exitsIndex(java.lang.String)>(r7)";
    "$z0 = staticinvoke <com.pancm.elasticsearch.EsUtil: boolean exitsIndex(java.lang.String)>(r7)"->"if $z0 == 0 goto r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()";
    "if $z0 == 0 goto r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()"->"$r21 = <com.pancm.elasticsearch.EsUtil: org.slf4j.Logger logger>";
    "if $z0 == 0 goto r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()"->"r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()";
    "$r21 = <com.pancm.elasticsearch.EsUtil: org.slf4j.Logger logger>"->"interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>(\"\u7d22\u5f15\u5e93{}\u5df2\u7ecf\u5b58\u5728!\u65e0\u9700\u5728\u8fdb\u884c\u521b\u5efa!\", r7)";
    "interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>(\"\u7d22\u5f15\u5e93{}\u5df2\u7ecf\u5b58\u5728!\u65e0\u9700\u5728\u8fdb\u884c\u521b\u5efa!\", r7)"->"return 1";
    "r8 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getMappings()>()"->"r9 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.util.Map getSettings()>()";
    "r9 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.util.Map getSettings()>()"->"r10 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getAlias()>()";
    "r10 = virtualinvoke r0.<com.pancm.elasticsearch.EsBasicModelConfig: java.lang.String getAlias()>()"->"$r11 = new org.elasticsearch.action.admin.indices.create.CreateIndexRequest";
    "$r11 = new org.elasticsearch.action.admin.indices.create.CreateIndexRequest"->"specialinvoke $r11.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: void <init>(java.lang.String)>(r7)";
    "specialinvoke $r11.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: void <init>(java.lang.String)>(r7)"->"r12 = $r11";
    "r12 = $r11"->"$r24 := @caughtexception";
    "r12 = $r11"->"$r22 := @caughtexception";
    "r12 = $r11"->"$z1 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r8)";
    "$z1 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r8)"->"$r24 := @caughtexception";
    "$z1 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r8)"->"$r22 := @caughtexception";
    "$z1 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r8)"->"if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)";
    "if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$r19 = newarray (java.lang.Object)[1]";
    "if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)";
    "if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$r24 := @caughtexception";
    "if $z1 == 0 goto $z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$r22 := @caughtexception";
    "$r19 = newarray (java.lang.Object)[1]"->"$r24 := @caughtexception";
    "$r19 = newarray (java.lang.Object)[1]"->"$r22 := @caughtexception";
    "$r19 = newarray (java.lang.Object)[1]"->"$r19[0] = r8";
    "$r19[0] = r8"->"$r24 := @caughtexception";
    "$r19[0] = r8"->"$r22 := @caughtexception";
    "$r19[0] = r8"->"virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest mapping(java.lang.String,java.lang.Object[])>(r4, $r19)";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest mapping(java.lang.String,java.lang.Object[])>(r4, $r19)"->"$r24 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest mapping(java.lang.String,java.lang.Object[])>(r4, $r19)"->"$r22 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest mapping(java.lang.String,java.lang.Object[])>(r4, $r19)"->"$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)";
    "$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$r24 := @caughtexception";
    "$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"$r22 := @caughtexception";
    "$z2 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r9)"->"if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)";
    "if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest settings(java.util.Map)>(r9)";
    "if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)";
    "if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"$r24 := @caughtexception";
    "if $z2 == 0 goto $z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"$r22 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest settings(java.util.Map)>(r9)"->"$r24 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest settings(java.util.Map)>(r9)"->"$r22 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest settings(java.util.Map)>(r9)"->"$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)";
    "$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"$r24 := @caughtexception";
    "$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"$r22 := @caughtexception";
    "$z3 = staticinvoke <java.util.Objects: boolean nonNull(java.lang.Object)>(r10)"->"if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r16 = new org.elasticsearch.action.admin.indices.alias.Alias";
    "if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r24 := @caughtexception";
    "if $z3 == 0 goto $r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r22 := @caughtexception";
    "$r16 = new org.elasticsearch.action.admin.indices.alias.Alias"->"$r24 := @caughtexception";
    "$r16 = new org.elasticsearch.action.admin.indices.alias.Alias"->"$r22 := @caughtexception";
    "$r16 = new org.elasticsearch.action.admin.indices.alias.Alias"->"specialinvoke $r16.<org.elasticsearch.action.admin.indices.alias.Alias: void <init>(java.lang.String)>(r10)";
    "specialinvoke $r16.<org.elasticsearch.action.admin.indices.alias.Alias: void <init>(java.lang.String)>(r10)"->"$r24 := @caughtexception";
    "specialinvoke $r16.<org.elasticsearch.action.admin.indices.alias.Alias: void <init>(java.lang.String)>(r10)"->"$r22 := @caughtexception";
    "specialinvoke $r16.<org.elasticsearch.action.admin.indices.alias.Alias: void <init>(java.lang.String)>(r10)"->"virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest alias(org.elasticsearch.action.admin.indices.alias.Alias)>($r16)";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest alias(org.elasticsearch.action.admin.indices.alias.Alias)>($r16)"->"$r24 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest alias(org.elasticsearch.action.admin.indices.alias.Alias)>($r16)"->"$r22 := @caughtexception";
    "virtualinvoke r12.<org.elasticsearch.action.admin.indices.create.CreateIndexRequest: org.elasticsearch.action.admin.indices.create.CreateIndexRequest alias(org.elasticsearch.action.admin.indices.alias.Alias)>($r16)"->"$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r24 := @caughtexception";
    "$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r22 := @caughtexception";
    "$r13 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r14 = virtualinvoke $r13.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()";
    "$r14 = virtualinvoke $r13.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"->"$r24 := @caughtexception";
    "$r14 = virtualinvoke $r13.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"->"$r22 := @caughtexception";
    "$r14 = virtualinvoke $r13.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"->"$r15 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>";
    "$r15 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"$r24 := @caughtexception";
    "$r15 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"$r22 := @caughtexception";
    "$r15 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"r25 = virtualinvoke $r14.<org.elasticsearch.client.IndicesClient: org.elasticsearch.action.admin.indices.create.CreateIndexResponse create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.client.RequestOptions)>(r12, $r15)";
    "r25 = virtualinvoke $r14.<org.elasticsearch.client.IndicesClient: org.elasticsearch.action.admin.indices.create.CreateIndexResponse create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.client.RequestOptions)>(r12, $r15)"->"$r24 := @caughtexception";
    "r25 = virtualinvoke $r14.<org.elasticsearch.client.IndicesClient: org.elasticsearch.action.admin.indices.create.CreateIndexResponse create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.client.RequestOptions)>(r12, $r15)"->"$r22 := @caughtexception";
    "r25 = virtualinvoke $r14.<org.elasticsearch.client.IndicesClient: org.elasticsearch.action.admin.indices.create.CreateIndexResponse create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.client.RequestOptions)>(r12, $r15)"->"z7 = virtualinvoke r25.<org.elasticsearch.action.admin.indices.create.CreateIndexResponse: boolean isAcknowledged()>()";
    "z7 = virtualinvoke r25.<org.elasticsearch.action.admin.indices.create.CreateIndexResponse: boolean isAcknowledged()>()"->"$r24 := @caughtexception";
    "z7 = virtualinvoke r25.<org.elasticsearch.action.admin.indices.create.CreateIndexResponse: boolean isAcknowledged()>()"->"$r22 := @caughtexception";
    "z7 = virtualinvoke r25.<org.elasticsearch.action.admin.indices.create.CreateIndexResponse: boolean isAcknowledged()>()"->"$z4 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "$z4 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z4 == 0 goto return z7";
    "if $z4 == 0 goto return z7"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z4 == 0 goto return z7"->"return z7";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"goto [?= return z7]";
    "goto [?= return z7]"->"return z7";
    "$r24 := @caughtexception"->"r26 = $r24";
    "$r24 := @caughtexception"->"$r22 := @caughtexception";
    "r26 = $r24"->"throw r26";
    "r26 = $r24"->"$r22 := @caughtexception";
    "throw r26"->"$r22 := @caughtexception";
    "$r22 := @caughtexception"->"r23 = $r22";
    "$r22 := @caughtexception"->"$r22 := @caughtexception";
    "r23 = $r22"->"$z5 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "r23 = $r22"->"$r22 := @caughtexception";
    "$z5 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z5 == 0 goto throw r23";
    "if $z5 == 0 goto throw r23"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z5 == 0 goto throw r23"->"throw r23";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"throw r23";
}
