digraph "unitGraph" {
    "i1 := @parameter0: int"
    "r3 = \"\""
    "if i1 <= 0 goto return r3"
    "i0 = i1 % 2"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i1 = i1 / 2"
    "goto [?= (branch)]"
    "return r3"
    "i1 := @parameter0: int"->"r3 = \"\"";
    "r3 = \"\""->"if i1 <= 0 goto return r3";
    "if i1 <= 0 goto return r3"->"i0 = i1 % 2";
    "if i1 <= 0 goto return r3"->"return r3";
    "i0 = i1 % 2"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"i1 = i1 / 2";
    "i1 = i1 / 2"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 <= 0 goto return r3";
}
