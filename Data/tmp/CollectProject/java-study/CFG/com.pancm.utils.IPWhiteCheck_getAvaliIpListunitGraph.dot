digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "$r0 = new java.util.HashSet"
    "specialinvoke $r0.<java.util.HashSet: void <init>()>()"
    "r1 = $r0"
    "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\s\", \"\")"
    "r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"
    "i0 = lengthof r4"
    "i8 = 0"
    "if i8 >= i0 goto return r1"
    "r5 = r4[i8]"
    "$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\")"
    "if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)"
    "r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")"
    "$r7 = newarray (java.lang.String)[4]"
    "$r7[0] = \"0\""
    "$r7[1] = \"0\""
    "$r7[2] = \"0\""
    "$r7[3] = \"0\""
    "r8 = $r7"
    "$r9 = newarray (java.lang.String)[4]"
    "$r9[0] = \"255\""
    "$r9[1] = \"255\""
    "$r9[2] = \"255\""
    "$r9[3] = \"255\""
    "r10 = $r9"
    "$r11 = new java.util.ArrayList"
    "specialinvoke $r11.<java.util.ArrayList: void <init>()>()"
    "r45 = $r11"
    "i9 = 0"
    "$i2 = lengthof r6"
    "if i9 >= $i2 goto $r12 = new java.lang.StringBuffer"
    "$r41 = r6[i9]"
    "$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\")"
    "if $i7 <= -1 goto $r42 = r6[i9]"
    "$r44 = r6[i9]"
    "r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44)"
    "r8[i9] = null"
    "r10[i9] = null"
    "goto [?= i9 = i9 + 1]"
    "$r42 = r6[i9]"
    "r8[i9] = $r42"
    "$r43 = r6[i9]"
    "r10[i9] = $r43"
    "i9 = i9 + 1"
    "goto [?= $i2 = lengthof r6]"
    "$r12 = new java.lang.StringBuffer"
    "specialinvoke $r12.<java.lang.StringBuffer: void <init>()>()"
    "r46 = $r12"
    "$r13 = new java.lang.StringBuffer"
    "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()"
    "r14 = $r13"
    "i10 = 0"
    "if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()"
    "$r32 = r8[i10]"
    "if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"
    "$r35 = r8[i10]"
    "$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35)"
    "virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")"
    "$r38 = r10[i10]"
    "$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38)"
    "virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")"
    "goto [?= i10 = i10 + 1]"
    "virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"
    "virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"
    "i10 = i10 + 1"
    "goto [?= (branch)]"
    "$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()"
    "$i4 = $i3 - 1"
    "virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4)"
    "$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>()"
    "$i6 = $i5 - 1"
    "virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6)"
    "r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto (branch)"
    "$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()"
    "r18 = (java.lang.String) $r17"
    "$r19 = new java.lang.StringBuilder"
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"
    "$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"
    "$r22 = $r21[0]"
    "$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22)"
    "$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")"
    "$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"
    "$r28 = $r27[1]"
    "$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28)"
    "$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"
    "r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31)"
    "if $z3 == 0 goto (branch)"
    "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31)"
    "goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= i8 = i8 + 1]"
    "$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)"
    "if $z0 == 0 goto i8 = i8 + 1"
    "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5)"
    "i8 = i8 + 1"
    "return r1"
    "r2 := @parameter0: java.lang.String"->"$r0 = new java.util.HashSet";
    "$r0 = new java.util.HashSet"->"specialinvoke $r0.<java.util.HashSet: void <init>()>()";
    "specialinvoke $r0.<java.util.HashSet: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\s\", \"\")";
    "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\s\", \"\")"->"r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")";
    "r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"->"i0 = lengthof r4";
    "i0 = lengthof r4"->"i8 = 0";
    "i8 = 0"->"if i8 >= i0 goto return r1";
    "if i8 >= i0 goto return r1"->"r5 = r4[i8]";
    "if i8 >= i0 goto return r1"->"return r1";
    "r5 = r4[i8]"->"$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\")";
    "$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\")"->"if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)";
    "if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)"->"r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")";
    "if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)"->"$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)";
    "r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")"->"$r7 = newarray (java.lang.String)[4]";
    "$r7 = newarray (java.lang.String)[4]"->"$r7[0] = \"0\"";
    "$r7[0] = \"0\""->"$r7[1] = \"0\"";
    "$r7[1] = \"0\""->"$r7[2] = \"0\"";
    "$r7[2] = \"0\""->"$r7[3] = \"0\"";
    "$r7[3] = \"0\""->"r8 = $r7";
    "r8 = $r7"->"$r9 = newarray (java.lang.String)[4]";
    "$r9 = newarray (java.lang.String)[4]"->"$r9[0] = \"255\"";
    "$r9[0] = \"255\""->"$r9[1] = \"255\"";
    "$r9[1] = \"255\""->"$r9[2] = \"255\"";
    "$r9[2] = \"255\""->"$r9[3] = \"255\"";
    "$r9[3] = \"255\""->"r10 = $r9";
    "r10 = $r9"->"$r11 = new java.util.ArrayList";
    "$r11 = new java.util.ArrayList"->"specialinvoke $r11.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r11.<java.util.ArrayList: void <init>()>()"->"r45 = $r11";
    "r45 = $r11"->"i9 = 0";
    "i9 = 0"->"$i2 = lengthof r6";
    "$i2 = lengthof r6"->"if i9 >= $i2 goto $r12 = new java.lang.StringBuffer";
    "if i9 >= $i2 goto $r12 = new java.lang.StringBuffer"->"$r41 = r6[i9]";
    "if i9 >= $i2 goto $r12 = new java.lang.StringBuffer"->"$r12 = new java.lang.StringBuffer";
    "$r41 = r6[i9]"->"$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\")";
    "$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\")"->"if $i7 <= -1 goto $r42 = r6[i9]";
    "if $i7 <= -1 goto $r42 = r6[i9]"->"$r44 = r6[i9]";
    "if $i7 <= -1 goto $r42 = r6[i9]"->"$r42 = r6[i9]";
    "$r44 = r6[i9]"->"r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44)";
    "r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44)"->"r8[i9] = null";
    "r8[i9] = null"->"r10[i9] = null";
    "r10[i9] = null"->"goto [?= i9 = i9 + 1]";
    "goto [?= i9 = i9 + 1]"->"i9 = i9 + 1";
    "$r42 = r6[i9]"->"r8[i9] = $r42";
    "r8[i9] = $r42"->"$r43 = r6[i9]";
    "$r43 = r6[i9]"->"r10[i9] = $r43";
    "r10[i9] = $r43"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i2 = lengthof r6]";
    "goto [?= $i2 = lengthof r6]"->"$i2 = lengthof r6";
    "$r12 = new java.lang.StringBuffer"->"specialinvoke $r12.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuffer: void <init>()>()"->"r46 = $r12";
    "r46 = $r12"->"$r13 = new java.lang.StringBuffer";
    "$r13 = new java.lang.StringBuffer"->"specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()"->"r14 = $r13";
    "r14 = $r13"->"i10 = 0";
    "i10 = 0"->"if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()";
    "if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()"->"$r32 = r8[i10]";
    "if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()"->"$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()";
    "$r32 = r8[i10]"->"if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")";
    "if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"->"$r35 = r8[i10]";
    "if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"->"virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")";
    "$r35 = r8[i10]"->"$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35)";
    "$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35)"->"virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")";
    "virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")"->"$r38 = r10[i10]";
    "$r38 = r10[i10]"->"$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38)";
    "$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38)"->"virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")";
    "virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\")"->"goto [?= i10 = i10 + 1]";
    "goto [?= i10 = i10 + 1]"->"i10 = i10 + 1";
    "virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"->"virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")";
    "virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\")"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()";
    "$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>()"->"$i4 = $i3 - 1";
    "$i4 = $i3 - 1"->"virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4)";
    "virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4)"->"$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>()";
    "$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>()"->"$i6 = $i5 - 1";
    "$i6 = $i5 - 1"->"virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6)";
    "virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6)"->"r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()";
    "r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto (branch)"->"goto [?= i8 = i8 + 1]";
    "$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()"->"r18 = (java.lang.String) $r17";
    "r18 = (java.lang.String) $r17"->"$r19 = new java.lang.StringBuilder";
    "$r19 = new java.lang.StringBuilder"->"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"->"$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")";
    "$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"->"$r22 = $r21[0]";
    "$r22 = $r21[0]"->"$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22)";
    "$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22)"->"$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)";
    "$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")"->"$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")";
    "$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\")"->"$r28 = $r27[1]";
    "$r28 = $r27[1]"->"$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28)";
    "$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28)"->"$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)";
    "$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)"->"r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()"->"$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31)";
    "$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31)"->"if $z3 == 0 goto (branch)";
    "if $z3 == 0 goto (branch)"->"interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31)";
    "if $z3 == 0 goto (branch)"->"goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]";
    "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31)"->"goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5)"->"if $z0 == 0 goto i8 = i8 + 1";
    "if $z0 == 0 goto i8 = i8 + 1"->"interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5)";
    "if $z0 == 0 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= i0 goto return r1";
}
