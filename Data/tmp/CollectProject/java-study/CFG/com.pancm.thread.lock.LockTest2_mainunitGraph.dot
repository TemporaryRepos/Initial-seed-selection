digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new com.pancm.thread.lock.LockTest2"
    "specialinvoke $r0.<com.pancm.thread.lock.LockTest2: void <init>()>()"
    "r1 = $r0"
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "virtualinvoke r1.<com.pancm.thread.lock.LockTest2: void put(java.lang.Object)>(r2)"
    "specialinvoke r1.<com.pancm.thread.lock.LockTest2: java.lang.Object take()>()"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new com.pancm.thread.lock.LockTest2";
    "$r0 = new com.pancm.thread.lock.LockTest2"->"specialinvoke $r0.<com.pancm.thread.lock.LockTest2: void <init>()>()";
    "specialinvoke $r0.<com.pancm.thread.lock.LockTest2: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"virtualinvoke r1.<com.pancm.thread.lock.LockTest2: void put(java.lang.Object)>(r2)";
    "virtualinvoke r1.<com.pancm.thread.lock.LockTest2: void put(java.lang.Object)>(r2)"->"specialinvoke r1.<com.pancm.thread.lock.LockTest2: java.lang.Object take()>()";
    "specialinvoke r1.<com.pancm.thread.lock.LockTest2: java.lang.Object take()>()"->"return";
}
