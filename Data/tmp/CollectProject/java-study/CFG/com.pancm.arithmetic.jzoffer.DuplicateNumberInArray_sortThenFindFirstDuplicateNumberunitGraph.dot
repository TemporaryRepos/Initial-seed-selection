digraph "unitGraph" {
    "r2 := @this: com.pancm.arithmetic.jzoffer.DuplicateNumberInArray"
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "r1 := @parameter2: int[]"
    "if r0 != null goto $i1 = i0 - 1"
    "return 0"
    "$i1 = i0 - 1"
    "staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void quickSort(int[],int,int)>(r0, 0, $i1)"
    "i3 = r0[0]"
    "z0 = 0"
    "i4 = 1"
    "if i4 >= i0 goto return z0"
    "$i2 = r0[i4]"
    "if $i2 != i3 goto i3 = r0[i4]"
    "z0 = 1"
    "r1[0] = i3"
    "goto [?= return z0]"
    "i3 = r0[i4]"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return z0"
    "r2 := @this: com.pancm.arithmetic.jzoffer.DuplicateNumberInArray"->"r0 := @parameter0: int[]";
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r1 := @parameter2: int[]";
    "r1 := @parameter2: int[]"->"if r0 != null goto $i1 = i0 - 1";
    "if r0 != null goto $i1 = i0 - 1"->"return 0";
    "if r0 != null goto $i1 = i0 - 1"->"$i1 = i0 - 1";
    "$i1 = i0 - 1"->"staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void quickSort(int[],int,int)>(r0, 0, $i1)";
    "staticinvoke <com.pancm.arithmetic.jzoffer.DuplicateNumberInArray: void quickSort(int[],int,int)>(r0, 0, $i1)"->"i3 = r0[0]";
    "i3 = r0[0]"->"z0 = 0";
    "z0 = 0"->"i4 = 1";
    "i4 = 1"->"if i4 >= i0 goto return z0";
    "if i4 >= i0 goto return z0"->"$i2 = r0[i4]";
    "if i4 >= i0 goto return z0"->"return z0";
    "$i2 = r0[i4]"->"if $i2 != i3 goto i3 = r0[i4]";
    "if $i2 != i3 goto i3 = r0[i4]"->"z0 = 1";
    "if $i2 != i3 goto i3 = r0[i4]"->"i3 = r0[i4]";
    "z0 = 1"->"r1[0] = i3";
    "r1[0] = i3"->"goto [?= return z0]";
    "goto [?= return z0]"->"return z0";
    "i3 = r0[i4]"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto return z0";
}
