digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 24 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
r3 := @parameter0: java.lang.Object;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"
    "Block 1:
[preds: 0 7 ] [succs: 2 24 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 2:
[preds: 1 ] [succs: 3 24 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 3:
[preds: 2 ] [succs: 4 24 ]
$i0 = lengthof $r2;
"
    "Block 4:
[preds: 3 ] [succs: 5 8 24 ]
if $i1 != $i0 goto $r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 5:
[preds: 4 ] [succs: 6 24 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"
    "Block 6:
[preds: 5 ] [succs: 7 24 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"
    "Block 7:
[preds: 6 ] [succs: 1 24 ]
goto [?= $i1 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"
    "Block 8:
[preds: 4 ] [succs: 9 24 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 9:
[preds: 8 ] [succs: 10 24 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"
    "Block 10:
[preds: 9 ] [succs: 11 24 ]
$r4[$i2] = r3;
"
    "Block 11:
[preds: 10 ] [succs: 12 24 ]
$i3 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"
    "Block 12:
[preds: 11 ] [succs: 13 24 ]
$i4 = $i3 + 1;
"
    "Block 13:
[preds: 12 ] [succs: 14 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = $i4;
"
    "Block 14:
[preds: 13 ] [succs: 15 24 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"
    "Block 15:
[preds: 14 ] [succs: 16 24 ]
$i5 = lengthof $r5;
"
    "Block 16:
[preds: 15 ] [succs: 17 18 24 ]
if $i4 != $i5 goto $i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = 0;
"
    "Block 18:
[preds: 16 17 ] [succs: 19 24 ]
$i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$i7 = $i6 + 1;
"
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i7;
"
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r6 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();
"
    "Block 23:
[preds: 22 ] [succs: 25 ]
$r7 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();
goto [?= return];
"
    "Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
"
    "Block 25:
[preds: 23 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 24 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
r3 := @parameter0: java.lang.Object;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"->"Block 1:
[preds: 0 7 ] [succs: 2 24 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 0:
[preds: ] [succs: 1 24 ]
r0 := @this: com.pancm.thread.lock.LockTest2;
r3 := @parameter0: java.lang.Object;
$r1 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 24 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 2:
[preds: 1 ] [succs: 3 24 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 24 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 2:
[preds: 1 ] [succs: 3 24 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 3:
[preds: 2 ] [succs: 4 24 ]
$i0 = lengthof $r2;
";
    "Block 2:
[preds: 1 ] [succs: 3 24 ]
$r2 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 3:
[preds: 2 ] [succs: 4 24 ]
$i0 = lengthof $r2;
"->"Block 4:
[preds: 3 ] [succs: 5 8 24 ]
if $i1 != $i0 goto $r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 3:
[preds: 2 ] [succs: 4 24 ]
$i0 = lengthof $r2;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 24 ]
if $i1 != $i0 goto $r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 5:
[preds: 4 ] [succs: 6 24 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 24 ]
if $i1 != $i0 goto $r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 8:
[preds: 4 ] [succs: 9 24 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 24 ]
if $i1 != $i0 goto $r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 5:
[preds: 4 ] [succs: 6 24 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"->"Block 6:
[preds: 5 ] [succs: 7 24 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 24 ]
$r9 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notfull>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 6:
[preds: 5 ] [succs: 7 24 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"->"Block 7:
[preds: 6 ] [succs: 1 24 ]
goto [?= $i1 = r0.<com.pancm.thread.lock.LockTest2: int count>];
";
    "Block 6:
[preds: 5 ] [succs: 7 24 ]
interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void await()>();
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 7:
[preds: 6 ] [succs: 1 24 ]
goto [?= $i1 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"->"Block 1:
[preds: 0 7 ] [succs: 2 24 ]
$i1 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 7:
[preds: 6 ] [succs: 1 24 ]
goto [?= $i1 = r0.<com.pancm.thread.lock.LockTest2: int count>];
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 8:
[preds: 4 ] [succs: 9 24 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 9:
[preds: 8 ] [succs: 10 24 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
";
    "Block 8:
[preds: 4 ] [succs: 9 24 ]
$r4 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 9:
[preds: 8 ] [succs: 10 24 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"->"Block 10:
[preds: 9 ] [succs: 11 24 ]
$r4[$i2] = r3;
";
    "Block 9:
[preds: 8 ] [succs: 10 24 ]
$i2 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 10:
[preds: 9 ] [succs: 11 24 ]
$r4[$i2] = r3;
"->"Block 11:
[preds: 10 ] [succs: 12 24 ]
$i3 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
";
    "Block 10:
[preds: 9 ] [succs: 11 24 ]
$r4[$i2] = r3;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 11:
[preds: 10 ] [succs: 12 24 ]
$i3 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"->"Block 12:
[preds: 11 ] [succs: 13 24 ]
$i4 = $i3 + 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 24 ]
$i3 = r0.<com.pancm.thread.lock.LockTest2: int putptr>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 12:
[preds: 11 ] [succs: 13 24 ]
$i4 = $i3 + 1;
"->"Block 13:
[preds: 12 ] [succs: 14 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = $i4;
";
    "Block 12:
[preds: 11 ] [succs: 13 24 ]
$i4 = $i3 + 1;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 13:
[preds: 12 ] [succs: 14 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = $i4;
"->"Block 14:
[preds: 13 ] [succs: 15 24 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
";
    "Block 13:
[preds: 12 ] [succs: 14 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = $i4;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 14:
[preds: 13 ] [succs: 15 24 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 15:
[preds: 14 ] [succs: 16 24 ]
$i5 = lengthof $r5;
";
    "Block 14:
[preds: 13 ] [succs: 15 24 ]
$r5 = r0.<com.pancm.thread.lock.LockTest2: java.lang.Object[] items>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 15:
[preds: 14 ] [succs: 16 24 ]
$i5 = lengthof $r5;
"->"Block 16:
[preds: 15 ] [succs: 17 18 24 ]
if $i4 != $i5 goto $i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 15:
[preds: 14 ] [succs: 16 24 ]
$i5 = lengthof $r5;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 24 ]
if $i4 != $i5 goto $i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 17:
[preds: 16 ] [succs: 18 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = 0;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 24 ]
if $i4 != $i5 goto $i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 18:
[preds: 16 17 ] [succs: 19 24 ]
$i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 24 ]
if $i4 != $i5 goto $i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = 0;
"->"Block 18:
[preds: 16 17 ] [succs: 19 24 ]
$i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
";
    "Block 17:
[preds: 16 ] [succs: 18 24 ]
r0.<com.pancm.thread.lock.LockTest2: int putptr> = 0;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 24 ]
$i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 19:
[preds: 18 ] [succs: 20 24 ]
$i7 = $i6 + 1;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 24 ]
$i6 = r0.<com.pancm.thread.lock.LockTest2: int count>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$i7 = $i6 + 1;
"->"Block 20:
[preds: 19 ] [succs: 21 24 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i7;
";
    "Block 19:
[preds: 18 ] [succs: 20 24 ]
$i7 = $i6 + 1;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i7;
"->"Block 21:
[preds: 20 ] [succs: 22 24 ]
$r6 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
";
    "Block 20:
[preds: 19 ] [succs: 21 24 ]
r0.<com.pancm.thread.lock.LockTest2: int count> = $i7;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r6 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"->"Block 22:
[preds: 21 ] [succs: 23 24 ]
interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();
";
    "Block 21:
[preds: 20 ] [succs: 22 24 ]
$r6 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Condition notempty>;
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();
"->"Block 23:
[preds: 22 ] [succs: 25 ]
$r7 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();
goto [?= return];
";
    "Block 22:
[preds: 21 ] [succs: 23 24 ]
interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();
"->"Block 24:
[preds: 0 7 1 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ] [succs: ]
$r10 := @caughtexception;
r11 = $r10;
$r12 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();
throw r11;
";
    "Block 23:
[preds: 22 ] [succs: 25 ]
$r7 = r0.<com.pancm.thread.lock.LockTest2: java.util.concurrent.locks.Lock lock>;
interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();
goto [?= return];
"->"Block 25:
[preds: 23 ] [succs: ]
return;
";
}
