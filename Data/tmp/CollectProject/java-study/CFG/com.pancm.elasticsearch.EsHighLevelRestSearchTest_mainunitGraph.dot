digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void init()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void allSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void genSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void orSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void likeSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void existSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void rangeSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void regexpSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void boolSearch()>()"
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"
    "$r0 := @caughtexception"
    "r1 = $r0"
    "throw r1"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"$r0 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void init()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void init()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void init()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void init()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void allSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void allSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void allSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void allSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void genSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void genSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void genSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void genSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void orSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void orSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void orSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void orSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void likeSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void likeSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void likeSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void likeSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void existSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void existSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void existSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void existSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void rangeSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void rangeSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void rangeSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void rangeSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void regexpSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void regexpSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void regexpSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void regexpSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void boolSearch()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void boolSearch()>()"->"$r2 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void boolSearch()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void boolSearch()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r3 = $r2";
    "$r2 := @caughtexception"->"$r0 := @caughtexception";
    "r3 = $r2"->"virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()";
    "r3 = $r2"->"$r0 := @caughtexception";
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()";
    "virtualinvoke r3.<java.lang.Exception: void printStackTrace()>()"->"$r0 := @caughtexception";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r0 := @caughtexception"->"r1 = $r0";
    "r1 = $r0"->"staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()";
    "staticinvoke <com.pancm.elasticsearch.EsHighLevelRestSearchTest: void close()>()"->"throw r1";
}
