digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String"
    "$r0 = new org.elasticsearch.action.admin.indices.get.GetIndexRequest"
    "specialinvoke $r0.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (java.lang.String)[1]"
    "$r2[0] = r3"
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.info.ClusterInfoRequest indices(java.lang.String[])>($r2)"
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.MasterNodeReadRequest local(boolean)>(0)"
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.admin.indices.get.GetIndexRequest humanReadable(boolean)>(1)"
    "$r7 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"
    "$r8 = virtualinvoke $r7.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"
    "$r9 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"
    "z0 = virtualinvoke $r8.<org.elasticsearch.client.IndicesClient: boolean exists(org.elasticsearch.action.admin.indices.get.GetIndexRequest,org.elasticsearch.client.RequestOptions)>(r1, $r9)"
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z1 == 0 goto return z0"
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"
    "return z0"
    "$r10 := @caughtexception"
    "r11 = $r10"
    "$z2 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"
    "if $z2 == 0 goto throw r11"
    "throw r11"
    "r3 := @parameter0: java.lang.String"->"$r0 = new org.elasticsearch.action.admin.indices.get.GetIndexRequest";
    "r3 := @parameter0: java.lang.String"->"$r10 := @caughtexception";
    "$r0 = new org.elasticsearch.action.admin.indices.get.GetIndexRequest"->"specialinvoke $r0.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: void <init>()>()";
    "$r0 = new org.elasticsearch.action.admin.indices.get.GetIndexRequest"->"$r10 := @caughtexception";
    "specialinvoke $r0.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: void <init>()>()"->"r1 = $r0";
    "specialinvoke $r0.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: void <init>()>()"->"$r10 := @caughtexception";
    "r1 = $r0"->"$r2 = newarray (java.lang.String)[1]";
    "r1 = $r0"->"$r10 := @caughtexception";
    "$r2 = newarray (java.lang.String)[1]"->"$r2[0] = r3";
    "$r2 = newarray (java.lang.String)[1]"->"$r10 := @caughtexception";
    "$r2[0] = r3"->"virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.info.ClusterInfoRequest indices(java.lang.String[])>($r2)";
    "$r2[0] = r3"->"$r10 := @caughtexception";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.info.ClusterInfoRequest indices(java.lang.String[])>($r2)"->"virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.MasterNodeReadRequest local(boolean)>(0)";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.info.ClusterInfoRequest indices(java.lang.String[])>($r2)"->"$r10 := @caughtexception";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.MasterNodeReadRequest local(boolean)>(0)"->"virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.admin.indices.get.GetIndexRequest humanReadable(boolean)>(1)";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.support.master.MasterNodeReadRequest local(boolean)>(0)"->"$r10 := @caughtexception";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.admin.indices.get.GetIndexRequest humanReadable(boolean)>(1)"->"$r7 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>";
    "virtualinvoke r1.<org.elasticsearch.action.admin.indices.get.GetIndexRequest: org.elasticsearch.action.admin.indices.get.GetIndexRequest humanReadable(boolean)>(1)"->"$r10 := @caughtexception";
    "$r7 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r8 = virtualinvoke $r7.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()";
    "$r7 = <com.pancm.elasticsearch.EsUtil: org.elasticsearch.client.RestHighLevelClient client>"->"$r10 := @caughtexception";
    "$r8 = virtualinvoke $r7.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"->"$r9 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>";
    "$r8 = virtualinvoke $r7.<org.elasticsearch.client.RestHighLevelClient: org.elasticsearch.client.IndicesClient indices()>()"->"$r10 := @caughtexception";
    "$r9 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"z0 = virtualinvoke $r8.<org.elasticsearch.client.IndicesClient: boolean exists(org.elasticsearch.action.admin.indices.get.GetIndexRequest,org.elasticsearch.client.RequestOptions)>(r1, $r9)";
    "$r9 = <org.elasticsearch.client.RequestOptions: org.elasticsearch.client.RequestOptions DEFAULT>"->"$r10 := @caughtexception";
    "z0 = virtualinvoke $r8.<org.elasticsearch.client.IndicesClient: boolean exists(org.elasticsearch.action.admin.indices.get.GetIndexRequest,org.elasticsearch.client.RequestOptions)>(r1, $r9)"->"$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "z0 = virtualinvoke $r8.<org.elasticsearch.client.IndicesClient: boolean exists(org.elasticsearch.action.admin.indices.get.GetIndexRequest,org.elasticsearch.client.RequestOptions)>(r1, $r9)"->"$r10 := @caughtexception";
    "$z1 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z1 == 0 goto return z0";
    "if $z1 == 0 goto return z0"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z1 == 0 goto return z0"->"return z0";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"return z0";
    "$r10 := @caughtexception"->"r11 = $r10";
    "r11 = $r10"->"$z2 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>";
    "$z2 = <com.pancm.elasticsearch.EsUtil: boolean isAutoClose>"->"if $z2 == 0 goto throw r11";
    "if $z2 == 0 goto throw r11"->"staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()";
    "if $z2 == 0 goto throw r11"->"throw r11";
    "staticinvoke <com.pancm.elasticsearch.EsUtil: void close()>()"->"throw r11";
}
