digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
if r0 == null goto return 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if r1 != null goto $r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return 0;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);
z0 = 0;
r4 = r3;
i0 = lengthof r4;
i1 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
if i1 >= i0 goto return z0;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r5 = r4[i1];
z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean checkLoginIP(java.lang.String,java.lang.String)>(r0, r5);
if z0 == 0 goto i1 = i1 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return z0];
"
    "Block 7:
[preds: 5 ] [succs: 4 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 4 6 ] [succs: ]
return z0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
if r0 == null goto return 0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if r1 != null goto $r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
if r0 == null goto return 0;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if r1 != null goto $r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if r1 != null goto $r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);
z0 = 0;
r4 = r3;
i0 = lengthof r4;
i1 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r2 = <com.pancm.utils.IPWhiteCheck: java.lang.String VERTICAL>;
r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);
z0 = 0;
r4 = r3;
i0 = lengthof r4;
i1 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
if i1 >= i0 goto return z0;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
if i1 >= i0 goto return z0;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
r5 = r4[i1];
z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean checkLoginIP(java.lang.String,java.lang.String)>(r0, r5);
if z0 == 0 goto i1 = i1 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
if i1 >= i0 goto return z0;
"->"Block 8:
[preds: 4 6 ] [succs: ]
return z0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r5 = r4[i1];
z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean checkLoginIP(java.lang.String,java.lang.String)>(r0, r5);
if z0 == 0 goto i1 = i1 + 1;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return z0];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
r5 = r4[i1];
z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean checkLoginIP(java.lang.String,java.lang.String)>(r0, r5);
if z0 == 0 goto i1 = i1 + 1;
"->"Block 7:
[preds: 5 ] [succs: 4 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
goto [?= return z0];
"->"Block 8:
[preds: 4 6 ] [succs: ]
return z0;
";
    "Block 7:
[preds: 5 ] [succs: 4 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
if i1 >= i0 goto return z0;
";
}
