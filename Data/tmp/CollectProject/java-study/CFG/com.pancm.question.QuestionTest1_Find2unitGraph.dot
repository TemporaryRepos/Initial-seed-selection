digraph "unitGraph" {
    "i2 := @parameter0: int"
    "r0 := @parameter1: int[][]"
    "$i0 = lengthof r0"
    "i5 = $i0 - 1"
    "i6 = 0"
    "if i5 <= 0 goto return 0"
    "$r1 = r0[0]"
    "$i1 = lengthof $r1"
    "if i6 >= $i1 goto return 0"
    "$r2 = r0[i5]"
    "$i3 = $r2[i6]"
    "if $i3 <= i2 goto $r3 = r0[i5]"
    "i5 = i5 + -1"
    "goto [?= (branch)]"
    "$r3 = r0[i5]"
    "$i4 = $r3[i6]"
    "if $i4 >= i2 goto return 1"
    "i6 = i6 + 1"
    "return 1"
    "return 0"
    "i2 := @parameter0: int"->"r0 := @parameter1: int[][]";
    "r0 := @parameter1: int[][]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"i5 = $i0 - 1";
    "i5 = $i0 - 1"->"i6 = 0";
    "i6 = 0"->"if i5 <= 0 goto return 0";
    "if i5 <= 0 goto return 0"->"$r1 = r0[0]";
    "if i5 <= 0 goto return 0"->"return 0";
    "$r1 = r0[0]"->"$i1 = lengthof $r1";
    "$i1 = lengthof $r1"->"if i6 >= $i1 goto return 0";
    "if i6 >= $i1 goto return 0"->"$r2 = r0[i5]";
    "if i6 >= $i1 goto return 0"->"return 0";
    "$r2 = r0[i5]"->"$i3 = $r2[i6]";
    "$i3 = $r2[i6]"->"if $i3 <= i2 goto $r3 = r0[i5]";
    "if $i3 <= i2 goto $r3 = r0[i5]"->"i5 = i5 + -1";
    "if $i3 <= i2 goto $r3 = r0[i5]"->"$r3 = r0[i5]";
    "i5 = i5 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 <= 0 goto return 0";
    "$r3 = r0[i5]"->"$i4 = $r3[i6]";
    "$i4 = $r3[i6]"->"if $i4 >= i2 goto return 1";
    "if $i4 >= i2 goto return 1"->"i6 = i6 + 1";
    "if $i4 >= i2 goto return 1"->"return 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 <= 0 goto return 0";
}
