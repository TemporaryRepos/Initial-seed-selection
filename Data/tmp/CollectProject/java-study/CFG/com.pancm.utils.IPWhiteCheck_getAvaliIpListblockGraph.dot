digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String;
$r0 = new java.util.HashSet;
specialinvoke $r0.<java.util.HashSet: void <init>()>();
r1 = $r0;
$r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\s\", \"\");
r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
i0 = lengthof r4;
i8 = 0;
"
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
if i8 >= i0 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 3 21 ]
r5 = r4[i8];
$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r7 = newarray (java.lang.String)[4];
$r7[0] = \"0\";
$r7[1] = \"0\";
$r7[2] = \"0\";
$r7[3] = \"0\";
r8 = $r7;
$r9 = newarray (java.lang.String)[4];
$r9[0] = \"255\";
$r9[1] = \"255\";
$r9[2] = \"255\";
$r9[3] = \"255\";
r10 = $r9;
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>()>();
r45 = $r11;
i9 = 0;
"
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i2 = lengthof r6;
if i9 >= $i2 goto $r12 = new java.lang.StringBuffer;
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r41 = r6[i9];
$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i7 <= -1 goto $r42 = r6[i9];
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = r6[i9];
r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44);
r8[i9] = null;
r10[i9] = null;
goto [?= i9 = i9 + 1];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r42 = r6[i9];
r8[i9] = $r42;
$r43 = r6[i9];
r10[i9] = $r43;
"
    "Block 8:
[preds: 6 7 ] [succs: 4 ]
i9 = i9 + 1;
goto [?= $i2 = lengthof r6];
"
    "Block 9:
[preds: 4 ] [succs: 10 ]
$r12 = new java.lang.StringBuffer;
specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();
r46 = $r12;
$r13 = new java.lang.StringBuffer;
specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();
r14 = $r13;
i10 = 0;
"
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r32 = r8[i10];
if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$r35 = r8[i10];
$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);
virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
$r38 = r10[i10];
$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);
virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
goto [?= i10 = i10 + 1];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
"
    "Block 14:
[preds: 12 13 ] [succs: 10 ]
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 15:
[preds: 10 ] [succs: 16 ]
$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
$i4 = $i3 - 1;
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4);
$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>();
$i6 = $i5 - 1;
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6);
r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 16:
[preds: 15 19 ] [succs: 17 20 ]
$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r17;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>();
$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r22 = $r21[0];
$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22);
$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>();
$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r28 = $r27[1];
$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28);
$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31);
if $z3 == 0 goto (branch);
"
    "Block 18:
[preds: 17 ] [succs: 19 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31);
"
    "Block 19:
[preds: 17 18 ] [succs: 16 ]
goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 20:
[preds: 16 ] [succs: 23 ]
goto [?= i8 = i8 + 1];
"
    "Block 21:
[preds: 2 ] [succs: 22 23 ]
$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
if $z0 == 0 goto i8 = i8 + 1;
"
    "Block 22:
[preds: 21 ] [succs: 23 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5);
"
    "Block 23:
[preds: 20 21 22 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 24:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String;
$r0 = new java.util.HashSet;
specialinvoke $r0.<java.util.HashSet: void <init>()>();
r1 = $r0;
$r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\s\", \"\");
r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
i0 = lengthof r4;
i8 = 0;
"->"Block 1:
[preds: 0 23 ] [succs: 2 24 ]
if i8 >= i0 goto return r1;
";
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
if i8 >= i0 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 3 21 ]
r5 = r4[i8];
$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
";
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
if i8 >= i0 goto return r1;
"->"Block 24:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 21 ]
r5 = r4[i8];
$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r7 = newarray (java.lang.String)[4];
$r7[0] = \"0\";
$r7[1] = \"0\";
$r7[2] = \"0\";
$r7[3] = \"0\";
r8 = $r7;
$r9 = newarray (java.lang.String)[4];
$r9[0] = \"255\";
$r9[1] = \"255\";
$r9[2] = \"255\";
$r9[3] = \"255\";
r10 = $r9;
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>()>();
r45 = $r11;
i9 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 21 ]
r5 = r4[i8];
$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i1 <= -1 goto $z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
"->"Block 21:
[preds: 2 ] [succs: 22 23 ]
$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
if $z0 == 0 goto i8 = i8 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r7 = newarray (java.lang.String)[4];
$r7[0] = \"0\";
$r7[1] = \"0\";
$r7[2] = \"0\";
$r7[3] = \"0\";
r8 = $r7;
$r9 = newarray (java.lang.String)[4];
$r9[0] = \"255\";
$r9[1] = \"255\";
$r9[2] = \"255\";
$r9[3] = \"255\";
r10 = $r9;
$r11 = new java.util.ArrayList;
specialinvoke $r11.<java.util.ArrayList: void <init>()>();
r45 = $r11;
i9 = 0;
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i2 = lengthof r6;
if i9 >= $i2 goto $r12 = new java.lang.StringBuffer;
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i2 = lengthof r6;
if i9 >= $i2 goto $r12 = new java.lang.StringBuffer;
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$r41 = r6[i9];
$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i7 <= -1 goto $r42 = r6[i9];
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i2 = lengthof r6;
if i9 >= $i2 goto $r12 = new java.lang.StringBuffer;
"->"Block 9:
[preds: 4 ] [succs: 10 ]
$r12 = new java.lang.StringBuffer;
specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();
r46 = $r12;
$r13 = new java.lang.StringBuffer;
specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();
r14 = $r13;
i10 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r41 = r6[i9];
$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i7 <= -1 goto $r42 = r6[i9];
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = r6[i9];
r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44);
r8[i9] = null;
r10[i9] = null;
goto [?= i9 = i9 + 1];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r41 = r6[i9];
$i7 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>(\"*\");
if $i7 <= -1 goto $r42 = r6[i9];
"->"Block 7:
[preds: 5 ] [succs: 8 ]
$r42 = r6[i9];
r8[i9] = $r42;
$r43 = r6[i9];
r10[i9] = $r43;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r44 = r6[i9];
r45 = staticinvoke <com.pancm.utils.IPWhiteCheck: java.util.List complete(java.lang.String)>($r44);
r8[i9] = null;
r10[i9] = null;
goto [?= i9 = i9 + 1];
"->"Block 8:
[preds: 6 7 ] [succs: 4 ]
i9 = i9 + 1;
goto [?= $i2 = lengthof r6];
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r42 = r6[i9];
r8[i9] = $r42;
$r43 = r6[i9];
r10[i9] = $r43;
"->"Block 8:
[preds: 6 7 ] [succs: 4 ]
i9 = i9 + 1;
goto [?= $i2 = lengthof r6];
";
    "Block 8:
[preds: 6 7 ] [succs: 4 ]
i9 = i9 + 1;
goto [?= $i2 = lengthof r6];
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i2 = lengthof r6;
if i9 >= $i2 goto $r12 = new java.lang.StringBuffer;
";
    "Block 9:
[preds: 4 ] [succs: 10 ]
$r12 = new java.lang.StringBuffer;
specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();
r46 = $r12;
$r13 = new java.lang.StringBuffer;
specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();
r14 = $r13;
i10 = 0;
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$r32 = r8[i10];
if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
"->"Block 15:
[preds: 10 ] [succs: 16 ]
$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
$i4 = $i3 - 1;
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4);
$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>();
$i6 = $i5 - 1;
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6);
r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r32 = r8[i10];
if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$r35 = r8[i10];
$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);
virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
$r38 = r10[i10];
$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);
virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
goto [?= i10 = i10 + 1];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r32 = r8[i10];
if $r32 == null goto virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
"->"Block 13:
[preds: 11 ] [succs: 14 ]
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$r35 = r8[i10];
$r36 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);
virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
$r38 = r10[i10];
$r39 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);
virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\".\");
goto [?= i10 = i10 + 1];
"->"Block 14:
[preds: 12 13 ] [succs: 10 ]
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"[*].\");
"->"Block 14:
[preds: 12 13 ] [succs: 10 ]
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 10 ]
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i10 >= 4 goto $i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
";
    "Block 15:
[preds: 10 ] [succs: 16 ]
$i3 = virtualinvoke r46.<java.lang.StringBuffer: int length()>();
$i4 = $i3 - 1;
virtualinvoke r46.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i4);
$i5 = virtualinvoke r14.<java.lang.StringBuffer: int length()>();
$i6 = $i5 - 1;
virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i6);
r47 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
"->"Block 16:
[preds: 15 19 ] [succs: 17 20 ]
$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
";
    "Block 16:
[preds: 15 19 ] [succs: 17 20 ]
$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r17;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>();
$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r22 = $r21[0];
$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22);
$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>();
$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r28 = $r27[1];
$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28);
$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31);
if $z3 == 0 goto (branch);
";
    "Block 16:
[preds: 15 19 ] [succs: 17 20 ]
$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
"->"Block 20:
[preds: 16 ] [succs: 23 ]
goto [?= i8 = i8 + 1];
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r17;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>();
$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r22 = $r21[0];
$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22);
$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>();
$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r28 = $r27[1];
$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28);
$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31);
if $z3 == 0 goto (branch);
"->"Block 18:
[preds: 17 ] [succs: 19 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31);
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r17 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
r18 = (java.lang.String) $r17;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r20 = virtualinvoke r46.<java.lang.StringBuffer: java.lang.String toString()>();
$r21 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r22 = $r21[0];
$r23 = virtualinvoke $r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r22);
$r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r26 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>();
$r27 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\";\");
$r28 = $r27[1];
$r29 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"[*]\", $r28);
$r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
$z3 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r31);
if $z3 == 0 goto (branch);
"->"Block 19:
[preds: 17 18 ] [succs: 16 ]
goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 18:
[preds: 17 ] [succs: 19 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r31);
"->"Block 19:
[preds: 17 18 ] [succs: 16 ]
goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 19:
[preds: 17 18 ] [succs: 16 ]
goto [?= $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
"->"Block 16:
[preds: 15 19 ] [succs: 17 20 ]
$z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto (branch);
";
    "Block 20:
[preds: 16 ] [succs: 23 ]
goto [?= i8 = i8 + 1];
"->"Block 23:
[preds: 20 21 22 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 21:
[preds: 2 ] [succs: 22 23 ]
$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
if $z0 == 0 goto i8 = i8 + 1;
"->"Block 22:
[preds: 21 ] [succs: 23 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5);
";
    "Block 21:
[preds: 2 ] [succs: 22 23 ]
$z0 = staticinvoke <com.pancm.utils.IPWhiteCheck: boolean validate(java.lang.String)>(r5);
if $z0 == 0 goto i8 = i8 + 1;
"->"Block 23:
[preds: 20 21 22 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 22:
[preds: 21 ] [succs: 23 ]
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5);
"->"Block 23:
[preds: 20 21 22 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 23:
[preds: 20 21 22 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 23 ] [succs: 2 24 ]
if i8 >= i0 goto return r1;
";
}
