digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.Object;
r5 := @parameter1: java.lang.String;
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
r9 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
r3 = r9;
i0 = lengthof r3;
i1 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i1];
$r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
if $z0 == 0 goto i1 = i1 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.Object;
r5 := @parameter1: java.lang.String;
$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
r9 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();
r3 = r9;
i0 = lengthof r3;
i1 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i1];
$r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
if $z0 == 0 goto i1 = i1 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i1];
$r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
if $z0 == 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r4 = r3[i1];
$r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
$z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
if $z0 == 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto return;
";
}
