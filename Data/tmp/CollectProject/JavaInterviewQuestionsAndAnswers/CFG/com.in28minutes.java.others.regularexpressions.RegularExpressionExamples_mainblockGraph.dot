digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r1 := @parameter0: java.lang.String[];
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"12\", \"122345612\");
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"\\\\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"\\s\", \"12 1234 123 \");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"\\d\", \"12 12\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"\\w\", \"ab 12 _\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"[a-d1-4]\", \"azbkdm 15AB\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"[a-dA-D]\", \"abyzCD\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+\", \"aaabaayza\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"[a-z]+\", \"abcZ2xyzN1yza\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+b+\", \"aabcacaabbbcbb\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+b*c+\", \"abcdacdabdbc\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+b*c?\", \"adabdabcdabccd\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"[^a]+\", \"bcadefazyx\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"[^abcd]+a\", \"efgazyazyzb\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a.c\", \"abca ca!cabbc\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+\", \"aaaaab\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"a+?\", \"aaaaab\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regex(java.lang.String,java.lang.String)>(\"\\.\\.\\.\", \"...a....b...c\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void regexUsingScanner(java.lang.String,java.lang.String)>(\"a+?\", \"aaaaab\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void tokenize(java.lang.String,java.lang.String)>(\"ac;bd;def;e\", \";\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void tokenizeUsingScanner(java.lang.String,java.lang.String)>(\"ac;bd;def;e\", \";\");
staticinvoke <com.in28minutes.java.others.regularexpressions.RegularExpressionExamples: void lookForDifferentThingsUsingScanner(java.lang.String)>(\"true false 12 3 abc true 154\");
return;
"
}
