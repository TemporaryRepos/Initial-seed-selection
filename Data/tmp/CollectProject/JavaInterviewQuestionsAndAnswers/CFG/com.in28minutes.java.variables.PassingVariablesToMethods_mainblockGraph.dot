digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r14 := @parameter0: java.lang.String[];
$r0 = new com.in28minutes.java.variables.PassingVariablesToMethods;
specialinvoke $r0.<com.in28minutes.java.variables.PassingVariablesToMethods: void <init>()>();
r1 = $r0;
b0 = 50;
virtualinvoke r1.<com.in28minutes.java.variables.PassingVariablesToMethods: void incrementBy2(int)>(b0);
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Passing primitive \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r7 = new com.in28minutes.java.variables.Cricketer;
specialinvoke $r7.<com.in28minutes.java.variables.Cricketer: void <init>()>();
r8 = $r7;
r8.<com.in28minutes.java.variables.Cricketer: int runs> = 50;
virtualinvoke r1.<com.in28minutes.java.variables.PassingVariablesToMethods: void modifyCricketer(com.in28minutes.java.variables.Cricketer)>(r8);
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Passing reference variable \");
$i1 = r8.<com.in28minutes.java.variables.Cricketer: int runs>;
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
return;
"
}
