digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(r1)"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4)"
    "return"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(r1)";
    "r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(r1)"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)";
    "$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4)"->"return";
}
