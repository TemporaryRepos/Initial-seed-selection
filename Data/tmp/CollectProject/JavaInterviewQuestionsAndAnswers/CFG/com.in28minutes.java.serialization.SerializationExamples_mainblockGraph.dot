digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r14 := @parameter0: java.lang.String[];
$r0 = new java.io.FileOutputStream;
specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>(\"Rectangle.ser\");
r1 = $r0;
$r2 = new java.io.ObjectOutputStream;
specialinvoke $r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1);
r3 = $r2;
$r4 = new com.in28minutes.java.serialization.Rectangle;
specialinvoke $r4.<com.in28minutes.java.serialization.Rectangle: void <init>(int,int)>(5, 6);
virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);
virtualinvoke r3.<java.io.ObjectOutputStream: void close()>();
$r5 = new java.io.FileInputStream;
specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(\"Rectangle.ser\");
r6 = $r5;
$r7 = new java.io.ObjectInputStream;
specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r6);
r8 = $r7;
$r9 = virtualinvoke r8.<java.io.ObjectInputStream: java.lang.Object readObject()>();
r10 = (com.in28minutes.java.serialization.Rectangle) $r9;
virtualinvoke r8.<java.io.ObjectInputStream: void close()>();
$r11 = <java.lang.System: java.io.PrintStream out>;
$i0 = r10.<com.in28minutes.java.serialization.Rectangle: int length>;
virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i0);
$r12 = <java.lang.System: java.io.PrintStream out>;
$i1 = r10.<com.in28minutes.java.serialization.Rectangle: int breadth>;
virtualinvoke $r12.<java.io.PrintStream: void println(int)>($i1);
$r13 = <java.lang.System: java.io.PrintStream out>;
$i2 = r10.<com.in28minutes.java.serialization.Rectangle: int area>;
virtualinvoke $r13.<java.io.PrintStream: void println(int)>($i2);
return;
"
}
