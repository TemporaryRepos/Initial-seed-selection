digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r12 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key1\", \"value1\");
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key2\", \"value2\");
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key3\", \"value3\");
$r5 = virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView keySet()>();
r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
$r9 = virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);
$r10 = (java.lang.String) $r9;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key4\", \"value4\");
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r12 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
r1 = $r0;
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key1\", \"value1\");
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key2\", \"value2\");
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key3\", \"value3\");
$r5 = virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView keySet()>();
r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
$r9 = virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);
$r10 = (java.lang.String) $r9;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key4\", \"value4\");
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
$r9 = virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);
$r10 = (java.lang.String) $r9;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"key4\", \"value4\");
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
}
