digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
$r0 = new java.util.Scanner;
specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1);
r2 = $r0;
"
    "Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNextBoolean()>();
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
"
    "Block 3:
[preds: 2 ] [succs: 1 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Boolean :\");
$z2 = virtualinvoke r2.<java.util.Scanner: boolean nextBoolean()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
if $z1 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 1 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Integer :\");
$i0 = virtualinvoke r2.<java.util.Scanner: int nextInt()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: 1 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Different thing :\");
$r6 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"
    "Block 7:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
$r0 = new java.util.Scanner;
specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1);
r2 = $r0;
"->"Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
";
    "Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNextBoolean()>();
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
";
    "Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
"->"Block 7:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNextBoolean()>();
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
"->"Block 3:
[preds: 2 ] [succs: 1 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Boolean :\");
$z2 = virtualinvoke r2.<java.util.Scanner: boolean nextBoolean()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNextBoolean()>();
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
if $z1 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 2 ] [succs: 1 ]
$r15 = <java.lang.System: java.io.PrintStream out>;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Boolean :\");
$z2 = virtualinvoke r2.<java.util.Scanner: boolean nextBoolean()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"->"Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
if $z1 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 1 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Integer :\");
$i0 = virtualinvoke r2.<java.util.Scanner: int nextInt()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$z1 = virtualinvoke r2.<java.util.Scanner: boolean hasNextInt()>();
if $z1 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 ] [succs: 1 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Different thing :\");
$r6 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
";
    "Block 5:
[preds: 4 ] [succs: 1 ]
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Found Integer :\");
$i0 = virtualinvoke r2.<java.util.Scanner: int nextInt()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"->"Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
";
    "Block 6:
[preds: 4 ] [succs: 1 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Different thing :\");
$r6 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
goto [?= $z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"->"Block 1:
[preds: 0 3 5 6 ] [succs: 2 7 ]
$z3 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z3 == 0 goto return;
";
}
