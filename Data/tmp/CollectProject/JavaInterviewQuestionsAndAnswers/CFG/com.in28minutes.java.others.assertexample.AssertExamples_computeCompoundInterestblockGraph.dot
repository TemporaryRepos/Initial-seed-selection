digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r5 := @this: com.in28minutes.java.others.assertexample.AssertExamples;
i0 := @parameter0: int;
f0 := @parameter1: float;
i1 := @parameter2: int;
$z0 = <com.in28minutes.java.others.assertexample.AssertExamples: boolean $assertionsDisabled>;
if $z0 != 0 goto return 100;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 > 0 goto return 100;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r0 = new java.lang.AssertionError;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"principal is \");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);
throw $r0;
"
    "Block 3:
[preds: 0 1 ] [succs: ]
return 100;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r5 := @this: com.in28minutes.java.others.assertexample.AssertExamples;
i0 := @parameter0: int;
f0 := @parameter1: float;
i1 := @parameter2: int;
$z0 = <com.in28minutes.java.others.assertexample.AssertExamples: boolean $assertionsDisabled>;
if $z0 != 0 goto return 100;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 > 0 goto return 100;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r5 := @this: com.in28minutes.java.others.assertexample.AssertExamples;
i0 := @parameter0: int;
f0 := @parameter1: float;
i1 := @parameter2: int;
$z0 = <com.in28minutes.java.others.assertexample.AssertExamples: boolean $assertionsDisabled>;
if $z0 != 0 goto return 100;
"->"Block 3:
[preds: 0 1 ] [succs: ]
return 100;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 > 0 goto return 100;
"->"Block 2:
[preds: 1 ] [succs: ]
$r0 = new java.lang.AssertionError;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"principal is \");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);
throw $r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 > 0 goto return 100;
"->"Block 3:
[preds: 0 1 ] [succs: ]
return 100;
";
}
