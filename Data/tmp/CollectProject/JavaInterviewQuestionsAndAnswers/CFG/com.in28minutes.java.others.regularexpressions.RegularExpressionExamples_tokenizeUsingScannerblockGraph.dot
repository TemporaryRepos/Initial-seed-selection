digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r3 := @parameter1: java.lang.String;
$r0 = new java.util.Scanner;
specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1);
r2 = $r0;
virtualinvoke r2.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r3);
$r5 = new java.util.ArrayList;
specialinvoke $r5.<java.util.ArrayList: void <init>()>();
r6 = $r5;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z0 == 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r8);
goto [?= $z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.Object)>(r6);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r3 := @parameter1: java.lang.String;
$r0 = new java.util.Scanner;
specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1);
r2 = $r0;
virtualinvoke r2.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r3);
$r5 = new java.util.ArrayList;
specialinvoke $r5.<java.util.ArrayList: void <init>()>();
r6 = $r5;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z0 == 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z0 == 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r8);
goto [?= $z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z0 == 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.Object)>(r6);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r2.<java.util.Scanner: java.lang.String next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r8);
goto [?= $z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = virtualinvoke r2.<java.util.Scanner: boolean hasNext()>();
if $z0 == 0 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
}
