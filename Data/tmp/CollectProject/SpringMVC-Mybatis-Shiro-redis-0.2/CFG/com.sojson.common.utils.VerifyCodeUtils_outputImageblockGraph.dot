digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i1 := @parameter0: int;
i2 := @parameter1: int;
r26 := @parameter2: java.io.OutputStream;
r0 := @parameter3: java.lang.String;
i0 = virtualinvoke r0.<java.lang.String: int length()>();
$r1 = new java.awt.image.BufferedImage;
specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i1, i2, 1);
r2 = $r1;
$r3 = new java.util.Random;
specialinvoke $r3.<java.util.Random: void <init>()>();
r4 = $r3;
r5 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r7 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;
$r6 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;
virtualinvoke r5.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r7, $r6);
r8 = newarray (java.awt.Color)[5];
$r9 = newarray (java.awt.Color)[8];
$r10 = <java.awt.Color: java.awt.Color WHITE>;
$r9[0] = $r10;
$r11 = <java.awt.Color: java.awt.Color CYAN>;
$r9[1] = $r11;
$r12 = <java.awt.Color: java.awt.Color GRAY>;
$r9[2] = $r12;
$r13 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;
$r9[3] = $r13;
$r14 = <java.awt.Color: java.awt.Color MAGENTA>;
$r9[4] = $r14;
$r15 = <java.awt.Color: java.awt.Color ORANGE>;
$r9[5] = $r15;
$r16 = <java.awt.Color: java.awt.Color PINK>;
$r9[6] = $r16;
$r17 = <java.awt.Color: java.awt.Color YELLOW>;
$r9[7] = $r17;
r18 = $r9;
$i3 = lengthof r8;
r19 = newarray (float)[$i3];
i29 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i4 = lengthof r8;
if i29 >= $i4 goto staticinvoke <java.util.Arrays: void sort(float[])>(r19);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i27 = lengthof r18;
$i28 = virtualinvoke r4.<java.util.Random: int nextInt(int)>($i27);
$r30 = r18[$i28];
r8[i29] = $r30;
$f4 = virtualinvoke r4.<java.util.Random: float nextFloat()>();
r19[i29] = $f4;
i29 = i29 + 1;
goto [?= $i4 = lengthof r8];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <java.util.Arrays: void sort(float[])>(r19);
$r20 = <java.awt.Color: java.awt.Color GRAY>;
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r20);
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i2);
r31 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(200, 250);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r31);
$i5 = i2 - 4;
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 2, i1, $i5);
$r21 = new java.util.Random;
specialinvoke $r21.<java.util.Random: void <init>()>();
r22 = $r21;
$r23 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(160, 200);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r23);
i30 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i30 >= 20 goto f5 = 0.05F;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$i19 = i1 - 1;
i31 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i19);
$i20 = i2 - 1;
i32 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i20);
$i21 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(6);
i33 = $i21 + 1;
$i22 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(12);
i34 = $i22 + 1;
$i23 = i31 + i33;
$i26 = $i23 + 40;
$i24 = i32 + i34;
$i25 = $i24 + 20;
virtualinvoke r5.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i31, i32, $i26, $i25);
i30 = i30 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
f5 = 0.05F;
$f0 = (float) i1;
$f2 = f5 * $f0;
$f1 = (float) i2;
$f3 = $f2 * $f1;
i35 = (int) $f3;
i36 = 0;
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i36 >= i35 goto staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
i37 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i1);
i38 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i2);
i39 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: int getRandomIntColor()>();
virtualinvoke r2.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i37, i38, i39);
i36 = i36 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
$r24 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(100, 160);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r24);
i40 = i2 - 4;
$r25 = new java.awt.Font;
specialinvoke $r25.<java.awt.Font: void <init>(java.lang.String,int,int)>(\"Algerian\", 2, i40);
r32 = $r25;
virtualinvoke r5.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r32);
r33 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i41 = 0;
"
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i41 >= i0 goto virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r27 = new java.awt.geom.AffineTransform;
specialinvoke $r27.<java.awt.geom.AffineTransform: void <init>()>();
r28 = $r27;
$d0 = virtualinvoke r4.<java.util.Random: double nextDouble()>();
$d1 = 0.7853981633974483 * $d0;
$z1 = virtualinvoke r4.<java.util.Random: boolean nextBoolean()>();
if $z1 == 0 goto $b42 = -1;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$b42 = 1;
goto [?= $d2 = (double) $b42];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$b42 = -1;
"
    "Block 14:
[preds: 12 13 ] [succs: 10 ]
$d2 = (double) $b42;
$d5 = $d1 * $d2;
$i6 = i1 / i0;
$i8 = $i6 * i41;
$i7 = i40 / 2;
$i9 = $i8 + $i7;
$d4 = (double) $i9;
$i10 = i2 / 2;
$d3 = (double) $i10;
virtualinvoke r28.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>($d5, $d4, $d3);
virtualinvoke r5.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r28);
$i11 = i1 - 10;
$i12 = $i11 / i0;
$i13 = $i12 * i41;
$i18 = $i13 + 5;
$i15 = i2 / 2;
$i14 = i40 / 2;
$i16 = $i15 + $i14;
$i17 = $i16 - 10;
virtualinvoke r5.<java.awt.Graphics2D: void drawChars(char[],int,int,int,int)>(r33, i41, 1, $i18, $i17);
i41 = i41 + 1;
goto [?= (branch)];
"
    "Block 15:
[preds: 10 ] [succs: ]
virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r2, \"jpg\", r26);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i1 := @parameter0: int;
i2 := @parameter1: int;
r26 := @parameter2: java.io.OutputStream;
r0 := @parameter3: java.lang.String;
i0 = virtualinvoke r0.<java.lang.String: int length()>();
$r1 = new java.awt.image.BufferedImage;
specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i1, i2, 1);
r2 = $r1;
$r3 = new java.util.Random;
specialinvoke $r3.<java.util.Random: void <init>()>();
r4 = $r3;
r5 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r7 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;
$r6 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;
virtualinvoke r5.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r7, $r6);
r8 = newarray (java.awt.Color)[5];
$r9 = newarray (java.awt.Color)[8];
$r10 = <java.awt.Color: java.awt.Color WHITE>;
$r9[0] = $r10;
$r11 = <java.awt.Color: java.awt.Color CYAN>;
$r9[1] = $r11;
$r12 = <java.awt.Color: java.awt.Color GRAY>;
$r9[2] = $r12;
$r13 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;
$r9[3] = $r13;
$r14 = <java.awt.Color: java.awt.Color MAGENTA>;
$r9[4] = $r14;
$r15 = <java.awt.Color: java.awt.Color ORANGE>;
$r9[5] = $r15;
$r16 = <java.awt.Color: java.awt.Color PINK>;
$r9[6] = $r16;
$r17 = <java.awt.Color: java.awt.Color YELLOW>;
$r9[7] = $r17;
r18 = $r9;
$i3 = lengthof r8;
r19 = newarray (float)[$i3];
i29 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i4 = lengthof r8;
if i29 >= $i4 goto staticinvoke <java.util.Arrays: void sort(float[])>(r19);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i4 = lengthof r8;
if i29 >= $i4 goto staticinvoke <java.util.Arrays: void sort(float[])>(r19);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i27 = lengthof r18;
$i28 = virtualinvoke r4.<java.util.Random: int nextInt(int)>($i27);
$r30 = r18[$i28];
r8[i29] = $r30;
$f4 = virtualinvoke r4.<java.util.Random: float nextFloat()>();
r19[i29] = $f4;
i29 = i29 + 1;
goto [?= $i4 = lengthof r8];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i4 = lengthof r8;
if i29 >= $i4 goto staticinvoke <java.util.Arrays: void sort(float[])>(r19);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <java.util.Arrays: void sort(float[])>(r19);
$r20 = <java.awt.Color: java.awt.Color GRAY>;
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r20);
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i2);
r31 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(200, 250);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r31);
$i5 = i2 - 4;
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 2, i1, $i5);
$r21 = new java.util.Random;
specialinvoke $r21.<java.util.Random: void <init>()>();
r22 = $r21;
$r23 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(160, 200);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r23);
i30 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i27 = lengthof r18;
$i28 = virtualinvoke r4.<java.util.Random: int nextInt(int)>($i27);
$r30 = r18[$i28];
r8[i29] = $r30;
$f4 = virtualinvoke r4.<java.util.Random: float nextFloat()>();
r19[i29] = $f4;
i29 = i29 + 1;
goto [?= $i4 = lengthof r8];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i4 = lengthof r8;
if i29 >= $i4 goto staticinvoke <java.util.Arrays: void sort(float[])>(r19);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
staticinvoke <java.util.Arrays: void sort(float[])>(r19);
$r20 = <java.awt.Color: java.awt.Color GRAY>;
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r20);
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i1, i2);
r31 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(200, 250);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r31);
$i5 = i2 - 4;
virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 2, i1, $i5);
$r21 = new java.util.Random;
specialinvoke $r21.<java.util.Random: void <init>()>();
r22 = $r21;
$r23 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(160, 200);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r23);
i30 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i30 >= 20 goto f5 = 0.05F;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i30 >= 20 goto f5 = 0.05F;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$i19 = i1 - 1;
i31 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i19);
$i20 = i2 - 1;
i32 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i20);
$i21 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(6);
i33 = $i21 + 1;
$i22 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(12);
i34 = $i22 + 1;
$i23 = i31 + i33;
$i26 = $i23 + 40;
$i24 = i32 + i34;
$i25 = $i24 + 20;
virtualinvoke r5.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i31, i32, $i26, $i25);
i30 = i30 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i30 >= 20 goto f5 = 0.05F;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
f5 = 0.05F;
$f0 = (float) i1;
$f2 = f5 * $f0;
$f1 = (float) i2;
$f3 = $f2 * $f1;
i35 = (int) $f3;
i36 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$i19 = i1 - 1;
i31 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i19);
$i20 = i2 - 1;
i32 = virtualinvoke r22.<java.util.Random: int nextInt(int)>($i20);
$i21 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(6);
i33 = $i21 + 1;
$i22 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(12);
i34 = $i22 + 1;
$i23 = i31 + i33;
$i26 = $i23 + 40;
$i24 = i32 + i34;
$i25 = $i24 + 20;
virtualinvoke r5.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i31, i32, $i26, $i25);
i30 = i30 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i30 >= 20 goto f5 = 0.05F;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
f5 = 0.05F;
$f0 = (float) i1;
$f2 = f5 * $f0;
$f1 = (float) i2;
$f3 = $f2 * $f1;
i35 = (int) $f3;
i36 = 0;
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i36 >= i35 goto staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i36 >= i35 goto staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
"->"Block 8:
[preds: 7 ] [succs: 7 ]
i37 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i1);
i38 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i2);
i39 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: int getRandomIntColor()>();
virtualinvoke r2.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i37, i38, i39);
i36 = i36 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i36 >= i35 goto staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
"->"Block 9:
[preds: 7 ] [succs: 10 ]
staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
$r24 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(100, 160);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r24);
i40 = i2 - 4;
$r25 = new java.awt.Font;
specialinvoke $r25.<java.awt.Font: void <init>(java.lang.String,int,int)>(\"Algerian\", 2, i40);
r32 = $r25;
virtualinvoke r5.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r32);
r33 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i41 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
i37 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i1);
i38 = virtualinvoke r22.<java.util.Random: int nextInt(int)>(i2);
i39 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: int getRandomIntColor()>();
virtualinvoke r2.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i37, i38, i39);
i36 = i36 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i36 >= i35 goto staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
staticinvoke <com.sojson.common.utils.VerifyCodeUtils: void shear(java.awt.Graphics,int,int,java.awt.Color)>(r5, i1, i2, r31);
$r24 = staticinvoke <com.sojson.common.utils.VerifyCodeUtils: java.awt.Color getRandColor(int,int)>(100, 160);
virtualinvoke r5.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r24);
i40 = i2 - 4;
$r25 = new java.awt.Font;
specialinvoke $r25.<java.awt.Font: void <init>(java.lang.String,int,int)>(\"Algerian\", 2, i40);
r32 = $r25;
virtualinvoke r5.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r32);
r33 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i41 = 0;
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i41 >= i0 goto virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i41 >= i0 goto virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$r27 = new java.awt.geom.AffineTransform;
specialinvoke $r27.<java.awt.geom.AffineTransform: void <init>()>();
r28 = $r27;
$d0 = virtualinvoke r4.<java.util.Random: double nextDouble()>();
$d1 = 0.7853981633974483 * $d0;
$z1 = virtualinvoke r4.<java.util.Random: boolean nextBoolean()>();
if $z1 == 0 goto $b42 = -1;
";
    "Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i41 >= i0 goto virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
"->"Block 15:
[preds: 10 ] [succs: ]
virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r2, \"jpg\", r26);
return;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r27 = new java.awt.geom.AffineTransform;
specialinvoke $r27.<java.awt.geom.AffineTransform: void <init>()>();
r28 = $r27;
$d0 = virtualinvoke r4.<java.util.Random: double nextDouble()>();
$d1 = 0.7853981633974483 * $d0;
$z1 = virtualinvoke r4.<java.util.Random: boolean nextBoolean()>();
if $z1 == 0 goto $b42 = -1;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$b42 = 1;
goto [?= $d2 = (double) $b42];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r27 = new java.awt.geom.AffineTransform;
specialinvoke $r27.<java.awt.geom.AffineTransform: void <init>()>();
r28 = $r27;
$d0 = virtualinvoke r4.<java.util.Random: double nextDouble()>();
$d1 = 0.7853981633974483 * $d0;
$z1 = virtualinvoke r4.<java.util.Random: boolean nextBoolean()>();
if $z1 == 0 goto $b42 = -1;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$b42 = -1;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$b42 = 1;
goto [?= $d2 = (double) $b42];
"->"Block 14:
[preds: 12 13 ] [succs: 10 ]
$d2 = (double) $b42;
$d5 = $d1 * $d2;
$i6 = i1 / i0;
$i8 = $i6 * i41;
$i7 = i40 / 2;
$i9 = $i8 + $i7;
$d4 = (double) $i9;
$i10 = i2 / 2;
$d3 = (double) $i10;
virtualinvoke r28.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>($d5, $d4, $d3);
virtualinvoke r5.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r28);
$i11 = i1 - 10;
$i12 = $i11 / i0;
$i13 = $i12 * i41;
$i18 = $i13 + 5;
$i15 = i2 / 2;
$i14 = i40 / 2;
$i16 = $i15 + $i14;
$i17 = $i16 - 10;
virtualinvoke r5.<java.awt.Graphics2D: void drawChars(char[],int,int,int,int)>(r33, i41, 1, $i18, $i17);
i41 = i41 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$b42 = -1;
"->"Block 14:
[preds: 12 13 ] [succs: 10 ]
$d2 = (double) $b42;
$d5 = $d1 * $d2;
$i6 = i1 / i0;
$i8 = $i6 * i41;
$i7 = i40 / 2;
$i9 = $i8 + $i7;
$d4 = (double) $i9;
$i10 = i2 / 2;
$d3 = (double) $i10;
virtualinvoke r28.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>($d5, $d4, $d3);
virtualinvoke r5.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r28);
$i11 = i1 - 10;
$i12 = $i11 / i0;
$i13 = $i12 * i41;
$i18 = $i13 + 5;
$i15 = i2 / 2;
$i14 = i40 / 2;
$i16 = $i15 + $i14;
$i17 = $i16 - 10;
virtualinvoke r5.<java.awt.Graphics2D: void drawChars(char[],int,int,int,int)>(r33, i41, 1, $i18, $i17);
i41 = i41 + 1;
goto [?= (branch)];
";
    "Block 14:
[preds: 12 13 ] [succs: 10 ]
$d2 = (double) $b42;
$d5 = $d1 * $d2;
$i6 = i1 / i0;
$i8 = $i6 * i41;
$i7 = i40 / 2;
$i9 = $i8 + $i7;
$d4 = (double) $i9;
$i10 = i2 / 2;
$d3 = (double) $i10;
virtualinvoke r28.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>($d5, $d4, $d3);
virtualinvoke r5.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r28);
$i11 = i1 - 10;
$i12 = $i11 / i0;
$i13 = $i12 * i41;
$i18 = $i13 + 5;
$i15 = i2 / 2;
$i14 = i40 / 2;
$i16 = $i15 + $i14;
$i17 = $i16 - 10;
virtualinvoke r5.<java.awt.Graphics2D: void drawChars(char[],int,int,int,int)>(r33, i41, 1, $i18, $i17);
i41 = i41 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 14 ] [succs: 11 15 ]
if i41 >= i0 goto virtualinvoke r5.<java.awt.Graphics2D: void dispose()>();
";
}
