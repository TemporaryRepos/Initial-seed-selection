digraph "unitGraph" {
    "r1 := @parameter0: java.awt.Graphics"
    "i4 := @parameter1: int"
    "i6 := @parameter2: int"
    "r2 := @parameter3: java.awt.Color"
    "$r0 = <com.sojson.common.utils.VerifyCodeUtils: java.util.Random random>"
    "$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(40)"
    "i1 = $i0 + 10"
    "z0 = 1"
    "b2 = 20"
    "b3 = 7"
    "i11 = 0"
    "if i11 >= i4 goto return"
    "$i5 = i1 >> 1"
    "$d8 = (double) $i5"
    "$d1 = (double) i11"
    "$d0 = (double) i1"
    "$d6 = $d1 / $d0"
    "$d2 = (double) b3"
    "$d4 = 6.283185307179586 * $d2"
    "$d3 = (double) b2"
    "$d5 = $d4 / $d3"
    "$d7 = $d6 + $d5"
    "$d9 = staticinvoke <java.lang.Math: double sin(double)>($d7)"
    "d10 = $d8 * $d9"
    "$i7 = (int) d10"
    "virtualinvoke r1.<java.awt.Graphics: void copyArea(int,int,int,int,int,int)>(i11, 0, 1, i6, 0, $i7)"
    "if z0 == 0 goto i11 = i11 + 1"
    "virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>(r2)"
    "$i8 = (int) d10"
    "virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i8, i11, 0)"
    "$i9 = (int) d10"
    "$i10 = $i9 + i6"
    "virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i10, i11, i6)"
    "i11 = i11 + 1"
    "goto [?= (branch)]"
    "return"
    "r1 := @parameter0: java.awt.Graphics"->"i4 := @parameter1: int";
    "i4 := @parameter1: int"->"i6 := @parameter2: int";
    "i6 := @parameter2: int"->"r2 := @parameter3: java.awt.Color";
    "r2 := @parameter3: java.awt.Color"->"$r0 = <com.sojson.common.utils.VerifyCodeUtils: java.util.Random random>";
    "$r0 = <com.sojson.common.utils.VerifyCodeUtils: java.util.Random random>"->"$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(40)";
    "$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(40)"->"i1 = $i0 + 10";
    "i1 = $i0 + 10"->"z0 = 1";
    "z0 = 1"->"b2 = 20";
    "b2 = 20"->"b3 = 7";
    "b3 = 7"->"i11 = 0";
    "i11 = 0"->"if i11 >= i4 goto return";
    "if i11 >= i4 goto return"->"$i5 = i1 >> 1";
    "if i11 >= i4 goto return"->"return";
    "$i5 = i1 >> 1"->"$d8 = (double) $i5";
    "$d8 = (double) $i5"->"$d1 = (double) i11";
    "$d1 = (double) i11"->"$d0 = (double) i1";
    "$d0 = (double) i1"->"$d6 = $d1 / $d0";
    "$d6 = $d1 / $d0"->"$d2 = (double) b3";
    "$d2 = (double) b3"->"$d4 = 6.283185307179586 * $d2";
    "$d4 = 6.283185307179586 * $d2"->"$d3 = (double) b2";
    "$d3 = (double) b2"->"$d5 = $d4 / $d3";
    "$d5 = $d4 / $d3"->"$d7 = $d6 + $d5";
    "$d7 = $d6 + $d5"->"$d9 = staticinvoke <java.lang.Math: double sin(double)>($d7)";
    "$d9 = staticinvoke <java.lang.Math: double sin(double)>($d7)"->"d10 = $d8 * $d9";
    "d10 = $d8 * $d9"->"$i7 = (int) d10";
    "$i7 = (int) d10"->"virtualinvoke r1.<java.awt.Graphics: void copyArea(int,int,int,int,int,int)>(i11, 0, 1, i6, 0, $i7)";
    "virtualinvoke r1.<java.awt.Graphics: void copyArea(int,int,int,int,int,int)>(i11, 0, 1, i6, 0, $i7)"->"if z0 == 0 goto i11 = i11 + 1";
    "if z0 == 0 goto i11 = i11 + 1"->"virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>(r2)";
    "if z0 == 0 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>(r2)"->"$i8 = (int) d10";
    "$i8 = (int) d10"->"virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i8, i11, 0)";
    "virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i8, i11, 0)"->"$i9 = (int) d10";
    "$i9 = (int) d10"->"$i10 = $i9 + i6";
    "$i10 = $i9 + i6"->"virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i10, i11, i6)";
    "virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i11, $i10, i11, i6)"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= i4 goto return";
}
