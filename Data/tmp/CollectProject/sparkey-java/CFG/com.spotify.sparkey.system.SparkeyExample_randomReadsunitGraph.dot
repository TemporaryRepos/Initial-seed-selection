digraph "unitGraph" {
    "r0 := @parameter0: java.util.Random"
    "r5 := @parameter1: com.spotify.sparkey.SparkeyReader"
    "i1 = 0"
    "if i1 >= 1000 goto return"
    "i0 = virtualinvoke r0.<java.util.Random: int nextInt(int)>(2000)"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Key\")"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r6 = interfaceinvoke r5.<com.spotify.sparkey.SparkeyReader: java.lang.String getAsString(java.lang.String)>(r4)"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Value\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6)"
    "if $z0 != 0 goto i1 = i1 + 1"
    "$r11 = new java.lang.RuntimeException"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected Value\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but got \")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)"
    "throw $r11"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 := @parameter0: java.util.Random"->"r5 := @parameter1: com.spotify.sparkey.SparkeyReader";
    "r5 := @parameter1: com.spotify.sparkey.SparkeyReader"->"i1 = 0";
    "i1 = 0"->"if i1 >= 1000 goto return";
    "if i1 >= 1000 goto return"->"i0 = virtualinvoke r0.<java.util.Random: int nextInt(int)>(2000)";
    "if i1 >= 1000 goto return"->"return";
    "i0 = virtualinvoke r0.<java.util.Random: int nextInt(int)>(2000)"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Key\")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Key\")"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"r6 = interfaceinvoke r5.<com.spotify.sparkey.SparkeyReader: java.lang.String getAsString(java.lang.String)>(r4)";
    "r6 = interfaceinvoke r5.<com.spotify.sparkey.SparkeyReader: java.lang.String getAsString(java.lang.String)>(r4)"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Value\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Value\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"$z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6)";
    "$z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6)"->"if $z0 != 0 goto i1 = i1 + 1";
    "if $z0 != 0 goto i1 = i1 + 1"->"$r11 = new java.lang.RuntimeException";
    "if $z0 != 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "$r11 = new java.lang.RuntimeException"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected Value\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected Value\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but got \")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but got \")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)"->"throw $r11";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= 1000 goto return";
}
