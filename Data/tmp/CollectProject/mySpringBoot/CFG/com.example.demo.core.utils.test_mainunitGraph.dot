digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "r0 = \"md5\""
    "r1 = \"123456\""
    "s0 = 1024"
    "r2 = \"wxKYXuTPST5SG0jMQzVPsg==\""
    "r3 = staticinvoke <org.apache.shiro.util.ByteSource$Util: org.apache.shiro.util.ByteSource bytes(java.lang.String)>(r2)"
    "$r4 = new org.apache.shiro.crypto.hash.SimpleHash"
    "specialinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: void <init>(java.lang.String,java.lang.Object,java.lang.Object,int)>(r0, r1, r3, s0)"
    "r5 = virtualinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: java.lang.String toHex()>()"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r5)"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"r0 = \"md5\"";
    "r0 = \"md5\""->"r1 = \"123456\"";
    "r1 = \"123456\""->"s0 = 1024";
    "s0 = 1024"->"r2 = \"wxKYXuTPST5SG0jMQzVPsg==\"";
    "r2 = \"wxKYXuTPST5SG0jMQzVPsg==\""->"r3 = staticinvoke <org.apache.shiro.util.ByteSource$Util: org.apache.shiro.util.ByteSource bytes(java.lang.String)>(r2)";
    "r3 = staticinvoke <org.apache.shiro.util.ByteSource$Util: org.apache.shiro.util.ByteSource bytes(java.lang.String)>(r2)"->"$r4 = new org.apache.shiro.crypto.hash.SimpleHash";
    "$r4 = new org.apache.shiro.crypto.hash.SimpleHash"->"specialinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: void <init>(java.lang.String,java.lang.Object,java.lang.Object,int)>(r0, r1, r3, s0)";
    "specialinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: void <init>(java.lang.String,java.lang.Object,java.lang.Object,int)>(r0, r1, r3, s0)"->"r5 = virtualinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: java.lang.String toHex()>()";
    "r5 = virtualinvoke $r4.<org.apache.shiro.crypto.hash.SimpleHash: java.lang.String toHex()>()"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r5)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r5)"->"return";
}
