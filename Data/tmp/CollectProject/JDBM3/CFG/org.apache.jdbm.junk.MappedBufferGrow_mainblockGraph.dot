digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r30 := @parameter0: java.lang.String[];
$r0 = new java.io.File;
specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(\"test\");
r1 = $r0;
virtualinvoke r1.<java.io.File: void deleteOnExit()>();
$r2 = new java.io.RandomAccessFile;
specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r1, \"rw\");
r3 = $r2;
virtualinvoke r3.<java.io.RandomAccessFile: void setLength(long)>(1000000L);
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"length is \");
$l0 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);
virtualinvoke r3.<java.io.RandomAccessFile: void seek(long)>(2000000L);
virtualinvoke r3.<java.io.RandomAccessFile: void write(int)>(1);
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"length is \");
$l1 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
$r14 = virtualinvoke r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();
$r15 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_WRITE>;
r16 = virtualinvoke $r14.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r15, 0L, 3000000L);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"length after mapping is \");
$l2 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
virtualinvoke r16.<java.nio.MappedByteBuffer: java.nio.Buffer position(int)>(2999990);
virtualinvoke r16.<java.nio.MappedByteBuffer: java.nio.ByteBuffer put(byte)>(1);
virtualinvoke r16.<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>();
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"length after writting to MappedByteBuffer is \");
$l3 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);
return;
"
}
