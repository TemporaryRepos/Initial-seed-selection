digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: org.apache.commons.net.examples.ntp.SimpleNTPServer;
$r1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
if $r1 != null goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = new java.net.DatagramSocket;
$i0 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
specialinvoke $r2.<java.net.DatagramSocket: void <init>(int)>($i0);
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket> = $r2;
$i1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
if $i1 != 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r9 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
$i3 = virtualinvoke $r9.<java.net.DatagramSocket: int getLocalPort()>();
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port> = $i3;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running NTP service on port \");
$i2 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/UDP\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
"
    "Block 4:
[preds: 0 3 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: org.apache.commons.net.examples.ntp.SimpleNTPServer;
$r1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
if $r1 != null goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = new java.net.DatagramSocket;
$i0 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
specialinvoke $r2.<java.net.DatagramSocket: void <init>(int)>($i0);
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket> = $r2;
$i1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
if $i1 != 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: org.apache.commons.net.examples.ntp.SimpleNTPServer;
$r1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
if $r1 != null goto return;
"->"Block 4:
[preds: 0 3 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = new java.net.DatagramSocket;
$i0 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
specialinvoke $r2.<java.net.DatagramSocket: void <init>(int)>($i0);
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket> = $r2;
$i1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
if $i1 != 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r9 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
$i3 = virtualinvoke $r9.<java.net.DatagramSocket: int getLocalPort()>();
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port> = $i3;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r2 = new java.net.DatagramSocket;
$i0 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
specialinvoke $r2.<java.net.DatagramSocket: void <init>(int)>($i0);
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket> = $r2;
$i1 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
if $i1 != 0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running NTP service on port \");
$i2 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/UDP\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r9 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: java.net.DatagramSocket socket>;
$i3 = virtualinvoke $r9.<java.net.DatagramSocket: int getLocalPort()>();
r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port> = $i3;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running NTP service on port \");
$i2 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/UDP\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running NTP service on port \");
$i2 = r0.<org.apache.commons.net.examples.ntp.SimpleNTPServer: int port>;
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/UDP\");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);
"->"Block 4:
[preds: 0 3 ] [succs: ]
return;
";
}
