digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.optimaize.langdetect.cybozu.CommandLineInterface;
r1 := @parameter0: java.lang.String;
d0 := @parameter1: double;
$r2 = r0.<com.optimaize.langdetect.cybozu.CommandLineInterface: java.util.Map values>;
$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
r4 = (java.lang.String) $r3;
if r4 == null goto return d0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 6 ]
$z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return d0;
"
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
$r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
return $d1;
"
    "Block 6:
[preds: 1 3 4 ] [succs: ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid double value: >>>\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<<<\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r7);
throw $r8;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.optimaize.langdetect.cybozu.CommandLineInterface;
r1 := @parameter0: java.lang.String;
d0 := @parameter1: double;
$r2 = r0.<com.optimaize.langdetect.cybozu.CommandLineInterface: java.util.Map values>;
$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
r4 = (java.lang.String) $r3;
if r4 == null goto return d0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 6 ]
$z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.optimaize.langdetect.cybozu.CommandLineInterface;
r1 := @parameter0: java.lang.String;
d0 := @parameter1: double;
$r2 = r0.<com.optimaize.langdetect.cybozu.CommandLineInterface: java.util.Map values>;
$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
r4 = (java.lang.String) $r3;
if r4 == null goto return d0;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return d0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 6 ]
$z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return d0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 6 ]
$z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"->"Block 3:
[preds: 1 ] [succs: 4 6 ]
$r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 6 ]
$z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"->"Block 6:
[preds: 1 3 4 ] [succs: ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid double value: >>>\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<<<\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r7);
throw $r8;
";
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
$r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
$r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r4);
"->"Block 6:
[preds: 1 3 4 ] [succs: ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid double value: >>>\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<<<\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r7);
throw $r8;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();
"->"Block 5:
[preds: 4 ] [succs: ]
return $d1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();
"->"Block 6:
[preds: 1 3 4 ] [succs: ]
$r6 := @caughtexception;
r7 = $r6;
$r8 = new java.lang.RuntimeException;
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid double value: >>>\");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<<<\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r7);
throw $r8;
";
}
