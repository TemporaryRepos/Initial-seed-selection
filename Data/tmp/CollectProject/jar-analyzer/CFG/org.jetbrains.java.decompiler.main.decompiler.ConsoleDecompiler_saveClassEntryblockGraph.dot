digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 13 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
r21 := @parameter2: java.lang.String;
r6 := @parameter3: java.lang.String;
r10 := @parameter4: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
$z0 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: boolean checkEntry(java.lang.String,java.lang.String)>(r6, r5);
if $z0 != 0 goto $r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"
    "Block 1:
[preds: 0 ] [succs: ]
return;
"
    "Block 2:
[preds: 0 ] [succs: 3 13 ]
$r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"
    "Block 3:
[preds: 2 ] [succs: 4 13 ]
$r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
"
    "Block 4:
[preds: 3 ] [succs: 5 13 ]
r22 = (java.util.zip.ZipOutputStream) $r8;
"
    "Block 5:
[preds: 4 ] [succs: 6 13 ]
$r9 = new java.util.zip.ZipEntry;
"
    "Block 6:
[preds: 5 ] [succs: 7 13 ]
specialinvoke $r9.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r6);
"
    "Block 7:
[preds: 6 ] [succs: 8 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r9);
"
    "Block 8:
[preds: 7 ] [succs: 9 12 13 ]
if r10 == null goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
"
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
$r12 = virtualinvoke r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r11);
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void write(byte[])>($r12);
"
    "Block 12:
[preds: 8 11 ] [succs: 14 ]
goto [?= return];
"
    "Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
"
    "Block 14:
[preds: 12 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 13 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
r21 := @parameter2: java.lang.String;
r6 := @parameter3: java.lang.String;
r10 := @parameter4: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
$z0 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: boolean checkEntry(java.lang.String,java.lang.String)>(r6, r5);
if $z0 != 0 goto $r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 1:
[preds: 0 ] [succs: ]
return;
";
    "Block 0:
[preds: ] [succs: 1 2 13 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
r21 := @parameter2: java.lang.String;
r6 := @parameter3: java.lang.String;
r10 := @parameter4: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
$z0 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: boolean checkEntry(java.lang.String,java.lang.String)>(r6, r5);
if $z0 != 0 goto $r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 2:
[preds: 0 ] [succs: 3 13 ]
$r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
";
    "Block 0:
[preds: ] [succs: 1 2 13 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
r21 := @parameter2: java.lang.String;
r6 := @parameter3: java.lang.String;
r10 := @parameter4: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
$z0 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: boolean checkEntry(java.lang.String,java.lang.String)>(r6, r5);
if $z0 != 0 goto $r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 2:
[preds: 0 ] [succs: 3 13 ]
$r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 3:
[preds: 2 ] [succs: 4 13 ]
$r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
";
    "Block 2:
[preds: 0 ] [succs: 3 13 ]
$r7 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 3:
[preds: 2 ] [succs: 4 13 ]
$r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
"->"Block 4:
[preds: 3 ] [succs: 5 13 ]
r22 = (java.util.zip.ZipOutputStream) $r8;
";
    "Block 3:
[preds: 2 ] [succs: 4 13 ]
$r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 4:
[preds: 3 ] [succs: 5 13 ]
r22 = (java.util.zip.ZipOutputStream) $r8;
"->"Block 5:
[preds: 4 ] [succs: 6 13 ]
$r9 = new java.util.zip.ZipEntry;
";
    "Block 4:
[preds: 3 ] [succs: 5 13 ]
r22 = (java.util.zip.ZipOutputStream) $r8;
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 5:
[preds: 4 ] [succs: 6 13 ]
$r9 = new java.util.zip.ZipEntry;
"->"Block 6:
[preds: 5 ] [succs: 7 13 ]
specialinvoke $r9.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r6);
";
    "Block 5:
[preds: 4 ] [succs: 6 13 ]
$r9 = new java.util.zip.ZipEntry;
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 6:
[preds: 5 ] [succs: 7 13 ]
specialinvoke $r9.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r6);
"->"Block 7:
[preds: 6 ] [succs: 8 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r9);
";
    "Block 6:
[preds: 5 ] [succs: 7 13 ]
specialinvoke $r9.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r6);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 7:
[preds: 6 ] [succs: 8 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r9);
"->"Block 8:
[preds: 7 ] [succs: 9 12 13 ]
if r10 == null goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 8 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r9);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 8:
[preds: 7 ] [succs: 9 12 13 ]
if r10 == null goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 13 ]
$r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 13 ]
if r10 == null goto (branch);
"->"Block 12:
[preds: 8 11 ] [succs: 14 ]
goto [?= return];
";
    "Block 8:
[preds: 7 ] [succs: 9 12 13 ]
if r10 == null goto (branch);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
"->"Block 10:
[preds: 9 ] [succs: 11 13 ]
$r12 = virtualinvoke r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r11);
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
$r12 = virtualinvoke r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r11);
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void write(byte[])>($r12);
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
$r12 = virtualinvoke r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r11);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void write(byte[])>($r12);
"->"Block 12:
[preds: 8 11 ] [succs: 14 ]
goto [?= return];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
virtualinvoke r22.<java.util.zip.ZipOutputStream: void write(byte[])>($r12);
"->"Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
";
    "Block 12:
[preds: 8 11 ] [succs: 14 ]
goto [?= return];
"->"Block 14:
[preds: 12 13 ] [succs: ]
return;
";
    "Block 13:
[preds: 0 2 3 4 5 6 7 8 9 10 11 ] [succs: 14 ]
$r13 := @caughtexception;
r23 = $r13;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write entry \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to \");
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
$r20 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
virtualinvoke $r20.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>(r19, r23);
"->"Block 14:
[preds: 12 13 ] [succs: ]
return;
";
}
