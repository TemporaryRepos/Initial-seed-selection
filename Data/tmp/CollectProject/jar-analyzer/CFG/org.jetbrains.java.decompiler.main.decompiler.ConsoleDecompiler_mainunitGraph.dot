digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 >= 2 goto $r1 = new java.util.HashMap"
    "$r25 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"Usage: java -jar fernflower.jar [-<option>=<value>]* [<source>]+ <destination>\nExample: java -jar fernflower.jar -dgs=true c:\\my\\source\\ c:\\my.jar d:\\decompiled\\\\")"
    "return"
    "$r1 = new java.util.HashMap"
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"
    "r2 = $r1"
    "$r3 = new java.util.ArrayList"
    "specialinvoke $r3.<java.util.ArrayList: void <init>()>()"
    "r4 = $r3"
    "$r5 = new java.util.ArrayList"
    "specialinvoke $r5.<java.util.ArrayList: void <init>()>()"
    "r6 = $r5"
    "z6 = 1"
    "i8 = 0"
    "$i1 = lengthof r0"
    "$i2 = $i1 - 1"
    "if i8 >= $i2 goto $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()"
    "r26 = r0[i8]"
    "if z6 == 0 goto z6 = 0"
    "$i5 = virtualinvoke r26.<java.lang.String: int length()>()"
    "if $i5 <= 5 goto z6 = 0"
    "$c6 = virtualinvoke r26.<java.lang.String: char charAt(int)>(0)"
    "if $c6 != 45 goto z6 = 0"
    "$c7 = virtualinvoke r26.<java.lang.String: char charAt(int)>(4)"
    "if $c7 != 61 goto z6 = 0"
    "r27 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(5)"
    "$r22 = \"true\""
    "$z4 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)"
    "if $z4 == 0 goto $r23 = \"false\""
    "r27 = \"1\""
    "goto [?= $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)]"
    "$r23 = \"false\""
    "$z5 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)"
    "if $z5 == 0 goto $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)"
    "r27 = \"0\""
    "$r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)"
    "interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r27)"
    "goto [?= i8 = i8 + 1]"
    "z6 = 0"
    "$z7 = virtualinvoke r26.<java.lang.String: boolean startsWith(java.lang.String)>(\"-e=\")"
    "if $z7 == 0 goto staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)"
    "$r21 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(3)"
    "staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r6, $r21)"
    "staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)"
    "i8 = i8 + 1"
    "goto [?= $i1 = lengthof r0]"
    "$z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()"
    "if $z0 == 0 goto $r7 = new java.io.File"
    "$r20 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"error: no sources given\")"
    "$r7 = new java.io.File"
    "$i3 = lengthof r0"
    "$i4 = $i3 - 1"
    "$r8 = r0[$i4]"
    "specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8)"
    "r29 = $r7"
    "$z1 = virtualinvoke r29.<java.io.File: boolean isDirectory()>()"
    "if $z1 != 0 goto $r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "$r14 = new java.lang.StringBuilder"
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"error: destination \'\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is not a directory\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)"
    "$r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "specialinvoke $r9.<org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger: void <init>(java.io.PrintStream)>($r10)"
    "r30 = $r9"
    "$r11 = new org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"
    "specialinvoke $r11.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void <init>(java.io.File,java.util.Map,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger)>(r29, r2, r30)"
    "r31 = $r11"
    "r32 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"
    "$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"
    "r33 = (java.io.File) $r13"
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addLibrary(java.io.File)>(r33)"
    "goto [?= $z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"
    "r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"
    "$z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()"
    "if $z3 == 0 goto virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()"
    "$r12 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()"
    "r35 = (java.io.File) $r12"
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addSource(java.io.File)>(r35)"
    "goto [?= $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]"
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 >= 2 goto $r1 = new java.util.HashMap";
    "if $i0 >= 2 goto $r1 = new java.util.HashMap"->"$r25 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 >= 2 goto $r1 = new java.util.HashMap"->"$r1 = new java.util.HashMap";
    "$r25 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"Usage: java -jar fernflower.jar [-<option>=<value>]* [<source>]+ <destination>\nExample: java -jar fernflower.jar -dgs=true c:\\my\\source\\ c:\\my.jar d:\\decompiled\\\\")";
    "virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"Usage: java -jar fernflower.jar [-<option>=<value>]* [<source>]+ <destination>\nExample: java -jar fernflower.jar -dgs=true c:\\my\\source\\ c:\\my.jar d:\\decompiled\\\\")"->"return";
    "$r1 = new java.util.HashMap"->"specialinvoke $r1.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"$r3 = new java.util.ArrayList";
    "$r3 = new java.util.ArrayList"->"specialinvoke $r3.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r3.<java.util.ArrayList: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"$r5 = new java.util.ArrayList";
    "$r5 = new java.util.ArrayList"->"specialinvoke $r5.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r5.<java.util.ArrayList: void <init>()>()"->"r6 = $r5";
    "r6 = $r5"->"z6 = 1";
    "z6 = 1"->"i8 = 0";
    "i8 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"$i2 = $i1 - 1";
    "$i2 = $i1 - 1"->"if i8 >= $i2 goto $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()";
    "if i8 >= $i2 goto $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()"->"r26 = r0[i8]";
    "if i8 >= $i2 goto $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()"->"$z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()";
    "r26 = r0[i8]"->"if z6 == 0 goto z6 = 0";
    "if z6 == 0 goto z6 = 0"->"$i5 = virtualinvoke r26.<java.lang.String: int length()>()";
    "if z6 == 0 goto z6 = 0"->"z6 = 0";
    "$i5 = virtualinvoke r26.<java.lang.String: int length()>()"->"if $i5 <= 5 goto z6 = 0";
    "if $i5 <= 5 goto z6 = 0"->"$c6 = virtualinvoke r26.<java.lang.String: char charAt(int)>(0)";
    "if $i5 <= 5 goto z6 = 0"->"z6 = 0";
    "$c6 = virtualinvoke r26.<java.lang.String: char charAt(int)>(0)"->"if $c6 != 45 goto z6 = 0";
    "if $c6 != 45 goto z6 = 0"->"$c7 = virtualinvoke r26.<java.lang.String: char charAt(int)>(4)";
    "if $c6 != 45 goto z6 = 0"->"z6 = 0";
    "$c7 = virtualinvoke r26.<java.lang.String: char charAt(int)>(4)"->"if $c7 != 61 goto z6 = 0";
    "if $c7 != 61 goto z6 = 0"->"r27 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(5)";
    "if $c7 != 61 goto z6 = 0"->"z6 = 0";
    "r27 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(5)"->"$r22 = \"true\"";
    "$r22 = \"true\""->"$z4 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)";
    "$z4 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)"->"if $z4 == 0 goto $r23 = \"false\"";
    "if $z4 == 0 goto $r23 = \"false\""->"r27 = \"1\"";
    "if $z4 == 0 goto $r23 = \"false\""->"$r23 = \"false\"";
    "r27 = \"1\""->"goto [?= $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)]";
    "goto [?= $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)]"->"$r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)";
    "$r23 = \"false\""->"$z5 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)";
    "$z5 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27)"->"if $z5 == 0 goto $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)";
    "if $z5 == 0 goto $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)"->"r27 = \"0\"";
    "if $z5 == 0 goto $r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)"->"$r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)";
    "r27 = \"0\""->"$r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)";
    "$r28 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, 4)"->"interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r27)";
    "interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r27)"->"goto [?= i8 = i8 + 1]";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "z6 = 0"->"$z7 = virtualinvoke r26.<java.lang.String: boolean startsWith(java.lang.String)>(\"-e=\")";
    "$z7 = virtualinvoke r26.<java.lang.String: boolean startsWith(java.lang.String)>(\"-e=\")"->"if $z7 == 0 goto staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)";
    "if $z7 == 0 goto staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)"->"$r21 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(3)";
    "if $z7 == 0 goto staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)"->"staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)";
    "$r21 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(3)"->"staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r6, $r21)";
    "staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r6, $r21)"->"goto [?= i8 = i8 + 1]";
    "goto [?= i8 = i8 + 1]"->"i8 = i8 + 1";
    "staticinvoke <org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addPath(java.util.List,java.lang.String)>(r4, r26)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()"->"if $z0 == 0 goto $r7 = new java.io.File";
    "if $z0 == 0 goto $r7 = new java.io.File"->"$r20 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r7 = new java.io.File"->"$r7 = new java.io.File";
    "$r20 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"error: no sources given\")";
    "virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(\"error: no sources given\")"->"return";
    "$r7 = new java.io.File"->"$i3 = lengthof r0";
    "$i3 = lengthof r0"->"$i4 = $i3 - 1";
    "$i4 = $i3 - 1"->"$r8 = r0[$i4]";
    "$r8 = r0[$i4]"->"specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8)"->"r29 = $r7";
    "r29 = $r7"->"$z1 = virtualinvoke r29.<java.io.File: boolean isDirectory()>()";
    "$z1 = virtualinvoke r29.<java.io.File: boolean isDirectory()>()"->"if $z1 != 0 goto $r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger";
    "if $z1 != 0 goto $r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "if $z1 != 0 goto $r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger"->"$r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"$r14 = new java.lang.StringBuilder";
    "$r14 = new java.lang.StringBuilder"->"specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"error: destination \'\")";
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"error: destination \'\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is not a directory\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' is not a directory\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)"->"return";
    "$r9 = new org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"specialinvoke $r9.<org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger: void <init>(java.io.PrintStream)>($r10)";
    "specialinvoke $r9.<org.jetbrains.java.decompiler.main.decompiler.PrintStreamLogger: void <init>(java.io.PrintStream)>($r10)"->"r30 = $r9";
    "r30 = $r9"->"$r11 = new org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler";
    "$r11 = new org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"->"specialinvoke $r11.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void <init>(java.io.File,java.util.Map,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger)>(r29, r2, r30)";
    "specialinvoke $r11.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void <init>(java.io.File,java.util.Map,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger)>(r29, r2, r30)"->"r31 = $r11";
    "r31 = $r11"->"r32 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()";
    "r32 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()";
    "if $z2 == 0 goto r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()";
    "$r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()"->"r33 = (java.io.File) $r13";
    "r33 = (java.io.File) $r13"->"virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addLibrary(java.io.File)>(r33)";
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addLibrary(java.io.File)>(r33)"->"goto [?= $z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()";
    "r34 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()"->"if $z3 == 0 goto virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()";
    "if $z3 == 0 goto virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()"->"$r12 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()";
    "if $z3 == 0 goto virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()"->"virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()";
    "$r12 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()"->"r35 = (java.io.File) $r12";
    "r35 = (java.io.File) $r12"->"virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addSource(java.io.File)>(r35)";
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void addSource(java.io.File)>(r35)"->"goto [?= $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]"->"$z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()";
    "virtualinvoke r31.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: void decompileContext()>()"->"return";
}
