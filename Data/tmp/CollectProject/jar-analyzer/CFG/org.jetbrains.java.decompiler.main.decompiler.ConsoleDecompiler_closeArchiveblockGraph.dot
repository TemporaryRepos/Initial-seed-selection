digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 8 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
$r6 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveEntries>;
"
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r8 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
$r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r10 = (java.util.zip.ZipOutputStream) $r9;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke $r10.<java.util.zip.ZipOutputStream: void close()>();
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
goto [?= return];
"
    "Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
"
    "Block 9:
[preds: 7 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 8 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
"->"Block 1:
[preds: 0 ] [succs: 2 8 ]
$r6 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveEntries>;
";
    "Block 0:
[preds: ] [succs: 1 8 ]
r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler;
r2 := @parameter0: java.lang.String;
r4 := @parameter1: java.lang.String;
$r0 = new java.io.File;
$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2);
specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4);
r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
$r6 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveEntries>;
"->"Block 2:
[preds: 1 ] [succs: 3 8 ]
interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
";
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
$r6 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveEntries>;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"->"Block 3:
[preds: 2 ] [succs: 4 8 ]
$r8 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
";
    "Block 2:
[preds: 1 ] [succs: 3 8 ]
interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r8 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 4:
[preds: 3 ] [succs: 5 8 ]
$r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$r8 = r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.util.Map mapArchiveStreams>;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
$r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
$r10 = (java.util.zip.ZipOutputStream) $r9;
";
    "Block 4:
[preds: 3 ] [succs: 5 8 ]
$r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r10 = (java.util.zip.ZipOutputStream) $r9;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke $r10.<java.util.zip.ZipOutputStream: void close()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r10 = (java.util.zip.ZipOutputStream) $r9;
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke $r10.<java.util.zip.ZipOutputStream: void close()>();
"->"Block 7:
[preds: 6 ] [succs: 9 ]
goto [?= return];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke $r10.<java.util.zip.ZipOutputStream: void close()>();
"->"Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
goto [?= return];
"->"Block 9:
[preds: 7 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 0 1 2 3 4 5 6 ] [succs: 9 ]
$r11 := @caughtexception;
r12 = $r11;
$r13 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>();
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot close \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity WARN>;
virtualinvoke $r13.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,org.jetbrains.java.decompiler.main.extern.IFernflowerLogger$Severity)>($r17, $r18);
"->"Block 9:
[preds: 7 8 ] [succs: ]
return;
";
}
