digraph "unitGraph" {
    "r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"
    "r2 := @parameter0: java.lang.String"
    "r22 := @parameter1: java.lang.String"
    "r4 := @parameter2: java.lang.String"
    "r9 := @parameter3: java.lang.String"
    "r23 := @parameter4: int[]"
    "$r0 = new java.io.File"
    "$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2)"
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4)"
    "r5 = $r0"
    "$r6 = new java.io.OutputStreamWriter"
    "$r7 = new java.io.FileOutputStream"
    "specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r5)"
    "$r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"
    "specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r7, $r8)"
    "r24 = $r6"
    "r25 = null"
    "virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)"
    "if r24 == null goto (branch)"
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"
    "virtualinvoke r24.<java.io.Writer: void close()>()"
    "goto [?= (branch)]"
    "$r21 := @caughtexception"
    "r26 = $r21"
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26)"
    "$r20 := @caughtexception"
    "r27 = $r20"
    "r25 = r27"
    "throw r27"
    "$r19 := @caughtexception"
    "r18 = $r19"
    "if r24 == null goto throw r18"
    "goto [?= throw r18]"
    "$r16 := @caughtexception"
    "r17 = $r16"
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)"
    "throw r18"
    "goto [?= return]"
    "$r10 := @caughtexception"
    "r28 = $r10"
    "$r11 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>()"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write class file \")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r11.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>($r15, r28)"
    "return"
    "r1 := @this: org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"->"r2 := @parameter0: java.lang.String";
    "r2 := @parameter0: java.lang.String"->"r22 := @parameter1: java.lang.String";
    "r22 := @parameter1: java.lang.String"->"r4 := @parameter2: java.lang.String";
    "r4 := @parameter2: java.lang.String"->"r9 := @parameter3: java.lang.String";
    "r9 := @parameter3: java.lang.String"->"r23 := @parameter4: int[]";
    "r23 := @parameter4: int[]"->"$r0 = new java.io.File";
    "$r0 = new java.io.File"->"$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2)";
    "$r3 = specialinvoke r1.<org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler: java.lang.String getAbsolutePath(java.lang.String)>(r2)"->"specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4)";
    "specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r4)"->"r5 = $r0";
    "r5 = $r0"->"$r6 = new java.io.OutputStreamWriter";
    "r5 = $r0"->"$r10 := @caughtexception";
    "$r6 = new java.io.OutputStreamWriter"->"$r7 = new java.io.FileOutputStream";
    "$r6 = new java.io.OutputStreamWriter"->"$r10 := @caughtexception";
    "$r7 = new java.io.FileOutputStream"->"specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r5)";
    "$r7 = new java.io.FileOutputStream"->"$r10 := @caughtexception";
    "specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r5)"->"$r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>";
    "specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r5)"->"$r10 := @caughtexception";
    "$r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"->"specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r7, $r8)";
    "$r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>"->"$r10 := @caughtexception";
    "specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r7, $r8)"->"r24 = $r6";
    "specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r7, $r8)"->"$r10 := @caughtexception";
    "r24 = $r6"->"r25 = null";
    "r24 = $r6"->"$r10 := @caughtexception";
    "r25 = null"->"$r20 := @caughtexception";
    "r25 = null"->"$r10 := @caughtexception";
    "r25 = null"->"$r19 := @caughtexception";
    "r25 = null"->"virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)";
    "virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)"->"$r20 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)"->"$r19 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void write(java.lang.String)>(r9)"->"if r24 == null goto (branch)";
    "if r24 == null goto (branch)"->"if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r24 == null goto (branch)"->"goto [?= return]";
    "if r24 == null goto (branch)"->"$r10 := @caughtexception";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"$r21 := @caughtexception";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r21 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r10 := @caughtexception";
    "$r21 := @caughtexception"->"r26 = $r21";
    "$r21 := @caughtexception"->"$r10 := @caughtexception";
    "r26 = $r21"->"virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26)";
    "r26 = $r21"->"$r10 := @caughtexception";
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26)"->"goto [?= (branch)]";
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26)"->"$r10 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"goto [?= (branch)]";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r10 := @caughtexception";
    "$r20 := @caughtexception"->"r27 = $r20";
    "$r20 := @caughtexception"->"$r19 := @caughtexception";
    "r27 = $r20"->"r25 = r27";
    "r27 = $r20"->"$r19 := @caughtexception";
    "r25 = r27"->"throw r27";
    "r25 = r27"->"$r19 := @caughtexception";
    "throw r27"->"$r19 := @caughtexception";
    "$r19 := @caughtexception"->"r18 = $r19";
    "$r19 := @caughtexception"->"$r19 := @caughtexception";
    "r18 = $r19"->"$r19 := @caughtexception";
    "r18 = $r19"->"$r10 := @caughtexception";
    "r18 = $r19"->"if r24 == null goto throw r18";
    "if r24 == null goto throw r18"->"if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r24 == null goto throw r18"->"throw r18";
    "if r24 == null goto throw r18"->"$r10 := @caughtexception";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"virtualinvoke r24.<java.io.Writer: void close()>()";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"$r16 := @caughtexception";
    "if r25 == null goto virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r16 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"goto [?= throw r18]";
    "goto [?= throw r18]"->"throw r18";
    "goto [?= throw r18]"->"$r10 := @caughtexception";
    "$r16 := @caughtexception"->"r17 = $r16";
    "$r16 := @caughtexception"->"$r10 := @caughtexception";
    "r17 = $r16"->"virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)";
    "r17 = $r16"->"$r10 := @caughtexception";
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)"->"goto [?= throw r18]";
    "virtualinvoke r25.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r17)"->"$r10 := @caughtexception";
    "goto [?= throw r18]"->"throw r18";
    "goto [?= throw r18]"->"$r10 := @caughtexception";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"throw r18";
    "virtualinvoke r24.<java.io.Writer: void close()>()"->"$r10 := @caughtexception";
    "throw r18"->"$r10 := @caughtexception";
    "goto [?= return]"->"return";
    "$r10 := @caughtexception"->"r28 = $r10";
    "r28 = $r10"->"$r11 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>()";
    "$r11 = staticinvoke <org.jetbrains.java.decompiler.main.DecompilerContext: org.jetbrains.java.decompiler.main.extern.IFernflowerLogger getLogger()>()"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write class file \")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot write class file \")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r11.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>($r15, r28)";
    "virtualinvoke $r11.<org.jetbrains.java.decompiler.main.extern.IFernflowerLogger: void writeMessage(java.lang.String,java.lang.Throwable)>($r15, r28)"->"return";
}
