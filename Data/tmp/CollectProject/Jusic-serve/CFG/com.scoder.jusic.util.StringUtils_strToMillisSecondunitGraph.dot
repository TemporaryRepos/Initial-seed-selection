digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2)"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)"
    "i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()"
    "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3)"
    "i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()"
    "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8)"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5)"
    "i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()"
    "$i3 = i0 * 60"
    "$i4 = $i3 * 60"
    "$i7 = $i4 * 1000"
    "$i5 = i1 * 60"
    "$i6 = $i5 * 1000"
    "$i9 = $i7 + $i6"
    "$i8 = i2 * 1000"
    "$i10 = $i9 + $i8"
    "l11 = (long) $i10"
    "return l11"
    "r0 := @parameter0: java.lang.String"->"$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2)";
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2)"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)"->"i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()";
    "i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()"->"$r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5)";
    "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3)"->"i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()";
    "i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()"->"$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8)";
    "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8)"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5)"->"i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()";
    "i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()"->"$i3 = i0 * 60";
    "$i3 = i0 * 60"->"$i4 = $i3 * 60";
    "$i4 = $i3 * 60"->"$i7 = $i4 * 1000";
    "$i7 = $i4 * 1000"->"$i5 = i1 * 60";
    "$i5 = i1 * 60"->"$i6 = $i5 * 1000";
    "$i6 = $i5 * 1000"->"$i9 = $i7 + $i6";
    "$i9 = $i7 + $i6"->"$i8 = i2 * 1000";
    "$i8 = i2 * 1000"->"$i10 = $i9 + $i8";
    "$i10 = $i9 + $i8"->"l11 = (long) $i10";
    "l11 = (long) $i10"->"return l11";
}
