digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i2 = 0"
    "i3 = 0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i3 >= $i0 goto return i2"
    "i1 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i3)"
    "if i1 < 0 goto i2 = i2 + 2"
    "if i1 > 255 goto i2 = i2 + 2"
    "i2 = i2 + 1"
    "goto [?= i3 = i3 + 1]"
    "i2 = i2 + 2"
    "i3 = i3 + 1"
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "return i2"
    "r0 := @parameter0: java.lang.String"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i3 >= $i0 goto return i2";
    "if i3 >= $i0 goto return i2"->"i1 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i3)";
    "if i3 >= $i0 goto return i2"->"return i2";
    "i1 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i3)"->"if i1 < 0 goto i2 = i2 + 2";
    "if i1 < 0 goto i2 = i2 + 2"->"if i1 > 255 goto i2 = i2 + 2";
    "if i1 < 0 goto i2 = i2 + 2"->"i2 = i2 + 2";
    "if i1 > 255 goto i2 = i2 + 2"->"i2 = i2 + 1";
    "if i1 > 255 goto i2 = i2 + 2"->"i2 = i2 + 2";
    "i2 = i2 + 1"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "i2 = i2 + 2"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
}
