digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: Base.Other.Base62;
r1 := @parameter0: byte[];
$z0 = virtualinvoke r0.<Base.Other.Base62: boolean isBase62Encoding(byte[])>(r1);
if $z0 != 0 goto $r2 = r0.<Base.Other.Base62: byte[] lookup>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Input is not encoded correctly\");
throw $r5;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r2 = r0.<Base.Other.Base62: byte[] lookup>;
r3 = specialinvoke r0.<Base.Other.Base62: byte[] translate(byte[],byte[])>(r1, $r2);
$r4 = specialinvoke r0.<Base.Other.Base62: byte[] convert(byte[],int,int)>(r3, 62, 256);
return $r4;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: Base.Other.Base62;
r1 := @parameter0: byte[];
$z0 = virtualinvoke r0.<Base.Other.Base62: boolean isBase62Encoding(byte[])>(r1);
if $z0 != 0 goto $r2 = r0.<Base.Other.Base62: byte[] lookup>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Input is not encoded correctly\");
throw $r5;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: Base.Other.Base62;
r1 := @parameter0: byte[];
$z0 = virtualinvoke r0.<Base.Other.Base62: boolean isBase62Encoding(byte[])>(r1);
if $z0 != 0 goto $r2 = r0.<Base.Other.Base62: byte[] lookup>;
"->"Block 2:
[preds: 0 ] [succs: ]
$r2 = r0.<Base.Other.Base62: byte[] lookup>;
r3 = specialinvoke r0.<Base.Other.Base62: byte[] translate(byte[],byte[])>(r1, $r2);
$r4 = specialinvoke r0.<Base.Other.Base62: byte[] convert(byte[],int,int)>(r3, 62, 256);
return $r4;
";
}
