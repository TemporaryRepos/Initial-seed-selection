digraph "unitGraph" {
    "r2 := @this: Base.Other.Base62"
    "r0 := @parameter0: byte[]"
    "i0 = lengthof r0"
    "r1 = newarray (byte)[i0]"
    "i4 = 0"
    "if i4 >= i0 goto return r1"
    "$i1 = i0 - i4"
    "$i3 = $i1 - 1"
    "$b2 = r0[i4]"
    "r1[$i3] = $b2"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return r1"
    "r2 := @this: Base.Other.Base62"->"r0 := @parameter0: byte[]";
    "r0 := @parameter0: byte[]"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"r1 = newarray (byte)[i0]";
    "r1 = newarray (byte)[i0]"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto return r1";
    "if i4 >= i0 goto return r1"->"$i1 = i0 - i4";
    "if i4 >= i0 goto return r1"->"return r1";
    "$i1 = i0 - i4"->"$i3 = $i1 - 1";
    "$i3 = $i1 - 1"->"$b2 = r0[i4]";
    "$b2 = r0[i4]"->"r1[$i3] = $b2";
    "r1[$i3] = $b2"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto return r1";
}
