digraph "unitGraph" {
    "r3 := @this: Base.Other.Base62"
    "r0 := @parameter0: byte[]"
    "r2 := @parameter1: byte[]"
    "$i0 = lengthof r0"
    "r1 = newarray (byte)[$i0]"
    "i4 = 0"
    "$i1 = lengthof r0"
    "if i4 >= $i1 goto return r1"
    "$b2 = r0[i4]"
    "$b3 = r2[$b2]"
    "r1[i4] = $b3"
    "i4 = i4 + 1"
    "goto [?= $i1 = lengthof r0]"
    "return r1"
    "r3 := @this: Base.Other.Base62"->"r0 := @parameter0: byte[]";
    "r0 := @parameter0: byte[]"->"r2 := @parameter1: byte[]";
    "r2 := @parameter1: byte[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"r1 = newarray (byte)[$i0]";
    "r1 = newarray (byte)[$i0]"->"i4 = 0";
    "i4 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if i4 >= $i1 goto return r1";
    "if i4 >= $i1 goto return r1"->"$b2 = r0[i4]";
    "if i4 >= $i1 goto return r1"->"return r1";
    "$b2 = r0[i4]"->"$b3 = r2[$b2]";
    "$b3 = r2[$b2]"->"r1[i4] = $b3";
    "r1[i4] = $b3"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
}
