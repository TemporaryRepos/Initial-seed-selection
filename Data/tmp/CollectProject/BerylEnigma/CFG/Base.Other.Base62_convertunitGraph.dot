digraph "unitGraph" {
    "r0 := @this: Base.Other.Base62"
    "r1 := @parameter0: byte[]"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "$i2 = lengthof r1"
    "i3 = specialinvoke r0.<Base.Other.Base62: int estimateOutputLength(int,int,int)>($i2, i0, i1)"
    "$r2 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(i3)"
    "r3 = $r2"
    "r7 = r1"
    "$i4 = lengthof r7"
    "if $i4 <= 0 goto i20 = 0"
    "$r6 = new java.io.ByteArrayOutputStream"
    "$i8 = lengthof r7"
    "specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>($i8)"
    "r8 = $r6"
    "i18 = 0"
    "i19 = 0"
    "$i9 = lengthof r7"
    "if i19 >= $i9 goto virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)"
    "$b10 = r7[i19]"
    "$i12 = $b10 & 255"
    "$i11 = i18 * i0"
    "i13 = $i12 + $i11"
    "$i14 = i13 % i1"
    "$i15 = i13 - $i14"
    "i16 = $i15 / i1"
    "i18 = i13 % i1"
    "$i17 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>()"
    "if $i17 > 0 goto virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)"
    "if i16 <= 0 goto i19 = i19 + 1"
    "virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)"
    "i19 = i19 + 1"
    "goto [?= $i9 = lengthof r7]"
    "virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)"
    "r7 = virtualinvoke r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "goto [?= $i4 = lengthof r7]"
    "i20 = 0"
    "$i5 = lengthof r1"
    "$i6 = $i5 - 1"
    "if i20 >= $i6 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "$b7 = r1[i20]"
    "if $b7 != 0 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(0)"
    "i20 = i20 + 1"
    "goto [?= $i5 = lengthof r1]"
    "$r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "$r5 = specialinvoke r0.<Base.Other.Base62: byte[] reverse(byte[])>($r4)"
    "return $r5"
    "r0 := @this: Base.Other.Base62"->"r1 := @parameter0: byte[]";
    "r1 := @parameter0: byte[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"$i2 = lengthof r1";
    "$i2 = lengthof r1"->"i3 = specialinvoke r0.<Base.Other.Base62: int estimateOutputLength(int,int,int)>($i2, i0, i1)";
    "i3 = specialinvoke r0.<Base.Other.Base62: int estimateOutputLength(int,int,int)>($i2, i0, i1)"->"$r2 = new java.io.ByteArrayOutputStream";
    "$r2 = new java.io.ByteArrayOutputStream"->"specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(i3)";
    "specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(i3)"->"r3 = $r2";
    "r3 = $r2"->"r7 = r1";
    "r7 = r1"->"$i4 = lengthof r7";
    "$i4 = lengthof r7"->"if $i4 <= 0 goto i20 = 0";
    "if $i4 <= 0 goto i20 = 0"->"$r6 = new java.io.ByteArrayOutputStream";
    "if $i4 <= 0 goto i20 = 0"->"i20 = 0";
    "$r6 = new java.io.ByteArrayOutputStream"->"$i8 = lengthof r7";
    "$i8 = lengthof r7"->"specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>($i8)";
    "specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>($i8)"->"r8 = $r6";
    "r8 = $r6"->"i18 = 0";
    "i18 = 0"->"i19 = 0";
    "i19 = 0"->"$i9 = lengthof r7";
    "$i9 = lengthof r7"->"if i19 >= $i9 goto virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)";
    "if i19 >= $i9 goto virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)"->"$b10 = r7[i19]";
    "if i19 >= $i9 goto virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)"->"virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)";
    "$b10 = r7[i19]"->"$i12 = $b10 & 255";
    "$i12 = $b10 & 255"->"$i11 = i18 * i0";
    "$i11 = i18 * i0"->"i13 = $i12 + $i11";
    "i13 = $i12 + $i11"->"$i14 = i13 % i1";
    "$i14 = i13 % i1"->"$i15 = i13 - $i14";
    "$i15 = i13 - $i14"->"i16 = $i15 / i1";
    "i16 = $i15 / i1"->"i18 = i13 % i1";
    "i18 = i13 % i1"->"$i17 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>()";
    "$i17 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>()"->"if $i17 > 0 goto virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)";
    "if $i17 > 0 goto virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)"->"if i16 <= 0 goto i19 = i19 + 1";
    "if $i17 > 0 goto virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)"->"virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)";
    "if i16 <= 0 goto i19 = i19 + 1"->"virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)";
    "if i16 <= 0 goto i19 = i19 + 1"->"i19 = i19 + 1";
    "virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(int)>(i16)"->"i19 = i19 + 1";
    "i19 = i19 + 1"->"goto [?= $i9 = lengthof r7]";
    "goto [?= $i9 = lengthof r7]"->"$i9 = lengthof r7";
    "virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(i18)"->"r7 = virtualinvoke r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "r7 = virtualinvoke r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"goto [?= $i4 = lengthof r7]";
    "goto [?= $i4 = lengthof r7]"->"$i4 = lengthof r7";
    "i20 = 0"->"$i5 = lengthof r1";
    "$i5 = lengthof r1"->"$i6 = $i5 - 1";
    "$i6 = $i5 - 1"->"if i20 >= $i6 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "if i20 >= $i6 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$b7 = r1[i20]";
    "if i20 >= $i6 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "$b7 = r1[i20]"->"if $b7 != 0 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "if $b7 != 0 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(0)";
    "if $b7 != 0 goto $r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(0)"->"i20 = i20 + 1";
    "i20 = i20 + 1"->"goto [?= $i5 = lengthof r1]";
    "goto [?= $i5 = lengthof r1]"->"$i5 = lengthof r1";
    "$r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$r5 = specialinvoke r0.<Base.Other.Base62: byte[] reverse(byte[])>($r4)";
    "$r5 = specialinvoke r0.<Base.Other.Base62: byte[] reverse(byte[])>($r4)"->"return $r5";
}
