digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: Base.Other.Base62;
r0 := @parameter0: byte[];
if r0 != null goto r1 = r0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r1 = r0;
i0 = lengthof r1;
i2 = 0;
"
    "Block 3:
[preds: 2 11 ] [succs: 4 12 ]
if i2 >= i0 goto return 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
b1 = r1[i2];
if 48 > b1 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
if 57 >= b1 goto i2 = i2 + 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if 97 > b1 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
if 122 >= b1 goto i2 = i2 + 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if 65 > b1 goto return 0;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if 90 >= b1 goto i2 = i2 + 1;
"
    "Block 10:
[preds: 8 9 ] [succs: ]
return 0;
"
    "Block 11:
[preds: 5 7 9 ] [succs: 3 ]
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 12:
[preds: 3 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: Base.Other.Base62;
r0 := @parameter0: byte[];
if r0 != null goto r1 = r0;
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: Base.Other.Base62;
r0 := @parameter0: byte[];
if r0 != null goto r1 = r0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r1 = r0;
i0 = lengthof r1;
i2 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r1 = r0;
i0 = lengthof r1;
i2 = 0;
"->"Block 3:
[preds: 2 11 ] [succs: 4 12 ]
if i2 >= i0 goto return 1;
";
    "Block 3:
[preds: 2 11 ] [succs: 4 12 ]
if i2 >= i0 goto return 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
b1 = r1[i2];
if 48 > b1 goto (branch);
";
    "Block 3:
[preds: 2 11 ] [succs: 4 12 ]
if i2 >= i0 goto return 1;
"->"Block 12:
[preds: 3 ] [succs: ]
return 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
b1 = r1[i2];
if 48 > b1 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: 6 11 ]
if 57 >= b1 goto i2 = i2 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
b1 = r1[i2];
if 48 > b1 goto (branch);
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if 97 > b1 goto (branch);
";
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
if 57 >= b1 goto i2 = i2 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if 97 > b1 goto (branch);
";
    "Block 5:
[preds: 4 ] [succs: 6 11 ]
if 57 >= b1 goto i2 = i2 + 1;
"->"Block 11:
[preds: 5 7 9 ] [succs: 3 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if 97 > b1 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 8 11 ]
if 122 >= b1 goto i2 = i2 + 1;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
if 97 > b1 goto (branch);
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if 65 > b1 goto return 0;
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
if 122 >= b1 goto i2 = i2 + 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if 65 > b1 goto return 0;
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
if 122 >= b1 goto i2 = i2 + 1;
"->"Block 11:
[preds: 5 7 9 ] [succs: 3 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if 65 > b1 goto return 0;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
if 90 >= b1 goto i2 = i2 + 1;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
if 65 > b1 goto return 0;
"->"Block 10:
[preds: 8 9 ] [succs: ]
return 0;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if 90 >= b1 goto i2 = i2 + 1;
"->"Block 10:
[preds: 8 9 ] [succs: ]
return 0;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
if 90 >= b1 goto i2 = i2 + 1;
"->"Block 11:
[preds: 5 7 9 ] [succs: 3 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 5 7 9 ] [succs: 3 ]
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 11 ] [succs: 4 12 ]
if i2 >= i0 goto return 1;
";
}
