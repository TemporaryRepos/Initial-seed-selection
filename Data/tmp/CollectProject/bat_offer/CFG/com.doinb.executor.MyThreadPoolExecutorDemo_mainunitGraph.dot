digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(20)"
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>()"
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>()"
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(10)"
    "i0 = 1"
    "if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"
    "$r4 = staticinvoke <com.doinb.executor.MyThreadPoolExecutorDemo$lambda_main_0__32: java.lang.Runnable bootstrap$()>()"
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)"
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"
    "virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)"
    "goto [?= i0 = i0 + 1]"
    "$r9 := @caughtexception"
    "r10 = $r9"
    "virtualinvoke r10.<java.lang.InterruptedException: void printStackTrace()>()"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"
    "goto [?= return]"
    "$r8 := @caughtexception"
    "r12 = $r8"
    "virtualinvoke r12.<java.lang.Exception: void printStackTrace()>()"
    "$r6 := @caughtexception"
    "r7 = $r6"
    "throw r7"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(20)";
    "r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(20)"->"staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>()";
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>()"->"staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>()";
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>()"->"staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(10)";
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(10)"->"$r8 := @caughtexception";
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(10)"->"$r6 := @caughtexception";
    "staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(10)"->"i0 = 1";
    "i0 = 1"->"$r8 := @caughtexception";
    "i0 = 1"->"$r6 := @caughtexception";
    "i0 = 1"->"if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()";
    "if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"$r4 = staticinvoke <com.doinb.executor.MyThreadPoolExecutorDemo$lambda_main_0__32: java.lang.Runnable bootstrap$()>()";
    "if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()";
    "if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"$r8 := @caughtexception";
    "if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"$r6 := @caughtexception";
    "$r4 = staticinvoke <com.doinb.executor.MyThreadPoolExecutorDemo$lambda_main_0__32: java.lang.Runnable bootstrap$()>()"->"$r8 := @caughtexception";
    "$r4 = staticinvoke <com.doinb.executor.MyThreadPoolExecutorDemo$lambda_main_0__32: java.lang.Runnable bootstrap$()>()"->"$r6 := @caughtexception";
    "$r4 = staticinvoke <com.doinb.executor.MyThreadPoolExecutorDemo$lambda_main_0__32: java.lang.Runnable bootstrap$()>()"->"interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)"->"$r9 := @caughtexception";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)"->"$r8 := @caughtexception";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)"->"$r6 := @caughtexception";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4)"->"$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>";
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"$r9 := @caughtexception";
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"$r8 := @caughtexception";
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"$r6 := @caughtexception";
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)";
    "virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)"->"$r9 := @caughtexception";
    "virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)"->"$r8 := @caughtexception";
    "virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)"->"$r6 := @caughtexception";
    "virtualinvoke $r5.<java.util.concurrent.TimeUnit: void sleep(long)>(200L)"->"goto [?= i0 = i0 + 1]";
    "goto [?= i0 = i0 + 1]"->"$r8 := @caughtexception";
    "goto [?= i0 = i0 + 1]"->"$r6 := @caughtexception";
    "goto [?= i0 = i0 + 1]"->"i0 = i0 + 1";
    "$r9 := @caughtexception"->"$r8 := @caughtexception";
    "$r9 := @caughtexception"->"$r6 := @caughtexception";
    "$r9 := @caughtexception"->"r10 = $r9";
    "r10 = $r9"->"$r8 := @caughtexception";
    "r10 = $r9"->"$r6 := @caughtexception";
    "r10 = $r9"->"virtualinvoke r10.<java.lang.InterruptedException: void printStackTrace()>()";
    "virtualinvoke r10.<java.lang.InterruptedException: void printStackTrace()>()"->"$r8 := @caughtexception";
    "virtualinvoke r10.<java.lang.InterruptedException: void printStackTrace()>()"->"$r6 := @caughtexception";
    "virtualinvoke r10.<java.lang.InterruptedException: void printStackTrace()>()"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"$r8 := @caughtexception";
    "i0 = i0 + 1"->"$r6 := @caughtexception";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"$r8 := @caughtexception";
    "goto [?= (branch)]"->"$r6 := @caughtexception";
    "goto [?= (branch)]"->"if i0 > 10 goto interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r8 := @caughtexception"->"r12 = $r8";
    "$r8 := @caughtexception"->"$r6 := @caughtexception";
    "r12 = $r8"->"virtualinvoke r12.<java.lang.Exception: void printStackTrace()>()";
    "r12 = $r8"->"$r6 := @caughtexception";
    "virtualinvoke r12.<java.lang.Exception: void printStackTrace()>()"->"interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()";
    "virtualinvoke r12.<java.lang.Exception: void printStackTrace()>()"->"$r6 := @caughtexception";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r6 := @caughtexception"->"r7 = $r6";
    "$r6 := @caughtexception"->"$r6 := @caughtexception";
    "r7 = $r6"->"interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()";
    "r7 = $r6"->"$r6 := @caughtexception";
    "interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>()"->"throw r7";
}
