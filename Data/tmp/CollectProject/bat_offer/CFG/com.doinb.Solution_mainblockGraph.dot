digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(5.0);
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);
z0 = 0;
$i0 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i1 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i2 = $i0 % $i1;
if i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
i8 = virtualinvoke r0.<java.lang.Double: int intValue()>();
goto [?= $r2 = <java.lang.System: java.io.PrintStream out>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i4 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i5 = $i3 / $i4;
$i6 = virtualinvoke r1.<java.lang.Double: int intValue()>();
$i7 = i5 + 1;
i8 = $i6 * $i7;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i8);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(5.0);
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);
z0 = 0;
$i0 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i1 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i2 = $i0 % $i1;
if i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
"->"Block 1:
[preds: 0 ] [succs: 3 ]
i8 = virtualinvoke r0.<java.lang.Double: int intValue()>();
goto [?= $r2 = <java.lang.System: java.io.PrintStream out>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(5.0);
r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);
z0 = 0;
$i0 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i1 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i2 = $i0 % $i1;
if i2 != 0 goto $i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i4 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i5 = $i3 / $i4;
$i6 = virtualinvoke r1.<java.lang.Double: int intValue()>();
$i7 = i5 + 1;
i8 = $i6 * $i7;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
i8 = virtualinvoke r0.<java.lang.Double: int intValue()>();
goto [?= $r2 = <java.lang.System: java.io.PrintStream out>];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i8);
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i3 = virtualinvoke r0.<java.lang.Double: int intValue()>();
$i4 = virtualinvoke r1.<java.lang.Double: int intValue()>();
i5 = $i3 / $i4;
$i6 = virtualinvoke r1.<java.lang.Double: int intValue()>();
$i7 = i5 + 1;
i8 = $i6 * $i7;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i8);
return;
";
}
