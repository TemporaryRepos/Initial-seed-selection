digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "r2 := @parameter2: java.lang.String"
    "r3 := @parameter3: java.lang.String"
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:NONCE\u4e0d\u80fd\u4e3a\u7a7a\")"
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:SING\u4e0d\u80fd\u4e3a\u7a7a\")"
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:TIMESTAMP\u4e0d\u80fd\u4e3a\u7a7a\")"
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r3, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:CLIENT_ID\u4e0d\u80fd\u4e3a\u7a7a\")"
    "goto [?= return]"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "$r6 = <com.doinb.utils.SignUtil: org.slf4j.Logger log>"
    "$r7 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()"
    "interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r7)"
    "$r8 = new java.lang.IllegalArgumentException"
    "$r9 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()"
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9)"
    "throw $r8"
    "return"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"r2 := @parameter2: java.lang.String";
    "r2 := @parameter2: java.lang.String"->"r3 := @parameter3: java.lang.String";
    "r3 := @parameter3: java.lang.String"->"staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:NONCE\u4e0d\u80fd\u4e3a\u7a7a\")";
    "r3 := @parameter3: java.lang.String"->"$r4 := @caughtexception";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:NONCE\u4e0d\u80fd\u4e3a\u7a7a\")"->"staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:SING\u4e0d\u80fd\u4e3a\u7a7a\")";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:NONCE\u4e0d\u80fd\u4e3a\u7a7a\")"->"$r4 := @caughtexception";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:SING\u4e0d\u80fd\u4e3a\u7a7a\")"->"staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:TIMESTAMP\u4e0d\u80fd\u4e3a\u7a7a\")";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:SING\u4e0d\u80fd\u4e3a\u7a7a\")"->"$r4 := @caughtexception";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:TIMESTAMP\u4e0d\u80fd\u4e3a\u7a7a\")"->"staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r3, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:CLIENT_ID\u4e0d\u80fd\u4e3a\u7a7a\")";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:TIMESTAMP\u4e0d\u80fd\u4e3a\u7a7a\")"->"$r4 := @caughtexception";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r3, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:CLIENT_ID\u4e0d\u80fd\u4e3a\u7a7a\")"->"goto [?= return]";
    "staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r3, \"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25:CLIENT_ID\u4e0d\u80fd\u4e3a\u7a7a\")"->"$r4 := @caughtexception";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"r5 = $r4";
    "r5 = $r4"->"$r6 = <com.doinb.utils.SignUtil: org.slf4j.Logger log>";
    "$r6 = <com.doinb.utils.SignUtil: org.slf4j.Logger log>"->"$r7 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()";
    "$r7 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()"->"interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r7)";
    "interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r7)"->"$r8 = new java.lang.IllegalArgumentException";
    "$r8 = new java.lang.IllegalArgumentException"->"$r9 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()";
    "$r9 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()"->"specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9)";
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9)"->"throw $r8";
}
