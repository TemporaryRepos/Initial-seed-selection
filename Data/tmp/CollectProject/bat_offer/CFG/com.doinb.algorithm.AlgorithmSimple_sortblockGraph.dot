digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: com.doinb.algorithm.AlgorithmSimple;
r0 := @parameter0: int[];
i0 := @parameter1: int;
i1 := @parameter2: int;
i11 = i0;
i12 = i1;
i2 = r0[i0];
"
    "Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
"
    "Block 2:
[preds: 1 4 ] [succs: 3 5 ]
if i12 <= i11 goto $i5 = r0[i12];
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r0[i12];
if $i10 < i2 goto $i5 = r0[i12];
"
    "Block 4:
[preds: 3 ] [succs: 2 ]
i12 = i12 + -1;
goto [?= (branch)];
"
    "Block 5:
[preds: 2 3 ] [succs: 6 7 ]
$i5 = r0[i12];
if $i5 > i2 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
i13 = r0[i12];
$i9 = r0[i11];
r0[i12] = $i9;
r0[i11] = i13;
"
    "Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i8 = r0[i11];
if $i8 > i2 goto $i6 = r0[i11];
"
    "Block 9:
[preds: 8 ] [succs: 7 ]
i11 = i11 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 7 8 ] [succs: 11 1 ]
$i6 = r0[i11];
if $i6 < i2 goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 1 ]
i14 = r0[i11];
$i7 = r0[i12];
r0[i11] = $i7;
r0[i12] = i14;
goto [?= (branch)];
"
    "Block 12:
[preds: 1 ] [succs: 13 14 ]
if i11 <= i0 goto (branch);
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
$i4 = i11 - 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, i0, $i4);
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if i12 >= i1 goto return;
"
    "Block 15:
[preds: 14 ] [succs: 16 ]
$i3 = i12 + 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, $i3, i1);
"
    "Block 16:
[preds: 14 15 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: com.doinb.algorithm.AlgorithmSimple;
r0 := @parameter0: int[];
i0 := @parameter1: int;
i1 := @parameter2: int;
i11 = i0;
i12 = i1;
i2 = r0[i0];
"->"Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
";
    "Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
"->"Block 2:
[preds: 1 4 ] [succs: 3 5 ]
if i12 <= i11 goto $i5 = r0[i12];
";
    "Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
"->"Block 12:
[preds: 1 ] [succs: 13 14 ]
if i11 <= i0 goto (branch);
";
    "Block 2:
[preds: 1 4 ] [succs: 3 5 ]
if i12 <= i11 goto $i5 = r0[i12];
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r0[i12];
if $i10 < i2 goto $i5 = r0[i12];
";
    "Block 2:
[preds: 1 4 ] [succs: 3 5 ]
if i12 <= i11 goto $i5 = r0[i12];
"->"Block 5:
[preds: 2 3 ] [succs: 6 7 ]
$i5 = r0[i12];
if $i5 > i2 goto (branch);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r0[i12];
if $i10 < i2 goto $i5 = r0[i12];
"->"Block 4:
[preds: 3 ] [succs: 2 ]
i12 = i12 + -1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r0[i12];
if $i10 < i2 goto $i5 = r0[i12];
"->"Block 5:
[preds: 2 3 ] [succs: 6 7 ]
$i5 = r0[i12];
if $i5 > i2 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 2 ]
i12 = i12 + -1;
goto [?= (branch)];
"->"Block 2:
[preds: 1 4 ] [succs: 3 5 ]
if i12 <= i11 goto $i5 = r0[i12];
";
    "Block 5:
[preds: 2 3 ] [succs: 6 7 ]
$i5 = r0[i12];
if $i5 > i2 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 ]
i13 = r0[i12];
$i9 = r0[i11];
r0[i12] = $i9;
r0[i11] = i13;
";
    "Block 5:
[preds: 2 3 ] [succs: 6 7 ]
$i5 = r0[i12];
if $i5 > i2 goto (branch);
"->"Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
i13 = r0[i12];
$i9 = r0[i11];
r0[i12] = $i9;
r0[i11] = i13;
"->"Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
";
    "Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$i8 = r0[i11];
if $i8 > i2 goto $i6 = r0[i11];
";
    "Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
"->"Block 10:
[preds: 7 8 ] [succs: 11 1 ]
$i6 = r0[i11];
if $i6 < i2 goto (branch);
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i8 = r0[i11];
if $i8 > i2 goto $i6 = r0[i11];
"->"Block 9:
[preds: 8 ] [succs: 7 ]
i11 = i11 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$i8 = r0[i11];
if $i8 > i2 goto $i6 = r0[i11];
"->"Block 10:
[preds: 7 8 ] [succs: 11 1 ]
$i6 = r0[i11];
if $i6 < i2 goto (branch);
";
    "Block 9:
[preds: 8 ] [succs: 7 ]
i11 = i11 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 5 6 9 ] [succs: 8 10 ]
if i12 <= i11 goto $i6 = r0[i11];
";
    "Block 10:
[preds: 7 8 ] [succs: 11 1 ]
$i6 = r0[i11];
if $i6 < i2 goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 1 ]
i14 = r0[i11];
$i7 = r0[i12];
r0[i11] = $i7;
r0[i12] = i14;
goto [?= (branch)];
";
    "Block 10:
[preds: 7 8 ] [succs: 11 1 ]
$i6 = r0[i11];
if $i6 < i2 goto (branch);
"->"Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
";
    "Block 11:
[preds: 10 ] [succs: 1 ]
i14 = r0[i11];
$i7 = r0[i12];
r0[i11] = $i7;
r0[i12] = i14;
goto [?= (branch)];
"->"Block 1:
[preds: 0 10 11 ] [succs: 2 12 ]
if i12 <= i11 goto (branch);
";
    "Block 12:
[preds: 1 ] [succs: 13 14 ]
if i11 <= i0 goto (branch);
"->"Block 13:
[preds: 12 ] [succs: 14 ]
$i4 = i11 - 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, i0, $i4);
";
    "Block 12:
[preds: 1 ] [succs: 13 14 ]
if i11 <= i0 goto (branch);
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if i12 >= i1 goto return;
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
$i4 = i11 - 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, i0, $i4);
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if i12 >= i1 goto return;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if i12 >= i1 goto return;
"->"Block 15:
[preds: 14 ] [succs: 16 ]
$i3 = i12 + 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, $i3, i1);
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
if i12 >= i1 goto return;
"->"Block 16:
[preds: 14 15 ] [succs: ]
return;
";
    "Block 15:
[preds: 14 ] [succs: 16 ]
$i3 = i12 + 1;
virtualinvoke r1.<com.doinb.algorithm.AlgorithmSimple: void sort(int[],int,int)>(r0, $i3, i1);
"->"Block 16:
[preds: 14 15 ] [succs: ]
return;
";
}
