digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.nustaq.offheap.FreeList;
l6 := @parameter0: long;
i0 := @parameter1: int;
i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0);
$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r2 = $r1[i1];
if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r16 = newarray (long)[500];
$r17[i1] = $r16;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i3 = $r3[i1];
$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r5 = $r4[i1];
$i2 = lengthof $r5;
if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r10 = $r9[i1];
$i7 = lengthof $r10;
$i8 = $i7 * 2;
$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646);
r11 = newarray (long)[$i9];
$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r14 = $r12[i1];
$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i10 = $r13[i1];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10);
$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r15[i1] = r11;
"
    "Block 4:
[preds: 2 3 ] [succs: ]
$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r8 = $r6[i1];
$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i4 = $r7[i1];
$i5 = $i4 + 1;
$r7[i1] = $i5;
$r8[$i4] = l6;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.nustaq.offheap.FreeList;
l6 := @parameter0: long;
i0 := @parameter1: int;
i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0);
$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r2 = $r1[i1];
if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r16 = newarray (long)[500];
$r17[i1] = $r16;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: org.nustaq.offheap.FreeList;
l6 := @parameter0: long;
i0 := @parameter1: int;
i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0);
$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r2 = $r1[i1];
if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i3 = $r3[i1];
$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r5 = $r4[i1];
$i2 = lengthof $r5;
if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r16 = newarray (long)[500];
$r17[i1] = $r16;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i3 = $r3[i1];
$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r5 = $r4[i1];
$i2 = lengthof $r5;
if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i3 = $r3[i1];
$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r5 = $r4[i1];
$i2 = lengthof $r5;
if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r10 = $r9[i1];
$i7 = lengthof $r10;
$i8 = $i7 * 2;
$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646);
r11 = newarray (long)[$i9];
$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r14 = $r12[i1];
$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i10 = $r13[i1];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10);
$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r15[i1] = r11;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i3 = $r3[i1];
$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r5 = $r4[i1];
$i2 = lengthof $r5;
if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
"->"Block 4:
[preds: 2 3 ] [succs: ]
$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r8 = $r6[i1];
$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i4 = $r7[i1];
$i5 = $i4 + 1;
$r7[i1] = $i5;
$r8[$i4] = l6;
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r10 = $r9[i1];
$i7 = lengthof $r10;
$i8 = $i7 * 2;
$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646);
r11 = newarray (long)[$i9];
$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r14 = $r12[i1];
$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i10 = $r13[i1];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10);
$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r15[i1] = r11;
"->"Block 4:
[preds: 2 3 ] [succs: ]
$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>;
$r8 = $r6[i1];
$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>;
$i4 = $r7[i1];
$i5 = $i4 + 1;
$r7[i1] = $i5;
$r8[$i4] = l6;
return;
";
}
