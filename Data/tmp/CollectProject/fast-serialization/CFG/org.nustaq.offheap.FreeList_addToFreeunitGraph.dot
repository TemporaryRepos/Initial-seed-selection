digraph "unitGraph" {
    "r0 := @this: org.nustaq.offheap.FreeList"
    "l6 := @parameter0: long"
    "i0 := @parameter1: int"
    "i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)"
    "$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r2 = $r1[i1]"
    "if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r16 = newarray (long)[500]"
    "$r17[i1] = $r16"
    "$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$i3 = $r3[i1]"
    "$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r5 = $r4[i1]"
    "$i2 = lengthof $r5"
    "if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r10 = $r9[i1]"
    "$i7 = lengthof $r10"
    "$i8 = $i7 * 2"
    "$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646)"
    "r11 = newarray (long)[$i9]"
    "$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r14 = $r12[i1]"
    "$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$i10 = $r13[i1]"
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10)"
    "$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r15[i1] = r11"
    "$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r8 = $r6[i1]"
    "$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$i4 = $r7[i1]"
    "$i5 = $i4 + 1"
    "$r7[i1] = $i5"
    "$r8[$i4] = l6"
    "return"
    "r0 := @this: org.nustaq.offheap.FreeList"->"l6 := @parameter0: long";
    "l6 := @parameter0: long"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)";
    "i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)"->"$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r1 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r2 = $r1[i1]";
    "$r2 = $r1[i1]"->"if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "if $r2 != null goto $r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r17 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r16 = newarray (long)[500]";
    "$r16 = newarray (long)[500]"->"$r17[i1] = $r16";
    "$r17[i1] = $r16"->"$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$i3 = $r3[i1]";
    "$i3 = $r3[i1]"->"$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r4 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r5 = $r4[i1]";
    "$r5 = $r4[i1]"->"$i2 = lengthof $r5";
    "$i2 = lengthof $r5"->"if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "if $i3 < $i2 goto $r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r9 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r10 = $r9[i1]";
    "$r10 = $r9[i1]"->"$i7 = lengthof $r10";
    "$i7 = lengthof $r10"->"$i8 = $i7 * 2";
    "$i8 = $i7 * 2"->"$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646)";
    "$i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 2147483646)"->"r11 = newarray (long)[$i9]";
    "r11 = newarray (long)[$i9]"->"$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r12 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r14 = $r12[i1]";
    "$r14 = $r12[i1]"->"$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r13 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$i10 = $r13[i1]";
    "$i10 = $r13[i1]"->"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10)";
    "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r11, 0, $i10)"->"$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r15 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r15[i1] = r11";
    "$r15[i1] = r11"->"$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "$r6 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r8 = $r6[i1]";
    "$r8 = $r6[i1]"->"$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r7 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$i4 = $r7[i1]";
    "$i4 = $r7[i1]"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"$r7[i1] = $i5";
    "$r7[i1] = $i5"->"$r8[$i4] = l6";
    "$r8[$i4] = l6"->"return";
}
