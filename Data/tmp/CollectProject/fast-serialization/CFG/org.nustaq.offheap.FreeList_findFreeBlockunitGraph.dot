digraph "unitGraph" {
    "r0 := @this: org.nustaq.offheap.FreeList"
    "i0 := @parameter0: int"
    "i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)"
    "$r1 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$i2 = $r1[i1]"
    "if $i2 <= 0 goto return 0L"
    "$r2 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"
    "$r4 = $r2[i1]"
    "$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"
    "$i3 = $r3[i1]"
    "$i4 = $i3 - 1"
    "$r3[i1] = $i4"
    "$l5 = $r4[$i4]"
    "return $l5"
    "return 0L"
    "r0 := @this: org.nustaq.offheap.FreeList"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)";
    "i1 = virtualinvoke r0.<org.nustaq.offheap.FreeList: int computeListIndex(int)>(i0)"->"$r1 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r1 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$i2 = $r1[i1]";
    "$i2 = $r1[i1]"->"if $i2 <= 0 goto return 0L";
    "if $i2 <= 0 goto return 0L"->"$r2 = r0.<org.nustaq.offheap.FreeList: long[][] flists>";
    "if $i2 <= 0 goto return 0L"->"return 0L";
    "$r2 = r0.<org.nustaq.offheap.FreeList: long[][] flists>"->"$r4 = $r2[i1]";
    "$r4 = $r2[i1]"->"$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>";
    "$r3 = r0.<org.nustaq.offheap.FreeList: int[] flIndex>"->"$i3 = $r3[i1]";
    "$i3 = $r3[i1]"->"$i4 = $i3 - 1";
    "$i4 = $i3 - 1"->"$r3[i1] = $i4";
    "$r3[i1] = $i4"->"$l5 = $r4[$i4]";
    "$l5 = $r4[$i4]"->"return $l5";
}
