digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: utils.TablePreSplitter;
r4 := @parameter0: java.lang.String;
r12 := @parameter1: java.util.List;
r6 := @parameter2: java.lang.String;
r8 := @parameter3: java.lang.String;
i0 := @parameter4: int;
$r0 = new org.apache.hadoop.hbase.client.HBaseAdmin;
$r2 = r1.<utils.TablePreSplitter: org.apache.hadoop.conf.Configuration conf>;
specialinvoke $r0.<org.apache.hadoop.hbase.client.HBaseAdmin: void <init>(org.apache.hadoop.conf.Configuration)>($r2);
r3 = $r0;
r5 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r4);
r7 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r6);
r9 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r8);
$r10 = new org.apache.hadoop.hbase.HTableDescriptor;
specialinvoke $r10.<org.apache.hadoop.hbase.HTableDescriptor: void <init>(byte[])>(r5);
r11 = $r10;
r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r15 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = new org.apache.hadoop.hbase.HColumnDescriptor;
specialinvoke $r17.<org.apache.hadoop.hbase.HColumnDescriptor: void <init>(java.lang.String)>(r16);
r18 = $r17;
virtualinvoke r11.<org.apache.hadoop.hbase.HTableDescriptor: void addFamily(org.apache.hadoop.hbase.HColumnDescriptor)>(r18);
goto [?= $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
$z1 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: boolean tableExists(byte[])>(r5);
if $z1 == 0 goto $z2 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r14 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: java.util.List getTableRegions(byte[])>(r5);
$i1 = interfaceinvoke $r14.<java.util.List: int size()>();
if $i1 != i0 goto $z2 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z2 = 1;
goto [?= return $z2];
"
    "Block 6:
[preds: 3 4 ] [succs: 7 ]
$z2 = 0;
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return $z2;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: utils.TablePreSplitter;
r4 := @parameter0: java.lang.String;
r12 := @parameter1: java.util.List;
r6 := @parameter2: java.lang.String;
r8 := @parameter3: java.lang.String;
i0 := @parameter4: int;
$r0 = new org.apache.hadoop.hbase.client.HBaseAdmin;
$r2 = r1.<utils.TablePreSplitter: org.apache.hadoop.conf.Configuration conf>;
specialinvoke $r0.<org.apache.hadoop.hbase.client.HBaseAdmin: void <init>(org.apache.hadoop.conf.Configuration)>($r2);
r3 = $r0;
r5 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r4);
r7 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r6);
r9 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: byte[] toBytes(java.lang.String)>(r8);
$r10 = new org.apache.hadoop.hbase.HTableDescriptor;
specialinvoke $r10.<org.apache.hadoop.hbase.HTableDescriptor: void <init>(byte[])>(r5);
r11 = $r10;
r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r15 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = new org.apache.hadoop.hbase.HColumnDescriptor;
specialinvoke $r17.<org.apache.hadoop.hbase.HColumnDescriptor: void <init>(java.lang.String)>(r16);
r18 = $r17;
virtualinvoke r11.<org.apache.hadoop.hbase.HTableDescriptor: void addFamily(org.apache.hadoop.hbase.HColumnDescriptor)>(r18);
goto [?= $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
"->"Block 3:
[preds: 1 ] [succs: 4 6 ]
virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
$z1 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: boolean tableExists(byte[])>(r5);
if $z1 == 0 goto $z2 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r15 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = new org.apache.hadoop.hbase.HColumnDescriptor;
specialinvoke $r17.<org.apache.hadoop.hbase.HColumnDescriptor: void <init>(java.lang.String)>(r16);
r18 = $r17;
virtualinvoke r11.<org.apache.hadoop.hbase.HTableDescriptor: void addFamily(org.apache.hadoop.hbase.HColumnDescriptor)>(r18);
goto [?= $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
";
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
$z1 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: boolean tableExists(byte[])>(r5);
if $z1 == 0 goto $z2 = 0;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r14 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: java.util.List getTableRegions(byte[])>(r5);
$i1 = interfaceinvoke $r14.<java.util.List: int size()>();
if $i1 != i0 goto $z2 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 6 ]
virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: void createTable(org.apache.hadoop.hbase.HTableDescriptor,byte[],byte[],int)>(r11, r7, r9, i0);
$z1 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: boolean tableExists(byte[])>(r5);
if $z1 == 0 goto $z2 = 0;
"->"Block 6:
[preds: 3 4 ] [succs: 7 ]
$z2 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r14 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: java.util.List getTableRegions(byte[])>(r5);
$i1 = interfaceinvoke $r14.<java.util.List: int size()>();
if $i1 != i0 goto $z2 = 0;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$z2 = 1;
goto [?= return $z2];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r14 = virtualinvoke r3.<org.apache.hadoop.hbase.client.HBaseAdmin: java.util.List getTableRegions(byte[])>(r5);
$i1 = interfaceinvoke $r14.<java.util.List: int size()>();
if $i1 != i0 goto $z2 = 0;
"->"Block 6:
[preds: 3 4 ] [succs: 7 ]
$z2 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$z2 = 1;
goto [?= return $z2];
"->"Block 7:
[preds: 5 6 ] [succs: ]
return $z2;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 ]
$z2 = 0;
"->"Block 7:
[preds: 5 6 ] [succs: ]
return $z2;
";
}
