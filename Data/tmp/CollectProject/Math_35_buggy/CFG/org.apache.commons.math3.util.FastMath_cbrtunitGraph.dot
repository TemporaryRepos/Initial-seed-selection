digraph "unitGraph" {
    "d42 := @parameter0: double"
    "l18 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d42)"
    "$l0 = l18 >> 52"
    "$l1 = $l0 & 2047L"
    "$i2 = (int) $l1"
    "i19 = $i2 - 1023"
    "z0 = 0"
    "if i19 != -1023 goto (branch)"
    "$b14 = d42 cmpl 0.0"
    "if $b14 != 0 goto z0 = 1"
    "return d42"
    "z0 = 1"
    "d42 = d42 * 1.8014398509481984E16"
    "$l15 = l18 >> 52"
    "$l16 = $l15 & 2047L"
    "$i17 = (int) $l16"
    "i19 = $i17 - 1023"
    "if i19 != 1024 goto i3 = i19 / 3"
    "i3 = i19 / 3"
    "$l8 = l18 & -9223372036854775808L"
    "$i4 = i3 + 1023"
    "$i5 = $i4 & 2047"
    "$l6 = (long) $i5"
    "$l7 = $l6 << 52"
    "$l9 = $l8 | $l7"
    "d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l9)"
    "$l10 = l18 & 4503599627370495L"
    "$l11 = $l10 | 4607182418800017408L"
    "d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l11)"
    "d43 = -0.010714690733195933"
    "$d2 = d43 * d1"
    "d44 = $d2 + 0.0875862700108075"
    "$d3 = d44 * d1"
    "d45 = $d3 + -0.3058015757857271"
    "$d4 = d45 * d1"
    "d46 = $d4 + 0.7249995199969751"
    "$d5 = d46 * d1"
    "d47 = $d5 + 0.5039018405998233"
    "$r0 = <org.apache.commons.math3.util.FastMath: double[] CBRTTWO>"
    "$i12 = i19 % 3"
    "$i13 = $i12 + 2"
    "$d6 = $r0[$i13]"
    "d48 = d47 * $d6"
    "$d7 = d0 * d0"
    "$d8 = $d7 * d0"
    "d9 = d42 / $d8"
    "$d10 = d48 * d48"
    "$d11 = $d10 * d48"
    "$d14 = d9 - $d11"
    "$d12 = 3.0 * d48"
    "$d13 = $d12 * d48"
    "$d15 = $d14 / $d13"
    "d49 = d48 + $d15"
    "$d16 = d49 * d49"
    "$d17 = $d16 * d49"
    "$d20 = d9 - $d17"
    "$d18 = 3.0 * d49"
    "$d19 = $d18 * d49"
    "$d21 = $d20 / $d19"
    "d50 = d49 + $d21"
    "d51 = d50 * 1.073741824E9"
    "$d22 = d50 + d51"
    "d23 = $d22 - d51"
    "d24 = d50 - d23"
    "d52 = d23 * d23"
    "$d25 = d23 * d24"
    "$d27 = $d25 * 2.0"
    "$d26 = d24 * d24"
    "d53 = $d27 + $d26"
    "d54 = d52 * 1.073741824E9"
    "$d28 = d52 + d54"
    "d29 = $d28 - d54"
    "$d30 = d52 - d29"
    "d55 = d53 + $d30"
    "d56 = d29"
    "$d32 = d56 * d24"
    "$d31 = d23 * d55"
    "$d34 = $d32 + $d31"
    "$d33 = d55 * d24"
    "d57 = $d34 + $d33"
    "d58 = d56 * d23"
    "d35 = d9 - d58"
    "$d36 = d35 - d9"
    "$d37 = $d36 + d58"
    "d59 = neg $d37"
    "d60 = d59 - d57"
    "$d40 = d35 + d60"
    "$d38 = 3.0 * d50"
    "$d39 = $d38 * d50"
    "$d41 = $d40 / $d39"
    "d61 = d50 + $d41"
    "d62 = d61 * d0"
    "if z0 == 0 goto return d62"
    "d62 = d62 * 3.814697265625E-6"
    "return d62"
    "d42 := @parameter0: double"->"l18 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d42)";
    "l18 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d42)"->"$l0 = l18 >> 52";
    "$l0 = l18 >> 52"->"$l1 = $l0 & 2047L";
    "$l1 = $l0 & 2047L"->"$i2 = (int) $l1";
    "$i2 = (int) $l1"->"i19 = $i2 - 1023";
    "i19 = $i2 - 1023"->"z0 = 0";
    "z0 = 0"->"if i19 != -1023 goto (branch)";
    "if i19 != -1023 goto (branch)"->"$b14 = d42 cmpl 0.0";
    "if i19 != -1023 goto (branch)"->"if i19 != 1024 goto i3 = i19 / 3";
    "$b14 = d42 cmpl 0.0"->"if $b14 != 0 goto z0 = 1";
    "if $b14 != 0 goto z0 = 1"->"return d42";
    "if $b14 != 0 goto z0 = 1"->"z0 = 1";
    "z0 = 1"->"d42 = d42 * 1.8014398509481984E16";
    "d42 = d42 * 1.8014398509481984E16"->"l18 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d42)";
    "l18 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d42)"->"$l15 = l18 >> 52";
    "$l15 = l18 >> 52"->"$l16 = $l15 & 2047L";
    "$l16 = $l15 & 2047L"->"$i17 = (int) $l16";
    "$i17 = (int) $l16"->"i19 = $i17 - 1023";
    "i19 = $i17 - 1023"->"if i19 != 1024 goto i3 = i19 / 3";
    "if i19 != 1024 goto i3 = i19 / 3"->"return d42";
    "if i19 != 1024 goto i3 = i19 / 3"->"i3 = i19 / 3";
    "i3 = i19 / 3"->"$l8 = l18 & -9223372036854775808L";
    "$l8 = l18 & -9223372036854775808L"->"$i4 = i3 + 1023";
    "$i4 = i3 + 1023"->"$i5 = $i4 & 2047";
    "$i5 = $i4 & 2047"->"$l6 = (long) $i5";
    "$l6 = (long) $i5"->"$l7 = $l6 << 52";
    "$l7 = $l6 << 52"->"$l9 = $l8 | $l7";
    "$l9 = $l8 | $l7"->"d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l9)";
    "d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l9)"->"$l10 = l18 & 4503599627370495L";
    "$l10 = l18 & 4503599627370495L"->"$l11 = $l10 | 4607182418800017408L";
    "$l11 = $l10 | 4607182418800017408L"->"d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l11)";
    "d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l11)"->"d43 = -0.010714690733195933";
    "d43 = -0.010714690733195933"->"$d2 = d43 * d1";
    "$d2 = d43 * d1"->"d44 = $d2 + 0.0875862700108075";
    "d44 = $d2 + 0.0875862700108075"->"$d3 = d44 * d1";
    "$d3 = d44 * d1"->"d45 = $d3 + -0.3058015757857271";
    "d45 = $d3 + -0.3058015757857271"->"$d4 = d45 * d1";
    "$d4 = d45 * d1"->"d46 = $d4 + 0.7249995199969751";
    "d46 = $d4 + 0.7249995199969751"->"$d5 = d46 * d1";
    "$d5 = d46 * d1"->"d47 = $d5 + 0.5039018405998233";
    "d47 = $d5 + 0.5039018405998233"->"$r0 = <org.apache.commons.math3.util.FastMath: double[] CBRTTWO>";
    "$r0 = <org.apache.commons.math3.util.FastMath: double[] CBRTTWO>"->"$i12 = i19 % 3";
    "$i12 = i19 % 3"->"$i13 = $i12 + 2";
    "$i13 = $i12 + 2"->"$d6 = $r0[$i13]";
    "$d6 = $r0[$i13]"->"d48 = d47 * $d6";
    "d48 = d47 * $d6"->"$d7 = d0 * d0";
    "$d7 = d0 * d0"->"$d8 = $d7 * d0";
    "$d8 = $d7 * d0"->"d9 = d42 / $d8";
    "d9 = d42 / $d8"->"$d10 = d48 * d48";
    "$d10 = d48 * d48"->"$d11 = $d10 * d48";
    "$d11 = $d10 * d48"->"$d14 = d9 - $d11";
    "$d14 = d9 - $d11"->"$d12 = 3.0 * d48";
    "$d12 = 3.0 * d48"->"$d13 = $d12 * d48";
    "$d13 = $d12 * d48"->"$d15 = $d14 / $d13";
    "$d15 = $d14 / $d13"->"d49 = d48 + $d15";
    "d49 = d48 + $d15"->"$d16 = d49 * d49";
    "$d16 = d49 * d49"->"$d17 = $d16 * d49";
    "$d17 = $d16 * d49"->"$d20 = d9 - $d17";
    "$d20 = d9 - $d17"->"$d18 = 3.0 * d49";
    "$d18 = 3.0 * d49"->"$d19 = $d18 * d49";
    "$d19 = $d18 * d49"->"$d21 = $d20 / $d19";
    "$d21 = $d20 / $d19"->"d50 = d49 + $d21";
    "d50 = d49 + $d21"->"d51 = d50 * 1.073741824E9";
    "d51 = d50 * 1.073741824E9"->"$d22 = d50 + d51";
    "$d22 = d50 + d51"->"d23 = $d22 - d51";
    "d23 = $d22 - d51"->"d24 = d50 - d23";
    "d24 = d50 - d23"->"d52 = d23 * d23";
    "d52 = d23 * d23"->"$d25 = d23 * d24";
    "$d25 = d23 * d24"->"$d27 = $d25 * 2.0";
    "$d27 = $d25 * 2.0"->"$d26 = d24 * d24";
    "$d26 = d24 * d24"->"d53 = $d27 + $d26";
    "d53 = $d27 + $d26"->"d54 = d52 * 1.073741824E9";
    "d54 = d52 * 1.073741824E9"->"$d28 = d52 + d54";
    "$d28 = d52 + d54"->"d29 = $d28 - d54";
    "d29 = $d28 - d54"->"$d30 = d52 - d29";
    "$d30 = d52 - d29"->"d55 = d53 + $d30";
    "d55 = d53 + $d30"->"d56 = d29";
    "d56 = d29"->"$d32 = d56 * d24";
    "$d32 = d56 * d24"->"$d31 = d23 * d55";
    "$d31 = d23 * d55"->"$d34 = $d32 + $d31";
    "$d34 = $d32 + $d31"->"$d33 = d55 * d24";
    "$d33 = d55 * d24"->"d57 = $d34 + $d33";
    "d57 = $d34 + $d33"->"d58 = d56 * d23";
    "d58 = d56 * d23"->"d35 = d9 - d58";
    "d35 = d9 - d58"->"$d36 = d35 - d9";
    "$d36 = d35 - d9"->"$d37 = $d36 + d58";
    "$d37 = $d36 + d58"->"d59 = neg $d37";
    "d59 = neg $d37"->"d60 = d59 - d57";
    "d60 = d59 - d57"->"$d40 = d35 + d60";
    "$d40 = d35 + d60"->"$d38 = 3.0 * d50";
    "$d38 = 3.0 * d50"->"$d39 = $d38 * d50";
    "$d39 = $d38 * d50"->"$d41 = $d40 / $d39";
    "$d41 = $d40 / $d39"->"d61 = d50 + $d41";
    "d61 = d50 + $d41"->"d62 = d61 * d0";
    "d62 = d61 * d0"->"if z0 == 0 goto return d62";
    "if z0 == 0 goto return d62"->"d62 = d62 * 3.814697265625E-6";
    "if z0 == 0 goto return d62"->"return d62";
    "d62 = d62 * 3.814697265625E-6"->"return d62";
}
