digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d63 := @parameter0: double;
z0 = 0;
$b0 = d63 cmpl d63;
if $b0 == 0 goto $b1 = d63 cmpl 20.0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return d63;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d63 cmpl 20.0;
if $b1 <= 0 goto $b2 = d63 cmpg -20.0;
"
    "Block 3:
[preds: 2 ] [succs: ]
return 1.0;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$b2 = d63 cmpg -20.0;
if $b2 >= 0 goto $b3 = d63 cmpl 0.0;
"
    "Block 5:
[preds: 4 ] [succs: ]
return -1.0;
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$b3 = d63 cmpl 0.0;
if $b3 != 0 goto $b4 = d63 cmpg 0.0;
"
    "Block 7:
[preds: 6 ] [succs: ]
return d63;
"
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$b4 = d63 cmpg 0.0;
if $b4 >= 0 goto $b5 = d63 cmpl 0.5;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
d63 = neg d63;
z0 = 1;
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$b5 = d63 cmpl 0.5;
if $b5 < 0 goto r1 = newarray (double)[2];
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
r0 = newarray (double)[2];
$d29 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d29, 0.0, r0);
$d32 = r0[0];
$d31 = r0[1];
d64 = $d32 + $d31;
$d33 = r0[0];
$d35 = d64 - $d33;
$d34 = r0[1];
$d36 = $d35 - $d34;
d65 = neg $d36;
d66 = -1.0 + d64;
$d37 = d66 + 1.0;
$d38 = $d37 - d64;
d67 = neg $d38;
d68 = d66 + d65;
$d39 = d68 - d66;
$d40 = $d39 - d65;
$d41 = neg $d40;
d69 = d67 + $d41;
d70 = d68;
d71 = 1.0 + d64;
$d42 = d71 - 1.0;
$d43 = $d42 - d64;
d72 = neg $d43;
d73 = d71 + d65;
$d44 = d73 - d71;
$d45 = $d44 - d65;
$d46 = neg $d45;
d74 = d72 + $d46;
d75 = d73;
d76 = d75 * 1.073741824E9;
$d47 = d75 + d76;
d77 = $d47 - d76;
d78 = d75 - d77;
d79 = d70 / d75;
d80 = d79 * 1.073741824E9;
$d48 = d79 + d80;
d81 = $d48 - d80;
d82 = d79 - d81;
$d49 = d77 * d81;
$d51 = d70 - $d49;
$d50 = d77 * d82;
$d53 = $d51 - $d50;
$d52 = d78 * d81;
$d55 = $d53 - $d52;
$d54 = d78 * d82;
$d56 = $d55 - $d54;
$d57 = $d56 / d75;
d83 = d82 + $d57;
$d58 = d69 / d75;
d84 = d83 + $d58;
$d59 = neg d74;
$d60 = $d59 * d70;
$d61 = $d60 / d75;
$d62 = $d61 / d75;
d85 = d84 + $d62;
d86 = d81 + d85;
goto [?= (branch)];
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
r1 = newarray (double)[2];
$d0 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double expm1(double,double[])>($d0, r1);
$d3 = r1[0];
$d2 = r1[1];
d87 = $d3 + $d2;
$d4 = r1[0];
$d6 = d87 - $d4;
$d5 = r1[1];
$d7 = $d6 - $d5;
d88 = neg $d7;
d89 = d87;
d90 = d88;
d91 = 2.0 + d87;
$d8 = d91 - 2.0;
$d9 = $d8 - d87;
d92 = neg $d9;
d93 = d91 + d88;
$d10 = d93 - d91;
$d11 = $d10 - d88;
$d12 = neg $d11;
d94 = d92 + $d12;
d95 = d93;
d96 = d95 * 1.073741824E9;
$d13 = d95 + d96;
d97 = $d13 - d96;
d98 = d95 - d97;
d99 = d89 / d95;
d100 = d99 * 1.073741824E9;
$d14 = d99 + d100;
d101 = $d14 - d100;
d102 = d99 - d101;
$d15 = d97 * d101;
$d17 = d89 - $d15;
$d16 = d97 * d102;
$d19 = $d17 - $d16;
$d18 = d98 * d101;
$d21 = $d19 - $d18;
$d20 = d98 * d102;
$d22 = $d21 - $d20;
$d23 = $d22 / d95;
d103 = d102 + $d23;
$d24 = d90 / d95;
d104 = d103 + $d24;
$d25 = neg d94;
$d26 = $d25 * d89;
$d27 = $d26 / d95;
$d28 = $d27 / d95;
d105 = d104 + $d28;
d86 = d101 + d105;
"
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if z0 == 0 goto return d86;
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
d86 = neg d86;
"
    "Block 15:
[preds: 13 14 ] [succs: ]
return d86;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d63 := @parameter0: double;
z0 = 0;
$b0 = d63 cmpl d63;
if $b0 == 0 goto $b1 = d63 cmpl 20.0;
"->"Block 1:
[preds: 0 ] [succs: ]
return d63;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d63 := @parameter0: double;
z0 = 0;
$b0 = d63 cmpl d63;
if $b0 == 0 goto $b1 = d63 cmpl 20.0;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d63 cmpl 20.0;
if $b1 <= 0 goto $b2 = d63 cmpg -20.0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d63 cmpl 20.0;
if $b1 <= 0 goto $b2 = d63 cmpg -20.0;
"->"Block 3:
[preds: 2 ] [succs: ]
return 1.0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d63 cmpl 20.0;
if $b1 <= 0 goto $b2 = d63 cmpg -20.0;
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$b2 = d63 cmpg -20.0;
if $b2 >= 0 goto $b3 = d63 cmpl 0.0;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$b2 = d63 cmpg -20.0;
if $b2 >= 0 goto $b3 = d63 cmpl 0.0;
"->"Block 5:
[preds: 4 ] [succs: ]
return -1.0;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$b2 = d63 cmpg -20.0;
if $b2 >= 0 goto $b3 = d63 cmpl 0.0;
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$b3 = d63 cmpl 0.0;
if $b3 != 0 goto $b4 = d63 cmpg 0.0;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$b3 = d63 cmpl 0.0;
if $b3 != 0 goto $b4 = d63 cmpg 0.0;
"->"Block 7:
[preds: 6 ] [succs: ]
return d63;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$b3 = d63 cmpl 0.0;
if $b3 != 0 goto $b4 = d63 cmpg 0.0;
"->"Block 8:
[preds: 6 ] [succs: 9 10 ]
$b4 = d63 cmpg 0.0;
if $b4 >= 0 goto $b5 = d63 cmpl 0.5;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$b4 = d63 cmpg 0.0;
if $b4 >= 0 goto $b5 = d63 cmpl 0.5;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
d63 = neg d63;
z0 = 1;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$b4 = d63 cmpg 0.0;
if $b4 >= 0 goto $b5 = d63 cmpl 0.5;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$b5 = d63 cmpl 0.5;
if $b5 < 0 goto r1 = newarray (double)[2];
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
d63 = neg d63;
z0 = 1;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$b5 = d63 cmpl 0.5;
if $b5 < 0 goto r1 = newarray (double)[2];
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$b5 = d63 cmpl 0.5;
if $b5 < 0 goto r1 = newarray (double)[2];
"->"Block 11:
[preds: 10 ] [succs: 13 ]
r0 = newarray (double)[2];
$d29 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d29, 0.0, r0);
$d32 = r0[0];
$d31 = r0[1];
d64 = $d32 + $d31;
$d33 = r0[0];
$d35 = d64 - $d33;
$d34 = r0[1];
$d36 = $d35 - $d34;
d65 = neg $d36;
d66 = -1.0 + d64;
$d37 = d66 + 1.0;
$d38 = $d37 - d64;
d67 = neg $d38;
d68 = d66 + d65;
$d39 = d68 - d66;
$d40 = $d39 - d65;
$d41 = neg $d40;
d69 = d67 + $d41;
d70 = d68;
d71 = 1.0 + d64;
$d42 = d71 - 1.0;
$d43 = $d42 - d64;
d72 = neg $d43;
d73 = d71 + d65;
$d44 = d73 - d71;
$d45 = $d44 - d65;
$d46 = neg $d45;
d74 = d72 + $d46;
d75 = d73;
d76 = d75 * 1.073741824E9;
$d47 = d75 + d76;
d77 = $d47 - d76;
d78 = d75 - d77;
d79 = d70 / d75;
d80 = d79 * 1.073741824E9;
$d48 = d79 + d80;
d81 = $d48 - d80;
d82 = d79 - d81;
$d49 = d77 * d81;
$d51 = d70 - $d49;
$d50 = d77 * d82;
$d53 = $d51 - $d50;
$d52 = d78 * d81;
$d55 = $d53 - $d52;
$d54 = d78 * d82;
$d56 = $d55 - $d54;
$d57 = $d56 / d75;
d83 = d82 + $d57;
$d58 = d69 / d75;
d84 = d83 + $d58;
$d59 = neg d74;
$d60 = $d59 * d70;
$d61 = $d60 / d75;
$d62 = $d61 / d75;
d85 = d84 + $d62;
d86 = d81 + d85;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$b5 = d63 cmpl 0.5;
if $b5 < 0 goto r1 = newarray (double)[2];
"->"Block 12:
[preds: 10 ] [succs: 13 ]
r1 = newarray (double)[2];
$d0 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double expm1(double,double[])>($d0, r1);
$d3 = r1[0];
$d2 = r1[1];
d87 = $d3 + $d2;
$d4 = r1[0];
$d6 = d87 - $d4;
$d5 = r1[1];
$d7 = $d6 - $d5;
d88 = neg $d7;
d89 = d87;
d90 = d88;
d91 = 2.0 + d87;
$d8 = d91 - 2.0;
$d9 = $d8 - d87;
d92 = neg $d9;
d93 = d91 + d88;
$d10 = d93 - d91;
$d11 = $d10 - d88;
$d12 = neg $d11;
d94 = d92 + $d12;
d95 = d93;
d96 = d95 * 1.073741824E9;
$d13 = d95 + d96;
d97 = $d13 - d96;
d98 = d95 - d97;
d99 = d89 / d95;
d100 = d99 * 1.073741824E9;
$d14 = d99 + d100;
d101 = $d14 - d100;
d102 = d99 - d101;
$d15 = d97 * d101;
$d17 = d89 - $d15;
$d16 = d97 * d102;
$d19 = $d17 - $d16;
$d18 = d98 * d101;
$d21 = $d19 - $d18;
$d20 = d98 * d102;
$d22 = $d21 - $d20;
$d23 = $d22 / d95;
d103 = d102 + $d23;
$d24 = d90 / d95;
d104 = d103 + $d24;
$d25 = neg d94;
$d26 = $d25 * d89;
$d27 = $d26 / d95;
$d28 = $d27 / d95;
d105 = d104 + $d28;
d86 = d101 + d105;
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
r0 = newarray (double)[2];
$d29 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d29, 0.0, r0);
$d32 = r0[0];
$d31 = r0[1];
d64 = $d32 + $d31;
$d33 = r0[0];
$d35 = d64 - $d33;
$d34 = r0[1];
$d36 = $d35 - $d34;
d65 = neg $d36;
d66 = -1.0 + d64;
$d37 = d66 + 1.0;
$d38 = $d37 - d64;
d67 = neg $d38;
d68 = d66 + d65;
$d39 = d68 - d66;
$d40 = $d39 - d65;
$d41 = neg $d40;
d69 = d67 + $d41;
d70 = d68;
d71 = 1.0 + d64;
$d42 = d71 - 1.0;
$d43 = $d42 - d64;
d72 = neg $d43;
d73 = d71 + d65;
$d44 = d73 - d71;
$d45 = $d44 - d65;
$d46 = neg $d45;
d74 = d72 + $d46;
d75 = d73;
d76 = d75 * 1.073741824E9;
$d47 = d75 + d76;
d77 = $d47 - d76;
d78 = d75 - d77;
d79 = d70 / d75;
d80 = d79 * 1.073741824E9;
$d48 = d79 + d80;
d81 = $d48 - d80;
d82 = d79 - d81;
$d49 = d77 * d81;
$d51 = d70 - $d49;
$d50 = d77 * d82;
$d53 = $d51 - $d50;
$d52 = d78 * d81;
$d55 = $d53 - $d52;
$d54 = d78 * d82;
$d56 = $d55 - $d54;
$d57 = $d56 / d75;
d83 = d82 + $d57;
$d58 = d69 / d75;
d84 = d83 + $d58;
$d59 = neg d74;
$d60 = $d59 * d70;
$d61 = $d60 / d75;
$d62 = $d61 / d75;
d85 = d84 + $d62;
d86 = d81 + d85;
goto [?= (branch)];
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if z0 == 0 goto return d86;
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
r1 = newarray (double)[2];
$d0 = d63 * 2.0;
staticinvoke <org.apache.commons.math3.util.FastMath: double expm1(double,double[])>($d0, r1);
$d3 = r1[0];
$d2 = r1[1];
d87 = $d3 + $d2;
$d4 = r1[0];
$d6 = d87 - $d4;
$d5 = r1[1];
$d7 = $d6 - $d5;
d88 = neg $d7;
d89 = d87;
d90 = d88;
d91 = 2.0 + d87;
$d8 = d91 - 2.0;
$d9 = $d8 - d87;
d92 = neg $d9;
d93 = d91 + d88;
$d10 = d93 - d91;
$d11 = $d10 - d88;
$d12 = neg $d11;
d94 = d92 + $d12;
d95 = d93;
d96 = d95 * 1.073741824E9;
$d13 = d95 + d96;
d97 = $d13 - d96;
d98 = d95 - d97;
d99 = d89 / d95;
d100 = d99 * 1.073741824E9;
$d14 = d99 + d100;
d101 = $d14 - d100;
d102 = d99 - d101;
$d15 = d97 * d101;
$d17 = d89 - $d15;
$d16 = d97 * d102;
$d19 = $d17 - $d16;
$d18 = d98 * d101;
$d21 = $d19 - $d18;
$d20 = d98 * d102;
$d22 = $d21 - $d20;
$d23 = $d22 / d95;
d103 = d102 + $d23;
$d24 = d90 / d95;
d104 = d103 + $d24;
$d25 = neg d94;
$d26 = $d25 * d89;
$d27 = $d26 / d95;
$d28 = $d27 / d95;
d105 = d104 + $d28;
d86 = d101 + d105;
"->"Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if z0 == 0 goto return d86;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if z0 == 0 goto return d86;
"->"Block 14:
[preds: 13 ] [succs: 15 ]
d86 = neg d86;
";
    "Block 13:
[preds: 11 12 ] [succs: 14 15 ]
if z0 == 0 goto return d86;
"->"Block 15:
[preds: 13 14 ] [succs: ]
return d86;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
d86 = neg d86;
"->"Block 15:
[preds: 13 14 ] [succs: ]
return d86;
";
}
