digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$b0 = d0 cmpl d0;
if $b0 == 0 goto $b1 = d0 cmpl 1.0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return #NaN;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d0 cmpl 1.0;
if $b1 > 0 goto return #NaN;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b2 = d0 cmpg -1.0;
if $b2 >= 0 goto $b3 = d0 cmpl 1.0;
"
    "Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl -1.0;
"
    "Block 6:
[preds: 5 ] [succs: ]
return 1.5707963267948966;
"
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b4 = d0 cmpl -1.0;
if $b4 != 0 goto $b5 = d0 cmpl 0.0;
"
    "Block 8:
[preds: 7 ] [succs: ]
return -1.5707963267948966;
"
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b5 = d0 cmpl 0.0;
if $b5 != 0 goto d43 = d0 * 1.073741824E9;
"
    "Block 10:
[preds: 9 ] [succs: ]
return d0;
"
    "Block 11:
[preds: 9 ] [succs: ]
d43 = d0 * 1.073741824E9;
$d1 = d0 + d43;
d2 = $d1 - d43;
d3 = d0 - d2;
d44 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d45 = $d6 + $d5;
d46 = neg d44;
d47 = neg d45;
d48 = 1.0 + d46;
$d7 = d48 - 1.0;
$d8 = $d7 - d46;
d49 = neg $d8;
d50 = d48 + d47;
$d9 = d50 - d48;
$d10 = $d9 - d47;
$d11 = neg $d10;
d51 = d49 + $d11;
d52 = d50;
d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d52);
d53 = d12 * 1.073741824E9;
$d13 = d12 + d53;
d54 = $d13 - d53;
d55 = d12 - d54;
$d14 = d54 * d54;
$d17 = d52 - $d14;
$d15 = 2.0 * d54;
$d16 = $d15 * d55;
$d19 = $d17 - $d16;
$d18 = d55 * d55;
$d21 = $d19 - $d18;
$d20 = 2.0 * d12;
$d22 = $d21 / $d20;
d56 = d55 + $d22;
$d23 = 2.0 * d12;
d24 = d51 / $d23;
d25 = d0 / d12;
d57 = d25 * 1.073741824E9;
$d26 = d25 + d57;
d58 = $d26 - d57;
d59 = d25 - d58;
$d27 = d58 * d54;
$d29 = d0 - $d27;
$d28 = d58 * d56;
$d31 = $d29 - $d28;
$d30 = d59 * d54;
$d33 = $d31 - $d30;
$d32 = d59 * d56;
$d34 = $d33 - $d32;
$d35 = $d34 / d12;
d60 = d59 + $d35;
$d36 = neg d0;
$d37 = $d36 * d24;
$d38 = $d37 / d12;
$d39 = $d38 / d12;
d61 = d60 + $d39;
d62 = d58 + d61;
$d40 = d62 - d58;
$d41 = $d40 - d61;
d63 = neg $d41;
d64 = d62;
$d42 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d64, d63, 0);
return $d42;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$b0 = d0 cmpl d0;
if $b0 == 0 goto $b1 = d0 cmpl 1.0;
"->"Block 1:
[preds: 0 ] [succs: ]
return #NaN;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$b0 = d0 cmpl d0;
if $b0 == 0 goto $b1 = d0 cmpl 1.0;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d0 cmpl 1.0;
if $b1 > 0 goto return #NaN;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d0 cmpl 1.0;
if $b1 > 0 goto return #NaN;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$b2 = d0 cmpg -1.0;
if $b2 >= 0 goto $b3 = d0 cmpl 1.0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b1 = d0 cmpl 1.0;
if $b1 > 0 goto return #NaN;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b2 = d0 cmpg -1.0;
if $b2 >= 0 goto $b3 = d0 cmpl 1.0;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b2 = d0 cmpg -1.0;
if $b2 >= 0 goto $b3 = d0 cmpl 1.0;
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl -1.0;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl -1.0;
"->"Block 6:
[preds: 5 ] [succs: ]
return 1.5707963267948966;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl -1.0;
"->"Block 7:
[preds: 5 ] [succs: 8 9 ]
$b4 = d0 cmpl -1.0;
if $b4 != 0 goto $b5 = d0 cmpl 0.0;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b4 = d0 cmpl -1.0;
if $b4 != 0 goto $b5 = d0 cmpl 0.0;
"->"Block 8:
[preds: 7 ] [succs: ]
return -1.5707963267948966;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b4 = d0 cmpl -1.0;
if $b4 != 0 goto $b5 = d0 cmpl 0.0;
"->"Block 9:
[preds: 7 ] [succs: 10 11 ]
$b5 = d0 cmpl 0.0;
if $b5 != 0 goto d43 = d0 * 1.073741824E9;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b5 = d0 cmpl 0.0;
if $b5 != 0 goto d43 = d0 * 1.073741824E9;
"->"Block 10:
[preds: 9 ] [succs: ]
return d0;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b5 = d0 cmpl 0.0;
if $b5 != 0 goto d43 = d0 * 1.073741824E9;
"->"Block 11:
[preds: 9 ] [succs: ]
d43 = d0 * 1.073741824E9;
$d1 = d0 + d43;
d2 = $d1 - d43;
d3 = d0 - d2;
d44 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d45 = $d6 + $d5;
d46 = neg d44;
d47 = neg d45;
d48 = 1.0 + d46;
$d7 = d48 - 1.0;
$d8 = $d7 - d46;
d49 = neg $d8;
d50 = d48 + d47;
$d9 = d50 - d48;
$d10 = $d9 - d47;
$d11 = neg $d10;
d51 = d49 + $d11;
d52 = d50;
d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d52);
d53 = d12 * 1.073741824E9;
$d13 = d12 + d53;
d54 = $d13 - d53;
d55 = d12 - d54;
$d14 = d54 * d54;
$d17 = d52 - $d14;
$d15 = 2.0 * d54;
$d16 = $d15 * d55;
$d19 = $d17 - $d16;
$d18 = d55 * d55;
$d21 = $d19 - $d18;
$d20 = 2.0 * d12;
$d22 = $d21 / $d20;
d56 = d55 + $d22;
$d23 = 2.0 * d12;
d24 = d51 / $d23;
d25 = d0 / d12;
d57 = d25 * 1.073741824E9;
$d26 = d25 + d57;
d58 = $d26 - d57;
d59 = d25 - d58;
$d27 = d58 * d54;
$d29 = d0 - $d27;
$d28 = d58 * d56;
$d31 = $d29 - $d28;
$d30 = d59 * d54;
$d33 = $d31 - $d30;
$d32 = d59 * d56;
$d34 = $d33 - $d32;
$d35 = $d34 / d12;
d60 = d59 + $d35;
$d36 = neg d0;
$d37 = $d36 * d24;
$d38 = $d37 / d12;
$d39 = $d38 / d12;
d61 = d60 + $d39;
d62 = d58 + d61;
$d40 = d62 - d58;
$d41 = $d40 - d61;
d63 = neg $d41;
d64 = d62;
$d42 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d64, d63, 0);
return $d42;
";
}
