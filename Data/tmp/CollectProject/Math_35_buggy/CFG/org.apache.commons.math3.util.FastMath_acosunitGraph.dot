digraph "unitGraph" {
    "d0 := @parameter0: double"
    "$b0 = d0 cmpl d0"
    "if $b0 == 0 goto $b1 = d0 cmpl 1.0"
    "return #NaN"
    "$b1 = d0 cmpl 1.0"
    "if $b1 > 0 goto return #NaN"
    "$b2 = d0 cmpg -1.0"
    "if $b2 >= 0 goto $b3 = d0 cmpl -1.0"
    "$b3 = d0 cmpl -1.0"
    "if $b3 != 0 goto $b4 = d0 cmpl 1.0"
    "return 3.141592653589793"
    "$b4 = d0 cmpl 1.0"
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"
    "return 0.0"
    "$b5 = d0 cmpl 0.0"
    "if $b5 != 0 goto d42 = d0 * 1.073741824E9"
    "return 1.5707963267948966"
    "d42 = d0 * 1.073741824E9"
    "$d1 = d0 + d42"
    "d2 = $d1 - d42"
    "d3 = d0 - d2"
    "d43 = d2 * d2"
    "$d4 = d2 * d3"
    "$d6 = $d4 * 2.0"
    "$d5 = d3 * d3"
    "d44 = $d6 + $d5"
    "d45 = neg d43"
    "d46 = neg d44"
    "d47 = 1.0 + d45"
    "$d7 = d47 - 1.0"
    "$d8 = $d7 - d45"
    "d48 = neg $d8"
    "d49 = d47 + d46"
    "$d9 = d49 - d47"
    "$d10 = $d9 - d46"
    "$d11 = neg $d10"
    "d50 = d48 + $d11"
    "d51 = d49"
    "d52 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d51)"
    "d53 = d52 * 1.073741824E9"
    "$d12 = d52 + d53"
    "d54 = $d12 - d53"
    "d55 = d52 - d54"
    "$d13 = d54 * d54"
    "$d16 = d51 - $d13"
    "$d14 = 2.0 * d54"
    "$d15 = $d14 * d55"
    "$d18 = $d16 - $d15"
    "$d17 = d55 * d55"
    "$d20 = $d18 - $d17"
    "$d19 = 2.0 * d52"
    "$d21 = $d20 / $d19"
    "d56 = d55 + $d21"
    "$d22 = 2.0 * d52"
    "$d23 = d50 / $d22"
    "d57 = d56 + $d23"
    "d58 = d54 + d57"
    "$d24 = d58 - d54"
    "$d25 = $d24 - d57"
    "d59 = neg $d25"
    "d26 = d58 / d0"
    "$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26)"
    "if $z0 == 0 goto d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)"
    "d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)"
    "d61 = d26 - d60"
    "$d27 = d60 * d2"
    "$d29 = d58 - $d27"
    "$d28 = d60 * d3"
    "$d31 = $d29 - $d28"
    "$d30 = d61 * d2"
    "$d33 = $d31 - $d30"
    "$d32 = d61 * d3"
    "$d34 = $d33 - $d32"
    "$d35 = $d34 / d0"
    "d62 = d61 + $d35"
    "$d36 = d59 / d0"
    "d63 = d62 + $d36"
    "d64 = d60 + d63"
    "$d37 = d64 - d60"
    "$d38 = $d37 - d63"
    "d65 = neg $d38"
    "d66 = d64"
    "$b6 = d0 cmpg 0.0"
    "if $b6 >= 0 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= $d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)]"
    "$z1 = 0"
    "$d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)"
    "return $d39"
    "d0 := @parameter0: double"->"$b0 = d0 cmpl d0";
    "$b0 = d0 cmpl d0"->"if $b0 == 0 goto $b1 = d0 cmpl 1.0";
    "if $b0 == 0 goto $b1 = d0 cmpl 1.0"->"return #NaN";
    "if $b0 == 0 goto $b1 = d0 cmpl 1.0"->"$b1 = d0 cmpl 1.0";
    "$b1 = d0 cmpl 1.0"->"if $b1 > 0 goto return #NaN";
    "if $b1 > 0 goto return #NaN"->"$b2 = d0 cmpg -1.0";
    "if $b1 > 0 goto return #NaN"->"return #NaN";
    "$b2 = d0 cmpg -1.0"->"if $b2 >= 0 goto $b3 = d0 cmpl -1.0";
    "if $b2 >= 0 goto $b3 = d0 cmpl -1.0"->"return #NaN";
    "if $b2 >= 0 goto $b3 = d0 cmpl -1.0"->"$b3 = d0 cmpl -1.0";
    "$b3 = d0 cmpl -1.0"->"if $b3 != 0 goto $b4 = d0 cmpl 1.0";
    "if $b3 != 0 goto $b4 = d0 cmpl 1.0"->"return 3.141592653589793";
    "if $b3 != 0 goto $b4 = d0 cmpl 1.0"->"$b4 = d0 cmpl 1.0";
    "$b4 = d0 cmpl 1.0"->"if $b4 != 0 goto $b5 = d0 cmpl 0.0";
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"->"return 0.0";
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"->"$b5 = d0 cmpl 0.0";
    "$b5 = d0 cmpl 0.0"->"if $b5 != 0 goto d42 = d0 * 1.073741824E9";
    "if $b5 != 0 goto d42 = d0 * 1.073741824E9"->"return 1.5707963267948966";
    "if $b5 != 0 goto d42 = d0 * 1.073741824E9"->"d42 = d0 * 1.073741824E9";
    "d42 = d0 * 1.073741824E9"->"$d1 = d0 + d42";
    "$d1 = d0 + d42"->"d2 = $d1 - d42";
    "d2 = $d1 - d42"->"d3 = d0 - d2";
    "d3 = d0 - d2"->"d43 = d2 * d2";
    "d43 = d2 * d2"->"$d4 = d2 * d3";
    "$d4 = d2 * d3"->"$d6 = $d4 * 2.0";
    "$d6 = $d4 * 2.0"->"$d5 = d3 * d3";
    "$d5 = d3 * d3"->"d44 = $d6 + $d5";
    "d44 = $d6 + $d5"->"d45 = neg d43";
    "d45 = neg d43"->"d46 = neg d44";
    "d46 = neg d44"->"d47 = 1.0 + d45";
    "d47 = 1.0 + d45"->"$d7 = d47 - 1.0";
    "$d7 = d47 - 1.0"->"$d8 = $d7 - d45";
    "$d8 = $d7 - d45"->"d48 = neg $d8";
    "d48 = neg $d8"->"d49 = d47 + d46";
    "d49 = d47 + d46"->"$d9 = d49 - d47";
    "$d9 = d49 - d47"->"$d10 = $d9 - d46";
    "$d10 = $d9 - d46"->"$d11 = neg $d10";
    "$d11 = neg $d10"->"d50 = d48 + $d11";
    "d50 = d48 + $d11"->"d51 = d49";
    "d51 = d49"->"d52 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d51)";
    "d52 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d51)"->"d53 = d52 * 1.073741824E9";
    "d53 = d52 * 1.073741824E9"->"$d12 = d52 + d53";
    "$d12 = d52 + d53"->"d54 = $d12 - d53";
    "d54 = $d12 - d53"->"d55 = d52 - d54";
    "d55 = d52 - d54"->"$d13 = d54 * d54";
    "$d13 = d54 * d54"->"$d16 = d51 - $d13";
    "$d16 = d51 - $d13"->"$d14 = 2.0 * d54";
    "$d14 = 2.0 * d54"->"$d15 = $d14 * d55";
    "$d15 = $d14 * d55"->"$d18 = $d16 - $d15";
    "$d18 = $d16 - $d15"->"$d17 = d55 * d55";
    "$d17 = d55 * d55"->"$d20 = $d18 - $d17";
    "$d20 = $d18 - $d17"->"$d19 = 2.0 * d52";
    "$d19 = 2.0 * d52"->"$d21 = $d20 / $d19";
    "$d21 = $d20 / $d19"->"d56 = d55 + $d21";
    "d56 = d55 + $d21"->"$d22 = 2.0 * d52";
    "$d22 = 2.0 * d52"->"$d23 = d50 / $d22";
    "$d23 = d50 / $d22"->"d57 = d56 + $d23";
    "d57 = d56 + $d23"->"d58 = d54 + d57";
    "d58 = d54 + d57"->"$d24 = d58 - d54";
    "$d24 = d58 - d54"->"$d25 = $d24 - d57";
    "$d25 = $d24 - d57"->"d59 = neg $d25";
    "d59 = neg $d25"->"d26 = d58 / d0";
    "d26 = d58 / d0"->"$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26)";
    "$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26)"->"if $z0 == 0 goto d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)";
    "if $z0 == 0 goto d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)"->"return 1.5707963267948966";
    "if $z0 == 0 goto d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)"->"d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)";
    "d60 = staticinvoke <org.apache.commons.math3.util.FastMath: double doubleHighPart(double)>(d26)"->"d61 = d26 - d60";
    "d61 = d26 - d60"->"$d27 = d60 * d2";
    "$d27 = d60 * d2"->"$d29 = d58 - $d27";
    "$d29 = d58 - $d27"->"$d28 = d60 * d3";
    "$d28 = d60 * d3"->"$d31 = $d29 - $d28";
    "$d31 = $d29 - $d28"->"$d30 = d61 * d2";
    "$d30 = d61 * d2"->"$d33 = $d31 - $d30";
    "$d33 = $d31 - $d30"->"$d32 = d61 * d3";
    "$d32 = d61 * d3"->"$d34 = $d33 - $d32";
    "$d34 = $d33 - $d32"->"$d35 = $d34 / d0";
    "$d35 = $d34 / d0"->"d62 = d61 + $d35";
    "d62 = d61 + $d35"->"$d36 = d59 / d0";
    "$d36 = d59 / d0"->"d63 = d62 + $d36";
    "d63 = d62 + $d36"->"d64 = d60 + d63";
    "d64 = d60 + d63"->"$d37 = d64 - d60";
    "$d37 = d64 - d60"->"$d38 = $d37 - d63";
    "$d38 = $d37 - d63"->"d65 = neg $d38";
    "d65 = neg $d38"->"d66 = d64";
    "d66 = d64"->"$b6 = d0 cmpg 0.0";
    "$b6 = d0 cmpg 0.0"->"if $b6 >= 0 goto $z1 = 0";
    "if $b6 >= 0 goto $z1 = 0"->"$z1 = 1";
    "if $b6 >= 0 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= $d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)]";
    "goto [?= $d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)]"->"$d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)";
    "$z1 = 0"->"$d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)";
    "$d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z1)"->"return $d39";
}
