digraph "unitGraph" {
    "d0 := @parameter0: double"
    "d24 := @parameter1: double"
    "r4 := @parameter2: double[]"
    "i6 = (int) d0"
    "$b0 = d0 cmpg 0.0"
    "if $b0 >= 0 goto (branch)"
    "$b5 = d0 cmpg -746.0"
    "if $b5 >= 0 goto (branch)"
    "if r4 == null goto return 0.0"
    "r4[0] = 0.0"
    "r4[1] = 0.0"
    "return 0.0"
    "if i6 >= -709 goto (branch)"
    "$d47 = d0 + 40.19140625"
    "$d48 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d47, d24, r4)"
    "d53 = $d48 / 2.85040095144011776E17"
    "if r4 == null goto return d53"
    "$d49 = r4[0]"
    "$d50 = $d49 / 2.85040095144011776E17"
    "r4[0] = $d50"
    "$d51 = r4[1]"
    "$d52 = $d51 / 2.85040095144011776E17"
    "r4[1] = $d52"
    "return d53"
    "if i6 != -709 goto i6 = i6 + -1"
    "$d41 = d0 + 1.494140625"
    "$d42 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d41, d24, r4)"
    "d54 = $d42 / 4.455505956692757"
    "if r4 == null goto return d54"
    "$d43 = r4[0]"
    "$d44 = $d43 / 4.455505956692757"
    "r4[0] = $d44"
    "$d45 = r4[1]"
    "$d46 = $d45 / 4.455505956692757"
    "r4[1] = $d46"
    "return d54"
    "i6 = i6 + -1"
    "goto [?= $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()]"
    "if i6 <= 709 goto $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()"
    "if r4 == null goto return #Infinity"
    "r4[0] = #Infinity"
    "return #Infinity"
    "$r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()"
    "$i1 = 750 + i6"
    "d1 = $r0[$i1]"
    "$r1 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$100()>()"
    "$i2 = 750 + i6"
    "d2 = $r1[$i2]"
    "$d3 = (double) i6"
    "$d4 = d0 - $d3"
    "$d5 = $d4 * 1024.0"
    "i7 = (int) $d5"
    "$r2 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$200()>()"
    "d6 = $r2[i7]"
    "$r3 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$300()>()"
    "d7 = $r3[i7]"
    "$d10 = (double) i6"
    "$d8 = (double) i7"
    "$d9 = $d8 / 1024.0"
    "$d11 = $d10 + $d9"
    "d12 = d0 - $d11"
    "d55 = 0.04168701738764507"
    "$d13 = d55 * d12"
    "d56 = $d13 + 0.1666666505023083"
    "$d14 = d56 * d12"
    "d57 = $d14 + 0.5000000000042687"
    "$d15 = d57 * d12"
    "d58 = $d15 + 1.0"
    "$d16 = d58 * d12"
    "d59 = $d16 + -3.940510424527919E-20"
    "d17 = d1 * d6"
    "$d19 = d1 * d7"
    "$d18 = d2 * d6"
    "$d21 = $d19 + $d18"
    "$d20 = d2 * d7"
    "d22 = $d21 + $d20"
    "d23 = d22 + d17"
    "$b3 = d23 cmpl #Infinity"
    "if $b3 != 0 goto $b4 = d24 cmpl 0.0"
    "$b4 = d24 cmpl 0.0"
    "if $b4 == 0 goto $d25 = d23 * d59"
    "$d34 = d23 * d24"
    "$d36 = $d34 * d59"
    "$d35 = d23 * d24"
    "$d38 = $d36 + $d35"
    "$d37 = d23 * d59"
    "$d39 = $d38 + $d37"
    "$d40 = $d39 + d22"
    "d60 = $d40 + d17"
    "goto [?= (branch)]"
    "$d25 = d23 * d59"
    "$d26 = $d25 + d22"
    "d60 = $d26 + d17"
    "if r4 == null goto return d60"
    "r4[0] = d17"
    "$d27 = d23 * d24"
    "$d29 = $d27 * d59"
    "$d28 = d23 * d24"
    "$d31 = $d29 + $d28"
    "$d30 = d23 * d59"
    "$d32 = $d31 + $d30"
    "$d33 = $d32 + d22"
    "r4[1] = $d33"
    "return d60"
    "d0 := @parameter0: double"->"d24 := @parameter1: double";
    "d24 := @parameter1: double"->"r4 := @parameter2: double[]";
    "r4 := @parameter2: double[]"->"i6 = (int) d0";
    "i6 = (int) d0"->"$b0 = d0 cmpg 0.0";
    "$b0 = d0 cmpg 0.0"->"if $b0 >= 0 goto (branch)";
    "if $b0 >= 0 goto (branch)"->"$b5 = d0 cmpg -746.0";
    "if $b0 >= 0 goto (branch)"->"if i6 <= 709 goto $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()";
    "$b5 = d0 cmpg -746.0"->"if $b5 >= 0 goto (branch)";
    "if $b5 >= 0 goto (branch)"->"if r4 == null goto return 0.0";
    "if $b5 >= 0 goto (branch)"->"if i6 >= -709 goto (branch)";
    "if r4 == null goto return 0.0"->"r4[0] = 0.0";
    "if r4 == null goto return 0.0"->"return 0.0";
    "r4[0] = 0.0"->"r4[1] = 0.0";
    "r4[1] = 0.0"->"return 0.0";
    "if i6 >= -709 goto (branch)"->"$d47 = d0 + 40.19140625";
    "if i6 >= -709 goto (branch)"->"if i6 != -709 goto i6 = i6 + -1";
    "$d47 = d0 + 40.19140625"->"$d48 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d47, d24, r4)";
    "$d48 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d47, d24, r4)"->"d53 = $d48 / 2.85040095144011776E17";
    "d53 = $d48 / 2.85040095144011776E17"->"if r4 == null goto return d53";
    "if r4 == null goto return d53"->"$d49 = r4[0]";
    "if r4 == null goto return d53"->"return d53";
    "$d49 = r4[0]"->"$d50 = $d49 / 2.85040095144011776E17";
    "$d50 = $d49 / 2.85040095144011776E17"->"r4[0] = $d50";
    "r4[0] = $d50"->"$d51 = r4[1]";
    "$d51 = r4[1]"->"$d52 = $d51 / 2.85040095144011776E17";
    "$d52 = $d51 / 2.85040095144011776E17"->"r4[1] = $d52";
    "r4[1] = $d52"->"return d53";
    "if i6 != -709 goto i6 = i6 + -1"->"$d41 = d0 + 1.494140625";
    "if i6 != -709 goto i6 = i6 + -1"->"i6 = i6 + -1";
    "$d41 = d0 + 1.494140625"->"$d42 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d41, d24, r4)";
    "$d42 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double,double,double[])>($d41, d24, r4)"->"d54 = $d42 / 4.455505956692757";
    "d54 = $d42 / 4.455505956692757"->"if r4 == null goto return d54";
    "if r4 == null goto return d54"->"$d43 = r4[0]";
    "if r4 == null goto return d54"->"return d54";
    "$d43 = r4[0]"->"$d44 = $d43 / 4.455505956692757";
    "$d44 = $d43 / 4.455505956692757"->"r4[0] = $d44";
    "r4[0] = $d44"->"$d45 = r4[1]";
    "$d45 = r4[1]"->"$d46 = $d45 / 4.455505956692757";
    "$d46 = $d45 / 4.455505956692757"->"r4[1] = $d46";
    "r4[1] = $d46"->"return d54";
    "i6 = i6 + -1"->"goto [?= $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()]";
    "goto [?= $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()]"->"$r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()";
    "if i6 <= 709 goto $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()"->"if r4 == null goto return #Infinity";
    "if i6 <= 709 goto $r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()"->"$r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()";
    "if r4 == null goto return #Infinity"->"r4[0] = #Infinity";
    "if r4 == null goto return #Infinity"->"return #Infinity";
    "r4[0] = #Infinity"->"r4[1] = 0.0";
    "r4[1] = 0.0"->"return #Infinity";
    "$r0 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$000()>()"->"$i1 = 750 + i6";
    "$i1 = 750 + i6"->"d1 = $r0[$i1]";
    "d1 = $r0[$i1]"->"$r1 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$100()>()";
    "$r1 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpIntTable: double[] access$100()>()"->"$i2 = 750 + i6";
    "$i2 = 750 + i6"->"d2 = $r1[$i2]";
    "d2 = $r1[$i2]"->"$d3 = (double) i6";
    "$d3 = (double) i6"->"$d4 = d0 - $d3";
    "$d4 = d0 - $d3"->"$d5 = $d4 * 1024.0";
    "$d5 = $d4 * 1024.0"->"i7 = (int) $d5";
    "i7 = (int) $d5"->"$r2 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$200()>()";
    "$r2 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$200()>()"->"d6 = $r2[i7]";
    "d6 = $r2[i7]"->"$r3 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$300()>()";
    "$r3 = staticinvoke <org.apache.commons.math3.util.FastMath$ExpFracTable: double[] access$300()>()"->"d7 = $r3[i7]";
    "d7 = $r3[i7]"->"$d10 = (double) i6";
    "$d10 = (double) i6"->"$d8 = (double) i7";
    "$d8 = (double) i7"->"$d9 = $d8 / 1024.0";
    "$d9 = $d8 / 1024.0"->"$d11 = $d10 + $d9";
    "$d11 = $d10 + $d9"->"d12 = d0 - $d11";
    "d12 = d0 - $d11"->"d55 = 0.04168701738764507";
    "d55 = 0.04168701738764507"->"$d13 = d55 * d12";
    "$d13 = d55 * d12"->"d56 = $d13 + 0.1666666505023083";
    "d56 = $d13 + 0.1666666505023083"->"$d14 = d56 * d12";
    "$d14 = d56 * d12"->"d57 = $d14 + 0.5000000000042687";
    "d57 = $d14 + 0.5000000000042687"->"$d15 = d57 * d12";
    "$d15 = d57 * d12"->"d58 = $d15 + 1.0";
    "d58 = $d15 + 1.0"->"$d16 = d58 * d12";
    "$d16 = d58 * d12"->"d59 = $d16 + -3.940510424527919E-20";
    "d59 = $d16 + -3.940510424527919E-20"->"d17 = d1 * d6";
    "d17 = d1 * d6"->"$d19 = d1 * d7";
    "$d19 = d1 * d7"->"$d18 = d2 * d6";
    "$d18 = d2 * d6"->"$d21 = $d19 + $d18";
    "$d21 = $d19 + $d18"->"$d20 = d2 * d7";
    "$d20 = d2 * d7"->"d22 = $d21 + $d20";
    "d22 = $d21 + $d20"->"d23 = d22 + d17";
    "d23 = d22 + d17"->"$b3 = d23 cmpl #Infinity";
    "$b3 = d23 cmpl #Infinity"->"if $b3 != 0 goto $b4 = d24 cmpl 0.0";
    "if $b3 != 0 goto $b4 = d24 cmpl 0.0"->"return #Infinity";
    "if $b3 != 0 goto $b4 = d24 cmpl 0.0"->"$b4 = d24 cmpl 0.0";
    "$b4 = d24 cmpl 0.0"->"if $b4 == 0 goto $d25 = d23 * d59";
    "if $b4 == 0 goto $d25 = d23 * d59"->"$d34 = d23 * d24";
    "if $b4 == 0 goto $d25 = d23 * d59"->"$d25 = d23 * d59";
    "$d34 = d23 * d24"->"$d36 = $d34 * d59";
    "$d36 = $d34 * d59"->"$d35 = d23 * d24";
    "$d35 = d23 * d24"->"$d38 = $d36 + $d35";
    "$d38 = $d36 + $d35"->"$d37 = d23 * d59";
    "$d37 = d23 * d59"->"$d39 = $d38 + $d37";
    "$d39 = $d38 + $d37"->"$d40 = $d39 + d22";
    "$d40 = $d39 + d22"->"d60 = $d40 + d17";
    "d60 = $d40 + d17"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if r4 == null goto return d60";
    "$d25 = d23 * d59"->"$d26 = $d25 + d22";
    "$d26 = $d25 + d22"->"d60 = $d26 + d17";
    "d60 = $d26 + d17"->"if r4 == null goto return d60";
    "if r4 == null goto return d60"->"r4[0] = d17";
    "if r4 == null goto return d60"->"return d60";
    "r4[0] = d17"->"$d27 = d23 * d24";
    "$d27 = d23 * d24"->"$d29 = $d27 * d59";
    "$d29 = $d27 * d59"->"$d28 = d23 * d24";
    "$d28 = d23 * d24"->"$d31 = $d29 + $d28";
    "$d31 = $d29 + $d28"->"$d30 = d23 * d59";
    "$d30 = d23 * d59"->"$d32 = $d31 + $d30";
    "$d32 = $d31 + $d30"->"$d33 = $d32 + d22";
    "$d33 = $d32 + d22"->"r4[1] = $d33";
    "r4[1] = $d33"->"return d60";
}
