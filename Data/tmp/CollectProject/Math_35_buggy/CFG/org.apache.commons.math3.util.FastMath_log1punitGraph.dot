digraph "unitGraph" {
    "d0 := @parameter0: double"
    "$b0 = d0 cmpl -1.0"
    "if $b0 != 0 goto $b1 = d0 cmpl #Infinity"
    "return #-Infinity"
    "$b1 = d0 cmpl #Infinity"
    "if $b1 != 0 goto $b2 = d0 cmpl 1.0E-6"
    "return #Infinity"
    "$b2 = d0 cmpl 1.0E-6"
    "if $b2 > 0 goto d17 = 1.0 + d0"
    "$b3 = d0 cmpg -1.0E-6"
    "if $b3 >= 0 goto $d13 = d0 * 0.3333333333333333"
    "d17 = 1.0 + d0"
    "$d1 = d17 - 1.0"
    "$d2 = $d1 - d0"
    "d3 = neg $d2"
    "r0 = newarray (double)[2]"
    "d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double,double[])>(d17, r0)"
    "$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d4)"
    "if $z0 == 0 goto d5 = d3 / d17"
    "return d4"
    "d5 = d3 / d17"
    "$d6 = 0.5 * d5"
    "d7 = $d6 + 1.0"
    "$d9 = d7 * d5"
    "$d8 = r0[1]"
    "$d11 = $d9 + $d8"
    "$d10 = r0[0]"
    "$d12 = $d11 + $d10"
    "return $d12"
    "$d13 = d0 * 0.3333333333333333"
    "$d14 = $d13 - 0.5"
    "$d15 = $d14 * d0"
    "d18 = $d15 + 1.0"
    "$d16 = d18 * d0"
    "return $d16"
    "d0 := @parameter0: double"->"$b0 = d0 cmpl -1.0";
    "$b0 = d0 cmpl -1.0"->"if $b0 != 0 goto $b1 = d0 cmpl #Infinity";
    "if $b0 != 0 goto $b1 = d0 cmpl #Infinity"->"return #-Infinity";
    "if $b0 != 0 goto $b1 = d0 cmpl #Infinity"->"$b1 = d0 cmpl #Infinity";
    "$b1 = d0 cmpl #Infinity"->"if $b1 != 0 goto $b2 = d0 cmpl 1.0E-6";
    "if $b1 != 0 goto $b2 = d0 cmpl 1.0E-6"->"return #Infinity";
    "if $b1 != 0 goto $b2 = d0 cmpl 1.0E-6"->"$b2 = d0 cmpl 1.0E-6";
    "$b2 = d0 cmpl 1.0E-6"->"if $b2 > 0 goto d17 = 1.0 + d0";
    "if $b2 > 0 goto d17 = 1.0 + d0"->"$b3 = d0 cmpg -1.0E-6";
    "if $b2 > 0 goto d17 = 1.0 + d0"->"d17 = 1.0 + d0";
    "$b3 = d0 cmpg -1.0E-6"->"if $b3 >= 0 goto $d13 = d0 * 0.3333333333333333";
    "if $b3 >= 0 goto $d13 = d0 * 0.3333333333333333"->"d17 = 1.0 + d0";
    "if $b3 >= 0 goto $d13 = d0 * 0.3333333333333333"->"$d13 = d0 * 0.3333333333333333";
    "d17 = 1.0 + d0"->"$d1 = d17 - 1.0";
    "$d1 = d17 - 1.0"->"$d2 = $d1 - d0";
    "$d2 = $d1 - d0"->"d3 = neg $d2";
    "d3 = neg $d2"->"r0 = newarray (double)[2]";
    "r0 = newarray (double)[2]"->"d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double,double[])>(d17, r0)";
    "d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double,double[])>(d17, r0)"->"$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d4)";
    "$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d4)"->"if $z0 == 0 goto d5 = d3 / d17";
    "if $z0 == 0 goto d5 = d3 / d17"->"return d4";
    "if $z0 == 0 goto d5 = d3 / d17"->"d5 = d3 / d17";
    "d5 = d3 / d17"->"$d6 = 0.5 * d5";
    "$d6 = 0.5 * d5"->"d7 = $d6 + 1.0";
    "d7 = $d6 + 1.0"->"$d9 = d7 * d5";
    "$d9 = d7 * d5"->"$d8 = r0[1]";
    "$d8 = r0[1]"->"$d11 = $d9 + $d8";
    "$d11 = $d9 + $d8"->"$d10 = r0[0]";
    "$d10 = r0[0]"->"$d12 = $d11 + $d10";
    "$d12 = $d11 + $d10"->"return $d12";
    "$d13 = d0 * 0.3333333333333333"->"$d14 = $d13 - 0.5";
    "$d14 = $d13 - 0.5"->"$d15 = $d14 * d0";
    "$d15 = $d14 * d0"->"d18 = $d15 + 1.0";
    "d18 = $d15 + 1.0"->"$d16 = d18 * d0";
    "$d16 = d18 * d0"->"return $d16";
}
