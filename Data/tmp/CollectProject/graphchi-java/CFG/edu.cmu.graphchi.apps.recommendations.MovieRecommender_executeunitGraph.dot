digraph "unitGraph" {
    "r0 := @this: edu.cmu.graphchi.apps.recommendations.MovieRecommender"
    "$r1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>"
    "$i1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>"
    "$i0 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int D>"
    "r2 = staticinvoke <edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization computeALS(java.lang.String,int,int,int)>($r1, $i1, $i0, 5)"
    "$r3 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"
    "virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>(\"Computed ALS, now random walks\")"
    "$r4 = new edu.cmu.graphchi.walks.DrunkardMobEngine"
    "$r6 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>"
    "$i2 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>"
    "$r5 = new edu.cmu.graphchi.walks.IntDrunkardFactory"
    "specialinvoke $r5.<edu.cmu.graphchi.walks.IntDrunkardFactory: void <init>()>()"
    "specialinvoke $r4.<edu.cmu.graphchi.walks.DrunkardMobEngine: void <init>(java.lang.String,int,edu.cmu.graphchi.walks.DrunkardFactory)>($r6, $i2, $r5)"
    "r7 = $r4"
    "$r9 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>"
    "$r8 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate"
    "specialinvoke $r8.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate: void <init>()>()"
    "$r10 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion"
    "$r11 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "$l3 = virtualinvoke $r11.<java.lang.Runtime: long maxMemory()>()"
    "$l4 = $l3 / 8L"
    "specialinvoke $r10.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l4)"
    "r12 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"positive\", $r9, $r8, $r10)"
    "$r14 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>"
    "$r13 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate"
    "specialinvoke $r13.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate: void <init>(edu.cmu.graphchi.apps.recommendations.MovieRecommender)>(r0)"
    "$r15 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion"
    "$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"
    "$l5 = virtualinvoke $r16.<java.lang.Runtime: long maxMemory()>()"
    "$l6 = $l5 / 8L"
    "specialinvoke $r15.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l6)"
    "r17 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"negative\", $r14, $r13, $r15)"
    "$r18 = new edu.cmu.graphchi.datablocks.FloatConverter"
    "specialinvoke $r18.<edu.cmu.graphchi.datablocks.FloatConverter: void <init>()>()"
    "virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void setEdataConverter(edu.cmu.graphchi.datablocks.BytesToValueConverter)>($r18)"
    "r19 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo getGraphInfo()>()"
    "r20 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.preprocessing.VertexIdTranslate getVertexIdTranslate()>()"
    "$r21 = new java.util.ArrayList"
    "$i7 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"
    "specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i7)"
    "r22 = $r21"
    "c8 = 50000"
    "s9 = 1000"
    "$i10 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"
    "if c8 <= $i10 goto $r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"
    "virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"
    "$r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"
    "$r23 = new java.lang.StringBuilder"
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Compute predictions for first \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c8)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" users\")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r24.<java.util.logging.Logger: void info(java.lang.String)>($r28)"
    "i26 = 0"
    "if i26 >= c8 goto virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"
    "$i24 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i26)"
    "$r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24)"
    "virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r50)"
    "i26 = i26 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"
    "virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"
    "virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void run(int)>(6)"
    "i27 = 0"
    "if i27 >= 500 goto return"
    "i11 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i27)"
    "$r29 = virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()"
    "r30 = interfaceinvoke $r29.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)"
    "$r31 = virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()"
    "r32 = interfaceinvoke $r31.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)"
    "d9 = 0.0"
    "d10 = 0.0"
    "$i13 = lengthof r30"
    "$i12 = lengthof r32"
    "i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12)"
    "i28 = 0"
    "if i28 >= i14 goto l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$r48 = r30[i28]"
    "$i22 = $r48.<edu.cmu.graphchi.util.IdCount: int id>"
    "$d7 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i22)"
    "d9 = d9 + $d7"
    "$r49 = r32[i28]"
    "$i23 = $r49.<edu.cmu.graphchi.util.IdCount: int id>"
    "$d8 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i23)"
    "d10 = d10 + $d8"
    "i28 = i28 + 1"
    "l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "d11 = 0.0"
    "i15 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()"
    "i30 = 0"
    "if i30 >= i15 goto $r34 = <java.lang.System: java.io.PrintStream out>"
    "$i19 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"
    "$i20 = $i19 + i30"
    "i21 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>($i20)"
    "$d6 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, i21)"
    "d11 = d11 + $d6"
    "i30 = i30 + 1"
    "$r34 = <java.lang.System: java.io.PrintStream out>"
    "$r33 = new java.lang.StringBuilder"
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" avg pos: \")"
    "$d0 = (double) i14"
    "$d1 = d9 / $d0"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; avg neg: \")"
    "$d2 = (double) i14"
    "$d3 = d10 / $d2"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3)"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; all=\")"
    "$i16 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()"
    "$d4 = (double) $i16"
    "$d5 = d11 / $d4"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5)"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")"
    "$l17 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$l18 = $l17 - l29"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18)"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ms for \")"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15)"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" movies\")"
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r47)"
    "i27 = i27 + 1"
    "return"
    "r0 := @this: edu.cmu.graphchi.apps.recommendations.MovieRecommender"->"$r1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>";
    "$r1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>"->"$i1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>";
    "$i1 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>"->"$i0 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int D>";
    "$i0 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int D>"->"r2 = staticinvoke <edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization computeALS(java.lang.String,int,int,int)>($r1, $i1, $i0, 5)";
    "r2 = staticinvoke <edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization computeALS(java.lang.String,int,int,int)>($r1, $i1, $i0, 5)"->"$r3 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>";
    "$r3 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"->"virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>(\"Computed ALS, now random walks\")";
    "virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>(\"Computed ALS, now random walks\")"->"$r4 = new edu.cmu.graphchi.walks.DrunkardMobEngine";
    "$r4 = new edu.cmu.graphchi.walks.DrunkardMobEngine"->"$r6 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>";
    "$r6 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.lang.String baseFilename>"->"$i2 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>";
    "$i2 = r0.<edu.cmu.graphchi.apps.recommendations.MovieRecommender: int nShards>"->"$r5 = new edu.cmu.graphchi.walks.IntDrunkardFactory";
    "$r5 = new edu.cmu.graphchi.walks.IntDrunkardFactory"->"specialinvoke $r5.<edu.cmu.graphchi.walks.IntDrunkardFactory: void <init>()>()";
    "specialinvoke $r5.<edu.cmu.graphchi.walks.IntDrunkardFactory: void <init>()>()"->"specialinvoke $r4.<edu.cmu.graphchi.walks.DrunkardMobEngine: void <init>(java.lang.String,int,edu.cmu.graphchi.walks.DrunkardFactory)>($r6, $i2, $r5)";
    "specialinvoke $r4.<edu.cmu.graphchi.walks.DrunkardMobEngine: void <init>(java.lang.String,int,edu.cmu.graphchi.walks.DrunkardFactory)>($r6, $i2, $r5)"->"r7 = $r4";
    "r7 = $r4"->"$r9 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>";
    "$r9 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>"->"$r8 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate";
    "$r8 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate"->"specialinvoke $r8.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate: void <init>()>()";
    "specialinvoke $r8.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$PositiveWalkUpdate: void <init>()>()"->"$r10 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion";
    "$r10 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion"->"$r11 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "$r11 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$l3 = virtualinvoke $r11.<java.lang.Runtime: long maxMemory()>()";
    "$l3 = virtualinvoke $r11.<java.lang.Runtime: long maxMemory()>()"->"$l4 = $l3 / 8L";
    "$l4 = $l3 / 8L"->"specialinvoke $r10.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l4)";
    "specialinvoke $r10.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l4)"->"r12 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"positive\", $r9, $r8, $r10)";
    "r12 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"positive\", $r9, $r8, $r10)"->"$r14 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>";
    "$r14 = <edu.cmu.graphchi.EdgeDirection: edu.cmu.graphchi.EdgeDirection IN_AND_OUT_EDGES>"->"$r13 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate";
    "$r13 = new edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate"->"specialinvoke $r13.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate: void <init>(edu.cmu.graphchi.apps.recommendations.MovieRecommender)>(r0)";
    "specialinvoke $r13.<edu.cmu.graphchi.apps.recommendations.MovieRecommender$NegativeWalkUpdate: void <init>(edu.cmu.graphchi.apps.recommendations.MovieRecommender)>(r0)"->"$r15 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion";
    "$r15 = new edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion"->"$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()";
    "$r16 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()"->"$l5 = virtualinvoke $r16.<java.lang.Runtime: long maxMemory()>()";
    "$l5 = virtualinvoke $r16.<java.lang.Runtime: long maxMemory()>()"->"$l6 = $l5 / 8L";
    "$l6 = $l5 / 8L"->"specialinvoke $r15.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l6)";
    "specialinvoke $r15.<edu.cmu.graphchi.walks.distributions.IntDrunkardCompanion: void <init>(int,long)>(2, $l6)"->"r17 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"negative\", $r14, $r13, $r15)";
    "r17 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.walks.DrunkardJob addJob(java.lang.String,edu.cmu.graphchi.EdgeDirection,edu.cmu.graphchi.walks.WalkUpdateFunction,edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion)>(\"negative\", $r14, $r13, $r15)"->"$r18 = new edu.cmu.graphchi.datablocks.FloatConverter";
    "$r18 = new edu.cmu.graphchi.datablocks.FloatConverter"->"specialinvoke $r18.<edu.cmu.graphchi.datablocks.FloatConverter: void <init>()>()";
    "specialinvoke $r18.<edu.cmu.graphchi.datablocks.FloatConverter: void <init>()>()"->"virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void setEdataConverter(edu.cmu.graphchi.datablocks.BytesToValueConverter)>($r18)";
    "virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void setEdataConverter(edu.cmu.graphchi.datablocks.BytesToValueConverter)>($r18)"->"r19 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo getGraphInfo()>()";
    "r19 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo getGraphInfo()>()"->"r20 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.preprocessing.VertexIdTranslate getVertexIdTranslate()>()";
    "r20 = virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: edu.cmu.graphchi.preprocessing.VertexIdTranslate getVertexIdTranslate()>()"->"$r21 = new java.util.ArrayList";
    "$r21 = new java.util.ArrayList"->"$i7 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()";
    "$i7 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"->"specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i7)";
    "specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i7)"->"r22 = $r21";
    "r22 = $r21"->"c8 = 50000";
    "c8 = 50000"->"s9 = 1000";
    "s9 = 1000"->"$i10 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()";
    "$i10 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"->"if c8 <= $i10 goto $r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>";
    "if c8 <= $i10 goto $r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"->"virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()";
    "if c8 <= $i10 goto $r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"->"$r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>";
    "virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"->"$r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>";
    "$r24 = <edu.cmu.graphchi.apps.recommendations.MovieRecommender: java.util.logging.Logger logger>"->"$r23 = new java.lang.StringBuilder";
    "$r23 = new java.lang.StringBuilder"->"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Compute predictions for first \")";
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Compute predictions for first \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c8)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c8)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" users\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" users\")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r24.<java.util.logging.Logger: void info(java.lang.String)>($r28)";
    "virtualinvoke $r24.<java.util.logging.Logger: void info(java.lang.String)>($r28)"->"i26 = 0";
    "i26 = 0"->"if i26 >= c8 goto virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)";
    "if i26 >= c8 goto virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"->"$i24 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i26)";
    "if i26 >= c8 goto virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"->"virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)";
    "$i24 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i26)"->"$r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24)";
    "$r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24)"->"virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r50)";
    "virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r50)"->"i26 = i26 + 1";
    "i26 = i26 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i26 >= c8 goto virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)";
    "virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"->"virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)";
    "virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: void configureWalkSources(java.util.List,int)>(r22, s9)"->"virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void run(int)>(6)";
    "virtualinvoke r7.<edu.cmu.graphchi.walks.DrunkardMobEngine: void run(int)>(6)"->"i27 = 0";
    "i27 = 0"->"if i27 >= 500 goto return";
    "if i27 >= 500 goto return"->"i11 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i27)";
    "if i27 >= 500 goto return"->"return";
    "i11 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>(i27)"->"$r29 = virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()";
    "$r29 = virtualinvoke r12.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()"->"r30 = interfaceinvoke $r29.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)";
    "r30 = interfaceinvoke $r29.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)"->"$r31 = virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()";
    "$r31 = virtualinvoke r17.<edu.cmu.graphchi.walks.DrunkardJob: edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion getCompanion()>()"->"r32 = interfaceinvoke $r31.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)";
    "r32 = interfaceinvoke $r31.<edu.cmu.graphchi.walks.distributions.RemoteDrunkardCompanion: edu.cmu.graphchi.util.IdCount[] getTop(int,int)>(i11, 20)"->"d9 = 0.0";
    "d9 = 0.0"->"d10 = 0.0";
    "d10 = 0.0"->"$i13 = lengthof r30";
    "$i13 = lengthof r30"->"$i12 = lengthof r32";
    "$i12 = lengthof r32"->"i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12)";
    "i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12)"->"i28 = 0";
    "i28 = 0"->"if i28 >= i14 goto l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "if i28 >= i14 goto l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$r48 = r30[i28]";
    "if i28 >= i14 goto l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "$r48 = r30[i28]"->"$i22 = $r48.<edu.cmu.graphchi.util.IdCount: int id>";
    "$i22 = $r48.<edu.cmu.graphchi.util.IdCount: int id>"->"$d7 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i22)";
    "$d7 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i22)"->"d9 = d9 + $d7";
    "d9 = d9 + $d7"->"$r49 = r32[i28]";
    "$r49 = r32[i28]"->"$i23 = $r49.<edu.cmu.graphchi.util.IdCount: int id>";
    "$i23 = $r49.<edu.cmu.graphchi.util.IdCount: int id>"->"$d8 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i23)";
    "$d8 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, $i23)"->"d10 = d10 + $d8";
    "d10 = d10 + $d8"->"i28 = i28 + 1";
    "i28 = i28 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i28 >= i14 goto l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"d11 = 0.0";
    "d11 = 0.0"->"i15 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()";
    "i15 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()"->"i30 = 0";
    "i30 = 0"->"if i30 >= i15 goto $r34 = <java.lang.System: java.io.PrintStream out>";
    "if i30 >= i15 goto $r34 = <java.lang.System: java.io.PrintStream out>"->"$i19 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()";
    "if i30 >= i15 goto $r34 = <java.lang.System: java.io.PrintStream out>"->"$r34 = <java.lang.System: java.io.PrintStream out>";
    "$i19 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumLeft()>()"->"$i20 = $i19 + i30";
    "$i20 = $i19 + i30"->"i21 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>($i20)";
    "i21 = virtualinvoke r20.<edu.cmu.graphchi.preprocessing.VertexIdTranslate: int forward(int)>($i20)"->"$d6 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, i21)";
    "$d6 = virtualinvoke r2.<edu.cmu.graphchi.apps.ALSMatrixFactorization: double predict(int,int)>(i11, i21)"->"d11 = d11 + $d6";
    "d11 = d11 + $d6"->"i30 = i30 + 1";
    "i30 = i30 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i30 >= i15 goto $r34 = <java.lang.System: java.io.PrintStream out>";
    "$r34 = <java.lang.System: java.io.PrintStream out>"->"$r33 = new java.lang.StringBuilder";
    "$r33 = new java.lang.StringBuilder"->"specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()"->"$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)";
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" avg pos: \")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" avg pos: \")"->"$d0 = (double) i14";
    "$d0 = (double) i14"->"$d1 = d9 / $d0";
    "$d1 = d9 / $d0"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1)";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; avg neg: \")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; avg neg: \")"->"$d2 = (double) i14";
    "$d2 = (double) i14"->"$d3 = d10 / $d2";
    "$d3 = d10 / $d2"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3)";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3)"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; all=\")";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; all=\")"->"$i16 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()";
    "$i16 = virtualinvoke r19.<edu.cmu.graphchi.apps.ALSMatrixFactorization$BipartiteGraphInfo: int getNumRight()>()"->"$d4 = (double) $i16";
    "$d4 = (double) $i16"->"$d5 = d11 / $d4";
    "$d5 = d11 / $d4"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5)";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5)"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")"->"$l17 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "$l17 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$l18 = $l17 - l29";
    "$l18 = $l17 - l29"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18)";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18)"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ms for \")";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ms for \")"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15)";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15)"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" movies\")";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" movies\")"->"$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r47)";
    "virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r47)"->"i27 = i27 + 1";
    "i27 = i27 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i27 >= 500 goto return";
}
