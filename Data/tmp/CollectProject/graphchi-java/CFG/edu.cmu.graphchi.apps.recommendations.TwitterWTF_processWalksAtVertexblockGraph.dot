digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 11 ]
r7 := @this: edu.cmu.graphchi.apps.recommendations.TwitterWTF;
r0 := @parameter0: edu.cmu.graphchi.walks.WalkArray;
r5 := @parameter1: edu.cmu.graphchi.ChiVertex;
r3 := @parameter2: edu.cmu.graphchi.walks.DrunkardContext;
r6 := @parameter3: java.util.Random;
$r1 = (edu.cmu.graphchi.walks.IntWalkArray) r0;
r2 = virtualinvoke $r1.<edu.cmu.graphchi.walks.IntWalkArray: int[] getArray()>();
r4 = (edu.cmu.graphchi.walks.IntDrunkardContext) r3;
i0 = lengthof r2;
i1 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int numOutEdges()>();
if i1 <= 0 goto i8 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
i7 = 0;
"
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i7 >= i0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
i3 = r2[i7];
$d0 = virtualinvoke r6.<java.util.Random: double nextDouble()>();
$d1 = <edu.cmu.graphchi.apps.recommendations.TwitterWTF: double RESET_PROBABILITY>;
$b4 = $d0 cmpg $d1;
if $b4 >= 0 goto $i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
"
    "Block 4:
[preds: 3 ] [succs: 9 ]
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>(i3, 0);
goto [?= i7 = i7 + 1];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
i6 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int getOutEdgeId(int)>($i5);
$z0 = interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: boolean isWalkStartedFromVertex(int)>(i3);
if $z0 != 0 goto $z2 = 0;
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z2 = 1;
goto [?= z1 = $z2];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
$z2 = 0;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 ]
z1 = $z2;
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void forwardWalkTo(int,int,boolean)>(i3, i6, z1);
"
    "Block 9:
[preds: 4 8 ] [succs: 2 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 2 ] [succs: 14 ]
goto [?= return];
"
    "Block 11:
[preds: 0 ] [succs: 12 ]
i8 = 0;
"
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
if i8 >= i0 goto return;
"
    "Block 13:
[preds: 12 ] [succs: 12 ]
$i2 = r2[i8];
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>($i2, 0);
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 14:
[preds: 10 12 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 11 ]
r7 := @this: edu.cmu.graphchi.apps.recommendations.TwitterWTF;
r0 := @parameter0: edu.cmu.graphchi.walks.WalkArray;
r5 := @parameter1: edu.cmu.graphchi.ChiVertex;
r3 := @parameter2: edu.cmu.graphchi.walks.DrunkardContext;
r6 := @parameter3: java.util.Random;
$r1 = (edu.cmu.graphchi.walks.IntWalkArray) r0;
r2 = virtualinvoke $r1.<edu.cmu.graphchi.walks.IntWalkArray: int[] getArray()>();
r4 = (edu.cmu.graphchi.walks.IntDrunkardContext) r3;
i0 = lengthof r2;
i1 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int numOutEdges()>();
if i1 <= 0 goto i8 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
i7 = 0;
";
    "Block 0:
[preds: ] [succs: 1 11 ]
r7 := @this: edu.cmu.graphchi.apps.recommendations.TwitterWTF;
r0 := @parameter0: edu.cmu.graphchi.walks.WalkArray;
r5 := @parameter1: edu.cmu.graphchi.ChiVertex;
r3 := @parameter2: edu.cmu.graphchi.walks.DrunkardContext;
r6 := @parameter3: java.util.Random;
$r1 = (edu.cmu.graphchi.walks.IntWalkArray) r0;
r2 = virtualinvoke $r1.<edu.cmu.graphchi.walks.IntWalkArray: int[] getArray()>();
r4 = (edu.cmu.graphchi.walks.IntDrunkardContext) r3;
i0 = lengthof r2;
i1 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int numOutEdges()>();
if i1 <= 0 goto i8 = 0;
"->"Block 11:
[preds: 0 ] [succs: 12 ]
i8 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
i7 = 0;
"->"Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i7 >= i0 goto (branch);
";
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i7 >= i0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
i3 = r2[i7];
$d0 = virtualinvoke r6.<java.util.Random: double nextDouble()>();
$d1 = <edu.cmu.graphchi.apps.recommendations.TwitterWTF: double RESET_PROBABILITY>;
$b4 = $d0 cmpg $d1;
if $b4 >= 0 goto $i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
";
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i7 >= i0 goto (branch);
"->"Block 10:
[preds: 2 ] [succs: 14 ]
goto [?= return];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
i3 = r2[i7];
$d0 = virtualinvoke r6.<java.util.Random: double nextDouble()>();
$d1 = <edu.cmu.graphchi.apps.recommendations.TwitterWTF: double RESET_PROBABILITY>;
$b4 = $d0 cmpg $d1;
if $b4 >= 0 goto $i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
"->"Block 4:
[preds: 3 ] [succs: 9 ]
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>(i3, 0);
goto [?= i7 = i7 + 1];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
i3 = r2[i7];
$d0 = virtualinvoke r6.<java.util.Random: double nextDouble()>();
$d1 = <edu.cmu.graphchi.apps.recommendations.TwitterWTF: double RESET_PROBABILITY>;
$b4 = $d0 cmpg $d1;
if $b4 >= 0 goto $i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
i6 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int getOutEdgeId(int)>($i5);
$z0 = interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: boolean isWalkStartedFromVertex(int)>(i3);
if $z0 != 0 goto $z2 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 9 ]
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>(i3, 0);
goto [?= i7 = i7 + 1];
"->"Block 9:
[preds: 4 8 ] [succs: 2 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
i6 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int getOutEdgeId(int)>($i5);
$z0 = interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: boolean isWalkStartedFromVertex(int)>(i3);
if $z0 != 0 goto $z2 = 0;
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$z2 = 1;
goto [?= z1 = $z2];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$i5 = virtualinvoke r6.<java.util.Random: int nextInt(int)>(i1);
i6 = virtualinvoke r5.<edu.cmu.graphchi.ChiVertex: int getOutEdgeId(int)>($i5);
$z0 = interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: boolean isWalkStartedFromVertex(int)>(i3);
if $z0 != 0 goto $z2 = 0;
"->"Block 7:
[preds: 5 ] [succs: 8 ]
$z2 = 0;
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$z2 = 1;
goto [?= z1 = $z2];
"->"Block 8:
[preds: 6 7 ] [succs: 9 ]
z1 = $z2;
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void forwardWalkTo(int,int,boolean)>(i3, i6, z1);
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
$z2 = 0;
"->"Block 8:
[preds: 6 7 ] [succs: 9 ]
z1 = $z2;
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void forwardWalkTo(int,int,boolean)>(i3, i6, z1);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 ]
z1 = $z2;
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void forwardWalkTo(int,int,boolean)>(i3, i6, z1);
"->"Block 9:
[preds: 4 8 ] [succs: 2 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 4 8 ] [succs: 2 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i7 >= i0 goto (branch);
";
    "Block 10:
[preds: 2 ] [succs: 14 ]
goto [?= return];
"->"Block 14:
[preds: 10 12 ] [succs: ]
return;
";
    "Block 11:
[preds: 0 ] [succs: 12 ]
i8 = 0;
"->"Block 12:
[preds: 11 13 ] [succs: 13 14 ]
if i8 >= i0 goto return;
";
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
if i8 >= i0 goto return;
"->"Block 13:
[preds: 12 ] [succs: 12 ]
$i2 = r2[i8];
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>($i2, 0);
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 12:
[preds: 11 13 ] [succs: 13 14 ]
if i8 >= i0 goto return;
"->"Block 14:
[preds: 10 12 ] [succs: ]
return;
";
    "Block 13:
[preds: 12 ] [succs: 12 ]
$i2 = r2[i8];
interfaceinvoke r4.<edu.cmu.graphchi.walks.IntDrunkardContext: void resetWalk(int,boolean)>($i2, 0);
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 12:
[preds: 11 13 ] [succs: 13 14 ]
if i8 >= i0 goto return;
";
}
