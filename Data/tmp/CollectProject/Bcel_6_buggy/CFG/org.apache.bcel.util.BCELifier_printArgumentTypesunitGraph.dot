digraph "unitGraph" {
    "r0 := @parameter0: org.apache.bcel.generic.Type[]"
    "$i0 = lengthof r0"
    "if $i0 != 0 goto $r1 = new java.lang.StringBuilder"
    "return \"Type.NO_ARGS\""
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "r2 = $r1"
    "i4 = 0"
    "$i1 = lengthof r0"
    "if i4 >= $i1 goto $r3 = new java.lang.StringBuilder"
    "$r9 = r0[i4]"
    "$r10 = staticinvoke <org.apache.bcel.util.BCELifier: java.lang.String printType(org.apache.bcel.generic.Type)>($r9)"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"
    "$i2 = lengthof r0"
    "$i3 = $i2 - 1"
    "if i4 >= $i3 goto i4 = i4 + 1"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "i4 = i4 + 1"
    "goto [?= $i1 = lengthof r0]"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new Type[] { \")"
    "$r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" }\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r8"
    "r0 := @parameter0: org.apache.bcel.generic.Type[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 0 goto $r1 = new java.lang.StringBuilder";
    "if $i0 != 0 goto $r1 = new java.lang.StringBuilder"->"return \"Type.NO_ARGS\"";
    "if $i0 != 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"i4 = 0";
    "i4 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if i4 >= $i1 goto $r3 = new java.lang.StringBuilder";
    "if i4 >= $i1 goto $r3 = new java.lang.StringBuilder"->"$r9 = r0[i4]";
    "if i4 >= $i1 goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "$r9 = r0[i4]"->"$r10 = staticinvoke <org.apache.bcel.util.BCELifier: java.lang.String printType(org.apache.bcel.generic.Type)>($r9)";
    "$r10 = staticinvoke <org.apache.bcel.util.BCELifier: java.lang.String printType(org.apache.bcel.generic.Type)>($r9)"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"if i4 >= $i3 goto i4 = i4 + 1";
    "if i4 >= $i3 goto i4 = i4 + 1"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "if i4 >= $i3 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new Type[] { \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"new Type[] { \")"->"$r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" }\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" }\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r8";
}
