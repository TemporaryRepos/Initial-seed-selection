digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
r23 := @parameter1: org.apache.bcel.util.BCELifier$FLAGS;
if i0 != 0 goto $r0 = new java.lang.StringBuilder;
"
    "Block 1:
[preds: 0 ] [succs: ]
return \"0\";
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i5 = 0;
i6 = 1;
"
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
if i6 > 16384 goto r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$i3 = i0 & i6;
if $i3 == 0 goto i6 = i6 << 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
if i6 != 32 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r38 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS CLASS>;
if r23 != $r38 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 17 ]
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r40 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_SUPER | \");
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
goto [?= i6 = i6 << 1];
"
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i6 != 64 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r31 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r31 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 17 ]
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r33 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BRIDGE | \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
goto [?= i6 = i6 << 1];
"
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i6 != 128 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r24 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r24 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"
    "Block 13:
[preds: 12 ] [succs: 17 ]
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r26 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_VARARGS | \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
goto [?= i6 = i6 << 1];
"
    "Block 14:
[preds: 11 12 ] [succs: 15 16 ]
$i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
if i5 >= $i4 goto $r3 = new java.lang.StringBuilder;
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
$r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = staticinvoke <org.apache.bcel.Const: java.lang.String getAccessName(int)>(i5);
$r19 = <java.util.Locale: java.util.Locale ENGLISH>;
$r20 = virtualinvoke $r18.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r19);
$r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" | \");
goto [?= i6 = i6 << 1];
"
    "Block 16:
[preds: 14 ] [succs: 17 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BIT %x | \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = newarray (java.lang.Object)[1];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
"
    "Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 18:
[preds: 3 ] [succs: ]
r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
$i1 = virtualinvoke r45.<java.lang.String: int length()>();
$i2 = $i1 - 3;
$r2 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
return $r2;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
r23 := @parameter1: org.apache.bcel.util.BCELifier$FLAGS;
if i0 != 0 goto $r0 = new java.lang.StringBuilder;
"->"Block 1:
[preds: 0 ] [succs: ]
return \"0\";
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
r23 := @parameter1: org.apache.bcel.util.BCELifier$FLAGS;
if i0 != 0 goto $r0 = new java.lang.StringBuilder;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i5 = 0;
i6 = 1;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i5 = 0;
i6 = 1;
"->"Block 3:
[preds: 2 17 ] [succs: 4 18 ]
if i6 > 16384 goto r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
if i6 > 16384 goto r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 4:
[preds: 3 ] [succs: 5 17 ]
$i3 = i0 & i6;
if $i3 == 0 goto i6 = i6 << 1;
";
    "Block 3:
[preds: 2 17 ] [succs: 4 18 ]
if i6 > 16384 goto r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 18:
[preds: 3 ] [succs: ]
r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
$i1 = virtualinvoke r45.<java.lang.String: int length()>();
$i2 = $i1 - 3;
$r2 = virtualinvoke r45.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
return $r2;
";
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$i3 = i0 & i6;
if $i3 == 0 goto i6 = i6 << 1;
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
if i6 != 32 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$i3 = i0 & i6;
if $i3 == 0 goto i6 = i6 << 1;
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
if i6 != 32 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r38 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS CLASS>;
if r23 != $r38 goto (branch);
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
if i6 != 32 goto (branch);
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i6 != 64 goto (branch);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r38 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS CLASS>;
if r23 != $r38 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 17 ]
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r40 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_SUPER | \");
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
goto [?= i6 = i6 << 1];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r38 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS CLASS>;
if r23 != $r38 goto (branch);
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i6 != 64 goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 17 ]
$r39 = new java.lang.StringBuilder;
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
$r40 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_SUPER | \");
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
goto [?= i6 = i6 << 1];
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i6 != 64 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r31 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r31 goto (branch);
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
if i6 != 64 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i6 != 128 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r31 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r31 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 17 ]
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r33 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BRIDGE | \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
goto [?= i6 = i6 << 1];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r31 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r31 goto (branch);
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i6 != 128 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
";
    "Block 10:
[preds: 9 ] [succs: 17 ]
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r33 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BRIDGE | \");
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
goto [?= i6 = i6 << 1];
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i6 != 128 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
$r24 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r24 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
if i6 != 128 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"->"Block 14:
[preds: 11 12 ] [succs: 15 16 ]
$i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
if i5 >= $i4 goto $r3 = new java.lang.StringBuilder;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r24 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r24 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"->"Block 13:
[preds: 12 ] [succs: 17 ]
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r26 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_VARARGS | \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
goto [?= i6 = i6 << 1];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$r24 = <org.apache.bcel.util.BCELifier$FLAGS: org.apache.bcel.util.BCELifier$FLAGS METHOD>;
if r23 != $r24 goto $i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
"->"Block 14:
[preds: 11 12 ] [succs: 15 16 ]
$i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
if i5 >= $i4 goto $r3 = new java.lang.StringBuilder;
";
    "Block 13:
[preds: 12 ] [succs: 17 ]
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r26 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_VARARGS | \");
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
goto [?= i6 = i6 << 1];
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 14:
[preds: 11 12 ] [succs: 15 16 ]
$i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
if i5 >= $i4 goto $r3 = new java.lang.StringBuilder;
"->"Block 15:
[preds: 14 ] [succs: 17 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
$r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = staticinvoke <org.apache.bcel.Const: java.lang.String getAccessName(int)>(i5);
$r19 = <java.util.Locale: java.util.Locale ENGLISH>;
$r20 = virtualinvoke $r18.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r19);
$r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" | \");
goto [?= i6 = i6 << 1];
";
    "Block 14:
[preds: 11 12 ] [succs: 15 16 ]
$i4 = <org.apache.bcel.Const: int ACCESS_NAMES_LENGTH>;
if i5 >= $i4 goto $r3 = new java.lang.StringBuilder;
"->"Block 16:
[preds: 14 ] [succs: 17 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BIT %x | \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = newarray (java.lang.Object)[1];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_\");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
$r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = staticinvoke <org.apache.bcel.Const: java.lang.String getAccessName(int)>(i5);
$r19 = <java.util.Locale: java.util.Locale ENGLISH>;
$r20 = virtualinvoke $r18.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r19);
$r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" | \");
goto [?= i6 = i6 << 1];
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 16:
[preds: 14 ] [succs: 17 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = <org.apache.bcel.util.BCELifier: java.lang.String CONSTANT_PREFIX>;
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ACC_BIT %x | \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = newarray (java.lang.Object)[1];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
"->"Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 17:
[preds: 4 7 10 13 15 16 ] [succs: 3 ]
i6 = i6 << 1;
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 17 ] [succs: 4 18 ]
if i6 > 16384 goto r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
}
