digraph "unitGraph" {
    "r12 := @this: cn.ponfee.commons.io.FilesTest"
    "$r0 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT>"
    "$r1 = virtualinvoke $r0.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withDelimiter(char)>(44)"
    "r2 = virtualinvoke $r1.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withQuote(char)>(34)"
    "r3 = \"D:\\temp\\withoutbom\\test-utf16be.csv\""
    "$r4 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)"
    "$r5 = virtualinvoke $r4.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder csvFormat(org.apache.commons.csv.CSVFormat)>(r2)"
    "$r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>"
    "r7 = virtualinvoke $r5.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder charset(java.nio.charset.Charset)>($r6)"
    "$r8 = virtualinvoke r7.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()"
    "$r9 = virtualinvoke $r8.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)"
    "$r10 = interfaceinvoke $r9.<java.util.List: java.util.stream.Stream stream()>()"
    "$r11 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test_2__41: java.util.function.Consumer bootstrap$()>()"
    "interfaceinvoke $r10.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11)"
    "return"
    "r12 := @this: cn.ponfee.commons.io.FilesTest"->"$r0 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT>";
    "$r0 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT>"->"$r1 = virtualinvoke $r0.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withDelimiter(char)>(44)";
    "$r1 = virtualinvoke $r0.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withDelimiter(char)>(44)"->"r2 = virtualinvoke $r1.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withQuote(char)>(34)";
    "r2 = virtualinvoke $r1.<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withQuote(char)>(34)"->"r3 = \"D:\\temp\\withoutbom\\test-utf16be.csv\"";
    "r3 = \"D:\\temp\\withoutbom\\test-utf16be.csv\""->"$r4 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)";
    "$r4 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)"->"$r5 = virtualinvoke $r4.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder csvFormat(org.apache.commons.csv.CSVFormat)>(r2)";
    "$r5 = virtualinvoke $r4.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder csvFormat(org.apache.commons.csv.CSVFormat)>(r2)"->"$r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>";
    "$r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>"->"r7 = virtualinvoke $r5.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder charset(java.nio.charset.Charset)>($r6)";
    "r7 = virtualinvoke $r5.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder charset(java.nio.charset.Charset)>($r6)"->"$r8 = virtualinvoke r7.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()";
    "$r8 = virtualinvoke r7.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()"->"$r9 = virtualinvoke $r8.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)";
    "$r9 = virtualinvoke $r8.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)"->"$r10 = interfaceinvoke $r9.<java.util.List: java.util.stream.Stream stream()>()";
    "$r10 = interfaceinvoke $r9.<java.util.List: java.util.stream.Stream stream()>()"->"$r11 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test_2__41: java.util.function.Consumer bootstrap$()>()";
    "$r11 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test_2__41: java.util.function.Consumer bootstrap$()>()"->"interfaceinvoke $r10.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11)";
    "interfaceinvoke $r10.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11)"->"return";
}
