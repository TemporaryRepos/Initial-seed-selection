digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r14 := @parameter0: java.lang.String[];
$r0 = class \"Ltest/utils/RepeatableAnn$RepeatAnn;\";
r1 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();
$r2 = <java.lang.System: java.io.PrintStream out>;
$i0 = lengthof r1;
virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i0);
$r3 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r1);
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
$r6 = staticinvoke <test.utils.RepeatableAnn$println__64: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r4);
interfaceinvoke $r3.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r6);
$r7 = class \"Ltest/utils/RepeatableAnn$Annotations;\";
r8 = virtualinvoke $r7.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();
$r9 = <java.lang.System: java.io.PrintStream out>;
$i1 = lengthof r8;
virtualinvoke $r9.<java.io.PrintStream: void println(int)>($i1);
$r10 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r8);
$r11 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();
$r13 = staticinvoke <test.utils.RepeatableAnn$println__65: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r11);
interfaceinvoke $r10.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r13);
return;
"
}
