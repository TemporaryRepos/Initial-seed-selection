digraph "unitGraph" {
    "r22 := @this: cn.ponfee.commons.io.FilesTest"
    "$r0 = newarray (java.lang.String)[12]"
    "$r0[0] = \"D:\\temp\\withoutbom\\csv-gbk.csv\""
    "$r0[1] = \"D:\\temp\\withbom\\csv-gbk-bom.csv\""
    "$r0[2] = \"D:\\temp\\withoutbom\\csv-utf8.csv\""
    "$r0[3] = \"D:\\temp\\withbom\\csv-utf8-bom.csv\""
    "$r0[4] = \"D:\\temp\\withoutbom\\csv-utf16le.csv\""
    "$r0[5] = \"D:\\temp\\withbom\\csv-utf16le-bom.csv\""
    "$r0[6] = \"D:\\temp\\withoutbom\\csv-utf16be.csv\""
    "$r0[7] = \"D:\\temp\\withbom\\csv-utf16be-bom.csv\""
    "$r0[8] = \"D:\\temp\\withoutbom\\csv-unicode-ascii-escaped.csv\""
    "$r0[9] = \"D:\\temp\\withbom\\csv-unicode-ascii-escaped-bom.csv\""
    "$r0[10] = \"D:\\temp\\withoutbom\\csv-ansi-ascii.csv\""
    "$r0[11] = \"D:\\temp\\withbom\\csv-ansi-ascii-bom.csv\""
    "r1 = $r0"
    "r2 = r1"
    "i0 = lengthof r2"
    "i1 = 0"
    "if i1 >= i0 goto return"
    "r3 = r2[i1]"
    "r4 = staticinvoke <cn.ponfee.commons.io.CharsetDetector: java.nio.charset.Charset detect(java.lang.String)>(r3)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n=============================\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> , \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   \")"
    "$r12 = new java.io.File"
    "specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r3)"
    "$r13 = staticinvoke <cn.ponfee.commons.io.Files: java.lang.String toString(java.io.File)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\r\n|\n\", \";\")"
    "$r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r16)"
    "r17 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)"
    "$r18 = virtualinvoke r17.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()"
    "$r19 = virtualinvoke $r18.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)"
    "$r20 = interfaceinvoke $r19.<java.util.List: java.util.stream.Stream stream()>()"
    "$r21 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test4_0__39: java.util.function.Consumer bootstrap$()>()"
    "interfaceinvoke $r20.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r21)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return"
    "r22 := @this: cn.ponfee.commons.io.FilesTest"->"$r0 = newarray (java.lang.String)[12]";
    "$r0 = newarray (java.lang.String)[12]"->"$r0[0] = \"D:\\temp\\withoutbom\\csv-gbk.csv\"";
    "$r0[0] = \"D:\\temp\\withoutbom\\csv-gbk.csv\""->"$r0[1] = \"D:\\temp\\withbom\\csv-gbk-bom.csv\"";
    "$r0[1] = \"D:\\temp\\withbom\\csv-gbk-bom.csv\""->"$r0[2] = \"D:\\temp\\withoutbom\\csv-utf8.csv\"";
    "$r0[2] = \"D:\\temp\\withoutbom\\csv-utf8.csv\""->"$r0[3] = \"D:\\temp\\withbom\\csv-utf8-bom.csv\"";
    "$r0[3] = \"D:\\temp\\withbom\\csv-utf8-bom.csv\""->"$r0[4] = \"D:\\temp\\withoutbom\\csv-utf16le.csv\"";
    "$r0[4] = \"D:\\temp\\withoutbom\\csv-utf16le.csv\""->"$r0[5] = \"D:\\temp\\withbom\\csv-utf16le-bom.csv\"";
    "$r0[5] = \"D:\\temp\\withbom\\csv-utf16le-bom.csv\""->"$r0[6] = \"D:\\temp\\withoutbom\\csv-utf16be.csv\"";
    "$r0[6] = \"D:\\temp\\withoutbom\\csv-utf16be.csv\""->"$r0[7] = \"D:\\temp\\withbom\\csv-utf16be-bom.csv\"";
    "$r0[7] = \"D:\\temp\\withbom\\csv-utf16be-bom.csv\""->"$r0[8] = \"D:\\temp\\withoutbom\\csv-unicode-ascii-escaped.csv\"";
    "$r0[8] = \"D:\\temp\\withoutbom\\csv-unicode-ascii-escaped.csv\""->"$r0[9] = \"D:\\temp\\withbom\\csv-unicode-ascii-escaped-bom.csv\"";
    "$r0[9] = \"D:\\temp\\withbom\\csv-unicode-ascii-escaped-bom.csv\""->"$r0[10] = \"D:\\temp\\withoutbom\\csv-ansi-ascii.csv\"";
    "$r0[10] = \"D:\\temp\\withoutbom\\csv-ansi-ascii.csv\""->"$r0[11] = \"D:\\temp\\withbom\\csv-ansi-ascii-bom.csv\"";
    "$r0[11] = \"D:\\temp\\withbom\\csv-ansi-ascii-bom.csv\""->"r1 = $r0";
    "r1 = $r0"->"r2 = r1";
    "r2 = r1"->"i0 = lengthof r2";
    "i0 = lengthof r2"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return";
    "if i1 >= i0 goto return"->"r3 = r2[i1]";
    "if i1 >= i0 goto return"->"return";
    "r3 = r2[i1]"->"r4 = staticinvoke <cn.ponfee.commons.io.CharsetDetector: java.nio.charset.Charset detect(java.lang.String)>(r3)";
    "r4 = staticinvoke <cn.ponfee.commons.io.CharsetDetector: java.nio.charset.Charset detect(java.lang.String)>(r3)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n=============================\")";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\n=============================\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> , \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> , \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   \")"->"$r12 = new java.io.File";
    "$r12 = new java.io.File"->"specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r3)";
    "specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r3)"->"$r13 = staticinvoke <cn.ponfee.commons.io.Files: java.lang.String toString(java.io.File)>($r12)";
    "$r13 = staticinvoke <cn.ponfee.commons.io.Files: java.lang.String toString(java.io.File)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\r\n|\n\", \";\")";
    "$r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\r\n|\n\", \";\")"->"$r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)";
    "$r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r16)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r16)"->"r17 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)";
    "r17 = staticinvoke <cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractorBuilder newBuilder(java.lang.String)>(r3)"->"$r18 = virtualinvoke r17.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()";
    "$r18 = virtualinvoke r17.<cn.ponfee.commons.extract.DataExtractorBuilder: cn.ponfee.commons.extract.DataExtractor build()>()"->"$r19 = virtualinvoke $r18.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)";
    "$r19 = virtualinvoke $r18.<cn.ponfee.commons.extract.DataExtractor: java.util.List extract(int)>(100)"->"$r20 = interfaceinvoke $r19.<java.util.List: java.util.stream.Stream stream()>()";
    "$r20 = interfaceinvoke $r19.<java.util.List: java.util.stream.Stream stream()>()"->"$r21 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test4_0__39: java.util.function.Consumer bootstrap$()>()";
    "$r21 = staticinvoke <cn.ponfee.commons.io.FilesTest$lambda_test4_0__39: java.util.function.Consumer bootstrap$()>()"->"interfaceinvoke $r20.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r21)";
    "interfaceinvoke $r20.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r21)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return";
}
