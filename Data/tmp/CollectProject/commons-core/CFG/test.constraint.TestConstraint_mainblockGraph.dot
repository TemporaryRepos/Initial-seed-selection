digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r6 := @parameter0: java.lang.String[];
$r0 = new test.constraint.TestConstraint;
specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>();
r1 = $r0;
r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\";
r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\";
$r2 = new java.util.Date;
$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$l1 = $l0 + 5000000L;
specialinvoke $r2.<java.util.Date: void <init>(long)>($l1);
r1.<test.constraint.TestConstraint: java.util.Date date> = $r2;
"
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= return];
"
    "Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r4 := @caughtexception;
r5 = $r4;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
"
    "Block 5:
[preds: 3 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r6 := @parameter0: java.lang.String[];
$r0 = new test.constraint.TestConstraint;
specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>();
r1 = $r0;
r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\";
r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\";
$r2 = new java.util.Date;
$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$l1 = $l0 + 5000000L;
specialinvoke $r2.<java.util.Date: void <init>(long)>($l1);
r1.<test.constraint.TestConstraint: java.util.Date date> = $r2;
"->"Block 1:
[preds: 0 ] [succs: 2 4 ]
$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>();
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r6 := @parameter0: java.lang.String[];
$r0 = new test.constraint.TestConstraint;
specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>();
r1 = $r0;
r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\";
r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\";
$r2 = new java.util.Date;
$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$l1 = $l0 + 5000000L;
specialinvoke $r2.<java.util.Date: void <init>(long)>($l1);
r1.<test.constraint.TestConstraint: java.util.Date date> = $r2;
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r4 := @caughtexception;
r5 = $r4;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>();
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1);
";
    "Block 1:
[preds: 0 ] [succs: 2 4 ]
$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>();
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r4 := @caughtexception;
r5 = $r4;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= return];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1);
"->"Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r4 := @caughtexception;
r5 = $r4;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
goto [?= return];
"->"Block 5:
[preds: 3 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 0 1 2 ] [succs: 5 ]
$r4 := @caughtexception;
r5 = $r4;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
"->"Block 5:
[preds: 3 4 ] [succs: ]
return;
";
}
