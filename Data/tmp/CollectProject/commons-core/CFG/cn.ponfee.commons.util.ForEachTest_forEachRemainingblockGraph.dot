digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
$r0 = newarray (java.lang.Integer)[6];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r0[4] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r0[5] = $r6;
$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();
$r11 = staticinvoke <cn.ponfee.commons.util.ForEachTest$println__50: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r9);
interfaceinvoke r8.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>($r11);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"===================================\");
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();
$r15 = staticinvoke <cn.ponfee.commons.util.ForEachTest$println__51: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r13);
interfaceinvoke r8.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>($r15);
return;
"
}
