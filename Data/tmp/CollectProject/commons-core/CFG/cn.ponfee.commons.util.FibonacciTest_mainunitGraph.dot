digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = new java.math.BigDecimal"
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(1)"
    "r8 = $r0"
    "$r1 = new java.math.BigDecimal"
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(int)>(1)"
    "r9 = $r1"
    "i0 = 1"
    "if i0 >= 1000 goto return"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"
    "$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2)"
    "$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5)"
    "r6 = r9"
    "r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8)"
    "r8 = r6"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = new java.math.BigDecimal";
    "$r0 = new java.math.BigDecimal"->"specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(1)";
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(1)"->"r8 = $r0";
    "r8 = $r0"->"$r1 = new java.math.BigDecimal";
    "$r1 = new java.math.BigDecimal"->"specialinvoke $r1.<java.math.BigDecimal: void <init>(int)>(1)";
    "specialinvoke $r1.<java.math.BigDecimal: void <init>(int)>(1)"->"r9 = $r1";
    "r9 = $r1"->"i0 = 1";
    "i0 = 1"->"if i0 >= 1000 goto return";
    "if i0 >= 1000 goto return"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "if i0 >= 1000 goto return"->"return";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>";
    "$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"->"$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2)";
    "$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2)"->"$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5)"->"r6 = r9";
    "r6 = r9"->"r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8)";
    "r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8)"->"r8 = r6";
    "r8 = r6"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 1000 goto return";
}
