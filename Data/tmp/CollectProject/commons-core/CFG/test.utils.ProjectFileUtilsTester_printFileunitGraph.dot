digraph "unitGraph" {
    "r5 := @this: test.utils.ProjectFileUtilsTester"
    "r1 := @parameter0: java.io.File"
    "$r0 = new java.util.Scanner"
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.io.File)>(r1)"
    "r6 = $r0"
    "$z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()"
    "if $z0 == 0 goto virtualinvoke r6.<java.util.Scanner: void close()>()"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = virtualinvoke r6.<java.util.Scanner: java.lang.String nextLine()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3)"
    "goto [?= $z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()]"
    "virtualinvoke r6.<java.util.Scanner: void close()>()"
    "goto [?= return]"
    "$r4 := @caughtexception"
    "r7 = $r4"
    "virtualinvoke r7.<java.io.FileNotFoundException: void printStackTrace()>()"
    "return"
    "r5 := @this: test.utils.ProjectFileUtilsTester"->"r1 := @parameter0: java.io.File";
    "r1 := @parameter0: java.io.File"->"$r0 = new java.util.Scanner";
    "r1 := @parameter0: java.io.File"->"$r4 := @caughtexception";
    "$r0 = new java.util.Scanner"->"specialinvoke $r0.<java.util.Scanner: void <init>(java.io.File)>(r1)";
    "$r0 = new java.util.Scanner"->"$r4 := @caughtexception";
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.io.File)>(r1)"->"r6 = $r0";
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.io.File)>(r1)"->"$r4 := @caughtexception";
    "r6 = $r0"->"$z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()";
    "r6 = $r0"->"$r4 := @caughtexception";
    "$z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()"->"if $z0 == 0 goto virtualinvoke r6.<java.util.Scanner: void close()>()";
    "$z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()"->"$r4 := @caughtexception";
    "if $z0 == 0 goto virtualinvoke r6.<java.util.Scanner: void close()>()"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto virtualinvoke r6.<java.util.Scanner: void close()>()"->"virtualinvoke r6.<java.util.Scanner: void close()>()";
    "if $z0 == 0 goto virtualinvoke r6.<java.util.Scanner: void close()>()"->"$r4 := @caughtexception";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r3 = virtualinvoke r6.<java.util.Scanner: java.lang.String nextLine()>()";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r4 := @caughtexception";
    "$r3 = virtualinvoke r6.<java.util.Scanner: java.lang.String nextLine()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3)";
    "$r3 = virtualinvoke r6.<java.util.Scanner: java.lang.String nextLine()>()"->"$r4 := @caughtexception";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3)"->"goto [?= $z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()]";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3)"->"$r4 := @caughtexception";
    "goto [?= $z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()]"->"$z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()";
    "goto [?= $z0 = virtualinvoke r6.<java.util.Scanner: boolean hasNextLine()>()]"->"$r4 := @caughtexception";
    "virtualinvoke r6.<java.util.Scanner: void close()>()"->"goto [?= return]";
    "virtualinvoke r6.<java.util.Scanner: void close()>()"->"$r4 := @caughtexception";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"r7 = $r4";
    "r7 = $r4"->"virtualinvoke r7.<java.io.FileNotFoundException: void printStackTrace()>()";
    "virtualinvoke r7.<java.io.FileNotFoundException: void printStackTrace()>()"->"return";
}
