digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r37 := @parameter0: java.lang.String[];
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_HYPHEN>;
$r0 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r3 = virtualinvoke $r1.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r0, \"test-data\");
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE>;
$r4 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r7 = virtualinvoke $r5.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r4, \"test_data\");
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_UNDERSCORE>;
$r8 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat UPPER_CAMEL>;
$r11 = virtualinvoke $r9.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r8, \"test_data\");
virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r12 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE>;
$r15 = virtualinvoke $r13.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r12, \"testdata\");
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r16 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE>;
$r19 = virtualinvoke $r17.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r16, \"TestData\");
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r20 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_UNDERSCORE>;
$r23 = virtualinvoke $r21.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r20, \"testData\");
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r23);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_CAMEL>;
$r24 = <com.google.common.base.CaseFormat: com.google.common.base.CaseFormat LOWER_HYPHEN>;
$r27 = virtualinvoke $r25.<com.google.common.base.CaseFormat: java.lang.String 'to'(com.google.common.base.CaseFormat,java.lang.String)>($r24, \"testData\");
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r27);
$r28 = new test.utils.MapToObjTest$A;
specialinvoke $r28.<test.utils.MapToObjTest$A: void <init>(int,java.lang.String)>(1, \"aaa\");
r38 = $r28;
$r29 = <cn.ponfee.commons.reflect.BeanMaps: cn.ponfee.commons.reflect.BeanMaps PROPS>;
$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(123);
$r31 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(\"aB\", $r30, \"str\", \"abc\", \"mode\", \"RipeMD128\");
$r32 = virtualinvoke $r29.<cn.ponfee.commons.reflect.BeanMaps: java.lang.Object toBean(java.util.Map,java.lang.Class)>($r31, class \"Ltest/utils/MapToObjTest$A;\");
r39 = (test.utils.MapToObjTest$A) $r32;
$r33 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.Object)>(r39);
$r35 = <java.lang.System: java.io.PrintStream out>;
$r34 = <cn.ponfee.commons.reflect.BeanMaps: cn.ponfee.commons.reflect.BeanMaps PROPS>;
$r36 = virtualinvoke $r34.<cn.ponfee.commons.reflect.BeanMaps: java.util.Map toMap(java.lang.Object)>(r39);
virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.Object)>($r36);
return;
"
}
