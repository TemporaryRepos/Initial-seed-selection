digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = new test.constraint.TestConstraint"
    "specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>()"
    "r1 = $r0"
    "r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\""
    "r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\""
    "$r2 = new java.util.Date"
    "$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()"
    "$l1 = $l0 + 5000000L"
    "specialinvoke $r2.<java.util.Date: void <init>(long)>($l1)"
    "r1.<test.constraint.TestConstraint: java.util.Date date> = $r2"
    "$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>()"
    "virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1)"
    "goto [?= return]"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = new test.constraint.TestConstraint";
    "$r0 = new test.constraint.TestConstraint"->"specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>()";
    "specialinvoke $r0.<test.constraint.TestConstraint: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\"";
    "r1.<test.constraint.TestConstraint: java.lang.String s1> = \"\""->"r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\"";
    "r1.<test.constraint.TestConstraint: java.lang.String s2> = \"1\""->"$r2 = new java.util.Date";
    "$r2 = new java.util.Date"->"$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()";
    "$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()"->"$l1 = $l0 + 5000000L";
    "$l1 = $l0 + 5000000L"->"specialinvoke $r2.<java.util.Date: void <init>(long)>($l1)";
    "specialinvoke $r2.<java.util.Date: void <init>(long)>($l1)"->"r1.<test.constraint.TestConstraint: java.util.Date date> = $r2";
    "r1.<test.constraint.TestConstraint: java.util.Date date> = $r2"->"$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>()";
    "r1.<test.constraint.TestConstraint: java.util.Date date> = $r2"->"$r4 := @caughtexception";
    "$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>()"->"virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1)";
    "$r3 = staticinvoke <cn.ponfee.commons.constrain.FieldValidator: cn.ponfee.commons.constrain.FieldValidator newInstance()>()"->"$r4 := @caughtexception";
    "virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1)"->"goto [?= return]";
    "virtualinvoke $r3.<cn.ponfee.commons.constrain.FieldValidator: void constrain(java.lang.Object)>(r1)"->"$r4 := @caughtexception";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"r5 = $r4";
    "r5 = $r4"->"virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()"->"return";
}
