digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 start...\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.util.concurrent.locks.LockSupport: void park()>();
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r7 = <java.lang.System: java.io.PrintStream out>];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r12 := @caughtexception;
r13 = $r12;
virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();
"
    "Block 4:
[preds: 2 3 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 end...\");
$r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z1 = virtualinvoke $r9.<java.lang.Thread: boolean isInterrupted()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 start...\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.util.concurrent.locks.LockSupport: void park()>();
";
    "Block 0:
[preds: ] [succs: 1 3 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 start...\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r12 := @caughtexception;
r13 = $r12;
virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.util.concurrent.locks.LockSupport: void park()>();
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r7 = <java.lang.System: java.io.PrintStream out>];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.util.concurrent.locks.LockSupport: void park()>();
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r12 := @caughtexception;
r13 = $r12;
virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $r7 = <java.lang.System: java.io.PrintStream out>];
"->"Block 4:
[preds: 2 3 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 end...\");
$r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z1 = virtualinvoke $r9.<java.lang.Thread: boolean isInterrupted()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);
return;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r12 := @caughtexception;
r13 = $r12;
virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();
"->"Block 4:
[preds: 2 3 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"t2 end...\");
$r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$z1 = virtualinvoke $r9.<java.lang.Thread: boolean isInterrupted()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);
return;
";
}
