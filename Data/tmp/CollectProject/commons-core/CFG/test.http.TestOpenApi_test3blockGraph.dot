digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r2 := @this: test.http.TestOpenApi;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r3 = r2.<test.http.TestOpenApi: java.lang.String host>;
$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/open/api/test?a=1=32=14=12=4=3214=2&abcdef&\");
$d0 = staticinvoke <java.lang.Math: double random()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
$r8 = staticinvoke <cn.ponfee.commons.http.Http: cn.ponfee.commons.http.Http post(java.lang.String)>($r7);
$r9 = virtualinvoke $r8.<cn.ponfee.commons.http.Http: java.lang.String request()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);
return;
"
}
