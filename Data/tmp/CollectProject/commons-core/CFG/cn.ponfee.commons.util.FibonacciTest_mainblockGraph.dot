digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(1);
r8 = $r0;
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(int)>(1);
r9 = $r1;
i0 = 1;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;
$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2);
$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = r9;
r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8);
r8 = r6;
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.math.BigDecimal;
specialinvoke $r0.<java.math.BigDecimal: void <init>(int)>(1);
r8 = $r0;
$r1 = new java.math.BigDecimal;
specialinvoke $r1.<java.math.BigDecimal: void <init>(int)>(1);
r9 = $r1;
i0 = 1;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;
$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2);
$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = r9;
r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8);
r8 = r6;
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;
$r4 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r9, 1000, $r2);
$r5 = virtualinvoke $r4.<java.math.BigDecimal: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = r9;
r9 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r8);
r8 = r6;
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 1000 goto return;
";
}
