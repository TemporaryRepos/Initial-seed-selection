digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r9 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.locks.ReentrantLock;
specialinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();
r1 = $r0;
$r2 = new java.lang.Thread;
$r3 = staticinvoke <test.utils.TestInterrupt$lambda_main_0__66: java.lang.Runnable bootstrap$(java.util.concurrent.locks.Lock)>(r1);
specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);
r4 = $r2;
$r5 = new java.lang.Thread;
$r6 = staticinvoke <test.utils.TestInterrupt$lambda_main_1__67: java.lang.Runnable bootstrap$()>();
specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6);
r7 = $r5;
virtualinvoke r4.<java.lang.Thread: void start()>();
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
virtualinvoke r7.<java.lang.Thread: void start()>();
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
virtualinvoke r7.<java.lang.Thread: void interrupt()>();
virtualinvoke r4.<java.lang.Thread: void join()>();
virtualinvoke r7.<java.lang.Thread: void join()>();
$r8 = <java.lang.System: java.io.PrintStream out>;
$z0 = virtualinvoke r7.<java.lang.Thread: boolean isInterrupted()>();
virtualinvoke $r8.<java.io.PrintStream: void println(boolean)>($z0);
return;
"
}
