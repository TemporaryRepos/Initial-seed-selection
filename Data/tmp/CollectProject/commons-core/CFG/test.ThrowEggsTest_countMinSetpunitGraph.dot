digraph "unitGraph" {
    "r7 := @this: test.ThrowEggsTest"
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "if i0 < 1 goto return 0"
    "if i1 >= 1 goto $i3 = i0 + 1"
    "return 0"
    "$i3 = i0 + 1"
    "$i2 = i1 + 1"
    "r0 = newmultiarray (int)[$i3][$i2]"
    "i14 = 1"
    "if i14 > i0 goto i16 = 2"
    "i15 = 1"
    "if i15 > i1 goto i14 = i14 + 1"
    "$r6 = r0[i14]"
    "$r6[i15] = i15"
    "i15 = i15 + 1"
    "goto [?= (branch)]"
    "i14 = i14 + 1"
    "i16 = 2"
    "if i16 > i0 goto $r1 = r0[i0]"
    "i17 = 1"
    "if i17 > i1 goto i16 = i16 + 1"
    "i18 = 1"
    "if i18 >= i17 goto i17 = i17 + 1"
    "$r5 = r0[i16]"
    "$r2 = r0[i16]"
    "$i10 = $r2[i17]"
    "$i5 = i16 - 1"
    "$r3 = r0[$i5]"
    "$i6 = i18 - 1"
    "$i9 = $r3[$i6]"
    "$r4 = r0[i16]"
    "$i7 = i17 - i18"
    "$i8 = $r4[$i7]"
    "$i11 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)"
    "$i12 = 1 + $i11"
    "$i13 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i12)"
    "$r5[i17] = $i13"
    "i18 = i18 + 1"
    "i17 = i17 + 1"
    "i16 = i16 + 1"
    "$r1 = r0[i0]"
    "$i4 = $r1[i1]"
    "return $i4"
    "r7 := @this: test.ThrowEggsTest"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"if i0 < 1 goto return 0";
    "if i0 < 1 goto return 0"->"if i1 >= 1 goto $i3 = i0 + 1";
    "if i0 < 1 goto return 0"->"return 0";
    "if i1 >= 1 goto $i3 = i0 + 1"->"return 0";
    "if i1 >= 1 goto $i3 = i0 + 1"->"$i3 = i0 + 1";
    "$i3 = i0 + 1"->"$i2 = i1 + 1";
    "$i2 = i1 + 1"->"r0 = newmultiarray (int)[$i3][$i2]";
    "r0 = newmultiarray (int)[$i3][$i2]"->"i14 = 1";
    "i14 = 1"->"if i14 > i0 goto i16 = 2";
    "if i14 > i0 goto i16 = 2"->"i15 = 1";
    "if i14 > i0 goto i16 = 2"->"i16 = 2";
    "i15 = 1"->"if i15 > i1 goto i14 = i14 + 1";
    "if i15 > i1 goto i14 = i14 + 1"->"$r6 = r0[i14]";
    "if i15 > i1 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "$r6 = r0[i14]"->"$r6[i15] = i15";
    "$r6[i15] = i15"->"i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 > i1 goto i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 > i0 goto i16 = 2";
    "i16 = 2"->"if i16 > i0 goto $r1 = r0[i0]";
    "if i16 > i0 goto $r1 = r0[i0]"->"i17 = 1";
    "if i16 > i0 goto $r1 = r0[i0]"->"$r1 = r0[i0]";
    "i17 = 1"->"if i17 > i1 goto i16 = i16 + 1";
    "if i17 > i1 goto i16 = i16 + 1"->"i18 = 1";
    "if i17 > i1 goto i16 = i16 + 1"->"i16 = i16 + 1";
    "i18 = 1"->"if i18 >= i17 goto i17 = i17 + 1";
    "if i18 >= i17 goto i17 = i17 + 1"->"$r5 = r0[i16]";
    "if i18 >= i17 goto i17 = i17 + 1"->"i17 = i17 + 1";
    "$r5 = r0[i16]"->"$r2 = r0[i16]";
    "$r2 = r0[i16]"->"$i10 = $r2[i17]";
    "$i10 = $r2[i17]"->"$i5 = i16 - 1";
    "$i5 = i16 - 1"->"$r3 = r0[$i5]";
    "$r3 = r0[$i5]"->"$i6 = i18 - 1";
    "$i6 = i18 - 1"->"$i9 = $r3[$i6]";
    "$i9 = $r3[$i6]"->"$r4 = r0[i16]";
    "$r4 = r0[i16]"->"$i7 = i17 - i18";
    "$i7 = i17 - i18"->"$i8 = $r4[$i7]";
    "$i8 = $r4[$i7]"->"$i11 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)";
    "$i11 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)"->"$i12 = 1 + $i11";
    "$i12 = 1 + $i11"->"$i13 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i12)";
    "$i13 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i12)"->"$r5[i17] = $i13";
    "$r5[i17] = $i13"->"i18 = i18 + 1";
    "i18 = i18 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i18 >= i17 goto i17 = i17 + 1";
    "i17 = i17 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 > i1 goto i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 > i0 goto $r1 = r0[i0]";
    "$r1 = r0[i0]"->"$i4 = $r1[i1]";
    "$i4 = $r1[i1]"->"return $i4";
}
