digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @this: edu.umn.cs.spatialHadoop.visualization.SimpleGraphics;
r1 := @parameter0: int[];
r2 := @parameter1: int[];
i0 := @parameter2: int;
i13 = 1;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i13 >= i0 goto $i1 = i0 - 1;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = i13 - 1;
$i12 = r1[$i7];
$i8 = i13 - 1;
$i11 = r2[$i8];
$i10 = r1[i13];
$i9 = r2[i13];
virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i12, $i11, $i10, $i9);
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$i1 = i0 - 1;
$i6 = r1[$i1];
$i2 = i0 - 1;
$i5 = r2[$i2];
$i4 = r1[0];
$i3 = r2[0];
virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @this: edu.umn.cs.spatialHadoop.visualization.SimpleGraphics;
r1 := @parameter0: int[];
r2 := @parameter1: int[];
i0 := @parameter2: int;
i13 = 1;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i13 >= i0 goto $i1 = i0 - 1;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i13 >= i0 goto $i1 = i0 - 1;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = i13 - 1;
$i12 = r1[$i7];
$i8 = i13 - 1;
$i11 = r2[$i8];
$i10 = r1[i13];
$i9 = r2[i13];
virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i12, $i11, $i10, $i9);
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i13 >= i0 goto $i1 = i0 - 1;
"->"Block 3:
[preds: 1 ] [succs: ]
$i1 = i0 - 1;
$i6 = r1[$i1];
$i2 = i0 - 1;
$i5 = r2[$i2];
$i4 = r1[0];
$i3 = r2[0];
virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i7 = i13 - 1;
$i12 = r1[$i7];
$i8 = i13 - 1;
$i11 = r2[$i8];
$i10 = r1[i13];
$i9 = r2[i13];
virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i12, $i11, $i10, $i9);
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i13 >= i0 goto $i1 = i0 - 1;
";
}
