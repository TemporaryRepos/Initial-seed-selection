digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[1000000]"
    "i3 = 0"
    "$i0 = lengthof r0"
    "if i3 >= $i0 goto $i1 = lengthof r0"
    "r0[i3] = i3"
    "i3 = i3 + 1"
    "goto [?= $i0 = lengthof r0]"
    "$i1 = lengthof r0"
    "$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2"
    "specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0)"
    "r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1)"
    "l4 = 0L"
    "r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"
    "r5 = (java.lang.Long) $r4"
    "$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>()"
    "l4 = l4 + $l2"
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l4)"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[1000000]";
    "r0 = newarray (int)[1000000]"->"i3 = 0";
    "i3 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i3 >= $i0 goto $i1 = lengthof r0";
    "if i3 >= $i0 goto $i1 = lengthof r0"->"r0[i3] = i3";
    "if i3 >= $i0 goto $i1 = lengthof r0"->"$i1 = lengthof r0";
    "r0[i3] = i3"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "$i1 = lengthof r0"->"$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2";
    "$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2"->"specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0)";
    "specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0)"->"r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1)";
    "r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1)"->"l4 = 0L";
    "l4 = 0L"->"r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()";
    "r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"->"r5 = (java.lang.Long) $r4";
    "r5 = (java.lang.Long) $r4"->"$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>()";
    "$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>()"->"l4 = l4 + $l2";
    "l4 = l4 + $l2"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l4)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l4)"->"return";
}
