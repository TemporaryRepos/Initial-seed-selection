digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (int)[1000000];
i3 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i3 >= $i0 goto $i1 = lengthof r0;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r0[i3] = i3;
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = lengthof r0;
$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2;
specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0);
r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1);
l4 = 0L;
r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Long) $r4;
$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>();
l4 = l4 + $l2;
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l4);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
r0 = newarray (int)[1000000];
i3 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i3 >= $i0 goto $i1 = lengthof r0;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i3 >= $i0 goto $i1 = lengthof r0;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r0[i3] = i3;
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i3 >= $i0 goto $i1 = lengthof r0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = lengthof r0;
$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2;
specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0);
r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1);
l4 = 0L;
r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r0[i3] = i3;
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i3 >= $i0 goto $i1 = lengthof r0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$i1 = lengthof r0;
$r1 = new edu.umn.cs.spatialHadoop.util.Parallel$2;
specialinvoke $r1.<edu.umn.cs.spatialHadoop.util.Parallel$2: void <init>(int[])>(r0);
r7 = staticinvoke <edu.umn.cs.spatialHadoop.util.Parallel: java.util.List forEach(int,edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange)>($i1, $r1);
l4 = 0L;
r2 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Long) $r4;
$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>();
l4 = l4 + $l2;
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l4);
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
r5 = (java.lang.Long) $r4;
$l2 = virtualinvoke r5.<java.lang.Long: long longValue()>();
l4 = l4 + $l2;
goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
}
