digraph "unitGraph" {
    "r0 := @this: edu.umn.cs.spatialHadoop.visualization.SimpleGraphics"
    "r1 := @parameter0: int[]"
    "r2 := @parameter1: int[]"
    "i0 := @parameter2: int"
    "i7 = 1"
    "if i7 >= i0 goto return"
    "$i1 = i7 - 1"
    "$i6 = r1[$i1]"
    "$i2 = i7 - 1"
    "$i5 = r2[$i2]"
    "$i4 = r1[i7]"
    "$i3 = r2[i7]"
    "virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 := @this: edu.umn.cs.spatialHadoop.visualization.SimpleGraphics"->"r1 := @parameter0: int[]";
    "r1 := @parameter0: int[]"->"r2 := @parameter1: int[]";
    "r2 := @parameter1: int[]"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i7 = 1";
    "i7 = 1"->"if i7 >= i0 goto return";
    "if i7 >= i0 goto return"->"$i1 = i7 - 1";
    "if i7 >= i0 goto return"->"return";
    "$i1 = i7 - 1"->"$i6 = r1[$i1]";
    "$i6 = r1[$i1]"->"$i2 = i7 - 1";
    "$i2 = i7 - 1"->"$i5 = r2[$i2]";
    "$i5 = r2[$i2]"->"$i4 = r1[i7]";
    "$i4 = r1[i7]"->"$i3 = r2[i7]";
    "$i3 = r2[i7]"->"virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3)";
    "virtualinvoke r0.<edu.umn.cs.spatialHadoop.visualization.SimpleGraphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i0 goto return";
}
