digraph "unitGraph" {
    "i1 := @parameter0: int"
    "i0 := @parameter1: int"
    "r27 := @parameter2: edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange"
    "i12 := @parameter3: int"
    "$r0 = new java.util.Vector"
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"
    "r1 = $r0"
    "if i0 > i1 goto $r2 = new java.util.Vector"
    "return r1"
    "$r2 = new java.util.Vector"
    "specialinvoke $r2.<java.util.Vector: void <init>()>()"
    "r3 = $r2"
    "$r4 = new edu.umn.cs.spatialHadoop.util.Parallel$1"
    "specialinvoke $r4.<edu.umn.cs.spatialHadoop.util.Parallel$1: void <init>(java.util.Vector)>(r3)"
    "r5 = $r4"
    "$i2 = i0 - i1"
    "if i12 <= $i2 goto (branch)"
    "i12 = i0 - i1"
    "if i12 != 1 goto $r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>"
    "$r31 = interfaceinvoke r27.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange: java.lang.Object run(int,int)>(i1, i0)"
    "virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r31)"
    "goto [?= return r1]"
    "$r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Creating \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "interfaceinvoke $r7.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r11)"
    "$i3 = i12 + 1"
    "r12 = newarray (int)[$i3]"
    "i13 = 0"
    "if i13 > i12 goto $r13 = new java.util.Vector"
    "$i8 = i0 - i1"
    "$i9 = i13 * $i8"
    "$i10 = $i9 / i12"
    "$i11 = $i10 + i1"
    "r12[i13] = $i11"
    "i13 = i13 + 1"
    "goto [?= (branch)]"
    "$r13 = new java.util.Vector"
    "specialinvoke $r13.<java.util.Vector: void <init>()>()"
    "r32 = $r13"
    "i14 = 0"
    "if i14 >= i12 goto i15 = 0"
    "$r26 = new edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread"
    "$i7 = r12[i14]"
    "$i5 = i14 + 1"
    "$i6 = r12[$i5]"
    "specialinvoke $r26.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void <init>(edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange,int,int)>(r27, $i7, $i6)"
    "r28 = $r26"
    "virtualinvoke r28.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r5)"
    "virtualinvoke r32.<java.util.Vector: boolean add(java.lang.Object)>(r28)"
    "$r29 = virtualinvoke r32.<java.util.Vector: java.lang.Object lastElement()>()"
    "$r30 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r29"
    "virtualinvoke $r30.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void start()>()"
    "i14 = i14 + 1"
    "i15 = 0"
    "if i15 >= i12 goto $z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()"
    "$r21 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)"
    "$r22 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r21"
    "virtualinvoke $r22.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void join()>()"
    "$r23 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)"
    "$r24 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r23"
    "$r25 = virtualinvoke $r24.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: java.lang.Object getResult()>()"
    "virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r25)"
    "i15 = i15 + 1"
    "$z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()"
    "if $z0 != 0 goto return r1"
    "$r14 = new java.lang.RuntimeException"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$i4 = virtualinvoke r3.<java.util.Vector: int size()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" unhandled exceptions\")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r19 = virtualinvoke r3.<java.util.Vector: java.lang.Object firstElement()>()"
    "$r20 = (java.lang.Throwable) $r19"
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r20)"
    "throw $r14"
    "i1 := @parameter0: int"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r27 := @parameter2: edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange";
    "r27 := @parameter2: edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange"->"i12 := @parameter3: int";
    "i12 := @parameter3: int"->"$r0 = new java.util.Vector";
    "$r0 = new java.util.Vector"->"specialinvoke $r0.<java.util.Vector: void <init>()>()";
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"if i0 > i1 goto $r2 = new java.util.Vector";
    "if i0 > i1 goto $r2 = new java.util.Vector"->"return r1";
    "if i0 > i1 goto $r2 = new java.util.Vector"->"$r2 = new java.util.Vector";
    "$r2 = new java.util.Vector"->"specialinvoke $r2.<java.util.Vector: void <init>()>()";
    "specialinvoke $r2.<java.util.Vector: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new edu.umn.cs.spatialHadoop.util.Parallel$1";
    "$r4 = new edu.umn.cs.spatialHadoop.util.Parallel$1"->"specialinvoke $r4.<edu.umn.cs.spatialHadoop.util.Parallel$1: void <init>(java.util.Vector)>(r3)";
    "specialinvoke $r4.<edu.umn.cs.spatialHadoop.util.Parallel$1: void <init>(java.util.Vector)>(r3)"->"r5 = $r4";
    "r5 = $r4"->"$i2 = i0 - i1";
    "$i2 = i0 - i1"->"if i12 <= $i2 goto (branch)";
    "if i12 <= $i2 goto (branch)"->"i12 = i0 - i1";
    "if i12 <= $i2 goto (branch)"->"if i12 != 1 goto $r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>";
    "i12 = i0 - i1"->"if i12 != 1 goto $r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>";
    "if i12 != 1 goto $r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>"->"$r31 = interfaceinvoke r27.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange: java.lang.Object run(int,int)>(i1, i0)";
    "if i12 != 1 goto $r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>"->"$r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>";
    "$r31 = interfaceinvoke r27.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange: java.lang.Object run(int,int)>(i1, i0)"->"virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r31)";
    "virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r31)"->"goto [?= return r1]";
    "goto [?= return r1]"->"return r1";
    "$r7 = <edu.umn.cs.spatialHadoop.util.Parallel: org.apache.commons.logging.Log LOG>"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Creating \")";
    "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Creating \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" threads\")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"interfaceinvoke $r7.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r11)";
    "interfaceinvoke $r7.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r11)"->"$i3 = i12 + 1";
    "$i3 = i12 + 1"->"r12 = newarray (int)[$i3]";
    "r12 = newarray (int)[$i3]"->"i13 = 0";
    "i13 = 0"->"if i13 > i12 goto $r13 = new java.util.Vector";
    "if i13 > i12 goto $r13 = new java.util.Vector"->"$i8 = i0 - i1";
    "if i13 > i12 goto $r13 = new java.util.Vector"->"$r13 = new java.util.Vector";
    "$i8 = i0 - i1"->"$i9 = i13 * $i8";
    "$i9 = i13 * $i8"->"$i10 = $i9 / i12";
    "$i10 = $i9 / i12"->"$i11 = $i10 + i1";
    "$i11 = $i10 + i1"->"r12[i13] = $i11";
    "r12[i13] = $i11"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 > i12 goto $r13 = new java.util.Vector";
    "$r13 = new java.util.Vector"->"specialinvoke $r13.<java.util.Vector: void <init>()>()";
    "specialinvoke $r13.<java.util.Vector: void <init>()>()"->"r32 = $r13";
    "r32 = $r13"->"i14 = 0";
    "i14 = 0"->"if i14 >= i12 goto i15 = 0";
    "if i14 >= i12 goto i15 = 0"->"$r26 = new edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread";
    "if i14 >= i12 goto i15 = 0"->"i15 = 0";
    "$r26 = new edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread"->"$i7 = r12[i14]";
    "$i7 = r12[i14]"->"$i5 = i14 + 1";
    "$i5 = i14 + 1"->"$i6 = r12[$i5]";
    "$i6 = r12[$i5]"->"specialinvoke $r26.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void <init>(edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange,int,int)>(r27, $i7, $i6)";
    "specialinvoke $r26.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void <init>(edu.umn.cs.spatialHadoop.util.Parallel$RunnableRange,int,int)>(r27, $i7, $i6)"->"r28 = $r26";
    "r28 = $r26"->"virtualinvoke r28.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r5)";
    "virtualinvoke r28.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r5)"->"virtualinvoke r32.<java.util.Vector: boolean add(java.lang.Object)>(r28)";
    "virtualinvoke r32.<java.util.Vector: boolean add(java.lang.Object)>(r28)"->"$r29 = virtualinvoke r32.<java.util.Vector: java.lang.Object lastElement()>()";
    "$r29 = virtualinvoke r32.<java.util.Vector: java.lang.Object lastElement()>()"->"$r30 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r29";
    "$r30 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r29"->"virtualinvoke $r30.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void start()>()";
    "virtualinvoke $r30.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void start()>()"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= i12 goto i15 = 0";
    "i15 = 0"->"if i15 >= i12 goto $z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()";
    "if i15 >= i12 goto $z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()"->"$r21 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)";
    "if i15 >= i12 goto $z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()"->"$z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()";
    "$r21 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)"->"$r22 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r21";
    "$r22 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r21"->"virtualinvoke $r22.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void join()>()";
    "virtualinvoke $r22.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: void join()>()"->"$r23 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)";
    "$r23 = virtualinvoke r32.<java.util.Vector: java.lang.Object get(int)>(i15)"->"$r24 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r23";
    "$r24 = (edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread) $r23"->"$r25 = virtualinvoke $r24.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: java.lang.Object getResult()>()";
    "$r25 = virtualinvoke $r24.<edu.umn.cs.spatialHadoop.util.Parallel$RunnableRangeThread: java.lang.Object getResult()>()"->"virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r25)";
    "virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>($r25)"->"i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 >= i12 goto $z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()";
    "$z0 = virtualinvoke r3.<java.util.Vector: boolean isEmpty()>()"->"if $z0 != 0 goto return r1";
    "if $z0 != 0 goto return r1"->"$r14 = new java.lang.RuntimeException";
    "if $z0 != 0 goto return r1"->"return r1";
    "$r14 = new java.lang.RuntimeException"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$i4 = virtualinvoke r3.<java.util.Vector: int size()>()";
    "$i4 = virtualinvoke r3.<java.util.Vector: int size()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" unhandled exceptions\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" unhandled exceptions\")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r19 = virtualinvoke r3.<java.util.Vector: java.lang.Object firstElement()>()";
    "$r19 = virtualinvoke r3.<java.util.Vector: java.lang.Object firstElement()>()"->"$r20 = (java.lang.Throwable) $r19";
    "$r20 = (java.lang.Throwable) $r19"->"specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r20)";
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r20)"->"throw $r14";
}
