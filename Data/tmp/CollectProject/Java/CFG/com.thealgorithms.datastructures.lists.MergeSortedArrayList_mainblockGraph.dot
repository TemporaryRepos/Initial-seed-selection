digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
$r4 = new java.util.ArrayList;
specialinvoke $r4.<java.util.ArrayList: void <init>()>();
r5 = $r4;
i1 = 1;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 > 10 goto staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);
$i0 = i1 + 1;
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);
i1 = i1 + 2;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listA: \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listB: \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listC: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r23 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
$r4 = new java.util.ArrayList;
specialinvoke $r4.<java.util.ArrayList: void <init>()>();
r5 = $r4;
i1 = 1;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 > 10 goto staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 > 10 goto staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);
$i0 = i1 + 1;
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);
i1 = i1 + 2;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 > 10 goto staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
"->"Block 3:
[preds: 1 ] [succs: ]
staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listA: \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r12 = <java.lang.System: java.io.PrintStream out>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listB: \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listC: \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);
$i0 = i1 + 1;
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);
i1 = i1 + 2;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 > 10 goto staticinvoke <com.thealgorithms.datastructures.lists.MergeSortedArrayList: void merge(java.util.List,java.util.List,java.util.List)>(r1, r3, r5);
";
}
