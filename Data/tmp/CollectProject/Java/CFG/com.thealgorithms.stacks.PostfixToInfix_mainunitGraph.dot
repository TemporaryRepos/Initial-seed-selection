digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$z0 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r8 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABC+/\")"
    "$z9 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(\"(A/(B+C))\")"
    "if $z9 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r9 = new java.lang.AssertionError"
    "specialinvoke $r9.<java.lang.AssertionError: void <init>()>()"
    "throw $r9"
    "$z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r6 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD+*\")"
    "$z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"((A+B)*(C+D))\")"
    "if $z8 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r7 = new java.lang.AssertionError"
    "specialinvoke $r7.<java.lang.AssertionError: void <init>()>()"
    "throw $r7"
    "$z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r4 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+C+D+\")"
    "$z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(\"(((A+B)+C)+D)\")"
    "if $z7 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"
    "throw $r5"
    "$z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "if $z3 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABCDE^*/-\")"
    "$z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"(A-(B/(C*(D^E))))\")"
    "if $z6 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"
    "throw $r3"
    "$z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"
    "if $z4 != 0 goto return"
    "$r0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD^/E*FGH+-^\")"
    "$z5 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"((((A+B)/(C^D))*E)^(F-(G+H)))\")"
    "if $z5 != 0 goto return"
    "$r1 = new java.lang.AssertionError"
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"
    "throw $r1"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$z0 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r8 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABC+/\")";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r8 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABC+/\")"->"$z9 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(\"(A/(B+C))\")";
    "$z9 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(\"(A/(B+C))\")"->"if $z9 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z9 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r9 = new java.lang.AssertionError";
    "if $z9 != 0 goto $z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r9 = new java.lang.AssertionError"->"specialinvoke $r9.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r9.<java.lang.AssertionError: void <init>()>()"->"throw $r9";
    "$z1 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r6 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD+*\")";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r6 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD+*\")"->"$z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"((A+B)*(C+D))\")";
    "$z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"((A+B)*(C+D))\")"->"if $z8 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z8 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r7 = new java.lang.AssertionError";
    "if $z8 != 0 goto $z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r7 = new java.lang.AssertionError"->"specialinvoke $r7.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r7.<java.lang.AssertionError: void <init>()>()"->"throw $r7";
    "$z2 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r4 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+C+D+\")";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r4 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+C+D+\")"->"$z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(\"(((A+B)+C)+D)\")";
    "$z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(\"(((A+B)+C)+D)\")"->"if $z7 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z7 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r5 = new java.lang.AssertionError";
    "if $z7 != 0 goto $z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"->"throw $r5";
    "$z3 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"if $z3 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z3 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABCDE^*/-\")";
    "if $z3 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"ABCDE^*/-\")"->"$z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"(A-(B/(C*(D^E))))\")";
    "$z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"(A-(B/(C*(D^E))))\")"->"if $z6 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "if $z6 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$r3 = new java.lang.AssertionError";
    "if $z6 != 0 goto $z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"$z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"->"throw $r3";
    "$z4 = <com.thealgorithms.stacks.PostfixToInfix: boolean $assertionsDisabled>"->"if $z4 != 0 goto return";
    "if $z4 != 0 goto return"->"$r0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD^/E*FGH+-^\")";
    "if $z4 != 0 goto return"->"return";
    "$r0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: java.lang.String getPostfixToInfix(java.lang.String)>(\"AB+CD^/E*FGH+-^\")"->"$z5 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"((((A+B)/(C^D))*E)^(F-(G+H)))\")";
    "$z5 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"((((A+B)/(C^D))*E)^(F-(G+H)))\")"->"if $z5 != 0 goto return";
    "if $z5 != 0 goto return"->"$r1 = new java.lang.AssertionError";
    "if $z5 != 0 goto return"->"return";
    "$r1 = new java.lang.AssertionError"->"specialinvoke $r1.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"->"throw $r1";
}
