digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i1 := @parameter1: int"
    "i0 := @parameter2: int"
    "i6 = 0"
    "if i6 >= i0 goto return 1"
    "$i2 = r0[i6]"
    "$i3 = $i2 - i1"
    "i4 = staticinvoke <java.lang.Math: int abs(int)>($i3)"
    "if i4 == 0 goto return 0"
    "$i5 = i0 - i6"
    "if $i5 != i4 goto i6 = i6 + 1"
    "return 0"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "return 1"
    "r0 := @parameter0: int[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i6 = 0";
    "i6 = 0"->"if i6 >= i0 goto return 1";
    "if i6 >= i0 goto return 1"->"$i2 = r0[i6]";
    "if i6 >= i0 goto return 1"->"return 1";
    "$i2 = r0[i6]"->"$i3 = $i2 - i1";
    "$i3 = $i2 - i1"->"i4 = staticinvoke <java.lang.Math: int abs(int)>($i3)";
    "i4 = staticinvoke <java.lang.Math: int abs(int)>($i3)"->"if i4 == 0 goto return 0";
    "if i4 == 0 goto return 0"->"$i5 = i0 - i6";
    "if i4 == 0 goto return 0"->"return 0";
    "$i5 = i0 - i6"->"if $i5 != i4 goto i6 = i6 + 1";
    "if $i5 != i4 goto i6 = i6 + 1"->"return 0";
    "if $i5 != i4 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i0 goto return 1";
}
