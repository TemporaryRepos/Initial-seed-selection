digraph "unitGraph" {
    "r0 := @parameter0: java.math.BigDecimal[][]"
    "r1 := @parameter1: java.math.BigDecimal[][]"
    "$z0 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r0)"
    "if $z0 == 0 goto $z2 = 0"
    "$z1 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r1)"
    "if $z1 == 0 goto $z2 = 0"
    "$i1 = lengthof r0"
    "$i0 = lengthof r1"
    "if $i1 != $i0 goto $z2 = 0"
    "$r2 = r0[0]"
    "$i3 = lengthof $r2"
    "$r3 = r1[0]"
    "$i2 = lengthof $r3"
    "if $i3 != $i2 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= return $z2]"
    "$z2 = 0"
    "return $z2"
    "r0 := @parameter0: java.math.BigDecimal[][]"->"r1 := @parameter1: java.math.BigDecimal[][]";
    "r1 := @parameter1: java.math.BigDecimal[][]"->"$z0 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r0)";
    "$z0 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r0)"->"if $z0 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"$z1 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r1)";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z1 = staticinvoke <com.thealgorithms.maths.MatrixUtil: boolean isValid(java.math.BigDecimal[][])>(r1)"->"if $z1 == 0 goto $z2 = 0";
    "if $z1 == 0 goto $z2 = 0"->"$i1 = lengthof r0";
    "if $z1 == 0 goto $z2 = 0"->"$z2 = 0";
    "$i1 = lengthof r0"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if $i1 != $i0 goto $z2 = 0";
    "if $i1 != $i0 goto $z2 = 0"->"$r2 = r0[0]";
    "if $i1 != $i0 goto $z2 = 0"->"$z2 = 0";
    "$r2 = r0[0]"->"$i3 = lengthof $r2";
    "$i3 = lengthof $r2"->"$r3 = r1[0]";
    "$r3 = r1[0]"->"$i2 = lengthof $r3";
    "$i2 = lengthof $r3"->"if $i3 != $i2 goto $z2 = 0";
    "if $i3 != $i2 goto $z2 = 0"->"$z2 = 1";
    "if $i3 != $i2 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= return $z2]";
    "goto [?= return $z2]"->"return $z2";
    "$z2 = 0"->"return $z2";
}
