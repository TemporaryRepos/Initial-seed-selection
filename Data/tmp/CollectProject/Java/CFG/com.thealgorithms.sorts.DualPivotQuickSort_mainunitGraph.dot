digraph "unitGraph" {
    "r19 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.Integer)[8]"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24)"
    "$r0[0] = $r1"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)"
    "$r0[1] = $r2"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-42)"
    "$r0[2] = $r3"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(75)"
    "$r0[3] = $r4"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-29)"
    "$r0[4] = $r5"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-77)"
    "$r0[5] = $r6"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(38)"
    "$r0[6] = $r7"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(57)"
    "$r0[7] = $r8"
    "r9 = $r0"
    "$r10 = new com.thealgorithms.sorts.DualPivotQuickSort"
    "specialinvoke $r10.<com.thealgorithms.sorts.DualPivotQuickSort: void <init>()>()"
    "r11 = $r10"
    "virtualinvoke r11.<com.thealgorithms.sorts.DualPivotQuickSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r9)"
    "i1 = 0"
    "$i0 = lengthof r9"
    "if i1 >= $i0 goto return"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "$r13 = new java.lang.StringBuilder"
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"
    "$r15 = r9[i1]"
    "$r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r18)"
    "i1 = i1 + 1"
    "goto [?= $i0 = lengthof r9]"
    "return"
    "r19 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.Integer)[8]";
    "$r0 = newarray (java.lang.Integer)[8]"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-42)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-42)"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(75)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(75)"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-29)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-29)"->"$r0[4] = $r5";
    "$r0[4] = $r5"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-77)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-77)"->"$r0[5] = $r6";
    "$r0[5] = $r6"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(38)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(38)"->"$r0[6] = $r7";
    "$r0[6] = $r7"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(57)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(57)"->"$r0[7] = $r8";
    "$r0[7] = $r8"->"r9 = $r0";
    "r9 = $r0"->"$r10 = new com.thealgorithms.sorts.DualPivotQuickSort";
    "$r10 = new com.thealgorithms.sorts.DualPivotQuickSort"->"specialinvoke $r10.<com.thealgorithms.sorts.DualPivotQuickSort: void <init>()>()";
    "specialinvoke $r10.<com.thealgorithms.sorts.DualPivotQuickSort: void <init>()>()"->"r11 = $r10";
    "r11 = $r10"->"virtualinvoke r11.<com.thealgorithms.sorts.DualPivotQuickSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r9)";
    "virtualinvoke r11.<com.thealgorithms.sorts.DualPivotQuickSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r9)"->"i1 = 0";
    "i1 = 0"->"$i0 = lengthof r9";
    "$i0 = lengthof r9"->"if i1 >= $i0 goto return";
    "if i1 >= $i0 goto return"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= $i0 goto return"->"return";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"$r13 = new java.lang.StringBuilder";
    "$r13 = new java.lang.StringBuilder"->"specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()"->"$r15 = r9[i1]";
    "$r15 = r9[i1]"->"$r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)";
    "$r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r18)";
    "virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r18)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= $i0 = lengthof r9]";
    "goto [?= $i0 = lengthof r9]"->"$i0 = lengthof r9";
}
