digraph "unitGraph" {
    "r12 := @this: com.thealgorithms.datastructures.graphs.PrimMST"
    "r3 := @parameter0: int[]"
    "i3 := @parameter1: int"
    "r8 := @parameter2: int[][]"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Edge   Weight\")"
    "i4 = 1"
    "if i4 >= 5 goto return"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$i0 = r3[i4]"
    "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"
    "$r9 = r8[i4]"
    "$i1 = r3[i4]"
    "$i2 = $r9[$i1]"
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r11)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return"
    "r12 := @this: com.thealgorithms.datastructures.graphs.PrimMST"->"r3 := @parameter0: int[]";
    "r3 := @parameter0: int[]"->"i3 := @parameter1: int";
    "i3 := @parameter1: int"->"r8 := @parameter2: int[][]";
    "r8 := @parameter2: int[][]"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Edge   Weight\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Edge   Weight\")"->"i4 = 1";
    "i4 = 1"->"if i4 >= 5 goto return";
    "if i4 >= 5 goto return"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "if i4 >= 5 goto return"->"return";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$i0 = r3[i4]";
    "$i0 = r3[i4]"->"$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)";
    "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"->"$r9 = r8[i4]";
    "$r9 = r8[i4]"->"$i1 = r3[i4]";
    "$i1 = r3[i4]"->"$i2 = $r9[$i1]";
    "$i2 = $r9[$i1]"->"$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)";
    "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r11)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= 5 goto return";
}
