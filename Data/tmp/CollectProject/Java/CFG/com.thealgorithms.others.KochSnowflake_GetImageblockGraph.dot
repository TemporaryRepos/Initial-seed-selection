digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.util.ArrayList;
i0 := @parameter1: int;
i1 := @parameter2: int;
$r0 = new java.awt.image.BufferedImage;
specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, 1);
r1 = $r0;
r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r3 = <java.awt.Color: java.awt.Color WHITE>;
virtualinvoke r2.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r3);
virtualinvoke r2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i0, i1);
$r4 = <java.awt.Color: java.awt.Color BLACK>;
virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r4);
$r5 = new java.awt.BasicStroke;
specialinvoke $r5.<java.awt.BasicStroke: void <init>(float)>(1.0F);
r6 = $r5;
virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6);
i10 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();
$i3 = $i2 - 1;
if i10 >= $i3 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r9 = (com.thealgorithms.others.KochSnowflake$Vector2) $r8;
$d0 = $r9.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i4 = (int) $d0;
$r10 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r11 = (com.thealgorithms.others.KochSnowflake$Vector2) $r10;
$d1 = $r11.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i5 = (int) $d1;
$i6 = i10 + 1;
$r12 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i6);
$r13 = (com.thealgorithms.others.KochSnowflake$Vector2) $r12;
$d2 = $r13.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i7 = (int) $d2;
$i8 = i10 + 1;
$r14 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i8);
$r15 = (com.thealgorithms.others.KochSnowflake$Vector2) $r14;
$d3 = $r15.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i9 = (int) $d3;
virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i4, i5, i7, i9);
i10 = i10 + 1;
goto [?= $i2 = virtualinvoke r7.<java.util.ArrayList: int size()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.util.ArrayList;
i0 := @parameter1: int;
i1 := @parameter2: int;
$r0 = new java.awt.image.BufferedImage;
specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, 1);
r1 = $r0;
r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();
$r3 = <java.awt.Color: java.awt.Color WHITE>;
virtualinvoke r2.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r3);
virtualinvoke r2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i0, i1);
$r4 = <java.awt.Color: java.awt.Color BLACK>;
virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r4);
$r5 = new java.awt.BasicStroke;
specialinvoke $r5.<java.awt.BasicStroke: void <init>(float)>(1.0F);
r6 = $r5;
virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6);
i10 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();
$i3 = $i2 - 1;
if i10 >= $i3 goto return r1;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();
$i3 = $i2 - 1;
if i10 >= $i3 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r9 = (com.thealgorithms.others.KochSnowflake$Vector2) $r8;
$d0 = $r9.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i4 = (int) $d0;
$r10 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r11 = (com.thealgorithms.others.KochSnowflake$Vector2) $r10;
$d1 = $r11.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i5 = (int) $d1;
$i6 = i10 + 1;
$r12 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i6);
$r13 = (com.thealgorithms.others.KochSnowflake$Vector2) $r12;
$d2 = $r13.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i7 = (int) $d2;
$i8 = i10 + 1;
$r14 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i8);
$r15 = (com.thealgorithms.others.KochSnowflake$Vector2) $r14;
$d3 = $r15.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i9 = (int) $d3;
virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i4, i5, i7, i9);
i10 = i10 + 1;
goto [?= $i2 = virtualinvoke r7.<java.util.ArrayList: int size()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();
$i3 = $i2 - 1;
if i10 >= $i3 goto return r1;
"->"Block 3:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r9 = (com.thealgorithms.others.KochSnowflake$Vector2) $r8;
$d0 = $r9.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i4 = (int) $d0;
$r10 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i10);
$r11 = (com.thealgorithms.others.KochSnowflake$Vector2) $r10;
$d1 = $r11.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i5 = (int) $d1;
$i6 = i10 + 1;
$r12 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i6);
$r13 = (com.thealgorithms.others.KochSnowflake$Vector2) $r12;
$d2 = $r13.<com.thealgorithms.others.KochSnowflake$Vector2: double x>;
i7 = (int) $d2;
$i8 = i10 + 1;
$r14 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>($i8);
$r15 = (com.thealgorithms.others.KochSnowflake$Vector2) $r14;
$d3 = $r15.<com.thealgorithms.others.KochSnowflake$Vector2: double y>;
i9 = (int) $d3;
virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i4, i5, i7, i9);
i10 = i10 + 1;
goto [?= $i2 = virtualinvoke r7.<java.util.ArrayList: int size()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();
$i3 = $i2 - 1;
if i10 >= $i3 goto return r1;
";
}
