digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = $i0 + 1"
    "$i2 = virtualinvoke r1.<java.lang.String: int length()>()"
    "$i3 = $i2 + 1"
    "r2 = newmultiarray (boolean)[$i1][$i3]"
    "$i4 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$r3 = r2[$i4]"
    "$i5 = virtualinvoke r1.<java.lang.String: int length()>()"
    "$r3[$i5] = 1"
    "i16 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i16 < 0 goto $r4 = r2[0]"
    "$i6 = virtualinvoke r1.<java.lang.String: int length()>()"
    "i17 = $i6 - 1"
    "if i17 < 0 goto i16 = i16 + -1"
    "$i7 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i16 != $i7 goto c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"
    "$c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)"
    "if $c14 != 42 goto $r8 = r2[i16]"
    "$r10 = r2[i16]"
    "$r9 = r2[i16]"
    "$i15 = i17 + 1"
    "$z3 = $r9[$i15]"
    "$r10[i17] = $z3"
    "goto [?= i17 = i17 + -1]"
    "$r8 = r2[i16]"
    "$r8[i17] = 0"
    "c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"
    "c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)"
    "if c8 == c9 goto $i10 = i16 + 1"
    "if c9 != 63 goto (branch)"
    "$i10 = i16 + 1"
    "$r5 = r2[$i10]"
    "$i11 = i17 + 1"
    "z4 = $r5[$i11]"
    "goto [?= $r11 = r2[i16]]"
    "if c9 != 42 goto z4 = 0"
    "$r6 = r2[i16]"
    "$i12 = i17 + 1"
    "z1 = $r6[$i12]"
    "$i13 = i16 + 1"
    "$r7 = r2[$i13]"
    "z2 = $r7[i17]"
    "if z1 != 0 goto $z5 = 1"
    "if z2 == 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= z4 = $z5]"
    "$z5 = 0"
    "z4 = $z5"
    "z4 = 0"
    "$r11 = r2[i16]"
    "$r11[i17] = z4"
    "i17 = i17 + -1"
    "goto [?= (branch)]"
    "i16 = i16 + -1"
    "$r4 = r2[0]"
    "$z0 = $r4[0]"
    "return $z0"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"$i2 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i2 = virtualinvoke r1.<java.lang.String: int length()>()"->"$i3 = $i2 + 1";
    "$i3 = $i2 + 1"->"r2 = newmultiarray (boolean)[$i1][$i3]";
    "r2 = newmultiarray (boolean)[$i1][$i3]"->"$i4 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i4 = virtualinvoke r0.<java.lang.String: int length()>()"->"$r3 = r2[$i4]";
    "$r3 = r2[$i4]"->"$i5 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i5 = virtualinvoke r1.<java.lang.String: int length()>()"->"$r3[$i5] = 1";
    "$r3[$i5] = 1"->"i16 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i16 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i16 < 0 goto $r4 = r2[0]";
    "if i16 < 0 goto $r4 = r2[0]"->"$i6 = virtualinvoke r1.<java.lang.String: int length()>()";
    "if i16 < 0 goto $r4 = r2[0]"->"$r4 = r2[0]";
    "$i6 = virtualinvoke r1.<java.lang.String: int length()>()"->"i17 = $i6 - 1";
    "i17 = $i6 - 1"->"if i17 < 0 goto i16 = i16 + -1";
    "if i17 < 0 goto i16 = i16 + -1"->"$i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if i17 < 0 goto i16 = i16 + -1"->"i16 = i16 + -1";
    "$i7 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i16 != $i7 goto c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)";
    "if i16 != $i7 goto c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"->"$c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)";
    "if i16 != $i7 goto c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"->"c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)";
    "$c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)"->"if $c14 != 42 goto $r8 = r2[i16]";
    "if $c14 != 42 goto $r8 = r2[i16]"->"$r10 = r2[i16]";
    "if $c14 != 42 goto $r8 = r2[i16]"->"$r8 = r2[i16]";
    "$r10 = r2[i16]"->"$r9 = r2[i16]";
    "$r9 = r2[i16]"->"$i15 = i17 + 1";
    "$i15 = i17 + 1"->"$z3 = $r9[$i15]";
    "$z3 = $r9[$i15]"->"$r10[i17] = $z3";
    "$r10[i17] = $z3"->"goto [?= i17 = i17 + -1]";
    "goto [?= i17 = i17 + -1]"->"i17 = i17 + -1";
    "$r8 = r2[i16]"->"$r8[i17] = 0";
    "$r8[i17] = 0"->"goto [?= i17 = i17 + -1]";
    "goto [?= i17 = i17 + -1]"->"i17 = i17 + -1";
    "c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"->"c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)";
    "c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17)"->"if c8 == c9 goto $i10 = i16 + 1";
    "if c8 == c9 goto $i10 = i16 + 1"->"if c9 != 63 goto (branch)";
    "if c8 == c9 goto $i10 = i16 + 1"->"$i10 = i16 + 1";
    "if c9 != 63 goto (branch)"->"$i10 = i16 + 1";
    "if c9 != 63 goto (branch)"->"if c9 != 42 goto z4 = 0";
    "$i10 = i16 + 1"->"$r5 = r2[$i10]";
    "$r5 = r2[$i10]"->"$i11 = i17 + 1";
    "$i11 = i17 + 1"->"z4 = $r5[$i11]";
    "z4 = $r5[$i11]"->"goto [?= $r11 = r2[i16]]";
    "goto [?= $r11 = r2[i16]]"->"$r11 = r2[i16]";
    "if c9 != 42 goto z4 = 0"->"$r6 = r2[i16]";
    "if c9 != 42 goto z4 = 0"->"z4 = 0";
    "$r6 = r2[i16]"->"$i12 = i17 + 1";
    "$i12 = i17 + 1"->"z1 = $r6[$i12]";
    "z1 = $r6[$i12]"->"$i13 = i16 + 1";
    "$i13 = i16 + 1"->"$r7 = r2[$i13]";
    "$r7 = r2[$i13]"->"z2 = $r7[i17]";
    "z2 = $r7[i17]"->"if z1 != 0 goto $z5 = 1";
    "if z1 != 0 goto $z5 = 1"->"if z2 == 0 goto $z5 = 0";
    "if z1 != 0 goto $z5 = 1"->"$z5 = 1";
    "if z2 == 0 goto $z5 = 0"->"$z5 = 1";
    "if z2 == 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= z4 = $z5]";
    "goto [?= z4 = $z5]"->"z4 = $z5";
    "$z5 = 0"->"z4 = $z5";
    "z4 = $z5"->"goto [?= $r11 = r2[i16]]";
    "goto [?= $r11 = r2[i16]]"->"$r11 = r2[i16]";
    "z4 = 0"->"$r11 = r2[i16]";
    "$r11 = r2[i16]"->"$r11[i17] = z4";
    "$r11[i17] = z4"->"i17 = i17 + -1";
    "i17 = i17 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 < 0 goto i16 = i16 + -1";
    "i16 = i16 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 < 0 goto $r4 = r2[0]";
    "$r4 = r2[0]"->"$z0 = $r4[0]";
    "$z0 = $r4[0]"->"return $z0";
}
