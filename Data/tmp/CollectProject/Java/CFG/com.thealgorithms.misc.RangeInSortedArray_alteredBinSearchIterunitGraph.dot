digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i2 := @parameter1: int"
    "i11 := @parameter2: int"
    "i12 := @parameter3: int"
    "r1 := @parameter4: int[]"
    "z0 := @parameter5: boolean"
    "if i11 > i12 goto return"
    "$i0 = i11 + i12"
    "i1 = $i0 / 2"
    "$i3 = r0[i1]"
    "if $i3 <= i2 goto $i4 = r0[i1]"
    "i12 = i1 - 1"
    "goto [?= (branch)]"
    "$i4 = r0[i1]"
    "if $i4 >= i2 goto (branch)"
    "i11 = i1 + 1"
    "if z0 == 0 goto $i5 = lengthof r0"
    "if i1 == 0 goto r1[0] = i1"
    "$i9 = i1 - 1"
    "$i10 = r0[$i9]"
    "if $i10 == i2 goto i12 = i1 - 1"
    "r1[0] = i1"
    "return"
    "$i5 = lengthof r0"
    "$i6 = $i5 - 1"
    "if i1 == $i6 goto r1[1] = i1"
    "$i7 = i1 + 1"
    "$i8 = r0[$i7]"
    "if $i8 == i2 goto i11 = i1 + 1"
    "r1[1] = i1"
    "r0 := @parameter0: int[]"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"i11 := @parameter2: int";
    "i11 := @parameter2: int"->"i12 := @parameter3: int";
    "i12 := @parameter3: int"->"r1 := @parameter4: int[]";
    "r1 := @parameter4: int[]"->"z0 := @parameter5: boolean";
    "z0 := @parameter5: boolean"->"if i11 > i12 goto return";
    "if i11 > i12 goto return"->"$i0 = i11 + i12";
    "if i11 > i12 goto return"->"return";
    "$i0 = i11 + i12"->"i1 = $i0 / 2";
    "i1 = $i0 / 2"->"$i3 = r0[i1]";
    "$i3 = r0[i1]"->"if $i3 <= i2 goto $i4 = r0[i1]";
    "if $i3 <= i2 goto $i4 = r0[i1]"->"i12 = i1 - 1";
    "if $i3 <= i2 goto $i4 = r0[i1]"->"$i4 = r0[i1]";
    "i12 = i1 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "$i4 = r0[i1]"->"if $i4 >= i2 goto (branch)";
    "if $i4 >= i2 goto (branch)"->"i11 = i1 + 1";
    "if $i4 >= i2 goto (branch)"->"if z0 == 0 goto $i5 = lengthof r0";
    "i11 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "if z0 == 0 goto $i5 = lengthof r0"->"if i1 == 0 goto r1[0] = i1";
    "if z0 == 0 goto $i5 = lengthof r0"->"$i5 = lengthof r0";
    "if i1 == 0 goto r1[0] = i1"->"$i9 = i1 - 1";
    "if i1 == 0 goto r1[0] = i1"->"r1[0] = i1";
    "$i9 = i1 - 1"->"$i10 = r0[$i9]";
    "$i10 = r0[$i9]"->"if $i10 == i2 goto i12 = i1 - 1";
    "if $i10 == i2 goto i12 = i1 - 1"->"r1[0] = i1";
    "if $i10 == i2 goto i12 = i1 - 1"->"i12 = i1 - 1";
    "r1[0] = i1"->"return";
    "i12 = i1 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "$i5 = lengthof r0"->"$i6 = $i5 - 1";
    "$i6 = $i5 - 1"->"if i1 == $i6 goto r1[1] = i1";
    "if i1 == $i6 goto r1[1] = i1"->"$i7 = i1 + 1";
    "if i1 == $i6 goto r1[1] = i1"->"r1[1] = i1";
    "$i7 = i1 + 1"->"$i8 = r0[$i7]";
    "$i8 = r0[$i7]"->"if $i8 == i2 goto i11 = i1 + 1";
    "if $i8 == i2 goto i11 = i1 + 1"->"r1[1] = i1";
    "if $i8 == i2 goto i11 = i1 + 1"->"i11 = i1 + 1";
    "r1[1] = i1"->"return";
    "i11 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 > i12 goto return";
}
