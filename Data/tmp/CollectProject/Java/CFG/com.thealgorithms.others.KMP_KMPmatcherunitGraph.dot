digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "r2 = staticinvoke <com.thealgorithms.others.KMP: int[] computePrefixFunction(java.lang.String)>(r1)"
    "i10 = 0"
    "i11 = 0"
    "if i11 >= i0 goto return"
    "if i10 <= 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"
    "$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"
    "$c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)"
    "if $c7 == $c8 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"
    "$i9 = i10 - 1"
    "i10 = r2[$i9]"
    "goto [?= (branch)]"
    "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"
    "$c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)"
    "if $c2 != $c3 goto (branch)"
    "i10 = i10 + 1"
    "if i10 != i1 goto i11 = i11 + 1"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Pattern starts: \")"
    "$i4 = i11 + 1"
    "$i5 = $i4 - i1"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "$i6 = i10 - 1"
    "i10 = r2[$i6]"
    "i11 = i11 + 1"
    "return"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"r2 = staticinvoke <com.thealgorithms.others.KMP: int[] computePrefixFunction(java.lang.String)>(r1)";
    "r2 = staticinvoke <com.thealgorithms.others.KMP: int[] computePrefixFunction(java.lang.String)>(r1)"->"i10 = 0";
    "i10 = 0"->"i11 = 0";
    "i11 = 0"->"if i11 >= i0 goto return";
    "if i11 >= i0 goto return"->"if i10 <= 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "if i11 >= i0 goto return"->"return";
    "if i10 <= 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "if i10 <= 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)";
    "$c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)"->"if $c7 == $c8 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "if $c7 == $c8 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$i9 = i10 - 1";
    "if $c7 == $c8 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "$i9 = i10 - 1"->"i10 = r2[$i9]";
    "i10 = r2[$i9]"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 <= 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)";
    "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11)"->"$c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)";
    "$c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10)"->"if $c2 != $c3 goto (branch)";
    "if $c2 != $c3 goto (branch)"->"i10 = i10 + 1";
    "if $c2 != $c3 goto (branch)"->"if i10 != i1 goto i11 = i11 + 1";
    "i10 = i10 + 1"->"if i10 != i1 goto i11 = i11 + 1";
    "if i10 != i1 goto i11 = i11 + 1"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if i10 != i1 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Pattern starts: \")";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Pattern starts: \")"->"$i4 = i11 + 1";
    "$i4 = i11 + 1"->"$i5 = $i4 - i1";
    "$i5 = $i4 - i1"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"$i6 = i10 - 1";
    "$i6 = i10 - 1"->"i10 = r2[$i6]";
    "i10 = r2[$i6]"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= i0 goto return";
}
