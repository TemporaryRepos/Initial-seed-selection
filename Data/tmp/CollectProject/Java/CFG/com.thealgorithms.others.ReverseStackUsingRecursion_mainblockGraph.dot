digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r11 := @parameter0: java.lang.String[];
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\");
i1 = 9;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1);
i1 = i1 + -1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1);
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \");
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6);
goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>];
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r11 := @parameter0: java.lang.String[];
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\");
i1 = 9;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\");
i1 = 9;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1);
i1 = i1 + -1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1);
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \");
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1);
i1 = i1 + -1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1);
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \");
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto return;
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto return;
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6);
goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto return;
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6);
goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>;
$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto return;
";
}
