digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "$i3 = i0 + 1"
    "$i2 = i1 + 1"
    "r0 = newmultiarray (int)[$i3][$i2]"
    "i13 = 1"
    "if i13 > i0 goto i14 = 1"
    "$r8 = r0[i13]"
    "$r8[0] = 0"
    "$r9 = r0[i13]"
    "$r9[1] = 1"
    "i13 = i13 + 1"
    "goto [?= (branch)]"
    "i14 = 1"
    "if i14 > i1 goto i15 = 2"
    "$r7 = r0[1]"
    "$r7[i14] = i14"
    "i14 = i14 + 1"
    "i15 = 2"
    "if i15 > i0 goto $r1 = r0[i0]"
    "i16 = 2"
    "if i16 > i1 goto i15 = i15 + 1"
    "$r2 = r0[i15]"
    "$r2[i16] = 2147483647"
    "i17 = 1"
    "if i17 > i16 goto i16 = i16 + 1"
    "$i5 = i15 - 1"
    "$r3 = r0[$i5]"
    "$i6 = i17 - 1"
    "$i9 = $r3[$i6]"
    "$r4 = r0[i15]"
    "$i7 = i16 - i17"
    "$i8 = $r4[$i7]"
    "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)"
    "i11 = 1 + $i10"
    "$r5 = r0[i15]"
    "$i12 = $r5[i16]"
    "if i11 >= $i12 goto i17 = i17 + 1"
    "$r6 = r0[i15]"
    "$r6[i16] = i11"
    "i17 = i17 + 1"
    "i16 = i16 + 1"
    "i15 = i15 + 1"
    "$r1 = r0[i0]"
    "$i4 = $r1[i1]"
    "return $i4"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"$i3 = i0 + 1";
    "$i3 = i0 + 1"->"$i2 = i1 + 1";
    "$i2 = i1 + 1"->"r0 = newmultiarray (int)[$i3][$i2]";
    "r0 = newmultiarray (int)[$i3][$i2]"->"i13 = 1";
    "i13 = 1"->"if i13 > i0 goto i14 = 1";
    "if i13 > i0 goto i14 = 1"->"$r8 = r0[i13]";
    "if i13 > i0 goto i14 = 1"->"i14 = 1";
    "$r8 = r0[i13]"->"$r8[0] = 0";
    "$r8[0] = 0"->"$r9 = r0[i13]";
    "$r9 = r0[i13]"->"$r9[1] = 1";
    "$r9[1] = 1"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 > i0 goto i14 = 1";
    "i14 = 1"->"if i14 > i1 goto i15 = 2";
    "if i14 > i1 goto i15 = 2"->"$r7 = r0[1]";
    "if i14 > i1 goto i15 = 2"->"i15 = 2";
    "$r7 = r0[1]"->"$r7[i14] = i14";
    "$r7[i14] = i14"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 > i1 goto i15 = 2";
    "i15 = 2"->"if i15 > i0 goto $r1 = r0[i0]";
    "if i15 > i0 goto $r1 = r0[i0]"->"i16 = 2";
    "if i15 > i0 goto $r1 = r0[i0]"->"$r1 = r0[i0]";
    "i16 = 2"->"if i16 > i1 goto i15 = i15 + 1";
    "if i16 > i1 goto i15 = i15 + 1"->"$r2 = r0[i15]";
    "if i16 > i1 goto i15 = i15 + 1"->"i15 = i15 + 1";
    "$r2 = r0[i15]"->"$r2[i16] = 2147483647";
    "$r2[i16] = 2147483647"->"i17 = 1";
    "i17 = 1"->"if i17 > i16 goto i16 = i16 + 1";
    "if i17 > i16 goto i16 = i16 + 1"->"$i5 = i15 - 1";
    "if i17 > i16 goto i16 = i16 + 1"->"i16 = i16 + 1";
    "$i5 = i15 - 1"->"$r3 = r0[$i5]";
    "$r3 = r0[$i5]"->"$i6 = i17 - 1";
    "$i6 = i17 - 1"->"$i9 = $r3[$i6]";
    "$i9 = $r3[$i6]"->"$r4 = r0[i15]";
    "$r4 = r0[i15]"->"$i7 = i16 - i17";
    "$i7 = i16 - i17"->"$i8 = $r4[$i7]";
    "$i8 = $r4[$i7]"->"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)";
    "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8)"->"i11 = 1 + $i10";
    "i11 = 1 + $i10"->"$r5 = r0[i15]";
    "$r5 = r0[i15]"->"$i12 = $r5[i16]";
    "$i12 = $r5[i16]"->"if i11 >= $i12 goto i17 = i17 + 1";
    "if i11 >= $i12 goto i17 = i17 + 1"->"$r6 = r0[i15]";
    "if i11 >= $i12 goto i17 = i17 + 1"->"i17 = i17 + 1";
    "$r6 = r0[i15]"->"$r6[i16] = i11";
    "$r6[i16] = i11"->"i17 = i17 + 1";
    "i17 = i17 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 > i16 goto i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 > i1 goto i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 > i0 goto $r1 = r0[i0]";
    "$r1 = r0[i0]"->"$i4 = $r1[i1]";
    "$i4 = $r1[i1]"->"return $i4";
}
