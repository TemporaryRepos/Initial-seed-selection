digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.maths.SimpsonIntegration;
specialinvoke $r0.<com.thealgorithms.maths.SimpsonIntegration: void <init>()>();
r1 = $r0;
b0 = 16;
d0 = 1.0;
d1 = 3.0;
$i1 = b0 % 2;
if $i1 == 0 goto $d3 = d1 - d0;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"N must be even number for Simpsons method. Aborted\");
staticinvoke <java.lang.System: void exit(int)>(1);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
$d3 = d1 - d0;
$d2 = (double) b0;
d4 = $d3 / $d2;
d5 = virtualinvoke r1.<com.thealgorithms.maths.SimpsonIntegration: double simpsonsMethod(int,double,double)>(b0, d4, d0);
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The integral is equal to: \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.maths.SimpsonIntegration;
specialinvoke $r0.<com.thealgorithms.maths.SimpsonIntegration: void <init>()>();
r1 = $r0;
b0 = 16;
d0 = 1.0;
d1 = 3.0;
$i1 = b0 % 2;
if $i1 == 0 goto $d3 = d1 - d0;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"N must be even number for Simpsons method. Aborted\");
staticinvoke <java.lang.System: void exit(int)>(1);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r8 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.maths.SimpsonIntegration;
specialinvoke $r0.<com.thealgorithms.maths.SimpsonIntegration: void <init>()>();
r1 = $r0;
b0 = 16;
d0 = 1.0;
d1 = 3.0;
$i1 = b0 % 2;
if $i1 == 0 goto $d3 = d1 - d0;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$d3 = d1 - d0;
$d2 = (double) b0;
d4 = $d3 / $d2;
d5 = virtualinvoke r1.<com.thealgorithms.maths.SimpsonIntegration: double simpsonsMethod(int,double,double)>(b0, d4, d0);
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The integral is equal to: \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"N must be even number for Simpsons method. Aborted\");
staticinvoke <java.lang.System: void exit(int)>(1);
"->"Block 2:
[preds: 0 1 ] [succs: ]
$d3 = d1 - d0;
$d2 = (double) b0;
d4 = $d3 / $d2;
d5 = virtualinvoke r1.<com.thealgorithms.maths.SimpsonIntegration: double simpsonsMethod(int,double,double)>(b0, d4, d0);
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The integral is equal to: \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
return;
";
}
