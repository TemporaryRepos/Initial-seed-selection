digraph "unitGraph" {
    "r0 := @parameter0: double[]"
    "r1 := @parameter1: double[]"
    "$d1 = r0[0]"
    "$d0 = r1[0]"
    "$d2 = $d1 - $d0"
    "$d3 = staticinvoke <java.lang.Math: double abs(double)>($d2)"
    "$b0 = $d3 cmpg 0.2"
    "if $b0 >= 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= z0 = $z3]"
    "$z3 = 0"
    "z0 = $z3"
    "$d5 = r0[1]"
    "$d4 = r1[1]"
    "$d6 = $d5 - $d4"
    "$d7 = staticinvoke <java.lang.Math: double abs(double)>($d6)"
    "$b1 = $d7 cmpg 0.002"
    "if $b1 >= 0 goto $z4 = 0"
    "$z4 = 1"
    "goto [?= z1 = $z4]"
    "$z4 = 0"
    "z1 = $z4"
    "$d9 = r0[2]"
    "$d8 = r1[2]"
    "$d10 = $d9 - $d8"
    "$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)"
    "$b2 = $d11 cmpg 0.002"
    "if $b2 >= 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= z2 = $z5]"
    "$z5 = 0"
    "z2 = $z5"
    "if z0 == 0 goto $z6 = 0"
    "if z1 == 0 goto $z6 = 0"
    "if z2 == 0 goto $z6 = 0"
    "$z6 = 1"
    "goto [?= return $z6]"
    "$z6 = 0"
    "return $z6"
    "r0 := @parameter0: double[]"->"r1 := @parameter1: double[]";
    "r1 := @parameter1: double[]"->"$d1 = r0[0]";
    "$d1 = r0[0]"->"$d0 = r1[0]";
    "$d0 = r1[0]"->"$d2 = $d1 - $d0";
    "$d2 = $d1 - $d0"->"$d3 = staticinvoke <java.lang.Math: double abs(double)>($d2)";
    "$d3 = staticinvoke <java.lang.Math: double abs(double)>($d2)"->"$b0 = $d3 cmpg 0.2";
    "$b0 = $d3 cmpg 0.2"->"if $b0 >= 0 goto $z3 = 0";
    "if $b0 >= 0 goto $z3 = 0"->"$z3 = 1";
    "if $b0 >= 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= z0 = $z3]";
    "goto [?= z0 = $z3]"->"z0 = $z3";
    "$z3 = 0"->"z0 = $z3";
    "z0 = $z3"->"$d5 = r0[1]";
    "$d5 = r0[1]"->"$d4 = r1[1]";
    "$d4 = r1[1]"->"$d6 = $d5 - $d4";
    "$d6 = $d5 - $d4"->"$d7 = staticinvoke <java.lang.Math: double abs(double)>($d6)";
    "$d7 = staticinvoke <java.lang.Math: double abs(double)>($d6)"->"$b1 = $d7 cmpg 0.002";
    "$b1 = $d7 cmpg 0.002"->"if $b1 >= 0 goto $z4 = 0";
    "if $b1 >= 0 goto $z4 = 0"->"$z4 = 1";
    "if $b1 >= 0 goto $z4 = 0"->"$z4 = 0";
    "$z4 = 1"->"goto [?= z1 = $z4]";
    "goto [?= z1 = $z4]"->"z1 = $z4";
    "$z4 = 0"->"z1 = $z4";
    "z1 = $z4"->"$d9 = r0[2]";
    "$d9 = r0[2]"->"$d8 = r1[2]";
    "$d8 = r1[2]"->"$d10 = $d9 - $d8";
    "$d10 = $d9 - $d8"->"$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)";
    "$d11 = staticinvoke <java.lang.Math: double abs(double)>($d10)"->"$b2 = $d11 cmpg 0.002";
    "$b2 = $d11 cmpg 0.002"->"if $b2 >= 0 goto $z5 = 0";
    "if $b2 >= 0 goto $z5 = 0"->"$z5 = 1";
    "if $b2 >= 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= z2 = $z5]";
    "goto [?= z2 = $z5]"->"z2 = $z5";
    "$z5 = 0"->"z2 = $z5";
    "z2 = $z5"->"if z0 == 0 goto $z6 = 0";
    "if z0 == 0 goto $z6 = 0"->"if z1 == 0 goto $z6 = 0";
    "if z0 == 0 goto $z6 = 0"->"$z6 = 0";
    "if z1 == 0 goto $z6 = 0"->"if z2 == 0 goto $z6 = 0";
    "if z1 == 0 goto $z6 = 0"->"$z6 = 0";
    "if z2 == 0 goto $z6 = 0"->"$z6 = 1";
    "if z2 == 0 goto $z6 = 0"->"$z6 = 0";
    "$z6 = 1"->"goto [?= return $z6]";
    "goto [?= return $z6]"->"return $z6";
    "$z6 = 0"->"return $z6";
}
