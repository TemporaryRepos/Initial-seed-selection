digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
if r0 != null goto $i0 = lengthof r0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return r0;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i0 = lengthof r0;
r1 = newarray (int)[$i0];
$r2 = new java.util.Stack;
specialinvoke $r2.<java.util.Stack: void <init>()>();
r3 = $r2;
i7 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$i1 = lengthof r0;
if i7 >= $i1 goto return r1;
"
    "Block 4:
[preds: 3 6 ] [succs: 5 7 ]
$z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r6 = virtualinvoke r3.<java.util.Stack: java.lang.Object peek()>();
$r7 = (java.lang.Integer) $r6;
$i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 >= $i3 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"
    "Block 6:
[preds: 5 ] [succs: 4 ]
$r8 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();
$r9 = (java.lang.Integer) $r8;
$i5 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
$i6 = r0[i7];
r1[$i5] = $i6;
goto [?= $z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>()];
"
    "Block 7:
[preds: 4 5 ] [succs: 3 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);
i7 = i7 + 1;
goto [?= $i1 = lengthof r0];
"
    "Block 8:
[preds: 3 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
if r0 != null goto $i0 = lengthof r0;
"->"Block 1:
[preds: 0 ] [succs: ]
return r0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
if r0 != null goto $i0 = lengthof r0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i0 = lengthof r0;
r1 = newarray (int)[$i0];
$r2 = new java.util.Stack;
specialinvoke $r2.<java.util.Stack: void <init>()>();
r3 = $r2;
i7 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i0 = lengthof r0;
r1 = newarray (int)[$i0];
$r2 = new java.util.Stack;
specialinvoke $r2.<java.util.Stack: void <init>()>();
r3 = $r2;
i7 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$i1 = lengthof r0;
if i7 >= $i1 goto return r1;
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$i1 = lengthof r0;
if i7 >= $i1 goto return r1;
"->"Block 4:
[preds: 3 6 ] [succs: 5 7 ]
$z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$i1 = lengthof r0;
if i7 >= $i1 goto return r1;
"->"Block 8:
[preds: 3 ] [succs: ]
return r1;
";
    "Block 4:
[preds: 3 6 ] [succs: 5 7 ]
$z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$r6 = virtualinvoke r3.<java.util.Stack: java.lang.Object peek()>();
$r7 = (java.lang.Integer) $r6;
$i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 >= $i3 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
";
    "Block 4:
[preds: 3 6 ] [succs: 5 7 ]
$z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"->"Block 7:
[preds: 4 5 ] [succs: 3 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);
i7 = i7 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r6 = virtualinvoke r3.<java.util.Stack: java.lang.Object peek()>();
$r7 = (java.lang.Integer) $r6;
$i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 >= $i3 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"->"Block 6:
[preds: 5 ] [succs: 4 ]
$r8 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();
$r9 = (java.lang.Integer) $r8;
$i5 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
$i6 = r0[i7];
r1[$i5] = $i6;
goto [?= $z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>()];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r6 = virtualinvoke r3.<java.util.Stack: java.lang.Object peek()>();
$r7 = (java.lang.Integer) $r6;
$i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
$i4 = r0[$i2];
$i3 = r0[i7];
if $i4 >= $i3 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
"->"Block 7:
[preds: 4 5 ] [succs: 3 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);
i7 = i7 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 6:
[preds: 5 ] [succs: 4 ]
$r8 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();
$r9 = (java.lang.Integer) $r8;
$i5 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
$i6 = r0[i7];
r1[$i5] = $i6;
goto [?= $z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>()];
"->"Block 4:
[preds: 3 6 ] [succs: 5 7 ]
$z0 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
";
    "Block 7:
[preds: 4 5 ] [succs: 3 ]
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);
i7 = i7 + 1;
goto [?= $i1 = lengthof r0];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$i1 = lengthof r0;
if i7 >= $i1 goto return r1;
";
}
