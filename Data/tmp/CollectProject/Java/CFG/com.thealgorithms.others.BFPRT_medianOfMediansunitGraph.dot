digraph "unitGraph" {
    "r1 := @parameter0: int[]"
    "i1 := @parameter1: int"
    "i0 := @parameter2: int"
    "$i2 = i0 - i1"
    "i3 = $i2 + 1"
    "$i4 = i3 % 5"
    "if $i4 != 0 goto $b20 = 1"
    "$b20 = 0"
    "goto [?= b5 = $b20]"
    "$b20 = 1"
    "b5 = $b20"
    "$i6 = i3 / 5"
    "$i7 = $i6 + b5"
    "r0 = newarray (int)[$i7]"
    "i21 = 0"
    "$i22 = lengthof r0"
    "if i21 >= $i22 goto $i8 = lengthof r0"
    "$i13 = i21 * 5"
    "$i17 = i1 + $i13"
    "$i14 = i21 * 5"
    "$i15 = i1 + $i14"
    "$i16 = $i15 + 4"
    "$i18 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i16)"
    "$i19 = staticinvoke <com.thealgorithms.others.BFPRT: int getMedian(int[],int,int)>(r1, $i17, $i18)"
    "r0[i21] = $i19"
    "i21 = i21 + 1"
    "goto [?= $i22 = lengthof r0]"
    "$i8 = lengthof r0"
    "$i11 = $i8 - 1"
    "$i9 = lengthof r0"
    "$i10 = $i9 / 2"
    "$i12 = staticinvoke <com.thealgorithms.others.BFPRT: int bfprt(int[],int,int,int)>(r0, 0, $i11, $i10)"
    "return $i12"
    "r1 := @parameter0: int[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"$i2 = i0 - i1";
    "$i2 = i0 - i1"->"i3 = $i2 + 1";
    "i3 = $i2 + 1"->"$i4 = i3 % 5";
    "$i4 = i3 % 5"->"if $i4 != 0 goto $b20 = 1";
    "if $i4 != 0 goto $b20 = 1"->"$b20 = 0";
    "if $i4 != 0 goto $b20 = 1"->"$b20 = 1";
    "$b20 = 0"->"goto [?= b5 = $b20]";
    "goto [?= b5 = $b20]"->"b5 = $b20";
    "$b20 = 1"->"b5 = $b20";
    "b5 = $b20"->"$i6 = i3 / 5";
    "$i6 = i3 / 5"->"$i7 = $i6 + b5";
    "$i7 = $i6 + b5"->"r0 = newarray (int)[$i7]";
    "r0 = newarray (int)[$i7]"->"i21 = 0";
    "i21 = 0"->"$i22 = lengthof r0";
    "$i22 = lengthof r0"->"if i21 >= $i22 goto $i8 = lengthof r0";
    "if i21 >= $i22 goto $i8 = lengthof r0"->"$i13 = i21 * 5";
    "if i21 >= $i22 goto $i8 = lengthof r0"->"$i8 = lengthof r0";
    "$i13 = i21 * 5"->"$i17 = i1 + $i13";
    "$i17 = i1 + $i13"->"$i14 = i21 * 5";
    "$i14 = i21 * 5"->"$i15 = i1 + $i14";
    "$i15 = i1 + $i14"->"$i16 = $i15 + 4";
    "$i16 = $i15 + 4"->"$i18 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i16)";
    "$i18 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i16)"->"$i19 = staticinvoke <com.thealgorithms.others.BFPRT: int getMedian(int[],int,int)>(r1, $i17, $i18)";
    "$i19 = staticinvoke <com.thealgorithms.others.BFPRT: int getMedian(int[],int,int)>(r1, $i17, $i18)"->"r0[i21] = $i19";
    "r0[i21] = $i19"->"i21 = i21 + 1";
    "i21 = i21 + 1"->"goto [?= $i22 = lengthof r0]";
    "goto [?= $i22 = lengthof r0]"->"$i22 = lengthof r0";
    "$i8 = lengthof r0"->"$i11 = $i8 - 1";
    "$i11 = $i8 - 1"->"$i9 = lengthof r0";
    "$i9 = lengthof r0"->"$i10 = $i9 / 2";
    "$i10 = $i9 / 2"->"$i12 = staticinvoke <com.thealgorithms.others.BFPRT: int bfprt(int[],int,int,int)>(r0, 0, $i11, $i10)";
    "$i12 = staticinvoke <com.thealgorithms.others.BFPRT: int bfprt(int[],int,int,int)>(r0, 0, $i11, $i10)"->"return $i12";
}
