digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r1 := @parameter1: java.math.BigDecimal[][]"
    "i2 := @parameter2: int"
    "r2 := @parameter3: java.math.BigDecimal[][]"
    "r3 := @parameter4: java.math.BigDecimal[][]"
    "i1 := @parameter5: int"
    "$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)"
    "$r4 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_3__96: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,int,java.math.BigDecimal[][],java.math.BigDecimal[][])>(r1, i1, i2, r2, r3)"
    "interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r4)"
    "return"
    "i0 := @parameter0: int"->"r1 := @parameter1: java.math.BigDecimal[][]";
    "r1 := @parameter1: java.math.BigDecimal[][]"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"r2 := @parameter3: java.math.BigDecimal[][]";
    "r2 := @parameter3: java.math.BigDecimal[][]"->"r3 := @parameter4: java.math.BigDecimal[][]";
    "r3 := @parameter4: java.math.BigDecimal[][]"->"i1 := @parameter5: int";
    "i1 := @parameter5: int"->"$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)";
    "$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)"->"$r4 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_3__96: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,int,java.math.BigDecimal[][],java.math.BigDecimal[][])>(r1, i1, i2, r2, r3)";
    "$r4 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_3__96: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,int,java.math.BigDecimal[][],java.math.BigDecimal[][])>(r1, i1, i2, r2, r3)"->"interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r4)";
    "interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r4)"->"return";
}
