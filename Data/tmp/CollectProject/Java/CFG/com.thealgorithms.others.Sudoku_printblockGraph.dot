digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: int[][];
i0 := @parameter1: int;
i5 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i5 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i6 >= i0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = r2[i5];
$i4 = $r3[i6];
virtualinvoke $r4.<java.io.PrintStream: void print(int)>($i4);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\" \");
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"\n\");
$i1 = i5 + 1;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$i2 = (int) $d1;
$i3 = $i1 % $i2;
if $i3 != 0 goto i5 = i5 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(\"\");
"
    "Block 7:
[preds: 5 6 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: int[][];
i0 := @parameter1: int;
i5 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i5 >= i0 goto return;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i5 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i5 >= i0 goto return;
"->"Block 8:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i6 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i6 >= i0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i6 >= i0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = r2[i5];
$i4 = $r3[i6];
virtualinvoke $r4.<java.io.PrintStream: void print(int)>($i4);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\" \");
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i6 >= i0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"\n\");
$i1 = i5 + 1;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$i2 = (int) $d1;
$i3 = $i1 % $i2;
if $i3 != 0 goto i5 = i5 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = r2[i5];
$i4 = $r3[i6];
virtualinvoke $r4.<java.io.PrintStream: void print(int)>($i4);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\" \");
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i6 >= i0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"\n\");
$i1 = i5 + 1;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$i2 = (int) $d1;
$i3 = $i1 % $i2;
if $i3 != 0 goto i5 = i5 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(\"\");
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"\n\");
$i1 = i5 + 1;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$i2 = (int) $d1;
$i3 = $i1 % $i2;
if $i3 != 0 goto i5 = i5 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(\"\");
"->"Block 7:
[preds: 5 6 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 6 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i5 >= i0 goto return;
";
}
