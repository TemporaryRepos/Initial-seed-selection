digraph "unitGraph" {
    "r3 := @this: com.thealgorithms.datastructures.graphs.PrimMST"
    "r4 := @parameter0: int[][]"
    "r0 = newarray (int)[5]"
    "r1 = newarray (int)[5]"
    "r2 = newarray (java.lang.Boolean)[5]"
    "i5 = 0"
    "if i5 >= 5 goto r1[0] = 0"
    "r1[i5] = 2147483647"
    "$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)"
    "r2[i5] = $r10"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "r1[0] = 0"
    "r0[0] = -1"
    "i6 = 0"
    "if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)"
    "i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2)"
    "$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)"
    "r2[i0] = $r5"
    "i7 = 0"
    "if i7 >= 5 goto i6 = i6 + 1"
    "$r6 = r4[i0]"
    "$i1 = $r6[i7]"
    "if $i1 == 0 goto i7 = i7 + 1"
    "$r7 = r2[i7]"
    "$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>()"
    "if $z0 != 0 goto i7 = i7 + 1"
    "$r8 = r4[i0]"
    "$i3 = $r8[i7]"
    "$i2 = r1[i7]"
    "if $i3 >= $i2 goto i7 = i7 + 1"
    "r0[i7] = i0"
    "$r9 = r4[i0]"
    "$i4 = $r9[i7]"
    "r1[i7] = $i4"
    "i7 = i7 + 1"
    "i6 = i6 + 1"
    "virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)"
    "return"
    "r3 := @this: com.thealgorithms.datastructures.graphs.PrimMST"->"r4 := @parameter0: int[][]";
    "r4 := @parameter0: int[][]"->"r0 = newarray (int)[5]";
    "r0 = newarray (int)[5]"->"r1 = newarray (int)[5]";
    "r1 = newarray (int)[5]"->"r2 = newarray (java.lang.Boolean)[5]";
    "r2 = newarray (java.lang.Boolean)[5]"->"i5 = 0";
    "i5 = 0"->"if i5 >= 5 goto r1[0] = 0";
    "if i5 >= 5 goto r1[0] = 0"->"r1[i5] = 2147483647";
    "if i5 >= 5 goto r1[0] = 0"->"r1[0] = 0";
    "r1[i5] = 2147483647"->"$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)";
    "$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)"->"r2[i5] = $r10";
    "r2[i5] = $r10"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= 5 goto r1[0] = 0";
    "r1[0] = 0"->"r0[0] = -1";
    "r0[0] = -1"->"i6 = 0";
    "i6 = 0"->"if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)";
    "if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)"->"i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2)";
    "if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)"->"virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)";
    "i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2)"->"$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)";
    "$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)"->"r2[i0] = $r5";
    "r2[i0] = $r5"->"i7 = 0";
    "i7 = 0"->"if i7 >= 5 goto i6 = i6 + 1";
    "if i7 >= 5 goto i6 = i6 + 1"->"$r6 = r4[i0]";
    "if i7 >= 5 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r6 = r4[i0]"->"$i1 = $r6[i7]";
    "$i1 = $r6[i7]"->"if $i1 == 0 goto i7 = i7 + 1";
    "if $i1 == 0 goto i7 = i7 + 1"->"$r7 = r2[i7]";
    "if $i1 == 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r7 = r2[i7]"->"$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>()";
    "$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>()"->"if $z0 != 0 goto i7 = i7 + 1";
    "if $z0 != 0 goto i7 = i7 + 1"->"$r8 = r4[i0]";
    "if $z0 != 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r8 = r4[i0]"->"$i3 = $r8[i7]";
    "$i3 = $r8[i7]"->"$i2 = r1[i7]";
    "$i2 = r1[i7]"->"if $i3 >= $i2 goto i7 = i7 + 1";
    "if $i3 >= $i2 goto i7 = i7 + 1"->"r0[i7] = i0";
    "if $i3 >= $i2 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "r0[i7] = i0"->"$r9 = r4[i0]";
    "$r9 = r4[i0]"->"$i4 = $r9[i7]";
    "$i4 = $r9[i7]"->"r1[i7] = $i4";
    "r1[i7] = $i4"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= 5 goto i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)";
    "virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4)"->"return";
}
