digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if $i0 >= 3 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
$z0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c1);
if $z0 == 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
"
    "Block 3:
[preds: 2 ] [succs: ]
return 0;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c2);
if $z1 == 0 goto i7 = 0;
"
    "Block 5:
[preds: 4 ] [succs: ]
return 0;
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
i7 = 0;
i8 = 0;
i9 = 0;
"
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i9 >= $i3 goto $i4 = i8 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c5);
if $z2 == 0 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 16 ]
i8 = i8 + 1;
if i8 < i7 goto i9 = i9 + 1;
"
    "Block 10:
[preds: 9 ] [succs: ]
return 0;
"
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
if i8 != 0 goto $i6 = i8 + 1;
"
    "Block 12:
[preds: 11 ] [succs: 16 ]
i7 = i7 + 1;
goto [?= i9 = i9 + 1];
"
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$i6 = i8 + 1;
if i7 == $i6 goto i7 = 2;
"
    "Block 14:
[preds: 13 ] [succs: ]
return 0;
"
    "Block 15:
[preds: 13 ] [succs: 16 ]
i7 = 2;
i8 = 0;
"
    "Block 16:
[preds: 9 12 15 ] [succs: 7 ]
i9 = i9 + 1;
goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()];
"
    "Block 17:
[preds: 7 ] [succs: 18 19 ]
$i4 = i8 + 1;
if i7 != $i4 goto $z3 = 0;
"
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z3 = 1;
goto [?= return $z3];
"
    "Block 19:
[preds: 17 ] [succs: 20 ]
$z3 = 0;
"
    "Block 20:
[preds: 18 19 ] [succs: ]
return $z3;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if $i0 >= 3 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if $i0 >= 3 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
$z0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c1);
if $z0 == 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
$z0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c1);
if $z0 == 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
"->"Block 3:
[preds: 2 ] [succs: ]
return 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
$z0 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c1);
if $z0 == 0 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c2);
if $z1 == 0 goto i7 = 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c2);
if $z1 == 0 goto i7 = 0;
"->"Block 5:
[preds: 4 ] [succs: ]
return 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>($c2);
if $z1 == 0 goto i7 = 0;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
i7 = 0;
i8 = 0;
i9 = 0;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
i7 = 0;
i8 = 0;
i9 = 0;
"->"Block 7:
[preds: 6 16 ] [succs: 8 17 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i9 >= $i3 goto $i4 = i8 + 1;
";
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i9 >= $i3 goto $i4 = i8 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 11 ]
c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c5);
if $z2 == 0 goto (branch);
";
    "Block 7:
[preds: 6 16 ] [succs: 8 17 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i9 >= $i3 goto $i4 = i8 + 1;
"->"Block 17:
[preds: 7 ] [succs: 18 19 ]
$i4 = i8 + 1;
if i7 != $i4 goto $z3 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c5);
if $z2 == 0 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 16 ]
i8 = i8 + 1;
if i8 < i7 goto i9 = i9 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c5);
if $z2 == 0 goto (branch);
"->"Block 11:
[preds: 8 ] [succs: 12 13 ]
if i8 != 0 goto $i6 = i8 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 16 ]
i8 = i8 + 1;
if i8 < i7 goto i9 = i9 + 1;
"->"Block 10:
[preds: 9 ] [succs: ]
return 0;
";
    "Block 9:
[preds: 8 ] [succs: 10 16 ]
i8 = i8 + 1;
if i8 < i7 goto i9 = i9 + 1;
"->"Block 16:
[preds: 9 12 15 ] [succs: 7 ]
i9 = i9 + 1;
goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
if i8 != 0 goto $i6 = i8 + 1;
"->"Block 12:
[preds: 11 ] [succs: 16 ]
i7 = i7 + 1;
goto [?= i9 = i9 + 1];
";
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
if i8 != 0 goto $i6 = i8 + 1;
"->"Block 13:
[preds: 11 ] [succs: 14 15 ]
$i6 = i8 + 1;
if i7 == $i6 goto i7 = 2;
";
    "Block 12:
[preds: 11 ] [succs: 16 ]
i7 = i7 + 1;
goto [?= i9 = i9 + 1];
"->"Block 16:
[preds: 9 12 15 ] [succs: 7 ]
i9 = i9 + 1;
goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$i6 = i8 + 1;
if i7 == $i6 goto i7 = 2;
"->"Block 14:
[preds: 13 ] [succs: ]
return 0;
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$i6 = i8 + 1;
if i7 == $i6 goto i7 = 2;
"->"Block 15:
[preds: 13 ] [succs: 16 ]
i7 = 2;
i8 = 0;
";
    "Block 15:
[preds: 13 ] [succs: 16 ]
i7 = 2;
i8 = 0;
"->"Block 16:
[preds: 9 12 15 ] [succs: 7 ]
i9 = i9 + 1;
goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 16:
[preds: 9 12 15 ] [succs: 7 ]
i9 = i9 + 1;
goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()];
"->"Block 7:
[preds: 6 16 ] [succs: 8 17 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i9 >= $i3 goto $i4 = i8 + 1;
";
    "Block 17:
[preds: 7 ] [succs: 18 19 ]
$i4 = i8 + 1;
if i7 != $i4 goto $z3 = 0;
"->"Block 18:
[preds: 17 ] [succs: 20 ]
$z3 = 1;
goto [?= return $z3];
";
    "Block 17:
[preds: 7 ] [succs: 18 19 ]
$i4 = i8 + 1;
if i7 != $i4 goto $z3 = 0;
"->"Block 19:
[preds: 17 ] [succs: 20 ]
$z3 = 0;
";
    "Block 18:
[preds: 17 ] [succs: 20 ]
$z3 = 1;
goto [?= return $z3];
"->"Block 20:
[preds: 18 19 ] [succs: ]
return $z3;
";
    "Block 19:
[preds: 17 ] [succs: 20 ]
$z3 = 0;
"->"Block 20:
[preds: 18 19 ] [succs: ]
return $z3;
";
}
