digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.sorts.SwapSort;
r0 := @parameter0: java.lang.Comparable[];
i1 := @parameter1: int;
i2 = 0;
i3 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i3 >= $i0 goto return i2;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i3];
$r1 = r0[i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i3 = i3 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
i2 = i2 + 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 5:
[preds: 1 ] [succs: ]
return i2;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.sorts.SwapSort;
r0 := @parameter0: java.lang.Comparable[];
i1 := @parameter1: int;
i2 = 0;
i3 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i3 >= $i0 goto return i2;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i3 >= $i0 goto return i2;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i3];
$r1 = r0[i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i3 = i3 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i3 >= $i0 goto return i2;
"->"Block 5:
[preds: 1 ] [succs: ]
return i2;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i3];
$r1 = r0[i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i3 = i3 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
i2 = i2 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i3];
$r1 = r0[i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i3 = i3 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
i2 = i2 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i3 >= $i0 goto return i2;
";
}
