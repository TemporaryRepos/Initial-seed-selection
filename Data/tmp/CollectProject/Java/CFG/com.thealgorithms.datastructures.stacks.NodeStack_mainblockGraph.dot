digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r24 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.stacks.NodeStack;
specialinvoke $r0.<com.thealgorithms.datastructures.stacks.NodeStack: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void push(java.lang.Object)>($r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void push(java.lang.Object)>($r3);
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void push(java.lang.Object)>($r4);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Testing :\");
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void print()>();
$r6 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: java.lang.Object pop()>();
r7 = (java.lang.Integer) $r6;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void push(java.lang.Object)>($r8);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void push(java.lang.Object)>($r9);
$r10 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: java.lang.Object peek()>();
r11 = (java.lang.Integer) $r10;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Testing :\");
virtualinvoke r1.<com.thealgorithms.datastructures.stacks.NodeStack: void print()>();
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Testing :\");
$r15 = <java.lang.System: java.io.PrintStream out>;
$r14 = new java.lang.StringBuilder;
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"x : \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);
$r20 = <java.lang.System: java.io.PrintStream out>;
$r19 = new java.lang.StringBuilder;
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"y : \");
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);
return;
"
}
