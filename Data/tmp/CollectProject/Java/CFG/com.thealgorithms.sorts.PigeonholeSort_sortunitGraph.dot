digraph "unitGraph" {
    "r12 := @this: com.thealgorithms.sorts.PigeonholeSort"
    "r0 := @parameter0: java.lang.Integer[]"
    "$r1 = r0[0]"
    "i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()"
    "r13 = r0"
    "i2 = lengthof r13"
    "i3 = 0"
    "if i3 >= i2 goto i5 = 1 + i1"
    "$r11 = r13[i3]"
    "i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"
    "if i4 <= i1 goto i3 = i3 + 1"
    "i1 = i4"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "i5 = 1 + i1"
    "r14 = newarray (java.util.ArrayList)[i5]"
    "i6 = 0"
    "if i6 >= i5 goto r15 = r0"
    "$r10 = new java.util.ArrayList"
    "specialinvoke $r10.<java.util.ArrayList: void <init>()>()"
    "r14[i6] = $r10"
    "i6 = i6 + 1"
    "r15 = r0"
    "i7 = lengthof r15"
    "i8 = 0"
    "if i8 >= i7 goto i10 = 0"
    "$r7 = r15[i8]"
    "i9 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"
    "$r8 = r14[i9]"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9)"
    "virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)"
    "i8 = i8 + 1"
    "i10 = 0"
    "r16 = r14"
    "i11 = lengthof r16"
    "i12 = 0"
    "if i12 >= i11 goto return"
    "r2 = r16[i12]"
    "r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto i12 = i12 + 1"
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "$r5 = (java.lang.Integer) $r4"
    "i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "r0[i10] = $r6"
    "i10 = i10 + 1"
    "goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"
    "i12 = i12 + 1"
    "return"
    "r12 := @this: com.thealgorithms.sorts.PigeonholeSort"->"r0 := @parameter0: java.lang.Integer[]";
    "r0 := @parameter0: java.lang.Integer[]"->"$r1 = r0[0]";
    "$r1 = r0[0]"->"i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()";
    "i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()"->"r13 = r0";
    "r13 = r0"->"i2 = lengthof r13";
    "i2 = lengthof r13"->"i3 = 0";
    "i3 = 0"->"if i3 >= i2 goto i5 = 1 + i1";
    "if i3 >= i2 goto i5 = 1 + i1"->"$r11 = r13[i3]";
    "if i3 >= i2 goto i5 = 1 + i1"->"i5 = 1 + i1";
    "$r11 = r13[i3]"->"i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()";
    "i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"->"if i4 <= i1 goto i3 = i3 + 1";
    "if i4 <= i1 goto i3 = i3 + 1"->"i1 = i4";
    "if i4 <= i1 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i1 = i4"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i2 goto i5 = 1 + i1";
    "i5 = 1 + i1"->"r14 = newarray (java.util.ArrayList)[i5]";
    "r14 = newarray (java.util.ArrayList)[i5]"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto r15 = r0";
    "if i6 >= i5 goto r15 = r0"->"$r10 = new java.util.ArrayList";
    "if i6 >= i5 goto r15 = r0"->"r15 = r0";
    "$r10 = new java.util.ArrayList"->"specialinvoke $r10.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r10.<java.util.ArrayList: void <init>()>()"->"r14[i6] = $r10";
    "r14[i6] = $r10"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto r15 = r0";
    "r15 = r0"->"i7 = lengthof r15";
    "i7 = lengthof r15"->"i8 = 0";
    "i8 = 0"->"if i8 >= i7 goto i10 = 0";
    "if i8 >= i7 goto i10 = 0"->"$r7 = r15[i8]";
    "if i8 >= i7 goto i10 = 0"->"i10 = 0";
    "$r7 = r15[i8]"->"i9 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()";
    "i9 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"->"$r8 = r14[i9]";
    "$r8 = r14[i9]"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9)"->"virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)";
    "virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= i7 goto i10 = 0";
    "i10 = 0"->"r16 = r14";
    "r16 = r14"->"i11 = lengthof r16";
    "i11 = lengthof r16"->"i12 = 0";
    "i12 = 0"->"if i12 >= i11 goto return";
    "if i12 >= i11 goto return"->"r2 = r16[i12]";
    "if i12 >= i11 goto return"->"return";
    "r2 = r16[i12]"->"r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>()";
    "r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto i12 = i12 + 1";
    "if $z0 == 0 goto i12 = i12 + 1"->"$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"$r5 = (java.lang.Integer) $r4";
    "$r5 = (java.lang.Integer) $r4"->"i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()";
    "i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"r0[i10] = $r6";
    "r0[i10] = $r6"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "i12 = i12 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i11 goto return";
}
