digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = newarray (int)[9]"
    "$r0[0] = 0"
    "$r0[1] = 12"
    "$r0[2] = 123"
    "$r0[3] = 1234"
    "$r0[4] = -12345"
    "$r0[5] = 123456"
    "$r0[6] = 1234567"
    "$r0[7] = 12345678"
    "$r0[8] = 123456789"
    "r1 = $r0"
    "i13 = 0"
    "$i0 = lengthof r1"
    "if i13 >= $i0 goto return"
    "$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$i10 = r1[i13]"
    "$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10)"
    "$i12 = i13 + 1"
    "if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"
    "throw $r5"
    "$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$i7 = r1[i13]"
    "$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7)"
    "$i9 = i13 + 1"
    "if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$r4 = new java.lang.AssertionError"
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"
    "throw $r4"
    "$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$i4 = r1[i13]"
    "$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4)"
    "$i6 = i13 + 1"
    "if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"
    "throw $r3"
    "$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"
    "if $z3 != 0 goto i13 = i13 + 1"
    "$i1 = r1[i13]"
    "$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1)"
    "$i3 = i13 + 1"
    "if $i2 == $i3 goto i13 = i13 + 1"
    "$r2 = new java.lang.AssertionError"
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"
    "throw $r2"
    "i13 = i13 + 1"
    "goto [?= $i0 = lengthof r1]"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = newarray (int)[9]";
    "$r0 = newarray (int)[9]"->"$r0[0] = 0";
    "$r0[0] = 0"->"$r0[1] = 12";
    "$r0[1] = 12"->"$r0[2] = 123";
    "$r0[2] = 123"->"$r0[3] = 1234";
    "$r0[3] = 1234"->"$r0[4] = -12345";
    "$r0[4] = -12345"->"$r0[5] = 123456";
    "$r0[5] = 123456"->"$r0[6] = 1234567";
    "$r0[6] = 1234567"->"$r0[7] = 12345678";
    "$r0[7] = 12345678"->"$r0[8] = 123456789";
    "$r0[8] = 123456789"->"r1 = $r0";
    "r1 = $r0"->"i13 = 0";
    "i13 = 0"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if i13 >= $i0 goto return";
    "if i13 >= $i0 goto return"->"$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if i13 >= $i0 goto return"->"return";
    "$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$i10 = r1[i13]";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$i10 = r1[i13]"->"$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10)";
    "$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10)"->"$i12 = i13 + 1";
    "$i12 = i13 + 1"->"if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$r5 = new java.lang.AssertionError";
    "if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"->"throw $r5";
    "$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$i7 = r1[i13]";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$i7 = r1[i13]"->"$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7)";
    "$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7)"->"$i9 = i13 + 1";
    "$i9 = i13 + 1"->"if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$r4 = new java.lang.AssertionError";
    "if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$r4 = new java.lang.AssertionError"->"specialinvoke $r4.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"->"throw $r4";
    "$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$i4 = r1[i13]";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$i4 = r1[i13]"->"$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4)";
    "$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4)"->"$i6 = i13 + 1";
    "$i6 = i13 + 1"->"if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$r3 = new java.lang.AssertionError";
    "if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"->"throw $r3";
    "$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>"->"if $z3 != 0 goto i13 = i13 + 1";
    "if $z3 != 0 goto i13 = i13 + 1"->"$i1 = r1[i13]";
    "if $z3 != 0 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$i1 = r1[i13]"->"$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1)";
    "$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1)"->"$i3 = i13 + 1";
    "$i3 = i13 + 1"->"if $i2 == $i3 goto i13 = i13 + 1";
    "if $i2 == $i3 goto i13 = i13 + 1"->"$r2 = new java.lang.AssertionError";
    "if $i2 == $i3 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$r2 = new java.lang.AssertionError"->"specialinvoke $r2.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"throw $r2";
    "i13 = i13 + 1"->"goto [?= $i0 = lengthof r1]";
    "goto [?= $i0 = lengthof r1]"->"$i0 = lengthof r1";
}
