digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r21 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.searches.JumpSearch;
specialinvoke $r0.<com.thealgorithms.searches.JumpSearch: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.Integer)[11];
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r2[0] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r2[1] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r2[2] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r2[3] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r2[4] = $r7;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r2[5] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r2[6] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
$r2[7] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r2[8] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r2[9] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
$r2[10] = $r13;
r14 = $r2;
i4 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z2 != 0 goto i4 = i4 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19);
if $i3 == i4 goto i4 = i4 + 1;
"
    "Block 4:
[preds: 3 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>()>();
throw $r20;
"
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r14];
"
    "Block 6:
[preds: 1 ] [succs: 7 9 ]
$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17);
if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r18 = new java.lang.AssertionError;
specialinvoke $r18.<java.lang.AssertionError: void <init>()>();
throw $r18;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z1 != 0 goto return;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);
$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15);
if $i1 == -1 goto return;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r16 = new java.lang.AssertionError;
specialinvoke $r16.<java.lang.AssertionError: void <init>()>();
throw $r16;
"
    "Block 12:
[preds: 9 10 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r21 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.searches.JumpSearch;
specialinvoke $r0.<com.thealgorithms.searches.JumpSearch: void <init>()>();
r1 = $r0;
$r2 = newarray (java.lang.Integer)[11];
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r2[0] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r2[1] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r2[2] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r2[3] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r2[4] = $r7;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r2[5] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r2[6] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
$r2[7] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r2[8] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r2[9] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
$r2[10] = $r13;
r14 = $r2;
i4 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z2 != 0 goto i4 = i4 + 1;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 1 ] [succs: 7 9 ]
$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z2 != 0 goto i4 = i4 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19);
if $i3 == i4 goto i4 = i4 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z2 != 0 goto i4 = i4 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r14];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19);
if $i3 == i4 goto i4 = i4 + 1;
"->"Block 4:
[preds: 3 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>()>();
throw $r20;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19);
if $i3 == i4 goto i4 = i4 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r14];
";
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r14];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 1 ] [succs: 7 9 ]
$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17);
if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 1 ] [succs: 7 9 ]
$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z1 != 0 goto return;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17);
if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 8:
[preds: 7 ] [succs: ]
$r18 = new java.lang.AssertionError;
specialinvoke $r18.<java.lang.AssertionError: void <init>()>();
throw $r18;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17);
if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z1 != 0 goto return;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z1 != 0 goto return;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);
$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15);
if $i1 == -1 goto return;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 ]
$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>;
if $z1 != 0 goto return;
"->"Block 12:
[preds: 9 10 ] [succs: ]
return;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);
$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15);
if $i1 == -1 goto return;
"->"Block 11:
[preds: 10 ] [succs: ]
$r16 = new java.lang.AssertionError;
specialinvoke $r16.<java.lang.AssertionError: void <init>()>();
throw $r16;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);
$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15);
if $i1 == -1 goto return;
"->"Block 12:
[preds: 9 10 ] [succs: ]
return;
";
}
