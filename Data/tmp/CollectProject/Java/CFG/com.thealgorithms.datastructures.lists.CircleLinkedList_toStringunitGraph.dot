digraph "unitGraph" {
    "r0 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList"
    "$r1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>"
    "r15 = $r1.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"
    "r16 = \"[ \""
    "$r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>"
    "if r15 == $r2 goto $r3 = new java.lang.StringBuilder"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"
    "$r9 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)"
    "r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r11 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>"
    "if r15 == $r11 goto r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \")"
    "r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"
    "goto [?= $r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>]"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ]\")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r6"
    "r0 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList"->"$r1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>";
    "$r1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>"->"r15 = $r1.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>";
    "r15 = $r1.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"->"r16 = \"[ \"";
    "r16 = \"[ \""->"$r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>";
    "$r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>"->"if r15 == $r2 goto $r3 = new java.lang.StringBuilder";
    "if r15 == $r2 goto $r3 = new java.lang.StringBuilder"->"$r7 = new java.lang.StringBuilder";
    "if r15 == $r2 goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"->"$r9 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>";
    "$r9 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)"->"r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r11 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>";
    "$r11 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>"->"if r15 == $r11 goto r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>";
    "if r15 == $r11 goto r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"->"$r12 = new java.lang.StringBuilder";
    "if r15 == $r11 goto r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"->"r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" , \")"->"r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()"->"r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>";
    "r15 = r15.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>"->"goto [?= $r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>]";
    "goto [?= $r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>]"->"$r2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ]\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ]\")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r6";
}
