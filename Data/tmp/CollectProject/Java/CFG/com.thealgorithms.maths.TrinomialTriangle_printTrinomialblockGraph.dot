digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i3 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i3 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = neg i3;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i4 > 0 goto i5 = 1;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$i2 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i4);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>($r10);
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
i5 = 1;
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i5 > i3 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$i1 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i5);
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r5);
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 6 ] [succs: 1 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println()>();
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i3 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i3 >= i0 goto return;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i3 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i4 = neg i3;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i3 >= i0 goto return;
"->"Block 9:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = neg i3;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i4 > 0 goto i5 = 1;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i4 > 0 goto i5 = 1;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$i2 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i4);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>($r10);
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i4 > 0 goto i5 = 1;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
i5 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$i2 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i4);
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>($r10);
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i4 > 0 goto i5 = 1;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
i5 = 1;
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i5 > i3 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i5 > i3 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 6 ] [succs: 6 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$i1 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i5);
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r5);
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i5 > i3 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 6 ] [succs: 1 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println()>();
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$i1 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>(i3, i5);
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r5);
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i5 > i3 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 8:
[preds: 6 ] [succs: 1 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println()>();
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i3 >= i0 goto return;
";
}
