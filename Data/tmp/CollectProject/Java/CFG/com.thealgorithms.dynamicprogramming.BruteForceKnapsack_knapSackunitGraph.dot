digraph "unitGraph" {
    "i1 := @parameter0: int"
    "r0 := @parameter1: int[]"
    "r1 := @parameter2: int[]"
    "i0 := @parameter3: int"
    "if i0 == 0 goto return 0"
    "if i1 != 0 goto $i2 = i0 - 1"
    "return 0"
    "$i2 = i0 - 1"
    "$i3 = r0[$i2]"
    "if $i3 <= i1 goto $i4 = i0 - 1"
    "$i15 = i0 - 1"
    "$i16 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i15)"
    "return $i16"
    "$i4 = i0 - 1"
    "$i9 = r1[$i4]"
    "$i5 = i0 - 1"
    "$i6 = r0[$i5]"
    "$i8 = i1 - $i6"
    "$i7 = i0 - 1"
    "$i10 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>($i8, r0, r1, $i7)"
    "$i12 = $i9 + $i10"
    "$i11 = i0 - 1"
    "$i13 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i11)"
    "$i14 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13)"
    "return $i14"
    "i1 := @parameter0: int"->"r0 := @parameter1: int[]";
    "r0 := @parameter1: int[]"->"r1 := @parameter2: int[]";
    "r1 := @parameter2: int[]"->"i0 := @parameter3: int";
    "i0 := @parameter3: int"->"if i0 == 0 goto return 0";
    "if i0 == 0 goto return 0"->"if i1 != 0 goto $i2 = i0 - 1";
    "if i0 == 0 goto return 0"->"return 0";
    "if i1 != 0 goto $i2 = i0 - 1"->"return 0";
    "if i1 != 0 goto $i2 = i0 - 1"->"$i2 = i0 - 1";
    "$i2 = i0 - 1"->"$i3 = r0[$i2]";
    "$i3 = r0[$i2]"->"if $i3 <= i1 goto $i4 = i0 - 1";
    "if $i3 <= i1 goto $i4 = i0 - 1"->"$i15 = i0 - 1";
    "if $i3 <= i1 goto $i4 = i0 - 1"->"$i4 = i0 - 1";
    "$i15 = i0 - 1"->"$i16 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i15)";
    "$i16 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i15)"->"return $i16";
    "$i4 = i0 - 1"->"$i9 = r1[$i4]";
    "$i9 = r1[$i4]"->"$i5 = i0 - 1";
    "$i5 = i0 - 1"->"$i6 = r0[$i5]";
    "$i6 = r0[$i5]"->"$i8 = i1 - $i6";
    "$i8 = i1 - $i6"->"$i7 = i0 - 1";
    "$i7 = i0 - 1"->"$i10 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>($i8, r0, r1, $i7)";
    "$i10 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>($i8, r0, r1, $i7)"->"$i12 = $i9 + $i10";
    "$i12 = $i9 + $i10"->"$i11 = i0 - 1";
    "$i11 = i0 - 1"->"$i13 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i11)";
    "$i13 = staticinvoke <com.thealgorithms.dynamicprogramming.BruteForceKnapsack: int knapSack(int,int[],int[],int)>(i1, r0, r1, $i11)"->"$i14 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13)";
    "$i14 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13)"->"return $i14";
}
