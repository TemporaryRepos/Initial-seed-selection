digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i2 = r0[0]"
    "i3 = 1"
    "if i3 >= i0 goto return i2"
    "$i1 = r0[i3]"
    "if $i1 <= i2 goto i3 = i3 + 1"
    "i2 = r0[i3]"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return i2"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 = r0[0]";
    "i2 = r0[0]"->"i3 = 1";
    "i3 = 1"->"if i3 >= i0 goto return i2";
    "if i3 >= i0 goto return i2"->"$i1 = r0[i3]";
    "if i3 >= i0 goto return i2"->"return i2";
    "$i1 = r0[i3]"->"if $i1 <= i2 goto i3 = i3 + 1";
    "if $i1 <= i2 goto i3 = i3 + 1"->"i2 = r0[i3]";
    "if $i1 <= i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i2 = r0[i3]"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return i2";
}
