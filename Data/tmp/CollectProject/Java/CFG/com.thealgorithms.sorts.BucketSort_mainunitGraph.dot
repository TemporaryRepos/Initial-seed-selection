digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "r0 = newarray (int)[10]"
    "$r1 = new java.util.Random"
    "specialinvoke $r1.<java.util.Random: void <init>()>()"
    "r2 = $r1"
    "i8 = 0"
    "$i0 = lengthof r0"
    "if i8 >= $i0 goto staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)"
    "$i6 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100)"
    "$i7 = $i6 - 50"
    "r0[i8] = $i7"
    "i8 = i8 + 1"
    "goto [?= $i0 = lengthof r0]"
    "staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)"
    "i9 = 0"
    "$i1 = lengthof r0"
    "i2 = $i1 - 1"
    "if i9 >= i2 goto return"
    "$z0 = <com.thealgorithms.sorts.BucketSort: boolean $assertionsDisabled>"
    "if $z0 != 0 goto i9 = i9 + 1"
    "$i5 = r0[i9]"
    "$i3 = i9 + 1"
    "$i4 = r0[$i3]"
    "if $i5 <= $i4 goto i9 = i9 + 1"
    "$r4 = new java.lang.AssertionError"
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"
    "throw $r4"
    "i9 = i9 + 1"
    "goto [?= (branch)]"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"r0 = newarray (int)[10]";
    "r0 = newarray (int)[10]"->"$r1 = new java.util.Random";
    "$r1 = new java.util.Random"->"specialinvoke $r1.<java.util.Random: void <init>()>()";
    "specialinvoke $r1.<java.util.Random: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"i8 = 0";
    "i8 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i8 >= $i0 goto staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)";
    "if i8 >= $i0 goto staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)"->"$i6 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100)";
    "if i8 >= $i0 goto staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)"->"staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)";
    "$i6 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100)"->"$i7 = $i6 - 50";
    "$i7 = $i6 - 50"->"r0[i8] = $i7";
    "r0[i8] = $i7"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
    "staticinvoke <com.thealgorithms.sorts.BucketSort: int[] bucketSort(int[])>(r0)"->"i9 = 0";
    "i9 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"i2 = $i1 - 1";
    "i2 = $i1 - 1"->"if i9 >= i2 goto return";
    "if i9 >= i2 goto return"->"$z0 = <com.thealgorithms.sorts.BucketSort: boolean $assertionsDisabled>";
    "if i9 >= i2 goto return"->"return";
    "$z0 = <com.thealgorithms.sorts.BucketSort: boolean $assertionsDisabled>"->"if $z0 != 0 goto i9 = i9 + 1";
    "if $z0 != 0 goto i9 = i9 + 1"->"$i5 = r0[i9]";
    "if $z0 != 0 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$i5 = r0[i9]"->"$i3 = i9 + 1";
    "$i3 = i9 + 1"->"$i4 = r0[$i3]";
    "$i4 = r0[$i3]"->"if $i5 <= $i4 goto i9 = i9 + 1";
    "if $i5 <= $i4 goto i9 = i9 + 1"->"$r4 = new java.lang.AssertionError";
    "if $i5 <= $i4 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r4 = new java.lang.AssertionError"->"specialinvoke $r4.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"->"throw $r4";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= i2 goto return";
}
