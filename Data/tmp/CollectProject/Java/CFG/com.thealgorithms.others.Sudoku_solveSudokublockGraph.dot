digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[][];
i0 := @parameter1: int;
i2 = -1;
i3 = -1;
z2 = 1;
i4 = 0;
"
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i4 >= i0 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i5 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$i1 = $r3[i5];
if $i1 != 0 goto i5 = i5 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
i2 = i4;
i3 = i5;
z2 = 0;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
if z2 != 0 goto i4 = i4 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= (branch)];
"
    "Block 9:
[preds: 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 1 8 ] [succs: 11 12 ]
if z2 == 0 goto i6 = 1;
"
    "Block 11:
[preds: 10 ] [succs: ]
return 1;
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
i6 = 1;
"
    "Block 13:
[preds: 12 18 ] [succs: 14 19 ]
if i6 > i0 goto return 0;
"
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$z0 = staticinvoke <com.thealgorithms.others.Sudoku: boolean isSafe(int[][],int,int,int)>(r0, i2, i3, i6);
if $z0 == 0 goto i6 = i6 + 1;
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r1 = r0[i2];
$r1[i3] = i6;
$z1 = staticinvoke <com.thealgorithms.others.Sudoku: boolean solveSudoku(int[][],int)>(r0, i0);
if $z1 == 0 goto $r2 = r0[i2];
"
    "Block 16:
[preds: 15 ] [succs: ]
return 1;
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$r2 = r0[i2];
$r2[i3] = 0;
"
    "Block 18:
[preds: 14 17 ] [succs: 13 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 13 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[][];
i0 := @parameter1: int;
i2 = -1;
i3 = -1;
z2 = 1;
i4 = 0;
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i4 >= i0 goto (branch);
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i4 >= i0 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i5 = 0;
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i4 >= i0 goto (branch);
"->"Block 10:
[preds: 1 8 ] [succs: 11 12 ]
if z2 == 0 goto i6 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i5 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$i1 = $r3[i5];
if $i1 != 0 goto i5 = i5 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"->"Block 7:
[preds: 3 5 ] [succs: 8 9 ]
if z2 != 0 goto i4 = i4 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$i1 = $r3[i5];
if $i1 != 0 goto i5 = i5 + 1;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
i2 = i4;
i3 = i5;
z2 = 0;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$i1 = $r3[i5];
if $i1 != 0 goto i5 = i5 + 1;
"->"Block 6:
[preds: 4 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
i2 = i4;
i3 = i5;
z2 = 0;
goto [?= (branch)];
"->"Block 7:
[preds: 3 5 ] [succs: 8 9 ]
if z2 != 0 goto i4 = i4 + 1;
";
    "Block 6:
[preds: 4 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
";
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
if z2 != 0 goto i4 = i4 + 1;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= (branch)];
";
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
if z2 != 0 goto i4 = i4 + 1;
"->"Block 9:
[preds: 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
goto [?= (branch)];
"->"Block 10:
[preds: 1 8 ] [succs: 11 12 ]
if z2 == 0 goto i6 = 1;
";
    "Block 9:
[preds: 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i4 >= i0 goto (branch);
";
    "Block 10:
[preds: 1 8 ] [succs: 11 12 ]
if z2 == 0 goto i6 = 1;
"->"Block 11:
[preds: 10 ] [succs: ]
return 1;
";
    "Block 10:
[preds: 1 8 ] [succs: 11 12 ]
if z2 == 0 goto i6 = 1;
"->"Block 12:
[preds: 10 ] [succs: 13 ]
i6 = 1;
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
i6 = 1;
"->"Block 13:
[preds: 12 18 ] [succs: 14 19 ]
if i6 > i0 goto return 0;
";
    "Block 13:
[preds: 12 18 ] [succs: 14 19 ]
if i6 > i0 goto return 0;
"->"Block 14:
[preds: 13 ] [succs: 15 18 ]
$z0 = staticinvoke <com.thealgorithms.others.Sudoku: boolean isSafe(int[][],int,int,int)>(r0, i2, i3, i6);
if $z0 == 0 goto i6 = i6 + 1;
";
    "Block 13:
[preds: 12 18 ] [succs: 14 19 ]
if i6 > i0 goto return 0;
"->"Block 19:
[preds: 13 ] [succs: ]
return 0;
";
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$z0 = staticinvoke <com.thealgorithms.others.Sudoku: boolean isSafe(int[][],int,int,int)>(r0, i2, i3, i6);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
$r1 = r0[i2];
$r1[i3] = i6;
$z1 = staticinvoke <com.thealgorithms.others.Sudoku: boolean solveSudoku(int[][],int)>(r0, i0);
if $z1 == 0 goto $r2 = r0[i2];
";
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$z0 = staticinvoke <com.thealgorithms.others.Sudoku: boolean isSafe(int[][],int,int,int)>(r0, i2, i3, i6);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 18:
[preds: 14 17 ] [succs: 13 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r1 = r0[i2];
$r1[i3] = i6;
$z1 = staticinvoke <com.thealgorithms.others.Sudoku: boolean solveSudoku(int[][],int)>(r0, i0);
if $z1 == 0 goto $r2 = r0[i2];
"->"Block 16:
[preds: 15 ] [succs: ]
return 1;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r1 = r0[i2];
$r1[i3] = i6;
$z1 = staticinvoke <com.thealgorithms.others.Sudoku: boolean solveSudoku(int[][],int)>(r0, i0);
if $z1 == 0 goto $r2 = r0[i2];
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$r2 = r0[i2];
$r2[i3] = 0;
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$r2 = r0[i2];
$r2[i3] = 0;
"->"Block 18:
[preds: 14 17 ] [succs: 13 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 18:
[preds: 14 17 ] [succs: 13 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 13:
[preds: 12 18 ] [succs: 14 19 ]
if i6 > i0 goto return 0;
";
}
