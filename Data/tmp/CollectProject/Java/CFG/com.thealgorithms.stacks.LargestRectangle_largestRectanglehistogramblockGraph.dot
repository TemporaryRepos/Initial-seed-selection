digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i0 = lengthof r0;
i12 = 0;
$r1 = new java.util.Stack;
specialinvoke $r1.<java.util.Stack: void <init>()>();
r2 = $r1;
i13 = 0;
"
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i13 >= i0 goto $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i14 = i13;
"
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
$z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z1 != 0 goto $r5 = newarray (int)[2];
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r7 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
$r8 = (int[]) $r7;
$i7 = $r8[1];
$i6 = r0[i13];
if $i7 <= $i6 goto $r5 = newarray (int)[2];
"
    "Block 5:
[preds: 4 ] [succs: 3 ]
$r9 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r10 = (int[]) $r9;
$i10 = r10[1];
$i8 = r10[0];
$i9 = i13 - $i8;
$i11 = $i10 * $i9;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i11);
i14 = r10[0];
goto [?= $z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
"
    "Block 6:
[preds: 3 4 ] [succs: 1 ]
$r5 = newarray (int)[2];
$r5[0] = i14;
$i5 = r0[i13];
$r5[1] = $i5;
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 1 8 ] [succs: 8 9 ]
$z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r11 = (int[]) $r4;
$i3 = r11[1];
$i1 = r11[0];
$i2 = i0 - $i1;
$i4 = $i3 * $i2;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i4);
goto [?= $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
"
    "Block 9:
[preds: 7 ] [succs: ]
$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
return $r3;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i0 = lengthof r0;
i12 = 0;
$r1 = new java.util.Stack;
specialinvoke $r1.<java.util.Stack: void <init>()>();
r2 = $r1;
i13 = 0;
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i13 >= i0 goto $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i13 >= i0 goto $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i14 = i13;
";
    "Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i13 >= i0 goto $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
"->"Block 7:
[preds: 1 8 ] [succs: 8 9 ]
$z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i14 = i13;
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
$z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z1 != 0 goto $r5 = newarray (int)[2];
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
$z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z1 != 0 goto $r5 = newarray (int)[2];
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r7 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
$r8 = (int[]) $r7;
$i7 = $r8[1];
$i6 = r0[i13];
if $i7 <= $i6 goto $r5 = newarray (int)[2];
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
$z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z1 != 0 goto $r5 = newarray (int)[2];
"->"Block 6:
[preds: 3 4 ] [succs: 1 ]
$r5 = newarray (int)[2];
$r5[0] = i14;
$i5 = r0[i13];
$r5[1] = $i5;
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r7 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
$r8 = (int[]) $r7;
$i7 = $r8[1];
$i6 = r0[i13];
if $i7 <= $i6 goto $r5 = newarray (int)[2];
"->"Block 5:
[preds: 4 ] [succs: 3 ]
$r9 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r10 = (int[]) $r9;
$i10 = r10[1];
$i8 = r10[0];
$i9 = i13 - $i8;
$i11 = $i10 * $i9;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i11);
i14 = r10[0];
goto [?= $z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r7 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
$r8 = (int[]) $r7;
$i7 = $r8[1];
$i6 = r0[i13];
if $i7 <= $i6 goto $r5 = newarray (int)[2];
"->"Block 6:
[preds: 3 4 ] [succs: 1 ]
$r5 = newarray (int)[2];
$r5[0] = i14;
$i5 = r0[i13];
$r5[1] = $i5;
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 3 ]
$r9 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r10 = (int[]) $r9;
$i10 = r10[1];
$i8 = r10[0];
$i9 = i13 - $i8;
$i11 = $i10 * $i9;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i11);
i14 = r10[0];
goto [?= $z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
$z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z1 != 0 goto $r5 = newarray (int)[2];
";
    "Block 6:
[preds: 3 4 ] [succs: 1 ]
$r5 = newarray (int)[2];
$r5[0] = i14;
$i5 = r0[i13];
$r5[1] = $i5;
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 6 ] [succs: 2 7 ]
if i13 >= i0 goto $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
";
    "Block 7:
[preds: 1 8 ] [succs: 8 9 ]
$z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r11 = (int[]) $r4;
$i3 = r11[1];
$i1 = r11[0];
$i2 = i0 - $i1;
$i4 = $i3 * $i2;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i4);
goto [?= $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
";
    "Block 7:
[preds: 1 8 ] [succs: 8 9 ]
$z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
"->"Block 9:
[preds: 7 ] [succs: ]
$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
return $r3;
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r11 = (int[]) $r4;
$i3 = r11[1];
$i1 = r11[0];
$i2 = i0 - $i1;
$i4 = $i3 * $i2;
i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i4);
goto [?= $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()];
"->"Block 7:
[preds: 1 8 ] [succs: 8 9 ]
$z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
if $z0 != 0 goto $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);
";
}
