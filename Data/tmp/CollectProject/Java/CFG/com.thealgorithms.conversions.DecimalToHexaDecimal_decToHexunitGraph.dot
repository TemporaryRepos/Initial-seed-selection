digraph "unitGraph" {
    "i2 := @parameter0: int"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(8)"
    "r1 = $r0"
    "virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(8)"
    "i3 = 7"
    "if i3 < 0 goto $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i0 = i2 & 15"
    "$r4 = <com.thealgorithms.conversions.DecimalToHexaDecimal: char[] hexDigits>"
    "$c1 = $r4[i0]"
    "virtualinvoke r1.<java.lang.StringBuilder: void setCharAt(int,char)>(i3, $c1)"
    "i2 = i2 >> 4"
    "i3 = i3 + -1"
    "goto [?= (branch)]"
    "$r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()"
    "return $r3"
    "i2 := @parameter0: int"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(8)";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(8)"->"r1 = $r0";
    "r1 = $r0"->"virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(8)";
    "virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(8)"->"i3 = 7";
    "i3 = 7"->"if i3 < 0 goto $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if i3 < 0 goto $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"i0 = i2 & 15";
    "if i3 < 0 goto $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "i0 = i2 & 15"->"$r4 = <com.thealgorithms.conversions.DecimalToHexaDecimal: char[] hexDigits>";
    "$r4 = <com.thealgorithms.conversions.DecimalToHexaDecimal: char[] hexDigits>"->"$c1 = $r4[i0]";
    "$c1 = $r4[i0]"->"virtualinvoke r1.<java.lang.StringBuilder: void setCharAt(int,char)>(i3, $c1)";
    "virtualinvoke r1.<java.lang.StringBuilder: void setCharAt(int,char)>(i3, $c1)"->"i2 = i2 >> 4";
    "i2 = i2 >> 4"->"i3 = i3 + -1";
    "i3 = i3 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 < 0 goto $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()";
    "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()"->"return $r3";
}
