digraph "unitGraph" {
    "r5 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"
    "r11 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"
    "r1 := @parameter1: java.lang.Comparable"
    "if r11 != null goto $r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r10 = new com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"
    "specialinvoke $r10.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: void <init>(java.lang.Object)>(r1)"
    "r11 = $r10"
    "goto [?= return r11]"
    "$r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r2 = (java.lang.Comparable) $r0"
    "$i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)"
    "if $i0 <= 0 goto $r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r8 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>"
    "$r9 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r1)"
    "r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left> = $r9"
    "$r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r4 = (java.lang.Comparable) $r3"
    "$i1 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)"
    "if $i1 >= 0 goto return r11"
    "$r6 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"
    "$r7 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r6, r1)"
    "r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right> = $r7"
    "return r11"
    "r5 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"->"r11 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node";
    "r11 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"->"r1 := @parameter1: java.lang.Comparable";
    "r1 := @parameter1: java.lang.Comparable"->"if r11 != null goto $r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "if r11 != null goto $r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r10 = new com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node";
    "if r11 != null goto $r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "$r10 = new com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"->"specialinvoke $r10.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: void <init>(java.lang.Object)>(r1)";
    "specialinvoke $r10.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: void <init>(java.lang.Object)>(r1)"->"r11 = $r10";
    "r11 = $r10"->"goto [?= return r11]";
    "goto [?= return r11]"->"return r11";
    "$r0 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r2 = (java.lang.Comparable) $r0";
    "$r2 = (java.lang.Comparable) $r0"->"$i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)";
    "$i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)"->"if $i0 <= 0 goto $r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "if $i0 <= 0 goto $r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r8 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>";
    "if $i0 <= 0 goto $r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "$r8 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>"->"$r9 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r1)";
    "$r9 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r1)"->"r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left> = $r9";
    "r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left> = $r9"->"goto [?= return r11]";
    "goto [?= return r11]"->"return r11";
    "$r3 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r4 = (java.lang.Comparable) $r3";
    "$r4 = (java.lang.Comparable) $r3"->"$i1 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)";
    "$i1 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)"->"if $i1 >= 0 goto return r11";
    "if $i1 >= 0 goto return r11"->"$r6 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>";
    "if $i1 >= 0 goto return r11"->"return r11";
    "$r6 = r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"->"$r7 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r6, r1)";
    "$r7 = specialinvoke r5.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node insert(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r6, r1)"->"r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right> = $r7";
    "r11.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right> = $r7"->"return r11";
}
