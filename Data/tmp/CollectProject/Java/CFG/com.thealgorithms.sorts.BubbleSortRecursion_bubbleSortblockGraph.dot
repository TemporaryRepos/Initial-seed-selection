digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.Comparable[];
i0 := @parameter1: int;
z1 = 0;
i5 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = i0 - 1;
if i5 >= $i1 goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i5];
$i3 = i5 + 1;
$r1 = r0[$i3];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean greater(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i5 = i5 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = i5 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i5, $i4);
z1 = 1;
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = i0 - 1];
"
    "Block 5:
[preds: 1 ] [succs: 6 7 ]
if z1 == 0 goto return;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
staticinvoke <com.thealgorithms.sorts.BubbleSortRecursion: void bubbleSort(java.lang.Comparable[],int)>(r0, $i2);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.Comparable[];
i0 := @parameter1: int;
z1 = 0;
i5 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = i0 - 1;
if i5 >= $i1 goto (branch);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = i0 - 1;
if i5 >= $i1 goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i5];
$i3 = i5 + 1;
$r1 = r0[$i3];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean greater(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i5 = i5 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = i0 - 1;
if i5 >= $i1 goto (branch);
"->"Block 5:
[preds: 1 ] [succs: 6 7 ]
if z1 == 0 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i5];
$i3 = i5 + 1;
$r1 = r0[$i3];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean greater(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i5 = i5 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = i5 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i5, $i4);
z1 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = r0[i5];
$i3 = i5 + 1;
$r1 = r0[$i3];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean greater(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i5 = i5 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = i0 - 1];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = i5 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i5, $i4);
z1 = 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = i0 - 1];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = i0 - 1];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = i0 - 1;
if i5 >= $i1 goto (branch);
";
    "Block 5:
[preds: 1 ] [succs: 6 7 ]
if z1 == 0 goto return;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
staticinvoke <com.thealgorithms.sorts.BubbleSortRecursion: void bubbleSort(java.lang.Comparable[],int)>(r0, $i2);
";
    "Block 5:
[preds: 1 ] [succs: 6 7 ]
if z1 == 0 goto return;
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i0 - 1;
staticinvoke <com.thealgorithms.sorts.BubbleSortRecursion: void bubbleSort(java.lang.Comparable[],int)>(r0, $i2);
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
}
