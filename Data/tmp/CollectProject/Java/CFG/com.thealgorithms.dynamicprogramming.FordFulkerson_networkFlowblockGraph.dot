digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i3 := @parameter0: int;
i4 := @parameter1: int;
$i1 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
$i0 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
$r0 = newmultiarray (int)[$i1][$i0];
<com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow> = $r0;
i23 = 0;
"
    "Block 1:
[preds: 0 22 ] [succs: 2 ]
$r1 = new java.util.Vector;
$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2);
r2 = $r1;
i24 = 0;
"
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i24 >= $i25 goto $r3 = new java.util.LinkedList;
"
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58);
i24 = i24 + 1;
goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = new java.util.LinkedList;
specialinvoke $r3.<java.util.LinkedList: void <init>()>();
r59 = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4);
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6);
"
    "Block 5:
[preds: 4 13 ] [succs: 6 14 ]
$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>();
if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r45 = (java.lang.Integer) $r44;
$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();
if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>();
$r47 = (java.lang.Integer) $r46;
i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();
interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>();
i27 = 0;
"
    "Block 8:
[preds: 7 12 ] [succs: 9 13 ]
$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i27 >= $i18 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r50 = $r49[i26];
$i20 = $r50[i27];
$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r52 = $r51[i26];
$i19 = $r52[i27];
$i21 = $i20 - $i19;
if $i21 <= 0 goto i27 = i27 + 1;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27);
$r54 = (java.lang.Integer) $r53;
$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>();
if $i22 != -1 goto i27 = i27 + 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55);
$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56);
"
    "Block 12:
[preds: 9 10 11 ] [succs: 8 ]
i27 = i27 + 1;
goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
"
    "Block 13:
[preds: 8 ] [succs: 5 ]
goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()];
"
    "Block 14:
[preds: 5 6 ] [succs: 15 16 ]
$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r8 = (java.lang.Integer) $r7;
$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i5 != -1 goto i28 = 987654321;
"
    "Block 15:
[preds: 14 ] [succs: 23 ]
goto [?= return i23];
"
    "Block 16:
[preds: 14 ] [succs: 17 ]
i28 = 987654321;
r60 = \"path : \";
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
r10 = $r9;
i29 = i4;
"
    "Block 17:
[preds: 16 18 ] [succs: 18 19 ]
if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
"
    "Block 18:
[preds: 17 ] [succs: 17 ]
$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r31 = (java.lang.Integer) $r30;
$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();
$r32 = $r29[$i12];
$i13 = $r32[i29];
$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r35 = (java.lang.Integer) $r34;
$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();
$r36 = $r33[$i14];
$i15 = $r36[i29];
$i16 = $i13 - $i15;
i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28);
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r43 = (java.lang.Integer) $r42;
i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
"
    "Block 19:
[preds: 17 ] [succs: 20 ]
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
i30 = i4;
"
    "Block 20:
[preds: 19 21 ] [succs: 21 22 ]
if i30 == i3 goto i23 = i23 + i28;
"
    "Block 21:
[preds: 20 ] [succs: 20 ]
$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r21 = (java.lang.Integer) $r20;
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$r22 = $r19[$i6];
$i7 = $r22[i30];
$i8 = $i7 + i28;
$r22[i30] = $i8;
$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r24 = $r23[i30];
$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r26 = (java.lang.Integer) $r25;
$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i10 = $r24[$i9];
$i11 = $i10 - i28;
$r24[$i9] = $i11;
$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r28 = (java.lang.Integer) $r27;
i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
"
    "Block 22:
[preds: 20 ] [succs: 1 ]
i23 = i23 + i28;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61);
goto [?= $r1 = new java.util.Vector];
"
    "Block 23:
[preds: 15 ] [succs: ]
return i23;
"
    "Block 0:
[preds: ] [succs: 1 ]
i3 := @parameter0: int;
i4 := @parameter1: int;
$i1 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
$i0 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
$r0 = newmultiarray (int)[$i1][$i0];
<com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow> = $r0;
i23 = 0;
"->"Block 1:
[preds: 0 22 ] [succs: 2 ]
$r1 = new java.util.Vector;
$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2);
r2 = $r1;
i24 = 0;
";
    "Block 1:
[preds: 0 22 ] [succs: 2 ]
$r1 = new java.util.Vector;
$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2);
r2 = $r1;
i24 = 0;
"->"Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i24 >= $i25 goto $r3 = new java.util.LinkedList;
";
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i24 >= $i25 goto $r3 = new java.util.LinkedList;
"->"Block 3:
[preds: 2 ] [succs: 2 ]
$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58);
i24 = i24 + 1;
goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
";
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i24 >= $i25 goto $r3 = new java.util.LinkedList;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = new java.util.LinkedList;
specialinvoke $r3.<java.util.LinkedList: void <init>()>();
r59 = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4);
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6);
";
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);
virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58);
i24 = i24 + 1;
goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
"->"Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i24 >= $i25 goto $r3 = new java.util.LinkedList;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = new java.util.LinkedList;
specialinvoke $r3.<java.util.LinkedList: void <init>()>();
r59 = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4);
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6);
"->"Block 5:
[preds: 4 13 ] [succs: 6 14 ]
$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>();
if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
";
    "Block 5:
[preds: 4 13 ] [succs: 6 14 ]
$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>();
if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"->"Block 6:
[preds: 5 ] [succs: 7 14 ]
$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r45 = (java.lang.Integer) $r44;
$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();
if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
";
    "Block 5:
[preds: 4 13 ] [succs: 6 14 ]
$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>();
if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"->"Block 14:
[preds: 5 6 ] [succs: 15 16 ]
$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r8 = (java.lang.Integer) $r7;
$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i5 != -1 goto i28 = 987654321;
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r45 = (java.lang.Integer) $r44;
$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();
if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"->"Block 7:
[preds: 6 ] [succs: 8 ]
$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>();
$r47 = (java.lang.Integer) $r46;
i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();
interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>();
i27 = 0;
";
    "Block 6:
[preds: 5 ] [succs: 7 14 ]
$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r45 = (java.lang.Integer) $r44;
$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();
if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
"->"Block 14:
[preds: 5 6 ] [succs: 15 16 ]
$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r8 = (java.lang.Integer) $r7;
$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i5 != -1 goto i28 = 987654321;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>();
$r47 = (java.lang.Integer) $r46;
i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();
interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>();
i27 = 0;
"->"Block 8:
[preds: 7 12 ] [succs: 9 13 ]
$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i27 >= $i18 goto (branch);
";
    "Block 8:
[preds: 7 12 ] [succs: 9 13 ]
$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i27 >= $i18 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r50 = $r49[i26];
$i20 = $r50[i27];
$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r52 = $r51[i26];
$i19 = $r52[i27];
$i21 = $i20 - $i19;
if $i21 <= 0 goto i27 = i27 + 1;
";
    "Block 8:
[preds: 7 12 ] [succs: 9 13 ]
$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i27 >= $i18 goto (branch);
"->"Block 13:
[preds: 8 ] [succs: 5 ]
goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()];
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r50 = $r49[i26];
$i20 = $r50[i27];
$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r52 = $r51[i26];
$i19 = $r52[i27];
$i21 = $i20 - $i19;
if $i21 <= 0 goto i27 = i27 + 1;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27);
$r54 = (java.lang.Integer) $r53;
$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>();
if $i22 != -1 goto i27 = i27 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r50 = $r49[i26];
$i20 = $r50[i27];
$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r52 = $r51[i26];
$i19 = $r52[i27];
$i21 = $i20 - $i19;
if $i21 <= 0 goto i27 = i27 + 1;
"->"Block 12:
[preds: 9 10 11 ] [succs: 8 ]
i27 = i27 + 1;
goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27);
$r54 = (java.lang.Integer) $r53;
$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>();
if $i22 != -1 goto i27 = i27 + 1;
"->"Block 11:
[preds: 10 ] [succs: 12 ]
$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55);
$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56);
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27);
$r54 = (java.lang.Integer) $r53;
$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>();
if $i22 != -1 goto i27 = i27 + 1;
"->"Block 12:
[preds: 9 10 11 ] [succs: 8 ]
i27 = i27 + 1;
goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55);
$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);
virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56);
"->"Block 12:
[preds: 9 10 11 ] [succs: 8 ]
i27 = i27 + 1;
goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
";
    "Block 12:
[preds: 9 10 11 ] [succs: 8 ]
i27 = i27 + 1;
goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>];
"->"Block 8:
[preds: 7 12 ] [succs: 9 13 ]
$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
if i27 >= $i18 goto (branch);
";
    "Block 13:
[preds: 8 ] [succs: 5 ]
goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()];
"->"Block 5:
[preds: 4 13 ] [succs: 6 14 ]
$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>();
if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
";
    "Block 14:
[preds: 5 6 ] [succs: 15 16 ]
$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r8 = (java.lang.Integer) $r7;
$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i5 != -1 goto i28 = 987654321;
"->"Block 15:
[preds: 14 ] [succs: 23 ]
goto [?= return i23];
";
    "Block 14:
[preds: 5 6 ] [succs: 15 16 ]
$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4);
$r8 = (java.lang.Integer) $r7;
$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i5 != -1 goto i28 = 987654321;
"->"Block 16:
[preds: 14 ] [succs: 17 ]
i28 = 987654321;
r60 = \"path : \";
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
r10 = $r9;
i29 = i4;
";
    "Block 15:
[preds: 14 ] [succs: 23 ]
goto [?= return i23];
"->"Block 23:
[preds: 15 ] [succs: ]
return i23;
";
    "Block 16:
[preds: 14 ] [succs: 17 ]
i28 = 987654321;
r60 = \"path : \";
$r9 = new java.lang.StringBuilder;
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
r10 = $r9;
i29 = i4;
"->"Block 17:
[preds: 16 18 ] [succs: 18 19 ]
if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
";
    "Block 17:
[preds: 16 18 ] [succs: 18 19 ]
if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
"->"Block 18:
[preds: 17 ] [succs: 17 ]
$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r31 = (java.lang.Integer) $r30;
$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();
$r32 = $r29[$i12];
$i13 = $r32[i29];
$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r35 = (java.lang.Integer) $r34;
$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();
$r36 = $r33[$i14];
$i15 = $r36[i29];
$i16 = $i13 - $i15;
i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28);
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r43 = (java.lang.Integer) $r42;
i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
";
    "Block 17:
[preds: 16 18 ] [succs: 18 19 ]
if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
"->"Block 19:
[preds: 17 ] [succs: 20 ]
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
i30 = i4;
";
    "Block 18:
[preds: 17 ] [succs: 17 ]
$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>;
$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r31 = (java.lang.Integer) $r30;
$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();
$r32 = $r29[$i12];
$i13 = $r32[i29];
$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r35 = (java.lang.Integer) $r34;
$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();
$r36 = $r33[$i14];
$i15 = $r36[i29];
$i16 = $i13 - $i15;
i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28);
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\");
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29);
$r43 = (java.lang.Integer) $r42;
i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
"->"Block 17:
[preds: 16 18 ] [succs: 18 19 ]
if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
";
    "Block 19:
[preds: 17 ] [succs: 20 ]
virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
i30 = i4;
"->"Block 20:
[preds: 19 21 ] [succs: 21 22 ]
if i30 == i3 goto i23 = i23 + i28;
";
    "Block 20:
[preds: 19 21 ] [succs: 21 22 ]
if i30 == i3 goto i23 = i23 + i28;
"->"Block 21:
[preds: 20 ] [succs: 20 ]
$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r21 = (java.lang.Integer) $r20;
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$r22 = $r19[$i6];
$i7 = $r22[i30];
$i8 = $i7 + i28;
$r22[i30] = $i8;
$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r24 = $r23[i30];
$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r26 = (java.lang.Integer) $r25;
$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i10 = $r24[$i9];
$i11 = $i10 - i28;
$r24[$i9] = $i11;
$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r28 = (java.lang.Integer) $r27;
i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
";
    "Block 20:
[preds: 19 21 ] [succs: 21 22 ]
if i30 == i3 goto i23 = i23 + i28;
"->"Block 22:
[preds: 20 ] [succs: 1 ]
i23 = i23 + i28;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61);
goto [?= $r1 = new java.util.Vector];
";
    "Block 21:
[preds: 20 ] [succs: 20 ]
$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r21 = (java.lang.Integer) $r20;
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$r22 = $r19[$i6];
$i7 = $r22[i30];
$i8 = $i7 + i28;
$r22[i30] = $i8;
$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>;
$r24 = $r23[i30];
$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r26 = (java.lang.Integer) $r25;
$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i10 = $r24[$i9];
$i11 = $i10 - i28;
$r24[$i9] = $i11;
$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30);
$r28 = (java.lang.Integer) $r27;
i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();
goto [?= (branch)];
"->"Block 20:
[preds: 19 21 ] [succs: 21 22 ]
if i30 == i3 goto i23 = i23 + i28;
";
    "Block 22:
[preds: 20 ] [succs: 1 ]
i23 = i23 + i28;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \");
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);
r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61);
goto [?= $r1 = new java.util.Vector];
"->"Block 1:
[preds: 0 22 ] [succs: 2 ]
$r1 = new java.util.Vector;
$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>;
specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2);
r2 = $r1;
i24 = 0;
";
}
