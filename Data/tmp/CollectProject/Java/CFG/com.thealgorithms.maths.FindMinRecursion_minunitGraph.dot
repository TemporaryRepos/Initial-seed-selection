digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "$i0 = lengthof r0"
    "if $i0 != 1 goto $i1 = lengthof r0"
    "$i2 = r0[0]"
    "goto [?= return $i2]"
    "$i1 = lengthof r0"
    "$i2 = staticinvoke <com.thealgorithms.maths.FindMinRecursion: int min(int[],int,int)>(r0, 0, $i1)"
    "return $i2"
    "r0 := @parameter0: int[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 1 goto $i1 = lengthof r0";
    "if $i0 != 1 goto $i1 = lengthof r0"->"$i2 = r0[0]";
    "if $i0 != 1 goto $i1 = lengthof r0"->"$i1 = lengthof r0";
    "$i2 = r0[0]"->"goto [?= return $i2]";
    "goto [?= return $i2]"->"return $i2";
    "$i1 = lengthof r0"->"$i2 = staticinvoke <com.thealgorithms.maths.FindMinRecursion: int min(int[],int,int)>(r0, 0, $i1)";
    "$i2 = staticinvoke <com.thealgorithms.maths.FindMinRecursion: int min(int[],int,int)>(r0, 0, $i1)"->"return $i2";
}
