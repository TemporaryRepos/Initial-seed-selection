digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new com.thealgorithms.datastructures.trees.AVLTree"
    "specialinvoke $r0.<com.thealgorithms.datastructures.trees.AVLTree: void <init>()>()"
    "r1 = $r0"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Inserting values 1 to 10\")"
    "i0 = 1"
    "if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(\"Printing balance: \")"
    "virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance()>()"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new com.thealgorithms.datastructures.trees.AVLTree";
    "$r0 = new com.thealgorithms.datastructures.trees.AVLTree"->"specialinvoke $r0.<com.thealgorithms.datastructures.trees.AVLTree: void <init>()>()";
    "specialinvoke $r0.<com.thealgorithms.datastructures.trees.AVLTree: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Inserting values 1 to 10\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Inserting values 1 to 10\")"->"i0 = 1";
    "i0 = 1"->"if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>";
    "if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0)";
    "if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(\"Printing balance: \")";
    "virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(\"Printing balance: \")"->"virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance()>()";
    "virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance()>()"->"return";
}
