digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
i1 := @parameter1: int;
if r0 == null goto return r0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i0 != i1 goto $i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return r0;
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i2 <= i1 goto $r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"
    "Block 4:
[preds: 3 ] [succs: ]
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r5 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node searchHelper(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>($r4, i1);
return $r5;
"
    "Block 5:
[preds: 3 ] [succs: ]
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r3 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node searchHelper(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>($r2, i1);
return $r3;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
i1 := @parameter1: int;
if r0 == null goto return r0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i0 != i1 goto $i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
i1 := @parameter1: int;
if r0 == null goto return r0;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i0 != i1 goto $i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i0 != i1 goto $i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i2 <= i1 goto $r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i2 <= i1 goto $r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"->"Block 4:
[preds: 3 ] [succs: ]
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r5 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node searchHelper(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>($r4, i1);
return $r5;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $i2 <= i1 goto $r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
"->"Block 5:
[preds: 3 ] [succs: ]
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r3 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node searchHelper(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>($r2, i1);
return $r3;
";
}
