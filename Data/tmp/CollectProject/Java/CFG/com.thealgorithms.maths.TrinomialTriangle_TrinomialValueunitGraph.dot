digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "if i0 != 0 goto $i2 = neg i0"
    "if i1 != 0 goto $i2 = neg i0"
    "return 1"
    "$i2 = neg i0"
    "if i1 < $i2 goto return 0"
    "if i1 <= i0 goto $i4 = i0 - 1"
    "return 0"
    "$i4 = i0 - 1"
    "$i3 = i1 - 1"
    "$i5 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i4, $i3)"
    "$i6 = i0 - 1"
    "$i7 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i6, i1)"
    "$i10 = $i5 + $i7"
    "$i9 = i0 - 1"
    "$i8 = i1 + 1"
    "$i11 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i9, $i8)"
    "$i12 = $i10 + $i11"
    "return $i12"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"if i0 != 0 goto $i2 = neg i0";
    "if i0 != 0 goto $i2 = neg i0"->"if i1 != 0 goto $i2 = neg i0";
    "if i0 != 0 goto $i2 = neg i0"->"$i2 = neg i0";
    "if i1 != 0 goto $i2 = neg i0"->"return 1";
    "if i1 != 0 goto $i2 = neg i0"->"$i2 = neg i0";
    "$i2 = neg i0"->"if i1 < $i2 goto return 0";
    "if i1 < $i2 goto return 0"->"if i1 <= i0 goto $i4 = i0 - 1";
    "if i1 < $i2 goto return 0"->"return 0";
    "if i1 <= i0 goto $i4 = i0 - 1"->"return 0";
    "if i1 <= i0 goto $i4 = i0 - 1"->"$i4 = i0 - 1";
    "$i4 = i0 - 1"->"$i3 = i1 - 1";
    "$i3 = i1 - 1"->"$i5 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i4, $i3)";
    "$i5 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i4, $i3)"->"$i6 = i0 - 1";
    "$i6 = i0 - 1"->"$i7 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i6, i1)";
    "$i7 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i6, i1)"->"$i10 = $i5 + $i7";
    "$i10 = $i5 + $i7"->"$i9 = i0 - 1";
    "$i9 = i0 - 1"->"$i8 = i1 + 1";
    "$i8 = i1 + 1"->"$i11 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i9, $i8)";
    "$i11 = staticinvoke <com.thealgorithms.maths.TrinomialTriangle: int TrinomialValue(int,int)>($i9, $i8)"->"$i12 = $i10 + $i11";
    "$i12 = $i10 + $i11"->"return $i12";
}
