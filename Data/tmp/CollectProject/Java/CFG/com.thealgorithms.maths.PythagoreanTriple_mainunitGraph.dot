digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$z0 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$z11 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(3, 4, 5)"
    "if $z11 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"
    "throw $r5"
    "$z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$z10 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(5, 12, 13)"
    "if $z10 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$r4 = new java.lang.AssertionError"
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"
    "throw $r4"
    "$z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$z9 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 10)"
    "if $z9 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"
    "throw $r3"
    "$z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z3 != 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$z8 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(10, 20, 30)"
    "if $z8 == 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$r2 = new java.lang.AssertionError"
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"
    "throw $r2"
    "$z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z4 != 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$z7 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 100)"
    "if $z7 == 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "$r1 = new java.lang.AssertionError"
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"
    "throw $r1"
    "$z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"
    "if $z5 != 0 goto return"
    "$z6 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(-1, -1, 1)"
    "if $z6 == 0 goto return"
    "$r0 = new java.lang.AssertionError"
    "specialinvoke $r0.<java.lang.AssertionError: void <init>()>()"
    "throw $r0"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$z0 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z11 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(3, 4, 5)";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z11 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(3, 4, 5)"->"if $z11 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z11 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$r5 = new java.lang.AssertionError";
    "if $z11 != 0 goto $z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"->"throw $r5";
    "$z1 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z10 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(5, 12, 13)";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z10 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(5, 12, 13)"->"if $z10 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z10 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$r4 = new java.lang.AssertionError";
    "if $z10 != 0 goto $z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$r4 = new java.lang.AssertionError"->"specialinvoke $r4.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"->"throw $r4";
    "$z2 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z9 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 10)";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z9 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 10)"->"if $z9 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z9 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$r3 = new java.lang.AssertionError";
    "if $z9 != 0 goto $z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"->"throw $r3";
    "$z3 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z3 != 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z3 != 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z8 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(10, 20, 30)";
    "if $z3 != 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z8 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(10, 20, 30)"->"if $z8 == 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z8 == 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$r2 = new java.lang.AssertionError";
    "if $z8 == 0 goto $z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$r2 = new java.lang.AssertionError"->"specialinvoke $r2.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"throw $r2";
    "$z4 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z4 != 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z4 != 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z7 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 100)";
    "if $z4 != 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$z7 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(6, 8, 100)"->"if $z7 == 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "if $z7 == 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$r1 = new java.lang.AssertionError";
    "if $z7 == 0 goto $z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"$z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>";
    "$r1 = new java.lang.AssertionError"->"specialinvoke $r1.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"->"throw $r1";
    "$z5 = <com.thealgorithms.maths.PythagoreanTriple: boolean $assertionsDisabled>"->"if $z5 != 0 goto return";
    "if $z5 != 0 goto return"->"$z6 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(-1, -1, 1)";
    "if $z5 != 0 goto return"->"return";
    "$z6 = staticinvoke <com.thealgorithms.maths.PythagoreanTriple: boolean isPythagTriple(int,int,int)>(-1, -1, 1)"->"if $z6 == 0 goto return";
    "if $z6 == 0 goto return"->"$r0 = new java.lang.AssertionError";
    "if $z6 == 0 goto return"->"return";
    "$r0 = new java.lang.AssertionError"->"specialinvoke $r0.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r0.<java.lang.AssertionError: void <init>()>()"->"throw $r0";
}
