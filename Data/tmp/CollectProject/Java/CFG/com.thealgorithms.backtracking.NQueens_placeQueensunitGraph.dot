digraph "unitGraph" {
    "i0 := @parameter0: int"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (int)[i0]"
    "staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i0, r1, $r2, 0)"
    "$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()"
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "$r17 = <java.lang.System: java.io.PrintStream out>"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"There is no way to place \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens on board of size \")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"x\")"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24)"
    "goto [?= r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()]"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Arrangement for placing \")"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)"
    "r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return"
    "$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()"
    "r11 = (java.util.List) $r10"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>()"
    "$r14 = staticinvoke <com.thealgorithms.backtracking.NQueens$println__80: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r12)"
    "interfaceinvoke r11.<java.util.List: void forEach(java.util.function.Consumer)>($r14)"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r15.<java.io.PrintStream: void println()>()"
    "goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "i0 := @parameter0: int"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (int)[i0]";
    "$r2 = newarray (int)[i0]"->"staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i0, r1, $r2, 0)";
    "staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i0, r1, $r2, 0)"->"$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()";
    "$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()"->"if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r17 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r17 = <java.lang.System: java.io.PrintStream out>"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"There is no way to place \")";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"There is no way to place \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens on board of size \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens on board of size \")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"x\")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"x\")"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24)";
    "virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24)"->"goto [?= r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()]";
    "goto [?= r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()]"->"r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Arrangement for placing \")";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Arrangement for placing \")"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens\")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" queens\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8)"->"r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()";
    "r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return";
    "if $z1 == 0 goto return"->"$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return"->"return";
    "$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()"->"r11 = (java.util.List) $r10";
    "r11 = (java.util.List) $r10"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>()";
    "virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>()"->"$r14 = staticinvoke <com.thealgorithms.backtracking.NQueens$println__80: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r12)";
    "$r14 = staticinvoke <com.thealgorithms.backtracking.NQueens$println__80: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r12)"->"interfaceinvoke r11.<java.util.List: void forEach(java.util.function.Consumer)>($r14)";
    "interfaceinvoke r11.<java.util.List: void forEach(java.util.function.Consumer)>($r14)"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r15.<java.io.PrintStream: void println()>()";
    "virtualinvoke $r15.<java.io.PrintStream: void println()>()"->"goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()";
}
