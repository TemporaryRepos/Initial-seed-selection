digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r20 = \"\""
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"
    "if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)"
    "return r20"
    "$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)"
    "if $z1 != 0 goto $r1 = new java.util.Stack"
    "$r19 = new java.lang.IllegalArgumentException"
    "specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid Postfix Expression\")"
    "throw $r19"
    "$r1 = new java.util.Stack"
    "specialinvoke $r1.<java.util.Stack: void <init>()>()"
    "r2 = $r1"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "r4 = $r3"
    "i3 = 0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"
    "c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)"
    "$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1)"
    "if $z2 != 0 goto c2 = c1"
    "$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)"
    "virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17)"
    "goto [?= i3 = i3 + 1]"
    "c2 = c1"
    "$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"
    "r7 = (java.lang.String) $r6"
    "$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"
    "r9 = (java.lang.String) $r8"
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)"
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)"
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2)"
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)"
    "$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15)"
    "virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0)"
    "i3 = i3 + 1"
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "$r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"
    "r21 = (java.lang.String) $r5"
    "return r21"
    "r0 := @parameter0: java.lang.String"->"r20 = \"\"";
    "r20 = \"\""->"$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"->"if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)";
    "if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)"->"return r20";
    "if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)"->"$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)";
    "$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0)"->"if $z1 != 0 goto $r1 = new java.util.Stack";
    "if $z1 != 0 goto $r1 = new java.util.Stack"->"$r19 = new java.lang.IllegalArgumentException";
    "if $z1 != 0 goto $r1 = new java.util.Stack"->"$r1 = new java.util.Stack";
    "$r19 = new java.lang.IllegalArgumentException"->"specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid Postfix Expression\")";
    "specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid Postfix Expression\")"->"throw $r19";
    "$r1 = new java.util.Stack"->"specialinvoke $r1.<java.util.Stack: void <init>()>()";
    "specialinvoke $r1.<java.util.Stack: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"i3 = 0";
    "i3 = 0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()";
    "if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"->"c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)";
    "if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"->"$r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()";
    "c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)"->"$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1)";
    "$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1)"->"if $z2 != 0 goto c2 = c1";
    "if $z2 != 0 goto c2 = c1"->"$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)";
    "if $z2 != 0 goto c2 = c1"->"c2 = c1";
    "$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1)"->"virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17)";
    "virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17)"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "c2 = c1"->"$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()";
    "$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"->"r7 = (java.lang.String) $r6";
    "r7 = (java.lang.String) $r6"->"$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()";
    "$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"->"r9 = (java.lang.String) $r8";
    "r9 = (java.lang.String) $r8"->"virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)";
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)"->"virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)";
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)"->"virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2)";
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2)"->"virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)";
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)"->"virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)";
    "virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)"->"$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15)";
    "virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15)"->"virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0)";
    "virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()"->"r21 = (java.lang.String) $r5";
    "r21 = (java.lang.String) $r5"->"return r21";
}
