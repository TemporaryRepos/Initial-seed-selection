digraph "unitGraph" {
    "r1 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "i4 := @parameter3: int"
    "i8 = i0 - 1"
    "i9 = i0"
    "i10 = i1 + 1"
    "if i9 == i10 goto r0 = newarray (int)[2]"
    "$i5 = r1[i9]"
    "if $i5 >= i4 goto $i6 = r1[i9]"
    "i8 = i8 + 1"
    "$i7 = i9"
    "i9 = i9 + 1"
    "staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i8, $i7)"
    "goto [?= (branch)]"
    "$i6 = r1[i9]"
    "if $i6 <= i4 goto i9 = i9 + 1"
    "i10 = i10 + -1"
    "staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i10, i9)"
    "r0 = newarray (int)[2]"
    "$i2 = i8 + 1"
    "r0[0] = $i2"
    "$i3 = i10 - 1"
    "r0[1] = $i3"
    "return r0"
    "r1 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"i4 := @parameter3: int";
    "i4 := @parameter3: int"->"i8 = i0 - 1";
    "i8 = i0 - 1"->"i9 = i0";
    "i9 = i0"->"i10 = i1 + 1";
    "i10 = i1 + 1"->"if i9 == i10 goto r0 = newarray (int)[2]";
    "if i9 == i10 goto r0 = newarray (int)[2]"->"$i5 = r1[i9]";
    "if i9 == i10 goto r0 = newarray (int)[2]"->"r0 = newarray (int)[2]";
    "$i5 = r1[i9]"->"if $i5 >= i4 goto $i6 = r1[i9]";
    "if $i5 >= i4 goto $i6 = r1[i9]"->"i8 = i8 + 1";
    "if $i5 >= i4 goto $i6 = r1[i9]"->"$i6 = r1[i9]";
    "i8 = i8 + 1"->"$i7 = i9";
    "$i7 = i9"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i8, $i7)";
    "staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i8, $i7)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 == i10 goto r0 = newarray (int)[2]";
    "$i6 = r1[i9]"->"if $i6 <= i4 goto i9 = i9 + 1";
    "if $i6 <= i4 goto i9 = i9 + 1"->"i10 = i10 + -1";
    "if $i6 <= i4 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "i10 = i10 + -1"->"staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i10, i9)";
    "staticinvoke <com.thealgorithms.others.BFPRT: void swap(int[],int,int)>(r1, i10, i9)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 == i10 goto r0 = newarray (int)[2]";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 == i10 goto r0 = newarray (int)[2]";
    "r0 = newarray (int)[2]"->"$i2 = i8 + 1";
    "$i2 = i8 + 1"->"r0[0] = $i2";
    "r0[0] = $i2"->"$i3 = i10 - 1";
    "$i3 = i10 - 1"->"r0[1] = $i3";
    "r0[1] = $i3"->"return r0";
}
