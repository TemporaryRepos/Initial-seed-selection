digraph "unitGraph" {
    "d0 := @parameter0: double"
    "d1 := @parameter1: double"
    "d2 := @parameter2: double"
    "d3 := @parameter3: double"
    "r4 := @parameter4: java.util.function.BiFunction"
    "$b0 = d0 cmpl d1"
    "if $b0 < 0 goto $b1 = d2 cmpg 0.0"
    "$r8 = new java.lang.IllegalArgumentException"
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"xEnd should be greater than xStart\")"
    "throw $r8"
    "$b1 = d2 cmpg 0.0"
    "if $b1 > 0 goto $r0 = new java.util.ArrayList"
    "$r7 = new java.lang.IllegalArgumentException"
    "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"stepSize should be greater than zero\")"
    "throw $r7"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (double)[2]"
    "$r2[0] = d0"
    "$r2[1] = d3"
    "r3 = $r2"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3)"
    "d4 = d3"
    "d5 = d0"
    "$b2 = d5 cmpg d1"
    "if $b2 >= 0 goto return r1"
    "d4 = staticinvoke <com.thealgorithms.maths.EulerMethod: double eulerStep(double,double,double,java.util.function.BiFunction)>(d5, d2, d4, r4)"
    "d5 = d5 + d2"
    "$r5 = newarray (double)[2]"
    "$r5[0] = d5"
    "$r5[1] = d4"
    "r6 = $r5"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6)"
    "goto [?= $b2 = d5 cmpg d1]"
    "return r1"
    "d0 := @parameter0: double"->"d1 := @parameter1: double";
    "d1 := @parameter1: double"->"d2 := @parameter2: double";
    "d2 := @parameter2: double"->"d3 := @parameter3: double";
    "d3 := @parameter3: double"->"r4 := @parameter4: java.util.function.BiFunction";
    "r4 := @parameter4: java.util.function.BiFunction"->"$b0 = d0 cmpl d1";
    "$b0 = d0 cmpl d1"->"if $b0 < 0 goto $b1 = d2 cmpg 0.0";
    "if $b0 < 0 goto $b1 = d2 cmpg 0.0"->"$r8 = new java.lang.IllegalArgumentException";
    "if $b0 < 0 goto $b1 = d2 cmpg 0.0"->"$b1 = d2 cmpg 0.0";
    "$r8 = new java.lang.IllegalArgumentException"->"specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"xEnd should be greater than xStart\")";
    "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"xEnd should be greater than xStart\")"->"throw $r8";
    "$b1 = d2 cmpg 0.0"->"if $b1 > 0 goto $r0 = new java.util.ArrayList";
    "if $b1 > 0 goto $r0 = new java.util.ArrayList"->"$r7 = new java.lang.IllegalArgumentException";
    "if $b1 > 0 goto $r0 = new java.util.ArrayList"->"$r0 = new java.util.ArrayList";
    "$r7 = new java.lang.IllegalArgumentException"->"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"stepSize should be greater than zero\")";
    "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"stepSize should be greater than zero\")"->"throw $r7";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (double)[2]";
    "$r2 = newarray (double)[2]"->"$r2[0] = d0";
    "$r2[0] = d0"->"$r2[1] = d3";
    "$r2[1] = d3"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3)"->"d4 = d3";
    "d4 = d3"->"d5 = d0";
    "d5 = d0"->"$b2 = d5 cmpg d1";
    "$b2 = d5 cmpg d1"->"if $b2 >= 0 goto return r1";
    "if $b2 >= 0 goto return r1"->"d4 = staticinvoke <com.thealgorithms.maths.EulerMethod: double eulerStep(double,double,double,java.util.function.BiFunction)>(d5, d2, d4, r4)";
    "if $b2 >= 0 goto return r1"->"return r1";
    "d4 = staticinvoke <com.thealgorithms.maths.EulerMethod: double eulerStep(double,double,double,java.util.function.BiFunction)>(d5, d2, d4, r4)"->"d5 = d5 + d2";
    "d5 = d5 + d2"->"$r5 = newarray (double)[2]";
    "$r5 = newarray (double)[2]"->"$r5[0] = d5";
    "$r5[0] = d5"->"$r5[1] = d4";
    "$r5[1] = d4"->"r6 = $r5";
    "r6 = $r5"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6)"->"goto [?= $b2 = d5 cmpg d1]";
    "goto [?= $b2 = d5 cmpg d1]"->"$b2 = d5 cmpg d1";
}
