digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i1 := @parameter1: int"
    "i3 = 0"
    "i4 = lengthof r0"
    "if i3 >= i4 goto return -1"
    "i0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int partition(int[],int,int)>(r0, i3, i4)"
    "if i1 != i0 goto (branch)"
    "$i2 = r0[i0]"
    "return $i2"
    "if i1 <= i0 goto i4 = i0"
    "i3 = i0 + 1"
    "goto [?= (branch)]"
    "i4 = i0"
    "return -1"
    "r0 := @parameter0: int[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i3 = 0";
    "i3 = 0"->"i4 = lengthof r0";
    "i4 = lengthof r0"->"if i3 >= i4 goto return -1";
    "if i3 >= i4 goto return -1"->"i0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int partition(int[],int,int)>(r0, i3, i4)";
    "if i3 >= i4 goto return -1"->"return -1";
    "i0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int partition(int[],int,int)>(r0, i3, i4)"->"if i1 != i0 goto (branch)";
    "if i1 != i0 goto (branch)"->"$i2 = r0[i0]";
    "if i1 != i0 goto (branch)"->"if i1 <= i0 goto i4 = i0";
    "$i2 = r0[i0]"->"return $i2";
    "if i1 <= i0 goto i4 = i0"->"i3 = i0 + 1";
    "if i1 <= i0 goto i4 = i0"->"i4 = i0";
    "i3 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "i4 = i0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i4 goto return -1";
}
