digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 = staticinvoke <com.thealgorithms.sorts.BucketSort: int max(int[])>(r0)"
    "i1 = staticinvoke <com.thealgorithms.sorts.BucketSort: int min(int[])>(r0)"
    "$i2 = i0 - i1"
    "i3 = $i2 + 1"
    "$r1 = new java.util.ArrayList"
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i3)"
    "r2 = $r1"
    "i5 = 0"
    "if i5 >= i3 goto r11 = r0"
    "$r10 = new java.util.ArrayList"
    "specialinvoke $r10.<java.util.ArrayList: void <init>()>()"
    "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "r11 = r0"
    "i6 = lengthof r11"
    "i7 = 0"
    "if i7 >= i6 goto r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "i8 = r11[i7]"
    "i9 = staticinvoke <com.thealgorithms.sorts.BucketSort: int hash(int,int,int)>(i8, i1, i3)"
    "$r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9)"
    "$r8 = (java.util.List) $r7"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9)"
    "i7 = i7 + 1"
    "r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto i10 = 0"
    "$r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"
    "r13 = (java.util.List) $r6"
    "staticinvoke <java.util.Collections: void sort(java.util.List)>(r13)"
    "goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"
    "i10 = 0"
    "r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return r0"
    "$r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"
    "r15 = (java.util.List) $r3"
    "r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto (branch)"
    "$r4 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()"
    "$r5 = (java.lang.Integer) $r4"
    "i11 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"
    "$i4 = i10"
    "i10 = i10 + 1"
    "r0[$i4] = i11"
    "goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"
    "return r0"
    "r0 := @parameter0: int[]"->"i0 = staticinvoke <com.thealgorithms.sorts.BucketSort: int max(int[])>(r0)";
    "i0 = staticinvoke <com.thealgorithms.sorts.BucketSort: int max(int[])>(r0)"->"i1 = staticinvoke <com.thealgorithms.sorts.BucketSort: int min(int[])>(r0)";
    "i1 = staticinvoke <com.thealgorithms.sorts.BucketSort: int min(int[])>(r0)"->"$i2 = i0 - i1";
    "$i2 = i0 - i1"->"i3 = $i2 + 1";
    "i3 = $i2 + 1"->"$r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i3)";
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i3)"->"r2 = $r1";
    "r2 = $r1"->"i5 = 0";
    "i5 = 0"->"if i5 >= i3 goto r11 = r0";
    "if i5 >= i3 goto r11 = r0"->"$r10 = new java.util.ArrayList";
    "if i5 >= i3 goto r11 = r0"->"r11 = r0";
    "$r10 = new java.util.ArrayList"->"specialinvoke $r10.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r10.<java.util.ArrayList: void <init>()>()"->"interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10)";
    "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i3 goto r11 = r0";
    "r11 = r0"->"i6 = lengthof r11";
    "i6 = lengthof r11"->"i7 = 0";
    "i7 = 0"->"if i7 >= i6 goto r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "if i7 >= i6 goto r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"i8 = r11[i7]";
    "if i7 >= i6 goto r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "i8 = r11[i7]"->"i9 = staticinvoke <com.thealgorithms.sorts.BucketSort: int hash(int,int,int)>(i8, i1, i3)";
    "i9 = staticinvoke <com.thealgorithms.sorts.BucketSort: int hash(int,int,int)>(i8, i1, i3)"->"$r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9)";
    "$r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i9)"->"$r8 = (java.util.List) $r7";
    "$r8 = (java.util.List) $r7"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9)";
    "interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i6 goto r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto i10 = 0";
    "if $z0 == 0 goto i10 = 0"->"$r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto i10 = 0"->"i10 = 0";
    "$r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"->"r13 = (java.util.List) $r6";
    "r13 = (java.util.List) $r6"->"staticinvoke <java.util.Collections: void sort(java.util.List)>(r13)";
    "staticinvoke <java.util.Collections: void sort(java.util.List)>(r13)"->"goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
    "i10 = 0"->"r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return r0";
    "if $z1 == 0 goto return r0"->"$r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return r0"->"return r0";
    "$r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"->"r15 = (java.util.List) $r3";
    "r15 = (java.util.List) $r3"->"r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()";
    "r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"$r4 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto (branch)"->"goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]";
    "$r4 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()"->"$r5 = (java.lang.Integer) $r4";
    "$r5 = (java.lang.Integer) $r4"->"i11 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()";
    "i11 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"->"$i4 = i10";
    "$i4 = i10"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"r0[$i4] = i11";
    "r0[$i4] = i11"->"goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
}
