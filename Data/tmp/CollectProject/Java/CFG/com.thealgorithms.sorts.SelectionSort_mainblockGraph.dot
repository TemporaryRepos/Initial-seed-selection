digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r24 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[9];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[4] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(54);
$r0[5] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(231);
$r0[6] = $r7;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r0[7] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);
$r0[8] = $r9;
r10 = $r0;
$r11 = new com.thealgorithms.sorts.SelectionSort;
specialinvoke $r11.<com.thealgorithms.sorts.SelectionSort: void <init>()>();
r12 = $r11;
$r13 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r10);
r14 = (java.lang.Integer[]) $r13;
i9 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
$i1 = $i0 - 1;
if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5];
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z1 != 0 goto i9 = i9 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r21 = r14[i9];
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i7 = i9 + 1;
$r22 = r14[$i7];
$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i6 <= $i8 goto i9 = i9 + 1;
"
    "Block 4:
[preds: 3 ] [succs: ]
$r23 = new java.lang.AssertionError;
specialinvoke $r23.<java.lang.AssertionError: void <init>()>();
throw $r23;
"
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i9 = i9 + 1;
goto [?= $i0 = lengthof r14];
"
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r15 = newarray (java.lang.String)[5];
$r15[0] = \"c\";
$r15[1] = \"a\";
$r15[2] = \"e\";
$r15[3] = \"b\";
$r15[4] = \"d\";
r25 = $r15;
$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25);
r17 = (java.lang.String[]) $r16;
i10 = 0;
"
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i2 = lengthof r17;
$i3 = $i2 - 1;
if i10 >= $i3 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z0 != 0 goto i10 = i10 + 1;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r19 = r25[i10];
$i4 = i10 + 1;
$r18 = r25[$i4];
$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18);
if $i5 <= 0 goto i10 = i10 + 1;
"
    "Block 10:
[preds: 9 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>()>();
throw $r20;
"
    "Block 11:
[preds: 8 9 ] [succs: 7 ]
i10 = i10 + 1;
goto [?= $i2 = lengthof r17];
"
    "Block 12:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r24 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[9];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[4] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(54);
$r0[5] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(231);
$r0[6] = $r7;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r0[7] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);
$r0[8] = $r9;
r10 = $r0;
$r11 = new com.thealgorithms.sorts.SelectionSort;
specialinvoke $r11.<com.thealgorithms.sorts.SelectionSort: void <init>()>();
r12 = $r11;
$r13 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r10);
r14 = (java.lang.Integer[]) $r13;
i9 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
$i1 = $i0 - 1;
if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5];
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
$i1 = $i0 - 1;
if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5];
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z1 != 0 goto i9 = i9 + 1;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
$i1 = $i0 - 1;
if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5];
"->"Block 6:
[preds: 1 ] [succs: 7 ]
$r15 = newarray (java.lang.String)[5];
$r15[0] = \"c\";
$r15[1] = \"a\";
$r15[2] = \"e\";
$r15[3] = \"b\";
$r15[4] = \"d\";
r25 = $r15;
$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25);
r17 = (java.lang.String[]) $r16;
i10 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z1 != 0 goto i9 = i9 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r21 = r14[i9];
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i7 = i9 + 1;
$r22 = r14[$i7];
$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i6 <= $i8 goto i9 = i9 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z1 != 0 goto i9 = i9 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i9 = i9 + 1;
goto [?= $i0 = lengthof r14];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r21 = r14[i9];
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i7 = i9 + 1;
$r22 = r14[$i7];
$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i6 <= $i8 goto i9 = i9 + 1;
"->"Block 4:
[preds: 3 ] [succs: ]
$r23 = new java.lang.AssertionError;
specialinvoke $r23.<java.lang.AssertionError: void <init>()>();
throw $r23;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r21 = r14[i9];
$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i7 = i9 + 1;
$r22 = r14[$i7];
$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i6 <= $i8 goto i9 = i9 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i9 = i9 + 1;
goto [?= $i0 = lengthof r14];
";
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i9 = i9 + 1;
goto [?= $i0 = lengthof r14];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$i0 = lengthof r14;
$i1 = $i0 - 1;
if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5];
";
    "Block 6:
[preds: 1 ] [succs: 7 ]
$r15 = newarray (java.lang.String)[5];
$r15[0] = \"c\";
$r15[1] = \"a\";
$r15[2] = \"e\";
$r15[3] = \"b\";
$r15[4] = \"d\";
r25 = $r15;
$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25);
r17 = (java.lang.String[]) $r16;
i10 = 0;
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i2 = lengthof r17;
$i3 = $i2 - 1;
if i10 >= $i3 goto return;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i2 = lengthof r17;
$i3 = $i2 - 1;
if i10 >= $i3 goto return;
"->"Block 8:
[preds: 7 ] [succs: 9 11 ]
$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z0 != 0 goto i10 = i10 + 1;
";
    "Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i2 = lengthof r17;
$i3 = $i2 - 1;
if i10 >= $i3 goto return;
"->"Block 12:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z0 != 0 goto i10 = i10 + 1;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r19 = r25[i10];
$i4 = i10 + 1;
$r18 = r25[$i4];
$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18);
if $i5 <= 0 goto i10 = i10 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>;
if $z0 != 0 goto i10 = i10 + 1;
"->"Block 11:
[preds: 8 9 ] [succs: 7 ]
i10 = i10 + 1;
goto [?= $i2 = lengthof r17];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r19 = r25[i10];
$i4 = i10 + 1;
$r18 = r25[$i4];
$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18);
if $i5 <= 0 goto i10 = i10 + 1;
"->"Block 10:
[preds: 9 ] [succs: ]
$r20 = new java.lang.AssertionError;
specialinvoke $r20.<java.lang.AssertionError: void <init>()>();
throw $r20;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r19 = r25[i10];
$i4 = i10 + 1;
$r18 = r25[$i4];
$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18);
if $i5 <= 0 goto i10 = i10 + 1;
"->"Block 11:
[preds: 8 9 ] [succs: 7 ]
i10 = i10 + 1;
goto [?= $i2 = lengthof r17];
";
    "Block 11:
[preds: 8 9 ] [succs: 7 ]
i10 = i10 + 1;
goto [?= $i2 = lengthof r17];
"->"Block 7:
[preds: 6 11 ] [succs: 8 12 ]
$i2 = lengthof r17;
$i3 = $i2 - 1;
if i10 >= $i3 goto return;
";
}
