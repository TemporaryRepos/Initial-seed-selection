digraph "unitGraph" {
    "i3 := @parameter0: int"
    "i4 := @parameter1: int"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.util.ArrayList"
    "specialinvoke $r2.<java.util.ArrayList: void <init>()>()"
    "r3 = $r2"
    "if i3 <= 0 goto (branch)"
    "$i2 = i3 % 10"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)"
    "i3 = i3 / 10"
    "goto [?= (branch)]"
    "if i4 <= 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)"
    "$i1 = i4 % 10"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)"
    "i4 = i4 / 10"
    "staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)"
    "r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "$r7 = (java.lang.Integer) $r6"
    "i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]"
    "$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r5"
    "i3 := @parameter0: int"->"i4 := @parameter1: int";
    "i4 := @parameter1: int"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.ArrayList";
    "$r2 = new java.util.ArrayList"->"specialinvoke $r2.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r2.<java.util.ArrayList: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"if i3 <= 0 goto (branch)";
    "if i3 <= 0 goto (branch)"->"$i2 = i3 % 10";
    "if i3 <= 0 goto (branch)"->"if i4 <= 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)";
    "$i2 = i3 % 10"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)";
    "virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)"->"i3 = i3 / 10";
    "i3 = i3 / 10"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 <= 0 goto (branch)";
    "if i4 <= 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)"->"$i1 = i4 % 10";
    "if i4 <= 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)"->"staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)";
    "$i1 = i4 % 10"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)";
    "virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)"->"i4 = i4 / 10";
    "i4 = i4 / 10"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 <= 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)";
    "staticinvoke <java.util.Collections: void sort(java.util.List)>(r3)"->"r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>()";
    "r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if $z0 == 0 goto $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"$r7 = (java.lang.Integer) $r6";
    "$r7 = (java.lang.Integer) $r6"->"i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()";
    "i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()";
    "$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r5";
}
