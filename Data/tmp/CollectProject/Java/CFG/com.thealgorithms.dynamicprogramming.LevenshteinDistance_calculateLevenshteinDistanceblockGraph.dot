digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i1 = $i0 + 1;
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
i3 = $i2 + 1;
r2 = newmultiarray (int)[i1][i3];
i23 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i23 >= i1 goto i24 = 0;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = r2[i23];
$r11[0] = i23;
i23 = i23 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
i24 = 0;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i24 >= i3 goto i25 = 1;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r10 = r2[0];
$r10[i24] = i24;
i24 = i24 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
i25 = 1;
"
    "Block 7:
[preds: 6 14 ] [succs: 8 15 ]
if i25 >= i1 goto $i4 = i1 - 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
i26 = 1;
"
    "Block 9:
[preds: 8 13 ] [succs: 10 14 ]
if i26 >= i3 goto i25 = i25 + 1;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i7 = i25 - 1;
$c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);
$i9 = i26 - 1;
$c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
if $c8 != $c10 goto $r7 = r2[i25];
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
$r9 = r2[i25];
$i20 = i25 - 1;
$r8 = r2[$i20];
$i21 = i26 - 1;
$i22 = $r8[$i21];
$r9[i26] = $i22;
goto [?= i26 = i26 + 1];
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
$r7 = r2[i25];
$i11 = i25 - 1;
$r4 = r2[$i11];
$i17 = $r4[i26];
$i12 = i25 - 1;
$r5 = r2[$i12];
$i13 = i26 - 1;
$i16 = $r5[$i13];
$r6 = r2[i25];
$i14 = i26 - 1;
$i15 = $r6[$i14];
$i18 = staticinvoke <com.thealgorithms.dynamicprogramming.LevenshteinDistance: int minimum(int,int,int)>($i17, $i16, $i15);
$i19 = 1 + $i18;
$r7[i26] = $i19;
"
    "Block 13:
[preds: 11 12 ] [succs: 9 ]
i26 = i26 + 1;
goto [?= (branch)];
"
    "Block 14:
[preds: 9 ] [succs: 7 ]
i25 = i25 + 1;
goto [?= (branch)];
"
    "Block 15:
[preds: 7 ] [succs: ]
$i4 = i1 - 1;
$r3 = r2[$i4];
$i5 = i3 - 1;
$i6 = $r3[$i5];
return $i6;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i1 = $i0 + 1;
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
i3 = $i2 + 1;
r2 = newmultiarray (int)[i1][i3];
i23 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i23 >= i1 goto i24 = 0;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i23 >= i1 goto i24 = 0;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = r2[i23];
$r11[0] = i23;
i23 = i23 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i23 >= i1 goto i24 = 0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
i24 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = r2[i23];
$r11[0] = i23;
i23 = i23 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i23 >= i1 goto i24 = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
i24 = 0;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i24 >= i3 goto i25 = 1;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i24 >= i3 goto i25 = 1;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r10 = r2[0];
$r10[i24] = i24;
i24 = i24 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i24 >= i3 goto i25 = 1;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
i25 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r10 = r2[0];
$r10[i24] = i24;
i24 = i24 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i24 >= i3 goto i25 = 1;
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
i25 = 1;
"->"Block 7:
[preds: 6 14 ] [succs: 8 15 ]
if i25 >= i1 goto $i4 = i1 - 1;
";
    "Block 7:
[preds: 6 14 ] [succs: 8 15 ]
if i25 >= i1 goto $i4 = i1 - 1;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
i26 = 1;
";
    "Block 7:
[preds: 6 14 ] [succs: 8 15 ]
if i25 >= i1 goto $i4 = i1 - 1;
"->"Block 15:
[preds: 7 ] [succs: ]
$i4 = i1 - 1;
$r3 = r2[$i4];
$i5 = i3 - 1;
$i6 = $r3[$i5];
return $i6;
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
i26 = 1;
"->"Block 9:
[preds: 8 13 ] [succs: 10 14 ]
if i26 >= i3 goto i25 = i25 + 1;
";
    "Block 9:
[preds: 8 13 ] [succs: 10 14 ]
if i26 >= i3 goto i25 = i25 + 1;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$i7 = i25 - 1;
$c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);
$i9 = i26 - 1;
$c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
if $c8 != $c10 goto $r7 = r2[i25];
";
    "Block 9:
[preds: 8 13 ] [succs: 10 14 ]
if i26 >= i3 goto i25 = i25 + 1;
"->"Block 14:
[preds: 9 ] [succs: 7 ]
i25 = i25 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i7 = i25 - 1;
$c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);
$i9 = i26 - 1;
$c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
if $c8 != $c10 goto $r7 = r2[i25];
"->"Block 11:
[preds: 10 ] [succs: 13 ]
$r9 = r2[i25];
$i20 = i25 - 1;
$r8 = r2[$i20];
$i21 = i26 - 1;
$i22 = $r8[$i21];
$r9[i26] = $i22;
goto [?= i26 = i26 + 1];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$i7 = i25 - 1;
$c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);
$i9 = i26 - 1;
$c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
if $c8 != $c10 goto $r7 = r2[i25];
"->"Block 12:
[preds: 10 ] [succs: 13 ]
$r7 = r2[i25];
$i11 = i25 - 1;
$r4 = r2[$i11];
$i17 = $r4[i26];
$i12 = i25 - 1;
$r5 = r2[$i12];
$i13 = i26 - 1;
$i16 = $r5[$i13];
$r6 = r2[i25];
$i14 = i26 - 1;
$i15 = $r6[$i14];
$i18 = staticinvoke <com.thealgorithms.dynamicprogramming.LevenshteinDistance: int minimum(int,int,int)>($i17, $i16, $i15);
$i19 = 1 + $i18;
$r7[i26] = $i19;
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
$r9 = r2[i25];
$i20 = i25 - 1;
$r8 = r2[$i20];
$i21 = i26 - 1;
$i22 = $r8[$i21];
$r9[i26] = $i22;
goto [?= i26 = i26 + 1];
"->"Block 13:
[preds: 11 12 ] [succs: 9 ]
i26 = i26 + 1;
goto [?= (branch)];
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
$r7 = r2[i25];
$i11 = i25 - 1;
$r4 = r2[$i11];
$i17 = $r4[i26];
$i12 = i25 - 1;
$r5 = r2[$i12];
$i13 = i26 - 1;
$i16 = $r5[$i13];
$r6 = r2[i25];
$i14 = i26 - 1;
$i15 = $r6[$i14];
$i18 = staticinvoke <com.thealgorithms.dynamicprogramming.LevenshteinDistance: int minimum(int,int,int)>($i17, $i16, $i15);
$i19 = 1 + $i18;
$r7[i26] = $i19;
"->"Block 13:
[preds: 11 12 ] [succs: 9 ]
i26 = i26 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 12 ] [succs: 9 ]
i26 = i26 + 1;
goto [?= (branch)];
"->"Block 9:
[preds: 8 13 ] [succs: 10 14 ]
if i26 >= i3 goto i25 = i25 + 1;
";
    "Block 14:
[preds: 9 ] [succs: 7 ]
i25 = i25 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 14 ] [succs: 8 15 ]
if i25 >= i1 goto $i4 = i1 - 1;
";
}
