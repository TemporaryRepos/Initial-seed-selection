digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
i3 := @parameter1: int;
i7 = 0;
i8 = 1;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i9 = $i0 - 1;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i9 < 0 goto return i7;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
i2 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c1);
if i2 < i3 goto $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
"
    "Block 3:
[preds: 2 ] [succs: ]
$r1 = new java.lang.NumberFormatException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"For input string \");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r5);
throw $r1;
"
    "Block 4:
[preds: 2 ] [succs: 1 ]
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$i5 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c4);
$i6 = $i5 * i8;
i7 = i7 + $i6;
i8 = i8 * i3;
i9 = i9 + -1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: ]
return i7;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
i3 := @parameter1: int;
i7 = 0;
i8 = 1;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i9 = $i0 - 1;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i9 < 0 goto return i7;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i9 < 0 goto return i7;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
i2 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c1);
if i2 < i3 goto $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i9 < 0 goto return i7;
"->"Block 5:
[preds: 1 ] [succs: ]
return i7;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
i2 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c1);
if i2 < i3 goto $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
"->"Block 3:
[preds: 2 ] [succs: ]
$r1 = new java.lang.NumberFormatException;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"For input string \");
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r5);
throw $r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
i2 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c1);
if i2 < i3 goto $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
"->"Block 4:
[preds: 2 ] [succs: 1 ]
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$i5 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c4);
$i6 = $i5 * i8;
i7 = i7 + $i6;
i8 = i8 * i3;
i9 = i9 + -1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 1 ]
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);
$i5 = staticinvoke <com.thealgorithms.conversions.AnyBaseToDecimal: int valOfChar(char)>($c4);
$i6 = $i5 * i8;
i7 = i7 + $i6;
i8 = i8 * i3;
i9 = i9 + -1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i9 < 0 goto return i7;
";
}
