digraph "unitGraph" {
    "r13 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0)"
    "$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)"
    "$r9 = new java.awt.Color"
    "specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255)"
    "$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>()"
    "if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "$r10 = new java.lang.AssertionError"
    "specialinvoke $r10.<java.lang.AssertionError: void <init>()>()"
    "throw $r10"
    "$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"
    "$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)"
    "$r7 = new java.awt.Color"
    "specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)"
    "$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>()"
    "if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"
    "$r8 = new java.lang.AssertionError"
    "specialinvoke $r8.<java.lang.AssertionError: void <init>()>()"
    "throw $r8"
    "r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"
    "$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)"
    "$r5 = new java.awt.Color"
    "specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0)"
    "$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>()"
    "if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "$r6 = new java.lang.AssertionError"
    "specialinvoke $r6.<java.lang.AssertionError: void <init>()>()"
    "throw $r6"
    "$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"
    "if $z3 != 0 goto $r2 = new java.io.File"
    "$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)"
    "$r3 = new java.awt.Color"
    "specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)"
    "$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>()"
    "if $i0 == $i1 goto $r2 = new java.io.File"
    "$r4 = new java.lang.AssertionError"
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"
    "throw $r4"
    "$r2 = new java.io.File"
    "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\")"
    "staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2)"
    "goto [?= return]"
    "$r11 := @caughtexception"
    "r12 = $r11"
    "virtualinvoke r12.<java.io.IOException: void printStackTrace()>()"
    "return"
    "r13 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0)";
    "r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0)"->"$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)"->"$r9 = new java.awt.Color";
    "$r9 = new java.awt.Color"->"specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255)";
    "specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255)"->"$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>()";
    "$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>()"->"if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$r10 = new java.lang.AssertionError";
    "if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$r10 = new java.lang.AssertionError"->"specialinvoke $r10.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r10.<java.lang.AssertionError: void <init>()>()"->"throw $r10";
    "$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)";
    "if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"->"$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)";
    "if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"->"r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)";
    "$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)"->"$r7 = new java.awt.Color";
    "$r7 = new java.awt.Color"->"specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)";
    "specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)"->"$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>()";
    "$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>()"->"if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)";
    "if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"->"$r8 = new java.lang.AssertionError";
    "if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"->"r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)";
    "$r8 = new java.lang.AssertionError"->"specialinvoke $r8.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r8.<java.lang.AssertionError: void <init>()>()"->"throw $r8";
    "r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1)"->"$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)";
    "if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0)"->"$r5 = new java.awt.Color";
    "$r5 = new java.awt.Color"->"specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0)";
    "specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0)"->"$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>()";
    "$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>()"->"if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$r6 = new java.lang.AssertionError";
    "if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>";
    "$r6 = new java.lang.AssertionError"->"specialinvoke $r6.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r6.<java.lang.AssertionError: void <init>()>()"->"throw $r6";
    "$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>"->"if $z3 != 0 goto $r2 = new java.io.File";
    "if $z3 != 0 goto $r2 = new java.io.File"->"$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)";
    "if $z3 != 0 goto $r2 = new java.io.File"->"$r2 = new java.io.File";
    "if $z3 != 0 goto $r2 = new java.io.File"->"$r11 := @caughtexception";
    "$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300)"->"$r3 = new java.awt.Color";
    "$r3 = new java.awt.Color"->"specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)";
    "specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0)"->"$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>()";
    "$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>()"->"if $i0 == $i1 goto $r2 = new java.io.File";
    "if $i0 == $i1 goto $r2 = new java.io.File"->"$r4 = new java.lang.AssertionError";
    "if $i0 == $i1 goto $r2 = new java.io.File"->"$r2 = new java.io.File";
    "if $i0 == $i1 goto $r2 = new java.io.File"->"$r11 := @caughtexception";
    "$r4 = new java.lang.AssertionError"->"specialinvoke $r4.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"->"throw $r4";
    "$r2 = new java.io.File"->"specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\")";
    "$r2 = new java.io.File"->"$r11 := @caughtexception";
    "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\")"->"staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2)";
    "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\")"->"$r11 := @caughtexception";
    "staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2)"->"goto [?= return]";
    "staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2)"->"$r11 := @caughtexception";
    "goto [?= return]"->"return";
    "$r11 := @caughtexception"->"r12 = $r11";
    "r12 = $r11"->"virtualinvoke r12.<java.io.IOException: void printStackTrace()>()";
    "virtualinvoke r12.<java.io.IOException: void printStackTrace()>()"->"return";
}
