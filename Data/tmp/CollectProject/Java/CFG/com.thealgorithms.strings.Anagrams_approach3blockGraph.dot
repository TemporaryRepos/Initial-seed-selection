digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto r2 = newarray (int)[26];
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r2 = newarray (int)[26];
r3 = newarray (int)[26];
i2 = virtualinvoke r0.<java.lang.String: int length()>();
i13 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i13 >= i2 goto i14 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);
$i6 = $c5 - 97;
$i7 = r2[$i6];
$i8 = $i7 + 1;
r2[$i6] = $i8;
$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13);
$i10 = $c9 - 97;
$i11 = r3[$i10];
$i12 = $i11 + 1;
r3[$i10] = $i12;
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
i14 = 0;
"
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i14 >= 26 goto return 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i4 = r2[i14];
$i3 = r3[i14];
if $i4 == $i3 goto i14 = i14 + 1;
"
    "Block 8:
[preds: 7 ] [succs: ]
return 0;
"
    "Block 9:
[preds: 7 ] [succs: 6 ]
i14 = i14 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 6 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto r2 = newarray (int)[26];
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto r2 = newarray (int)[26];
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r2 = newarray (int)[26];
r3 = newarray (int)[26];
i2 = virtualinvoke r0.<java.lang.String: int length()>();
i13 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r2 = newarray (int)[26];
r3 = newarray (int)[26];
i2 = virtualinvoke r0.<java.lang.String: int length()>();
i13 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i13 >= i2 goto i14 = 0;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i13 >= i2 goto i14 = 0;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);
$i6 = $c5 - 97;
$i7 = r2[$i6];
$i8 = $i7 + 1;
r2[$i6] = $i8;
$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13);
$i10 = $c9 - 97;
$i11 = r3[$i10];
$i12 = $i11 + 1;
r3[$i10] = $i12;
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i13 >= i2 goto i14 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
i14 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);
$i6 = $c5 - 97;
$i7 = r2[$i6];
$i8 = $i7 + 1;
r2[$i6] = $i8;
$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13);
$i10 = $c9 - 97;
$i11 = r3[$i10];
$i12 = $i11 + 1;
r3[$i10] = $i12;
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i13 >= i2 goto i14 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
i14 = 0;
"->"Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i14 >= 26 goto return 1;
";
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i14 >= 26 goto return 1;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i4 = r2[i14];
$i3 = r3[i14];
if $i4 == $i3 goto i14 = i14 + 1;
";
    "Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i14 >= 26 goto return 1;
"->"Block 10:
[preds: 6 ] [succs: ]
return 1;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i4 = r2[i14];
$i3 = r3[i14];
if $i4 == $i3 goto i14 = i14 + 1;
"->"Block 8:
[preds: 7 ] [succs: ]
return 0;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i4 = r2[i14];
$i3 = r3[i14];
if $i4 == $i3 goto i14 = i14 + 1;
"->"Block 9:
[preds: 7 ] [succs: 6 ]
i14 = i14 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 ] [succs: 6 ]
i14 = i14 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 9 ] [succs: 7 10 ]
if i14 >= 26 goto return 1;
";
}
