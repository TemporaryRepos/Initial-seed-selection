digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i2 = i0"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)"
    "if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)"
    "$i1 = i2 % 2"
    "if $i1 != 0 goto $d0 = (double) i2"
    "$d9 = (double) i2"
    "$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9)"
    "$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10)"
    "i3 = (int) $d11"
    "goto [?= i2 = i3]"
    "$d0 = (double) i2"
    "$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0)"
    "$d2 = (double) i2"
    "$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)"
    "$d5 = $d1 * $d3"
    "$d4 = (double) i2"
    "$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4)"
    "$d7 = $d5 * $d6"
    "$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7)"
    "i3 = (int) $d8"
    "i2 = i3"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10)"
    "goto [?= (branch)]"
    "r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r11)"
    "return"
    "i0 := @parameter0: int"->"i2 = i0";
    "i2 = i0"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)"->"if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)";
    "if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)"->"$i1 = i2 % 2";
    "if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)"->"r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)";
    "$i1 = i2 % 2"->"if $i1 != 0 goto $d0 = (double) i2";
    "if $i1 != 0 goto $d0 = (double) i2"->"$d9 = (double) i2";
    "if $i1 != 0 goto $d0 = (double) i2"->"$d0 = (double) i2";
    "$d9 = (double) i2"->"$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9)";
    "$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9)"->"$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10)";
    "$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10)"->"i3 = (int) $d11";
    "i3 = (int) $d11"->"goto [?= i2 = i3]";
    "goto [?= i2 = i3]"->"i2 = i3";
    "$d0 = (double) i2"->"$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0)";
    "$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0)"->"$d2 = (double) i2";
    "$d2 = (double) i2"->"$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)";
    "$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2)"->"$d5 = $d1 * $d3";
    "$d5 = $d1 * $d3"->"$d4 = (double) i2";
    "$d4 = (double) i2"->"$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4)";
    "$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4)"->"$d7 = $d5 * $d6";
    "$d7 = $d5 * $d6"->"$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7)";
    "$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7)"->"i3 = (int) $d8";
    "i3 = (int) $d8"->"i2 = i3";
    "i2 = i3"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)";
    "r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r11)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r11)"->"return";
}
