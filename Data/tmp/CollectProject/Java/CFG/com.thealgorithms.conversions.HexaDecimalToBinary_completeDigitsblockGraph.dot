digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.conversions.HexaDecimalToBinary;
r4 := @parameter0: java.lang.String;
i0 = virtualinvoke r4.<java.lang.String: int length()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 8 goto return r4;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"0\");
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r4;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.conversions.HexaDecimalToBinary;
r4 := @parameter0: java.lang.String;
i0 = virtualinvoke r4.<java.lang.String: int length()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 8 goto return r4;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 8 goto return r4;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"0\");
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 8 goto return r4;
"->"Block 3:
[preds: 1 ] [succs: ]
return r4;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"0\");
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 8 goto return r4;
";
}
