digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @this: com.thealgorithms.sorts.CountingSort;
r3 := @parameter0: java.util.List;
$r0 = new java.util.TreeMap;
specialinvoke $r0.<java.util.TreeMap: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
$i0 = interfaceinvoke r3.<java.util.List: int size()>();
specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);
r4 = $r2;
$r5 = staticinvoke <com.thealgorithms.sorts.CountingSort$lambda_sort_0__101: java.util.function.Consumer bootstrap$(java.util.Map)>(r1);
interfaceinvoke r3.<java.util.List: void forEach(java.util.function.Consumer)>($r5);
$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map$Entry) $r8;
i2 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();
$r11 = (java.lang.Integer) $r10;
$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
if i2 >= $i1 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);
i2 = i2 + 1;
goto [?= $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 1 ] [succs: ]
return r4;
"
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @this: com.thealgorithms.sorts.CountingSort;
r3 := @parameter0: java.util.List;
$r0 = new java.util.TreeMap;
specialinvoke $r0.<java.util.TreeMap: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
$i0 = interfaceinvoke r3.<java.util.List: int size()>();
specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);
r4 = $r2;
$r5 = staticinvoke <com.thealgorithms.sorts.CountingSort$lambda_sort_0__101: java.util.function.Consumer bootstrap$(java.util.Map)>(r1);
interfaceinvoke r3.<java.util.List: void forEach(java.util.function.Consumer)>($r5);
$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map$Entry) $r8;
i2 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"->"Block 6:
[preds: 1 ] [succs: ]
return r4;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map$Entry) $r8;
i2 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();
$r11 = (java.lang.Integer) $r10;
$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
if i2 >= $i1 goto (branch);
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();
$r11 = (java.lang.Integer) $r10;
$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
if i2 >= $i1 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);
i2 = i2 + 1;
goto [?= $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();
$r11 = (java.lang.Integer) $r10;
$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
if i2 >= $i1 goto (branch);
"->"Block 5:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);
i2 = i2 + 1;
goto [?= $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();
$r11 = (java.lang.Integer) $r10;
$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
if i2 >= $i1 goto (branch);
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
";
}
