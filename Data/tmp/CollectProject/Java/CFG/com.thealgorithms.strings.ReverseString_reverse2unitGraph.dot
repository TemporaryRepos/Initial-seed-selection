digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "if r0 == null goto return r0"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"
    "if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "return r0"
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "i3 = 0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "i4 = $i0 - 1"
    "if i3 >= i4 goto $r2 = new java.lang.String"
    "c1 = r1[i3]"
    "$c2 = r1[i4]"
    "r1[i3] = $c2"
    "r1[i4] = c1"
    "i3 = i3 + 1"
    "i4 = i4 + -1"
    "goto [?= (branch)]"
    "$r2 = new java.lang.String"
    "specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1)"
    "return $r2"
    "r0 := @parameter0: java.lang.String"->"if r0 == null goto return r0";
    "if r0 == null goto return r0"->"$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()";
    "if r0 == null goto return r0"->"return r0";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()"->"if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"return r0";
    "if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"i3 = 0";
    "i3 = 0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"i4 = $i0 - 1";
    "i4 = $i0 - 1"->"if i3 >= i4 goto $r2 = new java.lang.String";
    "if i3 >= i4 goto $r2 = new java.lang.String"->"c1 = r1[i3]";
    "if i3 >= i4 goto $r2 = new java.lang.String"->"$r2 = new java.lang.String";
    "c1 = r1[i3]"->"$c2 = r1[i4]";
    "$c2 = r1[i4]"->"r1[i3] = $c2";
    "r1[i3] = $c2"->"r1[i4] = c1";
    "r1[i4] = c1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"i4 = i4 + -1";
    "i4 = i4 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i4 goto $r2 = new java.lang.String";
    "$r2 = new java.lang.String"->"specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1)";
    "specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1)"->"return $r2";
}
