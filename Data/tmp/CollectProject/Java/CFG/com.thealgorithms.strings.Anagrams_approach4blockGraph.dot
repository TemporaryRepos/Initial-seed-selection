digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto $r2 = new java.util.HashMap;
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.util.HashMap;
specialinvoke $r2.<java.util.HashMap: void <init>()>();
r3 = $r2;
$r4 = new java.util.HashMap;
specialinvoke $r4.<java.util.HashMap: void <init>()>();
r5 = $r4;
r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i6 = lengthof r21;
i7 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
c8 = r21[i7];
$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15);
$r17 = (java.lang.Integer) $r16;
$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();
$i5 = $i4 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18);
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
i9 = lengthof r22;
i10 = 0;
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
c11 = r22[i10];
$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8);
$r10 = (java.lang.Integer) $r9;
$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 6 ] [succs: ]
$z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
return $z0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto $r2 = new java.util.HashMap;
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r20 := @this: com.thealgorithms.strings.Anagrams;
r0 := @parameter0: java.lang.String;
r1 := @parameter1: java.lang.String;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if $i0 == $i1 goto $r2 = new java.util.HashMap;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.util.HashMap;
specialinvoke $r2.<java.util.HashMap: void <init>()>();
r3 = $r2;
$r4 = new java.util.HashMap;
specialinvoke $r4.<java.util.HashMap: void <init>()>();
r5 = $r4;
r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i6 = lengthof r21;
i7 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r2 = new java.util.HashMap;
specialinvoke $r2.<java.util.HashMap: void <init>()>();
r3 = $r2;
$r4 = new java.util.HashMap;
specialinvoke $r4.<java.util.HashMap: void <init>()>();
r5 = $r4;
r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i6 = lengthof r21;
i7 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
"->"Block 4:
[preds: 3 ] [succs: 3 ]
c8 = r21[i7];
$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15);
$r17 = (java.lang.Integer) $r16;
$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();
$i5 = $i4 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18);
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
"->"Block 5:
[preds: 3 ] [succs: 6 ]
r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
i9 = lengthof r22;
i10 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
c8 = r21[i7];
$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8);
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15);
$r17 = (java.lang.Integer) $r16;
$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();
$i5 = $i4 + 1;
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18);
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
i9 = lengthof r22;
i10 = 0;
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
"->"Block 7:
[preds: 6 ] [succs: 6 ]
c11 = r22[i10];
$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8);
$r10 = (java.lang.Integer) $r9;
$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
"->"Block 8:
[preds: 6 ] [succs: ]
$z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
return $z0;
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
c11 = r22[i10];
$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11);
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8);
$r10 = (java.lang.Integer) $r9;
$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5);
";
}
