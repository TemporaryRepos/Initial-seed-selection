digraph "unitGraph" {
    "r0 := @this: com.thealgorithms.searches.UnionFind"
    "i0 := @parameter0: int"
    "$r1 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"
    "i1 = $r1[i0]"
    "if i0 != i1 goto $r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"
    "return i0"
    "$r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"
    "$i2 = virtualinvoke r0.<com.thealgorithms.searches.UnionFind: int find(int)>(i1)"
    "$r2[i0] = $i2"
    "return $i2"
    "r0 := @this: com.thealgorithms.searches.UnionFind"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"$r1 = r0.<com.thealgorithms.searches.UnionFind: int[] p>";
    "$r1 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"->"i1 = $r1[i0]";
    "i1 = $r1[i0]"->"if i0 != i1 goto $r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>";
    "if i0 != i1 goto $r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"->"return i0";
    "if i0 != i1 goto $r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"->"$r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>";
    "$r2 = r0.<com.thealgorithms.searches.UnionFind: int[] p>"->"$i2 = virtualinvoke r0.<com.thealgorithms.searches.UnionFind: int find(int)>(i1)";
    "$i2 = virtualinvoke r0.<com.thealgorithms.searches.UnionFind: int find(int)>(i1)"->"$r2[i0] = $i2";
    "$r2[i0] = $i2"->"return $i2";
}
