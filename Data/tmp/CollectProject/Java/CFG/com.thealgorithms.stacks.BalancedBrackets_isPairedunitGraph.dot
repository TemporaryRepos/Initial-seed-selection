digraph "unitGraph" {
    "c1 := @parameter0: char"
    "c3 := @parameter1: char"
    "$r0 = newarray (char[])[4]"
    "$r1 = newarray (char)[2]"
    "$r1[0] = 40"
    "$r1[1] = 41"
    "$r0[0] = $r1"
    "$r2 = newarray (char)[2]"
    "$r2[0] = 91"
    "$r2[1] = 93"
    "$r0[1] = $r2"
    "$r3 = newarray (char)[2]"
    "$r3[0] = 123"
    "$r3[1] = 125"
    "$r0[2] = $r3"
    "$r4 = newarray (char)[2]"
    "$r4[0] = 60"
    "$r4[1] = 62"
    "$r0[3] = $r4"
    "r5 = $r0"
    "r6 = r5"
    "i0 = lengthof r6"
    "i5 = 0"
    "if i5 >= i0 goto return 0"
    "r7 = r6[i5]"
    "$c2 = r7[0]"
    "if $c2 != c1 goto i5 = i5 + 1"
    "$c4 = r7[1]"
    "if $c4 != c3 goto i5 = i5 + 1"
    "return 1"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "return 0"
    "c1 := @parameter0: char"->"c3 := @parameter1: char";
    "c3 := @parameter1: char"->"$r0 = newarray (char[])[4]";
    "$r0 = newarray (char[])[4]"->"$r1 = newarray (char)[2]";
    "$r1 = newarray (char)[2]"->"$r1[0] = 40";
    "$r1[0] = 40"->"$r1[1] = 41";
    "$r1[1] = 41"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = newarray (char)[2]";
    "$r2 = newarray (char)[2]"->"$r2[0] = 91";
    "$r2[0] = 91"->"$r2[1] = 93";
    "$r2[1] = 93"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = newarray (char)[2]";
    "$r3 = newarray (char)[2]"->"$r3[0] = 123";
    "$r3[0] = 123"->"$r3[1] = 125";
    "$r3[1] = 125"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = newarray (char)[2]";
    "$r4 = newarray (char)[2]"->"$r4[0] = 60";
    "$r4[0] = 60"->"$r4[1] = 62";
    "$r4[1] = 62"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"r5 = $r0";
    "r5 = $r0"->"r6 = r5";
    "r6 = r5"->"i0 = lengthof r6";
    "i0 = lengthof r6"->"i5 = 0";
    "i5 = 0"->"if i5 >= i0 goto return 0";
    "if i5 >= i0 goto return 0"->"r7 = r6[i5]";
    "if i5 >= i0 goto return 0"->"return 0";
    "r7 = r6[i5]"->"$c2 = r7[0]";
    "$c2 = r7[0]"->"if $c2 != c1 goto i5 = i5 + 1";
    "if $c2 != c1 goto i5 = i5 + 1"->"$c4 = r7[1]";
    "if $c2 != c1 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$c4 = r7[1]"->"if $c4 != c3 goto i5 = i5 + 1";
    "if $c4 != c3 goto i5 = i5 + 1"->"return 1";
    "if $c4 != c3 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i0 goto return 0";
}
