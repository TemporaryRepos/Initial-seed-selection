digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r13 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.queues.CircularQueue;
specialinvoke $r0.<com.thealgorithms.datastructures.queues.CircularQueue: void <init>(int)>(5);
r1 = $r0;
$r2 = <java.lang.System: java.io.PrintStream out>;
$z0 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: boolean isEmpty()>();
virtualinvoke $r2.<java.io.PrintStream: void println(boolean)>($z0);
$r3 = <java.lang.System: java.io.PrintStream out>;
$z1 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: boolean isFull()>();
virtualinvoke $r3.<java.io.PrintStream: void println(boolean)>($z1);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(1);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(2);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(3);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(4);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(5);
$r4 = <java.lang.System: java.io.PrintStream out>;
$i0 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int deQueue()>();
virtualinvoke $r4.<java.io.PrintStream: void println(int)>($i0);
$r5 = <java.lang.System: java.io.PrintStream out>;
$i1 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int deQueue()>();
virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i1);
$r6 = <java.lang.System: java.io.PrintStream out>;
$i2 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int deQueue()>();
virtualinvoke $r6.<java.io.PrintStream: void println(int)>($i2);
$r7 = <java.lang.System: java.io.PrintStream out>;
$i3 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int deQueue()>();
virtualinvoke $r7.<java.io.PrintStream: void println(int)>($i3);
$r8 = <java.lang.System: java.io.PrintStream out>;
$i4 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int deQueue()>();
virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i4);
$r9 = <java.lang.System: java.io.PrintStream out>;
$z2 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: boolean isFull()>();
virtualinvoke $r9.<java.io.PrintStream: void println(boolean)>($z2);
$r10 = <java.lang.System: java.io.PrintStream out>;
$z3 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: boolean isEmpty()>();
virtualinvoke $r10.<java.io.PrintStream: void println(boolean)>($z3);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(6);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(7);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void enQueue(int)>(8);
$r11 = <java.lang.System: java.io.PrintStream out>;
$i5 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int peek()>();
virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i5);
$r12 = <java.lang.System: java.io.PrintStream out>;
$i6 = virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: int peek()>();
virtualinvoke $r12.<java.io.PrintStream: void println(int)>($i6);
virtualinvoke r1.<com.thealgorithms.datastructures.queues.CircularQueue: void deleteQueue()>();
return;
"
}
