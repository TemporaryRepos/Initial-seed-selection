digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 11 ]
i1 := @parameter0: int;
r1 := @parameter1: java.util.List;
r0 := @parameter2: int[];
i0 := @parameter3: int;
if i0 != i1 goto i6 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r8 = $r2;
i4 = 0;
"
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i4 >= i1 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i5 = 0;
"
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i5 >= i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r0[i4];
if i5 != $i3 goto $r9 = \".\";
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r9 = \"Q\";
goto [?= virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r9 = \".\";
"
    "Block 8:
[preds: 6 7 ] [succs: 4 ]
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 4 ] [succs: 2 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r5);
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 2 ] [succs: ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
return;
"
    "Block 11:
[preds: 0 ] [succs: 12 ]
i6 = 0;
"
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i6 >= i1 goto return;
"
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r0[i0] = i6;
$z0 = staticinvoke <com.thealgorithms.backtracking.NQueens: boolean isPlacedCorrectly(int[],int,int)>(r0, i6, i0);
if $z0 == 0 goto i6 = i6 + 1;
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
$i2 = i0 + 1;
staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i1, r1, r0, $i2);
"
    "Block 15:
[preds: 13 14 ] [succs: 12 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 16:
[preds: 12 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 11 ]
i1 := @parameter0: int;
r1 := @parameter1: java.util.List;
r0 := @parameter2: int[];
i0 := @parameter3: int;
if i0 != i1 goto i6 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r8 = $r2;
i4 = 0;
";
    "Block 0:
[preds: ] [succs: 1 11 ]
i1 := @parameter0: int;
r1 := @parameter1: java.util.List;
r0 := @parameter2: int[];
i0 := @parameter3: int;
if i0 != i1 goto i6 = 0;
"->"Block 11:
[preds: 0 ] [succs: 12 ]
i6 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r8 = $r2;
i4 = 0;
"->"Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i4 >= i1 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
";
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i4 >= i1 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i5 = 0;
";
    "Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i4 >= i1 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
"->"Block 10:
[preds: 2 ] [succs: ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i5 = 0;
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i5 >= i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i5 >= i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r0[i4];
if i5 != $i3 goto $r9 = \".\";
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i5 >= i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 9:
[preds: 4 ] [succs: 2 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r5);
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r0[i4];
if i5 != $i3 goto $r9 = \".\";
"->"Block 6:
[preds: 5 ] [succs: 8 ]
$r9 = \"Q\";
goto [?= virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i3 = r0[i4];
if i5 != $i3 goto $r9 = \".\";
"->"Block 7:
[preds: 5 ] [succs: 8 ]
$r9 = \".\";
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
$r9 = \"Q\";
goto [?= virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)];
"->"Block 8:
[preds: 6 7 ] [succs: 4 ]
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
$r9 = \".\";
"->"Block 8:
[preds: 6 7 ] [succs: 4 ]
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 4 ]
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i5 >= i1 goto $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 9:
[preds: 4 ] [succs: 2 ]
$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r5);
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 2:
[preds: 1 9 ] [succs: 3 10 ]
if i4 >= i1 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);
";
    "Block 11:
[preds: 0 ] [succs: 12 ]
i6 = 0;
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i6 >= i1 goto return;
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i6 >= i1 goto return;
"->"Block 13:
[preds: 12 ] [succs: 14 15 ]
r0[i0] = i6;
$z0 = staticinvoke <com.thealgorithms.backtracking.NQueens: boolean isPlacedCorrectly(int[],int,int)>(r0, i6, i0);
if $z0 == 0 goto i6 = i6 + 1;
";
    "Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i6 >= i1 goto return;
"->"Block 16:
[preds: 12 ] [succs: ]
return;
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r0[i0] = i6;
$z0 = staticinvoke <com.thealgorithms.backtracking.NQueens: boolean isPlacedCorrectly(int[],int,int)>(r0, i6, i0);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 14:
[preds: 13 ] [succs: 15 ]
$i2 = i0 + 1;
staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i1, r1, r0, $i2);
";
    "Block 13:
[preds: 12 ] [succs: 14 15 ]
r0[i0] = i6;
$z0 = staticinvoke <com.thealgorithms.backtracking.NQueens: boolean isPlacedCorrectly(int[],int,int)>(r0, i6, i0);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 15:
[preds: 13 14 ] [succs: 12 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
$i2 = i0 + 1;
staticinvoke <com.thealgorithms.backtracking.NQueens: void getSolution(int,java.util.List,int[],int)>(i1, r1, r0, $i2);
"->"Block 15:
[preds: 13 14 ] [succs: 12 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 15:
[preds: 13 14 ] [succs: 12 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 12:
[preds: 11 15 ] [succs: 13 16 ]
if i6 >= i1 goto return;
";
}
