digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r20 = \"\";
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
"
    "Block 1:
[preds: 0 ] [succs: ]
return r20;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
if $z1 != 0 goto $r1 = new java.util.Stack;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r19 = new java.lang.IllegalArgumentException;
specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid Postfix Expression\");
throw $r19;
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = new java.util.Stack;
specialinvoke $r1.<java.util.Stack: void <init>()>();
r2 = $r1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i3 = 0;
"
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1);
if $z2 != 0 goto c2 = c1;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1);
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17);
goto [?= i3 = i3 + 1];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
c2 = c1;
$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r7 = (java.lang.String) $r6;
$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r9 = (java.lang.String) $r8;
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15);
virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);
"
    "Block 9:
[preds: 7 8 ] [succs: 5 ]
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
"
    "Block 10:
[preds: 5 ] [succs: ]
$r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r21 = (java.lang.String) $r5;
return r21;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r20 = \"\";
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
"->"Block 1:
[preds: 0 ] [succs: ]
return r20;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
r20 = \"\";
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto $z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
if $z1 != 0 goto $r1 = new java.util.Stack;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
if $z1 != 0 goto $r1 = new java.util.Stack;
"->"Block 3:
[preds: 2 ] [succs: ]
$r19 = new java.lang.IllegalArgumentException;
specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid Postfix Expression\");
throw $r19;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$z1 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isValidPostfixExpression(java.lang.String)>(r0);
if $z1 != 0 goto $r1 = new java.util.Stack;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = new java.util.Stack;
specialinvoke $r1.<java.util.Stack: void <init>()>();
r2 = $r1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i3 = 0;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = new java.util.Stack;
specialinvoke $r1.<java.util.Stack: void <init>()>();
r2 = $r1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
r4 = $r3;
i3 = 0;
"->"Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
";
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1);
if $z2 != 0 goto c2 = c1;
";
    "Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
"->"Block 10:
[preds: 5 ] [succs: ]
$r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r21 = (java.lang.String) $r5;
return r21;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1);
if $z2 != 0 goto c2 = c1;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1);
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17);
goto [?= i3 = i3 + 1];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
$z2 = staticinvoke <com.thealgorithms.stacks.PostfixToInfix: boolean isOperator(char)>(c1);
if $z2 != 0 goto c2 = c1;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
c2 = c1;
$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r7 = (java.lang.String) $r6;
$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r9 = (java.lang.String) $r8;
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15);
virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c1);
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r17);
goto [?= i3 = i3 + 1];
"->"Block 9:
[preds: 7 8 ] [succs: 5 ]
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
c2 = c1;
$r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r7 = (java.lang.String) $r6;
$r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
r9 = (java.lang.String) $r8;
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
$r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15);
virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);
"->"Block 9:
[preds: 7 8 ] [succs: 5 ]
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 9:
[preds: 7 8 ] [succs: 5 ]
i3 = i3 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
"->"Block 5:
[preds: 4 9 ] [succs: 6 10 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i3 >= $i0 goto $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
";
}
