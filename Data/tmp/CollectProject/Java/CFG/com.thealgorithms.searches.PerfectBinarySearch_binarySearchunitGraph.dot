digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i3 := @parameter1: int"
    "i6 = 0"
    "$i0 = lengthof r0"
    "i7 = $i0 - 1"
    "if i6 > i7 goto return -1"
    "$i1 = i6 + i7"
    "i2 = $i1 / 2"
    "$i4 = r0[i2]"
    "if $i4 != i3 goto $i5 = r0[i2]"
    "return i2"
    "$i5 = r0[i2]"
    "if $i5 <= i3 goto i6 = i2 + 1"
    "i7 = i2 - 1"
    "goto [?= (branch)]"
    "i6 = i2 + 1"
    "return -1"
    "r0 := @parameter0: int[]"->"i3 := @parameter1: int";
    "i3 := @parameter1: int"->"i6 = 0";
    "i6 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"i7 = $i0 - 1";
    "i7 = $i0 - 1"->"if i6 > i7 goto return -1";
    "if i6 > i7 goto return -1"->"$i1 = i6 + i7";
    "if i6 > i7 goto return -1"->"return -1";
    "$i1 = i6 + i7"->"i2 = $i1 / 2";
    "i2 = $i1 / 2"->"$i4 = r0[i2]";
    "$i4 = r0[i2]"->"if $i4 != i3 goto $i5 = r0[i2]";
    "if $i4 != i3 goto $i5 = r0[i2]"->"return i2";
    "if $i4 != i3 goto $i5 = r0[i2]"->"$i5 = r0[i2]";
    "$i5 = r0[i2]"->"if $i5 <= i3 goto i6 = i2 + 1";
    "if $i5 <= i3 goto i6 = i2 + 1"->"i7 = i2 - 1";
    "if $i5 <= i3 goto i6 = i2 + 1"->"i6 = i2 + 1";
    "i7 = i2 - 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "i6 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 > i7 goto return -1";
}
