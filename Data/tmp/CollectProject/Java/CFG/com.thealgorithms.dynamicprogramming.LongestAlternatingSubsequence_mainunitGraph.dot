digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = newarray (int)[8]"
    "$r0[0] = 10"
    "$r0[1] = 22"
    "$r0[2] = 9"
    "$r0[3] = 33"
    "$r0[4] = 49"
    "$r0[5] = 50"
    "$r0[6] = 31"
    "$r0[7] = 60"
    "r1 = $r0"
    "i0 = lengthof r1"
    "$r3 = <java.lang.System: java.io.PrintStream out>"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Length of Longest alternating subsequence is \")"
    "$i1 = staticinvoke <com.thealgorithms.dynamicprogramming.LongestAlternatingSubsequence: int AlternatingLength(int[],int)>(r1, i0)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = newarray (int)[8]";
    "$r0 = newarray (int)[8]"->"$r0[0] = 10";
    "$r0[0] = 10"->"$r0[1] = 22";
    "$r0[1] = 22"->"$r0[2] = 9";
    "$r0[2] = 9"->"$r0[3] = 33";
    "$r0[3] = 33"->"$r0[4] = 49";
    "$r0[4] = 49"->"$r0[5] = 50";
    "$r0[5] = 50"->"$r0[6] = 31";
    "$r0[6] = 31"->"$r0[7] = 60";
    "$r0[7] = 60"->"r1 = $r0";
    "r1 = $r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"$r3 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = <java.lang.System: java.io.PrintStream out>"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Length of Longest alternating subsequence is \")";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Length of Longest alternating subsequence is \")"->"$i1 = staticinvoke <com.thealgorithms.dynamicprogramming.LongestAlternatingSubsequence: int AlternatingLength(int[],int)>(r1, i0)";
    "$i1 = staticinvoke <com.thealgorithms.dynamicprogramming.LongestAlternatingSubsequence: int AlternatingLength(int[],int)>(r1, i0)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)";
    "virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6)"->"return";
}
