digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String"
    "$r0 = new java.util.HashSet"
    "specialinvoke $r0.<java.util.HashSet: void <init>()>()"
    "r1 = $r0"
    "$r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()"
    "r5 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()"
    "i4 = 0"
    "$i0 = virtualinvoke r5.<java.lang.String: int length()>()"
    "if i4 >= $i0 goto $i1 = virtualinvoke r1.<java.util.HashSet: int size()>()"
    "$c2 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)"
    "if $c2 == 32 goto i4 = i4 + 1"
    "$c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)"
    "$r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)"
    "virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r3)"
    "i4 = i4 + 1"
    "goto [?= $i0 = virtualinvoke r5.<java.lang.String: int length()>()]"
    "$i1 = virtualinvoke r1.<java.util.HashSet: int size()>()"
    "if $i1 != 26 goto return 0"
    "return 1"
    "return 0"
    "r4 := @parameter0: java.lang.String"->"$r0 = new java.util.HashSet";
    "$r0 = new java.util.HashSet"->"specialinvoke $r0.<java.util.HashSet: void <init>()>()";
    "specialinvoke $r0.<java.util.HashSet: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()";
    "$r2 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()"->"r5 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()";
    "r5 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()"->"i4 = 0";
    "i4 = 0"->"$i0 = virtualinvoke r5.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r5.<java.lang.String: int length()>()"->"if i4 >= $i0 goto $i1 = virtualinvoke r1.<java.util.HashSet: int size()>()";
    "if i4 >= $i0 goto $i1 = virtualinvoke r1.<java.util.HashSet: int size()>()"->"$c2 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)";
    "if i4 >= $i0 goto $i1 = virtualinvoke r1.<java.util.HashSet: int size()>()"->"$i1 = virtualinvoke r1.<java.util.HashSet: int size()>()";
    "$c2 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)"->"if $c2 == 32 goto i4 = i4 + 1";
    "if $c2 == 32 goto i4 = i4 + 1"->"$c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)";
    "if $c2 == 32 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4)"->"$r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)";
    "$r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)"->"virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r3)";
    "virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r3)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i0 = virtualinvoke r5.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r5.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r5.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.util.HashSet: int size()>()"->"if $i1 != 26 goto return 0";
    "if $i1 != 26 goto return 0"->"return 1";
    "if $i1 != 26 goto return 0"->"return 0";
}
