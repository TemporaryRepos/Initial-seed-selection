digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i11 = 65535"
    "s0 = 4129"
    "r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()"
    "r2 = r1"
    "i1 = lengthof r2"
    "i12 = 0"
    "if i12 >= i1 goto i16 = i11 & 65535"
    "b2 = r2[i12]"
    "i13 = 0"
    "if i13 >= 8 goto i12 = i12 + 1"
    "$i3 = 7 - i13"
    "$i4 = b2 >> $i3"
    "$i5 = $i4 & 1"
    "if $i5 != 1 goto $b14 = 0"
    "$b14 = 1"
    "goto [?= b6 = $b14]"
    "$b14 = 0"
    "b6 = $b14"
    "$i7 = i11 >> 15"
    "$i8 = $i7 & 1"
    "if $i8 != 1 goto $b15 = 0"
    "$b15 = 1"
    "goto [?= b9 = $b15]"
    "$b15 = 0"
    "b9 = $b15"
    "i11 = i11 << 1"
    "$i10 = b9 ^ b6"
    "if $i10 == 0 goto i13 = i13 + 1"
    "i11 = i11 ^ s0"
    "i13 = i13 + 1"
    "goto [?= (branch)]"
    "i12 = i12 + 1"
    "i16 = i11 & 65535"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i16)"
    "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>()"
    "return $r4"
    "r0 := @parameter0: java.lang.String"->"i11 = 65535";
    "i11 = 65535"->"s0 = 4129";
    "s0 = 4129"->"r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()";
    "r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()"->"r2 = r1";
    "r2 = r1"->"i1 = lengthof r2";
    "i1 = lengthof r2"->"i12 = 0";
    "i12 = 0"->"if i12 >= i1 goto i16 = i11 & 65535";
    "if i12 >= i1 goto i16 = i11 & 65535"->"b2 = r2[i12]";
    "if i12 >= i1 goto i16 = i11 & 65535"->"i16 = i11 & 65535";
    "b2 = r2[i12]"->"i13 = 0";
    "i13 = 0"->"if i13 >= 8 goto i12 = i12 + 1";
    "if i13 >= 8 goto i12 = i12 + 1"->"$i3 = 7 - i13";
    "if i13 >= 8 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$i3 = 7 - i13"->"$i4 = b2 >> $i3";
    "$i4 = b2 >> $i3"->"$i5 = $i4 & 1";
    "$i5 = $i4 & 1"->"if $i5 != 1 goto $b14 = 0";
    "if $i5 != 1 goto $b14 = 0"->"$b14 = 1";
    "if $i5 != 1 goto $b14 = 0"->"$b14 = 0";
    "$b14 = 1"->"goto [?= b6 = $b14]";
    "goto [?= b6 = $b14]"->"b6 = $b14";
    "$b14 = 0"->"b6 = $b14";
    "b6 = $b14"->"$i7 = i11 >> 15";
    "$i7 = i11 >> 15"->"$i8 = $i7 & 1";
    "$i8 = $i7 & 1"->"if $i8 != 1 goto $b15 = 0";
    "if $i8 != 1 goto $b15 = 0"->"$b15 = 1";
    "if $i8 != 1 goto $b15 = 0"->"$b15 = 0";
    "$b15 = 1"->"goto [?= b9 = $b15]";
    "goto [?= b9 = $b15]"->"b9 = $b15";
    "$b15 = 0"->"b9 = $b15";
    "b9 = $b15"->"i11 = i11 << 1";
    "i11 = i11 << 1"->"$i10 = b9 ^ b6";
    "$i10 = b9 ^ b6"->"if $i10 == 0 goto i13 = i13 + 1";
    "if $i10 == 0 goto i13 = i13 + 1"->"i11 = i11 ^ s0";
    "if $i10 == 0 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "i11 = i11 ^ s0"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= 8 goto i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i1 goto i16 = i11 & 65535";
    "i16 = i11 & 65535"->"$r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i16)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i16)"->"$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>()";
    "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>()"->"return $r4";
}
