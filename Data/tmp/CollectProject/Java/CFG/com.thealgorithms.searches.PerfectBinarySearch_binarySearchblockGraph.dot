digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i3 := @parameter1: int;
i6 = 0;
$i0 = lengthof r0;
i7 = $i0 - 1;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 > i7 goto return -1;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i6 + i7;
i2 = $i1 / 2;
$i4 = r0[i2];
if $i4 != i3 goto $i5 = r0[i2];
"
    "Block 3:
[preds: 2 ] [succs: ]
return i2;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i5 = r0[i2];
if $i5 <= i3 goto i6 = i2 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
i7 = i2 - 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
i6 = i2 + 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 1 ]
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: ]
return -1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: int[];
i3 := @parameter1: int;
i6 = 0;
$i0 = lengthof r0;
i7 = $i0 - 1;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 > i7 goto return -1;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 > i7 goto return -1;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i6 + i7;
i2 = $i1 / 2;
$i4 = r0[i2];
if $i4 != i3 goto $i5 = r0[i2];
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 > i7 goto return -1;
"->"Block 8:
[preds: 1 ] [succs: ]
return -1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i6 + i7;
i2 = $i1 / 2;
$i4 = r0[i2];
if $i4 != i3 goto $i5 = r0[i2];
"->"Block 3:
[preds: 2 ] [succs: ]
return i2;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i6 + i7;
i2 = $i1 / 2;
$i4 = r0[i2];
if $i4 != i3 goto $i5 = r0[i2];
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$i5 = r0[i2];
if $i5 <= i3 goto i6 = i2 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i5 = r0[i2];
if $i5 <= i3 goto i6 = i2 + 1;
"->"Block 5:
[preds: 4 ] [succs: 7 ]
i7 = i2 - 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$i5 = r0[i2];
if $i5 <= i3 goto i6 = i2 + 1;
"->"Block 6:
[preds: 4 ] [succs: 7 ]
i6 = i2 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
i7 = i2 - 1;
goto [?= (branch)];
"->"Block 7:
[preds: 5 6 ] [succs: 1 ]
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
i6 = i2 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 1 ]
goto [?= (branch)];
";
    "Block 7:
[preds: 5 6 ] [succs: 1 ]
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i6 > i7 goto return -1;
";
}
