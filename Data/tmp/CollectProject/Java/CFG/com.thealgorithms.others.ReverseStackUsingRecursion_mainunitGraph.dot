digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\")"
    "i1 = 9"
    "if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"
    "$r7 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1)"
    "i1 = i1 + -1"
    "$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"
    "staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1)"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \")"
    "$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"
    "$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>()"
    "if $z0 != 0 goto return"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"
    "$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)"
    "goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>]"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)";
    "virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 10 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"STACK\")"->"i1 = 9";
    "i1 = 9"->"if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"$r7 = <java.lang.System: java.io.PrintStream out>";
    "if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "$r7 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1)";
    "virtualinvoke $r7.<java.io.PrintStream: void println(int)>(i1)"->"i1 = i1 + -1";
    "i1 = i1 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 < 0 goto $r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "$r1 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1)";
    "staticinvoke <com.thealgorithms.others.ReverseStackUsingRecursion: void reverseUsingRecursion(java.util.Stack)>($r1)"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"REVERSED STACK : \")"->"$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>()";
    "$z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>()"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto return"->"return";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
    "$r4 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>"->"$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>()";
    "$r6 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>($r6)"->"goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>]";
    "goto [?= $r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>]"->"$r3 = <com.thealgorithms.others.ReverseStackUsingRecursion: java.util.Stack stack>";
}
