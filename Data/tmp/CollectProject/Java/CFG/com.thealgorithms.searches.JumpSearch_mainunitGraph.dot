digraph "unitGraph" {
    "r21 := @parameter0: java.lang.String[]"
    "$r0 = new com.thealgorithms.searches.JumpSearch"
    "specialinvoke $r0.<com.thealgorithms.searches.JumpSearch: void <init>()>()"
    "r1 = $r0"
    "$r2 = newarray (java.lang.Integer)[11]"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r2[0] = $r3"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "$r2[1] = $r4"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "$r2[2] = $r5"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"
    "$r2[3] = $r6"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)"
    "$r2[4] = $r7"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)"
    "$r2[5] = $r8"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)"
    "$r2[6] = $r9"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)"
    "$r2[7] = $r10"
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)"
    "$r2[8] = $r11"
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)"
    "$r2[9] = $r12"
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"
    "$r2[10] = $r13"
    "r14 = $r2"
    "i4 = 0"
    "$i0 = lengthof r14"
    "if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "if $z2 != 0 goto i4 = i4 + 1"
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19)"
    "if $i3 == i4 goto i4 = i4 + 1"
    "$r20 = new java.lang.AssertionError"
    "specialinvoke $r20.<java.lang.AssertionError: void <init>()>()"
    "throw $r20"
    "i4 = i4 + 1"
    "goto [?= $i0 = lengthof r14]"
    "$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)"
    "$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17)"
    "if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "$r18 = new java.lang.AssertionError"
    "specialinvoke $r18.<java.lang.AssertionError: void <init>()>()"
    "throw $r18"
    "$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"
    "if $z1 != 0 goto return"
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11)"
    "$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15)"
    "if $i1 == -1 goto return"
    "$r16 = new java.lang.AssertionError"
    "specialinvoke $r16.<java.lang.AssertionError: void <init>()>()"
    "throw $r16"
    "return"
    "r21 := @parameter0: java.lang.String[]"->"$r0 = new com.thealgorithms.searches.JumpSearch";
    "$r0 = new com.thealgorithms.searches.JumpSearch"->"specialinvoke $r0.<com.thealgorithms.searches.JumpSearch: void <init>()>()";
    "specialinvoke $r0.<com.thealgorithms.searches.JumpSearch: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (java.lang.Integer)[11]";
    "$r2 = newarray (java.lang.Integer)[11]"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"$r2[1] = $r4";
    "$r2[1] = $r4"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"$r2[2] = $r5";
    "$r2[2] = $r5"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"->"$r2[3] = $r6";
    "$r2[3] = $r6"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)"->"$r2[4] = $r7";
    "$r2[4] = $r7"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)"->"$r2[5] = $r8";
    "$r2[5] = $r8"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)"->"$r2[6] = $r9";
    "$r2[6] = $r9"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)"->"$r2[7] = $r10";
    "$r2[7] = $r10"->"$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)";
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)"->"$r2[8] = $r11";
    "$r2[8] = $r11"->"$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)";
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)"->"$r2[9] = $r12";
    "$r2[9] = $r12"->"$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)";
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"->"$r2[10] = $r13";
    "$r2[10] = $r13"->"r14 = $r2";
    "r14 = $r2"->"i4 = 0";
    "i4 = 0"->"$i0 = lengthof r14";
    "$i0 = lengthof r14"->"if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "if i4 >= $i0 goto $z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "$z2 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"if $z2 != 0 goto i4 = i4 + 1";
    "if $z2 != 0 goto i4 = i4 + 1"->"$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "if $z2 != 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19)";
    "$i3 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r19)"->"if $i3 == i4 goto i4 = i4 + 1";
    "if $i3 == i4 goto i4 = i4 + 1"->"$r20 = new java.lang.AssertionError";
    "if $i3 == i4 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r20 = new java.lang.AssertionError"->"specialinvoke $r20.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r20.<java.lang.AssertionError: void <init>()>()"->"throw $r20";
    "i4 = i4 + 1"->"goto [?= $i0 = lengthof r14]";
    "goto [?= $i0 = lengthof r14]"->"$i0 = lengthof r14";
    "$z0 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)"->"$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17)";
    "$i2 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r17)"->"if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$r18 = new java.lang.AssertionError";
    "if $i2 == -1 goto $z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>";
    "$r18 = new java.lang.AssertionError"->"specialinvoke $r18.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r18.<java.lang.AssertionError: void <init>()>()"->"throw $r18";
    "$z1 = <com.thealgorithms.searches.JumpSearch: boolean $assertionsDisabled>"->"if $z1 != 0 goto return";
    "if $z1 != 0 goto return"->"$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11)";
    "if $z1 != 0 goto return"->"return";
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11)"->"$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15)";
    "$i1 = virtualinvoke r1.<com.thealgorithms.searches.JumpSearch: int find(java.lang.Comparable[],java.lang.Comparable)>(r14, $r15)"->"if $i1 == -1 goto return";
    "if $i1 == -1 goto return"->"$r16 = new java.lang.AssertionError";
    "if $i1 == -1 goto return"->"return";
    "$r16 = new java.lang.AssertionError"->"specialinvoke $r16.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r16.<java.lang.AssertionError: void <init>()>()"->"throw $r16";
}
