digraph "unitGraph" {
    "r1 := @this: com.thealgorithms.datastructures.trees.AVLTree"
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node"
    "if r0 == null goto return"
    "$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"
    "$i0 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)"
    "$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"
    "$i1 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3)"
    "$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1)"
    "$i3 = 1 + $i2"
    "staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$502(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>(r0, $i3)"
    "return"
    "r1 := @this: com.thealgorithms.datastructures.trees.AVLTree"->"r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node";
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node"->"if r0 == null goto return";
    "if r0 == null goto return"->"$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)";
    "if r0 == null goto return"->"return";
    "$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"->"$i0 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)";
    "$i0 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)"->"$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)";
    "$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"->"$i1 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3)";
    "$i1 = specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3)"->"$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1)";
    "$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1)"->"$i3 = 1 + $i2";
    "$i3 = 1 + $i2"->"staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$502(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>(r0, $i3)";
    "staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$502(com.thealgorithms.datastructures.trees.AVLTree$Node,int)>(r0, $i3)"->"return";
}
