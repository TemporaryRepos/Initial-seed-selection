digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r13 := @parameter0: java.lang.String[];
r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0);
$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r9 = new java.awt.Color;
specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);
$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>();
if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"
    "Block 2:
[preds: 1 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
throw $r10;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r7 = new java.awt.Color;
specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();
if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"
    "Block 5:
[preds: 4 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>()>();
throw $r8;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r5 = new java.awt.Color;
specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0);
$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();
if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"
    "Block 8:
[preds: 7 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
throw $r6;
"
    "Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 16 ]
$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r3 = new java.awt.Color;
specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();
if $i0 == $i1 goto $r2 = new java.io.File;
"
    "Block 11:
[preds: 10 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
throw $r4;
"
    "Block 12:
[preds: 9 10 ] [succs: 13 16 ]
$r2 = new java.io.File;
"
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\");
"
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2);
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= return];
"
    "Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
"
    "Block 17:
[preds: 15 16 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r13 := @parameter0: java.lang.String[];
r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0);
$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r9 = new java.awt.Color;
specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);
$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>();
if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r13 := @parameter0: java.lang.String[];
r0 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 0);
$z0 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r9 = new java.awt.Color;
specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);
$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>();
if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 2:
[preds: 1 ] [succs: ]
$r10 = new java.lang.AssertionError;
specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
throw $r10;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i6 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r9 = new java.awt.Color;
specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);
$i7 = virtualinvoke $r9.<java.awt.Color: int getRGB()>();
if $i6 == $i7 goto $z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 3:
[preds: 0 1 ] [succs: 4 6 ]
$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r7 = new java.awt.Color;
specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();
if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
";
    "Block 3:
[preds: 0 1 ] [succs: 4 6 ]
$z1 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z1 != 0 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r7 = new java.awt.Color;
specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();
if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"->"Block 5:
[preds: 4 ] [succs: ]
$r8 = new java.lang.AssertionError;
specialinvoke $r8.<java.lang.AssertionError: void <init>()>();
throw $r8;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r7 = new java.awt.Color;
specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i5 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();
if $i4 == $i5 goto r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r5 = new java.awt.Color;
specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0);
$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();
if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
r1 = staticinvoke <com.thealgorithms.others.Mandelbrot: java.awt.image.BufferedImage getImage(int,int,double,double,double,int,boolean)>(800, 600, -0.6, 0.0, 3.2, 50, 1);
$z2 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r5 = new java.awt.Color;
specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0);
$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();
if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 8:
[preds: 7 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
throw $r6;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(0, 0);
$r5 = new java.awt.Color;
specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(255, 0, 0);
$i3 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();
if $i2 == $i3 goto $z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
"->"Block 10:
[preds: 9 ] [succs: 11 12 16 ]
$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r3 = new java.awt.Color;
specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();
if $i0 == $i1 goto $r2 = new java.io.File;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
"->"Block 12:
[preds: 9 10 ] [succs: 13 16 ]
$r2 = new java.io.File;
";
    "Block 9:
[preds: 6 7 ] [succs: 10 12 16 ]
$z3 = <com.thealgorithms.others.Mandelbrot: boolean $assertionsDisabled>;
if $z3 != 0 goto $r2 = new java.io.File;
"->"Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 12 16 ]
$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r3 = new java.awt.Color;
specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();
if $i0 == $i1 goto $r2 = new java.io.File;
"->"Block 11:
[preds: 10 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
throw $r4;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 16 ]
$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r3 = new java.awt.Color;
specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();
if $i0 == $i1 goto $r2 = new java.io.File;
"->"Block 12:
[preds: 9 10 ] [succs: 13 16 ]
$r2 = new java.io.File;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 16 ]
$i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(400, 300);
$r3 = new java.awt.Color;
specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);
$i1 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();
if $i0 == $i1 goto $r2 = new java.io.File;
"->"Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
";
    "Block 12:
[preds: 9 10 ] [succs: 13 16 ]
$r2 = new java.io.File;
"->"Block 13:
[preds: 12 ] [succs: 14 16 ]
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\");
";
    "Block 12:
[preds: 9 10 ] [succs: 13 16 ]
$r2 = new java.io.File;
"->"Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\");
"->"Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2);
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(\"Mandelbrot.png\");
"->"Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2);
"->"Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= return];
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>(r1, \"png\", $r2);
"->"Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= return];
"->"Block 17:
[preds: 15 16 ] [succs: ]
return;
";
    "Block 16:
[preds: 9 10 12 13 14 ] [succs: 17 ]
$r11 := @caughtexception;
r12 = $r11;
virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
"->"Block 17:
[preds: 15 16 ] [succs: ]
return;
";
}
