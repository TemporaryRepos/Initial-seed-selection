digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[4];
$r0[0] = \"ABC\";
$r0[1] = \"ABC123\";
$r0[2] = \"abcABC\";
$r0[3] = \"abc123ABC\";
r1 = $r0;
r2 = r1;
i0 = lengthof r2;
i1 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
r3 = r2[i1];
$z0 = <com.thealgorithms.strings.Upper: boolean $assertionsDisabled>;
if $z0 != 0 goto i1 = i1 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r4 = staticinvoke <com.thealgorithms.strings.Upper: java.lang.String toUpperCase(java.lang.String)>(r3);
$r5 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();
$z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i1 = i1 + 1;
"
    "Block 4:
[preds: 3 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
throw $r6;
"
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.String)[4];
$r0[0] = \"ABC\";
$r0[1] = \"ABC123\";
$r0[2] = \"abcABC\";
$r0[3] = \"abc123ABC\";
r1 = $r0;
r2 = r1;
i0 = lengthof r2;
i1 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
r3 = r2[i1];
$z0 = <com.thealgorithms.strings.Upper: boolean $assertionsDisabled>;
if $z0 != 0 goto i1 = i1 + 1;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 6:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
r3 = r2[i1];
$z0 = <com.thealgorithms.strings.Upper: boolean $assertionsDisabled>;
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r4 = staticinvoke <com.thealgorithms.strings.Upper: java.lang.String toUpperCase(java.lang.String)>(r3);
$r5 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();
$z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i1 = i1 + 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
r3 = r2[i1];
$z0 = <com.thealgorithms.strings.Upper: boolean $assertionsDisabled>;
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r4 = staticinvoke <com.thealgorithms.strings.Upper: java.lang.String toUpperCase(java.lang.String)>(r3);
$r5 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();
$z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 3 ] [succs: ]
$r6 = new java.lang.AssertionError;
specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
throw $r6;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r4 = staticinvoke <com.thealgorithms.strings.Upper: java.lang.String toUpperCase(java.lang.String)>(r3);
$r5 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();
$z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
if $z1 != 0 goto i1 = i1 + 1;
"->"Block 5:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
}
