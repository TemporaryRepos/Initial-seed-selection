digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i2 = i0;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i2 % 2;
if $i1 != 0 goto $d0 = (double) i2;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$d9 = (double) i2;
$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);
$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10);
i3 = (int) $d11;
goto [?= i2 = i3];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$d0 = (double) i2;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$d2 = (double) i2;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = $d1 * $d3;
$d4 = (double) i2;
$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);
$d7 = $d5 * $d6;
$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7);
i3 = (int) $d8;
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i2 = i3;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r11);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i2 = i0;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i2 % 2;
if $i1 != 0 goto $d0 = (double) i2;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
"->"Block 6:
[preds: 1 ] [succs: ]
r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r11);
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i2 % 2;
if $i1 != 0 goto $d0 = (double) i2;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$d9 = (double) i2;
$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);
$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10);
i3 = (int) $d11;
goto [?= i2 = i3];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = i2 % 2;
if $i1 != 0 goto $d0 = (double) i2;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$d0 = (double) i2;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$d2 = (double) i2;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = $d1 * $d3;
$d4 = (double) i2;
$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);
$d7 = $d5 * $d6;
$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7);
i3 = (int) $d8;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$d9 = (double) i2;
$d10 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);
$d11 = staticinvoke <java.lang.Math: double floor(double)>($d10);
i3 = (int) $d11;
goto [?= i2 = i3];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i2 = i3;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$d0 = (double) i2;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
$d2 = (double) i2;
$d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
$d5 = $d1 * $d3;
$d4 = (double) i2;
$d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);
$d7 = $d5 * $d6;
$d8 = staticinvoke <java.lang.Math: double floor(double)>($d7);
i3 = (int) $d8;
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i2 = i3;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i2 = i3;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i2 == 1 goto r11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(\",\", r1);
";
}
