digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "r0 = \"ABC\""
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"All the permutations of the string are: \")"
    "staticinvoke <com.thealgorithms.strings.PermuteString: void generatePermutation(java.lang.String,int,int)>(r0, 0, i0)"
    "return"
    "r2 := @parameter0: java.lang.String[]"->"r0 = \"ABC\"";
    "r0 = \"ABC\""->"i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"All the permutations of the string are: \")";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"All the permutations of the string are: \")"->"staticinvoke <com.thealgorithms.strings.PermuteString: void generatePermutation(java.lang.String,int,int)>(r0, 0, i0)";
    "staticinvoke <com.thealgorithms.strings.PermuteString: void generatePermutation(java.lang.String,int,int)>(r0, 0, i0)"->"return";
}
