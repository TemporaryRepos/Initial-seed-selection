digraph "unitGraph" {
    "i3 := @parameter0: int"
    "if i3 >= 0 goto $i4 = i3"
    "$i4 = neg i3"
    "goto [?= i5 = $i4]"
    "$i4 = i3"
    "i5 = $i4"
    "if i5 >= 10 goto $i1 = i5 % 10"
    "$i6 = i5"
    "goto [?= return $i6]"
    "$i1 = i5 % 10"
    "$i0 = i5 / 10"
    "$i2 = staticinvoke <com.thealgorithms.maths.SumOfDigits: int sumOfDigitsRecursion(int)>($i0)"
    "$i6 = $i1 + $i2"
    "return $i6"
    "i3 := @parameter0: int"->"if i3 >= 0 goto $i4 = i3";
    "if i3 >= 0 goto $i4 = i3"->"$i4 = neg i3";
    "if i3 >= 0 goto $i4 = i3"->"$i4 = i3";
    "$i4 = neg i3"->"goto [?= i5 = $i4]";
    "goto [?= i5 = $i4]"->"i5 = $i4";
    "$i4 = i3"->"i5 = $i4";
    "i5 = $i4"->"if i5 >= 10 goto $i1 = i5 % 10";
    "if i5 >= 10 goto $i1 = i5 % 10"->"$i6 = i5";
    "if i5 >= 10 goto $i1 = i5 % 10"->"$i1 = i5 % 10";
    "$i6 = i5"->"goto [?= return $i6]";
    "goto [?= return $i6]"->"return $i6";
    "$i1 = i5 % 10"->"$i0 = i5 / 10";
    "$i0 = i5 / 10"->"$i2 = staticinvoke <com.thealgorithms.maths.SumOfDigits: int sumOfDigitsRecursion(int)>($i0)";
    "$i2 = staticinvoke <com.thealgorithms.maths.SumOfDigits: int sumOfDigitsRecursion(int)>($i0)"->"$i6 = $i1 + $i2";
    "$i6 = $i1 + $i2"->"return $i6";
}
