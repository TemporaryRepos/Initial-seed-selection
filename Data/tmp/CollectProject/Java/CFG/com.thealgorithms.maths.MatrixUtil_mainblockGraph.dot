digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r84 := @parameter0: java.lang.String[];
$r0 = newarray (java.math.BigDecimal[])[2];
$r1 = newarray (java.math.BigDecimal)[2];
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(int)>(3);
$r1[0] = $r2;
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(int)>(2);
$r1[1] = $r3;
$r0[0] = $r1;
$r4 = newarray (java.math.BigDecimal)[2];
$r5 = new java.math.BigDecimal;
specialinvoke $r5.<java.math.BigDecimal: void <init>(int)>(0);
$r4[0] = $r5;
$r6 = new java.math.BigDecimal;
specialinvoke $r6.<java.math.BigDecimal: void <init>(int)>(1);
$r4[1] = $r6;
$r0[1] = $r4;
r85 = $r0;
$r7 = newarray (java.math.BigDecimal[])[2];
$r8 = newarray (java.math.BigDecimal)[2];
$r9 = new java.math.BigDecimal;
specialinvoke $r9.<java.math.BigDecimal: void <init>(int)>(1);
$r8[0] = $r9;
$r10 = new java.math.BigDecimal;
specialinvoke $r10.<java.math.BigDecimal: void <init>(int)>(3);
$r8[1] = $r10;
$r7[0] = $r8;
$r11 = newarray (java.math.BigDecimal)[2];
$r12 = new java.math.BigDecimal;
specialinvoke $r12.<java.math.BigDecimal: void <init>(int)>(2);
$r11[0] = $r12;
$r13 = new java.math.BigDecimal;
specialinvoke $r13.<java.math.BigDecimal: void <init>(int)>(0);
$r11[1] = $r13;
$r7[1] = $r11;
r86 = $r7;
$r14 = staticinvoke <com.thealgorithms.maths.MatrixUtil: java.util.Optional add(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r85, r86);
$r15 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_main_5__93: java.util.function.Supplier bootstrap$()>();
$r16 = virtualinvoke $r14.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r15);
r87 = (java.math.BigDecimal[][]) $r16;
$r17 = newarray (java.math.BigDecimal[])[2];
$r18 = newarray (java.math.BigDecimal)[2];
$r19 = new java.math.BigDecimal;
specialinvoke $r19.<java.math.BigDecimal: void <init>(int)>(4);
$r18[0] = $r19;
$r20 = new java.math.BigDecimal;
specialinvoke $r20.<java.math.BigDecimal: void <init>(int)>(5);
$r18[1] = $r20;
$r17[0] = $r18;
$r21 = newarray (java.math.BigDecimal)[2];
$r22 = new java.math.BigDecimal;
specialinvoke $r22.<java.math.BigDecimal: void <init>(int)>(2);
$r21[0] = $r22;
$r23 = new java.math.BigDecimal;
specialinvoke $r23.<java.math.BigDecimal: void <init>(int)>(1);
$r21[1] = $r23;
$r17[1] = $r21;
r88 = $r17;
staticinvoke <com.thealgorithms.maths.MatrixUtil: void assertThat(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r87, r88);
$r24 = newarray (java.math.BigDecimal[])[2];
$r25 = newarray (java.math.BigDecimal)[2];
$r26 = new java.math.BigDecimal;
specialinvoke $r26.<java.math.BigDecimal: void <init>(int)>(1);
$r25[0] = $r26;
$r27 = new java.math.BigDecimal;
specialinvoke $r27.<java.math.BigDecimal: void <init>(int)>(4);
$r25[1] = $r27;
$r24[0] = $r25;
$r28 = newarray (java.math.BigDecimal)[2];
$r29 = new java.math.BigDecimal;
specialinvoke $r29.<java.math.BigDecimal: void <init>(int)>(5);
$r28[0] = $r29;
$r30 = new java.math.BigDecimal;
specialinvoke $r30.<java.math.BigDecimal: void <init>(int)>(6);
$r28[1] = $r30;
$r24[1] = $r28;
r89 = $r24;
$r31 = newarray (java.math.BigDecimal[])[2];
$r32 = newarray (java.math.BigDecimal)[2];
$r33 = new java.math.BigDecimal;
specialinvoke $r33.<java.math.BigDecimal: void <init>(int)>(2);
$r32[0] = $r33;
$r34 = new java.math.BigDecimal;
specialinvoke $r34.<java.math.BigDecimal: void <init>(int)>(0);
$r32[1] = $r34;
$r31[0] = $r32;
$r35 = newarray (java.math.BigDecimal)[2];
$r36 = new java.math.BigDecimal;
specialinvoke $r36.<java.math.BigDecimal: void <init>(int)>(-2);
$r35[0] = $r36;
$r37 = new java.math.BigDecimal;
specialinvoke $r37.<java.math.BigDecimal: void <init>(int)>(-3);
$r35[1] = $r37;
$r31[1] = $r35;
r90 = $r31;
$r38 = staticinvoke <com.thealgorithms.maths.MatrixUtil: java.util.Optional subtract(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r89, r90);
$r39 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_main_6__94: java.util.function.Supplier bootstrap$()>();
$r40 = virtualinvoke $r38.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r39);
r91 = (java.math.BigDecimal[][]) $r40;
$r41 = newarray (java.math.BigDecimal[])[2];
$r42 = newarray (java.math.BigDecimal)[2];
$r43 = new java.math.BigDecimal;
specialinvoke $r43.<java.math.BigDecimal: void <init>(int)>(-1);
$r42[0] = $r43;
$r44 = new java.math.BigDecimal;
specialinvoke $r44.<java.math.BigDecimal: void <init>(int)>(4);
$r42[1] = $r44;
$r41[0] = $r42;
$r45 = newarray (java.math.BigDecimal)[2];
$r46 = new java.math.BigDecimal;
specialinvoke $r46.<java.math.BigDecimal: void <init>(int)>(7);
$r45[0] = $r46;
$r47 = new java.math.BigDecimal;
specialinvoke $r47.<java.math.BigDecimal: void <init>(int)>(9);
$r45[1] = $r47;
$r41[1] = $r45;
r92 = $r41;
staticinvoke <com.thealgorithms.maths.MatrixUtil: void assertThat(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r91, r92);
$r48 = newarray (java.math.BigDecimal[])[3];
$r49 = newarray (java.math.BigDecimal)[3];
$r50 = new java.math.BigDecimal;
specialinvoke $r50.<java.math.BigDecimal: void <init>(int)>(1);
$r49[0] = $r50;
$r51 = new java.math.BigDecimal;
specialinvoke $r51.<java.math.BigDecimal: void <init>(int)>(2);
$r49[1] = $r51;
$r52 = new java.math.BigDecimal;
specialinvoke $r52.<java.math.BigDecimal: void <init>(int)>(3);
$r49[2] = $r52;
$r48[0] = $r49;
$r53 = newarray (java.math.BigDecimal)[3];
$r54 = new java.math.BigDecimal;
specialinvoke $r54.<java.math.BigDecimal: void <init>(int)>(4);
$r53[0] = $r54;
$r55 = new java.math.BigDecimal;
specialinvoke $r55.<java.math.BigDecimal: void <init>(int)>(5);
$r53[1] = $r55;
$r56 = new java.math.BigDecimal;
specialinvoke $r56.<java.math.BigDecimal: void <init>(int)>(6);
$r53[2] = $r56;
$r48[1] = $r53;
$r57 = newarray (java.math.BigDecimal)[3];
$r58 = new java.math.BigDecimal;
specialinvoke $r58.<java.math.BigDecimal: void <init>(int)>(7);
$r57[0] = $r58;
$r59 = new java.math.BigDecimal;
specialinvoke $r59.<java.math.BigDecimal: void <init>(int)>(8);
$r57[1] = $r59;
$r60 = new java.math.BigDecimal;
specialinvoke $r60.<java.math.BigDecimal: void <init>(int)>(9);
$r57[2] = $r60;
$r48[2] = $r57;
r93 = $r48;
$r61 = newarray (java.math.BigDecimal[])[3];
$r62 = newarray (java.math.BigDecimal)[2];
$r63 = new java.math.BigDecimal;
specialinvoke $r63.<java.math.BigDecimal: void <init>(int)>(1);
$r62[0] = $r63;
$r64 = new java.math.BigDecimal;
specialinvoke $r64.<java.math.BigDecimal: void <init>(int)>(2);
$r62[1] = $r64;
$r61[0] = $r62;
$r65 = newarray (java.math.BigDecimal)[2];
$r66 = new java.math.BigDecimal;
specialinvoke $r66.<java.math.BigDecimal: void <init>(int)>(3);
$r65[0] = $r66;
$r67 = new java.math.BigDecimal;
specialinvoke $r67.<java.math.BigDecimal: void <init>(int)>(4);
$r65[1] = $r67;
$r61[1] = $r65;
$r68 = newarray (java.math.BigDecimal)[2];
$r69 = new java.math.BigDecimal;
specialinvoke $r69.<java.math.BigDecimal: void <init>(int)>(5);
$r68[0] = $r69;
$r70 = new java.math.BigDecimal;
specialinvoke $r70.<java.math.BigDecimal: void <init>(int)>(6);
$r68[1] = $r70;
$r61[2] = $r68;
r94 = $r61;
$r71 = staticinvoke <com.thealgorithms.maths.MatrixUtil: java.util.Optional multiply(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r93, r94);
$r72 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_main_7__95: java.util.function.Supplier bootstrap$()>();
$r73 = virtualinvoke $r71.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r72);
r95 = (java.math.BigDecimal[][]) $r73;
$r74 = newarray (java.math.BigDecimal[])[3];
$r75 = newarray (java.math.BigDecimal)[2];
$r76 = new java.math.BigDecimal;
specialinvoke $r76.<java.math.BigDecimal: void <init>(int)>(22);
$r75[0] = $r76;
$r77 = new java.math.BigDecimal;
specialinvoke $r77.<java.math.BigDecimal: void <init>(int)>(28);
$r75[1] = $r77;
$r74[0] = $r75;
$r78 = newarray (java.math.BigDecimal)[2];
$r79 = new java.math.BigDecimal;
specialinvoke $r79.<java.math.BigDecimal: void <init>(int)>(49);
$r78[0] = $r79;
$r80 = new java.math.BigDecimal;
specialinvoke $r80.<java.math.BigDecimal: void <init>(int)>(64);
$r78[1] = $r80;
$r74[1] = $r78;
$r81 = newarray (java.math.BigDecimal)[2];
$r82 = new java.math.BigDecimal;
specialinvoke $r82.<java.math.BigDecimal: void <init>(int)>(76);
$r81[0] = $r82;
$r83 = new java.math.BigDecimal;
specialinvoke $r83.<java.math.BigDecimal: void <init>(int)>(100);
$r81[1] = $r83;
$r74[2] = $r81;
r96 = $r74;
staticinvoke <com.thealgorithms.maths.MatrixUtil: void assertThat(java.math.BigDecimal[][],java.math.BigDecimal[][])>(r95, r96);
return;
"
}
