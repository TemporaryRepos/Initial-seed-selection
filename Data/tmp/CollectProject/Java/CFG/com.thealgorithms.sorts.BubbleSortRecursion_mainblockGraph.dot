digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r9 := @parameter0: java.lang.String[];
r0 = newarray (java.lang.Integer)[10];
$r1 = new java.util.Random;
specialinvoke $r1.<java.util.Random: void <init>()>();
r2 = $r1;
i7 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i7 >= $i0 goto $r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i5 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100);
$i6 = $i5 - 50;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
r0[i7] = $r8;
i7 = i7 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
specialinvoke $r3.<com.thealgorithms.sorts.BubbleSortRecursion: void <init>()>();
r10 = $r3;
virtualinvoke r10.<com.thealgorithms.sorts.BubbleSortRecursion: java.lang.Comparable[] sort(java.lang.Comparable[])>(r0);
i8 = 0;
"
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i1 = lengthof r0;
$i2 = $i1 - 1;
if i8 >= $i2 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$z0 = <com.thealgorithms.sorts.BubbleSortRecursion: boolean $assertionsDisabled>;
if $z0 != 0 goto i8 = i8 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = r0[i8];
$i3 = i8 + 1;
$r5 = r0[$i3];
$i4 = virtualinvoke $r6.<java.lang.Integer: int compareTo(java.lang.Integer)>($r5);
if $i4 <= 0 goto i8 = i8 + 1;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
throw $r7;
"
    "Block 8:
[preds: 5 6 ] [succs: 4 ]
i8 = i8 + 1;
goto [?= $i1 = lengthof r0];
"
    "Block 9:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r9 := @parameter0: java.lang.String[];
r0 = newarray (java.lang.Integer)[10];
$r1 = new java.util.Random;
specialinvoke $r1.<java.util.Random: void <init>()>();
r2 = $r1;
i7 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i7 >= $i0 goto $r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i7 >= $i0 goto $r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i5 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100);
$i6 = $i5 - 50;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
r0[i7] = $r8;
i7 = i7 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i7 >= $i0 goto $r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
specialinvoke $r3.<com.thealgorithms.sorts.BubbleSortRecursion: void <init>()>();
r10 = $r3;
virtualinvoke r10.<com.thealgorithms.sorts.BubbleSortRecursion: java.lang.Comparable[] sort(java.lang.Comparable[])>(r0);
i8 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i5 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100);
$i6 = $i5 - 50;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
r0[i7] = $r8;
i7 = i7 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r0;
if i7 >= $i0 goto $r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = new com.thealgorithms.sorts.BubbleSortRecursion;
specialinvoke $r3.<com.thealgorithms.sorts.BubbleSortRecursion: void <init>()>();
r10 = $r3;
virtualinvoke r10.<com.thealgorithms.sorts.BubbleSortRecursion: java.lang.Comparable[] sort(java.lang.Comparable[])>(r0);
i8 = 0;
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i1 = lengthof r0;
$i2 = $i1 - 1;
if i8 >= $i2 goto return;
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i1 = lengthof r0;
$i2 = $i1 - 1;
if i8 >= $i2 goto return;
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
$z0 = <com.thealgorithms.sorts.BubbleSortRecursion: boolean $assertionsDisabled>;
if $z0 != 0 goto i8 = i8 + 1;
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i1 = lengthof r0;
$i2 = $i1 - 1;
if i8 >= $i2 goto return;
"->"Block 9:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$z0 = <com.thealgorithms.sorts.BubbleSortRecursion: boolean $assertionsDisabled>;
if $z0 != 0 goto i8 = i8 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = r0[i8];
$i3 = i8 + 1;
$r5 = r0[$i3];
$i4 = virtualinvoke $r6.<java.lang.Integer: int compareTo(java.lang.Integer)>($r5);
if $i4 <= 0 goto i8 = i8 + 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$z0 = <com.thealgorithms.sorts.BubbleSortRecursion: boolean $assertionsDisabled>;
if $z0 != 0 goto i8 = i8 + 1;
"->"Block 8:
[preds: 5 6 ] [succs: 4 ]
i8 = i8 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = r0[i8];
$i3 = i8 + 1;
$r5 = r0[$i3];
$i4 = virtualinvoke $r6.<java.lang.Integer: int compareTo(java.lang.Integer)>($r5);
if $i4 <= 0 goto i8 = i8 + 1;
"->"Block 7:
[preds: 6 ] [succs: ]
$r7 = new java.lang.AssertionError;
specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
throw $r7;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = r0[i8];
$i3 = i8 + 1;
$r5 = r0[$i3];
$i4 = virtualinvoke $r6.<java.lang.Integer: int compareTo(java.lang.Integer)>($r5);
if $i4 <= 0 goto i8 = i8 + 1;
"->"Block 8:
[preds: 5 6 ] [succs: 4 ]
i8 = i8 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 8:
[preds: 5 6 ] [succs: 4 ]
i8 = i8 + 1;
goto [?= $i1 = lengthof r0];
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
$i1 = lengthof r0;
$i2 = $i1 - 1;
if i8 >= $i2 goto return;
";
}
