digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
c0 := @parameter0: char;
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c0);
if $z0 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z2 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"
    "Block 2:
[preds: 1 ] [succs: ]
$r0 = new java.lang.NumberFormatException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"invalid character :\");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r4);
throw $r0;
"
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z1 == 0 goto $i1 = c0 - 65;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$i2 = c0 - 48;
goto [?= return $i2];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$i1 = c0 - 65;
$i2 = $i1 + 10;
"
    "Block 6:
[preds: 4 5 ] [succs: ]
return $i2;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
c0 := @parameter0: char;
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c0);
if $z0 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z2 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
c0 := @parameter0: char;
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c0);
if $z0 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z1 == 0 goto $i1 = c0 - 65;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z2 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"->"Block 2:
[preds: 1 ] [succs: ]
$r0 = new java.lang.NumberFormatException;
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"invalid character :\");
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r0.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r4);
throw $r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z2 != 0 goto $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
"->"Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z1 == 0 goto $i1 = c0 - 65;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z1 == 0 goto $i1 = c0 - 65;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$i2 = c0 - 48;
goto [?= return $i2];
";
    "Block 3:
[preds: 0 1 ] [succs: 4 5 ]
$z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
if $z1 == 0 goto $i1 = c0 - 65;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$i1 = c0 - 65;
$i2 = $i1 + 10;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$i2 = c0 - 48;
goto [?= return $i2];
"->"Block 6:
[preds: 4 5 ] [succs: ]
return $i2;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$i1 = c0 - 65;
$i2 = $i1 + 10;
"->"Block 6:
[preds: 4 5 ] [succs: ]
return $i2;
";
}
