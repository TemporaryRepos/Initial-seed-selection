digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.graphs.AdjacencyList;
specialinvoke $r0.<com.thealgorithms.datastructures.graphs.AdjacencyList: void <init>()>();
r1 = $r0;
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"a\", \"b\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"c\", \"a\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"a\", \"d\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"b\", \"d\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"c\", \"u\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"u\", \"b\");
$r2 = new com.thealgorithms.datastructures.graphs.TopologicalSort;
specialinvoke $r2.<com.thealgorithms.datastructures.graphs.TopologicalSort: void <init>(com.thealgorithms.datastructures.graphs.AdjacencyList)>(r1);
r3 = $r2;
$r4 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.TopologicalSort: java.util.ArrayList topSortOrder()>();
r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (java.lang.String) $r6;
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>($r12);
goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.graphs.AdjacencyList;
specialinvoke $r0.<com.thealgorithms.datastructures.graphs.AdjacencyList: void <init>()>();
r1 = $r0;
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"a\", \"b\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"c\", \"a\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"a\", \"d\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"b\", \"d\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"c\", \"u\");
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.AdjacencyList: void addEdge(java.lang.Comparable,java.lang.Comparable)>(\"u\", \"b\");
$r2 = new com.thealgorithms.datastructures.graphs.TopologicalSort;
specialinvoke $r2.<com.thealgorithms.datastructures.graphs.TopologicalSort: void <init>(com.thealgorithms.datastructures.graphs.AdjacencyList)>(r1);
r3 = $r2;
$r4 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.TopologicalSort: java.util.ArrayList topSortOrder()>();
r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (java.lang.String) $r6;
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>($r12);
goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
r7 = (java.lang.String) $r6;
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>($r12);
goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
}
