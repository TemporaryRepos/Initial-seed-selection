digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @this: com.thealgorithms.sorts.CocktailShakerSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i5 = 0;
i6 = i0 - 1;
"
    "Block 1:
[preds: 0 12 ] [succs: 2 13 ]
if i5 >= i6 goto return r0;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
i8 = i5;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i8 >= i6 goto i6 = i7;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i3 = i8 + 1;
$r4 = r0[$i3];
$r3 = r0[i8];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);
if $z1 == 0 goto i8 = i8 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$i4 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i8, $i4);
i7 = i8;
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 ]
i6 = i7;
i9 = i0 - 1;
i10 = i6;
"
    "Block 8:
[preds: 7 11 ] [succs: 9 12 ]
if i10 <= i5 goto i5 = i9;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r2 = r0[i10];
$i1 = i10 - 1;
$r1 = r0[$i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i10 = i10 + -1;
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
$i2 = i10 - 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, $i2, i10);
i9 = i10;
"
    "Block 11:
[preds: 9 10 ] [succs: 8 ]
i10 = i10 + -1;
goto [?= (branch)];
"
    "Block 12:
[preds: 8 ] [succs: 1 ]
i5 = i9;
goto [?= (branch)];
"
    "Block 13:
[preds: 1 ] [succs: ]
return r0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @this: com.thealgorithms.sorts.CocktailShakerSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i5 = 0;
i6 = i0 - 1;
"->"Block 1:
[preds: 0 12 ] [succs: 2 13 ]
if i5 >= i6 goto return r0;
";
    "Block 1:
[preds: 0 12 ] [succs: 2 13 ]
if i5 >= i6 goto return r0;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
i8 = i5;
";
    "Block 1:
[preds: 0 12 ] [succs: 2 13 ]
if i5 >= i6 goto return r0;
"->"Block 13:
[preds: 1 ] [succs: ]
return r0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i7 = 0;
i8 = i5;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i8 >= i6 goto i6 = i7;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i8 >= i6 goto i6 = i7;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$i3 = i8 + 1;
$r4 = r0[$i3];
$r3 = r0[i8];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);
if $z1 == 0 goto i8 = i8 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i8 >= i6 goto i6 = i7;
"->"Block 7:
[preds: 3 ] [succs: 8 ]
i6 = i7;
i9 = i0 - 1;
i10 = i6;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i3 = i8 + 1;
$r4 = r0[$i3];
$r3 = r0[i8];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);
if $z1 == 0 goto i8 = i8 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$i4 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i8, $i4);
i7 = i8;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$i3 = i8 + 1;
$r4 = r0[$i3];
$r3 = r0[i8];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r4, $r3);
if $z1 == 0 goto i8 = i8 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$i4 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i8, $i4);
i7 = i8;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i8 >= i6 goto i6 = i7;
";
    "Block 7:
[preds: 3 ] [succs: 8 ]
i6 = i7;
i9 = i0 - 1;
i10 = i6;
"->"Block 8:
[preds: 7 11 ] [succs: 9 12 ]
if i10 <= i5 goto i5 = i9;
";
    "Block 8:
[preds: 7 11 ] [succs: 9 12 ]
if i10 <= i5 goto i5 = i9;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r2 = r0[i10];
$i1 = i10 - 1;
$r1 = r0[$i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i10 = i10 + -1;
";
    "Block 8:
[preds: 7 11 ] [succs: 9 12 ]
if i10 <= i5 goto i5 = i9;
"->"Block 12:
[preds: 8 ] [succs: 1 ]
i5 = i9;
goto [?= (branch)];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r2 = r0[i10];
$i1 = i10 - 1;
$r1 = r0[$i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i10 = i10 + -1;
"->"Block 10:
[preds: 9 ] [succs: 11 ]
$i2 = i10 - 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, $i2, i10);
i9 = i10;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r2 = r0[i10];
$i1 = i10 - 1;
$r1 = r0[$i1];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i10 = i10 + -1;
"->"Block 11:
[preds: 9 10 ] [succs: 8 ]
i10 = i10 + -1;
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
$i2 = i10 - 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, $i2, i10);
i9 = i10;
"->"Block 11:
[preds: 9 10 ] [succs: 8 ]
i10 = i10 + -1;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 10 ] [succs: 8 ]
i10 = i10 + -1;
goto [?= (branch)];
"->"Block 8:
[preds: 7 11 ] [succs: 9 12 ]
if i10 <= i5 goto i5 = i9;
";
    "Block 12:
[preds: 8 ] [succs: 1 ]
i5 = i9;
goto [?= (branch)];
"->"Block 1:
[preds: 0 12 ] [succs: 2 13 ]
if i5 >= i6 goto return r0;
";
}
