digraph "unitGraph" {
    "r0 := @parameter0: char[]"
    "i0 := @parameter1: int"
    "$i1 = i0 - 1"
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i1)"
    "$i2 = lengthof r0"
    "$i3 = $i2 - 1"
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, i0, $i3)"
    "$i4 = lengthof r0"
    "$i5 = $i4 - 1"
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i5)"
    "return"
    "r0 := @parameter0: char[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$i1 = i0 - 1";
    "$i1 = i0 - 1"->"staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i1)";
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i1)"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, i0, $i3)";
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, i0, $i3)"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"$i5 = $i4 - 1";
    "$i5 = $i4 - 1"->"staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i5)";
    "staticinvoke <com.thealgorithms.strings.Rotation: void reverse(char[],int,int)>(r0, 0, $i5)"->"return";
}
