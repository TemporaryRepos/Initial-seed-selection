digraph "unitGraph" {
    "r0 := @parameter0: int[][]"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "i3 := @parameter3: int"
    "i5 := @parameter4: int"
    "if i0 < 0 goto return"
    "if i1 < 0 goto return"
    "$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)"
    "if $i2 == i3 goto return"
    "$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)"
    "if $i4 == i5 goto return"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3)"
    "$i6 = i0 + 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5)"
    "$i7 = i0 - 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5)"
    "$i8 = i1 + 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5)"
    "$i9 = i1 - 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5)"
    "$i11 = i0 + 1"
    "$i10 = i1 - 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5)"
    "$i13 = i0 - 1"
    "$i12 = i1 + 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5)"
    "$i15 = i0 + 1"
    "$i14 = i1 + 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5)"
    "$i17 = i0 - 1"
    "$i16 = i1 - 1"
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5)"
    "return"
    "r0 := @parameter0: int[][]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"i3 := @parameter3: int";
    "i3 := @parameter3: int"->"i5 := @parameter4: int";
    "i5 := @parameter4: int"->"if i0 < 0 goto return";
    "if i0 < 0 goto return"->"if i1 < 0 goto return";
    "if i0 < 0 goto return"->"return";
    "if i1 < 0 goto return"->"$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)";
    "if i1 < 0 goto return"->"return";
    "$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)"->"if $i2 == i3 goto return";
    "if $i2 == i3 goto return"->"$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)";
    "if $i2 == i3 goto return"->"return";
    "$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1)"->"if $i4 == i5 goto return";
    "if $i4 == i5 goto return"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3)";
    "if $i4 == i5 goto return"->"return";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3)"->"$i6 = i0 + 1";
    "$i6 = i0 + 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5)"->"$i7 = i0 - 1";
    "$i7 = i0 - 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5)"->"$i8 = i1 + 1";
    "$i8 = i1 + 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5)"->"$i9 = i1 - 1";
    "$i9 = i1 - 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5)"->"$i11 = i0 + 1";
    "$i11 = i0 + 1"->"$i10 = i1 - 1";
    "$i10 = i1 - 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5)"->"$i13 = i0 - 1";
    "$i13 = i0 - 1"->"$i12 = i1 + 1";
    "$i12 = i1 + 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5)"->"$i15 = i0 + 1";
    "$i15 = i0 + 1"->"$i14 = i1 + 1";
    "$i14 = i1 + 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5)"->"$i17 = i0 - 1";
    "$i17 = i0 - 1"->"$i16 = i1 - 1";
    "$i16 = i1 - 1"->"staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5)";
    "staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5)"->"return";
}
