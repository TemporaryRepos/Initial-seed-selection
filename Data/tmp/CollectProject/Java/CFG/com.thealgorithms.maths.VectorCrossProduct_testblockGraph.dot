digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
$r0 = new com.thealgorithms.maths.VectorCrossProduct;
specialinvoke $r0.<com.thealgorithms.maths.VectorCrossProduct: void <init>(int,int,int)>(1, -2, 3);
r1 = $r0;
$r2 = new com.thealgorithms.maths.VectorCrossProduct;
specialinvoke $r2.<com.thealgorithms.maths.VectorCrossProduct: void <init>(int,int,int)>(2, 0, 3);
r3 = $r2;
r4 = virtualinvoke r1.<com.thealgorithms.maths.VectorCrossProduct: com.thealgorithms.maths.VectorCrossProduct crossProduct(com.thealgorithms.maths.VectorCrossProduct)>(r3);
virtualinvoke r4.<com.thealgorithms.maths.VectorCrossProduct: void displayVector()>();
i0 = virtualinvoke r1.<com.thealgorithms.maths.VectorCrossProduct: int dotProduct(com.thealgorithms.maths.VectorCrossProduct)>(r3);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Dot Product of A and B: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);
return;
"
}
