digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.queues.Deques;
r2 := @parameter0: java.lang.Object;
$r0 = new com.thealgorithms.datastructures.queues.Deques$DequeNode;
specialinvoke $r0.<com.thealgorithms.datastructures.queues.Deques$DequeNode: void <init>(com.thealgorithms.datastructures.queues.Deques,java.lang.Object)>(r1, r2);
r3 = $r0;
$r4 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
if $r4 != null goto $r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode tail> = r3;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
r3.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode next> = $r5;
$r6 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
$r6.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode prev> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.queues.Deques: int size> = $i1;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.queues.Deques;
r2 := @parameter0: java.lang.Object;
$r0 = new com.thealgorithms.datastructures.queues.Deques$DequeNode;
specialinvoke $r0.<com.thealgorithms.datastructures.queues.Deques$DequeNode: void <init>(com.thealgorithms.datastructures.queues.Deques,java.lang.Object)>(r1, r2);
r3 = $r0;
$r4 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
if $r4 != null goto $r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode tail> = r3;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.queues.Deques;
r2 := @parameter0: java.lang.Object;
$r0 = new com.thealgorithms.datastructures.queues.Deques$DequeNode;
specialinvoke $r0.<com.thealgorithms.datastructures.queues.Deques$DequeNode: void <init>(com.thealgorithms.datastructures.queues.Deques,java.lang.Object)>(r1, r2);
r3 = $r0;
$r4 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
if $r4 != null goto $r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
r3.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode next> = $r5;
$r6 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
$r6.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode prev> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode tail> = r3;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.queues.Deques: int size> = $i1;
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r5 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
r3.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode next> = $r5;
$r6 = r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head>;
$r6.<com.thealgorithms.datastructures.queues.Deques$DequeNode: com.thealgorithms.datastructures.queues.Deques$DequeNode prev> = r3;
r1.<com.thealgorithms.datastructures.queues.Deques: com.thealgorithms.datastructures.queues.Deques$DequeNode head> = r3;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.queues.Deques: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.queues.Deques: int size> = $i1;
return;
";
}
