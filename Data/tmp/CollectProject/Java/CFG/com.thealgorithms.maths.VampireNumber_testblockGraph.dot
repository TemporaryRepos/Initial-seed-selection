digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
i3 = 1;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i4 = i0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i4 > i1 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i5 = i4;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 > i1 goto i4 = i4 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <com.thealgorithms.maths.VampireNumber: boolean isVampireNumber(int,int,boolean)>(i4, i5, 1);
if $z0 == 0 goto i5 = i5 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": = ( \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \");
$i2 = i4 * i5;
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\n\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>(r1);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
i3 = 1;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
i4 = i0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i4 > i1 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i4 > i1 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i5 = i4;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i4 > i1 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 1 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>(r1);
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i5 = i4;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 > i1 goto i4 = i4 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 > i1 goto i4 = i4 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <com.thealgorithms.maths.VampireNumber: boolean isVampireNumber(int,int,boolean)>(i4, i5, 1);
if $z0 == 0 goto i5 = i5 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 > i1 goto i4 = i4 + 1;
"->"Block 7:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <com.thealgorithms.maths.VampireNumber: boolean isVampireNumber(int,int,boolean)>(i4, i5, 1);
if $z0 == 0 goto i5 = i5 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": = ( \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \");
$i2 = i4 * i5;
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\n\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <com.thealgorithms.maths.VampireNumber: boolean isVampireNumber(int,int,boolean)>(i4, i5, 1);
if $z0 == 0 goto i5 = i5 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i3 = i3 + 1;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": = ( \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \");
$i2 = i4 * i5;
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\n\");
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 > i1 goto i4 = i4 + 1;
";
    "Block 7:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i4 > i1 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
}
