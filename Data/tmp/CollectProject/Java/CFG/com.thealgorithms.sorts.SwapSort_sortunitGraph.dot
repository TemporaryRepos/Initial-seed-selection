digraph "unitGraph" {
    "r1 := @this: com.thealgorithms.sorts.SwapSort"
    "r0 := @parameter0: java.lang.Comparable[]"
    "i0 = lengthof r0"
    "i3 = 0"
    "$i1 = i0 - 1"
    "if i3 >= $i1 goto return r0"
    "i2 = specialinvoke r1.<com.thealgorithms.sorts.SwapSort: int getSmallerElementCount(java.lang.Comparable[],int)>(r0, i3)"
    "if i2 <= 0 goto i3 = i3 + 1"
    "if i3 == i2 goto i3 = i3 + 1"
    "r2 = r0[i3]"
    "$r3 = r0[i2]"
    "r0[i3] = $r3"
    "r0[i2] = r2"
    "goto [?= (branch)]"
    "i3 = i3 + 1"
    "goto [?= $i1 = i0 - 1]"
    "return r0"
    "r1 := @this: com.thealgorithms.sorts.SwapSort"->"r0 := @parameter0: java.lang.Comparable[]";
    "r0 := @parameter0: java.lang.Comparable[]"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"i3 = 0";
    "i3 = 0"->"$i1 = i0 - 1";
    "$i1 = i0 - 1"->"if i3 >= $i1 goto return r0";
    "if i3 >= $i1 goto return r0"->"i2 = specialinvoke r1.<com.thealgorithms.sorts.SwapSort: int getSmallerElementCount(java.lang.Comparable[],int)>(r0, i3)";
    "if i3 >= $i1 goto return r0"->"return r0";
    "i2 = specialinvoke r1.<com.thealgorithms.sorts.SwapSort: int getSmallerElementCount(java.lang.Comparable[],int)>(r0, i3)"->"if i2 <= 0 goto i3 = i3 + 1";
    "if i2 <= 0 goto i3 = i3 + 1"->"if i3 == i2 goto i3 = i3 + 1";
    "if i2 <= 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "if i3 == i2 goto i3 = i3 + 1"->"r2 = r0[i3]";
    "if i3 == i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "r2 = r0[i3]"->"$r3 = r0[i2]";
    "$r3 = r0[i2]"->"r0[i3] = $r3";
    "r0[i3] = $r3"->"r0[i2] = r2";
    "r0[i2] = r2"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= $i1 = i0 - 1]";
    "i3 = i3 + 1"->"goto [?= $i1 = i0 - 1]";
    "goto [?= $i1 = i0 - 1]"->"$i1 = i0 - 1";
}
