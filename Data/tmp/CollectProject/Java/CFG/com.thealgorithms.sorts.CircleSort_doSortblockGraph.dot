digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.sorts.CircleSort;
r1 := @parameter0: java.lang.Comparable[];
i0 := @parameter1: int;
i1 := @parameter2: int;
z2 = 0;
if i0 != i1 goto i7 = i0;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return $r9;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
i7 = i0;
i8 = i1;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i8 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r8 = r1[i7];
$r7 = r1[i8];
$i6 = interfaceinvoke $r8.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);
if $i6 <= 0 goto i7 = i7 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, i8);
z2 = 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
i8 = i8 + -1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 10 ]
if i7 != i8 goto $i9 = i1 - i0;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r6 = r1[i7];
$i3 = i8 + 1;
$r5 = r1[$i3];
$i4 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);
if $i4 <= 0 goto $i9 = i1 - i0;
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
$i5 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, $i5);
z2 = 1;
"
    "Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto $z3 = 1;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$z1 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z3 = 0;
"
    "Block 13:
[preds: 10 11 12 ] [succs: 15 ]
$z3 = 1;
goto [?= $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
$z3 = 0;
"
    "Block 15:
[preds: 13 14 ] [succs: ]
$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
return $r4;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.sorts.CircleSort;
r1 := @parameter0: java.lang.Comparable[];
i0 := @parameter1: int;
i1 := @parameter2: int;
z2 = 0;
if i0 != i1 goto i7 = i0;
"->"Block 1:
[preds: 0 ] [succs: ]
$r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return $r9;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.sorts.CircleSort;
r1 := @parameter0: java.lang.Comparable[];
i0 := @parameter1: int;
i1 := @parameter2: int;
z2 = 0;
if i0 != i1 goto i7 = i0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
i7 = i0;
i8 = i1;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
i7 = i0;
i8 = i1;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i8 goto (branch);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i8 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r8 = r1[i7];
$r7 = r1[i8];
$i6 = interfaceinvoke $r8.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);
if $i6 <= 0 goto i7 = i7 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i8 goto (branch);
"->"Block 7:
[preds: 3 ] [succs: 8 10 ]
if i7 != i8 goto $i9 = i1 - i0;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r8 = r1[i7];
$r7 = r1[i8];
$i6 = interfaceinvoke $r8.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);
if $i6 <= 0 goto i7 = i7 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, i8);
z2 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r8 = r1[i7];
$r7 = r1[i8];
$i6 = interfaceinvoke $r8.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);
if $i6 <= 0 goto i7 = i7 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
i8 = i8 + -1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, i8);
z2 = 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
i8 = i8 + -1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i7 = i7 + 1;
i8 = i8 + -1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i7 >= i8 goto (branch);
";
    "Block 7:
[preds: 3 ] [succs: 8 10 ]
if i7 != i8 goto $i9 = i1 - i0;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
$r6 = r1[i7];
$i3 = i8 + 1;
$r5 = r1[$i3];
$i4 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);
if $i4 <= 0 goto $i9 = i1 - i0;
";
    "Block 7:
[preds: 3 ] [succs: 8 10 ]
if i7 != i8 goto $i9 = i1 - i0;
"->"Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r6 = r1[i7];
$i3 = i8 + 1;
$r5 = r1[$i3];
$i4 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);
if $i4 <= 0 goto $i9 = i1 - i0;
"->"Block 9:
[preds: 8 ] [succs: 10 ]
$i5 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, $i5);
z2 = 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
$r6 = r1[i7];
$i3 = i8 + 1;
$r5 = r1[$i3];
$i4 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);
if $i4 <= 0 goto $i9 = i1 - i0;
"->"Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
$i5 = i8 + 1;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r1, i7, $i5);
z2 = 1;
"->"Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
";
    "Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto $z3 = 1;
";
    "Block 10:
[preds: 7 8 9 ] [succs: 11 13 ]
$i9 = i1 - i0;
$i10 = $i9 / 2;
i2 = i0 + $i10;
r2 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, i0, i2);
$i11 = i2 + 1;
r3 = specialinvoke r0.<com.thealgorithms.sorts.CircleSort: java.lang.Boolean doSort(java.lang.Comparable[],int,int)>(r1, $i11, i1);
if z2 != 0 goto $z3 = 1;
"->"Block 13:
[preds: 10 11 12 ] [succs: 15 ]
$z3 = 1;
goto [?= $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto $z3 = 1;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
$z1 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z3 = 0;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto $z3 = 1;
"->"Block 13:
[preds: 10 11 12 ] [succs: 15 ]
$z3 = 1;
goto [?= $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$z1 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z3 = 0;
"->"Block 13:
[preds: 10 11 12 ] [succs: 15 ]
$z3 = 1;
goto [?= $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$z1 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
if $z1 == 0 goto $z3 = 0;
"->"Block 14:
[preds: 12 ] [succs: 15 ]
$z3 = 0;
";
    "Block 13:
[preds: 10 11 12 ] [succs: 15 ]
$z3 = 1;
goto [?= $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)];
"->"Block 15:
[preds: 13 14 ] [succs: ]
$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
return $r4;
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
$z3 = 0;
"->"Block 15:
[preds: 13 14 ] [succs: ]
$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
return $r4;
";
}
