digraph "unitGraph" {
    "r0 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"
    "r1 := @parameter0: java.lang.Comparable"
    "$r2 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node root>"
    "$z0 = specialinvoke r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r2, r1)"
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is present in given BST.\")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)"
    "return 1"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found.\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "return 0"
    "r0 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"->"r1 := @parameter0: java.lang.Comparable";
    "r1 := @parameter0: java.lang.Comparable"->"$r2 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node root>";
    "$r2 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node root>"->"$z0 = specialinvoke r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r2, r1)";
    "$z0 = specialinvoke r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r2, r1)"->"if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 == 0 goto $r4 = <java.lang.System: java.io.PrintStream out>"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is present in given BST.\")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is present in given BST.\")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12)"->"return 1";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found.\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found.\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"return 0";
}
