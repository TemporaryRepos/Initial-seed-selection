digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 = lengthof r0"
    "r1 = newmultiarray (int)[i0][i0]"
    "i24 = 0"
    "$i1 = i0 - 1"
    "if i24 > $i1 goto $r2 = r1[0]"
    "i25 = 0"
    "$i4 = i0 - i24"
    "$i5 = $i4 - 1"
    "if i25 > $i5 goto i24 = i24 + 1"
    "i6 = i25 + i24"
    "$i7 = i6 - i25"
    "$i8 = $i7 + 1"
    "$i9 = i0 - $i8"
    "i10 = $i9 + 1"
    "if i25 != i6 goto $i11 = i25 + 1"
    "$r6 = r1[i25]"
    "$i22 = r0[i25]"
    "$i23 = $i22 * i10"
    "$r6[i6] = $i23"
    "goto [?= i25 = i25 + 1]"
    "$i11 = i25 + 1"
    "$r3 = r1[$i11]"
    "$i14 = $r3[i6]"
    "$i12 = r0[i25]"
    "$i13 = $i12 * i10"
    "i15 = $i14 + $i13"
    "$r4 = r1[i25]"
    "$i16 = i6 - 1"
    "$i19 = $r4[$i16]"
    "$i17 = r0[i6]"
    "$i18 = $i17 * i10"
    "i20 = $i19 + $i18"
    "$r5 = r1[i25]"
    "$i21 = staticinvoke <java.lang.Math: int max(int,int)>(i15, i20)"
    "$r5[i6] = $i21"
    "i25 = i25 + 1"
    "goto [?= $i4 = i0 - i24]"
    "i24 = i24 + 1"
    "goto [?= $i1 = i0 - 1]"
    "$r2 = r1[0]"
    "$i2 = i0 - 1"
    "$i3 = $r2[$i2]"
    "return $i3"
    "r0 := @parameter0: int[]"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"r1 = newmultiarray (int)[i0][i0]";
    "r1 = newmultiarray (int)[i0][i0]"->"i24 = 0";
    "i24 = 0"->"$i1 = i0 - 1";
    "$i1 = i0 - 1"->"if i24 > $i1 goto $r2 = r1[0]";
    "if i24 > $i1 goto $r2 = r1[0]"->"i25 = 0";
    "if i24 > $i1 goto $r2 = r1[0]"->"$r2 = r1[0]";
    "i25 = 0"->"$i4 = i0 - i24";
    "$i4 = i0 - i24"->"$i5 = $i4 - 1";
    "$i5 = $i4 - 1"->"if i25 > $i5 goto i24 = i24 + 1";
    "if i25 > $i5 goto i24 = i24 + 1"->"i6 = i25 + i24";
    "if i25 > $i5 goto i24 = i24 + 1"->"i24 = i24 + 1";
    "i6 = i25 + i24"->"$i7 = i6 - i25";
    "$i7 = i6 - i25"->"$i8 = $i7 + 1";
    "$i8 = $i7 + 1"->"$i9 = i0 - $i8";
    "$i9 = i0 - $i8"->"i10 = $i9 + 1";
    "i10 = $i9 + 1"->"if i25 != i6 goto $i11 = i25 + 1";
    "if i25 != i6 goto $i11 = i25 + 1"->"$r6 = r1[i25]";
    "if i25 != i6 goto $i11 = i25 + 1"->"$i11 = i25 + 1";
    "$r6 = r1[i25]"->"$i22 = r0[i25]";
    "$i22 = r0[i25]"->"$i23 = $i22 * i10";
    "$i23 = $i22 * i10"->"$r6[i6] = $i23";
    "$r6[i6] = $i23"->"goto [?= i25 = i25 + 1]";
    "goto [?= i25 = i25 + 1]"->"i25 = i25 + 1";
    "$i11 = i25 + 1"->"$r3 = r1[$i11]";
    "$r3 = r1[$i11]"->"$i14 = $r3[i6]";
    "$i14 = $r3[i6]"->"$i12 = r0[i25]";
    "$i12 = r0[i25]"->"$i13 = $i12 * i10";
    "$i13 = $i12 * i10"->"i15 = $i14 + $i13";
    "i15 = $i14 + $i13"->"$r4 = r1[i25]";
    "$r4 = r1[i25]"->"$i16 = i6 - 1";
    "$i16 = i6 - 1"->"$i19 = $r4[$i16]";
    "$i19 = $r4[$i16]"->"$i17 = r0[i6]";
    "$i17 = r0[i6]"->"$i18 = $i17 * i10";
    "$i18 = $i17 * i10"->"i20 = $i19 + $i18";
    "i20 = $i19 + $i18"->"$r5 = r1[i25]";
    "$r5 = r1[i25]"->"$i21 = staticinvoke <java.lang.Math: int max(int,int)>(i15, i20)";
    "$i21 = staticinvoke <java.lang.Math: int max(int,int)>(i15, i20)"->"$r5[i6] = $i21";
    "$r5[i6] = $i21"->"i25 = i25 + 1";
    "i25 = i25 + 1"->"goto [?= $i4 = i0 - i24]";
    "goto [?= $i4 = i0 - i24]"->"$i4 = i0 - i24";
    "i24 = i24 + 1"->"goto [?= $i1 = i0 - 1]";
    "goto [?= $i1 = i0 - 1]"->"$i1 = i0 - 1";
    "$r2 = r1[0]"->"$i2 = i0 - 1";
    "$i2 = i0 - 1"->"$i3 = $r2[$i2]";
    "$i3 = $r2[$i2]"->"return $i3";
}
