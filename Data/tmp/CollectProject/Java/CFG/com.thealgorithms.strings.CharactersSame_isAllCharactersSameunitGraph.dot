digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i3 = 1"
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i3 >= i0 goto return 1"
    "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)"
    "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)"
    "if $c1 == $c2 goto i3 = i3 + 1"
    "return 0"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return 1"
    "r0 := @parameter0: java.lang.String"->"i3 = 1";
    "i3 = 1"->"i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i3 >= i0 goto return 1";
    "if i3 >= i0 goto return 1"->"$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)";
    "if i3 >= i0 goto return 1"->"return 1";
    "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)"->"$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)";
    "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)"->"if $c1 == $c2 goto i3 = i3 + 1";
    "if $c1 == $c2 goto i3 = i3 + 1"->"return 0";
    "if $c1 == $c2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return 1";
}
