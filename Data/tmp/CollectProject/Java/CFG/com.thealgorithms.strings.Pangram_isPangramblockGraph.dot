digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r0 = newarray (boolean)[26];
r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
i3 = lengthof r2;
i4 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i4 >= i3 goto r3 = r0;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c5 = r2[i4];
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c5);
if $z0 == 0 goto $b6 = 97;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$b6 = 65;
goto [?= i0 = c5 - $b6];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$b6 = 97;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 8 ]
i0 = c5 - $b6;
if i0 < 0 goto i4 = i4 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i1 = lengthof r0;
if i0 >= $i1 goto i4 = i4 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
r0[i0] = 1;
"
    "Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 1 ] [succs: 10 ]
r3 = r0;
i7 = lengthof r3;
i8 = 0;
"
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i8 >= i7 goto return 1;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
z1 = r3[i8];
if z1 != 0 goto i8 = i8 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
return 0;
"
    "Block 13:
[preds: 11 ] [succs: 10 ]
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 14:
[preds: 10 ] [succs: ]
return 1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r0 = newarray (boolean)[26];
r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
i3 = lengthof r2;
i4 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i4 >= i3 goto r3 = r0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i4 >= i3 goto r3 = r0;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
c5 = r2[i4];
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c5);
if $z0 == 0 goto $b6 = 97;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i4 >= i3 goto r3 = r0;
"->"Block 9:
[preds: 1 ] [succs: 10 ]
r3 = r0;
i7 = lengthof r3;
i8 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c5 = r2[i4];
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c5);
if $z0 == 0 goto $b6 = 97;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$b6 = 65;
goto [?= i0 = c5 - $b6];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c5 = r2[i4];
$z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c5);
if $z0 == 0 goto $b6 = 97;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$b6 = 97;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$b6 = 65;
goto [?= i0 = c5 - $b6];
"->"Block 5:
[preds: 3 4 ] [succs: 6 8 ]
i0 = c5 - $b6;
if i0 < 0 goto i4 = i4 + 1;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$b6 = 97;
"->"Block 5:
[preds: 3 4 ] [succs: 6 8 ]
i0 = c5 - $b6;
if i0 < 0 goto i4 = i4 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 8 ]
i0 = c5 - $b6;
if i0 < 0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$i1 = lengthof r0;
if i0 >= $i1 goto i4 = i4 + 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 8 ]
i0 = c5 - $b6;
if i0 < 0 goto i4 = i4 + 1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i1 = lengthof r0;
if i0 >= $i1 goto i4 = i4 + 1;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
r0[i0] = 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i1 = lengthof r0;
if i0 >= $i1 goto i4 = i4 + 1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
r0[i0] = 1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
if i4 >= i3 goto r3 = r0;
";
    "Block 9:
[preds: 1 ] [succs: 10 ]
r3 = r0;
i7 = lengthof r3;
i8 = 0;
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i8 >= i7 goto return 1;
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i8 >= i7 goto return 1;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
z1 = r3[i8];
if z1 != 0 goto i8 = i8 + 1;
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i8 >= i7 goto return 1;
"->"Block 14:
[preds: 10 ] [succs: ]
return 1;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
z1 = r3[i8];
if z1 != 0 goto i8 = i8 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
return 0;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
z1 = r3[i8];
if z1 != 0 goto i8 = i8 + 1;
"->"Block 13:
[preds: 11 ] [succs: 10 ]
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 ] [succs: 10 ]
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i8 >= i7 goto return 1;
";
}
