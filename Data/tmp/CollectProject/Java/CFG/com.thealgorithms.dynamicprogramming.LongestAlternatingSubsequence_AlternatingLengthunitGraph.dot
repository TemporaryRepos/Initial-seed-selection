digraph "unitGraph" {
    "r5 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "r0 = newmultiarray (int)[i0][2]"
    "i18 = 0"
    "if i18 >= i0 goto i19 = 1"
    "$r15 = r0[i18]"
    "$r14 = r0[i18]"
    "$r14[1] = 1"
    "$r15[0] = 1"
    "i18 = i18 + 1"
    "goto [?= (branch)]"
    "i19 = 1"
    "i20 = 1"
    "if i20 >= i0 goto return i19"
    "i21 = 0"
    "if i21 >= i20 goto $r1 = r0[i20]"
    "$i7 = r5[i21]"
    "$i6 = r5[i20]"
    "if $i7 >= $i6 goto $i22 = r5[i21]"
    "$r10 = r0[i20]"
    "$i15 = $r10[0]"
    "$r11 = r0[i21]"
    "$i13 = $r11[1]"
    "$i14 = $i13 + 1"
    "if $i15 >= $i14 goto $i22 = r5[i21]"
    "$r13 = r0[i20]"
    "$r12 = r0[i21]"
    "$i16 = $r12[1]"
    "$i17 = $i16 + 1"
    "$r13[0] = $i17"
    "$i22 = r5[i21]"
    "$i23 = r5[i20]"
    "if $i22 <= $i23 goto i21 = i21 + 1"
    "$r6 = r0[i20]"
    "$i10 = $r6[1]"
    "$r7 = r0[i21]"
    "$i8 = $r7[0]"
    "$i9 = $i8 + 1"
    "if $i10 >= $i9 goto i21 = i21 + 1"
    "$r9 = r0[i20]"
    "$r8 = r0[i21]"
    "$i11 = $r8[0]"
    "$i12 = $i11 + 1"
    "$r9[1] = $i12"
    "i21 = i21 + 1"
    "$r1 = r0[i20]"
    "$i2 = $r1[0]"
    "$r2 = r0[i20]"
    "$i1 = $r2[1]"
    "$i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1)"
    "if i19 >= $i3 goto i20 = i20 + 1"
    "$r3 = r0[i20]"
    "$i5 = $r3[0]"
    "$r4 = r0[i20]"
    "$i4 = $r4[1]"
    "i19 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4)"
    "i20 = i20 + 1"
    "return i19"
    "r5 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r0 = newmultiarray (int)[i0][2]";
    "r0 = newmultiarray (int)[i0][2]"->"i18 = 0";
    "i18 = 0"->"if i18 >= i0 goto i19 = 1";
    "if i18 >= i0 goto i19 = 1"->"$r15 = r0[i18]";
    "if i18 >= i0 goto i19 = 1"->"i19 = 1";
    "$r15 = r0[i18]"->"$r14 = r0[i18]";
    "$r14 = r0[i18]"->"$r14[1] = 1";
    "$r14[1] = 1"->"$r15[0] = 1";
    "$r15[0] = 1"->"i18 = i18 + 1";
    "i18 = i18 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i18 >= i0 goto i19 = 1";
    "i19 = 1"->"i20 = 1";
    "i20 = 1"->"if i20 >= i0 goto return i19";
    "if i20 >= i0 goto return i19"->"i21 = 0";
    "if i20 >= i0 goto return i19"->"return i19";
    "i21 = 0"->"if i21 >= i20 goto $r1 = r0[i20]";
    "if i21 >= i20 goto $r1 = r0[i20]"->"$i7 = r5[i21]";
    "if i21 >= i20 goto $r1 = r0[i20]"->"$r1 = r0[i20]";
    "$i7 = r5[i21]"->"$i6 = r5[i20]";
    "$i6 = r5[i20]"->"if $i7 >= $i6 goto $i22 = r5[i21]";
    "if $i7 >= $i6 goto $i22 = r5[i21]"->"$r10 = r0[i20]";
    "if $i7 >= $i6 goto $i22 = r5[i21]"->"$i22 = r5[i21]";
    "$r10 = r0[i20]"->"$i15 = $r10[0]";
    "$i15 = $r10[0]"->"$r11 = r0[i21]";
    "$r11 = r0[i21]"->"$i13 = $r11[1]";
    "$i13 = $r11[1]"->"$i14 = $i13 + 1";
    "$i14 = $i13 + 1"->"if $i15 >= $i14 goto $i22 = r5[i21]";
    "if $i15 >= $i14 goto $i22 = r5[i21]"->"$r13 = r0[i20]";
    "if $i15 >= $i14 goto $i22 = r5[i21]"->"$i22 = r5[i21]";
    "$r13 = r0[i20]"->"$r12 = r0[i21]";
    "$r12 = r0[i21]"->"$i16 = $r12[1]";
    "$i16 = $r12[1]"->"$i17 = $i16 + 1";
    "$i17 = $i16 + 1"->"$r13[0] = $i17";
    "$r13[0] = $i17"->"$i22 = r5[i21]";
    "$i22 = r5[i21]"->"$i23 = r5[i20]";
    "$i23 = r5[i20]"->"if $i22 <= $i23 goto i21 = i21 + 1";
    "if $i22 <= $i23 goto i21 = i21 + 1"->"$r6 = r0[i20]";
    "if $i22 <= $i23 goto i21 = i21 + 1"->"i21 = i21 + 1";
    "$r6 = r0[i20]"->"$i10 = $r6[1]";
    "$i10 = $r6[1]"->"$r7 = r0[i21]";
    "$r7 = r0[i21]"->"$i8 = $r7[0]";
    "$i8 = $r7[0]"->"$i9 = $i8 + 1";
    "$i9 = $i8 + 1"->"if $i10 >= $i9 goto i21 = i21 + 1";
    "if $i10 >= $i9 goto i21 = i21 + 1"->"$r9 = r0[i20]";
    "if $i10 >= $i9 goto i21 = i21 + 1"->"i21 = i21 + 1";
    "$r9 = r0[i20]"->"$r8 = r0[i21]";
    "$r8 = r0[i21]"->"$i11 = $r8[0]";
    "$i11 = $r8[0]"->"$i12 = $i11 + 1";
    "$i12 = $i11 + 1"->"$r9[1] = $i12";
    "$r9[1] = $i12"->"i21 = i21 + 1";
    "i21 = i21 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i21 >= i20 goto $r1 = r0[i20]";
    "$r1 = r0[i20]"->"$i2 = $r1[0]";
    "$i2 = $r1[0]"->"$r2 = r0[i20]";
    "$r2 = r0[i20]"->"$i1 = $r2[1]";
    "$i1 = $r2[1]"->"$i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1)";
    "$i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1)"->"if i19 >= $i3 goto i20 = i20 + 1";
    "if i19 >= $i3 goto i20 = i20 + 1"->"$r3 = r0[i20]";
    "if i19 >= $i3 goto i20 = i20 + 1"->"i20 = i20 + 1";
    "$r3 = r0[i20]"->"$i5 = $r3[0]";
    "$i5 = $r3[0]"->"$r4 = r0[i20]";
    "$r4 = r0[i20]"->"$i4 = $r4[1]";
    "$i4 = $r4[1]"->"i19 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4)";
    "i19 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4)"->"i20 = i20 + 1";
    "i20 = i20 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i20 >= i0 goto return i19";
}
