digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: com.thealgorithms.sorts.CombSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i3 = i0;
z1 = 1;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 3 ]
if i3 != 1 goto i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
"
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
if z1 == 0 goto return r0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
z1 = 0;
i4 = 0;
"
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i5 = i0 - i3;
if i4 >= $i5 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i1 = i4 + i3;
$r3 = r0[$i1];
$r2 = r0[i4];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r3, $r2);
if $z0 == 0 goto i4 = i4 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i4 + i3;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i4, $i2);
z1 = 1;
"
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i4 = i4 + 1;
goto [?= $i5 = i0 - i3];
"
    "Block 8:
[preds: 4 ] [succs: 1 ]
goto [?= (branch)];
"
    "Block 9:
[preds: 2 ] [succs: ]
return r0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @this: com.thealgorithms.sorts.CombSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i3 = i0;
z1 = 1;
"->"Block 1:
[preds: 0 8 ] [succs: 2 3 ]
if i3 != 1 goto i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
";
    "Block 1:
[preds: 0 8 ] [succs: 2 3 ]
if i3 != 1 goto i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
"->"Block 2:
[preds: 1 ] [succs: 3 9 ]
if z1 == 0 goto return r0;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 3 ]
if i3 != 1 goto i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
z1 = 0;
i4 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
if z1 == 0 goto return r0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 ]
i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
z1 = 0;
i4 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 9 ]
if z1 == 0 goto return r0;
"->"Block 9:
[preds: 2 ] [succs: ]
return r0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 ]
i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
z1 = 0;
i4 = 0;
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i5 = i0 - i3;
if i4 >= $i5 goto (branch);
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i5 = i0 - i3;
if i4 >= $i5 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$i1 = i4 + i3;
$r3 = r0[$i1];
$r2 = r0[i4];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r3, $r2);
if $z0 == 0 goto i4 = i4 + 1;
";
    "Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i5 = i0 - i3;
if i4 >= $i5 goto (branch);
"->"Block 8:
[preds: 4 ] [succs: 1 ]
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i1 = i4 + i3;
$r3 = r0[$i1];
$r2 = r0[i4];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r3, $r2);
if $z0 == 0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i4 + i3;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i4, $i2);
z1 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$i1 = i4 + i3;
$r3 = r0[$i1];
$r2 = r0[i4];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r3, $r2);
if $z0 == 0 goto i4 = i4 + 1;
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i4 = i4 + 1;
goto [?= $i5 = i0 - i3];
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
$i2 = i4 + i3;
staticinvoke <com.thealgorithms.sorts.SortUtils: void swap(java.lang.Object[],int,int)>(r0, i4, $i2);
z1 = 1;
"->"Block 7:
[preds: 5 6 ] [succs: 4 ]
i4 = i4 + 1;
goto [?= $i5 = i0 - i3];
";
    "Block 7:
[preds: 5 6 ] [succs: 4 ]
i4 = i4 + 1;
goto [?= $i5 = i0 - i3];
"->"Block 4:
[preds: 3 7 ] [succs: 5 8 ]
$i5 = i0 - i3;
if i4 >= $i5 goto (branch);
";
    "Block 8:
[preds: 4 ] [succs: 1 ]
goto [?= (branch)];
"->"Block 1:
[preds: 0 8 ] [succs: 2 3 ]
if i3 != 1 goto i3 = specialinvoke r1.<com.thealgorithms.sorts.CombSort: int nextGap(int)>(i3);
";
}
