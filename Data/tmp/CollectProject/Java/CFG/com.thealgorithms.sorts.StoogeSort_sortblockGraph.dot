digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @this: com.thealgorithms.sorts.StoogeSort;
r0 := @parameter0: java.lang.Comparable[];
i2 := @parameter1: int;
i0 := @parameter2: int;
$i1 = i0 - 1;
$r2 = r0[$i1];
$r1 = r0[i2];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i9 = i0 - i2;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r0[i2];
$i7 = i0 - 1;
$r7 = r0[$i7];
r0[i2] = $r7;
$i8 = i0 - 1;
r0[$i8] = r8;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i9 = i0 - i2;
if i9 <= 2 goto return r0;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
i3 = i9 / 3;
$i4 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i4);
$i5 = i2 + i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, $i5, i0);
$i6 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i6);
"
    "Block 4:
[preds: 2 3 ] [succs: ]
return r0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @this: com.thealgorithms.sorts.StoogeSort;
r0 := @parameter0: java.lang.Comparable[];
i2 := @parameter1: int;
i0 := @parameter2: int;
$i1 = i0 - 1;
$r2 = r0[$i1];
$r1 = r0[i2];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i9 = i0 - i2;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r0[i2];
$i7 = i0 - 1;
$r7 = r0[$i7];
r0[i2] = $r7;
$i8 = i0 - 1;
r0[$i8] = r8;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r3 := @this: com.thealgorithms.sorts.StoogeSort;
r0 := @parameter0: java.lang.Comparable[];
i2 := @parameter1: int;
i0 := @parameter2: int;
$i1 = i0 - 1;
$r2 = r0[$i1];
$r1 = r0[i2];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1);
if $z0 == 0 goto i9 = i0 - i2;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i9 = i0 - i2;
if i9 <= 2 goto return r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = r0[i2];
$i7 = i0 - 1;
$r7 = r0[$i7];
r0[i2] = $r7;
$i8 = i0 - 1;
r0[$i8] = r8;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i9 = i0 - i2;
if i9 <= 2 goto return r0;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i9 = i0 - i2;
if i9 <= 2 goto return r0;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
i3 = i9 / 3;
$i4 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i4);
$i5 = i2 + i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, $i5, i0);
$i6 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i6);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i9 = i0 - i2;
if i9 <= 2 goto return r0;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return r0;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
i3 = i9 / 3;
$i4 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i4);
$i5 = i2 + i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, $i5, i0);
$i6 = i0 - i3;
virtualinvoke r3.<com.thealgorithms.sorts.StoogeSort: java.lang.Comparable[] sort(java.lang.Comparable[],int,int)>(r0, i2, $i6);
"->"Block 4:
[preds: 2 3 ] [succs: ]
return r0;
";
}
