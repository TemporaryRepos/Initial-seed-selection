digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i2 = r0[0]"
    "r1 = r0"
    "i0 = lengthof r1"
    "i3 = 0"
    "if i3 >= i0 goto return i2"
    "i1 = r1[i3]"
    "if i1 >= i2 goto i3 = i3 + 1"
    "i2 = i1"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return i2"
    "r0 := @parameter0: int[]"->"i2 = r0[0]";
    "i2 = r0[0]"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto return i2";
    "if i3 >= i0 goto return i2"->"i1 = r1[i3]";
    "if i3 >= i0 goto return i2"->"return i2";
    "i1 = r1[i3]"->"if i1 >= i2 goto i3 = i3 + 1";
    "if i1 >= i2 goto i3 = i3 + 1"->"i2 = i1";
    "if i1 >= i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i2 = i1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return i2";
}
