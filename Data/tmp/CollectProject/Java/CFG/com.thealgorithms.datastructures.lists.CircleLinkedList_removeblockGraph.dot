digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
i0 := @parameter0: int;
$i1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
if i0 > $i1 goto $r1 = new java.lang.IndexOutOfBoundsException;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= 0 goto r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
"
    "Block 2:
[preds: 0 1 ] [succs: ]
$r1 = new java.lang.IndexOutOfBoundsException;
specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(\"position cannot be greater than size or negative\");
throw $r1;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
i4 = 1;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i4 > i0 goto r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
r7 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r2 = r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>;
$r3 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
$r4 = $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r4;
$r5 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if r8 != $r5 goto $i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = r7;
"
    "Block 8:
[preds: 6 7 ] [succs: ]
$i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i3 = $i2 - 1;
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i3;
return r2;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
i0 := @parameter0: int;
$i1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
if i0 > $i1 goto $r1 = new java.lang.IndexOutOfBoundsException;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= 0 goto r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
i0 := @parameter0: int;
$i1 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
if i0 > $i1 goto $r1 = new java.lang.IndexOutOfBoundsException;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r1 = new java.lang.IndexOutOfBoundsException;
specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(\"position cannot be greater than size or negative\");
throw $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= 0 goto r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
"->"Block 2:
[preds: 0 1 ] [succs: ]
$r1 = new java.lang.IndexOutOfBoundsException;
specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(\"position cannot be greater than size or negative\");
throw $r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
if i0 >= 0 goto r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
i4 = 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r7 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
i4 = 1;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i4 > i0 goto r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i4 > i0 goto r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
r7 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i4 > i0 goto r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r2 = r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>;
$r3 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
$r4 = $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r4;
$r5 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if r8 != $r5 goto $i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
r7 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i4 > i0 goto r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r2 = r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>;
$r3 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
$r4 = $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r4;
$r5 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if r8 != $r5 goto $i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = r7;
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
r8 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r2 = r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: java.lang.Object value>;
$r3 = r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
$r4 = $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r7.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r4;
$r5 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if r8 != $r5 goto $i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
"->"Block 8:
[preds: 6 7 ] [succs: ]
$i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i3 = $i2 - 1;
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i3;
return r2;
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = r7;
"->"Block 8:
[preds: 6 7 ] [succs: ]
$i2 = r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i3 = $i2 - 1;
r0.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i3;
return r2;
";
}
