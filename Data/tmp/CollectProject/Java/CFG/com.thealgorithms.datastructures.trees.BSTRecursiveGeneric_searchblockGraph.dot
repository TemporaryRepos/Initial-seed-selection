digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric;
r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node;
r2 := @parameter1: java.lang.Comparable;
if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"
    "Block 1:
[preds: 0 ] [succs: ]
return 0;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r3 = (java.lang.Comparable) $r1;
$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"
    "Block 3:
[preds: 2 ] [succs: ]
return 1;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r5 = (java.lang.Comparable) $r4;
$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
"
    "Block 5:
[preds: 4 ] [succs: ]
$r8 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>;
$z1 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r2);
return $z1;
"
    "Block 6:
[preds: 4 ] [succs: ]
$r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
$z0 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r7, r2);
return $z0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric;
r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node;
r2 := @parameter1: java.lang.Comparable;
if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"->"Block 1:
[preds: 0 ] [succs: ]
return 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r6 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric;
r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node;
r2 := @parameter1: java.lang.Comparable;
if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r3 = (java.lang.Comparable) $r1;
$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r3 = (java.lang.Comparable) $r1;
$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"->"Block 3:
[preds: 2 ] [succs: ]
return 1;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r3 = (java.lang.Comparable) $r1;
$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r5 = (java.lang.Comparable) $r4;
$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r5 = (java.lang.Comparable) $r4;
$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
"->"Block 5:
[preds: 4 ] [succs: ]
$r8 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>;
$z1 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r2);
return $z1;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>;
$r5 = (java.lang.Comparable) $r4;
$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);
if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
"->"Block 6:
[preds: 4 ] [succs: ]
$r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>;
$z0 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r7, r2);
return $z0;
";
}
