digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.util.HashMap;
"
    "Block 1:
[preds: 0 ] [succs: ]
return null;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
r2 = $r1;
r28 = r0;
i4 = lengthof r28;
i5 = 0;
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i6 = r28[i5];
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18);
if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);
$r25 = (java.lang.Integer) $r24;
$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26);
goto [?= i5 = i5 + 1];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);
"
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 3 ] [succs: 9 ]
$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3);
$r5 = (java.lang.Integer) $r4;
i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new java.util.ArrayList;
specialinvoke $r6.<java.util.ArrayList: void <init>()>();
r29 = $r6;
$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>();
r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 9:
[preds: 8 12 ] [succs: 10 13 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
$r13 = (java.lang.Integer) $r12;
i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);
$r16 = (java.lang.Integer) $r15;
$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
if $i1 != i7 goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);
"
    "Block 12:
[preds: 10 11 ] [succs: 9 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 13:
[preds: 9 ] [succs: ]
$r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
$r9 = staticinvoke <com.thealgorithms.maths.Mode$lambda_mode_0__100: java.util.function.ToIntFunction bootstrap$()>();
$r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r9);
$r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>();
return $r11;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.util.HashMap;
"->"Block 1:
[preds: 0 ] [succs: ]
return null;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: int[];
$i0 = lengthof r0;
if $i0 != 0 goto $r1 = new java.util.HashMap;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
r2 = $r1;
r28 = r0;
i4 = lengthof r28;
i5 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$r1 = new java.util.HashMap;
specialinvoke $r1.<java.util.HashMap: void <init>()>();
r2 = $r1;
r28 = r0;
i4 = lengthof r28;
i5 = 0;
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
i6 = r28[i5];
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18);
if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
"->"Block 8:
[preds: 3 ] [succs: 9 ]
$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3);
$r5 = (java.lang.Integer) $r4;
i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new java.util.ArrayList;
specialinvoke $r6.<java.util.ArrayList: void <init>()>();
r29 = $r6;
$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>();
r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i6 = r28[i5];
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18);
if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);
$r25 = (java.lang.Integer) $r24;
$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26);
goto [?= i5 = i5 + 1];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
i6 = r28[i5];
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18);
if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);
$r25 = (java.lang.Integer) $r24;
$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();
$i3 = $i2 + 1;
$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26);
goto [?= i5 = i5 + 1];
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
";
    "Block 8:
[preds: 3 ] [succs: 9 ]
$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();
$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3);
$r5 = (java.lang.Integer) $r4;
i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
$r6 = new java.util.ArrayList;
specialinvoke $r6.<java.util.ArrayList: void <init>()>();
r29 = $r6;
$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>();
r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 9:
[preds: 8 12 ] [succs: 10 13 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
";
    "Block 9:
[preds: 8 12 ] [succs: 10 13 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
$r13 = (java.lang.Integer) $r12;
i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);
$r16 = (java.lang.Integer) $r15;
$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
if $i1 != i7 goto (branch);
";
    "Block 9:
[preds: 8 12 ] [succs: 10 13 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
"->"Block 13:
[preds: 9 ] [succs: ]
$r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
$r9 = staticinvoke <com.thealgorithms.maths.Mode$lambda_mode_0__100: java.util.function.ToIntFunction bootstrap$()>();
$r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r9);
$r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>();
return $r11;
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
$r13 = (java.lang.Integer) $r12;
i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);
$r16 = (java.lang.Integer) $r15;
$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
if $i1 != i7 goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 12 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();
$r13 = (java.lang.Integer) $r12;
i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);
$r16 = (java.lang.Integer) $r15;
$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
if $i1 != i7 goto (branch);
"->"Block 12:
[preds: 10 11 ] [succs: 9 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);
"->"Block 12:
[preds: 10 11 ] [succs: 9 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 12:
[preds: 10 11 ] [succs: 9 ]
goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()];
"->"Block 9:
[preds: 8 12 ] [succs: 10 13 ]
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();
";
}
