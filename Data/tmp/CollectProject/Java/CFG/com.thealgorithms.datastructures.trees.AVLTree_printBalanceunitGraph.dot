digraph "unitGraph" {
    "r1 := @this: com.thealgorithms.datastructures.trees.AVLTree"
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node"
    "if r0 == null goto return"
    "$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"
    "specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = newarray (java.lang.Object)[1]"
    "$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r3[0] = $r5"
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s \", $r3)"
    "$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"
    "specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7)"
    "return"
    "r1 := @this: com.thealgorithms.datastructures.trees.AVLTree"->"r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node";
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node"->"if r0 == null goto return";
    "if r0 == null goto return"->"$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)";
    "if r0 == null goto return"->"return";
    "$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"->"specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)";
    "specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2)"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = newarray (java.lang.Object)[1]";
    "$r3 = newarray (java.lang.Object)[1]"->"$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)";
    "$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r3[0] = $r5";
    "$r3[0] = $r5"->"virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s \", $r3)";
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s \", $r3)"->"$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)";
    "$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0)"->"specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7)";
    "specialinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7)"->"return";
}
