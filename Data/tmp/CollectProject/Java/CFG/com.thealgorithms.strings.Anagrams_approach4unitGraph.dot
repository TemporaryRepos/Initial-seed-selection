digraph "unitGraph" {
    "r20 := @this: com.thealgorithms.strings.Anagrams"
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if $i0 == $i1 goto $r2 = new java.util.HashMap"
    "return 0"
    "$r2 = new java.util.HashMap"
    "specialinvoke $r2.<java.util.HashMap: void <init>()>()"
    "r3 = $r2"
    "$r4 = new java.util.HashMap"
    "specialinvoke $r4.<java.util.HashMap: void <init>()>()"
    "r5 = $r4"
    "r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "i6 = lengthof r21"
    "i7 = 0"
    "if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"
    "c8 = r21[i7]"
    "$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)"
    "$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)"
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15)"
    "$r17 = (java.lang.Integer) $r16"
    "$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>()"
    "$i5 = $i4 + 1"
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"
    "i9 = lengthof r22"
    "i10 = 0"
    "if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)"
    "c11 = r22[i10]"
    "$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)"
    "$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8)"
    "$r10 = (java.lang.Integer) $r9"
    "$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()"
    "$i3 = $i2 + 1"
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11)"
    "i10 = i10 + 1"
    "$z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)"
    "return $z0"
    "r20 := @this: com.thealgorithms.strings.Anagrams"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if $i0 == $i1 goto $r2 = new java.util.HashMap";
    "if $i0 == $i1 goto $r2 = new java.util.HashMap"->"return 0";
    "if $i0 == $i1 goto $r2 = new java.util.HashMap"->"$r2 = new java.util.HashMap";
    "$r2 = new java.util.HashMap"->"specialinvoke $r2.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r2.<java.util.HashMap: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.util.HashMap";
    "$r4 = new java.util.HashMap"->"specialinvoke $r4.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r4.<java.util.HashMap: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r21 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"i6 = lengthof r21";
    "i6 = lengthof r21"->"i7 = 0";
    "i7 = 0"->"if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()";
    "if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"->"c8 = r21[i7]";
    "if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"->"r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()";
    "c8 = r21[i7]"->"$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)";
    "$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)"->"$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)";
    "$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c8)"->"$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15)";
    "$r16 = virtualinvoke r3.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r14, $r15)"->"$r17 = (java.lang.Integer) $r16";
    "$r17 = (java.lang.Integer) $r16"->"$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>()"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18)";
    "virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r18)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i6 goto r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()";
    "r22 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"->"i9 = lengthof r22";
    "i9 = lengthof r22"->"i10 = 0";
    "i10 = 0"->"if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)";
    "if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)"->"c11 = r22[i10]";
    "if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)"->"$z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)";
    "c11 = r22[i10]"->"$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)";
    "$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)"->"$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)";
    "$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c11)"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8)";
    "$r9 = virtualinvoke r5.<java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r7, $r8)"->"$r10 = (java.lang.Integer) $r9";
    "$r10 = (java.lang.Integer) $r9"->"$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()"->"$i3 = $i2 + 1";
    "$i3 = $i2 + 1"->"$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11)";
    "virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= i9 goto $z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)";
    "$z0 = virtualinvoke r3.<java.util.HashMap: boolean equals(java.lang.Object)>(r5)"->"return $z0";
}
