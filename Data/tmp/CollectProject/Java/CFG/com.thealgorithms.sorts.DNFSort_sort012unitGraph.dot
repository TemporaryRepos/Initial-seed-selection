digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i4 = 0"
    "i5 = i0 - 1"
    "i6 = 0"
    "z0 = 0"
    "if i6 > i5 goto return"
    "$i1 = r0[i6]"
    "tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }"
    "i7 = r0[i4]"
    "$i3 = r0[i6]"
    "r0[i4] = $i3"
    "r0[i6] = i7"
    "i4 = i4 + 1"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "i8 = r0[i6]"
    "$i2 = r0[i5]"
    "r0[i6] = $i2"
    "r0[i5] = i8"
    "i5 = i5 + -1"
    "return"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i4 = 0";
    "i4 = 0"->"i5 = i0 - 1";
    "i5 = i0 - 1"->"i6 = 0";
    "i6 = 0"->"z0 = 0";
    "z0 = 0"->"if i6 > i5 goto return";
    "if i6 > i5 goto return"->"$i1 = r0[i6]";
    "if i6 > i5 goto return"->"return";
    "$i1 = r0[i6]"->"tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }";
    "tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }"->"i7 = r0[i4]";
    "tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }"->"i6 = i6 + 1";
    "tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }"->"i8 = r0[i6]";
    "tableswitch($i1) {     case 0: goto i7 = r0[i4];     case 1: goto i6 = i6 + 1;     case 2: goto i8 = r0[i6];     default: goto goto [?= (branch)]; }"->"goto [?= (branch)]";
    "i7 = r0[i4]"->"$i3 = r0[i6]";
    "$i3 = r0[i6]"->"r0[i4] = $i3";
    "r0[i4] = $i3"->"r0[i6] = i7";
    "r0[i6] = i7"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"goto [?= (branch)]";
    "i8 = r0[i6]"->"$i2 = r0[i5]";
    "$i2 = r0[i5]"->"r0[i6] = $i2";
    "r0[i6] = $i2"->"r0[i5] = i8";
    "r0[i5] = i8"->"i5 = i5 + -1";
    "i5 = i5 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 > i5 goto return";
}
