digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = new com.thealgorithms.datastructures.stacks.StackArrayList"
    "specialinvoke $r0.<com.thealgorithms.datastructures.stacks.StackArrayList: void <init>()>()"
    "r1 = $r0"
    "$z0 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z0 != 0 goto i7 = 1"
    "$z7 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"
    "if $z7 != 0 goto i7 = 1"
    "$r6 = new java.lang.AssertionError"
    "specialinvoke $r6.<java.lang.AssertionError: void <init>()>()"
    "throw $r6"
    "i7 = 1"
    "if i7 > 5 goto $z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: void push(int)>(i7)"
    "$z6 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z6 != 0 goto i7 = i7 + 1"
    "$i6 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()"
    "if $i6 == i7 goto i7 = i7 + 1"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"
    "throw $r5"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "$z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "$i5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()"
    "if $i5 == 5 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "$r4 = new java.lang.AssertionError"
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"
    "throw $r4"
    "$z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"
    "$i2 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()"
    "if $i2 != 5 goto $r9 = new java.lang.AssertionError"
    "$i3 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"
    "if $i3 != 5 goto $r9 = new java.lang.AssertionError"
    "$i4 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()"
    "if $i4 == 4 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"
    "$r9 = new java.lang.AssertionError"
    "specialinvoke $r9.<java.lang.AssertionError: void <init>()>()"
    "throw $r9"
    "$z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"
    "if $z8 != 0 goto $z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"
    "goto [?= $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()]"
    "$z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z3 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"
    "$z5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"
    "if $z5 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"
    "throw $r3"
    "$z4 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"
    "if $z4 != 0 goto (branch)"
    "$r2 = new java.lang.AssertionError"
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"
    "throw $r2"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "r10 = $r7"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = new com.thealgorithms.datastructures.stacks.StackArrayList";
    "$r0 = new com.thealgorithms.datastructures.stacks.StackArrayList"->"specialinvoke $r0.<com.thealgorithms.datastructures.stacks.StackArrayList: void <init>()>()";
    "specialinvoke $r0.<com.thealgorithms.datastructures.stacks.StackArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$z0 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z0 != 0 goto i7 = 1";
    "if $z0 != 0 goto i7 = 1"->"$z7 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "if $z0 != 0 goto i7 = 1"->"i7 = 1";
    "$z7 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"if $z7 != 0 goto i7 = 1";
    "if $z7 != 0 goto i7 = 1"->"$r6 = new java.lang.AssertionError";
    "if $z7 != 0 goto i7 = 1"->"i7 = 1";
    "$r6 = new java.lang.AssertionError"->"specialinvoke $r6.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r6.<java.lang.AssertionError: void <init>()>()"->"throw $r6";
    "i7 = 1"->"if i7 > 5 goto $z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "if i7 > 5 goto $z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: void push(int)>(i7)";
    "if i7 > 5 goto $z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: void push(int)>(i7)"->"$z6 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "$z6 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z6 != 0 goto i7 = i7 + 1";
    "if $z6 != 0 goto i7 = i7 + 1"->"$i6 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()";
    "if $z6 != 0 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$i6 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()"->"if $i6 == i7 goto i7 = i7 + 1";
    "if $i6 == i7 goto i7 = i7 + 1"->"$r5 = new java.lang.AssertionError";
    "if $i6 == i7 goto i7 = i7 + 1"->"i7 = i7 + 1";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"->"throw $r5";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 > 5 goto $z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "$z1 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$i5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "$i5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int size()>()"->"if $i5 == 5 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "if $i5 == 5 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$r4 = new java.lang.AssertionError";
    "if $i5 == 5 goto $z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "$r4 = new java.lang.AssertionError"->"specialinvoke $r4.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r4.<java.lang.AssertionError: void <init>()>()"->"throw $r4";
    "$z2 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z2 != 0 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "if $z2 != 0 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"$i2 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()";
    "if $z2 != 0 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"$z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "$i2 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()"->"if $i2 != 5 goto $r9 = new java.lang.AssertionError";
    "if $i2 != 5 goto $r9 = new java.lang.AssertionError"->"$i3 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $i2 != 5 goto $r9 = new java.lang.AssertionError"->"$r9 = new java.lang.AssertionError";
    "$i3 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"if $i3 != 5 goto $r9 = new java.lang.AssertionError";
    "if $i3 != 5 goto $r9 = new java.lang.AssertionError"->"$i4 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()";
    "if $i3 != 5 goto $r9 = new java.lang.AssertionError"->"$r9 = new java.lang.AssertionError";
    "$i4 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int peek()>()"->"if $i4 == 4 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "if $i4 == 4 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"$r9 = new java.lang.AssertionError";
    "if $i4 == 4 goto $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"$z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "$r9 = new java.lang.AssertionError"->"specialinvoke $r9.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r9.<java.lang.AssertionError: void <init>()>()"->"throw $r9";
    "$z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"if $z8 != 0 goto $z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "if $z8 != 0 goto $z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $z8 != 0 goto $z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"goto [?= $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()]";
    "goto [?= $z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()]"->"$z8 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "$z3 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z3 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $z3 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$z5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()";
    "if $z3 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $z3 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$r7 := @caughtexception";
    "$z5 = virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: boolean isEmpty()>()"->"if $z5 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $z5 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$r3 = new java.lang.AssertionError";
    "if $z5 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()";
    "if $z5 != 0 goto virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$r7 := @caughtexception";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"->"throw $r3";
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$z4 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>";
    "virtualinvoke r1.<com.thealgorithms.datastructures.stacks.StackArrayList: int pop()>()"->"$r7 := @caughtexception";
    "$z4 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"if $z4 != 0 goto (branch)";
    "$z4 = <com.thealgorithms.datastructures.stacks.StackArrayList: boolean $assertionsDisabled>"->"$r7 := @caughtexception";
    "if $z4 != 0 goto (branch)"->"$r2 = new java.lang.AssertionError";
    "if $z4 != 0 goto (branch)"->"goto [?= return]";
    "if $z4 != 0 goto (branch)"->"$r7 := @caughtexception";
    "$r2 = new java.lang.AssertionError"->"specialinvoke $r2.<java.lang.AssertionError: void <init>()>()";
    "$r2 = new java.lang.AssertionError"->"$r7 := @caughtexception";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"throw $r2";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"$r7 := @caughtexception";
    "throw $r2"->"$r7 := @caughtexception";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"r10 = $r7";
    "r10 = $r7"->"return";
}
