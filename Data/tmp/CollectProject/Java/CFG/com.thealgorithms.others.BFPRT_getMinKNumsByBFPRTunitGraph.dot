digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "if i0 < 1 goto return null"
    "$i1 = lengthof r0"
    "if i0 <= $i1 goto i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)"
    "return null"
    "i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)"
    "r1 = newarray (int)[i0]"
    "i8 = 0"
    "i9 = 0"
    "$i3 = lengthof r0"
    "if i9 >= $i3 goto $i4 = lengthof r1"
    "$i5 = r0[i9]"
    "if $i5 >= i2 goto i9 = i9 + 1"
    "$i6 = i8"
    "i8 = i8 + 1"
    "$i7 = r0[i9]"
    "r1[$i6] = $i7"
    "i9 = i9 + 1"
    "goto [?= $i3 = lengthof r0]"
    "$i4 = lengthof r1"
    "if i8 == $i4 goto return r1"
    "r1[i8] = i2"
    "goto [?= $i4 = lengthof r1]"
    "return r1"
    "r0 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"if i0 < 1 goto return null";
    "if i0 < 1 goto return null"->"$i1 = lengthof r0";
    "if i0 < 1 goto return null"->"return null";
    "$i1 = lengthof r0"->"if i0 <= $i1 goto i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)";
    "if i0 <= $i1 goto i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)"->"return null";
    "if i0 <= $i1 goto i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)"->"i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)";
    "i2 = staticinvoke <com.thealgorithms.others.BFPRT: int getMinKthByBFPRT(int[],int)>(r0, i0)"->"r1 = newarray (int)[i0]";
    "r1 = newarray (int)[i0]"->"i8 = 0";
    "i8 = 0"->"i9 = 0";
    "i9 = 0"->"$i3 = lengthof r0";
    "$i3 = lengthof r0"->"if i9 >= $i3 goto $i4 = lengthof r1";
    "if i9 >= $i3 goto $i4 = lengthof r1"->"$i5 = r0[i9]";
    "if i9 >= $i3 goto $i4 = lengthof r1"->"$i4 = lengthof r1";
    "$i5 = r0[i9]"->"if $i5 >= i2 goto i9 = i9 + 1";
    "if $i5 >= i2 goto i9 = i9 + 1"->"$i6 = i8";
    "if $i5 >= i2 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$i6 = i8"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"$i7 = r0[i9]";
    "$i7 = r0[i9]"->"r1[$i6] = $i7";
    "r1[$i6] = $i7"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i3 = lengthof r0]";
    "goto [?= $i3 = lengthof r0]"->"$i3 = lengthof r0";
    "$i4 = lengthof r1"->"if i8 == $i4 goto return r1";
    "if i8 == $i4 goto return r1"->"r1[i8] = i2";
    "if i8 == $i4 goto return r1"->"return r1";
    "r1[i8] = i2"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i4 = lengthof r1]";
    "goto [?= $i4 = lengthof r1]"->"$i4 = lengthof r1";
}
