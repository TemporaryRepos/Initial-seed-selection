digraph "unitGraph" {
    "r3 := @this: com.thealgorithms.sorts.SwapSort"
    "r0 := @parameter0: java.lang.Comparable[]"
    "i1 := @parameter1: int"
    "i2 = 0"
    "i3 = 0"
    "$i0 = lengthof r0"
    "if i3 >= $i0 goto return i2"
    "$r2 = r0[i3]"
    "$r1 = r0[i1]"
    "$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1)"
    "if $z0 == 0 goto i3 = i3 + 1"
    "i2 = i2 + 1"
    "i3 = i3 + 1"
    "goto [?= $i0 = lengthof r0]"
    "return i2"
    "r3 := @this: com.thealgorithms.sorts.SwapSort"->"r0 := @parameter0: java.lang.Comparable[]";
    "r0 := @parameter0: java.lang.Comparable[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i2 = 0";
    "i2 = 0"->"i3 = 0";
    "i3 = 0"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if i3 >= $i0 goto return i2";
    "if i3 >= $i0 goto return i2"->"$r2 = r0[i3]";
    "if i3 >= $i0 goto return i2"->"return i2";
    "$r2 = r0[i3]"->"$r1 = r0[i1]";
    "$r1 = r0[i1]"->"$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1)";
    "$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r2, $r1)"->"if $z0 == 0 goto i3 = i3 + 1";
    "if $z0 == 0 goto i3 = i3 + 1"->"i2 = i2 + 1";
    "if $z0 == 0 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "i2 = i2 + 1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= $i0 = lengthof r0]";
    "goto [?= $i0 = lengthof r0]"->"$i0 = lengthof r0";
}
