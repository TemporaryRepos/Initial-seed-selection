digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.sorts.SelectionSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i3 = 0;
"
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$i1 = i0 - 1;
if i3 >= $i1 goto return r0;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i3;
i5 = i3 + 1;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$r2 = r0[i5];
$i2 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i5 = i5 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i5;
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i4 == i3 goto i3 = i3 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
r5 = r0[i3];
$r1 = r0[i4];
r0[i3] = $r1;
r0[i4] = r5;
"
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i1 = i0 - 1];
"
    "Block 10:
[preds: 1 ] [succs: ]
return r0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.sorts.SelectionSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i3 = 0;
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$i1 = i0 - 1;
if i3 >= $i1 goto return r0;
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$i1 = i0 - 1;
if i3 >= $i1 goto return r0;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i3;
i5 = i3 + 1;
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$i1 = i0 - 1;
if i3 >= $i1 goto return r0;
"->"Block 10:
[preds: 1 ] [succs: ]
return r0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i4 = i3;
i5 = i3 + 1;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$r2 = r0[i5];
$i2 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i5 = i5 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
"->"Block 7:
[preds: 3 ] [succs: 8 9 ]
if i4 == i3 goto i3 = i3 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$r2 = r0[i5];
$i2 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i5 = i5 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i5;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r3 = r0[i4];
$r2 = r0[i5];
$i2 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i5 = i5 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = i5;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i5 >= i0 goto (branch);
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i4 == i3 goto i3 = i3 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
r5 = r0[i3];
$r1 = r0[i4];
r0[i3] = $r1;
r0[i4] = r5;
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i4 == i3 goto i3 = i3 + 1;
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i1 = i0 - 1];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
r5 = r0[i3];
$r1 = r0[i4];
r0[i3] = $r1;
r0[i4] = r5;
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i1 = i0 - 1];
";
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
i3 = i3 + 1;
goto [?= $i1 = i0 - 1];
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$i1 = i0 - 1;
if i3 >= $i1 goto return r0;
";
}
