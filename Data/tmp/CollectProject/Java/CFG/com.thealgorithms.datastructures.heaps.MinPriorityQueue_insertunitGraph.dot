digraph "unitGraph" {
    "r0 := @this: com.thealgorithms.datastructures.heaps.MinPriorityQueue"
    "i1 := @parameter0: int"
    "$z0 = virtualinvoke r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: boolean isFull()>()"
    "if $z0 == 0 goto $r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "return"
    "$r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$i0 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"
    "$i2 = $i0 + 1"
    "$r1[$i2] = i1"
    "$i3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"
    "i13 = $i3 + 1"
    "if i13 <= 1 goto $i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"
    "$r2 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$i8 = $r2[i13]"
    "$r3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$i6 = i13 / 2"
    "$i7 = $r3[$i6]"
    "if $i8 >= $i7 goto i13 = i13 / 2"
    "$r4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "i9 = $r4[i13]"
    "$r6 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$r5 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$i10 = i13 / 2"
    "$i11 = $r5[$i10]"
    "$r6[i13] = $i11"
    "$r7 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"
    "$i12 = i13 / 2"
    "$r7[$i12] = i9"
    "i13 = i13 / 2"
    "goto [?= (branch)]"
    "$i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"
    "$i5 = $i4 + 1"
    "r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size> = $i5"
    "r0 := @this: com.thealgorithms.datastructures.heaps.MinPriorityQueue"->"i1 := @parameter0: int";
    "i1 := @parameter0: int"->"$z0 = virtualinvoke r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: boolean isFull()>()";
    "$z0 = virtualinvoke r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: boolean isFull()>()"->"if $z0 == 0 goto $r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "if $z0 == 0 goto $r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"return";
    "if $z0 == 0 goto $r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "$r1 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$i0 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>";
    "$i0 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"->"$i2 = $i0 + 1";
    "$i2 = $i0 + 1"->"$r1[$i2] = i1";
    "$r1[$i2] = i1"->"$i3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>";
    "$i3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"->"i13 = $i3 + 1";
    "i13 = $i3 + 1"->"if i13 <= 1 goto $i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>";
    "if i13 <= 1 goto $i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"->"$r2 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "if i13 <= 1 goto $i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"->"$i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>";
    "$r2 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$i8 = $r2[i13]";
    "$i8 = $r2[i13]"->"$r3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "$r3 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$i6 = i13 / 2";
    "$i6 = i13 / 2"->"$i7 = $r3[$i6]";
    "$i7 = $r3[$i6]"->"if $i8 >= $i7 goto i13 = i13 / 2";
    "if $i8 >= $i7 goto i13 = i13 / 2"->"$r4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "if $i8 >= $i7 goto i13 = i13 / 2"->"i13 = i13 / 2";
    "$r4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"i9 = $r4[i13]";
    "i9 = $r4[i13]"->"$r6 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "$r6 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$r5 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "$r5 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$i10 = i13 / 2";
    "$i10 = i13 / 2"->"$i11 = $r5[$i10]";
    "$i11 = $r5[$i10]"->"$r6[i13] = $i11";
    "$r6[i13] = $i11"->"$r7 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>";
    "$r7 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int[] heap>"->"$i12 = i13 / 2";
    "$i12 = i13 / 2"->"$r7[$i12] = i9";
    "$r7[$i12] = i9"->"i13 = i13 / 2";
    "i13 = i13 / 2"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 <= 1 goto $i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>";
    "$i4 = r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size>"->"$i5 = $i4 + 1";
    "$i5 = $i4 + 1"->"r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size> = $i5";
    "r0.<com.thealgorithms.datastructures.heaps.MinPriorityQueue: int size> = $i5"->"return";
}
