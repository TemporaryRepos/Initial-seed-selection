digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "if r0 == null goto return r0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if $i0 != 0 goto $i1 = virtualinvoke r0.<java.lang.String: int length()>()"
    "return r0"
    "$i1 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "r1 = newmultiarray (boolean)[$i1][$i2]"
    "i13 = 0"
    "i14 = 0"
    "i15 = 0"
    "$i3 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i15 >= $i3 goto $i4 = i14 + 1"
    "i16 = 0"
    "i17 = i15"
    "$i5 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i17 >= $i5 goto i15 = i15 + 1"
    "if i15 != 0 goto (branch)"
    "$r5 = r1[i16]"
    "$r5[i17] = 1"
    "goto [?= $r7 = r1[i16]]"
    "if i15 != 1 goto $r6 = r1[i16]"
    "$r4 = r1[i16]"
    "$i12 = i17"
    "$c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"
    "$c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)"
    "if $c10 != $c11 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= $r4[$i12] = $z1]"
    "$z1 = 0"
    "$r4[$i12] = $z1"
    "$r6 = r1[i16]"
    "$i18 = i17"
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"
    "$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)"
    "if $c6 != $c7 goto $z2 = 0"
    "$i8 = i16 + 1"
    "$r3 = r1[$i8]"
    "$i9 = i17 - 1"
    "$z0 = $r3[$i9]"
    "if $z0 == 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= $r6[$i18] = $z2]"
    "$z2 = 0"
    "$r6[$i18] = $z2"
    "$r7 = r1[i16]"
    "$z3 = $r7[i17]"
    "if $z3 == 0 goto i16 = i16 + 1"
    "i13 = i16"
    "i14 = i17"
    "i16 = i16 + 1"
    "i17 = i17 + 1"
    "goto [?= $i5 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "i15 = i15 + 1"
    "goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "$i4 = i14 + 1"
    "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i13, $i4)"
    "return $r2"
    "r0 := @parameter0: java.lang.String"->"if r0 == null goto return r0";
    "if r0 == null goto return r0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if r0 == null goto return r0"->"return r0";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if $i0 != 0 goto $i1 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $i0 != 0 goto $i1 = virtualinvoke r0.<java.lang.String: int length()>()"->"return r0";
    "if $i0 != 0 goto $i1 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"r1 = newmultiarray (boolean)[$i1][$i2]";
    "r1 = newmultiarray (boolean)[$i1][$i2]"->"i13 = 0";
    "i13 = 0"->"i14 = 0";
    "i14 = 0"->"i15 = 0";
    "i15 = 0"->"$i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i15 >= $i3 goto $i4 = i14 + 1";
    "if i15 >= $i3 goto $i4 = i14 + 1"->"i16 = 0";
    "if i15 >= $i3 goto $i4 = i14 + 1"->"$i4 = i14 + 1";
    "i16 = 0"->"i17 = i15";
    "i17 = i15"->"$i5 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i5 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i17 >= $i5 goto i15 = i15 + 1";
    "if i17 >= $i5 goto i15 = i15 + 1"->"if i15 != 0 goto (branch)";
    "if i17 >= $i5 goto i15 = i15 + 1"->"i15 = i15 + 1";
    "if i15 != 0 goto (branch)"->"$r5 = r1[i16]";
    "if i15 != 0 goto (branch)"->"if i15 != 1 goto $r6 = r1[i16]";
    "$r5 = r1[i16]"->"$r5[i17] = 1";
    "$r5[i17] = 1"->"goto [?= $r7 = r1[i16]]";
    "goto [?= $r7 = r1[i16]]"->"$r7 = r1[i16]";
    "if i15 != 1 goto $r6 = r1[i16]"->"$r4 = r1[i16]";
    "if i15 != 1 goto $r6 = r1[i16]"->"$r6 = r1[i16]";
    "$r4 = r1[i16]"->"$i12 = i17";
    "$i12 = i17"->"$c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)";
    "$c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"->"$c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)";
    "$c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)"->"if $c10 != $c11 goto $z1 = 0";
    "if $c10 != $c11 goto $z1 = 0"->"$z1 = 1";
    "if $c10 != $c11 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= $r4[$i12] = $z1]";
    "goto [?= $r4[$i12] = $z1]"->"$r4[$i12] = $z1";
    "$z1 = 0"->"$r4[$i12] = $z1";
    "$r4[$i12] = $z1"->"goto [?= $r7 = r1[i16]]";
    "goto [?= $r7 = r1[i16]]"->"$r7 = r1[i16]";
    "$r6 = r1[i16]"->"$i18 = i17";
    "$i18 = i17"->"$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)";
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16)"->"$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)";
    "$c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17)"->"if $c6 != $c7 goto $z2 = 0";
    "if $c6 != $c7 goto $z2 = 0"->"$i8 = i16 + 1";
    "if $c6 != $c7 goto $z2 = 0"->"$z2 = 0";
    "$i8 = i16 + 1"->"$r3 = r1[$i8]";
    "$r3 = r1[$i8]"->"$i9 = i17 - 1";
    "$i9 = i17 - 1"->"$z0 = $r3[$i9]";
    "$z0 = $r3[$i9]"->"if $z0 == 0 goto $z2 = 0";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 1";
    "if $z0 == 0 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= $r6[$i18] = $z2]";
    "goto [?= $r6[$i18] = $z2]"->"$r6[$i18] = $z2";
    "$z2 = 0"->"$r6[$i18] = $z2";
    "$r6[$i18] = $z2"->"$r7 = r1[i16]";
    "$r7 = r1[i16]"->"$z3 = $r7[i17]";
    "$z3 = $r7[i17]"->"if $z3 == 0 goto i16 = i16 + 1";
    "if $z3 == 0 goto i16 = i16 + 1"->"i13 = i16";
    "if $z3 == 0 goto i16 = i16 + 1"->"i16 = i16 + 1";
    "i13 = i16"->"i14 = i17";
    "i14 = i17"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"i17 = i17 + 1";
    "i17 = i17 + 1"->"goto [?= $i5 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i5 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i5 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i15 = i15 + 1"->"goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i4 = i14 + 1"->"$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i13, $i4)";
    "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i13, $i4)"->"return $r2";
}
