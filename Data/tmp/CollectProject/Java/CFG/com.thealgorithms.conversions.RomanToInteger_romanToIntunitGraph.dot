digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String"
    "r9 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()"
    "c4 = 32"
    "i5 = 0"
    "i6 = 0"
    "$i0 = virtualinvoke r9.<java.lang.String: int length()>()"
    "i7 = $i0 - 1"
    "if i7 < 0 goto return i5"
    "c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i7)"
    "if c4 == 32 goto $r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"
    "$r0 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"
    "$r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)"
    "$r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)"
    "$r3 = (java.lang.Integer) $r2"
    "$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"
    "if $i3 <= i6 goto $i8 = i6"
    "$r4 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"
    "$r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)"
    "$r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)"
    "$r7 = (java.lang.Integer) $r6"
    "$i8 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"
    "goto [?= i6 = $i8]"
    "$i8 = i6"
    "i6 = $i8"
    "$r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"
    "$r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"
    "$r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)"
    "$r13 = (java.lang.Integer) $r12"
    "i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"
    "if i2 < i6 goto i5 = i5 - i2"
    "i5 = i5 + i2"
    "goto [?= c4 = c1]"
    "i5 = i5 - i2"
    "c4 = c1"
    "i7 = i7 + -1"
    "goto [?= (branch)]"
    "return i5"
    "r8 := @parameter0: java.lang.String"->"r9 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()";
    "r9 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()"->"c4 = 32";
    "c4 = 32"->"i5 = 0";
    "i5 = 0"->"i6 = 0";
    "i6 = 0"->"$i0 = virtualinvoke r9.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r9.<java.lang.String: int length()>()"->"i7 = $i0 - 1";
    "i7 = $i0 - 1"->"if i7 < 0 goto return i5";
    "if i7 < 0 goto return i5"->"c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i7)";
    "if i7 < 0 goto return i5"->"return i5";
    "c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i7)"->"if c4 == 32 goto $r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>";
    "if c4 == 32 goto $r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"->"$r0 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>";
    "if c4 == 32 goto $r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"->"$r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>";
    "$r0 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"->"$r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)";
    "$r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)"->"$r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)";
    "$r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)"->"$r3 = (java.lang.Integer) $r2";
    "$r3 = (java.lang.Integer) $r2"->"$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"->"if $i3 <= i6 goto $i8 = i6";
    "if $i3 <= i6 goto $i8 = i6"->"$r4 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>";
    "if $i3 <= i6 goto $i8 = i6"->"$i8 = i6";
    "$r4 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"->"$r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)";
    "$r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4)"->"$r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)";
    "$r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)"->"$r7 = (java.lang.Integer) $r6";
    "$r7 = (java.lang.Integer) $r6"->"$i8 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()";
    "$i8 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()"->"goto [?= i6 = $i8]";
    "goto [?= i6 = $i8]"->"i6 = $i8";
    "$i8 = i6"->"i6 = $i8";
    "i6 = $i8"->"$r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>";
    "$r10 = <com.thealgorithms.conversions.RomanToInteger: java.util.Map map>"->"$r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "$r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"$r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)";
    "$r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)"->"$r13 = (java.lang.Integer) $r12";
    "$r13 = (java.lang.Integer) $r12"->"i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()";
    "i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"->"if i2 < i6 goto i5 = i5 - i2";
    "if i2 < i6 goto i5 = i5 - i2"->"i5 = i5 + i2";
    "if i2 < i6 goto i5 = i5 - i2"->"i5 = i5 - i2";
    "i5 = i5 + i2"->"goto [?= c4 = c1]";
    "goto [?= c4 = c1]"->"c4 = c1";
    "i5 = i5 - i2"->"c4 = c1";
    "c4 = c1"->"i7 = i7 + -1";
    "i7 = i7 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 < 0 goto return i5";
}
