digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.sorts.CycleSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i4 = 0;
"
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
$i1 = i0 - 2;
if i4 > $i1 goto return r0;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r7 = r0[i4];
i5 = i4;
i6 = i4 + 1;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i6 >= i0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = r0[i6];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r6, r7);
if $z1 == 0 goto i6 = i6 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i5 != i4 goto $r1 = r0[i5];
"
    "Block 8:
[preds: 7 ] [succs: 23 ]
goto [?= i4 = i4 + 1];
"
    "Block 9:
[preds: 7 10 ] [succs: 10 11 ]
$r1 = r0[i5];
$i2 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);
if $i2 != 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: 9 ]
i5 = i5 + 1;
goto [?= $r1 = r0[i5]];
"
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i5 == i4 goto (branch);
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
"
    "Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
i5 = i4;
i7 = i4 + 1;
"
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i7 >= i0 goto $r2 = r0[i5];
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r5 = r0[i7];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r5, r7);
if $z0 == 0 goto i7 = i7 + 1;
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
i5 = i5 + 1;
"
    "Block 18:
[preds: 16 17 ] [succs: 15 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 15 20 ] [succs: 20 21 ]
$r2 = r0[i5];
$i3 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i3 != 0 goto $r3 = r0[i5];
"
    "Block 20:
[preds: 19 ] [succs: 19 ]
i5 = i5 + 1;
goto [?= $r2 = r0[i5]];
"
    "Block 21:
[preds: 19 ] [succs: 22 13 ]
$r3 = r0[i5];
if r7 == $r3 goto (branch);
"
    "Block 22:
[preds: 21 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
goto [?= (branch)];
"
    "Block 23:
[preds: 8 13 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i1 = i0 - 2];
"
    "Block 24:
[preds: 1 ] [succs: ]
return r0;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.sorts.CycleSort;
r0 := @parameter0: java.lang.Comparable[];
i0 = lengthof r0;
i4 = 0;
"->"Block 1:
[preds: 0 23 ] [succs: 2 24 ]
$i1 = i0 - 2;
if i4 > $i1 goto return r0;
";
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
$i1 = i0 - 2;
if i4 > $i1 goto return r0;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r7 = r0[i4];
i5 = i4;
i6 = i4 + 1;
";
    "Block 1:
[preds: 0 23 ] [succs: 2 24 ]
$i1 = i0 - 2;
if i4 > $i1 goto return r0;
"->"Block 24:
[preds: 1 ] [succs: ]
return r0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r7 = r0[i4];
i5 = i4;
i6 = i4 + 1;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i6 >= i0 goto (branch);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i6 >= i0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = r0[i6];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r6, r7);
if $z1 == 0 goto i6 = i6 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i6 >= i0 goto (branch);
"->"Block 7:
[preds: 3 ] [succs: 8 9 ]
if i5 != i4 goto $r1 = r0[i5];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = r0[i6];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r6, r7);
if $z1 == 0 goto i6 = i6 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r6 = r0[i6];
$z1 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r6, r7);
if $z1 == 0 goto i6 = i6 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i6 >= i0 goto (branch);
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i5 != i4 goto $r1 = r0[i5];
"->"Block 8:
[preds: 7 ] [succs: 23 ]
goto [?= i4 = i4 + 1];
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
if i5 != i4 goto $r1 = r0[i5];
"->"Block 9:
[preds: 7 10 ] [succs: 10 11 ]
$r1 = r0[i5];
$i2 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);
if $i2 != 0 goto (branch);
";
    "Block 8:
[preds: 7 ] [succs: 23 ]
goto [?= i4 = i4 + 1];
"->"Block 23:
[preds: 8 13 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i1 = i0 - 2];
";
    "Block 9:
[preds: 7 10 ] [succs: 10 11 ]
$r1 = r0[i5];
$i2 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);
if $i2 != 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: 9 ]
i5 = i5 + 1;
goto [?= $r1 = r0[i5]];
";
    "Block 9:
[preds: 7 10 ] [succs: 10 11 ]
$r1 = r0[i5];
$i2 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);
if $i2 != 0 goto (branch);
"->"Block 11:
[preds: 9 ] [succs: 12 13 ]
if i5 == i4 goto (branch);
";
    "Block 10:
[preds: 9 ] [succs: 9 ]
i5 = i5 + 1;
goto [?= $r1 = r0[i5]];
"->"Block 9:
[preds: 7 10 ] [succs: 10 11 ]
$r1 = r0[i5];
$i2 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);
if $i2 != 0 goto (branch);
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i5 == i4 goto (branch);
"->"Block 12:
[preds: 11 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if i5 == i4 goto (branch);
"->"Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
"->"Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
";
    "Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
"->"Block 14:
[preds: 13 ] [succs: 15 ]
i5 = i4;
i7 = i4 + 1;
";
    "Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
"->"Block 23:
[preds: 8 13 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i1 = i0 - 2];
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
i5 = i4;
i7 = i4 + 1;
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i7 >= i0 goto $r2 = r0[i5];
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i7 >= i0 goto $r2 = r0[i5];
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$r5 = r0[i7];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r5, r7);
if $z0 == 0 goto i7 = i7 + 1;
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i7 >= i0 goto $r2 = r0[i5];
"->"Block 19:
[preds: 15 20 ] [succs: 20 21 ]
$r2 = r0[i5];
$i3 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i3 != 0 goto $r3 = r0[i5];
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r5 = r0[i7];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r5, r7);
if $z0 == 0 goto i7 = i7 + 1;
"->"Block 17:
[preds: 16 ] [succs: 18 ]
i5 = i5 + 1;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r5 = r0[i7];
$z0 = staticinvoke <com.thealgorithms.sorts.SortUtils: boolean less(java.lang.Comparable,java.lang.Comparable)>($r5, r7);
if $z0 == 0 goto i7 = i7 + 1;
"->"Block 18:
[preds: 16 17 ] [succs: 15 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
i5 = i5 + 1;
"->"Block 18:
[preds: 16 17 ] [succs: 15 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 18:
[preds: 16 17 ] [succs: 15 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i7 >= i0 goto $r2 = r0[i5];
";
    "Block 19:
[preds: 15 20 ] [succs: 20 21 ]
$r2 = r0[i5];
$i3 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i3 != 0 goto $r3 = r0[i5];
"->"Block 20:
[preds: 19 ] [succs: 19 ]
i5 = i5 + 1;
goto [?= $r2 = r0[i5]];
";
    "Block 19:
[preds: 15 20 ] [succs: 20 21 ]
$r2 = r0[i5];
$i3 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i3 != 0 goto $r3 = r0[i5];
"->"Block 21:
[preds: 19 ] [succs: 22 13 ]
$r3 = r0[i5];
if r7 == $r3 goto (branch);
";
    "Block 20:
[preds: 19 ] [succs: 19 ]
i5 = i5 + 1;
goto [?= $r2 = r0[i5]];
"->"Block 19:
[preds: 15 20 ] [succs: 20 21 ]
$r2 = r0[i5];
$i3 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i3 != 0 goto $r3 = r0[i5];
";
    "Block 21:
[preds: 19 ] [succs: 22 13 ]
$r3 = r0[i5];
if r7 == $r3 goto (branch);
"->"Block 22:
[preds: 21 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
goto [?= (branch)];
";
    "Block 21:
[preds: 19 ] [succs: 22 13 ]
$r3 = r0[i5];
if r7 == $r3 goto (branch);
"->"Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
";
    "Block 22:
[preds: 21 ] [succs: 13 ]
r7 = specialinvoke r4.<com.thealgorithms.sorts.CycleSort: java.lang.Comparable replace(java.lang.Comparable[],int,java.lang.Comparable)>(r0, i5, r7);
goto [?= (branch)];
"->"Block 13:
[preds: 11 12 21 22 ] [succs: 14 23 ]
if i5 == i4 goto i4 = i4 + 1;
";
    "Block 23:
[preds: 8 13 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i1 = i0 - 2];
"->"Block 1:
[preds: 0 23 ] [succs: 2 24 ]
$i1 = i0 - 2;
if i4 > $i1 goto return r0;
";
}
