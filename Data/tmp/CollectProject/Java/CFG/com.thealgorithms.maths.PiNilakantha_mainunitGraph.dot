digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$z0 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "$d3 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(0)"
    "$b2 = $d3 cmpl 3.0"
    "if $b2 == 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "$r3 = new java.lang.AssertionError"
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"
    "throw $r3"
    "$z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "$d2 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(10)"
    "$b1 = $d2 cmpl 3.0"
    "if $b1 > 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "$r2 = new java.lang.AssertionError"
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"
    "throw $r2"
    "$z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"
    "if $z2 != 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"
    "$d1 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(100)"
    "$b0 = $d1 cmpg 4.0"
    "if $b0 < 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = new java.lang.AssertionError"
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"
    "throw $r1"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "$d0 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(500)"
    "virtualinvoke $r0.<java.io.PrintStream: void println(double)>($d0)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$z0 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$d3 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(0)";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "$d3 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(0)"->"$b2 = $d3 cmpl 3.0";
    "$b2 = $d3 cmpl 3.0"->"if $b2 == 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "if $b2 == 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$r3 = new java.lang.AssertionError";
    "if $b2 == 0 goto $z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "$r3 = new java.lang.AssertionError"->"specialinvoke $r3.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r3.<java.lang.AssertionError: void <init>()>()"->"throw $r3";
    "$z1 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$d2 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(10)";
    "if $z1 != 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "$d2 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(10)"->"$b1 = $d2 cmpl 3.0";
    "$b1 = $d2 cmpl 3.0"->"if $b1 > 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "if $b1 > 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$r2 = new java.lang.AssertionError";
    "if $b1 > 0 goto $z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"$z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>";
    "$r2 = new java.lang.AssertionError"->"specialinvoke $r2.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"throw $r2";
    "$z2 = <com.thealgorithms.maths.PiNilakantha: boolean $assertionsDisabled>"->"if $z2 != 0 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "if $z2 != 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$d1 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(100)";
    "if $z2 != 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$d1 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(100)"->"$b0 = $d1 cmpg 4.0";
    "$b0 = $d1 cmpg 4.0"->"if $b0 < 0 goto $r0 = <java.lang.System: java.io.PrintStream out>";
    "if $b0 < 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r1 = new java.lang.AssertionError";
    "if $b0 < 0 goto $r0 = <java.lang.System: java.io.PrintStream out>"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = new java.lang.AssertionError"->"specialinvoke $r1.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"->"throw $r1";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"$d0 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(500)";
    "$d0 = staticinvoke <com.thealgorithms.maths.PiNilakantha: double calculatePi(int)>(500)"->"virtualinvoke $r0.<java.io.PrintStream: void println(double)>($d0)";
    "virtualinvoke $r0.<java.io.PrintStream: void println(double)>($d0)"->"return";
}
