digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: int[][];
i0 := @parameter1: int;
i1 := @parameter2: int;
i3 := @parameter3: int;
i5 := @parameter4: int;
if i0 < 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if i1 < 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i2 == i3 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i4 == i5 goto return;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3);
$i6 = i0 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5);
$i7 = i0 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5);
$i8 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5);
$i9 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5);
$i11 = i0 + 1;
$i10 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5);
$i13 = i0 - 1;
$i12 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5);
$i15 = i0 + 1;
$i14 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5);
$i17 = i0 - 1;
$i16 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5);
"
    "Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: int[][];
i0 := @parameter1: int;
i1 := @parameter2: int;
i3 := @parameter3: int;
i5 := @parameter4: int;
if i0 < 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
if i1 < 0 goto return;
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: int[][];
i0 := @parameter1: int;
i1 := @parameter2: int;
i3 := @parameter3: int;
i5 := @parameter4: int;
if i0 < 0 goto return;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if i1 < 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i2 == i3 goto return;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if i1 < 0 goto return;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i2 == i3 goto return;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i4 == i5 goto return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i2 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i2 == i3 goto return;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i4 == i5 goto return;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3);
$i6 = i0 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5);
$i7 = i0 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5);
$i8 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5);
$i9 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5);
$i11 = i0 + 1;
$i10 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5);
$i13 = i0 - 1;
$i12 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5);
$i15 = i0 + 1;
$i14 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5);
$i17 = i0 - 1;
$i16 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i4 = staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: int getPixel(int[][],int,int)>(r0, i0, i1);
if $i4 == i5 goto return;
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void putPixel(int[][],int,int,int)>(r0, i0, i1, i3);
$i6 = i0 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i6, i1, i3, i5);
$i7 = i0 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i7, i1, i3, i5);
$i8 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i8, i3, i5);
$i9 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, i0, $i9, i3, i5);
$i11 = i0 + 1;
$i10 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i11, $i10, i3, i5);
$i13 = i0 - 1;
$i12 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i13, $i12, i3, i5);
$i15 = i0 + 1;
$i14 = i1 + 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i15, $i14, i3, i5);
$i17 = i0 - 1;
$i16 = i1 - 1;
staticinvoke <com.thealgorithms.dynamicprogramming.BoundaryFill: void boundaryFill(int[][],int,int,int,int)>(r0, $i17, $i16, i3, i5);
"->"Block 5:
[preds: 0 1 2 3 4 ] [succs: ]
return;
";
}
