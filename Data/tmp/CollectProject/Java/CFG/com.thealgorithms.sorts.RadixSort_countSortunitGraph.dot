digraph "unitGraph" {
    "r2 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i2 := @parameter2: int"
    "r0 = newarray (int)[i0]"
    "r1 = newarray (int)[10]"
    "staticinvoke <java.util.Arrays: void fill(int[],int)>(r1, 0)"
    "i23 = 0"
    "if i23 >= i0 goto i24 = 1"
    "$i18 = r2[i23]"
    "$i19 = $i18 / i2"
    "$i20 = $i19 % 10"
    "$i21 = r1[$i20]"
    "$i22 = $i21 + 1"
    "r1[$i20] = $i22"
    "i23 = i23 + 1"
    "goto [?= (branch)]"
    "i24 = 1"
    "if i24 >= 10 goto i25 = i0 - 1"
    "$i16 = r1[i24]"
    "$i14 = i24 - 1"
    "$i15 = r1[$i14]"
    "$i17 = $i16 + $i15"
    "r1[i24] = $i17"
    "i24 = i24 + 1"
    "i25 = i0 - 1"
    "if i25 < 0 goto i26 = 0"
    "$i3 = r2[i25]"
    "$i4 = $i3 / i2"
    "$i5 = $i4 % 10"
    "$i6 = r1[$i5]"
    "$i8 = $i6 - 1"
    "$i7 = r2[i25]"
    "r0[$i8] = $i7"
    "$i9 = r2[i25]"
    "$i10 = $i9 / i2"
    "$i11 = $i10 % 10"
    "$i12 = r1[$i11]"
    "$i13 = $i12 - 1"
    "r1[$i11] = $i13"
    "i25 = i25 + -1"
    "i26 = 0"
    "if i26 >= i0 goto return"
    "$i1 = r0[i26]"
    "r2[i26] = $i1"
    "i26 = i26 + 1"
    "return"
    "r2 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 := @parameter2: int";
    "i2 := @parameter2: int"->"r0 = newarray (int)[i0]";
    "r0 = newarray (int)[i0]"->"r1 = newarray (int)[10]";
    "r1 = newarray (int)[10]"->"staticinvoke <java.util.Arrays: void fill(int[],int)>(r1, 0)";
    "staticinvoke <java.util.Arrays: void fill(int[],int)>(r1, 0)"->"i23 = 0";
    "i23 = 0"->"if i23 >= i0 goto i24 = 1";
    "if i23 >= i0 goto i24 = 1"->"$i18 = r2[i23]";
    "if i23 >= i0 goto i24 = 1"->"i24 = 1";
    "$i18 = r2[i23]"->"$i19 = $i18 / i2";
    "$i19 = $i18 / i2"->"$i20 = $i19 % 10";
    "$i20 = $i19 % 10"->"$i21 = r1[$i20]";
    "$i21 = r1[$i20]"->"$i22 = $i21 + 1";
    "$i22 = $i21 + 1"->"r1[$i20] = $i22";
    "r1[$i20] = $i22"->"i23 = i23 + 1";
    "i23 = i23 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i23 >= i0 goto i24 = 1";
    "i24 = 1"->"if i24 >= 10 goto i25 = i0 - 1";
    "if i24 >= 10 goto i25 = i0 - 1"->"$i16 = r1[i24]";
    "if i24 >= 10 goto i25 = i0 - 1"->"i25 = i0 - 1";
    "$i16 = r1[i24]"->"$i14 = i24 - 1";
    "$i14 = i24 - 1"->"$i15 = r1[$i14]";
    "$i15 = r1[$i14]"->"$i17 = $i16 + $i15";
    "$i17 = $i16 + $i15"->"r1[i24] = $i17";
    "r1[i24] = $i17"->"i24 = i24 + 1";
    "i24 = i24 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i24 >= 10 goto i25 = i0 - 1";
    "i25 = i0 - 1"->"if i25 < 0 goto i26 = 0";
    "if i25 < 0 goto i26 = 0"->"$i3 = r2[i25]";
    "if i25 < 0 goto i26 = 0"->"i26 = 0";
    "$i3 = r2[i25]"->"$i4 = $i3 / i2";
    "$i4 = $i3 / i2"->"$i5 = $i4 % 10";
    "$i5 = $i4 % 10"->"$i6 = r1[$i5]";
    "$i6 = r1[$i5]"->"$i8 = $i6 - 1";
    "$i8 = $i6 - 1"->"$i7 = r2[i25]";
    "$i7 = r2[i25]"->"r0[$i8] = $i7";
    "r0[$i8] = $i7"->"$i9 = r2[i25]";
    "$i9 = r2[i25]"->"$i10 = $i9 / i2";
    "$i10 = $i9 / i2"->"$i11 = $i10 % 10";
    "$i11 = $i10 % 10"->"$i12 = r1[$i11]";
    "$i12 = r1[$i11]"->"$i13 = $i12 - 1";
    "$i13 = $i12 - 1"->"r1[$i11] = $i13";
    "r1[$i11] = $i13"->"i25 = i25 + -1";
    "i25 = i25 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i25 < 0 goto i26 = 0";
    "i26 = 0"->"if i26 >= i0 goto return";
    "if i26 >= i0 goto return"->"$i1 = r0[i26]";
    "if i26 >= i0 goto return"->"return";
    "$i1 = r0[i26]"->"r2[i26] = $i1";
    "r2[i26] = $i1"->"i26 = i26 + 1";
    "i26 = i26 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i26 >= i0 goto return";
}
