digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
$r0 = newarray (int)[9];
$r0[0] = 0;
$r0[1] = 12;
$r0[2] = 123;
$r0[3] = 1234;
$r0[4] = -12345;
$r0[5] = 123456;
$r0[6] = 1234567;
$r0[7] = 12345678;
$r0[8] = 123456789;
r1 = $r0;
i13 = 0;
"
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$i0 = lengthof r1;
if i13 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r1[i13];
$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10);
$i12 = i13 + 1;
if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 4:
[preds: 3 ] [succs: ]
$r5 = new java.lang.AssertionError;
specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
throw $r5;
"
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i7 = r1[i13];
$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7);
$i9 = i13 + 1;
if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
throw $r4;
"
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i4 = r1[i13];
$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4);
$i6 = i13 + 1;
if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"
    "Block 10:
[preds: 9 ] [succs: ]
$r3 = new java.lang.AssertionError;
specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
throw $r3;
"
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z3 != 0 goto i13 = i13 + 1;
"
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$i1 = r1[i13];
$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1);
$i3 = i13 + 1;
if $i2 == $i3 goto i13 = i13 + 1;
"
    "Block 13:
[preds: 12 ] [succs: ]
$r2 = new java.lang.AssertionError;
specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
throw $r2;
"
    "Block 14:
[preds: 11 12 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= $i0 = lengthof r1];
"
    "Block 15:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
$r0 = newarray (int)[9];
$r0[0] = 0;
$r0[1] = 12;
$r0[2] = 123;
$r0[3] = 1234;
$r0[4] = -12345;
$r0[5] = 123456;
$r0[6] = 1234567;
$r0[7] = 12345678;
$r0[8] = 123456789;
r1 = $r0;
i13 = 0;
"->"Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$i0 = lengthof r1;
if i13 >= $i0 goto return;
";
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$i0 = lengthof r1;
if i13 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$i0 = lengthof r1;
if i13 >= $i0 goto return;
"->"Block 15:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r1[i13];
$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10);
$i12 = i13 + 1;
if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$z0 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z0 != 0 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 5:
[preds: 2 3 ] [succs: 6 8 ]
$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r1[i13];
$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10);
$i12 = i13 + 1;
if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 4:
[preds: 3 ] [succs: ]
$r5 = new java.lang.AssertionError;
specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
throw $r5;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$i10 = r1[i13];
$i11 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigits(int)>($i10);
$i12 = i13 + 1;
if $i11 == $i12 goto $z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 5:
[preds: 2 3 ] [succs: 6 8 ]
$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$i7 = r1[i13];
$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7);
$i9 = i13 + 1;
if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 5:
[preds: 2 3 ] [succs: 6 8 ]
$z1 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z1 != 0 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i7 = r1[i13];
$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7);
$i9 = i13 + 1;
if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 7:
[preds: 6 ] [succs: ]
$r4 = new java.lang.AssertionError;
specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
throw $r4;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i7 = r1[i13];
$i8 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFast(int)>($i7);
$i9 = i13 + 1;
if $i8 == $i9 goto $z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 8:
[preds: 5 6 ] [succs: 9 11 ]
$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$i4 = r1[i13];
$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4);
$i6 = i13 + 1;
if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
";
    "Block 8:
[preds: 5 6 ] [succs: 9 11 ]
$z2 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z2 != 0 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z3 != 0 goto i13 = i13 + 1;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i4 = r1[i13];
$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4);
$i6 = i13 + 1;
if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 10:
[preds: 9 ] [succs: ]
$r3 = new java.lang.AssertionError;
specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
throw $r3;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$i4 = r1[i13];
$i5 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsFaster(int)>($i4);
$i6 = i13 + 1;
if $i5 == $i6 goto $z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
"->"Block 11:
[preds: 8 9 ] [succs: 12 14 ]
$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z3 != 0 goto i13 = i13 + 1;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z3 != 0 goto i13 = i13 + 1;
"->"Block 12:
[preds: 11 ] [succs: 13 14 ]
$i1 = r1[i13];
$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1);
$i3 = i13 + 1;
if $i2 == $i3 goto i13 = i13 + 1;
";
    "Block 11:
[preds: 8 9 ] [succs: 12 14 ]
$z3 = <com.thealgorithms.maths.NumberOfDigits: boolean $assertionsDisabled>;
if $z3 != 0 goto i13 = i13 + 1;
"->"Block 14:
[preds: 11 12 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$i1 = r1[i13];
$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1);
$i3 = i13 + 1;
if $i2 == $i3 goto i13 = i13 + 1;
"->"Block 13:
[preds: 12 ] [succs: ]
$r2 = new java.lang.AssertionError;
specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
throw $r2;
";
    "Block 12:
[preds: 11 ] [succs: 13 14 ]
$i1 = r1[i13];
$i2 = staticinvoke <com.thealgorithms.maths.NumberOfDigits: int numberOfDigitsRecursion(int)>($i1);
$i3 = i13 + 1;
if $i2 == $i3 goto i13 = i13 + 1;
"->"Block 14:
[preds: 11 12 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 14:
[preds: 11 12 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= $i0 = lengthof r1];
"->"Block 1:
[preds: 0 14 ] [succs: 2 15 ]
$i0 = lengthof r1;
if i13 >= $i0 goto return;
";
}
