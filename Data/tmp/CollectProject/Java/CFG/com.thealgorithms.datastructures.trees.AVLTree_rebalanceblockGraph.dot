digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r11 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
$r1 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[1];
$r1[0] = r11;
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r1);
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i0 != -2 goto $i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r8 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7);
$i4 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r8);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r10 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r9);
$i5 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r10);
if $i4 < $i5 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"
    "Block 2:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"
    "Block 3:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"
    "Block 4:
[preds: 0 ] [succs: 5 8 ]
$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i1 != 2 goto $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3);
$i2 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r4);
$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r5);
$i3 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r6);
if $i2 < $i3 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"
    "Block 6:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"
    "Block 7:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"
    "Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
"
    "Block 9:
[preds: 8 ] [succs: 11 ]
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void rebalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2);
goto [?= return];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
"
    "Block 11:
[preds: 9 10 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r11 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
$r1 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[1];
$r1[0] = r11;
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r1);
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i0 != -2 goto $i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r8 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7);
$i4 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r8);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r10 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r9);
$i5 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r10);
if $i4 < $i5 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
";
    "Block 0:
[preds: ] [succs: 1 4 ]
r0 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r11 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
$r1 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[1];
$r1[0] = r11;
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r1);
$i0 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i0 != -2 goto $i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 4:
[preds: 0 ] [succs: 5 8 ]
$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i1 != 2 goto $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r8 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7);
$i4 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r8);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r10 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r9);
$i5 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r10);
if $i4 < $i5 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 2:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r7 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r8 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r7);
$i4 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r8);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r10 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r9);
$i5 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r10);
if $i4 < $i5 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 3:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
";
    "Block 2:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"->"Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 3:
[preds: 1 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeftThenRight(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"->"Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 4:
[preds: 0 ] [succs: 5 8 ]
$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i1 != 2 goto $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3);
$i2 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r4);
$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r5);
$i3 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r6);
if $i2 < $i3 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
";
    "Block 4:
[preds: 0 ] [succs: 5 8 ]
$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$400(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $i1 != 2 goto $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3);
$i2 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r4);
$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r5);
$i3 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r6);
if $i2 < $i3 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 6:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r3 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r3);
$i2 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r4);
$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r5);
$i3 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: int height(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r6);
if $i2 < $i3 goto r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 7:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
";
    "Block 6:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
goto [?= $r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11)];
"->"Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 7:
[preds: 5 ] [succs: 8 ]
r11 = specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node rotateRightThenLeft(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
"->"Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
"->"Block 9:
[preds: 8 ] [succs: 11 ]
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void rebalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2);
goto [?= return];
";
    "Block 8:
[preds: 2 3 4 6 7 ] [succs: 9 10 ]
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
if $r12 == null goto r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
";
    "Block 9:
[preds: 8 ] [succs: 11 ]
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r11);
specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void rebalance(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r2);
goto [?= return];
"->"Block 11:
[preds: 9 10 ] [succs: ]
return;
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root> = r11;
"->"Block 11:
[preds: 9 10 ] [succs: ]
return;
";
}
