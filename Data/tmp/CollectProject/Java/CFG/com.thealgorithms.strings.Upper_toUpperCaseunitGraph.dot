digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "if r0 == null goto return r0"
    "$r1 = \"\""
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)"
    "if $z0 == 0 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "return r0"
    "r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "i5 = 0"
    "$i0 = lengthof r2"
    "if i5 >= $i0 goto $r3 = new java.lang.String"
    "$c1 = r2[i5]"
    "$z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1)"
    "if $z1 == 0 goto i5 = i5 + 1"
    "$c2 = r2[i5]"
    "$z2 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c2)"
    "if $z2 == 0 goto i5 = i5 + 1"
    "$c3 = r2[i5]"
    "$c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3)"
    "r2[i5] = $c4"
    "i5 = i5 + 1"
    "goto [?= $i0 = lengthof r2]"
    "$r3 = new java.lang.String"
    "specialinvoke $r3.<java.lang.String: void <init>(char[])>(r2)"
    "return $r3"
    "r0 := @parameter0: java.lang.String"->"if r0 == null goto return r0";
    "if r0 == null goto return r0"->"$r1 = \"\"";
    "if r0 == null goto return r0"->"return r0";
    "$r1 = \"\""->"$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)";
    "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)"->"if $z0 == 0 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "if $z0 == 0 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"return r0";
    "if $z0 == 0 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"i5 = 0";
    "i5 = 0"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"if i5 >= $i0 goto $r3 = new java.lang.String";
    "if i5 >= $i0 goto $r3 = new java.lang.String"->"$c1 = r2[i5]";
    "if i5 >= $i0 goto $r3 = new java.lang.String"->"$r3 = new java.lang.String";
    "$c1 = r2[i5]"->"$z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1)";
    "$z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1)"->"if $z1 == 0 goto i5 = i5 + 1";
    "if $z1 == 0 goto i5 = i5 + 1"->"$c2 = r2[i5]";
    "if $z1 == 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$c2 = r2[i5]"->"$z2 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c2)";
    "$z2 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c2)"->"if $z2 == 0 goto i5 = i5 + 1";
    "if $z2 == 0 goto i5 = i5 + 1"->"$c3 = r2[i5]";
    "if $z2 == 0 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$c3 = r2[i5]"->"$c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3)";
    "$c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3)"->"r2[i5] = $c4";
    "r2[i5] = $c4"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= $i0 = lengthof r2]";
    "goto [?= $i0 = lengthof r2]"->"$i0 = lengthof r2";
    "$r3 = new java.lang.String"->"specialinvoke $r3.<java.lang.String: void <init>(char[])>(r2)";
    "specialinvoke $r3.<java.lang.String: void <init>(char[])>(r2)"->"return $r3";
}
