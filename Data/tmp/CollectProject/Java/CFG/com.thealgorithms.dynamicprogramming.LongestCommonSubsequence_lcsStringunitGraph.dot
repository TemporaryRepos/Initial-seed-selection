digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "r3 := @parameter1: java.lang.String"
    "r6 := @parameter2: int[][]"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "r1 = $r0"
    "i10 = virtualinvoke r2.<java.lang.String: int length()>()"
    "i11 = virtualinvoke r3.<java.lang.String: int length()>()"
    "if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"
    "if i11 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"
    "$i0 = i10 - 1"
    "$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i0)"
    "$i2 = i11 - 1"
    "$c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2)"
    "if $c1 != $c3 goto $i4 = i10 - 1"
    "$i8 = i10 - 1"
    "$c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i8)"
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9)"
    "i10 = i10 + -1"
    "i11 = i11 + -1"
    "goto [?= (branch)]"
    "$i4 = i10 - 1"
    "$r7 = r6[$i4]"
    "$i7 = $r7[i11]"
    "$r8 = r6[i10]"
    "$i5 = i11 - 1"
    "$i6 = $r8[$i5]"
    "if $i7 <= $i6 goto i11 = i11 + -1"
    "$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r5"
    "r2 := @parameter0: java.lang.String"->"r3 := @parameter1: java.lang.String";
    "r3 := @parameter1: java.lang.String"->"r6 := @parameter2: int[][]";
    "r6 := @parameter2: int[][]"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i10 = virtualinvoke r2.<java.lang.String: int length()>()";
    "i10 = virtualinvoke r2.<java.lang.String: int length()>()"->"i11 = virtualinvoke r3.<java.lang.String: int length()>()";
    "i11 = virtualinvoke r3.<java.lang.String: int length()>()"->"if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"if i11 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "if i11 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"$i0 = i10 - 1";
    "if i11 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "$i0 = i10 - 1"->"$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i0)";
    "$c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i0)"->"$i2 = i11 - 1";
    "$i2 = i11 - 1"->"$c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2)";
    "$c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2)"->"if $c1 != $c3 goto $i4 = i10 - 1";
    "if $c1 != $c3 goto $i4 = i10 - 1"->"$i8 = i10 - 1";
    "if $c1 != $c3 goto $i4 = i10 - 1"->"$i4 = i10 - 1";
    "$i8 = i10 - 1"->"$c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i8)";
    "$c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i8)"->"virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9)";
    "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9)"->"i10 = i10 + -1";
    "i10 = i10 + -1"->"i11 = i11 + -1";
    "i11 = i11 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "$i4 = i10 - 1"->"$r7 = r6[$i4]";
    "$r7 = r6[$i4]"->"$i7 = $r7[i11]";
    "$i7 = $r7[i11]"->"$r8 = r6[i10]";
    "$r8 = r6[i10]"->"$i5 = i11 - 1";
    "$i5 = i11 - 1"->"$i6 = $r8[$i5]";
    "$i6 = $r8[$i5]"->"if $i7 <= $i6 goto i11 = i11 + -1";
    "if $i7 <= $i6 goto i11 = i11 + -1"->"i10 = i10 + -1";
    "if $i7 <= $i6 goto i11 = i11 + -1"->"i11 = i11 + -1";
    "i10 = i10 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "i11 = i11 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 <= 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r5";
}
