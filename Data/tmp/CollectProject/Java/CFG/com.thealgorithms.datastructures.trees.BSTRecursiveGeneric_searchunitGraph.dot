digraph "unitGraph" {
    "r6 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"
    "r2 := @parameter1: java.lang.Comparable"
    "if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "return 0"
    "$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r3 = (java.lang.Comparable) $r1"
    "$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)"
    "if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "return 1"
    "$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"
    "$r5 = (java.lang.Comparable) $r4"
    "$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)"
    "if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"
    "$r8 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>"
    "$z1 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r2)"
    "return $z1"
    "$r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"
    "$z0 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r7, r2)"
    "return $z0"
    "r6 := @this: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric"->"r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node";
    "r0 := @parameter0: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node"->"r2 := @parameter1: java.lang.Comparable";
    "r2 := @parameter1: java.lang.Comparable"->"if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"return 0";
    "if r0 != null goto $r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "$r1 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r3 = (java.lang.Comparable) $r1";
    "$r3 = (java.lang.Comparable) $r1"->"$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)";
    "$i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)"->"if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"return 1";
    "if $i0 != 0 goto $r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>";
    "$r4 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: java.lang.Object data>"->"$r5 = (java.lang.Comparable) $r4";
    "$r5 = (java.lang.Comparable) $r4"->"$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)";
    "$i1 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2)"->"if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>";
    "if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"->"$r8 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>";
    "if $i1 <= 0 goto $r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"->"$r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>";
    "$r8 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node left>"->"$z1 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r2)";
    "$z1 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r8, r2)"->"return $z1";
    "$r7 = r0.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node: com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node right>"->"$z0 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r7, r2)";
    "$z0 = specialinvoke r6.<com.thealgorithms.datastructures.trees.BSTRecursiveGeneric: boolean search(com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,java.lang.Comparable)>($r7, r2)"->"return $z0";
}
