digraph "unitGraph" {
    "r2 := @parameter0: java.util.ArrayList"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "i5 = 0"
    "$i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()"
    "$i1 = $i0 - 1"
    "if i5 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()"
    "$r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5)"
    "r5 = (com.thealgorithms.others.KochSnowflake$Vector2) $r4"
    "$i4 = i5 + 1"
    "$r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i4)"
    "r7 = (com.thealgorithms.others.KochSnowflake$Vector2) $r6"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5)"
    "$r8 = virtualinvoke r7.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 subtract(com.thealgorithms.others.KochSnowflake$Vector2)>(r5)"
    "r9 = virtualinvoke $r8.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(0.3333333333333333)"
    "$r10 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)"
    "$r11 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)"
    "$r12 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 rotate(double)>(60.0)"
    "$r13 = virtualinvoke $r11.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r12)"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r13)"
    "$r14 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(2.0)"
    "$r15 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r14)"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15)"
    "i5 = i5 + 1"
    "goto [?= $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()]"
    "$i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()"
    "$i3 = $i2 - 1"
    "$r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i3)"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)"
    "return r1"
    "r2 := @parameter0: java.util.ArrayList"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i5 = 0";
    "i5 = 0"->"$i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()";
    "$i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()"->"$i1 = $i0 - 1";
    "$i1 = $i0 - 1"->"if i5 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()";
    "if i5 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()"->"$r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5)";
    "if i5 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()"->"$i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()";
    "$r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5)"->"r5 = (com.thealgorithms.others.KochSnowflake$Vector2) $r4";
    "r5 = (com.thealgorithms.others.KochSnowflake$Vector2) $r4"->"$i4 = i5 + 1";
    "$i4 = i5 + 1"->"$r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i4)";
    "$r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i4)"->"r7 = (com.thealgorithms.others.KochSnowflake$Vector2) $r6";
    "r7 = (com.thealgorithms.others.KochSnowflake$Vector2) $r6"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5)"->"$r8 = virtualinvoke r7.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 subtract(com.thealgorithms.others.KochSnowflake$Vector2)>(r5)";
    "$r8 = virtualinvoke r7.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 subtract(com.thealgorithms.others.KochSnowflake$Vector2)>(r5)"->"r9 = virtualinvoke $r8.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(0.3333333333333333)";
    "r9 = virtualinvoke $r8.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(0.3333333333333333)"->"$r10 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)";
    "$r10 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10)"->"$r11 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)";
    "$r11 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>(r9)"->"$r12 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 rotate(double)>(60.0)";
    "$r12 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 rotate(double)>(60.0)"->"$r13 = virtualinvoke $r11.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r12)";
    "$r13 = virtualinvoke $r11.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r12)"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r13)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r13)"->"$r14 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(2.0)";
    "$r14 = virtualinvoke r9.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 multiply(double)>(2.0)"->"$r15 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r14)";
    "$r15 = virtualinvoke r5.<com.thealgorithms.others.KochSnowflake$Vector2: com.thealgorithms.others.KochSnowflake$Vector2 add(com.thealgorithms.others.KochSnowflake$Vector2)>($r14)"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()]";
    "goto [?= $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()]"->"$i0 = virtualinvoke r2.<java.util.ArrayList: int size()>()";
    "$i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"$r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i3)";
    "$r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i3)"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)"->"return r1";
}
