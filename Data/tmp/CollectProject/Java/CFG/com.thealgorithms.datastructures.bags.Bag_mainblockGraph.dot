digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r14 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.bags.Bag;
specialinvoke $r0.<com.thealgorithms.datastructures.bags.Bag: void <init>()>();
r1 = $r0;
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"1\");
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"1\");
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"2\");
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"size of bag = \");
$i0 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: int size()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
r7 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(r12);
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$z1 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(null);
virtualinvoke $r8.<java.io.PrintStream: void println(boolean)>($z1);
$r9 = <java.lang.System: java.io.PrintStream out>;
$z2 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(\"1\");
virtualinvoke $r9.<java.io.PrintStream: void println(boolean)>($z2);
$r10 = <java.lang.System: java.io.PrintStream out>;
$z3 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(\"3\");
virtualinvoke $r10.<java.io.PrintStream: void println(boolean)>($z3);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r14 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.bags.Bag;
specialinvoke $r0.<com.thealgorithms.datastructures.bags.Bag: void <init>()>();
r1 = $r0;
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"1\");
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"1\");
virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: void add(java.lang.Object)>(\"2\");
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"size of bag = \");
$i0 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: int size()>();
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
r7 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(r12);
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$z1 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(null);
virtualinvoke $r8.<java.io.PrintStream: void println(boolean)>($z1);
$r9 = <java.lang.System: java.io.PrintStream out>;
$z2 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(\"1\");
virtualinvoke $r9.<java.io.PrintStream: void println(boolean)>($z2);
$r10 = <java.lang.System: java.io.PrintStream out>;
$z3 = virtualinvoke r1.<com.thealgorithms.datastructures.bags.Bag: boolean contains(java.lang.Object)>(\"3\");
virtualinvoke $r10.<java.io.PrintStream: void println(boolean)>($z3);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r11;
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(r12);
goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
";
}
