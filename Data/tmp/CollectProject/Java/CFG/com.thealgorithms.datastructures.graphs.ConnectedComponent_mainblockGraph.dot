digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r46 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.graphs.Graph;
specialinvoke $r0.<com.thealgorithms.datastructures.graphs.Graph: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(97);
$r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(98);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r2, $r3);
$r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(97);
$r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(101);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r4, $r5);
$r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(98);
$r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(101);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r6, $r7);
$r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(98);
$r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(99);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r8, $r9);
$r10 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(99);
$r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(100);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r10, $r11);
$r12 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(100);
$r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(97);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r12, $r13);
$r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(120);
$r15 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(121);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r14, $r15);
$r16 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(120);
$r17 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(122);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r16, $r17);
$r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(119);
$r19 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(119);
virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r18, $r19);
$r20 = new com.thealgorithms.datastructures.graphs.Graph;
specialinvoke $r20.<com.thealgorithms.datastructures.graphs.Graph: void <init>()>();
r21 = $r20;
$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r22, $r23);
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r24, $r25);
$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r26, $r27);
$r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r28, $r29);
$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
$r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r30, $r31);
$r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r32, $r33);
$r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
$r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: void addEdge(java.lang.Comparable,java.lang.Comparable)>($r34, $r35);
$r37 = <java.lang.System: java.io.PrintStream out>;
$r36 = new java.lang.StringBuilder;
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Amount of different char-graphs: \");
$i0 = virtualinvoke r1.<com.thealgorithms.datastructures.graphs.Graph: int countGraphs()>();
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r40);
$r42 = <java.lang.System: java.io.PrintStream out>;
$r41 = new java.lang.StringBuilder;
specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Amount of different int-graphs: \");
$i1 = virtualinvoke r21.<com.thealgorithms.datastructures.graphs.Graph: int countGraphs()>();
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45);
return;
"
}
