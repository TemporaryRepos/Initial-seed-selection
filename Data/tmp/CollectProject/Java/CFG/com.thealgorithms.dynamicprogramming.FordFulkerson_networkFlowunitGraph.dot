digraph "unitGraph" {
    "i3 := @parameter0: int"
    "i4 := @parameter1: int"
    "$i1 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"
    "$i0 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"
    "$r0 = newmultiarray (int)[$i1][$i0]"
    "<com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow> = $r0"
    "i23 = 0"
    "$r1 = new java.util.Vector"
    "$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"
    "specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2)"
    "r2 = $r1"
    "i24 = 0"
    "$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"
    "if i24 >= $i25 goto $r3 = new java.util.LinkedList"
    "$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)"
    "virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58)"
    "i24 = i24 + 1"
    "goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]"
    "$r3 = new java.util.LinkedList"
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"
    "r59 = $r3"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4)"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6)"
    "$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()"
    "if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"
    "$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"
    "$r45 = (java.lang.Integer) $r44"
    "$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>()"
    "if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"
    "$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>()"
    "$r47 = (java.lang.Integer) $r46"
    "i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>()"
    "interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>()"
    "i27 = 0"
    "$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"
    "if i27 >= $i18 goto (branch)"
    "$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>"
    "$r50 = $r49[i26]"
    "$i20 = $r50[i27]"
    "$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"
    "$r52 = $r51[i26]"
    "$i19 = $r52[i27]"
    "$i21 = $i20 - $i19"
    "if $i21 <= 0 goto i27 = i27 + 1"
    "$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27)"
    "$r54 = (java.lang.Integer) $r53"
    "$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>()"
    "if $i22 != -1 goto i27 = i27 + 1"
    "$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27)"
    "interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55)"
    "$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26)"
    "virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56)"
    "i27 = i27 + 1"
    "goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]"
    "goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()]"
    "$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"
    "$r8 = (java.lang.Integer) $r7"
    "$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()"
    "if $i5 != -1 goto i28 = 987654321"
    "goto [?= return i23]"
    "i28 = 987654321"
    "r60 = \"path : \""
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "r10 = $r9"
    "i29 = i4"
    "if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>"
    "$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"
    "$r31 = (java.lang.Integer) $r30"
    "$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()"
    "$r32 = $r29[$i12]"
    "$i13 = $r32[i29]"
    "$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"
    "$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"
    "$r35 = (java.lang.Integer) $r34"
    "$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>()"
    "$r36 = $r33[$i14]"
    "$i15 = $r36[i29]"
    "$i16 = $i13 - $i15"
    "i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28)"
    "$r37 = new java.lang.StringBuilder"
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29)"
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")"
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"
    "$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"
    "$r43 = (java.lang.Integer) $r42"
    "i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>()"
    "goto [?= (branch)]"
    "virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "i30 = i4"
    "if i30 == i3 goto i23 = i23 + i28"
    "$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"
    "$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"
    "$r21 = (java.lang.Integer) $r20"
    "$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"
    "$r22 = $r19[$i6]"
    "$i7 = $r22[i30]"
    "$i8 = $i7 + i28"
    "$r22[i30] = $i8"
    "$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"
    "$r24 = $r23[i30]"
    "$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"
    "$r26 = (java.lang.Integer) $r25"
    "$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()"
    "$i10 = $r24[$i9]"
    "$i11 = $i10 - i28"
    "$r24[$i9] = $i11"
    "$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"
    "$r28 = (java.lang.Integer) $r27"
    "i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()"
    "i23 = i23 + i28"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60)"
    "$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23)"
    "r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61)"
    "goto [?= $r1 = new java.util.Vector]"
    "return i23"
    "i3 := @parameter0: int"->"i4 := @parameter1: int";
    "i4 := @parameter1: int"->"$i1 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$i1 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"->"$i0 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$i0 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"->"$r0 = newmultiarray (int)[$i1][$i0]";
    "$r0 = newmultiarray (int)[$i1][$i0]"->"<com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow> = $r0";
    "<com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow> = $r0"->"i23 = 0";
    "i23 = 0"->"$r1 = new java.util.Vector";
    "$r1 = new java.util.Vector"->"$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$i2 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"->"specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2)";
    "specialinvoke $r1.<java.util.Vector: void <init>(int)>($i2)"->"r2 = $r1";
    "r2 = $r1"->"i24 = 0";
    "i24 = 0"->"$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"->"if i24 >= $i25 goto $r3 = new java.util.LinkedList";
    "if i24 >= $i25 goto $r3 = new java.util.LinkedList"->"$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)";
    "if i24 >= $i25 goto $r3 = new java.util.LinkedList"->"$r3 = new java.util.LinkedList";
    "$r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)"->"virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58)";
    "virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r58)"->"i24 = i24 + 1";
    "i24 = i24 + 1"->"goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]";
    "goto [?= $i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]"->"$i25 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$r3 = new java.util.LinkedList"->"specialinvoke $r3.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"->"r59 = $r3";
    "r59 = $r3"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4)";
    "virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i3, $r4)"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6)";
    "interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r6)"->"$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()";
    "$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()"->"if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)";
    "if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)";
    "if $z1 != 0 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)";
    "$r44 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r45 = (java.lang.Integer) $r44";
    "$r45 = (java.lang.Integer) $r44"->"$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>()";
    "$i17 = virtualinvoke $r45.<java.lang.Integer: int intValue()>()"->"if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)";
    "if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>()";
    "if $i17 != -1 goto $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)";
    "$r46 = interfaceinvoke r59.<java.util.Queue: java.lang.Object peek()>()"->"$r47 = (java.lang.Integer) $r46";
    "$r47 = (java.lang.Integer) $r46"->"i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>()";
    "i26 = virtualinvoke $r47.<java.lang.Integer: int intValue()>()"->"interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>()";
    "interfaceinvoke r59.<java.util.Queue: java.lang.Object poll()>()"->"i27 = 0";
    "i27 = 0"->"$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>"->"if i27 >= $i18 goto (branch)";
    "if i27 >= $i18 goto (branch)"->"$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>";
    "if i27 >= $i18 goto (branch)"->"goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()]";
    "$r49 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>"->"$r50 = $r49[i26]";
    "$r50 = $r49[i26]"->"$i20 = $r50[i27]";
    "$i20 = $r50[i27]"->"$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>";
    "$r51 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"->"$r52 = $r51[i26]";
    "$r52 = $r51[i26]"->"$i19 = $r52[i27]";
    "$i19 = $r52[i27]"->"$i21 = $i20 - $i19";
    "$i21 = $i20 - $i19"->"if $i21 <= 0 goto i27 = i27 + 1";
    "if $i21 <= 0 goto i27 = i27 + 1"->"$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27)";
    "if $i21 <= 0 goto i27 = i27 + 1"->"i27 = i27 + 1";
    "$r53 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i27)"->"$r54 = (java.lang.Integer) $r53";
    "$r54 = (java.lang.Integer) $r53"->"$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>()";
    "$i22 = virtualinvoke $r54.<java.lang.Integer: int intValue()>()"->"if $i22 != -1 goto i27 = i27 + 1";
    "if $i22 != -1 goto i27 = i27 + 1"->"$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27)";
    "if $i22 != -1 goto i27 = i27 + 1"->"i27 = i27 + 1";
    "$r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27)"->"interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55)";
    "interfaceinvoke r59.<java.util.Queue: boolean add(java.lang.Object)>($r55)"->"$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26)";
    "$r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26)"->"virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56)";
    "virtualinvoke r2.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i27, $r56)"->"i27 = i27 + 1";
    "i27 = i27 + 1"->"goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]";
    "goto [?= $i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>]"->"$i18 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int V>";
    "goto [?= $z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()]"->"$z1 = interfaceinvoke r59.<java.util.Queue: boolean isEmpty()>()";
    "$r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i4)"->"$r8 = (java.lang.Integer) $r7";
    "$r8 = (java.lang.Integer) $r7"->"$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()";
    "$i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()"->"if $i5 != -1 goto i28 = 987654321";
    "if $i5 != -1 goto i28 = 987654321"->"goto [?= return i23]";
    "if $i5 != -1 goto i28 = 987654321"->"i28 = 987654321";
    "goto [?= return i23]"->"return i23";
    "i28 = 987654321"->"r60 = \"path : \"";
    "r60 = \"path : \""->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"r10 = $r9";
    "r10 = $r9"->"i29 = i4";
    "i29 = i4"->"if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>";
    "if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r29 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] capacity>"->"$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)";
    "$r30 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"->"$r31 = (java.lang.Integer) $r30";
    "$r31 = (java.lang.Integer) $r30"->"$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()";
    "$i12 = virtualinvoke $r31.<java.lang.Integer: int intValue()>()"->"$r32 = $r29[$i12]";
    "$r32 = $r29[$i12]"->"$i13 = $r32[i29]";
    "$i13 = $r32[i29]"->"$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>";
    "$r33 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"->"$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)";
    "$r34 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"->"$r35 = (java.lang.Integer) $r34";
    "$r35 = (java.lang.Integer) $r34"->"$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>()";
    "$i14 = virtualinvoke $r35.<java.lang.Integer: int intValue()>()"->"$r36 = $r33[$i14]";
    "$r36 = $r33[$i14]"->"$i15 = $r36[i29]";
    "$i15 = $r36[i29]"->"$i16 = $i13 - $i15";
    "$i16 = $i13 - $i15"->"i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28)";
    "i28 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i28)"->"$r37 = new java.lang.StringBuilder";
    "$r37 = new java.lang.StringBuilder"->"specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29)";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29)"->"$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")";
    "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-\")"->"$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)";
    "virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)"->"$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)";
    "$r42 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i29)"->"$r43 = (java.lang.Integer) $r42";
    "$r43 = (java.lang.Integer) $r42"->"i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>()";
    "i29 = virtualinvoke $r43.<java.lang.Integer: int intValue()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i29 == i3 goto virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"i30 = i4";
    "i30 = i4"->"if i30 == i3 goto i23 = i23 + i28";
    "if i30 == i3 goto i23 = i23 + i28"->"$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>";
    "if i30 == i3 goto i23 = i23 + i28"->"i23 = i23 + i28";
    "$r19 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"->"$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)";
    "$r20 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"->"$r21 = (java.lang.Integer) $r20";
    "$r21 = (java.lang.Integer) $r20"->"$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"->"$r22 = $r19[$i6]";
    "$r22 = $r19[$i6]"->"$i7 = $r22[i30]";
    "$i7 = $r22[i30]"->"$i8 = $i7 + i28";
    "$i8 = $i7 + i28"->"$r22[i30] = $i8";
    "$r22[i30] = $i8"->"$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>";
    "$r23 = <com.thealgorithms.dynamicprogramming.FordFulkerson: int[][] flow>"->"$r24 = $r23[i30]";
    "$r24 = $r23[i30]"->"$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)";
    "$r25 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"->"$r26 = (java.lang.Integer) $r25";
    "$r26 = (java.lang.Integer) $r25"->"$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()";
    "$i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()"->"$i10 = $r24[$i9]";
    "$i10 = $r24[$i9]"->"$i11 = $i10 - i28";
    "$i11 = $i10 - i28"->"$r24[$i9] = $i11";
    "$r24[$i9] = $i11"->"$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)";
    "$r27 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i30)"->"$r28 = (java.lang.Integer) $r27";
    "$r28 = (java.lang.Integer) $r27"->"i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()";
    "i30 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i30 == i3 goto i23 = i23 + i28";
    "i23 = i23 + i28"->"$r12 = new java.lang.StringBuilder";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60)"->"$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()";
    "$r14 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" / max flow : \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23)"->"r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r61 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61)";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r61)"->"goto [?= $r1 = new java.util.Vector]";
    "goto [?= $r1 = new java.util.Vector]"->"$r1 = new java.util.Vector";
}
