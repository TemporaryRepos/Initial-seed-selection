digraph "unitGraph" {
    "r4 := @this: com.thealgorithms.strings.Anagrams"
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if $i0 == $i1 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "return 0"
    "r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"
    "staticinvoke <java.util.Arrays: void sort(char[])>(r2)"
    "staticinvoke <java.util.Arrays: void sort(char[])>(r3)"
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>(r2, r3)"
    "return $z0"
    "r4 := @this: com.thealgorithms.strings.Anagrams"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if $i0 == $i1 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "if $i0 == $i1 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"return 0";
    "if $i0 == $i1 goto r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()";
    "r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()"->"staticinvoke <java.util.Arrays: void sort(char[])>(r2)";
    "staticinvoke <java.util.Arrays: void sort(char[])>(r2)"->"staticinvoke <java.util.Arrays: void sort(char[])>(r3)";
    "staticinvoke <java.util.Arrays: void sort(char[])>(r3)"->"$z0 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>(r2, r3)";
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>(r2, r3)"->"return $z0";
}
