digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r3 := @parameter1: java.lang.String"
    "i1 := @parameter2: int"
    "i4 := @parameter3: int"
    "r1 := @parameter4: int[][]"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if $i0 != i1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i17 = virtualinvoke r3.<java.lang.String: int length()>()"
    "if $i17 != i4 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "return 1"
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if $i2 == i1 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i16 = virtualinvoke r3.<java.lang.String: int length()>()"
    "if $i16 != i4 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"
    "return 0"
    "$i3 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if $i3 != i1 goto $r2 = r1[i1]"
    "$i13 = virtualinvoke r3.<java.lang.String: int length()>()"
    "if $i13 == i4 goto $r2 = r1[i1]"
    "i18 = i4"
    "$i14 = virtualinvoke r3.<java.lang.String: int length()>()"
    "if i18 >= $i14 goto return 1"
    "$c15 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i18)"
    "if $c15 == 42 goto i18 = i18 + 1"
    "i18 = i18 + 1"
    "goto [?= $i14 = virtualinvoke r3.<java.lang.String: int length()>()]"
    "$r2 = r1[i1]"
    "$i5 = $r2[i4]"
    "if $i5 == 0 goto c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)"
    "$r5 = r1[i1]"
    "$i12 = $r5[i4]"
    "if $i12 == 1 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= return $z2]"
    "$z2 = 0"
    "return $z2"
    "c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)"
    "c6 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4)"
    "if c19 == c6 goto $i8 = i1 + 1"
    "if c6 != 63 goto (branch)"
    "$i8 = i1 + 1"
    "$i7 = i4 + 1"
    "z3 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i8, $i7, r1)"
    "goto [?= $r4 = r1[i1]]"
    "if c6 != 42 goto z3 = 0"
    "$i10 = i4 + 1"
    "z0 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, i1, $i10, r1)"
    "$i11 = i1 + 1"
    "z1 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i11, i4, r1)"
    "if z0 != 0 goto $z4 = 1"
    "if z1 == 0 goto $z4 = 0"
    "$z4 = 1"
    "goto [?= z3 = $z4]"
    "$z4 = 0"
    "z3 = $z4"
    "z3 = 0"
    "$r4 = r1[i1]"
    "if z3 == 0 goto $b20 = 1"
    "$b20 = 2"
    "goto [?= $r4[i4] = $b20]"
    "$b20 = 1"
    "$r4[i4] = $b20"
    "return z3"
    "r0 := @parameter0: java.lang.String"->"r3 := @parameter1: java.lang.String";
    "r3 := @parameter1: java.lang.String"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"i4 := @parameter3: int";
    "i4 := @parameter3: int"->"r1 := @parameter4: int[][]";
    "r1 := @parameter4: int[][]"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if $i0 != i1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $i0 != i1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i17 = virtualinvoke r3.<java.lang.String: int length()>()";
    "if $i0 != i1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i17 = virtualinvoke r3.<java.lang.String: int length()>()"->"if $i17 != i4 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $i17 != i4 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"return 1";
    "if $i17 != i4 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"if $i2 == i1 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $i2 == i1 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i16 = virtualinvoke r3.<java.lang.String: int length()>()";
    "if $i2 == i1 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i16 = virtualinvoke r3.<java.lang.String: int length()>()"->"if $i16 != i4 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if $i16 != i4 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"return 0";
    "if $i16 != i4 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i3 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i3 = virtualinvoke r0.<java.lang.String: int length()>()"->"if $i3 != i1 goto $r2 = r1[i1]";
    "if $i3 != i1 goto $r2 = r1[i1]"->"$i13 = virtualinvoke r3.<java.lang.String: int length()>()";
    "if $i3 != i1 goto $r2 = r1[i1]"->"$r2 = r1[i1]";
    "$i13 = virtualinvoke r3.<java.lang.String: int length()>()"->"if $i13 == i4 goto $r2 = r1[i1]";
    "if $i13 == i4 goto $r2 = r1[i1]"->"i18 = i4";
    "if $i13 == i4 goto $r2 = r1[i1]"->"$r2 = r1[i1]";
    "i18 = i4"->"$i14 = virtualinvoke r3.<java.lang.String: int length()>()";
    "$i14 = virtualinvoke r3.<java.lang.String: int length()>()"->"if i18 >= $i14 goto return 1";
    "if i18 >= $i14 goto return 1"->"$c15 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i18)";
    "if i18 >= $i14 goto return 1"->"return 1";
    "$c15 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i18)"->"if $c15 == 42 goto i18 = i18 + 1";
    "if $c15 == 42 goto i18 = i18 + 1"->"return 0";
    "if $c15 == 42 goto i18 = i18 + 1"->"i18 = i18 + 1";
    "i18 = i18 + 1"->"goto [?= $i14 = virtualinvoke r3.<java.lang.String: int length()>()]";
    "goto [?= $i14 = virtualinvoke r3.<java.lang.String: int length()>()]"->"$i14 = virtualinvoke r3.<java.lang.String: int length()>()";
    "$r2 = r1[i1]"->"$i5 = $r2[i4]";
    "$i5 = $r2[i4]"->"if $i5 == 0 goto c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)";
    "if $i5 == 0 goto c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)"->"$r5 = r1[i1]";
    "if $i5 == 0 goto c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)"->"c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)";
    "$r5 = r1[i1]"->"$i12 = $r5[i4]";
    "$i12 = $r5[i4]"->"if $i12 == 1 goto $z2 = 0";
    "if $i12 == 1 goto $z2 = 0"->"$z2 = 1";
    "if $i12 == 1 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= return $z2]";
    "goto [?= return $z2]"->"return $z2";
    "$z2 = 0"->"return $z2";
    "c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)"->"c6 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4)";
    "c6 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4)"->"if c19 == c6 goto $i8 = i1 + 1";
    "if c19 == c6 goto $i8 = i1 + 1"->"if c6 != 63 goto (branch)";
    "if c19 == c6 goto $i8 = i1 + 1"->"$i8 = i1 + 1";
    "if c6 != 63 goto (branch)"->"$i8 = i1 + 1";
    "if c6 != 63 goto (branch)"->"if c6 != 42 goto z3 = 0";
    "$i8 = i1 + 1"->"$i7 = i4 + 1";
    "$i7 = i4 + 1"->"z3 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i8, $i7, r1)";
    "z3 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i8, $i7, r1)"->"goto [?= $r4 = r1[i1]]";
    "goto [?= $r4 = r1[i1]]"->"$r4 = r1[i1]";
    "if c6 != 42 goto z3 = 0"->"$i10 = i4 + 1";
    "if c6 != 42 goto z3 = 0"->"z3 = 0";
    "$i10 = i4 + 1"->"z0 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, i1, $i10, r1)";
    "z0 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, i1, $i10, r1)"->"$i11 = i1 + 1";
    "$i11 = i1 + 1"->"z1 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i11, i4, r1)";
    "z1 = staticinvoke <com.thealgorithms.dynamicprogramming.RegexMatching: boolean regexRecursion(java.lang.String,java.lang.String,int,int,int[][])>(r0, r3, $i11, i4, r1)"->"if z0 != 0 goto $z4 = 1";
    "if z0 != 0 goto $z4 = 1"->"if z1 == 0 goto $z4 = 0";
    "if z0 != 0 goto $z4 = 1"->"$z4 = 1";
    "if z1 == 0 goto $z4 = 0"->"$z4 = 1";
    "if z1 == 0 goto $z4 = 0"->"$z4 = 0";
    "$z4 = 1"->"goto [?= z3 = $z4]";
    "goto [?= z3 = $z4]"->"z3 = $z4";
    "$z4 = 0"->"z3 = $z4";
    "z3 = $z4"->"goto [?= $r4 = r1[i1]]";
    "goto [?= $r4 = r1[i1]]"->"$r4 = r1[i1]";
    "z3 = 0"->"$r4 = r1[i1]";
    "$r4 = r1[i1]"->"if z3 == 0 goto $b20 = 1";
    "if z3 == 0 goto $b20 = 1"->"$b20 = 2";
    "if z3 == 0 goto $b20 = 1"->"$b20 = 1";
    "$b20 = 2"->"goto [?= $r4[i4] = $b20]";
    "goto [?= $r4[i4] = $b20]"->"$r4[i4] = $b20";
    "$b20 = 1"->"$r4[i4] = $b20";
    "$r4[i4] = $b20"->"return z3";
}
