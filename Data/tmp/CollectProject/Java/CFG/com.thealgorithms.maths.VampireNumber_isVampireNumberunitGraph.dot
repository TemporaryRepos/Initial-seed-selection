digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i1 := @parameter1: int"
    "z0 := @parameter2: boolean"
    "if z0 == 0 goto $i2 = i0 * i1"
    "$i3 = i0 * 10"
    "if $i3 <= i1 goto return 0"
    "$i4 = i1 * 10"
    "if $i4 > i0 goto $i2 = i0 * i1"
    "return 0"
    "$i2 = i0 * i1"
    "r0 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>($i2, 0)"
    "r1 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>(i0, i1)"
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)"
    "return $z1"
    "i0 := @parameter0: int"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"z0 := @parameter2: boolean";
    "z0 := @parameter2: boolean"->"if z0 == 0 goto $i2 = i0 * i1";
    "if z0 == 0 goto $i2 = i0 * i1"->"$i3 = i0 * 10";
    "if z0 == 0 goto $i2 = i0 * i1"->"$i2 = i0 * i1";
    "$i3 = i0 * 10"->"if $i3 <= i1 goto return 0";
    "if $i3 <= i1 goto return 0"->"$i4 = i1 * 10";
    "if $i3 <= i1 goto return 0"->"return 0";
    "$i4 = i1 * 10"->"if $i4 > i0 goto $i2 = i0 * i1";
    "if $i4 > i0 goto $i2 = i0 * i1"->"return 0";
    "if $i4 > i0 goto $i2 = i0 * i1"->"$i2 = i0 * i1";
    "$i2 = i0 * i1"->"r0 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>($i2, 0)";
    "r0 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>($i2, 0)"->"r1 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>(i0, i1)";
    "r1 = staticinvoke <com.thealgorithms.maths.VampireNumber: java.lang.String splitIntoDigits(int,int)>(i0, i1)"->"$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)"->"return $z1";
}
