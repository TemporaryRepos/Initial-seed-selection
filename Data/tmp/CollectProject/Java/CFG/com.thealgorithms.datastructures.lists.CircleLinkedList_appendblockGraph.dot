digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
r0 := @parameter0: java.lang.Object;
if r0 != null goto $r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r13 = new java.lang.NullPointerException;
specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"Cannot add null element to the list\");
throw $r13;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if $r2 != null goto $r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r8 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r9 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r9, null);
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r8;
$r11 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
$r10 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r11.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r10;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r3 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r4 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r4, null);
$r5.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r3;
$r6 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r7 = $r6.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r7;
"
    "Block 5:
[preds: 3 4 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i1;
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
r0 := @parameter0: java.lang.Object;
if r0 != null goto $r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"->"Block 1:
[preds: 0 ] [succs: ]
$r13 = new java.lang.NullPointerException;
specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"Cannot add null element to the list\");
throw $r13;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: com.thealgorithms.datastructures.lists.CircleLinkedList;
r0 := @parameter0: java.lang.Object;
if r0 != null goto $r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if $r2 != null goto $r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if $r2 != null goto $r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r8 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r9 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r9, null);
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r8;
$r11 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
$r10 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r11.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r10;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>];
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$r2 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
if $r2 != null goto $r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r3 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r4 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r4, null);
$r5.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r3;
$r6 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r7 = $r6.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r7;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r8 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r9 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r8.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r9, null);
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r8;
$r11 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
$r10 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r11.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r10;
goto [?= $i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>];
"->"Block 5:
[preds: 3 4 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i1;
return;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r3 = new com.thealgorithms.datastructures.lists.CircleLinkedList$Node;
$r4 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node head>;
specialinvoke $r3.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: void <init>(java.lang.Object,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,com.thealgorithms.datastructures.lists.CircleLinkedList$1)>(r0, $r4, null);
$r5.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next> = $r3;
$r6 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail>;
$r7 = $r6.<com.thealgorithms.datastructures.lists.CircleLinkedList$Node: com.thealgorithms.datastructures.lists.CircleLinkedList$Node next>;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: com.thealgorithms.datastructures.lists.CircleLinkedList$Node tail> = $r7;
"->"Block 5:
[preds: 3 4 ] [succs: ]
$i0 = r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size>;
$i1 = $i0 + 1;
r1.<com.thealgorithms.datastructures.lists.CircleLinkedList: int size> = $i1;
return;
";
}
