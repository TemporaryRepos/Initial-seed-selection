digraph "unitGraph" {
    "r4 := @this: com.thealgorithms.strings.Anagrams"
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if $i0 == $i1 goto r2 = newarray (int)[26]"
    "return 0"
    "r2 = newarray (int)[26]"
    "r3 = newarray (int)[26]"
    "i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "i13 = 0"
    "if i13 >= i2 goto i14 = 0"
    "$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13)"
    "$i6 = $c5 - 97"
    "$i7 = r2[$i6]"
    "$i8 = $i7 + 1"
    "r2[$i6] = $i8"
    "$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13)"
    "$i10 = $c9 - 97"
    "$i11 = r3[$i10]"
    "$i12 = $i11 + 1"
    "r3[$i10] = $i12"
    "i13 = i13 + 1"
    "goto [?= (branch)]"
    "i14 = 0"
    "if i14 >= 26 goto return 1"
    "$i4 = r2[i14]"
    "$i3 = r3[i14]"
    "if $i4 == $i3 goto i14 = i14 + 1"
    "i14 = i14 + 1"
    "return 1"
    "r4 := @this: com.thealgorithms.strings.Anagrams"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if $i0 == $i1 goto r2 = newarray (int)[26]";
    "if $i0 == $i1 goto r2 = newarray (int)[26]"->"return 0";
    "if $i0 == $i1 goto r2 = newarray (int)[26]"->"r2 = newarray (int)[26]";
    "r2 = newarray (int)[26]"->"r3 = newarray (int)[26]";
    "r3 = newarray (int)[26]"->"i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"i13 = 0";
    "i13 = 0"->"if i13 >= i2 goto i14 = 0";
    "if i13 >= i2 goto i14 = 0"->"$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13)";
    "if i13 >= i2 goto i14 = 0"->"i14 = 0";
    "$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13)"->"$i6 = $c5 - 97";
    "$i6 = $c5 - 97"->"$i7 = r2[$i6]";
    "$i7 = r2[$i6]"->"$i8 = $i7 + 1";
    "$i8 = $i7 + 1"->"r2[$i6] = $i8";
    "r2[$i6] = $i8"->"$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13)";
    "$c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13)"->"$i10 = $c9 - 97";
    "$i10 = $c9 - 97"->"$i11 = r3[$i10]";
    "$i11 = r3[$i10]"->"$i12 = $i11 + 1";
    "$i12 = $i11 + 1"->"r3[$i10] = $i12";
    "r3[$i10] = $i12"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= i2 goto i14 = 0";
    "i14 = 0"->"if i14 >= 26 goto return 1";
    "if i14 >= 26 goto return 1"->"$i4 = r2[i14]";
    "if i14 >= 26 goto return 1"->"return 1";
    "$i4 = r2[i14]"->"$i3 = r3[i14]";
    "$i3 = r3[i14]"->"if $i4 == $i3 goto i14 = i14 + 1";
    "if $i4 == $i3 goto i14 = i14 + 1"->"return 0";
    "if $i4 == $i3 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= 26 goto return 1";
}
