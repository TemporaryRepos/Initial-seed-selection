digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
r1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, $r2);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, $r4);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $r6 == null goto staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r17, r0);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 6 ]
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, r1);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
if $r9 == null goto $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r11 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r11);
if $r12 != r0 goto $r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r15 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r15, r1);
goto [?= $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2]];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r13, r1);
"
    "Block 6:
[preds: 2 4 5 ] [succs: ]
$r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
$r19[0] = r0;
$r19[1] = r1;
specialinvoke r10.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r19);
return r1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
r1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, $r2);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, $r4);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $r6 == null goto staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r17, r0);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r10 := @this: com.thealgorithms.datastructures.trees.AVLTree;
r0 := @parameter0: com.thealgorithms.datastructures.trees.AVLTree$Node;
r1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
$r2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, $r2);
$r4 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, $r4);
$r6 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
if $r6 == null goto staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
"->"Block 2:
[preds: 0 1 ] [succs: 3 6 ]
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, r1);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
if $r9 == null goto $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r17 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r17, r0);
"->"Block 2:
[preds: 0 1 ] [succs: 3 6 ]
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, r1);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
if $r9 == null goto $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
";
    "Block 2:
[preds: 0 1 ] [succs: 3 6 ]
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, r1);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
if $r9 == null goto $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$r11 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r11);
if $r12 != r0 goto $r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
";
    "Block 2:
[preds: 0 1 ] [succs: 3 6 ]
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1, r0);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$302(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>(r0, r1);
$r9 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
if $r9 == null goto $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
"->"Block 6:
[preds: 2 4 5 ] [succs: ]
$r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
$r19[0] = r0;
$r19[1] = r1;
specialinvoke r10.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r19);
return r1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r11 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r11);
if $r12 != r0 goto $r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$r15 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r15, r1);
goto [?= $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2]];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$r11 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
$r12 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>($r11);
if $r12 != r0 goto $r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r13, r1);
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r15 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$202(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r15, r1);
goto [?= $r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2]];
"->"Block 6:
[preds: 2 4 5 ] [succs: ]
$r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
$r19[0] = r0;
$r19[1] = r1;
specialinvoke r10.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r19);
return r1;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$r13 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$300(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r1);
staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$102(com.thealgorithms.datastructures.trees.AVLTree$Node,com.thealgorithms.datastructures.trees.AVLTree$Node)>($r13, r1);
"->"Block 6:
[preds: 2 4 5 ] [succs: ]
$r19 = newarray (com.thealgorithms.datastructures.trees.AVLTree$Node)[2];
$r19[0] = r0;
$r19[1] = r1;
specialinvoke r10.<com.thealgorithms.datastructures.trees.AVLTree: void setBalance(com.thealgorithms.datastructures.trees.AVLTree$Node[])>($r19);
return r1;
";
}
