digraph "unitGraph" {
    "i0 := @parameter0: int"
    "r1 := @parameter1: java.math.BigDecimal[][]"
    "r2 := @parameter2: java.math.BigDecimal[][]"
    "r3 := @parameter3: java.math.BigDecimal[][]"
    "r4 := @parameter4: java.util.function.BiFunction"
    "i1 := @parameter5: int"
    "$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)"
    "$r5 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_0__99: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,java.math.BigDecimal[][],java.math.BigDecimal[][],java.util.function.BiFunction)>(r1, i1, r2, r3, r4)"
    "interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r5)"
    "return"
    "i0 := @parameter0: int"->"r1 := @parameter1: java.math.BigDecimal[][]";
    "r1 := @parameter1: java.math.BigDecimal[][]"->"r2 := @parameter2: java.math.BigDecimal[][]";
    "r2 := @parameter2: java.math.BigDecimal[][]"->"r3 := @parameter3: java.math.BigDecimal[][]";
    "r3 := @parameter3: java.math.BigDecimal[][]"->"r4 := @parameter4: java.util.function.BiFunction";
    "r4 := @parameter4: java.util.function.BiFunction"->"i1 := @parameter5: int";
    "i1 := @parameter5: int"->"$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)";
    "$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, i0)"->"$r5 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_0__99: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,java.math.BigDecimal[][],java.math.BigDecimal[][],java.util.function.BiFunction)>(r1, i1, r2, r3, r4)";
    "$r5 = staticinvoke <com.thealgorithms.maths.MatrixUtil$lambda_null_0__99: java.util.function.IntConsumer bootstrap$(java.math.BigDecimal[][],int,java.math.BigDecimal[][],java.math.BigDecimal[][],java.util.function.BiFunction)>(r1, i1, r2, r3, r4)"->"interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r5)";
    "interfaceinvoke $r0.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r5)"->"return";
}
