digraph "unitGraph" {
    "r3 := @this: com.thealgorithms.strings.Anagrams"
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if $i0 == $i1 goto r2 = newarray (int)[26]"
    "return 0"
    "r2 = newarray (int)[26]"
    "i12 = 0"
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i12 >= $i2 goto i13 = 0"
    "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)"
    "i5 = $c4 - 97"
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)"
    "i7 = $c6 - 97"
    "$i8 = r2[i5]"
    "$i9 = $i8 + 1"
    "r2[i5] = $i9"
    "$i10 = r2[i7]"
    "$i11 = $i10 - 1"
    "r2[i7] = $i11"
    "i12 = i12 + 1"
    "goto [?= $i2 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "i13 = 0"
    "if i13 >= 26 goto return 1"
    "$i3 = r2[i13]"
    "if $i3 == 0 goto i13 = i13 + 1"
    "i13 = i13 + 1"
    "goto [?= (branch)]"
    "return 1"
    "r3 := @this: com.thealgorithms.strings.Anagrams"->"r0 := @parameter0: java.lang.String";
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if $i0 == $i1 goto r2 = newarray (int)[26]";
    "if $i0 == $i1 goto r2 = newarray (int)[26]"->"return 0";
    "if $i0 == $i1 goto r2 = newarray (int)[26]"->"r2 = newarray (int)[26]";
    "r2 = newarray (int)[26]"->"i12 = 0";
    "i12 = 0"->"$i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i2 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i12 >= $i2 goto i13 = 0";
    "if i12 >= $i2 goto i13 = 0"->"$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)";
    "if i12 >= $i2 goto i13 = 0"->"i13 = 0";
    "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)"->"i5 = $c4 - 97";
    "i5 = $c4 - 97"->"$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)";
    "$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12)"->"i7 = $c6 - 97";
    "i7 = $c6 - 97"->"$i8 = r2[i5]";
    "$i8 = r2[i5]"->"$i9 = $i8 + 1";
    "$i9 = $i8 + 1"->"r2[i5] = $i9";
    "r2[i5] = $i9"->"$i10 = r2[i7]";
    "$i10 = r2[i7]"->"$i11 = $i10 - 1";
    "$i11 = $i10 - 1"->"r2[i7] = $i11";
    "r2[i7] = $i11"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= $i2 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i2 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i2 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i13 = 0"->"if i13 >= 26 goto return 1";
    "if i13 >= 26 goto return 1"->"$i3 = r2[i13]";
    "if i13 >= 26 goto return 1"->"return 1";
    "$i3 = r2[i13]"->"if $i3 == 0 goto i13 = i13 + 1";
    "if $i3 == 0 goto i13 = i13 + 1"->"return 0";
    "if $i3 == 0 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= 26 goto return 1";
}
