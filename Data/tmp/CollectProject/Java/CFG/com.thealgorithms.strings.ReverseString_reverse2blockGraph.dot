digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
if r0 == null goto return r0;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return r0;
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i3 = 0;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i4 = $i0 - 1;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i3 >= i4 goto $r2 = new java.lang.String;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
c1 = r1[i3];
$c2 = r1[i4];
r1[i3] = $c2;
r1[i4] = c1;
i3 = i3 + 1;
i4 = i4 + -1;
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: ]
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);
return $r2;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
if r0 == null goto return r0;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
if r0 == null goto return r0;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r0;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
if $z0 == 0 goto r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i3 = 0;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i4 = $i0 - 1;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
i3 = 0;
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
i4 = $i0 - 1;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i3 >= i4 goto $r2 = new java.lang.String;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i3 >= i4 goto $r2 = new java.lang.String;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
c1 = r1[i3];
$c2 = r1[i4];
r1[i3] = $c2;
r1[i4] = c1;
i3 = i3 + 1;
i4 = i4 + -1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i3 >= i4 goto $r2 = new java.lang.String;
"->"Block 6:
[preds: 4 ] [succs: ]
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);
return $r2;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
c1 = r1[i3];
$c2 = r1[i4];
r1[i3] = $c2;
r1[i4] = c1;
i3 = i3 + 1;
i4 = i4 + -1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
if i3 >= i4 goto $r2 = new java.lang.String;
";
}
