digraph "unitGraph" {
    "r24 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.Integer)[9]"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)"
    "$r0[0] = $r1"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23)"
    "$r0[1] = $r2"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)"
    "$r0[2] = $r3"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78)"
    "$r0[3] = $r4"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "$r0[4] = $r5"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(54)"
    "$r0[5] = $r6"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(231)"
    "$r0[6] = $r7"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)"
    "$r0[7] = $r8"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)"
    "$r0[8] = $r9"
    "r10 = $r0"
    "$r11 = new com.thealgorithms.sorts.SelectionSort"
    "specialinvoke $r11.<com.thealgorithms.sorts.SelectionSort: void <init>()>()"
    "r12 = $r11"
    "$r13 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r10)"
    "r14 = (java.lang.Integer[]) $r13"
    "i9 = 0"
    "$i0 = lengthof r14"
    "$i1 = $i0 - 1"
    "if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5]"
    "$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>"
    "if $z1 != 0 goto i9 = i9 + 1"
    "$r21 = r14[i9]"
    "$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"
    "$i7 = i9 + 1"
    "$r22 = r14[$i7]"
    "$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()"
    "if $i6 <= $i8 goto i9 = i9 + 1"
    "$r23 = new java.lang.AssertionError"
    "specialinvoke $r23.<java.lang.AssertionError: void <init>()>()"
    "throw $r23"
    "i9 = i9 + 1"
    "goto [?= $i0 = lengthof r14]"
    "$r15 = newarray (java.lang.String)[5]"
    "$r15[0] = \"c\""
    "$r15[1] = \"a\""
    "$r15[2] = \"e\""
    "$r15[3] = \"b\""
    "$r15[4] = \"d\""
    "r25 = $r15"
    "$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25)"
    "r17 = (java.lang.String[]) $r16"
    "i10 = 0"
    "$i2 = lengthof r17"
    "$i3 = $i2 - 1"
    "if i10 >= $i3 goto return"
    "$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>"
    "if $z0 != 0 goto i10 = i10 + 1"
    "$r19 = r25[i10]"
    "$i4 = i10 + 1"
    "$r18 = r25[$i4]"
    "$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18)"
    "if $i5 <= 0 goto i10 = i10 + 1"
    "$r20 = new java.lang.AssertionError"
    "specialinvoke $r20.<java.lang.AssertionError: void <init>()>()"
    "throw $r20"
    "i10 = i10 + 1"
    "goto [?= $i2 = lengthof r17]"
    "return"
    "r24 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.Integer)[9]";
    "$r0 = newarray (java.lang.Integer)[9]"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23)"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78)"->"$r0[3] = $r4";
    "$r0[3] = $r4"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"$r0[4] = $r5";
    "$r0[4] = $r5"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(54)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(54)"->"$r0[5] = $r6";
    "$r0[5] = $r6"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(231)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(231)"->"$r0[6] = $r7";
    "$r0[6] = $r7"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)"->"$r0[7] = $r8";
    "$r0[7] = $r8"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)"->"$r0[8] = $r9";
    "$r0[8] = $r9"->"r10 = $r0";
    "r10 = $r0"->"$r11 = new com.thealgorithms.sorts.SelectionSort";
    "$r11 = new com.thealgorithms.sorts.SelectionSort"->"specialinvoke $r11.<com.thealgorithms.sorts.SelectionSort: void <init>()>()";
    "specialinvoke $r11.<com.thealgorithms.sorts.SelectionSort: void <init>()>()"->"r12 = $r11";
    "r12 = $r11"->"$r13 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r10)";
    "$r13 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r10)"->"r14 = (java.lang.Integer[]) $r13";
    "r14 = (java.lang.Integer[]) $r13"->"i9 = 0";
    "i9 = 0"->"$i0 = lengthof r14";
    "$i0 = lengthof r14"->"$i1 = $i0 - 1";
    "$i1 = $i0 - 1"->"if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5]";
    "if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5]"->"$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>";
    "if i9 >= $i1 goto $r15 = newarray (java.lang.String)[5]"->"$r15 = newarray (java.lang.String)[5]";
    "$z1 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>"->"if $z1 != 0 goto i9 = i9 + 1";
    "if $z1 != 0 goto i9 = i9 + 1"->"$r21 = r14[i9]";
    "if $z1 != 0 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r21 = r14[i9]"->"$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()";
    "$i6 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"->"$i7 = i9 + 1";
    "$i7 = i9 + 1"->"$r22 = r14[$i7]";
    "$r22 = r14[$i7]"->"$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()";
    "$i8 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()"->"if $i6 <= $i8 goto i9 = i9 + 1";
    "if $i6 <= $i8 goto i9 = i9 + 1"->"$r23 = new java.lang.AssertionError";
    "if $i6 <= $i8 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r23 = new java.lang.AssertionError"->"specialinvoke $r23.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r23.<java.lang.AssertionError: void <init>()>()"->"throw $r23";
    "i9 = i9 + 1"->"goto [?= $i0 = lengthof r14]";
    "goto [?= $i0 = lengthof r14]"->"$i0 = lengthof r14";
    "$r15 = newarray (java.lang.String)[5]"->"$r15[0] = \"c\"";
    "$r15[0] = \"c\""->"$r15[1] = \"a\"";
    "$r15[1] = \"a\""->"$r15[2] = \"e\"";
    "$r15[2] = \"e\""->"$r15[3] = \"b\"";
    "$r15[3] = \"b\""->"$r15[4] = \"d\"";
    "$r15[4] = \"d\""->"r25 = $r15";
    "r25 = $r15"->"$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25)";
    "$r16 = virtualinvoke r12.<com.thealgorithms.sorts.SelectionSort: java.lang.Comparable[] sort(java.lang.Comparable[])>(r25)"->"r17 = (java.lang.String[]) $r16";
    "r17 = (java.lang.String[]) $r16"->"i10 = 0";
    "i10 = 0"->"$i2 = lengthof r17";
    "$i2 = lengthof r17"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"if i10 >= $i3 goto return";
    "if i10 >= $i3 goto return"->"$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>";
    "if i10 >= $i3 goto return"->"return";
    "$z0 = <com.thealgorithms.sorts.SelectionSort: boolean $assertionsDisabled>"->"if $z0 != 0 goto i10 = i10 + 1";
    "if $z0 != 0 goto i10 = i10 + 1"->"$r19 = r25[i10]";
    "if $z0 != 0 goto i10 = i10 + 1"->"i10 = i10 + 1";
    "$r19 = r25[i10]"->"$i4 = i10 + 1";
    "$i4 = i10 + 1"->"$r18 = r25[$i4]";
    "$r18 = r25[$i4]"->"$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18)";
    "$i5 = virtualinvoke $r19.<java.lang.String: int compareTo(java.lang.String)>($r18)"->"if $i5 <= 0 goto i10 = i10 + 1";
    "if $i5 <= 0 goto i10 = i10 + 1"->"$r20 = new java.lang.AssertionError";
    "if $i5 <= 0 goto i10 = i10 + 1"->"i10 = i10 + 1";
    "$r20 = new java.lang.AssertionError"->"specialinvoke $r20.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r20.<java.lang.AssertionError: void <init>()>()"->"throw $r20";
    "i10 = i10 + 1"->"goto [?= $i2 = lengthof r17]";
    "goto [?= $i2 = lengthof r17]"->"$i2 = lengthof r17";
}
