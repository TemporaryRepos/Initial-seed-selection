digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$z0 = staticinvoke <com.thealgorithms.stacks.BalancedBrackets: boolean isBalanced(java.lang.String)>(r0)"
    "if $z0 != 0 goto $r1 = new java.lang.StringBuilder"
    "$r23 = new java.lang.Exception"
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"invalid expression\")"
    "throw $r23"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "r2 = $r1"
    "$r3 = new java.util.Stack"
    "specialinvoke $r3.<java.util.Stack: void <init>()>()"
    "r4 = $r3"
    "r5 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "i0 = lengthof r5"
    "i6 = 0"
    "if i6 >= i0 goto $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"
    "c1 = r5[i6]"
    "$z2 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)"
    "if $z2 == 0 goto (branch)"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)"
    "goto [?= i6 = i6 + 1]"
    "if c1 != 40 goto (branch)"
    "$r20 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"
    "virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r20)"
    "if c1 != 41 goto $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"
    "$z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"
    "if $z4 != 0 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "$r16 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()"
    "$r17 = (java.lang.Character) $r16"
    "$c5 = virtualinvoke $r17.<java.lang.Character: char charValue()>()"
    "if $c5 == 40 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "$r18 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)"
    "goto [?= $z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"
    "virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "$z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"
    "if $z3 != 0 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"
    "$i2 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>(c1)"
    "$r11 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()"
    "$r12 = (java.lang.Character) $r11"
    "$c3 = virtualinvoke $r12.<java.lang.Character: char charValue()>()"
    "$i4 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>($c3)"
    "if $i2 > $i4 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"
    "$r13 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)"
    "goto [?= $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"
    "$r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"
    "virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "$z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"
    "if $z1 != 0 goto $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r7 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)"
    "goto [?= $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"
    "$r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r6"
    "r0 := @parameter0: java.lang.String"->"$z0 = staticinvoke <com.thealgorithms.stacks.BalancedBrackets: boolean isBalanced(java.lang.String)>(r0)";
    "$z0 = staticinvoke <com.thealgorithms.stacks.BalancedBrackets: boolean isBalanced(java.lang.String)>(r0)"->"if $z0 != 0 goto $r1 = new java.lang.StringBuilder";
    "if $z0 != 0 goto $r1 = new java.lang.StringBuilder"->"$r23 = new java.lang.Exception";
    "if $z0 != 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "$r23 = new java.lang.Exception"->"specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"invalid expression\")";
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>(\"invalid expression\")"->"throw $r23";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"$r3 = new java.util.Stack";
    "$r3 = new java.util.Stack"->"specialinvoke $r3.<java.util.Stack: void <init>()>()";
    "specialinvoke $r3.<java.util.Stack: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"r5 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r5 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"i0 = lengthof r5";
    "i0 = lengthof r5"->"i6 = 0";
    "i6 = 0"->"if i6 >= i0 goto $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "if i6 >= i0 goto $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"c1 = r5[i6]";
    "if i6 >= i0 goto $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"$z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "c1 = r5[i6]"->"$z2 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)";
    "$z2 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1)"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)";
    "if $z2 == 0 goto (branch)"->"if c1 != 40 goto (branch)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "if c1 != 40 goto (branch)"->"$r20 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "if c1 != 40 goto (branch)"->"if c1 != 41 goto $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "$r20 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r20)";
    "virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r20)"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "if c1 != 41 goto $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"$z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "if c1 != 41 goto $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"$z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "$z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"if $z4 != 0 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "if $z4 != 0 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"$r16 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()";
    "if $z4 != 0 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "$r16 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()"->"$r17 = (java.lang.Character) $r16";
    "$r17 = (java.lang.Character) $r16"->"$c5 = virtualinvoke $r17.<java.lang.Character: char charValue()>()";
    "$c5 = virtualinvoke $r17.<java.lang.Character: char charValue()>()"->"if $c5 == 40 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "if $c5 == 40 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"$r18 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "if $c5 == 40 goto virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "$r18 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)"->"goto [?= $z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]";
    "goto [?= $z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"->"$z4 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"if $z3 != 0 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "if $z3 != 0 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"$i2 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>(c1)";
    "if $z3 != 0 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"$r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "$i2 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>(c1)"->"$r11 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()";
    "$r11 = virtualinvoke r4.<java.util.Stack: java.lang.Object peek()>()"->"$r12 = (java.lang.Character) $r11";
    "$r12 = (java.lang.Character) $r11"->"$c3 = virtualinvoke $r12.<java.lang.Character: char charValue()>()";
    "$c3 = virtualinvoke $r12.<java.lang.Character: char charValue()>()"->"$i4 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>($c3)";
    "$i4 = staticinvoke <com.thealgorithms.stacks.InfixToPostfix: int precedence(char)>($c3)"->"if $i2 > $i4 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "if $i2 > $i4 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"$r13 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "if $i2 > $i4 goto $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"$r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)";
    "$r13 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)"->"goto [?= $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]";
    "goto [?= $z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"->"$z3 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "$r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)"->"virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)";
    "virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i0 goto $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "$z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()"->"if $z1 != 0 goto $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "if $z1 != 0 goto $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r7 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()";
    "if $z1 != 0 goto $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>()"->"virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)";
    "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)"->"goto [?= $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]";
    "goto [?= $z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()]"->"$z1 = virtualinvoke r4.<java.util.Stack: boolean isEmpty()>()";
    "$r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r6";
}
