digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "i2 := @parameter1: int"
    "i1 := @parameter2: int"
    "r1 := @parameter3: int[][]"
    "i0 = lengthof r0"
    "$i3 = i1 - i2"
    "$i4 = $i3 + 1"
    "$i5 = i0 - $i4"
    "i6 = $i5 + 1"
    "if i2 != i1 goto $r2 = r1[i2]"
    "$i20 = r0[i2]"
    "$i21 = $i20 * i6"
    "return $i21"
    "$r2 = r1[i2]"
    "$i7 = $r2[i1]"
    "if $i7 == 0 goto $i8 = i2 + 1"
    "$r4 = r1[i2]"
    "$i19 = $r4[i1]"
    "return $i19"
    "$i8 = i2 + 1"
    "$i9 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, $i8, i1, r1)"
    "$i10 = r0[i2]"
    "$i11 = $i10 * i6"
    "i12 = $i9 + $i11"
    "$i13 = i1 - 1"
    "$i14 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, i2, $i13, r1)"
    "$i15 = r0[i1]"
    "$i16 = $i15 * i6"
    "i17 = $i14 + $i16"
    "i18 = staticinvoke <java.lang.Math: int max(int,int)>(i12, i17)"
    "$r3 = r1[i2]"
    "$r3[i1] = i18"
    "return i18"
    "r0 := @parameter0: int[]"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"r1 := @parameter3: int[][]";
    "r1 := @parameter3: int[][]"->"i0 = lengthof r0";
    "i0 = lengthof r0"->"$i3 = i1 - i2";
    "$i3 = i1 - i2"->"$i4 = $i3 + 1";
    "$i4 = $i3 + 1"->"$i5 = i0 - $i4";
    "$i5 = i0 - $i4"->"i6 = $i5 + 1";
    "i6 = $i5 + 1"->"if i2 != i1 goto $r2 = r1[i2]";
    "if i2 != i1 goto $r2 = r1[i2]"->"$i20 = r0[i2]";
    "if i2 != i1 goto $r2 = r1[i2]"->"$r2 = r1[i2]";
    "$i20 = r0[i2]"->"$i21 = $i20 * i6";
    "$i21 = $i20 * i6"->"return $i21";
    "$r2 = r1[i2]"->"$i7 = $r2[i1]";
    "$i7 = $r2[i1]"->"if $i7 == 0 goto $i8 = i2 + 1";
    "if $i7 == 0 goto $i8 = i2 + 1"->"$r4 = r1[i2]";
    "if $i7 == 0 goto $i8 = i2 + 1"->"$i8 = i2 + 1";
    "$r4 = r1[i2]"->"$i19 = $r4[i1]";
    "$i19 = $r4[i1]"->"return $i19";
    "$i8 = i2 + 1"->"$i9 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, $i8, i1, r1)";
    "$i9 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, $i8, i1, r1)"->"$i10 = r0[i2]";
    "$i10 = r0[i2]"->"$i11 = $i10 * i6";
    "$i11 = $i10 * i6"->"i12 = $i9 + $i11";
    "i12 = $i9 + $i11"->"$i13 = i1 - 1";
    "$i13 = i1 - 1"->"$i14 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, i2, $i13, r1)";
    "$i14 = staticinvoke <com.thealgorithms.dynamicprogramming.WineProblem: int WPTD(int[],int,int,int[][])>(r0, i2, $i13, r1)"->"$i15 = r0[i1]";
    "$i15 = r0[i1]"->"$i16 = $i15 * i6";
    "$i16 = $i15 * i6"->"i17 = $i14 + $i16";
    "i17 = $i14 + $i16"->"i18 = staticinvoke <java.lang.Math: int max(int,int)>(i12, i17)";
    "i18 = staticinvoke <java.lang.Math: int max(int,int)>(i12, i17)"->"$r3 = r1[i2]";
    "$r3 = r1[i2]"->"$r3[i1] = i18";
    "$r3[i1] = i18"->"return i18";
}
