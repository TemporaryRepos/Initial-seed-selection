digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.datastructures.graphs.PrimMST;
r4 := @parameter0: int[][];
r0 = newarray (int)[5];
r1 = newarray (int)[5];
r2 = newarray (java.lang.Boolean)[5];
i5 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= 5 goto r1[0] = 0;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r1[i5] = 2147483647;
$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
r2[i5] = $r10;
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r1[0] = 0;
r0[0] = -1;
i6 = 0;
"
    "Block 4:
[preds: 3 12 ] [succs: 5 13 ]
if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2);
$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
r2[i0] = $r5;
i7 = 0;
"
    "Block 6:
[preds: 5 11 ] [succs: 7 12 ]
if i7 >= 5 goto i6 = i6 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
$r6 = r4[i0];
$i1 = $r6[i7];
if $i1 == 0 goto i7 = i7 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r7 = r2[i7];
$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto i7 = i7 + 1;
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r8 = r4[i0];
$i3 = $r8[i7];
$i2 = r1[i7];
if $i3 >= $i2 goto i7 = i7 + 1;
"
    "Block 10:
[preds: 9 ] [succs: 11 ]
r0[i7] = i0;
$r9 = r4[i0];
$i4 = $r9[i7];
r1[i7] = $i4;
"
    "Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 12:
[preds: 6 ] [succs: 4 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 13:
[preds: 4 ] [succs: ]
virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.thealgorithms.datastructures.graphs.PrimMST;
r4 := @parameter0: int[][];
r0 = newarray (int)[5];
r1 = newarray (int)[5];
r2 = newarray (java.lang.Boolean)[5];
i5 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= 5 goto r1[0] = 0;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= 5 goto r1[0] = 0;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r1[i5] = 2147483647;
$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
r2[i5] = $r10;
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= 5 goto r1[0] = 0;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r1[0] = 0;
r0[0] = -1;
i6 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r1[i5] = 2147483647;
$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
r2[i5] = $r10;
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i5 >= 5 goto r1[0] = 0;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r1[0] = 0;
r0[0] = -1;
i6 = 0;
"->"Block 4:
[preds: 3 12 ] [succs: 5 13 ]
if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
";
    "Block 4:
[preds: 3 12 ] [succs: 5 13 ]
if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2);
$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
r2[i0] = $r5;
i7 = 0;
";
    "Block 4:
[preds: 3 12 ] [succs: 5 13 ]
if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
"->"Block 13:
[preds: 4 ] [succs: ]
virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i0 = virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: int minKey(int[],java.lang.Boolean[])>(r1, r2);
$r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
r2[i0] = $r5;
i7 = 0;
"->"Block 6:
[preds: 5 11 ] [succs: 7 12 ]
if i7 >= 5 goto i6 = i6 + 1;
";
    "Block 6:
[preds: 5 11 ] [succs: 7 12 ]
if i7 >= 5 goto i6 = i6 + 1;
"->"Block 7:
[preds: 6 ] [succs: 8 11 ]
$r6 = r4[i0];
$i1 = $r6[i7];
if $i1 == 0 goto i7 = i7 + 1;
";
    "Block 6:
[preds: 5 11 ] [succs: 7 12 ]
if i7 >= 5 goto i6 = i6 + 1;
"->"Block 12:
[preds: 6 ] [succs: 4 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
$r6 = r4[i0];
$i1 = $r6[i7];
if $i1 == 0 goto i7 = i7 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 11 ]
$r7 = r2[i7];
$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto i7 = i7 + 1;
";
    "Block 7:
[preds: 6 ] [succs: 8 11 ]
$r6 = r4[i0];
$i1 = $r6[i7];
if $i1 == 0 goto i7 = i7 + 1;
"->"Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r7 = r2[i7];
$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto i7 = i7 + 1;
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r8 = r4[i0];
$i3 = $r8[i7];
$i2 = r1[i7];
if $i3 >= $i2 goto i7 = i7 + 1;
";
    "Block 8:
[preds: 7 ] [succs: 9 11 ]
$r7 = r2[i7];
$z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
if $z0 != 0 goto i7 = i7 + 1;
"->"Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r8 = r4[i0];
$i3 = $r8[i7];
$i2 = r1[i7];
if $i3 >= $i2 goto i7 = i7 + 1;
"->"Block 10:
[preds: 9 ] [succs: 11 ]
r0[i7] = i0;
$r9 = r4[i0];
$i4 = $r9[i7];
r1[i7] = $i4;
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r8 = r4[i0];
$i3 = $r8[i7];
$i2 = r1[i7];
if $i3 >= $i2 goto i7 = i7 + 1;
"->"Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 11 ]
r0[i7] = i0;
$r9 = r4[i0];
$i4 = $r9[i7];
r1[i7] = $i4;
"->"Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 7 8 9 10 ] [succs: 6 ]
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 11 ] [succs: 7 12 ]
if i7 >= 5 goto i6 = i6 + 1;
";
    "Block 12:
[preds: 6 ] [succs: 4 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 12 ] [succs: 5 13 ]
if i6 >= 4 goto virtualinvoke r3.<com.thealgorithms.datastructures.graphs.PrimMST: void printMST(int[],int,int[][])>(r0, 5, r4);
";
}
