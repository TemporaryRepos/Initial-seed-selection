digraph "unitGraph" {
    "r0 := @parameter0: int[]"
    "$i0 = lengthof r0"
    "if $i0 != 0 goto $r1 = new java.util.HashMap"
    "return null"
    "$r1 = new java.util.HashMap"
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"
    "r2 = $r1"
    "r28 = r0"
    "i4 = lengthof r28"
    "i5 = 0"
    "if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()"
    "i6 = r28[i5]"
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18)"
    "if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23)"
    "$r25 = (java.lang.Integer) $r24"
    "$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()"
    "$i3 = $i2 + 1"
    "$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26)"
    "goto [?= i5 = i5 + 1]"
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()"
    "$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3)"
    "$r5 = (java.lang.Integer) $r4"
    "i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"
    "$r6 = new java.util.ArrayList"
    "specialinvoke $r6.<java.util.ArrayList: void <init>()>()"
    "r29 = $r6"
    "$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>()"
    "r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()"
    "$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"
    "$r13 = (java.lang.Integer) $r12"
    "i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14)"
    "$r16 = (java.lang.Integer) $r15"
    "$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"
    "if $i1 != i7 goto (branch)"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17)"
    "goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"
    "$r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()"
    "$r9 = staticinvoke <com.thealgorithms.maths.Mode$lambda_mode_0__100: java.util.function.ToIntFunction bootstrap$()>()"
    "$r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r9)"
    "$r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>()"
    "return $r11"
    "r0 := @parameter0: int[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 0 goto $r1 = new java.util.HashMap";
    "if $i0 != 0 goto $r1 = new java.util.HashMap"->"return null";
    "if $i0 != 0 goto $r1 = new java.util.HashMap"->"$r1 = new java.util.HashMap";
    "$r1 = new java.util.HashMap"->"specialinvoke $r1.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"r28 = r0";
    "r28 = r0"->"i4 = lengthof r28";
    "i4 = lengthof r28"->"i5 = 0";
    "i5 = 0"->"if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()";
    "if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()"->"i6 = r28[i5]";
    "if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()"->"$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()";
    "i6 = r28[i5]"->"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18)";
    "$z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18)"->"if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if $z2 == 0 goto $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23)";
    "$r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23)"->"$r25 = (java.lang.Integer) $r24";
    "$r25 = (java.lang.Integer) $r24"->"$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()";
    "$i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()"->"$i3 = $i2 + 1";
    "$i3 = $i2 + 1"->"$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26)";
    "virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r26)"->"goto [?= i5 = i5 + 1]";
    "goto [?= i5 = i5 + 1]"->"i5 = i5 + 1";
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20)";
    "virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i4 goto $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()";
    "$r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>()"->"$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3)";
    "$r4 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r3)"->"$r5 = (java.lang.Integer) $r4";
    "$r5 = (java.lang.Integer) $r4"->"i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()";
    "i7 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()"->"$r6 = new java.util.ArrayList";
    "$r6 = new java.util.ArrayList"->"specialinvoke $r6.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r6.<java.util.ArrayList: void <init>()>()"->"r29 = $r6";
    "r29 = $r6"->"$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>()";
    "$r7 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>()"->"r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()";
    "r30 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()";
    "if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()"->"$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()"->"$r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()";
    "$r12 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"->"$r13 = (java.lang.Integer) $r12";
    "$r13 = (java.lang.Integer) $r12"->"i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()";
    "i8 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14)";
    "$r15 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14)"->"$r16 = (java.lang.Integer) $r15";
    "$r16 = (java.lang.Integer) $r15"->"$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"->"if $i1 != i7 goto (branch)";
    "if $i1 != i7 goto (branch)"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "if $i1 != i7 goto (branch)"->"goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17)";
    "virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r17)"->"goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$r8 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>()"->"$r9 = staticinvoke <com.thealgorithms.maths.Mode$lambda_mode_0__100: java.util.function.ToIntFunction bootstrap$()>()";
    "$r9 = staticinvoke <com.thealgorithms.maths.Mode$lambda_mode_0__100: java.util.function.ToIntFunction bootstrap$()>()"->"$r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r9)";
    "$r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r9)"->"$r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>()";
    "$r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>()"->"return $r11";
}
