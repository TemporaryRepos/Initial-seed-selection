digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.trees.AVLTree;
specialinvoke $r0.<com.thealgorithms.datastructures.trees.AVLTree: void <init>()>();
r1 = $r0;
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Inserting values 1 to 10\");
i0 = 1;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(\"Printing balance: \");
virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @parameter0: java.lang.String[];
$r0 = new com.thealgorithms.datastructures.trees.AVLTree;
specialinvoke $r0.<com.thealgorithms.datastructures.trees.AVLTree: void <init>()>();
r1 = $r0;
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Inserting values 1 to 10\");
i0 = 1;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(\"Printing balance: \");
virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: void printBalance()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r1.<com.thealgorithms.datastructures.trees.AVLTree: boolean insert(int)>(i0);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
}
