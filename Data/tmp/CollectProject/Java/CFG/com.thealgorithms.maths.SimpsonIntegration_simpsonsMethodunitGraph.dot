digraph "unitGraph" {
    "r29 := @this: com.thealgorithms.maths.SimpsonIntegration"
    "i0 := @parameter0: int"
    "d1 := @parameter1: double"
    "d0 := @parameter2: double"
    "$r0 = new java.util.TreeMap"
    "specialinvoke $r0.<java.util.TreeMap: void <init>()>()"
    "r1 = $r0"
    "d9 = d0"
    "i5 = 0"
    "if i5 > i0 goto d10 = 0.0"
    "d8 = virtualinvoke r29.<com.thealgorithms.maths.SimpsonIntegration: double f(double)>(d9)"
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"
    "$r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8)"
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31)"
    "d9 = d9 + d1"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "d10 = 0.0"
    "i6 = 0"
    "$i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()"
    "if i6 >= $i1 goto $d2 = d1 / 3.0"
    "if i6 == 0 goto $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$i2 = virtualinvoke r1.<java.util.TreeMap: int size()>()"
    "$i3 = $i2 - 1"
    "if i6 != $i3 goto $i4 = i6 % 2"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r3 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2)"
    "$r4 = (java.lang.Double) $r3"
    "$d3 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()"
    "d10 = d10 + $d3"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = new java.lang.StringBuilder"
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 1\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "goto [?= i6 = i6 + 1]"
    "$i4 = i6 % 2"
    "if $i4 != 1 goto $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r21 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r20)"
    "$r22 = (java.lang.Double) $r21"
    "$d6 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>()"
    "$d7 = 4.0 * $d6"
    "d10 = d10 + $d7"
    "$r24 = <java.lang.System: java.io.PrintStream out>"
    "$r23 = new java.lang.StringBuilder"
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 4\")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28)"
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"
    "$r12 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r11)"
    "$r13 = (java.lang.Double) $r12"
    "$d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>()"
    "$d5 = 2.0 * $d4"
    "d10 = d10 + $d5"
    "$r15 = <java.lang.System: java.io.PrintStream out>"
    "$r14 = new java.lang.StringBuilder"
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 2\")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)"
    "i6 = i6 + 1"
    "goto [?= $i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()]"
    "$d2 = d1 / 3.0"
    "d11 = $d2 * d10"
    "return d11"
    "r29 := @this: com.thealgorithms.maths.SimpsonIntegration"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"d1 := @parameter1: double";
    "d1 := @parameter1: double"->"d0 := @parameter2: double";
    "d0 := @parameter2: double"->"$r0 = new java.util.TreeMap";
    "$r0 = new java.util.TreeMap"->"specialinvoke $r0.<java.util.TreeMap: void <init>()>()";
    "specialinvoke $r0.<java.util.TreeMap: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"d9 = d0";
    "d9 = d0"->"i5 = 0";
    "i5 = 0"->"if i5 > i0 goto d10 = 0.0";
    "if i5 > i0 goto d10 = 0.0"->"d8 = virtualinvoke r29.<com.thealgorithms.maths.SimpsonIntegration: double f(double)>(d9)";
    "if i5 > i0 goto d10 = 0.0"->"d10 = 0.0";
    "d8 = virtualinvoke r29.<com.thealgorithms.maths.SimpsonIntegration: double f(double)>(d9)"->"$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)";
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)"->"$r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8)";
    "$r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8)"->"virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31)";
    "virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31)"->"d9 = d9 + d1";
    "d9 = d9 + d1"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 > i0 goto d10 = 0.0";
    "d10 = 0.0"->"i6 = 0";
    "i6 = 0"->"$i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()";
    "$i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()"->"if i6 >= $i1 goto $d2 = d1 / 3.0";
    "if i6 >= $i1 goto $d2 = d1 / 3.0"->"if i6 == 0 goto $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if i6 >= $i1 goto $d2 = d1 / 3.0"->"$d2 = d1 / 3.0";
    "if i6 == 0 goto $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$i2 = virtualinvoke r1.<java.util.TreeMap: int size()>()";
    "if i6 == 0 goto $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$i2 = virtualinvoke r1.<java.util.TreeMap: int size()>()"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"if i6 != $i3 goto $i4 = i6 % 2";
    "if i6 != $i3 goto $i4 = i6 % 2"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if i6 != $i3 goto $i4 = i6 % 2"->"$i4 = i6 % 2";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r3 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2)";
    "$r3 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2)"->"$r4 = (java.lang.Double) $r3";
    "$r4 = (java.lang.Double) $r3"->"$d3 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()";
    "$d3 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>()"->"d10 = d10 + $d3";
    "d10 = d10 + $d3"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = new java.lang.StringBuilder";
    "$r5 = new java.lang.StringBuilder"->"specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 1\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 1\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$i4 = i6 % 2"->"if $i4 != 1 goto $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if $i4 != 1 goto $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "if $i4 != 1 goto $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)";
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r21 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r20)";
    "$r21 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r20)"->"$r22 = (java.lang.Double) $r21";
    "$r22 = (java.lang.Double) $r21"->"$d6 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>()";
    "$d6 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>()"->"$d7 = 4.0 * $d6";
    "$d7 = 4.0 * $d6"->"d10 = d10 + $d7";
    "d10 = d10 + $d7"->"$r24 = <java.lang.System: java.io.PrintStream out>";
    "$r24 = <java.lang.System: java.io.PrintStream out>"->"$r23 = new java.lang.StringBuilder";
    "$r23 = new java.lang.StringBuilder"->"specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")";
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 4\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 4\")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28)";
    "virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28)"->"goto [?= i6 = i6 + 1]";
    "goto [?= i6 = i6 + 1]"->"i6 = i6 + 1";
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)"->"$r12 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r11)";
    "$r12 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r11)"->"$r13 = (java.lang.Double) $r12";
    "$r13 = (java.lang.Double) $r12"->"$d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>()";
    "$d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>()"->"$d5 = 2.0 * $d4";
    "$d5 = 2.0 * $d4"->"d10 = d10 + $d5";
    "d10 = d10 + $d5"->"$r15 = <java.lang.System: java.io.PrintStream out>";
    "$r15 = <java.lang.System: java.io.PrintStream out>"->"$r14 = new java.lang.StringBuilder";
    "$r14 = new java.lang.StringBuilder"->"specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")";
    "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Multiply f(x\")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 2\")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") by 2\")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)";
    "virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= $i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()]";
    "goto [?= $i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()]"->"$i1 = virtualinvoke r1.<java.util.TreeMap: int size()>()";
    "$d2 = d1 / 3.0"->"d11 = $d2 * d10";
    "d11 = $d2 * d10"->"return d11";
}
