digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int[] generateArray(int)>(100)"
    "b0 = 3"
    "$i1 = lengthof r0"
    "i2 = $i1 - b0"
    "i3 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i2)"
    "i4 = b0 - 1"
    "i5 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i4)"
    "staticinvoke <java.util.Arrays: void sort(int[])>(r0)"
    "$z0 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"
    "$i7 = r0[i2]"
    "if $i7 == i3 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"
    "$r2 = new java.lang.AssertionError"
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"
    "throw $r2"
    "$z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"
    "if $z1 != 0 goto return"
    "$i6 = r0[i4]"
    "if $i6 == i5 goto return"
    "$r1 = new java.lang.AssertionError"
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"
    "throw $r1"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int[] generateArray(int)>(100)";
    "r0 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int[] generateArray(int)>(100)"->"b0 = 3";
    "b0 = 3"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"i2 = $i1 - b0";
    "i2 = $i1 - b0"->"i3 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i2)";
    "i3 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i2)"->"i4 = b0 - 1";
    "i4 = b0 - 1"->"i5 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i4)";
    "i5 = staticinvoke <com.thealgorithms.maths.FindKthNumber: int findKthMax(int[],int)>(r0, i4)"->"staticinvoke <java.util.Arrays: void sort(int[])>(r0)";
    "staticinvoke <java.util.Arrays: void sort(int[])>(r0)"->"$z0 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"if $z0 != 0 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"$i7 = r0[i2]";
    "if $z0 != 0 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>";
    "$i7 = r0[i2]"->"if $i7 == i3 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>";
    "if $i7 == i3 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"$r2 = new java.lang.AssertionError";
    "if $i7 == i3 goto $z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"$z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>";
    "$r2 = new java.lang.AssertionError"->"specialinvoke $r2.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r2.<java.lang.AssertionError: void <init>()>()"->"throw $r2";
    "$z1 = <com.thealgorithms.maths.FindKthNumber: boolean $assertionsDisabled>"->"if $z1 != 0 goto return";
    "if $z1 != 0 goto return"->"$i6 = r0[i4]";
    "if $z1 != 0 goto return"->"return";
    "$i6 = r0[i4]"->"if $i6 == i5 goto return";
    "if $i6 == i5 goto return"->"$r1 = new java.lang.AssertionError";
    "if $i6 == i5 goto return"->"return";
    "$r1 = new java.lang.AssertionError"->"specialinvoke $r1.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()"->"throw $r1";
}
