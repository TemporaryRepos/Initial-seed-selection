digraph "unitGraph" {
    "r2 := @parameter0: int[]"
    "i0 := @parameter1: int"
    "i2 = 0"
    "if i2 >= i0 goto return"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$i1 = r2[i2]"
    "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r5)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "return"
    "r2 := @parameter0: int[]"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i2 = 0";
    "i2 = 0"->"if i2 >= i0 goto return";
    "if i2 >= i0 goto return"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i2 >= i0 goto return"->"return";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$i1 = r2[i2]";
    "$i1 = r2[i2]"->"$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)";
    "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r5)";
    "virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r5)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i0 goto return";
}
