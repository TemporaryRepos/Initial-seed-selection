digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = newarray (int)[7]"
    "$r0[0] = 10"
    "$r0[1] = 20"
    "$r0[2] = 30"
    "$r0[3] = 50"
    "$r0[4] = 10"
    "$r0[5] = 70"
    "$r0[6] = 30"
    "r1 = $r0"
    "$r2 = newarray (int)[7]"
    "$r2[0] = 70"
    "$r2[1] = 30"
    "$r2[2] = 20"
    "$r2[3] = 10"
    "$r2[4] = 10"
    "$r2[5] = 10"
    "$r2[6] = 10"
    "r3 = $r2"
    "$i0 = lengthof r1"
    "r4 = staticinvoke <com.thealgorithms.stacks.MaximumMinimumWindow: int[] calculateMaxOfMin(int[],int)>(r1, $i0)"
    "$z0 = <com.thealgorithms.stacks.MaximumMinimumWindow: boolean $assertionsDisabled>"
    "if $z0 != 0 goto return"
    "$z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, r4)"
    "if $z1 != 0 goto return"
    "$r5 = new java.lang.AssertionError"
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"
    "throw $r5"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = newarray (int)[7]";
    "$r0 = newarray (int)[7]"->"$r0[0] = 10";
    "$r0[0] = 10"->"$r0[1] = 20";
    "$r0[1] = 20"->"$r0[2] = 30";
    "$r0[2] = 30"->"$r0[3] = 50";
    "$r0[3] = 50"->"$r0[4] = 10";
    "$r0[4] = 10"->"$r0[5] = 70";
    "$r0[5] = 70"->"$r0[6] = 30";
    "$r0[6] = 30"->"r1 = $r0";
    "r1 = $r0"->"$r2 = newarray (int)[7]";
    "$r2 = newarray (int)[7]"->"$r2[0] = 70";
    "$r2[0] = 70"->"$r2[1] = 30";
    "$r2[1] = 30"->"$r2[2] = 20";
    "$r2[2] = 20"->"$r2[3] = 10";
    "$r2[3] = 10"->"$r2[4] = 10";
    "$r2[4] = 10"->"$r2[5] = 10";
    "$r2[5] = 10"->"$r2[6] = 10";
    "$r2[6] = 10"->"r3 = $r2";
    "r3 = $r2"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"r4 = staticinvoke <com.thealgorithms.stacks.MaximumMinimumWindow: int[] calculateMaxOfMin(int[],int)>(r1, $i0)";
    "r4 = staticinvoke <com.thealgorithms.stacks.MaximumMinimumWindow: int[] calculateMaxOfMin(int[],int)>(r1, $i0)"->"$z0 = <com.thealgorithms.stacks.MaximumMinimumWindow: boolean $assertionsDisabled>";
    "$z0 = <com.thealgorithms.stacks.MaximumMinimumWindow: boolean $assertionsDisabled>"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, r4)";
    "if $z0 != 0 goto return"->"return";
    "$z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, r4)"->"if $z1 != 0 goto return";
    "if $z1 != 0 goto return"->"$r5 = new java.lang.AssertionError";
    "if $z1 != 0 goto return"->"return";
    "$r5 = new java.lang.AssertionError"->"specialinvoke $r5.<java.lang.AssertionError: void <init>()>()";
    "specialinvoke $r5.<java.lang.AssertionError: void <init>()>()"->"throw $r5";
}
