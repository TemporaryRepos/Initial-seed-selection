digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.searches.JumpSearch;
r0 := @parameter0: java.lang.Comparable[];
r1 := @parameter1: java.lang.Comparable;
i0 = lengthof r0;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
i1 = (int) $d1;
i8 = i1;
"
    "Block 1:
[preds: 0 3 ] [succs: 2 4 ]
$r2 = r0[i8];
$i2 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i9 = i8 - i1;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i3 = lengthof r0;
$i4 = $i3 - 1;
if i8 >= $i4 goto i9 = i8 - i1;
"
    "Block 3:
[preds: 2 ] [succs: 1 ]
$i7 = i8 + i1;
$i5 = lengthof r0;
$i6 = $i5 - 1;
i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);
goto [?= $r2 = r0[i8]];
"
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
i9 = i8 - i1;
"
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i9 > i8 goto return -1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r3 = r0[i9];
if $r3 != r1 goto i9 = i9 + 1;
"
    "Block 7:
[preds: 6 ] [succs: ]
return i9;
"
    "Block 8:
[preds: 6 ] [succs: 5 ]
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 5 ] [succs: ]
return -1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: com.thealgorithms.searches.JumpSearch;
r0 := @parameter0: java.lang.Comparable[];
r1 := @parameter1: java.lang.Comparable;
i0 = lengthof r0;
$d0 = (double) i0;
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
i1 = (int) $d1;
i8 = i1;
"->"Block 1:
[preds: 0 3 ] [succs: 2 4 ]
$r2 = r0[i8];
$i2 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i9 = i8 - i1;
";
    "Block 1:
[preds: 0 3 ] [succs: 2 4 ]
$r2 = r0[i8];
$i2 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i9 = i8 - i1;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i3 = lengthof r0;
$i4 = $i3 - 1;
if i8 >= $i4 goto i9 = i8 - i1;
";
    "Block 1:
[preds: 0 3 ] [succs: 2 4 ]
$r2 = r0[i8];
$i2 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i9 = i8 - i1;
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
i9 = i8 - i1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i3 = lengthof r0;
$i4 = $i3 - 1;
if i8 >= $i4 goto i9 = i8 - i1;
"->"Block 3:
[preds: 2 ] [succs: 1 ]
$i7 = i8 + i1;
$i5 = lengthof r0;
$i6 = $i5 - 1;
i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);
goto [?= $r2 = r0[i8]];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i3 = lengthof r0;
$i4 = $i3 - 1;
if i8 >= $i4 goto i9 = i8 - i1;
"->"Block 4:
[preds: 1 2 ] [succs: 5 ]
i9 = i8 - i1;
";
    "Block 3:
[preds: 2 ] [succs: 1 ]
$i7 = i8 + i1;
$i5 = lengthof r0;
$i6 = $i5 - 1;
i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);
goto [?= $r2 = r0[i8]];
"->"Block 1:
[preds: 0 3 ] [succs: 2 4 ]
$r2 = r0[i8];
$i2 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r2);
if $i2 <= 0 goto i9 = i8 - i1;
";
    "Block 4:
[preds: 1 2 ] [succs: 5 ]
i9 = i8 - i1;
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i9 > i8 goto return -1;
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i9 > i8 goto return -1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r3 = r0[i9];
if $r3 != r1 goto i9 = i9 + 1;
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i9 > i8 goto return -1;
"->"Block 9:
[preds: 5 ] [succs: ]
return -1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r3 = r0[i9];
if $r3 != r1 goto i9 = i9 + 1;
"->"Block 7:
[preds: 6 ] [succs: ]
return i9;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r3 = r0[i9];
if $r3 != r1 goto i9 = i9 + 1;
"->"Block 8:
[preds: 6 ] [succs: 5 ]
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 ] [succs: 5 ]
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i9 > i8 goto return -1;
";
}
