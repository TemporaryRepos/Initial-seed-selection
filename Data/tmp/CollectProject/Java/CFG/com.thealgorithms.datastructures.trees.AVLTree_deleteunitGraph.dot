digraph "unitGraph" {
    "r0 := @this: com.thealgorithms.datastructures.trees.AVLTree"
    "i0 := @parameter0: int"
    "$r1 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"
    "if $r1 != null goto r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"
    "return"
    "r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"
    "r3 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"
    "if r3 == null goto return"
    "r4 = r3"
    "$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "if i0 < $i1 goto $r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "goto [?= r3 = $r5]"
    "$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "r3 = $r5"
    "$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "if i0 != $i2 goto (branch)"
    "specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void delete(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"
    "r0 := @this: com.thealgorithms.datastructures.trees.AVLTree"->"i0 := @parameter0: int";
    "i0 := @parameter0: int"->"$r1 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>";
    "$r1 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"->"if $r1 != null goto r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>";
    "if $r1 != null goto r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"->"return";
    "if $r1 != null goto r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"->"r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>";
    "r2 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"->"r3 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>";
    "r3 = r0.<com.thealgorithms.datastructures.trees.AVLTree: com.thealgorithms.datastructures.trees.AVLTree$Node root>"->"if r3 == null goto return";
    "if r3 == null goto return"->"r4 = r3";
    "if r3 == null goto return"->"return";
    "r4 = r3"->"$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "$i1 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"if i0 < $i1 goto $r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "if i0 < $i1 goto $r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "if i0 < $i1 goto $r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$200(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"goto [?= r3 = $r5]";
    "goto [?= r3 = $r5]"->"r3 = $r5";
    "$r5 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: com.thealgorithms.datastructures.trees.AVLTree$Node access$100(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"r3 = $r5";
    "r3 = $r5"->"$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "$i2 = staticinvoke <com.thealgorithms.datastructures.trees.AVLTree$Node: int access$000(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"if i0 != $i2 goto (branch)";
    "if i0 != $i2 goto (branch)"->"specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void delete(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)";
    "if i0 != $i2 goto (branch)"->"if r3 == null goto return";
    "specialinvoke r0.<com.thealgorithms.datastructures.trees.AVLTree: void delete(com.thealgorithms.datastructures.trees.AVLTree$Node)>(r4)"->"return";
}
