digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @parameter0: java.util.List;
d0 := @parameter1: double;
r0 := @parameter2: java.util.List;
r7 := @parameter3: java.lang.String;
r8 := @parameter4: java.lang.String;
r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r3 = (java.lang.Integer) $r2;
$i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$d1 = (double) $i0;
$d2 = d0 * $d1;
$d3 = $d2 / 100.0;
i2 = (int) $d3;
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
if i2 <= $i1 goto r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
i2 = interfaceinvoke r4.<java.util.List: int size()>();
"
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
$r6 = new java.io.File;
$r9 = <core.utils.DTPlatform: java.lang.String FILE_SEPARATOR>;
$r10 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r7, $r9, r8, r3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\u0001\u0001_\u0001.txt\");
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r10);
r11 = $r6;
$r12 = new java.io.FileWriter;
specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(r11);
r13 = $r12;
r14 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r13.<java.io.FileWriter: void close()>();
"
    "Block 6:
[preds: 5 ] [succs: 5 ]
$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = virtualinvoke r16.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\".bitmap\", \"\");
$r18 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>($r17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\n\");
virtualinvoke r13.<java.io.FileWriter: void write(java.lang.String)>($r18);
goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 7:
[preds: 5 ] [succs: 1 ]
virtualinvoke r13.<java.io.FileWriter: void close()>();
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 8:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @parameter0: java.util.List;
d0 := @parameter1: double;
r0 := @parameter2: java.util.List;
r7 := @parameter3: java.lang.String;
r8 := @parameter4: java.lang.String;
r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r3 = (java.lang.Integer) $r2;
$i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$d1 = (double) $i0;
$d2 = d0 * $d1;
$d3 = $d2 / 100.0;
i2 = (int) $d3;
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
if i2 <= $i1 goto r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
"->"Block 8:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r3 = (java.lang.Integer) $r2;
$i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$d1 = (double) $i0;
$d2 = d0 * $d1;
$d3 = $d2 / 100.0;
i2 = (int) $d3;
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
if i2 <= $i1 goto r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
i2 = interfaceinvoke r4.<java.util.List: int size()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r3 = (java.lang.Integer) $r2;
$i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
$d1 = (double) $i0;
$d2 = d0 * $d1;
$d3 = $d2 / 100.0;
i2 = (int) $d3;
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
if i2 <= $i1 goto r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
$r6 = new java.io.File;
$r9 = <core.utils.DTPlatform: java.lang.String FILE_SEPARATOR>;
$r10 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r7, $r9, r8, r3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\u0001\u0001_\u0001.txt\");
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r10);
r11 = $r6;
$r12 = new java.io.FileWriter;
specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(r11);
r13 = $r12;
r14 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
i2 = interfaceinvoke r4.<java.util.List: int size()>();
"->"Block 4:
[preds: 2 3 ] [succs: 5 ]
r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
$r6 = new java.io.File;
$r9 = <core.utils.DTPlatform: java.lang.String FILE_SEPARATOR>;
$r10 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r7, $r9, r8, r3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\u0001\u0001_\u0001.txt\");
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r10);
r11 = $r6;
$r12 = new java.io.FileWriter;
specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(r11);
r13 = $r12;
r14 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 4:
[preds: 2 3 ] [succs: 5 ]
r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>(0, i2);
$r6 = new java.io.File;
$r9 = <core.utils.DTPlatform: java.lang.String FILE_SEPARATOR>;
$r10 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r7, $r9, r8, r3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\u0001\u0001_\u0001.txt\");
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r10);
r11 = $r6;
$r12 = new java.io.FileWriter;
specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(r11);
r13 = $r12;
r14 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r13.<java.io.FileWriter: void close()>();
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r13.<java.io.FileWriter: void close()>();
"->"Block 6:
[preds: 5 ] [succs: 5 ]
$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = virtualinvoke r16.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\".bitmap\", \"\");
$r18 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>($r17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\n\");
virtualinvoke r13.<java.io.FileWriter: void write(java.lang.String)>($r18);
goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r13.<java.io.FileWriter: void close()>();
"->"Block 7:
[preds: 5 ] [succs: 1 ]
virtualinvoke r13.<java.io.FileWriter: void close()>();
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 6:
[preds: 5 ] [succs: 5 ]
$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r16 = (java.lang.String) $r15;
$r17 = virtualinvoke r16.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\".bitmap\", \"\");
$r18 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>($r17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(\"\u0001\n\");
virtualinvoke r13.<java.io.FileWriter: void write(java.lang.String)>($r18);
goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto virtualinvoke r13.<java.io.FileWriter: void close()>();
";
    "Block 7:
[preds: 5 ] [succs: 1 ]
virtualinvoke r13.<java.io.FileWriter: void close()>();
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return;
";
}
