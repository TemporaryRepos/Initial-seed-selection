digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
d1 := @parameter0: double;
d0 := @parameter1: double;
r28 = null;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.io.File;
$r3 = <Main: java.lang.String covRootPath>;
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();
$r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);
r29 = (java.io.File[]) $r6;
i0 = lengthof r29;
i6 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i6 >= i0 goto $r7 = new core.subSetAnalysis.coverage.MinSet;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r14 = r29[i6];
$r15 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r16 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
r17 = $r16[0];
$r18 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r19 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
$r20 = $r19[1];
$r21 = virtualinvoke $r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r22 = $r21[0];
$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);
d2 = (double) $l4;
$r23 = new core.feature.BitMap;
$r24 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();
specialinvoke $r23.<core.feature.BitMap: void <init>(java.lang.String,java.lang.String,double)>($r24, r17, d2);
r25 = $r23;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r25);
if r28 != null goto r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r26 = new core.feature.BitMap;
$r27 = virtualinvoke r25.<core.feature.BitMap: java.util.List getBits()>();
$i5 = interfaceinvoke $r27.<java.util.List: int size()>();
specialinvoke $r26.<core.feature.BitMap: void <init>(int,java.lang.String,double)>($i5, \"allBitMap\", 0.0);
r28 = $r26;
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: 6 8 ]
$r7 = new core.subSetAnalysis.coverage.MinSet;
specialinvoke $r7.<core.subSetAnalysis.coverage.MinSet: void <init>(java.util.List,double,double)>(r1, d0, d1);
r30 = $r7;
virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: void reduce()>();
$z0 = <Main: boolean $assertionsDisabled>;
if $z0 != 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if r28 != null goto $r8 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r13 = new java.lang.AssertionError;
specialinvoke $r13.<java.lang.AssertionError: void <init>()>();
throw $r13;
"
    "Block 8:
[preds: 5 6 ] [succs: ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$l1 = virtualinvoke r28.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r8.<java.io.PrintStream: void println(long)>($l1);
$r9 = <java.lang.System: java.io.PrintStream out>;
$r10 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: core.feature.BitMap getAllBitMap()>();
$l2 = virtualinvoke $r10.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r9.<java.io.PrintStream: void println(long)>($l2);
$r11 = <java.lang.System: java.io.PrintStream out>;
$i3 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: int getSumTime()>();
virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i3);
$r12 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: java.util.List getFileNameList()>();
return $r12;
"
    "Block 0:
[preds: ] [succs: 1 ]
d1 := @parameter0: double;
d0 := @parameter1: double;
r28 = null;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.io.File;
$r3 = <Main: java.lang.String covRootPath>;
specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
r4 = $r2;
$r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();
$r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);
r29 = (java.io.File[]) $r6;
i0 = lengthof r29;
i6 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i6 >= i0 goto $r7 = new core.subSetAnalysis.coverage.MinSet;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i6 >= i0 goto $r7 = new core.subSetAnalysis.coverage.MinSet;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r14 = r29[i6];
$r15 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r16 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
r17 = $r16[0];
$r18 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r19 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
$r20 = $r19[1];
$r21 = virtualinvoke $r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r22 = $r21[0];
$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);
d2 = (double) $l4;
$r23 = new core.feature.BitMap;
$r24 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();
specialinvoke $r23.<core.feature.BitMap: void <init>(java.lang.String,java.lang.String,double)>($r24, r17, d2);
r25 = $r23;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r25);
if r28 != null goto r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i6 >= i0 goto $r7 = new core.subSetAnalysis.coverage.MinSet;
"->"Block 5:
[preds: 1 ] [succs: 6 8 ]
$r7 = new core.subSetAnalysis.coverage.MinSet;
specialinvoke $r7.<core.subSetAnalysis.coverage.MinSet: void <init>(java.util.List,double,double)>(r1, d0, d1);
r30 = $r7;
virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: void reduce()>();
$z0 = <Main: boolean $assertionsDisabled>;
if $z0 != 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r14 = r29[i6];
$r15 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r16 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
r17 = $r16[0];
$r18 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r19 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
$r20 = $r19[1];
$r21 = virtualinvoke $r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r22 = $r21[0];
$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);
d2 = (double) $l4;
$r23 = new core.feature.BitMap;
$r24 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();
specialinvoke $r23.<core.feature.BitMap: void <init>(java.lang.String,java.lang.String,double)>($r24, r17, d2);
r25 = $r23;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r25);
if r28 != null goto r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r26 = new core.feature.BitMap;
$r27 = virtualinvoke r25.<core.feature.BitMap: java.util.List getBits()>();
$i5 = interfaceinvoke $r27.<java.util.List: int size()>();
specialinvoke $r26.<core.feature.BitMap: void <init>(int,java.lang.String,double)>($i5, \"allBitMap\", 0.0);
r28 = $r26;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r14 = r29[i6];
$r15 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r16 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
r17 = $r16[0];
$r18 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();
$r19 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"@\");
$r20 = $r19[1];
$r21 = virtualinvoke $r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\");
$r22 = $r21[0];
$l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);
d2 = (double) $l4;
$r23 = new core.feature.BitMap;
$r24 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();
specialinvoke $r23.<core.feature.BitMap: void <init>(java.lang.String,java.lang.String,double)>($r24, r17, d2);
r25 = $r23;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r25);
if r28 != null goto r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r26 = new core.feature.BitMap;
$r27 = virtualinvoke r25.<core.feature.BitMap: java.util.List getBits()>();
$i5 = interfaceinvoke $r27.<java.util.List: int size()>();
specialinvoke $r26.<core.feature.BitMap: void <init>(int,java.lang.String,double)>($i5, \"allBitMap\", 0.0);
r28 = $r26;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
r28 = staticinvoke <core.feature.BitMap: core.feature.BitMap add(core.feature.BitMap,core.feature.BitMap,java.lang.String,double)>(r28, r25, \"allBitMap\", 0.0);
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i6 >= i0 goto $r7 = new core.subSetAnalysis.coverage.MinSet;
";
    "Block 5:
[preds: 1 ] [succs: 6 8 ]
$r7 = new core.subSetAnalysis.coverage.MinSet;
specialinvoke $r7.<core.subSetAnalysis.coverage.MinSet: void <init>(java.util.List,double,double)>(r1, d0, d1);
r30 = $r7;
virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: void reduce()>();
$z0 = <Main: boolean $assertionsDisabled>;
if $z0 != 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
if r28 != null goto $r8 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 5:
[preds: 1 ] [succs: 6 8 ]
$r7 = new core.subSetAnalysis.coverage.MinSet;
specialinvoke $r7.<core.subSetAnalysis.coverage.MinSet: void <init>(java.util.List,double,double)>(r1, d0, d1);
r30 = $r7;
virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: void reduce()>();
$z0 = <Main: boolean $assertionsDisabled>;
if $z0 != 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 5 6 ] [succs: ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$l1 = virtualinvoke r28.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r8.<java.io.PrintStream: void println(long)>($l1);
$r9 = <java.lang.System: java.io.PrintStream out>;
$r10 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: core.feature.BitMap getAllBitMap()>();
$l2 = virtualinvoke $r10.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r9.<java.io.PrintStream: void println(long)>($l2);
$r11 = <java.lang.System: java.io.PrintStream out>;
$i3 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: int getSumTime()>();
virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i3);
$r12 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: java.util.List getFileNameList()>();
return $r12;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if r28 != null goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 6 ] [succs: ]
$r13 = new java.lang.AssertionError;
specialinvoke $r13.<java.lang.AssertionError: void <init>()>();
throw $r13;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if r28 != null goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 5 6 ] [succs: ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$l1 = virtualinvoke r28.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r8.<java.io.PrintStream: void println(long)>($l1);
$r9 = <java.lang.System: java.io.PrintStream out>;
$r10 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: core.feature.BitMap getAllBitMap()>();
$l2 = virtualinvoke $r10.<core.feature.BitMap: long hitCount()>();
virtualinvoke $r9.<java.io.PrintStream: void println(long)>($l2);
$r11 = <java.lang.System: java.io.PrintStream out>;
$i3 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: int getSumTime()>();
virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i3);
$r12 = virtualinvoke r30.<core.subSetAnalysis.coverage.MinSet: java.util.List getFileNameList()>();
return $r12;
";
}
