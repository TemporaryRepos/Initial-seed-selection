digraph "unitGraph" {
    "r3 := @parameter0: java.lang.Object"
    "r0 := @parameter1: java.util.Set"
    "z2 = 0"
    "r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return z2"
    "r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()"
    "$z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2)"
    "if $z1 == 0 goto (branch)"
    "z2 = 1"
    "goto [?= return z2]"
    "goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]"
    "return z2"
    "r3 := @parameter0: java.lang.Object"->"r0 := @parameter1: java.util.Set";
    "r0 := @parameter1: java.util.Set"->"z2 = 0";
    "z2 = 0"->"r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()";
    "r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return z2";
    "if $z0 == 0 goto return z2"->"r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return z2"->"return z2";
    "r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()"->"$z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2)";
    "$z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2)"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"z2 = 1";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]";
    "z2 = 1"->"goto [?= return z2]";
    "goto [?= return z2]"->"return z2";
    "goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()";
}
