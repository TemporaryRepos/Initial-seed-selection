digraph "unitGraph" {
    "r2 := @this: com.megagao.production.ssm.util.UtilFuns"
    "r0 := @parameter0: java.util.ArrayList"
    "$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()"
    "r1 = newarray (java.lang.String)[$i0]"
    "i2 = 0"
    "$i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()"
    "if i2 >= $i1 goto return r1"
    "$r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)"
    "$r4 = staticinvoke <com.megagao.production.ssm.util.UtilFuns: java.lang.String convertNull(java.lang.Object)>($r3)"
    "r1[i2] = $r4"
    "i2 = i2 + 1"
    "goto [?= $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()]"
    "return r1"
    "r2 := @this: com.megagao.production.ssm.util.UtilFuns"->"r0 := @parameter0: java.util.ArrayList";
    "r0 := @parameter0: java.util.ArrayList"->"$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()";
    "$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()"->"r1 = newarray (java.lang.String)[$i0]";
    "r1 = newarray (java.lang.String)[$i0]"->"i2 = 0";
    "i2 = 0"->"$i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()";
    "$i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()"->"if i2 >= $i1 goto return r1";
    "if i2 >= $i1 goto return r1"->"$r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)";
    "if i2 >= $i1 goto return r1"->"return r1";
    "$r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)"->"$r4 = staticinvoke <com.megagao.production.ssm.util.UtilFuns: java.lang.String convertNull(java.lang.Object)>($r3)";
    "$r4 = staticinvoke <com.megagao.production.ssm.util.UtilFuns: java.lang.String convertNull(java.lang.Object)>($r3)"->"r1[i2] = $r4";
    "r1[i2] = $r4"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()]";
    "goto [?= $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()]"->"$i1 = virtualinvoke r0.<java.util.ArrayList: int size()>()";
}
