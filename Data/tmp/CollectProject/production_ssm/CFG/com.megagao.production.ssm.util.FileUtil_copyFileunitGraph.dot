digraph "unitGraph" {
    "r8 := @this: com.megagao.production.ssm.util.FileUtil"
    "r1 := @parameter0: java.lang.String"
    "r4 := @parameter1: java.lang.String"
    "$r0 = new java.io.FileInputStream"
    "specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1)"
    "r2 = $r0"
    "$r3 = new java.io.FileOutputStream"
    "specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4)"
    "r5 = $r3"
    "r6 = virtualinvoke r2.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()"
    "r7 = virtualinvoke r5.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"
    "$l0 = virtualinvoke r6.<java.nio.channels.FileChannel: long size()>()"
    "virtualinvoke r6.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>(0L, $l0, r7)"
    "virtualinvoke r6.<java.nio.channels.FileChannel: void close()>()"
    "virtualinvoke r7.<java.nio.channels.FileChannel: void close()>()"
    "virtualinvoke r2.<java.io.FileInputStream: void close()>()"
    "virtualinvoke r5.<java.io.FileOutputStream: void close()>()"
    "return"
    "r8 := @this: com.megagao.production.ssm.util.FileUtil"->"r1 := @parameter0: java.lang.String";
    "r1 := @parameter0: java.lang.String"->"r4 := @parameter1: java.lang.String";
    "r4 := @parameter1: java.lang.String"->"$r0 = new java.io.FileInputStream";
    "$r0 = new java.io.FileInputStream"->"specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1)";
    "specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1)"->"r2 = $r0";
    "r2 = $r0"->"$r3 = new java.io.FileOutputStream";
    "$r3 = new java.io.FileOutputStream"->"specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4)";
    "specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4)"->"r5 = $r3";
    "r5 = $r3"->"r6 = virtualinvoke r2.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()";
    "r6 = virtualinvoke r2.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>()"->"r7 = virtualinvoke r5.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()";
    "r7 = virtualinvoke r5.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>()"->"$l0 = virtualinvoke r6.<java.nio.channels.FileChannel: long size()>()";
    "$l0 = virtualinvoke r6.<java.nio.channels.FileChannel: long size()>()"->"virtualinvoke r6.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>(0L, $l0, r7)";
    "virtualinvoke r6.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>(0L, $l0, r7)"->"virtualinvoke r6.<java.nio.channels.FileChannel: void close()>()";
    "virtualinvoke r6.<java.nio.channels.FileChannel: void close()>()"->"virtualinvoke r7.<java.nio.channels.FileChannel: void close()>()";
    "virtualinvoke r7.<java.nio.channels.FileChannel: void close()>()"->"virtualinvoke r2.<java.io.FileInputStream: void close()>()";
    "virtualinvoke r2.<java.io.FileInputStream: void close()>()"->"virtualinvoke r5.<java.io.FileOutputStream: void close()>()";
    "virtualinvoke r5.<java.io.FileOutputStream: void close()>()"->"return";
}
