digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String;
r9 = \"\";
r10 = virtualinvoke r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\t\", \"/t\");
r11 = virtualinvoke r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\\\\", \"/\");
r0 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"/\");
i1 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r3 = r0[i1];
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
$r6 = new java.io.File;
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r9);
r7 = $r6;
$z0 = virtualinvoke r7.<java.io.File: boolean exists()>();
if $z0 != 0 goto i1 = i1 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r7.<java.io.File: boolean mkdir()>();
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String;
r9 = \"\";
r10 = virtualinvoke r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\t\", \"/t\");
r11 = virtualinvoke r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\\\\", \"/\");
r0 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"/\");
i1 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r3 = r0[i1];
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
$r6 = new java.io.File;
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r9);
r7 = $r6;
$z0 = virtualinvoke r7.<java.io.File: boolean exists()>();
if $z0 != 0 goto i1 = i1 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r3 = r0[i1];
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
$r6 = new java.io.File;
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r9);
r7 = $r6;
$z0 = virtualinvoke r7.<java.io.File: boolean exists()>();
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r7.<java.io.File: boolean mkdir()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
$r3 = r0[i1];
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\");
r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
$r6 = new java.io.File;
specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r9);
r7 = $r6;
$z0 = virtualinvoke r7.<java.io.File: boolean exists()>();
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
virtualinvoke r7.<java.io.File: boolean mkdir()>();
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= $i0 = lengthof r0];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r0;
if i1 >= $i0 goto return;
";
}
