digraph "unitGraph" {
    "r2 := @parameter0: java.util.List"
    "$r0 = new java.lang.StringBuffer"
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"
    "r1 = $r0"
    "r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()"
    "$r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"&\")"
    "$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "$r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"=\")"
    "$r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9)"
    "goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"
    "$i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()"
    "$r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(1, $i0)"
    "return $r4"
    "r2 := @parameter0: java.util.List"->"$r0 = new java.lang.StringBuffer";
    "$r0 = new java.lang.StringBuffer"->"specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()";
    "if $z0 == 0 goto $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()"->"$r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"&\")";
    "if $z0 == 0 goto $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()"->"$i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()";
    "$r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"&\")"->"$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"$r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6)";
    "$r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"=\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"=\")"->"$r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "$r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9)";
    "virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9)"->"goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "$i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>()"->"$r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(1, $i0)";
    "$r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(1, $i0)"->"return $r4";
}
