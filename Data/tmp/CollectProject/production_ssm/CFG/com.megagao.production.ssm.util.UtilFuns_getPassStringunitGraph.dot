digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String"
    "i2 := @parameter1: int"
    "i1 := @parameter2: int"
    "i3 := @parameter3: int"
    "$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"null\")"
    "if $z0 == 0 goto r9 = \"\""
    "return \"\""
    "r9 = \"\""
    "r10 = \"\""
    "i0 = virtualinvoke r8.<java.lang.String: int length()>()"
    "if i1 < i2 goto return r8"
    "if i0 <= i2 goto r11 = \"\""
    "r11 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i2)"
    "r12 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(i1, i0)"
    "goto [?= i4 = 0]"
    "r11 = \"\""
    "r12 = \"\""
    "i4 = 0"
    "if i4 >= i3 goto $r0 = new java.lang.StringBuilder"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*\")"
    "r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"
    "r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return r8"
    "$r7 := @caughtexception"
    "r13 = $r7"
    "r8 := @parameter0: java.lang.String"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"i3 := @parameter3: int";
    "i3 := @parameter3: int"->"$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"null\")";
    "i3 := @parameter3: int"->"$r7 := @caughtexception";
    "$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"null\")"->"if $z0 == 0 goto r9 = \"\"";
    "$z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(\"null\")"->"$r7 := @caughtexception";
    "if $z0 == 0 goto r9 = \"\""->"return \"\"";
    "if $z0 == 0 goto r9 = \"\""->"r9 = \"\"";
    "if $z0 == 0 goto r9 = \"\""->"$r7 := @caughtexception";
    "r9 = \"\""->"r10 = \"\"";
    "r9 = \"\""->"$r7 := @caughtexception";
    "r10 = \"\""->"i0 = virtualinvoke r8.<java.lang.String: int length()>()";
    "r10 = \"\""->"$r7 := @caughtexception";
    "i0 = virtualinvoke r8.<java.lang.String: int length()>()"->"if i1 < i2 goto return r8";
    "i0 = virtualinvoke r8.<java.lang.String: int length()>()"->"$r7 := @caughtexception";
    "if i1 < i2 goto return r8"->"if i0 <= i2 goto r11 = \"\"";
    "if i1 < i2 goto return r8"->"return r8";
    "if i1 < i2 goto return r8"->"$r7 := @caughtexception";
    "if i0 <= i2 goto r11 = \"\""->"r11 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i2)";
    "if i0 <= i2 goto r11 = \"\""->"r11 = \"\"";
    "if i0 <= i2 goto r11 = \"\""->"$r7 := @caughtexception";
    "r11 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i2)"->"r12 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(i1, i0)";
    "r11 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i2)"->"$r7 := @caughtexception";
    "r12 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(i1, i0)"->"goto [?= i4 = 0]";
    "r12 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(i1, i0)"->"$r7 := @caughtexception";
    "goto [?= i4 = 0]"->"i4 = 0";
    "goto [?= i4 = 0]"->"$r7 := @caughtexception";
    "r11 = \"\""->"r12 = \"\"";
    "r11 = \"\""->"$r7 := @caughtexception";
    "r12 = \"\""->"i4 = 0";
    "r12 = \"\""->"$r7 := @caughtexception";
    "i4 = 0"->"if i4 >= i3 goto $r0 = new java.lang.StringBuilder";
    "i4 = 0"->"$r7 := @caughtexception";
    "if i4 >= i3 goto $r0 = new java.lang.StringBuilder"->"$r4 = new java.lang.StringBuilder";
    "if i4 >= i3 goto $r0 = new java.lang.StringBuilder"->"$r0 = new java.lang.StringBuilder";
    "if i4 >= i3 goto $r0 = new java.lang.StringBuilder"->"$r7 := @caughtexception";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "$r4 = new java.lang.StringBuilder"->"$r7 := @caughtexception";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r7 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*\")";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"->"$r7 := @caughtexception";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*\")"->"r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*\")"->"$r7 := @caughtexception";
    "r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"i4 = i4 + 1";
    "r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r7 := @caughtexception";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "i4 = i4 + 1"->"$r7 := @caughtexception";
    "goto [?= (branch)]"->"if i4 >= i3 goto $r0 = new java.lang.StringBuilder";
    "goto [?= (branch)]"->"$r7 := @caughtexception";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "$r0 = new java.lang.StringBuilder"->"$r7 := @caughtexception";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r7 := @caughtexception";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)";
    "$r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)"->"$r7 := @caughtexception";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)"->"$r7 := @caughtexception";
    "r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"return r8";
    "r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r7 := @caughtexception";
    "$r7 := @caughtexception"->"r13 = $r7";
    "r13 = $r7"->"return r8";
}
