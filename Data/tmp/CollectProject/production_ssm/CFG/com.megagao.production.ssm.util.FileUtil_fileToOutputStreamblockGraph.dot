digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.io.File;
r5 := @parameter1: java.io.OutputStream;
$r0 = new java.io.BufferedInputStream;
$r1 = new java.io.FileInputStream;
specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);
specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);
r3 = $r0;
r4 = newarray (byte)[1024];
"
    "Block 1:
[preds: 0 3 ] [succs: 2 3 ]
i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4);
if i0 != -1 goto virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= virtualinvoke r3.<java.io.InputStream: void close()>()];
"
    "Block 3:
[preds: 1 ] [succs: 1 ]
virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
goto [?= i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4)];
"
    "Block 4:
[preds: 2 ] [succs: ]
virtualinvoke r3.<java.io.InputStream: void close()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.io.File;
r5 := @parameter1: java.io.OutputStream;
$r0 = new java.io.BufferedInputStream;
$r1 = new java.io.FileInputStream;
specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);
specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);
r3 = $r0;
r4 = newarray (byte)[1024];
"->"Block 1:
[preds: 0 3 ] [succs: 2 3 ]
i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4);
if i0 != -1 goto virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
";
    "Block 1:
[preds: 0 3 ] [succs: 2 3 ]
i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4);
if i0 != -1 goto virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= virtualinvoke r3.<java.io.InputStream: void close()>()];
";
    "Block 1:
[preds: 0 3 ] [succs: 2 3 ]
i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4);
if i0 != -1 goto virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
"->"Block 3:
[preds: 1 ] [succs: 1 ]
virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
goto [?= i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4)];
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= virtualinvoke r3.<java.io.InputStream: void close()>()];
"->"Block 4:
[preds: 2 ] [succs: ]
virtualinvoke r3.<java.io.InputStream: void close()>();
return;
";
    "Block 3:
[preds: 1 ] [succs: 1 ]
virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
goto [?= i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4)];
"->"Block 1:
[preds: 0 3 ] [succs: 2 3 ]
i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r4);
if i0 != -1 goto virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i0);
";
}
