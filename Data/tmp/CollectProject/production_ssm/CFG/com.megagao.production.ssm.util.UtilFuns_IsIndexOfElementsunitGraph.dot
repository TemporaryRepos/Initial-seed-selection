digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "r0 := @parameter1: java.util.ArrayList"
    "r4 = \"\""
    "i2 = 0"
    "$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()"
    "if i2 >= $i0 goto (branch)"
    "$r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)"
    "r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1)"
    "$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r2)"
    "if $i1 == -1 goto i2 = i2 + 1"
    "return i2"
    "i2 = i2 + 1"
    "goto [?= $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()]"
    "goto [?= return -1]"
    "$r3 := @caughtexception"
    "r6 = $r3"
    "return -1"
    "r2 := @parameter0: java.lang.String"->"r0 := @parameter1: java.util.ArrayList";
    "r0 := @parameter1: java.util.ArrayList"->"r4 = \"\"";
    "r0 := @parameter1: java.util.ArrayList"->"$r3 := @caughtexception";
    "r4 = \"\""->"i2 = 0";
    "r4 = \"\""->"$r3 := @caughtexception";
    "i2 = 0"->"$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()";
    "i2 = 0"->"$r3 := @caughtexception";
    "$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()"->"if i2 >= $i0 goto (branch)";
    "$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()"->"$r3 := @caughtexception";
    "if i2 >= $i0 goto (branch)"->"$r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)";
    "if i2 >= $i0 goto (branch)"->"goto [?= return -1]";
    "if i2 >= $i0 goto (branch)"->"$r3 := @caughtexception";
    "$r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)"->"r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1)";
    "$r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2)"->"$r3 := @caughtexception";
    "r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1)"->"$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r2)";
    "r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1)"->"$r3 := @caughtexception";
    "$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r2)"->"if $i1 == -1 goto i2 = i2 + 1";
    "$i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r2)"->"$r3 := @caughtexception";
    "if $i1 == -1 goto i2 = i2 + 1"->"return i2";
    "if $i1 == -1 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "if $i1 == -1 goto i2 = i2 + 1"->"$r3 := @caughtexception";
    "i2 = i2 + 1"->"goto [?= $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()]";
    "i2 = i2 + 1"->"$r3 := @caughtexception";
    "goto [?= $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()]"->"$i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()";
    "goto [?= $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>()]"->"$r3 := @caughtexception";
    "goto [?= return -1]"->"return -1";
    "$r3 := @caughtexception"->"r6 = $r3";
    "r6 = $r3"->"return -1";
}
