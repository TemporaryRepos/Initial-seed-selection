digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r0 = staticinvoke <com.megagao.production.ssm.util.ResourcesUtil: java.util.Locale getLocale()>();
r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>(r1, r0);
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r4 = $r3;
r5 = virtualinvoke r2.<java.util.ResourceBundle: java.util.Set keySet()>();
r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8);
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
return r4;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: java.lang.String;
r0 = staticinvoke <com.megagao.production.ssm.util.ResourcesUtil: java.util.Locale getLocale()>();
r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>(r1, r0);
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r4 = $r3;
r5 = virtualinvoke r2.<java.util.ResourceBundle: java.util.Set keySet()>();
r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8);
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
"->"Block 3:
[preds: 1 ] [succs: ]
return r4;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8);
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r4;
";
}
