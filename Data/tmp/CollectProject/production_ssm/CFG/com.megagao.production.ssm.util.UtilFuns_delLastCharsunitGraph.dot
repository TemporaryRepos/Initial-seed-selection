digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String"
    "i2 := @parameter1: int"
    "$i0 = virtualinvoke r2.<java.lang.String: int length()>()"
    "if $i0 <= 0 goto (branch)"
    "$i1 = virtualinvoke r2.<java.lang.String: int length()>()"
    "$i3 = $i1 - i2"
    "r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3)"
    "goto [?= return r2]"
    "$r0 := @caughtexception"
    "r1 = $r0"
    "return \"\""
    "return r2"
    "r2 := @parameter0: java.lang.String"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"$i0 = virtualinvoke r2.<java.lang.String: int length()>()";
    "i2 := @parameter1: int"->"$r0 := @caughtexception";
    "$i0 = virtualinvoke r2.<java.lang.String: int length()>()"->"if $i0 <= 0 goto (branch)";
    "$i0 = virtualinvoke r2.<java.lang.String: int length()>()"->"$r0 := @caughtexception";
    "if $i0 <= 0 goto (branch)"->"$i1 = virtualinvoke r2.<java.lang.String: int length()>()";
    "if $i0 <= 0 goto (branch)"->"goto [?= return r2]";
    "if $i0 <= 0 goto (branch)"->"$r0 := @caughtexception";
    "$i1 = virtualinvoke r2.<java.lang.String: int length()>()"->"$i3 = $i1 - i2";
    "$i1 = virtualinvoke r2.<java.lang.String: int length()>()"->"$r0 := @caughtexception";
    "$i3 = $i1 - i2"->"r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3)";
    "$i3 = $i1 - i2"->"$r0 := @caughtexception";
    "r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3)"->"goto [?= return r2]";
    "r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3)"->"$r0 := @caughtexception";
    "goto [?= return r2]"->"return r2";
    "$r0 := @caughtexception"->"r1 = $r0";
    "r1 = $r0"->"return \"\"";
}
