digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String"
    "r2 := @parameter1: java.lang.String"
    "i1 = 0"
    "$r0 = new java.util.StringTokenizer"
    "specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, r2)"
    "r6 = $r0"
    "$i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>()"
    "r3 = newarray (java.lang.String)[$i0]"
    "$z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()"
    "if $z0 == 0 goto return r3"
    "$r4 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()"
    "r3[i1] = $r4"
    "i1 = i1 + 1"
    "goto [?= $z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()]"
    "return r3"
    "$r5 := @caughtexception"
    "r7 = $r5"
    "return null"
    "r1 := @parameter0: java.lang.String"->"r2 := @parameter1: java.lang.String";
    "r2 := @parameter1: java.lang.String"->"i1 = 0";
    "i1 = 0"->"$r0 = new java.util.StringTokenizer";
    "i1 = 0"->"$r5 := @caughtexception";
    "$r0 = new java.util.StringTokenizer"->"specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, r2)";
    "$r0 = new java.util.StringTokenizer"->"$r5 := @caughtexception";
    "specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, r2)"->"r6 = $r0";
    "specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, r2)"->"$r5 := @caughtexception";
    "r6 = $r0"->"$i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>()";
    "r6 = $r0"->"$r5 := @caughtexception";
    "$i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>()"->"r3 = newarray (java.lang.String)[$i0]";
    "$i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>()"->"$r5 := @caughtexception";
    "r3 = newarray (java.lang.String)[$i0]"->"$z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()";
    "r3 = newarray (java.lang.String)[$i0]"->"$r5 := @caughtexception";
    "$z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()"->"if $z0 == 0 goto return r3";
    "$z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()"->"$r5 := @caughtexception";
    "if $z0 == 0 goto return r3"->"$r4 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()";
    "if $z0 == 0 goto return r3"->"return r3";
    "if $z0 == 0 goto return r3"->"$r5 := @caughtexception";
    "$r4 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()"->"r3[i1] = $r4";
    "$r4 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()"->"$r5 := @caughtexception";
    "r3[i1] = $r4"->"i1 = i1 + 1";
    "r3[i1] = $r4"->"$r5 := @caughtexception";
    "i1 = i1 + 1"->"goto [?= $z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()]";
    "i1 = i1 + 1"->"$r5 := @caughtexception";
    "goto [?= $z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()]"->"$z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()";
    "goto [?= $z0 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreElements()>()]"->"$r5 := @caughtexception";
    "$r5 := @caughtexception"->"r7 = $r5";
    "r7 = $r5"->"return null";
}
