digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
$r6 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
$r7 = staticinvoke <com.power.doc.lamda.ListTest$lambda_main_0__299: java.util.function.Predicate bootstrap$()>();
interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);
r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.lang.Integer) $r10;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>(r11);
goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r13 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);
$r6 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
$r7 = staticinvoke <com.power.doc.lamda.ListTest$lambda_main_0__299: java.util.function.Predicate bootstrap$()>();
interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r7);
r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.lang.Integer) $r10;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>(r11);
goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.lang.Integer) $r10;
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>(r11);
goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z4 == 0 goto return;
";
}
