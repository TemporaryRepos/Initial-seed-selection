digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r27 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"id\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"\u540d\u5b57\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"\u6027\u522b\");
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"id\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"name\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"sex\");
$r4 = new java.util.ArrayList;
specialinvoke $r4.<java.util.ArrayList: void <init>()>();
r5 = $r4;
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 6 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>()>();
r14 = $r13;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"id\", $r15);
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"abc\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"name\", $r20);
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u7537\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"sex\", $r25);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listB  : \");
$r9 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);
$r12 = new com.fuzhu.utils.ExportMapExcel;
specialinvoke $r12.<com.fuzhu.utils.ExportMapExcel: void <init>()>();
r28 = $r12;
virtualinvoke r28.<com.fuzhu.utils.ExportMapExcel: void exportExcel(java.lang.String,java.util.List,java.util.List,java.util.List)>(\"\u6d4b\u8bd5POI\u5bfc\u51faEXCEL\u6587\u6863\", r1, r3, r5);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r27 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"id\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"\u540d\u5b57\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"\u6027\u522b\");
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"id\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"name\");
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(\"sex\");
$r4 = new java.util.ArrayList;
specialinvoke $r4.<java.util.ArrayList: void <init>()>();
r5 = $r4;
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 6 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 6 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>()>();
r14 = $r13;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"id\", $r15);
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"abc\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"name\", $r20);
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u7537\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"sex\", $r25);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 6 goto $r7 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r7 = <java.lang.System: java.io.PrintStream out>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"listB  : \");
$r9 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);
$r12 = new com.fuzhu.utils.ExportMapExcel;
specialinvoke $r12.<com.fuzhu.utils.ExportMapExcel: void <init>()>();
r28 = $r12;
virtualinvoke r28.<com.fuzhu.utils.ExportMapExcel: void exportExcel(java.lang.String,java.util.List,java.util.List,java.util.List)>(\"\u6d4b\u8bd5POI\u5bfc\u51faEXCEL\u6587\u6863\", r1, r3, r5);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>()>();
r14 = $r13;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"id\", $r15);
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"abc\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"name\", $r20);
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u7537\");
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"sex\", $r25);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 6 goto $r7 = <java.lang.System: java.io.PrintStream out>;
";
}
