digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: dict.build.TernaryTree;
r3 := @parameter0: java.lang.String;
i0 := @parameter1: int;
$r2 = r0.<dict.build.TernaryTree: dict.build.TernaryNode root>;
$r1 = new java.util.ArrayList;
specialinvoke $r1.<java.util.ArrayList: void <init>()>();
r4 = specialinvoke r0.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r2, i0, $r1, \"\", r3, 0);
if r4 != null goto $i1 = interfaceinvoke r4.<java.util.List: int size()>();
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
r7 = newarray (java.lang.String)[0];
goto [?= return r7];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
$r5 = newarray (java.lang.String)[$i1];
$r6 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);
r7 = (java.lang.String[]) $r6;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
return r7;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: dict.build.TernaryTree;
r3 := @parameter0: java.lang.String;
i0 := @parameter1: int;
$r2 = r0.<dict.build.TernaryTree: dict.build.TernaryNode root>;
$r1 = new java.util.ArrayList;
specialinvoke $r1.<java.util.ArrayList: void <init>()>();
r4 = specialinvoke r0.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r2, i0, $r1, \"\", r3, 0);
if r4 != null goto $i1 = interfaceinvoke r4.<java.util.List: int size()>();
"->"Block 1:
[preds: 0 ] [succs: 3 ]
r7 = newarray (java.lang.String)[0];
goto [?= return r7];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: dict.build.TernaryTree;
r3 := @parameter0: java.lang.String;
i0 := @parameter1: int;
$r2 = r0.<dict.build.TernaryTree: dict.build.TernaryNode root>;
$r1 = new java.util.ArrayList;
specialinvoke $r1.<java.util.ArrayList: void <init>()>();
r4 = specialinvoke r0.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r2, i0, $r1, \"\", r3, 0);
if r4 != null goto $i1 = interfaceinvoke r4.<java.util.List: int size()>();
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
$r5 = newarray (java.lang.String)[$i1];
$r6 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);
r7 = (java.lang.String[]) $r6;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
r7 = newarray (java.lang.String)[0];
goto [?= return r7];
"->"Block 3:
[preds: 1 2 ] [succs: ]
return r7;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = interfaceinvoke r4.<java.util.List: int size()>();
$r5 = newarray (java.lang.String)[$i1];
$r6 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);
r7 = (java.lang.String[]) $r6;
"->"Block 3:
[preds: 1 2 ] [succs: ]
return r7;
";
}
