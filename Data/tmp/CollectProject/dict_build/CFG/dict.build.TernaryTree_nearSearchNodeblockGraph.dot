digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 22 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
i0 := @parameter1: int;
r7 := @parameter2: java.util.List;
r4 := @parameter3: java.lang.String;
r1 := @parameter4: java.lang.String;
i1 := @parameter5: int;
if r0 == null goto return r7;
"
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
if i0 < 0 goto return r7;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
if i1 >= $i2 goto c12 = 65535;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
goto [?= c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
c12 = 65535;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if i0 > 0 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if c12 >= c3 goto $r8 = new java.lang.StringBuilder;
"
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r3, i0, r7, r4, r1, i1);
"
    "Block 8:
[preds: 6 7 ] [succs: 9 14 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
if c12 != c3 goto $z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
"
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$z2 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z2 == 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
if i0 < 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i9 = virtualinvoke r5.<java.lang.String: int length()>();
$i10 = $i9 + i0;
$i11 = virtualinvoke r1.<java.lang.String: int length()>();
if $i10 < $i11 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
"
    "Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
"
    "Block 14:
[preds: 8 ] [succs: 15 18 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$i4 = i0 - 1;
if $i4 < 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i5 = virtualinvoke r5.<java.lang.String: int length()>();
$i6 = $i5 + i0;
$i7 = $i6 - 1;
$i8 = virtualinvoke r1.<java.lang.String: int length()>();
if $i7 < $i8 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 17:
[preds: 16 ] [succs: 18 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
"
    "Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
"
    "Block 19:
[preds: 13 18 ] [succs: 20 21 ]
if i0 > 0 goto $r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
if c12 <= c3 goto return r7;
"
    "Block 21:
[preds: 19 20 ] [succs: 22 ]
$r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r6, i0, r7, r4, r1, i1);
"
    "Block 22:
[preds: 0 1 20 21 ] [succs: ]
return r7;
"
    "Block 0:
[preds: ] [succs: 1 22 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
i0 := @parameter1: int;
r7 := @parameter2: java.util.List;
r4 := @parameter3: java.lang.String;
r1 := @parameter4: java.lang.String;
i1 := @parameter5: int;
if r0 == null goto return r7;
"->"Block 1:
[preds: 0 ] [succs: 2 22 ]
if i0 < 0 goto return r7;
";
    "Block 0:
[preds: ] [succs: 1 22 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
i0 := @parameter1: int;
r7 := @parameter2: java.util.List;
r4 := @parameter3: java.lang.String;
r1 := @parameter4: java.lang.String;
i1 := @parameter5: int;
if r0 == null goto return r7;
"->"Block 22:
[preds: 0 1 20 21 ] [succs: ]
return r7;
";
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
if i0 < 0 goto return r7;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
if i1 >= $i2 goto c12 = 65535;
";
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
if i0 < 0 goto return r7;
"->"Block 22:
[preds: 0 1 20 21 ] [succs: ]
return r7;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
if i1 >= $i2 goto c12 = 65535;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
goto [?= c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i2 = virtualinvoke r1.<java.lang.String: int length()>();
if i1 >= $i2 goto c12 = 65535;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
c12 = 65535;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
goto [?= c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if i0 > 0 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
c12 = 65535;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if i0 > 0 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if i0 > 0 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
if c12 >= c3 goto $r8 = new java.lang.StringBuilder;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if i0 > 0 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r3, i0, r7, r4, r1, i1);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if c12 >= c3 goto $r8 = new java.lang.StringBuilder;
"->"Block 7:
[preds: 5 6 ] [succs: 8 ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r3, i0, r7, r4, r1, i1);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if c12 >= c3 goto $r8 = new java.lang.StringBuilder;
"->"Block 8:
[preds: 6 7 ] [succs: 9 14 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
if c12 != c3 goto $z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
";
    "Block 7:
[preds: 5 6 ] [succs: 8 ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r3, i0, r7, r4, r1, i1);
"->"Block 8:
[preds: 6 7 ] [succs: 9 14 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
if c12 != c3 goto $z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 14 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
if c12 != c3 goto $z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
"->"Block 9:
[preds: 8 ] [succs: 10 13 ]
$z2 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z2 == 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 8:
[preds: 6 7 ] [succs: 9 14 ]
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
if c12 != c3 goto $z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
"->"Block 14:
[preds: 8 ] [succs: 15 18 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$z2 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z2 == 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 10:
[preds: 9 ] [succs: 11 13 ]
if i0 < 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$z2 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z2 == 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
if i0 < 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$i9 = virtualinvoke r5.<java.lang.String: int length()>();
$i10 = $i9 + i0;
$i11 = virtualinvoke r1.<java.lang.String: int length()>();
if $i10 < $i11 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 13 ]
if i0 < 0 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i9 = virtualinvoke r5.<java.lang.String: int length()>();
$i10 = $i9 + i0;
$i11 = virtualinvoke r1.<java.lang.String: int length()>();
if $i10 < $i11 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 12:
[preds: 11 ] [succs: 13 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i9 = virtualinvoke r5.<java.lang.String: int length()>();
$i10 = $i9 + i0;
$i11 = virtualinvoke r1.<java.lang.String: int length()>();
if $i10 < $i11 goto $r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
"->"Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
";
    "Block 13:
[preds: 9 10 11 12 ] [succs: 19 ]
$r11 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i13 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r11, i0, r7, r5, r1, $i13);
goto [?= (branch)];
"->"Block 19:
[preds: 13 18 ] [succs: 20 21 ]
if i0 > 0 goto $r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
";
    "Block 14:
[preds: 8 ] [succs: 15 18 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 15:
[preds: 14 ] [succs: 16 18 ]
$i4 = i0 - 1;
if $i4 < 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 14:
[preds: 8 ] [succs: 15 18 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
";
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$i4 = i0 - 1;
if $i4 < 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$i5 = virtualinvoke r5.<java.lang.String: int length()>();
$i6 = $i5 + i0;
$i7 = $i6 - 1;
$i8 = virtualinvoke r1.<java.lang.String: int length()>();
if $i7 < $i8 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$i4 = i0 - 1;
if $i4 < 0 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i5 = virtualinvoke r5.<java.lang.String: int length()>();
$i6 = $i5 + i0;
$i7 = $i6 - 1;
$i8 = virtualinvoke r1.<java.lang.String: int length()>();
if $i7 < $i8 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 17:
[preds: 16 ] [succs: 18 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$i5 = virtualinvoke r5.<java.lang.String: int length()>();
$i6 = $i5 + i0;
$i7 = $i6 - 1;
$i8 = virtualinvoke r1.<java.lang.String: int length()>();
if $i7 < $i8 goto $r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
";
    "Block 17:
[preds: 16 ] [succs: 18 ]
interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5);
"->"Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
";
    "Block 18:
[preds: 14 15 16 17 ] [succs: 19 ]
$r12 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i14 = i0 - 1;
$i15 = i1 + 1;
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r12, $i14, r7, r5, r1, $i15);
"->"Block 19:
[preds: 13 18 ] [succs: 20 21 ]
if i0 > 0 goto $r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
";
    "Block 19:
[preds: 13 18 ] [succs: 20 21 ]
if i0 > 0 goto $r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"->"Block 20:
[preds: 19 ] [succs: 21 22 ]
if c12 <= c3 goto return r7;
";
    "Block 19:
[preds: 13 18 ] [succs: 20 21 ]
if i0 > 0 goto $r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"->"Block 21:
[preds: 19 20 ] [succs: 22 ]
$r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r6, i0, r7, r4, r1, i1);
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
if c12 <= c3 goto return r7;
"->"Block 21:
[preds: 19 20 ] [succs: 22 ]
$r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r6, i0, r7, r4, r1, i1);
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
if c12 <= c3 goto return r7;
"->"Block 22:
[preds: 0 1 20 21 ] [succs: ]
return r7;
";
    "Block 21:
[preds: 19 20 ] [succs: 22 ]
$r6 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
r7 = specialinvoke r2.<dict.build.TernaryTree: java.util.List nearSearchNode(dict.build.TernaryNode,int,java.util.List,java.lang.String,java.lang.String,int)>($r6, i0, r7, r4, r1, i1);
"->"Block 22:
[preds: 0 1 20 21 ] [succs: ]
return r7;
";
}
