digraph "unitGraph" {
    "r2 := @this: dict.build.TernaryTree"
    "r0 := @parameter0: dict.build.TernaryNode"
    "r15 := @parameter1: java.util.List"
    "r4 := @parameter2: java.lang.String"
    "r1 := @parameter3: java.lang.String"
    "i0 := @parameter4: int"
    "if r0 == null goto return r15"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if i0 >= $i1 goto return r15"
    "c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0)"
    "c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()"
    "if c2 == 46 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()"
    "if c2 >= c3 goto (branch)"
    "$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()"
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r3, r15, r4, r1, i0)"
    "if c2 == 46 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>()"
    "if c2 != c3 goto (branch)"
    "$i4 = virtualinvoke r1.<java.lang.String: int length()>()"
    "$i5 = $i4 - 1"
    "if i0 != $i5 goto $r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()"
    "$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>()"
    "if $z0 == 0 goto (branch)"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r14)"
    "goto [?= (branch)]"
    "$r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$i6 = i0 + 1"
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r5, r15, $r9, r1, $i6)"
    "if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()"
    "if c2 <= c3 goto return r15"
    "$r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()"
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r10, r15, r4, r1, i0)"
    "return r15"
    "r2 := @this: dict.build.TernaryTree"->"r0 := @parameter0: dict.build.TernaryNode";
    "r0 := @parameter0: dict.build.TernaryNode"->"r15 := @parameter1: java.util.List";
    "r15 := @parameter1: java.util.List"->"r4 := @parameter2: java.lang.String";
    "r4 := @parameter2: java.lang.String"->"r1 := @parameter3: java.lang.String";
    "r1 := @parameter3: java.lang.String"->"i0 := @parameter4: int";
    "i0 := @parameter4: int"->"if r0 == null goto return r15";
    "if r0 == null goto return r15"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "if r0 == null goto return r15"->"return r15";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"if i0 >= $i1 goto return r15";
    "if i0 >= $i1 goto return r15"->"c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0)";
    "if i0 >= $i1 goto return r15"->"return r15";
    "c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0)"->"c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()";
    "c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>()"->"if c2 == 46 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()";
    "if c2 == 46 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()"->"if c2 >= c3 goto (branch)";
    "if c2 == 46 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()"->"$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()";
    "if c2 >= c3 goto (branch)"->"$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()";
    "if c2 >= c3 goto (branch)"->"if c2 == 46 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>()"->"r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r3, r15, r4, r1, i0)";
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r3, r15, r4, r1, i0)"->"if c2 == 46 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>()";
    "if c2 == 46 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>()"->"if c2 != c3 goto (branch)";
    "if c2 == 46 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>()"->"$i4 = virtualinvoke r1.<java.lang.String: int length()>()";
    "if c2 != c3 goto (branch)"->"$i4 = virtualinvoke r1.<java.lang.String: int length()>()";
    "if c2 != c3 goto (branch)"->"if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "$i4 = virtualinvoke r1.<java.lang.String: int length()>()"->"$i5 = $i4 - 1";
    "$i5 = $i4 - 1"->"if i0 != $i5 goto $r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()";
    "if i0 != $i5 goto $r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()"->"$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>()";
    "if i0 != $i5 goto $r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()"->"$r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()";
    "$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>()"->"if $z0 == 0 goto (branch)";
    "if $z0 == 0 goto (branch)"->"$r11 = new java.lang.StringBuilder";
    "if $z0 == 0 goto (branch)"->"if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r14)";
    "interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r14)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "$r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>()"->"$r6 = new java.lang.StringBuilder";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"$i6 = i0 + 1";
    "$i6 = i0 + 1"->"r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r5, r15, $r9, r1, $i6)";
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r5, r15, $r9, r1, $i6)"->"if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()"->"if c2 <= c3 goto return r15";
    "if c2 == 46 goto $r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()"->"$r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "if c2 <= c3 goto return r15"->"$r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()";
    "if c2 <= c3 goto return r15"->"return r15";
    "$r10 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>()"->"r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r10, r15, r4, r1, i0)";
    "r15 = specialinvoke r2.<dict.build.TernaryTree: java.util.List partialSearchNode(dict.build.TernaryNode,java.util.List,java.lang.String,java.lang.String,int)>($r10, r15, r4, r1, i0)"->"return r15";
}
