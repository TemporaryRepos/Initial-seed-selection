digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 10 ]
r3 := @this: dict.build.TernaryTree;
r2 := @parameter0: dict.build.TernaryNode;
r12 := @parameter1: java.lang.String;
i0 := @parameter2: int;
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
r1 = $r0;
if r2 == null goto $r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r4 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i1 = i0 + 1;
$r5 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r4, \" <-\", $i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
$c2 = virtualinvoke r2.<dict.build.TernaryNode: char getSplitChar()>();
r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);
$r8 = new java.lang.StringBuffer;
specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
r9 = $r8;
$r10 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
if $r10 == null goto $r11 = new java.util.StringTokenizer;
"
    "Block 2:
[preds: 1 ] [succs: 9 ]
$r22 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"--\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
$i4 = i0 + 1;
$r28 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r22, $r27, $i4);
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);
goto [?= virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9)];
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$r11 = new java.util.StringTokenizer;
specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r12, \"--\");
i5 = virtualinvoke $r11.<java.util.StringTokenizer: int countTokens()>();
if i5 <= 0 goto i6 = 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i5 + -1;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i6 = 1;
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i7 = i0 - i5;
$i8 = $i7 - 1;
if i6 >= $i8 goto $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"   \");
i6 = i6 + 1;
goto [?= $i7 = i0 - i5];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);
$r15 = <dict.build.TernaryTree: java.lang.String LINE_SEPARATOR>;
virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
"
    "Block 9:
[preds: 2 8 ] [succs: 10 ]
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9);
$r18 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i3 = i0 + 1;
$r19 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r18, \" >-\", $i3);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);
"
    "Block 10:
[preds: 0 9 ] [succs: ]
$r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
return $r30;
"
    "Block 0:
[preds: ] [succs: 1 10 ]
r3 := @this: dict.build.TernaryTree;
r2 := @parameter0: dict.build.TernaryNode;
r12 := @parameter1: java.lang.String;
i0 := @parameter2: int;
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
r1 = $r0;
if r2 == null goto $r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$r4 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i1 = i0 + 1;
$r5 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r4, \" <-\", $i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
$c2 = virtualinvoke r2.<dict.build.TernaryNode: char getSplitChar()>();
r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);
$r8 = new java.lang.StringBuffer;
specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
r9 = $r8;
$r10 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
if $r10 == null goto $r11 = new java.util.StringTokenizer;
";
    "Block 0:
[preds: ] [succs: 1 10 ]
r3 := @this: dict.build.TernaryTree;
r2 := @parameter0: dict.build.TernaryNode;
r12 := @parameter1: java.lang.String;
i0 := @parameter2: int;
$r0 = new java.lang.StringBuffer;
specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
r1 = $r0;
if r2 == null goto $r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
"->"Block 10:
[preds: 0 9 ] [succs: ]
$r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
return $r30;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r4 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i1 = i0 + 1;
$r5 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r4, \" <-\", $i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
$c2 = virtualinvoke r2.<dict.build.TernaryNode: char getSplitChar()>();
r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);
$r8 = new java.lang.StringBuffer;
specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
r9 = $r8;
$r10 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
if $r10 == null goto $r11 = new java.util.StringTokenizer;
"->"Block 2:
[preds: 1 ] [succs: 9 ]
$r22 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"--\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
$i4 = i0 + 1;
$r28 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r22, $r27, $i4);
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);
goto [?= virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9)];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$r4 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i1 = i0 + 1;
$r5 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r4, \" <-\", $i1);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
$c2 = virtualinvoke r2.<dict.build.TernaryNode: char getSplitChar()>();
r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);
$r8 = new java.lang.StringBuffer;
specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
r9 = $r8;
$r10 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
if $r10 == null goto $r11 = new java.util.StringTokenizer;
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
$r11 = new java.util.StringTokenizer;
specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r12, \"--\");
i5 = virtualinvoke $r11.<java.util.StringTokenizer: int countTokens()>();
if i5 <= 0 goto i6 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 9 ]
$r22 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$r23 = new java.lang.StringBuilder;
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"--\");
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
$i4 = i0 + 1;
$r28 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r22, $r27, $i4);
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);
goto [?= virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9)];
"->"Block 9:
[preds: 2 8 ] [succs: 10 ]
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9);
$r18 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i3 = i0 + 1;
$r19 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r18, \" >-\", $i3);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$r11 = new java.util.StringTokenizer;
specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r12, \"--\");
i5 = virtualinvoke $r11.<java.util.StringTokenizer: int countTokens()>();
if i5 <= 0 goto i6 = 1;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i5 + -1;
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
$r11 = new java.util.StringTokenizer;
specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r12, \"--\");
i5 = virtualinvoke $r11.<java.util.StringTokenizer: int countTokens()>();
if i5 <= 0 goto i6 = 1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i6 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i5 = i5 + -1;
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i6 = 1;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i6 = 1;
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i7 = i0 - i5;
$i8 = $i7 - 1;
if i6 >= $i8 goto $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i7 = i0 - i5;
$i8 = $i7 - 1;
if i6 >= $i8 goto $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
"->"Block 7:
[preds: 6 ] [succs: 6 ]
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"   \");
i6 = i6 + 1;
goto [?= $i7 = i0 - i5];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i7 = i0 - i5;
$i8 = $i7 - 1;
if i6 >= $i8 goto $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);
$r15 = <dict.build.TernaryTree: java.lang.String LINE_SEPARATOR>;
virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"   \");
i6 = i6 + 1;
goto [?= $i7 = i0 - i5];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i7 = i0 - i5;
$i8 = $i7 - 1;
if i6 >= $i8 goto $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);
$r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);
$r15 = <dict.build.TernaryTree: java.lang.String LINE_SEPARATOR>;
virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
"->"Block 9:
[preds: 2 8 ] [succs: 10 ]
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9);
$r18 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i3 = i0 + 1;
$r19 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r18, \" >-\", $i3);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);
";
    "Block 9:
[preds: 2 8 ] [succs: 10 ]
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r9);
$r18 = virtualinvoke r2.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i3 = i0 + 1;
$r19 = specialinvoke r3.<dict.build.TernaryTree: java.lang.String printNode(dict.build.TernaryNode,java.lang.String,int)>($r18, \" >-\", $i3);
virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);
"->"Block 10:
[preds: 0 9 ] [succs: ]
$r30 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
return $r30;
";
}
