digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: dict.build.TernaryTree;
r9 := @parameter0: dict.build.TernaryNode;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
i4 := @parameter3: int;
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
if i0 >= $i1 goto return r9;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
if r9 != null goto c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = new dict.build.TernaryNode;
specialinvoke $r8.<dict.build.TernaryNode: void <init>(char)>(c2);
r9 = $r8;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 10 ]
$r6 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$r7 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r6, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setLokid(dict.build.TernaryNode)>($r7);
goto [?= return r9];
"
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
if c2 != c3 goto $r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i5 = virtualinvoke r0.<java.lang.String: int length()>();
$i6 = $i5 - 1;
if i0 != $i6 goto $r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
virtualinvoke r9.<dict.build.TernaryNode: void setEndOfWord(int)>(i4);
"
    "Block 8:
[preds: 6 7 ] [succs: 10 ]
$r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i7 = i0 + 1;
$r5 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r4, r0, $i7, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setEqkid(dict.build.TernaryNode)>($r5);
goto [?= return r9];
"
    "Block 9:
[preds: 5 ] [succs: 10 ]
$r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$r3 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r2, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setHikid(dict.build.TernaryNode)>($r3);
"
    "Block 10:
[preds: 0 4 8 9 ] [succs: ]
return r9;
"
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: dict.build.TernaryTree;
r9 := @parameter0: dict.build.TernaryNode;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
i4 := @parameter3: int;
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
if i0 >= $i1 goto return r9;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
if r9 != null goto c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
";
    "Block 0:
[preds: ] [succs: 1 10 ]
r1 := @this: dict.build.TernaryTree;
r9 := @parameter0: dict.build.TernaryNode;
r0 := @parameter1: java.lang.String;
i0 := @parameter2: int;
i4 := @parameter3: int;
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
if i0 >= $i1 goto return r9;
"->"Block 10:
[preds: 0 4 8 9 ] [succs: ]
return r9;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
if r9 != null goto c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = new dict.build.TernaryNode;
specialinvoke $r8.<dict.build.TernaryNode: void <init>(char)>(c2);
r9 = $r8;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
if r9 != null goto c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r8 = new dict.build.TernaryNode;
specialinvoke $r8.<dict.build.TernaryNode: void <init>(char)>(c2);
r9 = $r8;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 10 ]
$r6 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$r7 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r6, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setLokid(dict.build.TernaryNode)>($r7);
goto [?= return r9];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
c3 = virtualinvoke r9.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"->"Block 5:
[preds: 3 ] [succs: 6 9 ]
if c2 != c3 goto $r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
";
    "Block 4:
[preds: 3 ] [succs: 10 ]
$r6 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$r7 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r6, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setLokid(dict.build.TernaryNode)>($r7);
goto [?= return r9];
"->"Block 10:
[preds: 0 4 8 9 ] [succs: ]
return r9;
";
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
if c2 != c3 goto $r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$i5 = virtualinvoke r0.<java.lang.String: int length()>();
$i6 = $i5 - 1;
if i0 != $i6 goto $r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 5:
[preds: 3 ] [succs: 6 9 ]
if c2 != c3 goto $r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
"->"Block 9:
[preds: 5 ] [succs: 10 ]
$r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$r3 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r2, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setHikid(dict.build.TernaryNode)>($r3);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i5 = virtualinvoke r0.<java.lang.String: int length()>();
$i6 = $i5 - 1;
if i0 != $i6 goto $r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 7:
[preds: 6 ] [succs: 8 ]
virtualinvoke r9.<dict.build.TernaryNode: void setEndOfWord(int)>(i4);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$i5 = virtualinvoke r0.<java.lang.String: int length()>();
$i6 = $i5 - 1;
if i0 != $i6 goto $r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 8:
[preds: 6 7 ] [succs: 10 ]
$r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i7 = i0 + 1;
$r5 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r4, r0, $i7, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setEqkid(dict.build.TernaryNode)>($r5);
goto [?= return r9];
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
virtualinvoke r9.<dict.build.TernaryNode: void setEndOfWord(int)>(i4);
"->"Block 8:
[preds: 6 7 ] [succs: 10 ]
$r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i7 = i0 + 1;
$r5 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r4, r0, $i7, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setEqkid(dict.build.TernaryNode)>($r5);
goto [?= return r9];
";
    "Block 8:
[preds: 6 7 ] [succs: 10 ]
$r4 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i7 = i0 + 1;
$r5 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r4, r0, $i7, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setEqkid(dict.build.TernaryNode)>($r5);
goto [?= return r9];
"->"Block 10:
[preds: 0 4 8 9 ] [succs: ]
return r9;
";
    "Block 9:
[preds: 5 ] [succs: 10 ]
$r2 = virtualinvoke r9.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$r3 = specialinvoke r1.<dict.build.TernaryTree: dict.build.TernaryNode insertNode(dict.build.TernaryNode,java.lang.String,int,int)>($r2, r0, i0, i4);
virtualinvoke r9.<dict.build.TernaryNode: void setHikid(dict.build.TernaryNode)>($r3);
"->"Block 10:
[preds: 0 4 8 9 ] [succs: ]
return r9;
";
}
