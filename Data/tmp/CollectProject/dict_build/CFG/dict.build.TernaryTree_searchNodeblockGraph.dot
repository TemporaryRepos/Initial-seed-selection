digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 10 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
r1 := @parameter1: java.lang.String;
i0 := @parameter2: int;
if r0 == null goto return -1;
"
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if i0 >= $i1 goto return -1;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: ]
$r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i10 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r5, r1, i0);
return $i10;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
if c2 <= c3 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>();
"
    "Block 5:
[preds: 4 ] [succs: ]
$r4 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i9 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r4, r1, i0);
return $i9;
"
    "Block 6:
[preds: 4 ] [succs: 7 9 ]
$i4 = virtualinvoke r1.<java.lang.String: int length()>();
$i5 = $i4 - 1;
if i0 != $i5 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto return -1;
"
    "Block 8:
[preds: 7 ] [succs: ]
$i8 = virtualinvoke r0.<dict.build.TernaryNode: int getValue()>();
return $i8;
"
    "Block 9:
[preds: 6 ] [succs: ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i6 = i0 + 1;
$i7 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r3, r1, $i6);
return $i7;
"
    "Block 10:
[preds: 0 1 7 ] [succs: ]
return -1;
"
    "Block 0:
[preds: ] [succs: 1 10 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
r1 := @parameter1: java.lang.String;
i0 := @parameter2: int;
if r0 == null goto return -1;
"->"Block 1:
[preds: 0 ] [succs: 2 10 ]
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if i0 >= $i1 goto return -1;
";
    "Block 0:
[preds: ] [succs: 1 10 ]
r2 := @this: dict.build.TernaryTree;
r0 := @parameter0: dict.build.TernaryNode;
r1 := @parameter1: java.lang.String;
i0 := @parameter2: int;
if r0 == null goto return -1;
"->"Block 10:
[preds: 0 1 7 ] [succs: ]
return -1;
";
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if i0 >= $i1 goto return -1;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 10 ]
$i1 = virtualinvoke r1.<java.lang.String: int length()>();
if i0 >= $i1 goto return -1;
"->"Block 10:
[preds: 0 1 7 ] [succs: ]
return -1;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: ]
$r5 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getLokid()>();
$i10 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r5, r1, i0);
return $i10;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
c3 = virtualinvoke r0.<dict.build.TernaryNode: char getSplitChar()>();
if c2 >= c3 goto (branch);
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
if c2 <= c3 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>();
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
if c2 <= c3 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>();
"->"Block 5:
[preds: 4 ] [succs: ]
$r4 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getHikid()>();
$i9 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r4, r1, i0);
return $i9;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
if c2 <= c3 goto $i4 = virtualinvoke r1.<java.lang.String: int length()>();
"->"Block 6:
[preds: 4 ] [succs: 7 9 ]
$i4 = virtualinvoke r1.<java.lang.String: int length()>();
$i5 = $i4 - 1;
if i0 != $i5 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
";
    "Block 6:
[preds: 4 ] [succs: 7 9 ]
$i4 = virtualinvoke r1.<java.lang.String: int length()>();
$i5 = $i4 - 1;
if i0 != $i5 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 7:
[preds: 6 ] [succs: 8 10 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto return -1;
";
    "Block 6:
[preds: 4 ] [succs: 7 9 ]
$i4 = virtualinvoke r1.<java.lang.String: int length()>();
$i5 = $i4 - 1;
if i0 != $i5 goto $r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
"->"Block 9:
[preds: 6 ] [succs: ]
$r3 = virtualinvoke r0.<dict.build.TernaryNode: dict.build.TernaryNode getEqkid()>();
$i6 = i0 + 1;
$i7 = specialinvoke r2.<dict.build.TernaryTree: int searchNode(dict.build.TernaryNode,java.lang.String,int)>($r3, r1, $i6);
return $i7;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto return -1;
"->"Block 8:
[preds: 7 ] [succs: ]
$i8 = virtualinvoke r0.<dict.build.TernaryNode: int getValue()>();
return $i8;
";
    "Block 7:
[preds: 6 ] [succs: 8 10 ]
$z0 = virtualinvoke r0.<dict.build.TernaryNode: boolean isEndOfWord()>();
if $z0 == 0 goto return -1;
"->"Block 10:
[preds: 0 1 7 ] [succs: ]
return -1;
";
}
