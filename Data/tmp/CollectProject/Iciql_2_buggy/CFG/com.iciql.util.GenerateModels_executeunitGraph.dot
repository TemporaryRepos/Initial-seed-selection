digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String"
    "r2 := @parameter1: java.lang.String"
    "r0 := @parameter2: java.lang.String"
    "r5 := @parameter3: java.lang.String"
    "r6 := @parameter4: java.lang.String"
    "r7 := @parameter5: java.lang.String"
    "r9 := @parameter6: java.lang.String"
    "z0 := @parameter7: boolean"
    "z1 := @parameter8: boolean"
    "if r0 != null goto r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"
    "$r39 = (java.lang.String) null"
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r39)"
    "goto [?= $r3 = new com.iciql.DbInspector]"
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"
    "$r3 = new com.iciql.DbInspector"
    "specialinvoke $r3.<com.iciql.DbInspector: void <init>(com.iciql.Db)>(r42)"
    "r4 = $r3"
    "r8 = virtualinvoke r4.<com.iciql.DbInspector: java.util.List generateModel(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r5, r6, r7, z0, z1)"
    "$z2 = staticinvoke <com.iciql.util.StringUtils: boolean isNullOrEmpty(java.lang.String)>(r9)"
    "if $z2 == 0 goto $r10 = new java.io.File"
    "$r37 = new java.io.File"
    "$r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"user.dir\")"
    "specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>($r38)"
    "r43 = $r37"
    "goto [?= virtualinvoke r43.<java.io.File: boolean mkdirs()>()]"
    "$r10 = new java.io.File"
    "specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r9)"
    "r43 = $r10"
    "virtualinvoke r43.<java.io.File: boolean mkdirs()>()"
    "r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"class ([a-zA-Z0-9]+)\")"
    "r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()"
    "$z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"
    "if $z5 == 0 goto (branch)"
    "$r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"
    "r14 = (java.lang.String) $r13"
    "r15 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r14)"
    "$z4 = virtualinvoke r15.<java.util.regex.Matcher: boolean find()>()"
    "if $z4 == 0 goto (branch)"
    "$r16 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group()>()"
    "$r17 = \"class\""
    "$i0 = virtualinvoke $r17.<java.lang.String: int length()>()"
    "$r18 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int)>($i0)"
    "r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()"
    "$r20 = new java.io.File"
    "$r21 = new java.lang.StringBuilder"
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>(r43, $r24)"
    "r25 = $r20"
    "$r26 = new java.io.FileWriter"
    "specialinvoke $r26.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r25, 0)"
    "r27 = $r26"
    "$r28 = new java.io.PrintWriter"
    "$r29 = new java.io.BufferedWriter"
    "specialinvoke $r29.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r27)"
    "specialinvoke $r28.<java.io.PrintWriter: void <init>(java.io.Writer)>($r29)"
    "r30 = $r28"
    "virtualinvoke r30.<java.io.PrintWriter: void write(java.lang.String)>(r14)"
    "virtualinvoke r30.<java.io.PrintWriter: void close()>()"
    "$r32 = <java.lang.System: java.io.PrintStream out>"
    "$r31 = new java.lang.StringBuilder"
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"
    "$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Generated \")"
    "$r34 = virtualinvoke r25.<java.io.File: java.lang.String getAbsolutePath()>()"
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36)"
    "goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= return]"
    "$r40 := @caughtexception"
    "r44 = $r40"
    "$r41 = new java.sql.SQLException"
    "specialinvoke $r41.<java.sql.SQLException: void <init>(java.lang.String,java.lang.Throwable)>(\"could not generate model\", r44)"
    "throw $r41"
    "return"
    "r1 := @parameter0: java.lang.String"->"r2 := @parameter1: java.lang.String";
    "r2 := @parameter1: java.lang.String"->"r0 := @parameter2: java.lang.String";
    "r0 := @parameter2: java.lang.String"->"r5 := @parameter3: java.lang.String";
    "r5 := @parameter3: java.lang.String"->"r6 := @parameter4: java.lang.String";
    "r6 := @parameter4: java.lang.String"->"r7 := @parameter5: java.lang.String";
    "r7 := @parameter5: java.lang.String"->"r9 := @parameter6: java.lang.String";
    "r9 := @parameter6: java.lang.String"->"z0 := @parameter7: boolean";
    "z0 := @parameter7: boolean"->"z1 := @parameter8: boolean";
    "z1 := @parameter8: boolean"->"if r0 != null goto r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)";
    "z1 := @parameter8: boolean"->"$r40 := @caughtexception";
    "if r0 != null goto r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"->"$r39 = (java.lang.String) null";
    "if r0 != null goto r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"->"r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)";
    "if r0 != null goto r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"->"$r40 := @caughtexception";
    "$r39 = (java.lang.String) null"->"r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r39)";
    "$r39 = (java.lang.String) null"->"$r40 := @caughtexception";
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r39)"->"goto [?= $r3 = new com.iciql.DbInspector]";
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r39)"->"$r40 := @caughtexception";
    "goto [?= $r3 = new com.iciql.DbInspector]"->"$r3 = new com.iciql.DbInspector";
    "goto [?= $r3 = new com.iciql.DbInspector]"->"$r40 := @caughtexception";
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"->"$r3 = new com.iciql.DbInspector";
    "r42 = staticinvoke <com.iciql.Db: com.iciql.Db open(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r0)"->"$r40 := @caughtexception";
    "$r3 = new com.iciql.DbInspector"->"specialinvoke $r3.<com.iciql.DbInspector: void <init>(com.iciql.Db)>(r42)";
    "$r3 = new com.iciql.DbInspector"->"$r40 := @caughtexception";
    "specialinvoke $r3.<com.iciql.DbInspector: void <init>(com.iciql.Db)>(r42)"->"r4 = $r3";
    "specialinvoke $r3.<com.iciql.DbInspector: void <init>(com.iciql.Db)>(r42)"->"$r40 := @caughtexception";
    "r4 = $r3"->"r8 = virtualinvoke r4.<com.iciql.DbInspector: java.util.List generateModel(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r5, r6, r7, z0, z1)";
    "r4 = $r3"->"$r40 := @caughtexception";
    "r8 = virtualinvoke r4.<com.iciql.DbInspector: java.util.List generateModel(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r5, r6, r7, z0, z1)"->"$z2 = staticinvoke <com.iciql.util.StringUtils: boolean isNullOrEmpty(java.lang.String)>(r9)";
    "r8 = virtualinvoke r4.<com.iciql.DbInspector: java.util.List generateModel(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r5, r6, r7, z0, z1)"->"$r40 := @caughtexception";
    "$z2 = staticinvoke <com.iciql.util.StringUtils: boolean isNullOrEmpty(java.lang.String)>(r9)"->"if $z2 == 0 goto $r10 = new java.io.File";
    "$z2 = staticinvoke <com.iciql.util.StringUtils: boolean isNullOrEmpty(java.lang.String)>(r9)"->"$r40 := @caughtexception";
    "if $z2 == 0 goto $r10 = new java.io.File"->"$r37 = new java.io.File";
    "if $z2 == 0 goto $r10 = new java.io.File"->"$r10 = new java.io.File";
    "if $z2 == 0 goto $r10 = new java.io.File"->"$r40 := @caughtexception";
    "$r37 = new java.io.File"->"$r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"user.dir\")";
    "$r37 = new java.io.File"->"$r40 := @caughtexception";
    "$r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"user.dir\")"->"specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>($r38)";
    "$r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"user.dir\")"->"$r40 := @caughtexception";
    "specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>($r38)"->"r43 = $r37";
    "specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>($r38)"->"$r40 := @caughtexception";
    "r43 = $r37"->"goto [?= virtualinvoke r43.<java.io.File: boolean mkdirs()>()]";
    "r43 = $r37"->"$r40 := @caughtexception";
    "goto [?= virtualinvoke r43.<java.io.File: boolean mkdirs()>()]"->"virtualinvoke r43.<java.io.File: boolean mkdirs()>()";
    "goto [?= virtualinvoke r43.<java.io.File: boolean mkdirs()>()]"->"$r40 := @caughtexception";
    "$r10 = new java.io.File"->"specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r9)";
    "$r10 = new java.io.File"->"$r40 := @caughtexception";
    "specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r9)"->"r43 = $r10";
    "specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r9)"->"$r40 := @caughtexception";
    "r43 = $r10"->"virtualinvoke r43.<java.io.File: boolean mkdirs()>()";
    "r43 = $r10"->"$r40 := @caughtexception";
    "virtualinvoke r43.<java.io.File: boolean mkdirs()>()"->"r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"class ([a-zA-Z0-9]+)\")";
    "virtualinvoke r43.<java.io.File: boolean mkdirs()>()"->"$r40 := @caughtexception";
    "r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"class ([a-zA-Z0-9]+)\")"->"r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()";
    "r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"class ([a-zA-Z0-9]+)\")"->"$r40 := @caughtexception";
    "r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()"->"$z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
    "r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()"->"$r40 := @caughtexception";
    "$z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"->"if $z5 == 0 goto (branch)";
    "$z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()"->"$r40 := @caughtexception";
    "if $z5 == 0 goto (branch)"->"$r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()";
    "if $z5 == 0 goto (branch)"->"goto [?= return]";
    "if $z5 == 0 goto (branch)"->"$r40 := @caughtexception";
    "$r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"->"r14 = (java.lang.String) $r13";
    "$r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()"->"$r40 := @caughtexception";
    "r14 = (java.lang.String) $r13"->"r15 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r14)";
    "r14 = (java.lang.String) $r13"->"$r40 := @caughtexception";
    "r15 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r14)"->"$z4 = virtualinvoke r15.<java.util.regex.Matcher: boolean find()>()";
    "r15 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r14)"->"$r40 := @caughtexception";
    "$z4 = virtualinvoke r15.<java.util.regex.Matcher: boolean find()>()"->"if $z4 == 0 goto (branch)";
    "$z4 = virtualinvoke r15.<java.util.regex.Matcher: boolean find()>()"->"$r40 := @caughtexception";
    "if $z4 == 0 goto (branch)"->"$r16 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group()>()";
    "if $z4 == 0 goto (branch)"->"goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]";
    "if $z4 == 0 goto (branch)"->"$r40 := @caughtexception";
    "$r16 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group()>()"->"$r17 = \"class\"";
    "$r16 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group()>()"->"$r40 := @caughtexception";
    "$r17 = \"class\""->"$i0 = virtualinvoke $r17.<java.lang.String: int length()>()";
    "$r17 = \"class\""->"$r40 := @caughtexception";
    "$i0 = virtualinvoke $r17.<java.lang.String: int length()>()"->"$r18 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int)>($i0)";
    "$i0 = virtualinvoke $r17.<java.lang.String: int length()>()"->"$r40 := @caughtexception";
    "$r18 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int)>($i0)"->"r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()";
    "$r18 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int)>($i0)"->"$r40 := @caughtexception";
    "r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()"->"$r20 = new java.io.File";
    "r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()"->"$r40 := @caughtexception";
    "$r20 = new java.io.File"->"$r21 = new java.lang.StringBuilder";
    "$r20 = new java.io.File"->"$r40 := @caughtexception";
    "$r21 = new java.lang.StringBuilder"->"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()";
    "$r21 = new java.lang.StringBuilder"->"$r40 := @caughtexception";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r40 := @caughtexception";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)"->"$r40 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")"->"$r40 := @caughtexception";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>(r43, $r24)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r40 := @caughtexception";
    "specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>(r43, $r24)"->"r25 = $r20";
    "specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>(r43, $r24)"->"$r40 := @caughtexception";
    "r25 = $r20"->"$r26 = new java.io.FileWriter";
    "r25 = $r20"->"$r40 := @caughtexception";
    "$r26 = new java.io.FileWriter"->"specialinvoke $r26.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r25, 0)";
    "$r26 = new java.io.FileWriter"->"$r40 := @caughtexception";
    "specialinvoke $r26.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r25, 0)"->"r27 = $r26";
    "specialinvoke $r26.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r25, 0)"->"$r40 := @caughtexception";
    "r27 = $r26"->"$r28 = new java.io.PrintWriter";
    "r27 = $r26"->"$r40 := @caughtexception";
    "$r28 = new java.io.PrintWriter"->"$r29 = new java.io.BufferedWriter";
    "$r28 = new java.io.PrintWriter"->"$r40 := @caughtexception";
    "$r29 = new java.io.BufferedWriter"->"specialinvoke $r29.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r27)";
    "$r29 = new java.io.BufferedWriter"->"$r40 := @caughtexception";
    "specialinvoke $r29.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r27)"->"specialinvoke $r28.<java.io.PrintWriter: void <init>(java.io.Writer)>($r29)";
    "specialinvoke $r29.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r27)"->"$r40 := @caughtexception";
    "specialinvoke $r28.<java.io.PrintWriter: void <init>(java.io.Writer)>($r29)"->"r30 = $r28";
    "specialinvoke $r28.<java.io.PrintWriter: void <init>(java.io.Writer)>($r29)"->"$r40 := @caughtexception";
    "r30 = $r28"->"virtualinvoke r30.<java.io.PrintWriter: void write(java.lang.String)>(r14)";
    "r30 = $r28"->"$r40 := @caughtexception";
    "virtualinvoke r30.<java.io.PrintWriter: void write(java.lang.String)>(r14)"->"virtualinvoke r30.<java.io.PrintWriter: void close()>()";
    "virtualinvoke r30.<java.io.PrintWriter: void write(java.lang.String)>(r14)"->"$r40 := @caughtexception";
    "virtualinvoke r30.<java.io.PrintWriter: void close()>()"->"$r32 = <java.lang.System: java.io.PrintStream out>";
    "virtualinvoke r30.<java.io.PrintWriter: void close()>()"->"$r40 := @caughtexception";
    "$r32 = <java.lang.System: java.io.PrintStream out>"->"$r31 = new java.lang.StringBuilder";
    "$r32 = <java.lang.System: java.io.PrintStream out>"->"$r40 := @caughtexception";
    "$r31 = new java.lang.StringBuilder"->"specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()";
    "$r31 = new java.lang.StringBuilder"->"$r40 := @caughtexception";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Generated \")";
    "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()"->"$r40 := @caughtexception";
    "$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Generated \")"->"$r34 = virtualinvoke r25.<java.io.File: java.lang.String getAbsolutePath()>()";
    "$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Generated \")"->"$r40 := @caughtexception";
    "$r34 = virtualinvoke r25.<java.io.File: java.lang.String getAbsolutePath()>()"->"$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)";
    "$r34 = virtualinvoke r25.<java.io.File: java.lang.String getAbsolutePath()>()"->"$r40 := @caughtexception";
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)"->"$r40 := @caughtexception";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36)";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r40 := @caughtexception";
    "virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36)"->"goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]";
    "virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36)"->"$r40 := @caughtexception";
    "goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"->"$z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]"->"$r40 := @caughtexception";
    "goto [?= return]"->"return";
    "$r40 := @caughtexception"->"r44 = $r40";
    "r44 = $r40"->"$r41 = new java.sql.SQLException";
    "$r41 = new java.sql.SQLException"->"specialinvoke $r41.<java.sql.SQLException: void <init>(java.lang.String,java.lang.Throwable)>(\"could not generate model\", r44)";
    "specialinvoke $r41.<java.sql.SQLException: void <init>(java.lang.String,java.lang.Throwable)>(\"could not generate model\", r44)"->"throw $r41";
}
