digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.iciql.util.GenerateModels;
r0 := @parameter0: java.lang.String[];
r11 = null;
r12 = \"sa\";
r13 = \"\";
r14 = null;
r15 = null;
r16 = \"\";
r17 = null;
z9 = 1;
z10 = 0;
i1 = 0;
"
    "Block 1:
[preds: 0 30 ] [succs: 2 31 ]
if r0 == null goto (branch);
"
    "Block 2:
[preds: 1 ] [succs: 3 31 ]
$i0 = lengthof r0;
if i1 >= $i0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r2 = r0[i1];
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-url\");
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
"
    "Block 4:
[preds: 3 ] [succs: 30 ]
i1 = i1 + 1;
r11 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
"
    "Block 6:
[preds: 5 ] [succs: 30 ]
i1 = i1 + 1;
r12 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
if $z2 == 0 goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
"
    "Block 8:
[preds: 7 ] [succs: 30 ]
i1 = i1 + 1;
r13 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
if $z3 == 0 goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
"
    "Block 10:
[preds: 9 ] [succs: 30 ]
i1 = i1 + 1;
r14 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
$z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
if $z4 == 0 goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
"
    "Block 12:
[preds: 11 ] [succs: 30 ]
i1 = i1 + 1;
r15 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
if $z5 == 0 goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
"
    "Block 14:
[preds: 13 ] [succs: 30 ]
i1 = i1 + 1;
r16 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 15:
[preds: 13 ] [succs: 16 17 ]
$z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
if $z6 == 0 goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
"
    "Block 16:
[preds: 15 ] [succs: 30 ]
i1 = i1 + 1;
r17 = r0[i1];
goto [?= i1 = i1 + 1];
"
    "Block 17:
[preds: 15 ] [succs: 18 23 22 ]
$z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
if $z7 == 0 goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
"
    "Block 18:
[preds: 17 ] [succs: 19 22 ]
i1 = i1 + 1;
"
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
$r6 = r0[i1];
"
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);
"
    "Block 21:
[preds: 20 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
"
    "Block 22:
[preds: 17 18 19 20 ] [succs: ]
$r9 := @caughtexception;
r18 = $r9;
$r10 = new java.sql.SQLException;
specialinvoke $r10.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -annotateSchema value\");
throw $r10;
"
    "Block 23:
[preds: 17 ] [succs: 24 29 28 ]
$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
if $z8 == 0 goto virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"
    "Block 24:
[preds: 23 ] [succs: 25 28 ]
i1 = i1 + 1;
"
    "Block 25:
[preds: 24 ] [succs: 26 28 ]
$r5 = r0[i1];
"
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);
"
    "Block 27:
[preds: 26 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
"
    "Block 28:
[preds: 23 24 25 26 ] [succs: ]
$r7 := @caughtexception;
r19 = $r7;
$r8 = new java.sql.SQLException;
specialinvoke $r8.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -trimStrings value\");
throw $r8;
"
    "Block 29:
[preds: 23 ] [succs: 30 ]
virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"
    "Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 31:
[preds: 1 2 ] [succs: 32 33 ]
if r11 != null goto staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
"
    "Block 32:
[preds: 31 ] [succs: ]
$r1 = new java.sql.SQLException;
specialinvoke $r1.<java.sql.SQLException: void <init>(java.lang.String)>(\"URL not set\");
throw $r1;
"
    "Block 33:
[preds: 31 ] [succs: ]
staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: com.iciql.util.GenerateModels;
r0 := @parameter0: java.lang.String[];
r11 = null;
r12 = \"sa\";
r13 = \"\";
r14 = null;
r15 = null;
r16 = \"\";
r17 = null;
z9 = 1;
z10 = 0;
i1 = 0;
"->"Block 1:
[preds: 0 30 ] [succs: 2 31 ]
if r0 == null goto (branch);
";
    "Block 1:
[preds: 0 30 ] [succs: 2 31 ]
if r0 == null goto (branch);
"->"Block 2:
[preds: 1 ] [succs: 3 31 ]
$i0 = lengthof r0;
if i1 >= $i0 goto (branch);
";
    "Block 1:
[preds: 0 30 ] [succs: 2 31 ]
if r0 == null goto (branch);
"->"Block 31:
[preds: 1 2 ] [succs: 32 33 ]
if r11 != null goto staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
";
    "Block 2:
[preds: 1 ] [succs: 3 31 ]
$i0 = lengthof r0;
if i1 >= $i0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
r2 = r0[i1];
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-url\");
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
";
    "Block 2:
[preds: 1 ] [succs: 3 31 ]
$i0 = lengthof r0;
if i1 >= $i0 goto (branch);
"->"Block 31:
[preds: 1 2 ] [succs: 32 33 ]
if r11 != null goto staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r2 = r0[i1];
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-url\");
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
"->"Block 4:
[preds: 3 ] [succs: 30 ]
i1 = i1 + 1;
r11 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
r2 = r0[i1];
$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-url\");
if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
";
    "Block 4:
[preds: 3 ] [succs: 30 ]
i1 = i1 + 1;
r11 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
"->"Block 6:
[preds: 5 ] [succs: 30 ]
i1 = i1 + 1;
r12 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-user\");
if $z1 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
"->"Block 7:
[preds: 5 ] [succs: 8 9 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
if $z2 == 0 goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
";
    "Block 6:
[preds: 5 ] [succs: 30 ]
i1 = i1 + 1;
r12 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
if $z2 == 0 goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
"->"Block 8:
[preds: 7 ] [succs: 30 ]
i1 = i1 + 1;
r13 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-password\");
if $z2 == 0 goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
"->"Block 9:
[preds: 7 ] [succs: 10 11 ]
$z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
if $z3 == 0 goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
";
    "Block 8:
[preds: 7 ] [succs: 30 ]
i1 = i1 + 1;
r13 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
if $z3 == 0 goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
"->"Block 10:
[preds: 9 ] [succs: 30 ]
i1 = i1 + 1;
r14 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-schema\");
if $z3 == 0 goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
"->"Block 11:
[preds: 9 ] [succs: 12 13 ]
$z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
if $z4 == 0 goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
";
    "Block 10:
[preds: 9 ] [succs: 30 ]
i1 = i1 + 1;
r14 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
$z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
if $z4 == 0 goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
"->"Block 12:
[preds: 11 ] [succs: 30 ]
i1 = i1 + 1;
r15 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
$z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-table\");
if $z4 == 0 goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
"->"Block 13:
[preds: 11 ] [succs: 14 15 ]
$z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
if $z5 == 0 goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
";
    "Block 12:
[preds: 11 ] [succs: 30 ]
i1 = i1 + 1;
r15 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
if $z5 == 0 goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
"->"Block 14:
[preds: 13 ] [succs: 30 ]
i1 = i1 + 1;
r16 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
$z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-package\");
if $z5 == 0 goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
"->"Block 15:
[preds: 13 ] [succs: 16 17 ]
$z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
if $z6 == 0 goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
";
    "Block 14:
[preds: 13 ] [succs: 30 ]
i1 = i1 + 1;
r16 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 15:
[preds: 13 ] [succs: 16 17 ]
$z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
if $z6 == 0 goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
"->"Block 16:
[preds: 15 ] [succs: 30 ]
i1 = i1 + 1;
r17 = r0[i1];
goto [?= i1 = i1 + 1];
";
    "Block 15:
[preds: 13 ] [succs: 16 17 ]
$z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-folder\");
if $z6 == 0 goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
"->"Block 17:
[preds: 15 ] [succs: 18 23 22 ]
$z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
if $z7 == 0 goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
";
    "Block 16:
[preds: 15 ] [succs: 30 ]
i1 = i1 + 1;
r17 = r0[i1];
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 17:
[preds: 15 ] [succs: 18 23 22 ]
$z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
if $z7 == 0 goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
"->"Block 18:
[preds: 17 ] [succs: 19 22 ]
i1 = i1 + 1;
";
    "Block 17:
[preds: 15 ] [succs: 18 23 22 ]
$z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
if $z7 == 0 goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
"->"Block 23:
[preds: 17 ] [succs: 24 29 28 ]
$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
if $z8 == 0 goto virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
";
    "Block 17:
[preds: 15 ] [succs: 18 23 22 ]
$z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-annotateSchema\");
if $z7 == 0 goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
"->"Block 22:
[preds: 17 18 19 20 ] [succs: ]
$r9 := @caughtexception;
r18 = $r9;
$r10 = new java.sql.SQLException;
specialinvoke $r10.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -annotateSchema value\");
throw $r10;
";
    "Block 18:
[preds: 17 ] [succs: 19 22 ]
i1 = i1 + 1;
"->"Block 19:
[preds: 18 ] [succs: 20 22 ]
$r6 = r0[i1];
";
    "Block 18:
[preds: 17 ] [succs: 19 22 ]
i1 = i1 + 1;
"->"Block 22:
[preds: 17 18 19 20 ] [succs: ]
$r9 := @caughtexception;
r18 = $r9;
$r10 = new java.sql.SQLException;
specialinvoke $r10.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -annotateSchema value\");
throw $r10;
";
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
$r6 = r0[i1];
"->"Block 20:
[preds: 19 ] [succs: 21 22 ]
z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);
";
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
$r6 = r0[i1];
"->"Block 22:
[preds: 17 18 19 20 ] [succs: ]
$r9 := @caughtexception;
r18 = $r9;
$r10 = new java.sql.SQLException;
specialinvoke $r10.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -annotateSchema value\");
throw $r10;
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);
"->"Block 21:
[preds: 20 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6);
"->"Block 22:
[preds: 17 18 19 20 ] [succs: ]
$r9 := @caughtexception;
r18 = $r9;
$r10 = new java.sql.SQLException;
specialinvoke $r10.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -annotateSchema value\");
throw $r10;
";
    "Block 21:
[preds: 20 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 23:
[preds: 17 ] [succs: 24 29 28 ]
$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
if $z8 == 0 goto virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"->"Block 24:
[preds: 23 ] [succs: 25 28 ]
i1 = i1 + 1;
";
    "Block 23:
[preds: 17 ] [succs: 24 29 28 ]
$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
if $z8 == 0 goto virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"->"Block 29:
[preds: 23 ] [succs: 30 ]
virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
";
    "Block 23:
[preds: 17 ] [succs: 24 29 28 ]
$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"-trimStrings\");
if $z8 == 0 goto virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"->"Block 28:
[preds: 23 24 25 26 ] [succs: ]
$r7 := @caughtexception;
r19 = $r7;
$r8 = new java.sql.SQLException;
specialinvoke $r8.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -trimStrings value\");
throw $r8;
";
    "Block 24:
[preds: 23 ] [succs: 25 28 ]
i1 = i1 + 1;
"->"Block 25:
[preds: 24 ] [succs: 26 28 ]
$r5 = r0[i1];
";
    "Block 24:
[preds: 23 ] [succs: 25 28 ]
i1 = i1 + 1;
"->"Block 28:
[preds: 23 24 25 26 ] [succs: ]
$r7 := @caughtexception;
r19 = $r7;
$r8 = new java.sql.SQLException;
specialinvoke $r8.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -trimStrings value\");
throw $r8;
";
    "Block 25:
[preds: 24 ] [succs: 26 28 ]
$r5 = r0[i1];
"->"Block 26:
[preds: 25 ] [succs: 27 28 ]
z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);
";
    "Block 25:
[preds: 24 ] [succs: 26 28 ]
$r5 = r0[i1];
"->"Block 28:
[preds: 23 24 25 26 ] [succs: ]
$r7 := @caughtexception;
r19 = $r7;
$r8 = new java.sql.SQLException;
specialinvoke $r8.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -trimStrings value\");
throw $r8;
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);
"->"Block 27:
[preds: 26 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
";
    "Block 26:
[preds: 25 ] [succs: 27 28 ]
z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);
"->"Block 28:
[preds: 23 24 25 26 ] [succs: ]
$r7 := @caughtexception;
r19 = $r7;
$r8 = new java.sql.SQLException;
specialinvoke $r8.<java.sql.SQLException: void <init>(java.lang.String)>(\"Can not parse -trimStrings value\");
throw $r8;
";
    "Block 27:
[preds: 26 ] [succs: 30 ]
goto [?= i1 = i1 + 1];
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 29:
[preds: 23 ] [succs: 30 ]
virtualinvoke r3.<com.iciql.util.GenerateModels: java.sql.SQLException throwUnsupportedOption(java.lang.String)>(r2);
"->"Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 30:
[preds: 4 6 8 10 12 14 16 21 27 29 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 30 ] [succs: 2 31 ]
if r0 == null goto (branch);
";
    "Block 31:
[preds: 1 2 ] [succs: 32 33 ]
if r11 != null goto staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
"->"Block 32:
[preds: 31 ] [succs: ]
$r1 = new java.sql.SQLException;
specialinvoke $r1.<java.sql.SQLException: void <init>(java.lang.String)>(\"URL not set\");
throw $r1;
";
    "Block 31:
[preds: 1 2 ] [succs: 32 33 ]
if r11 != null goto staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
"->"Block 33:
[preds: 31 ] [succs: ]
staticinvoke <com.iciql.util.GenerateModels: void execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r11, r12, r13, r14, r15, r16, r17, z9, z10);
return;
";
}
