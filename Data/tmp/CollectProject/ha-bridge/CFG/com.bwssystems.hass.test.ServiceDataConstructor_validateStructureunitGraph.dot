digraph "unitGraph" {
    "r41 := @this: com.bwssystems.hass.test.ServiceDataConstructor"
    "$r0 = new com.google.gson.GsonBuilder"
    "specialinvoke $r0.<com.google.gson.GsonBuilder: void <init>()>()"
    "$r1 = new com.bwssystems.HABridge.plugins.hass.ServiceDeserializer"
    "specialinvoke $r1.<com.bwssystems.HABridge.plugins.hass.ServiceDeserializer: void <init>()>()"
    "$r2 = virtualinvoke $r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Service;\", $r1)"
    "$r3 = new com.bwssystems.HABridge.plugins.hass.FieldDeserializer"
    "specialinvoke $r3.<com.bwssystems.HABridge.plugins.hass.FieldDeserializer: void <init>()>()"
    "$r4 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Field;\", $r3)"
    "r5 = virtualinvoke $r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()"
    "$r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(\"[{\\\"domain\\\": \\\"homeassistant\\\", \\\"services\\\": {\\\"reload_core_config\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"restart\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"stop\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"toggle\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_off\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_on\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"lock\\\", \\\"services\\\": {\\\"lock\\\": {\\\"description\\\": \\\"Lock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to lock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to lock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}, \\\"unlock\\\": {\\\"description\\\": \\\"Unlock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to unlock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to unlock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}}}, {\\\"domain\\\": \\\"light\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a light\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a light off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a light on\\\", \\\"fields\\\": {\\\"brightness\\\": {\\\"description\\\": \\\"Number between 0..255 indicating brightness\\\", \\\"example\\\": 120}, \\\"color_name\\\": {\\\"description\\\": \\\"A human readable color name\\\", \\\"example\\\": \\\"red\\\"}, \\\"color_temp\\\": {\\\"description\\\": \\\"Color temperature for the light in mireds (154-500)\\\", \\\"example\\\": \\\"250\\\"}, \\\"effect\\\": {\\\"description\\\": \\\"Light effect\\\", \\\"values\\\": [\\\"colorloop\\\", \\\"random\\\"]}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"profile\\\": {\\\"description\\\": \\\"Name of a light profile to use\\\", \\\"example\\\": \\\"relax\\\"}, \\\"rgb_color\\\": {\\\"description\\\": \\\"Color for the light in RGB-format\\\", \\\"example\\\": \\\"[255, 100, 100]\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}, \\\"white_value\\\": {\\\"description\\\": \\\"Number between 0..255 indicating level of white\\\", \\\"example\\\": \\\"250\\\"}, \\\"xy_color\\\": {\\\"description\\\": \\\"Color for the light in XY-format\\\", \\\"example\\\": \\\"[0.52, 0.43]\\\"}}}}}, {\\\"domain\\\": \\\"switch\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a switch state\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a switch off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a switch on\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}}}, {\\\"domain\\\": \\\"conversation\\\", \\\"services\\\": {\\\"process\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"climate\\\", \\\"services\\\": {\\\"set_aux_heat\\\": {\\\"description\\\": \\\"Turn auxillary heater on/off for climate device\\\", \\\"fields\\\": {\\\"aux_heat\\\": {\\\"description\\\": \\\"New value of axillary heater\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_away_mode\\\": {\\\"description\\\": \\\"Turn away mode on/off for climate device\\\", \\\"fields\\\": {\\\"away_mode\\\": {\\\"description\\\": \\\"New value of away mode\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_fan_mode\\\": {\\\"description\\\": \\\"Set fan operation for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.nest\\\"}, \\\"fan\\\": {\\\"description\\\": \\\"New value of fan mode\\\", \\\"example\\\": \\\"On Low\\\"}}}, \\\"set_humidity\\\": {\\\"description\\\": \\\"Set target humidity of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"humidity\\\": {\\\"description\\\": \\\"New target humidity for climate device\\\", \\\"example\\\": 60}}}, \\\"set_operation_mode\\\": {\\\"description\\\": \\\"Set operation mode for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climet.nest\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"New value of operation mode\\\", \\\"example\\\": \\\"Heat\\\"}}}, \\\"set_swing_mode\\\": {\\\"description\\\": \\\"Set swing operation for climate device\\\", \\\"fields\\\": {\\\"description\\\": \\\"New value of swing mode\\\", \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\".nest\\\"}, \\\"example\\\": 1, \\\"swing_mode\\\": null}}, \\\"set_temperature\\\": {\\\"description\\\": \\\"Set target temperature of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\\\", \\\"example\\\": \\\"Heat\\\"}, \\\"target_temp_high\\\": {\\\"description\\\": \\\"New target high tempereature for hvac\\\", \\\"example\\\": 26}, \\\"target_temp_low\\\": {\\\"description\\\": \\\"New target low temperature for hvac\\\", \\\"example\\\": 20}, \\\"temperature\\\": {\\\"description\\\": \\\"New target temperature for hvac\\\", \\\"example\\\": 25}}}}}, {\\\"domain\\\": \\\"cover\\\", \\\"services\\\": {\\\"close_cover\\\": {\\\"description\\\": \\\"Close all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"close_cover_tilt\\\": {\\\"description\\\": \\\"Close all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close tilt\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover\\\": {\\\"description\\\": \\\"Open all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover_tilt\\\": {\\\"description\\\": \\\"Open all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) tilt to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"set_cover_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"set_cover_tilt_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover tilt position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"stop_cover\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"stop_cover_tilt\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}}}, {\\\"domain\\\": \\\"persistent_notification\\\", \\\"services\\\": {\\\"create\\\": {\\\"description\\\": \\\"Show a notification in the frontend\\\", \\\"fields\\\": {\\\"message\\\": {\\\"description\\\": \\\"Message body of the notification. [Templates accepted]\\\", \\\"example\\\": \\\"Please check your configuration.yaml.\\\"}, \\\"notification_id\\\": {\\\"description\\\": \\\"Target ID of the notification, will replace a notification with the same Id. [Optional]\\\", \\\"example\\\": 1234}, \\\"title\\\": {\\\"description\\\": \\\"Optional title for your notification. [Optional, Templates accepted]\\\", \\\"example\\\": \\\"Test notification\\\"}}}}}, {\\\"domain\\\": \\\"logbook\\\", \\\"services\\\": {\\\"log\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}]\", class \"[Lcom/bwssystems/HABridge/plugins/hass/Service;\")"
    "r42 = (com.bwssystems.HABridge.plugins.hass.Service[]) $r6"
    "i1 = 0"
    "$i0 = lengthof r42"
    "if i1 >= $i0 goto (branch)"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = r42[i1]"
    "$r10 = virtualinvoke $r8.<com.bwssystems.HABridge.plugins.hass.Service: java.lang.String getDomain()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "$r11 = r42[i1]"
    "r12 = virtualinvoke $r11.<com.bwssystems.HABridge.plugins.hass.Service: java.util.Map getServices()>()"
    "$r13 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()"
    "r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto i1 = i1 + 1"
    "$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"
    "r16 = (java.util.Map$Entry) $r15"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"
    "$r20 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r21 = (java.lang.String) $r20"
    "$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23)"
    "$r24 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "$r25 = (com.bwssystems.HABridge.plugins.hass.ServiceElement) $r24"
    "r26 = virtualinvoke $r25.<com.bwssystems.HABridge.plugins.hass.ServiceElement: com.bwssystems.HABridge.plugins.hass.Field getFields()>()"
    "$r27 = virtualinvoke r26.<com.bwssystems.HABridge.plugins.hass.Field: java.util.Map getFields()>()"
    "$r28 = interfaceinvoke $r27.<java.util.Map: java.util.Set entrySet()>()"
    "r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto (branch)"
    "$r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"
    "r31 = (java.util.Map$Entry) $r30"
    "$r33 = <java.lang.System: java.io.PrintStream out>"
    "$r32 = new java.lang.StringBuilder"
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"        \")"
    "$r35 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r36 = (java.lang.String) $r35"
    "$r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38)"
    "goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"
    "i1 = i1 + 1"
    "goto [?= $i0 = lengthof r42]"
    "goto [?= $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)]"
    "$r39 := @caughtexception"
    "r43 = $r39"
    "$r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)"
    "return $r40"
    "$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)"
    "return $r7"
    "r41 := @this: com.bwssystems.hass.test.ServiceDataConstructor"->"$r0 = new com.google.gson.GsonBuilder";
    "r41 := @this: com.bwssystems.hass.test.ServiceDataConstructor"->"$r39 := @caughtexception";
    "$r0 = new com.google.gson.GsonBuilder"->"specialinvoke $r0.<com.google.gson.GsonBuilder: void <init>()>()";
    "$r0 = new com.google.gson.GsonBuilder"->"$r39 := @caughtexception";
    "specialinvoke $r0.<com.google.gson.GsonBuilder: void <init>()>()"->"$r1 = new com.bwssystems.HABridge.plugins.hass.ServiceDeserializer";
    "specialinvoke $r0.<com.google.gson.GsonBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "$r1 = new com.bwssystems.HABridge.plugins.hass.ServiceDeserializer"->"specialinvoke $r1.<com.bwssystems.HABridge.plugins.hass.ServiceDeserializer: void <init>()>()";
    "$r1 = new com.bwssystems.HABridge.plugins.hass.ServiceDeserializer"->"$r39 := @caughtexception";
    "specialinvoke $r1.<com.bwssystems.HABridge.plugins.hass.ServiceDeserializer: void <init>()>()"->"$r2 = virtualinvoke $r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Service;\", $r1)";
    "specialinvoke $r1.<com.bwssystems.HABridge.plugins.hass.ServiceDeserializer: void <init>()>()"->"$r39 := @caughtexception";
    "$r2 = virtualinvoke $r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Service;\", $r1)"->"$r3 = new com.bwssystems.HABridge.plugins.hass.FieldDeserializer";
    "$r2 = virtualinvoke $r0.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Service;\", $r1)"->"$r39 := @caughtexception";
    "$r3 = new com.bwssystems.HABridge.plugins.hass.FieldDeserializer"->"specialinvoke $r3.<com.bwssystems.HABridge.plugins.hass.FieldDeserializer: void <init>()>()";
    "$r3 = new com.bwssystems.HABridge.plugins.hass.FieldDeserializer"->"$r39 := @caughtexception";
    "specialinvoke $r3.<com.bwssystems.HABridge.plugins.hass.FieldDeserializer: void <init>()>()"->"$r4 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Field;\", $r3)";
    "specialinvoke $r3.<com.bwssystems.HABridge.plugins.hass.FieldDeserializer: void <init>()>()"->"$r39 := @caughtexception";
    "$r4 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Field;\", $r3)"->"r5 = virtualinvoke $r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()";
    "$r4 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>(class \"Lcom/bwssystems/HABridge/plugins/hass/Field;\", $r3)"->"$r39 := @caughtexception";
    "r5 = virtualinvoke $r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()"->"$r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(\"[{\\\"domain\\\": \\\"homeassistant\\\", \\\"services\\\": {\\\"reload_core_config\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"restart\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"stop\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"toggle\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_off\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_on\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"lock\\\", \\\"services\\\": {\\\"lock\\\": {\\\"description\\\": \\\"Lock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to lock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to lock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}, \\\"unlock\\\": {\\\"description\\\": \\\"Unlock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to unlock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to unlock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}}}, {\\\"domain\\\": \\\"light\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a light\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a light off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a light on\\\", \\\"fields\\\": {\\\"brightness\\\": {\\\"description\\\": \\\"Number between 0..255 indicating brightness\\\", \\\"example\\\": 120}, \\\"color_name\\\": {\\\"description\\\": \\\"A human readable color name\\\", \\\"example\\\": \\\"red\\\"}, \\\"color_temp\\\": {\\\"description\\\": \\\"Color temperature for the light in mireds (154-500)\\\", \\\"example\\\": \\\"250\\\"}, \\\"effect\\\": {\\\"description\\\": \\\"Light effect\\\", \\\"values\\\": [\\\"colorloop\\\", \\\"random\\\"]}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"profile\\\": {\\\"description\\\": \\\"Name of a light profile to use\\\", \\\"example\\\": \\\"relax\\\"}, \\\"rgb_color\\\": {\\\"description\\\": \\\"Color for the light in RGB-format\\\", \\\"example\\\": \\\"[255, 100, 100]\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}, \\\"white_value\\\": {\\\"description\\\": \\\"Number between 0..255 indicating level of white\\\", \\\"example\\\": \\\"250\\\"}, \\\"xy_color\\\": {\\\"description\\\": \\\"Color for the light in XY-format\\\", \\\"example\\\": \\\"[0.52, 0.43]\\\"}}}}}, {\\\"domain\\\": \\\"switch\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a switch state\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a switch off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a switch on\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}}}, {\\\"domain\\\": \\\"conversation\\\", \\\"services\\\": {\\\"process\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"climate\\\", \\\"services\\\": {\\\"set_aux_heat\\\": {\\\"description\\\": \\\"Turn auxillary heater on/off for climate device\\\", \\\"fields\\\": {\\\"aux_heat\\\": {\\\"description\\\": \\\"New value of axillary heater\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_away_mode\\\": {\\\"description\\\": \\\"Turn away mode on/off for climate device\\\", \\\"fields\\\": {\\\"away_mode\\\": {\\\"description\\\": \\\"New value of away mode\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_fan_mode\\\": {\\\"description\\\": \\\"Set fan operation for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.nest\\\"}, \\\"fan\\\": {\\\"description\\\": \\\"New value of fan mode\\\", \\\"example\\\": \\\"On Low\\\"}}}, \\\"set_humidity\\\": {\\\"description\\\": \\\"Set target humidity of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"humidity\\\": {\\\"description\\\": \\\"New target humidity for climate device\\\", \\\"example\\\": 60}}}, \\\"set_operation_mode\\\": {\\\"description\\\": \\\"Set operation mode for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climet.nest\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"New value of operation mode\\\", \\\"example\\\": \\\"Heat\\\"}}}, \\\"set_swing_mode\\\": {\\\"description\\\": \\\"Set swing operation for climate device\\\", \\\"fields\\\": {\\\"description\\\": \\\"New value of swing mode\\\", \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\".nest\\\"}, \\\"example\\\": 1, \\\"swing_mode\\\": null}}, \\\"set_temperature\\\": {\\\"description\\\": \\\"Set target temperature of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\\\", \\\"example\\\": \\\"Heat\\\"}, \\\"target_temp_high\\\": {\\\"description\\\": \\\"New target high tempereature for hvac\\\", \\\"example\\\": 26}, \\\"target_temp_low\\\": {\\\"description\\\": \\\"New target low temperature for hvac\\\", \\\"example\\\": 20}, \\\"temperature\\\": {\\\"description\\\": \\\"New target temperature for hvac\\\", \\\"example\\\": 25}}}}}, {\\\"domain\\\": \\\"cover\\\", \\\"services\\\": {\\\"close_cover\\\": {\\\"description\\\": \\\"Close all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"close_cover_tilt\\\": {\\\"description\\\": \\\"Close all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close tilt\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover\\\": {\\\"description\\\": \\\"Open all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover_tilt\\\": {\\\"description\\\": \\\"Open all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) tilt to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"set_cover_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"set_cover_tilt_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover tilt position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"stop_cover\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"stop_cover_tilt\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}}}, {\\\"domain\\\": \\\"persistent_notification\\\", \\\"services\\\": {\\\"create\\\": {\\\"description\\\": \\\"Show a notification in the frontend\\\", \\\"fields\\\": {\\\"message\\\": {\\\"description\\\": \\\"Message body of the notification. [Templates accepted]\\\", \\\"example\\\": \\\"Please check your configuration.yaml.\\\"}, \\\"notification_id\\\": {\\\"description\\\": \\\"Target ID of the notification, will replace a notification with the same Id. [Optional]\\\", \\\"example\\\": 1234}, \\\"title\\\": {\\\"description\\\": \\\"Optional title for your notification. [Optional, Templates accepted]\\\", \\\"example\\\": \\\"Test notification\\\"}}}}}, {\\\"domain\\\": \\\"logbook\\\", \\\"services\\\": {\\\"log\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}]\", class \"[Lcom/bwssystems/HABridge/plugins/hass/Service;\")";
    "r5 = virtualinvoke $r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()"->"$r39 := @caughtexception";
    "$r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(\"[{\\\"domain\\\": \\\"homeassistant\\\", \\\"services\\\": {\\\"reload_core_config\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"restart\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"stop\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"toggle\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_off\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_on\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"lock\\\", \\\"services\\\": {\\\"lock\\\": {\\\"description\\\": \\\"Lock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to lock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to lock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}, \\\"unlock\\\": {\\\"description\\\": \\\"Unlock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to unlock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to unlock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}}}, {\\\"domain\\\": \\\"light\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a light\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a light off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a light on\\\", \\\"fields\\\": {\\\"brightness\\\": {\\\"description\\\": \\\"Number between 0..255 indicating brightness\\\", \\\"example\\\": 120}, \\\"color_name\\\": {\\\"description\\\": \\\"A human readable color name\\\", \\\"example\\\": \\\"red\\\"}, \\\"color_temp\\\": {\\\"description\\\": \\\"Color temperature for the light in mireds (154-500)\\\", \\\"example\\\": \\\"250\\\"}, \\\"effect\\\": {\\\"description\\\": \\\"Light effect\\\", \\\"values\\\": [\\\"colorloop\\\", \\\"random\\\"]}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"profile\\\": {\\\"description\\\": \\\"Name of a light profile to use\\\", \\\"example\\\": \\\"relax\\\"}, \\\"rgb_color\\\": {\\\"description\\\": \\\"Color for the light in RGB-format\\\", \\\"example\\\": \\\"[255, 100, 100]\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}, \\\"white_value\\\": {\\\"description\\\": \\\"Number between 0..255 indicating level of white\\\", \\\"example\\\": \\\"250\\\"}, \\\"xy_color\\\": {\\\"description\\\": \\\"Color for the light in XY-format\\\", \\\"example\\\": \\\"[0.52, 0.43]\\\"}}}}}, {\\\"domain\\\": \\\"switch\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a switch state\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a switch off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a switch on\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}}}, {\\\"domain\\\": \\\"conversation\\\", \\\"services\\\": {\\\"process\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"climate\\\", \\\"services\\\": {\\\"set_aux_heat\\\": {\\\"description\\\": \\\"Turn auxillary heater on/off for climate device\\\", \\\"fields\\\": {\\\"aux_heat\\\": {\\\"description\\\": \\\"New value of axillary heater\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_away_mode\\\": {\\\"description\\\": \\\"Turn away mode on/off for climate device\\\", \\\"fields\\\": {\\\"away_mode\\\": {\\\"description\\\": \\\"New value of away mode\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_fan_mode\\\": {\\\"description\\\": \\\"Set fan operation for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.nest\\\"}, \\\"fan\\\": {\\\"description\\\": \\\"New value of fan mode\\\", \\\"example\\\": \\\"On Low\\\"}}}, \\\"set_humidity\\\": {\\\"description\\\": \\\"Set target humidity of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"humidity\\\": {\\\"description\\\": \\\"New target humidity for climate device\\\", \\\"example\\\": 60}}}, \\\"set_operation_mode\\\": {\\\"description\\\": \\\"Set operation mode for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climet.nest\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"New value of operation mode\\\", \\\"example\\\": \\\"Heat\\\"}}}, \\\"set_swing_mode\\\": {\\\"description\\\": \\\"Set swing operation for climate device\\\", \\\"fields\\\": {\\\"description\\\": \\\"New value of swing mode\\\", \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\".nest\\\"}, \\\"example\\\": 1, \\\"swing_mode\\\": null}}, \\\"set_temperature\\\": {\\\"description\\\": \\\"Set target temperature of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\\\", \\\"example\\\": \\\"Heat\\\"}, \\\"target_temp_high\\\": {\\\"description\\\": \\\"New target high tempereature for hvac\\\", \\\"example\\\": 26}, \\\"target_temp_low\\\": {\\\"description\\\": \\\"New target low temperature for hvac\\\", \\\"example\\\": 20}, \\\"temperature\\\": {\\\"description\\\": \\\"New target temperature for hvac\\\", \\\"example\\\": 25}}}}}, {\\\"domain\\\": \\\"cover\\\", \\\"services\\\": {\\\"close_cover\\\": {\\\"description\\\": \\\"Close all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"close_cover_tilt\\\": {\\\"description\\\": \\\"Close all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close tilt\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover\\\": {\\\"description\\\": \\\"Open all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover_tilt\\\": {\\\"description\\\": \\\"Open all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) tilt to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"set_cover_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"set_cover_tilt_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover tilt position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"stop_cover\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"stop_cover_tilt\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}}}, {\\\"domain\\\": \\\"persistent_notification\\\", \\\"services\\\": {\\\"create\\\": {\\\"description\\\": \\\"Show a notification in the frontend\\\", \\\"fields\\\": {\\\"message\\\": {\\\"description\\\": \\\"Message body of the notification. [Templates accepted]\\\", \\\"example\\\": \\\"Please check your configuration.yaml.\\\"}, \\\"notification_id\\\": {\\\"description\\\": \\\"Target ID of the notification, will replace a notification with the same Id. [Optional]\\\", \\\"example\\\": 1234}, \\\"title\\\": {\\\"description\\\": \\\"Optional title for your notification. [Optional, Templates accepted]\\\", \\\"example\\\": \\\"Test notification\\\"}}}}}, {\\\"domain\\\": \\\"logbook\\\", \\\"services\\\": {\\\"log\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}]\", class \"[Lcom/bwssystems/HABridge/plugins/hass/Service;\")"->"r42 = (com.bwssystems.HABridge.plugins.hass.Service[]) $r6";
    "$r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(\"[{\\\"domain\\\": \\\"homeassistant\\\", \\\"services\\\": {\\\"reload_core_config\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"restart\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"stop\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"toggle\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_off\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}, \\\"turn_on\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"lock\\\", \\\"services\\\": {\\\"lock\\\": {\\\"description\\\": \\\"Lock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to lock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to lock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}, \\\"unlock\\\": {\\\"description\\\": \\\"Unlock all or specified locks\\\", \\\"fields\\\": {\\\"code\\\": {\\\"description\\\": \\\"An optional code to unlock the lock with\\\", \\\"example\\\": 1234}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name of lock to unlock\\\", \\\"example\\\": \\\"lock.front_door\\\"}}}}}, {\\\"domain\\\": \\\"light\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a light\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a light off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a light on\\\", \\\"fields\\\": {\\\"brightness\\\": {\\\"description\\\": \\\"Number between 0..255 indicating brightness\\\", \\\"example\\\": 120}, \\\"color_name\\\": {\\\"description\\\": \\\"A human readable color name\\\", \\\"example\\\": \\\"red\\\"}, \\\"color_temp\\\": {\\\"description\\\": \\\"Color temperature for the light in mireds (154-500)\\\", \\\"example\\\": \\\"250\\\"}, \\\"effect\\\": {\\\"description\\\": \\\"Light effect\\\", \\\"values\\\": [\\\"colorloop\\\", \\\"random\\\"]}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"light.kitchen\\\"}, \\\"flash\\\": {\\\"description\\\": \\\"If the light should flash\\\", \\\"values\\\": [\\\"short\\\", \\\"long\\\"]}, \\\"profile\\\": {\\\"description\\\": \\\"Name of a light profile to use\\\", \\\"example\\\": \\\"relax\\\"}, \\\"rgb_color\\\": {\\\"description\\\": \\\"Color for the light in RGB-format\\\", \\\"example\\\": \\\"[255, 100, 100]\\\"}, \\\"transition\\\": {\\\"description\\\": \\\"Duration in seconds it takes to get to next state\\\", \\\"example\\\": 60}, \\\"white_value\\\": {\\\"description\\\": \\\"Number between 0..255 indicating level of white\\\", \\\"example\\\": \\\"250\\\"}, \\\"xy_color\\\": {\\\"description\\\": \\\"Color for the light in XY-format\\\", \\\"example\\\": \\\"[0.52, 0.43]\\\"}}}}}, {\\\"domain\\\": \\\"switch\\\", \\\"services\\\": {\\\"toggle\\\": {\\\"description\\\": \\\"Toggles a switch state\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to toggle\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_off\\\": {\\\"description\\\": \\\"Turn a switch off\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn off\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}, \\\"turn_on\\\": {\\\"description\\\": \\\"Turn a switch on\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to turn on\\\", \\\"example\\\": \\\"switch.living_room\\\"}}}}}, {\\\"domain\\\": \\\"conversation\\\", \\\"services\\\": {\\\"process\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}, {\\\"domain\\\": \\\"climate\\\", \\\"services\\\": {\\\"set_aux_heat\\\": {\\\"description\\\": \\\"Turn auxillary heater on/off for climate device\\\", \\\"fields\\\": {\\\"aux_heat\\\": {\\\"description\\\": \\\"New value of axillary heater\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_away_mode\\\": {\\\"description\\\": \\\"Turn away mode on/off for climate device\\\", \\\"fields\\\": {\\\"away_mode\\\": {\\\"description\\\": \\\"New value of away mode\\\", \\\"example\\\": true}, \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}}}, \\\"set_fan_mode\\\": {\\\"description\\\": \\\"Set fan operation for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.nest\\\"}, \\\"fan\\\": {\\\"description\\\": \\\"New value of fan mode\\\", \\\"example\\\": \\\"On Low\\\"}}}, \\\"set_humidity\\\": {\\\"description\\\": \\\"Set target humidity of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"humidity\\\": {\\\"description\\\": \\\"New target humidity for climate device\\\", \\\"example\\\": 60}}}, \\\"set_operation_mode\\\": {\\\"description\\\": \\\"Set operation mode for climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climet.nest\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"New value of operation mode\\\", \\\"example\\\": \\\"Heat\\\"}}}, \\\"set_swing_mode\\\": {\\\"description\\\": \\\"Set swing operation for climate device\\\", \\\"fields\\\": {\\\"description\\\": \\\"New value of swing mode\\\", \\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\".nest\\\"}, \\\"example\\\": 1, \\\"swing_mode\\\": null}}, \\\"set_temperature\\\": {\\\"description\\\": \\\"Set target temperature of climate device\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of entities to change\\\", \\\"example\\\": \\\"climate.kitchen\\\"}, \\\"operation_mode\\\": {\\\"description\\\": \\\"Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.\\\", \\\"example\\\": \\\"Heat\\\"}, \\\"target_temp_high\\\": {\\\"description\\\": \\\"New target high tempereature for hvac\\\", \\\"example\\\": 26}, \\\"target_temp_low\\\": {\\\"description\\\": \\\"New target low temperature for hvac\\\", \\\"example\\\": 20}, \\\"temperature\\\": {\\\"description\\\": \\\"New target temperature for hvac\\\", \\\"example\\\": 25}}}}}, {\\\"domain\\\": \\\"cover\\\", \\\"services\\\": {\\\"close_cover\\\": {\\\"description\\\": \\\"Close all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"close_cover_tilt\\\": {\\\"description\\\": \\\"Close all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to close tilt\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover\\\": {\\\"description\\\": \\\"Open all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"open_cover_tilt\\\": {\\\"description\\\": \\\"Open all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) tilt to open\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"set_cover_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"set_cover_tilt_position\\\": {\\\"description\\\": \\\"Move to specific position all or specified cover tilt\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to set cover tilt position\\\", \\\"example\\\": \\\"cover.living_room\\\"}, \\\"position\\\": {\\\"description\\\": \\\"Position of the cover (0 to 100)\\\", \\\"example\\\": 30}}}, \\\"stop_cover\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}, \\\"stop_cover_tilt\\\": {\\\"description\\\": \\\"Stop all or specified cover\\\", \\\"fields\\\": {\\\"entity_id\\\": {\\\"description\\\": \\\"Name(s) of cover(s) to stop\\\", \\\"example\\\": \\\"cover.living_room\\\"}}}}}, {\\\"domain\\\": \\\"persistent_notification\\\", \\\"services\\\": {\\\"create\\\": {\\\"description\\\": \\\"Show a notification in the frontend\\\", \\\"fields\\\": {\\\"message\\\": {\\\"description\\\": \\\"Message body of the notification. [Templates accepted]\\\", \\\"example\\\": \\\"Please check your configuration.yaml.\\\"}, \\\"notification_id\\\": {\\\"description\\\": \\\"Target ID of the notification, will replace a notification with the same Id. [Optional]\\\", \\\"example\\\": 1234}, \\\"title\\\": {\\\"description\\\": \\\"Optional title for your notification. [Optional, Templates accepted]\\\", \\\"example\\\": \\\"Test notification\\\"}}}}}, {\\\"domain\\\": \\\"logbook\\\", \\\"services\\\": {\\\"log\\\": {\\\"description\\\": \\\"\\\", \\\"fields\\\": {}}}}]\", class \"[Lcom/bwssystems/HABridge/plugins/hass/Service;\")"->"$r39 := @caughtexception";
    "r42 = (com.bwssystems.HABridge.plugins.hass.Service[]) $r6"->"i1 = 0";
    "r42 = (com.bwssystems.HABridge.plugins.hass.Service[]) $r6"->"$r39 := @caughtexception";
    "i1 = 0"->"$i0 = lengthof r42";
    "i1 = 0"->"$r39 := @caughtexception";
    "$i0 = lengthof r42"->"if i1 >= $i0 goto (branch)";
    "$i0 = lengthof r42"->"$r39 := @caughtexception";
    "if i1 >= $i0 goto (branch)"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= $i0 goto (branch)"->"goto [?= $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)]";
    "if i1 >= $i0 goto (branch)"->"$r39 := @caughtexception";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r8 = r42[i1]";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r39 := @caughtexception";
    "$r8 = r42[i1]"->"$r10 = virtualinvoke $r8.<com.bwssystems.HABridge.plugins.hass.Service: java.lang.String getDomain()>()";
    "$r8 = r42[i1]"->"$r39 := @caughtexception";
    "$r10 = virtualinvoke $r8.<com.bwssystems.HABridge.plugins.hass.Service: java.lang.String getDomain()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "$r10 = virtualinvoke $r8.<com.bwssystems.HABridge.plugins.hass.Service: java.lang.String getDomain()>()"->"$r39 := @caughtexception";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"$r11 = r42[i1]";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"$r39 := @caughtexception";
    "$r11 = r42[i1]"->"r12 = virtualinvoke $r11.<com.bwssystems.HABridge.plugins.hass.Service: java.util.Map getServices()>()";
    "$r11 = r42[i1]"->"$r39 := @caughtexception";
    "r12 = virtualinvoke $r11.<com.bwssystems.HABridge.plugins.hass.Service: java.util.Map getServices()>()"->"$r13 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()";
    "r12 = virtualinvoke $r11.<com.bwssystems.HABridge.plugins.hass.Service: java.util.Map getServices()>()"->"$r39 := @caughtexception";
    "$r13 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()"->"r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()";
    "$r13 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()"->"$r39 := @caughtexception";
    "r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
    "r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()"->"$r39 := @caughtexception";
    "$z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto i1 = i1 + 1";
    "$z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"->"$r39 := @caughtexception";
    "if $z0 == 0 goto i1 = i1 + 1"->"$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "if $z0 == 0 goto i1 = i1 + 1"->"$r39 := @caughtexception";
    "$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"->"r16 = (java.util.Map$Entry) $r15";
    "$r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"->"$r39 := @caughtexception";
    "r16 = (java.util.Map$Entry) $r15"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "r16 = (java.util.Map$Entry) $r15"->"$r39 := @caughtexception";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"$r17 = new java.lang.StringBuilder";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"$r39 := @caughtexception";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "$r17 = new java.lang.StringBuilder"->"$r39 := @caughtexception";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"->"$r20 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")"->"$r39 := @caughtexception";
    "$r20 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r21 = (java.lang.String) $r20";
    "$r20 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r39 := @caughtexception";
    "$r21 = (java.lang.String) $r20"->"$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)";
    "$r21 = (java.lang.String) $r20"->"$r39 := @caughtexception";
    "$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)"->"$r39 := @caughtexception";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23)";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r39 := @caughtexception";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23)"->"$r24 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23)"->"$r39 := @caughtexception";
    "$r24 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r25 = (com.bwssystems.HABridge.plugins.hass.ServiceElement) $r24";
    "$r24 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r39 := @caughtexception";
    "$r25 = (com.bwssystems.HABridge.plugins.hass.ServiceElement) $r24"->"r26 = virtualinvoke $r25.<com.bwssystems.HABridge.plugins.hass.ServiceElement: com.bwssystems.HABridge.plugins.hass.Field getFields()>()";
    "$r25 = (com.bwssystems.HABridge.plugins.hass.ServiceElement) $r24"->"$r39 := @caughtexception";
    "r26 = virtualinvoke $r25.<com.bwssystems.HABridge.plugins.hass.ServiceElement: com.bwssystems.HABridge.plugins.hass.Field getFields()>()"->"$r27 = virtualinvoke r26.<com.bwssystems.HABridge.plugins.hass.Field: java.util.Map getFields()>()";
    "r26 = virtualinvoke $r25.<com.bwssystems.HABridge.plugins.hass.ServiceElement: com.bwssystems.HABridge.plugins.hass.Field getFields()>()"->"$r39 := @caughtexception";
    "$r27 = virtualinvoke r26.<com.bwssystems.HABridge.plugins.hass.Field: java.util.Map getFields()>()"->"$r28 = interfaceinvoke $r27.<java.util.Map: java.util.Set entrySet()>()";
    "$r27 = virtualinvoke r26.<com.bwssystems.HABridge.plugins.hass.Field: java.util.Map getFields()>()"->"$r39 := @caughtexception";
    "$r28 = interfaceinvoke $r27.<java.util.Map: java.util.Set entrySet()>()"->"r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()";
    "$r28 = interfaceinvoke $r27.<java.util.Map: java.util.Set entrySet()>()"->"$r39 := @caughtexception";
    "r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()"->"$r39 := @caughtexception";
    "$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto (branch)";
    "$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"$r39 := @caughtexception";
    "if $z1 == 0 goto (branch)"->"$r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]";
    "if $z1 == 0 goto (branch)"->"$r39 := @caughtexception";
    "$r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"->"r31 = (java.util.Map$Entry) $r30";
    "$r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"->"$r39 := @caughtexception";
    "r31 = (java.util.Map$Entry) $r30"->"$r33 = <java.lang.System: java.io.PrintStream out>";
    "r31 = (java.util.Map$Entry) $r30"->"$r39 := @caughtexception";
    "$r33 = <java.lang.System: java.io.PrintStream out>"->"$r32 = new java.lang.StringBuilder";
    "$r33 = <java.lang.System: java.io.PrintStream out>"->"$r39 := @caughtexception";
    "$r32 = new java.lang.StringBuilder"->"specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()";
    "$r32 = new java.lang.StringBuilder"->"$r39 := @caughtexception";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"        \")";
    "specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()"->"$r39 := @caughtexception";
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"        \")"->"$r35 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"        \")"->"$r39 := @caughtexception";
    "$r35 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r36 = (java.lang.String) $r35";
    "$r35 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r39 := @caughtexception";
    "$r36 = (java.lang.String) $r35"->"$r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)";
    "$r36 = (java.lang.String) $r35"->"$r39 := @caughtexception";
    "$r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)"->"$r39 := @caughtexception";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38)";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r39 := @caughtexception";
    "virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38)"->"goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]";
    "virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38)"->"$r39 := @caughtexception";
    "goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"->"$r39 := @caughtexception";
    "goto [?= $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"->"$r39 := @caughtexception";
    "i1 = i1 + 1"->"goto [?= $i0 = lengthof r42]";
    "i1 = i1 + 1"->"$r39 := @caughtexception";
    "goto [?= $i0 = lengthof r42]"->"$i0 = lengthof r42";
    "goto [?= $i0 = lengthof r42]"->"$r39 := @caughtexception";
    "goto [?= $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)]"->"$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)";
    "$r39 := @caughtexception"->"r43 = $r39";
    "r43 = $r39"->"$r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)";
    "$r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)"->"return $r40";
    "$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)"->"return $r7";
}
