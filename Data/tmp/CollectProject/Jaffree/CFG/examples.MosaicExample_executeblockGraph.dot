digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: examples.MosaicExample;
$r0 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
i2 = 0;
"
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$r5 = r4.<examples.MosaicExample: java.util.List inputs>;
$i0 = interfaceinvoke $r5.<java.util.List: int size()>();
if i2 >= $i0 goto r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r25 = r4.<examples.MosaicExample: java.util.List inputs>;
$r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i2);
r73 = (java.lang.String) $r26;
z2 = 0;
$r27 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r28 = staticinvoke <com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe atPath(java.nio.file.Path)>($r27);
$r29 = virtualinvoke $r28.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setShowStreams(boolean)>(1);
$r30 = newarray (java.lang.String)[0];
$r31 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r73, $r30);
$r32 = virtualinvoke $r29.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setInput(java.nio.file.Path)>($r31);
r33 = virtualinvoke $r32.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobeResult execute()>();
$r34 = virtualinvoke r33.<com.github.kokorin.jaffree.ffprobe.FFprobeResult: java.util.List getStreams()>();
r74 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r35 = new examples.MosaicExample$FrameIterator;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r70 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();
r75 = (com.github.kokorin.jaffree.ffprobe.Stream) $r70;
$r71 = <com.github.kokorin.jaffree.StreamType: com.github.kokorin.jaffree.StreamType AUDIO>;
$r72 = virtualinvoke r75.<com.github.kokorin.jaffree.ffprobe.Stream: com.github.kokorin.jaffree.StreamType getCodecType()>();
if $r71 != $r72 goto (branch);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
z2 = 1;
goto [?= $r35 = new examples.MosaicExample$FrameIterator];
"
    "Block 6:
[preds: 4 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
$r35 = new examples.MosaicExample$FrameIterator;
specialinvoke $r35.<examples.MosaicExample$FrameIterator: void <init>()>();
r76 = $r35;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r76);
$r36 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r37 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r36);
$r38 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(r73);
$r39 = virtualinvoke $r38.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setDuration(long)>(15000L);
$r40 = (com.github.kokorin.jaffree.ffmpeg.Input) $r39;
$r41 = virtualinvoke $r37.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r40);
$r42 = virtualinvoke r76.<examples.MosaicExample$FrameIterator: com.github.kokorin.jaffree.ffmpeg.FrameConsumer getConsumer()>();
$r43 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.FrameOutput withConsumer(com.github.kokorin.jaffree.ffmpeg.FrameConsumer)>($r42);
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r45 = virtualinvoke $r43.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFrameRate(java.lang.Number)>($r44);
$r46 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r45;
$r47 = virtualinvoke $r46.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ac\", \"1\");
$r48 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r47;
$r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(44100);
$r50 = virtualinvoke $r48.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ar\", $r49);
$r51 = (com.github.kokorin.jaffree.ffmpeg.Output) $r50;
$r52 = virtualinvoke $r41.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r51);
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"input\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
r77 = virtualinvoke $r52.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>($r56);
if z2 != 0 goto $r57 = new java.lang.Thread;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r65 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(\"anullsrc\");
$r66 = virtualinvoke $r65.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFormat(java.lang.String)>(\"lavfi\");
$r67 = (com.github.kokorin.jaffree.ffmpeg.Input) $r66;
$r68 = virtualinvoke r77.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r67);
virtualinvoke $r68.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addArgument(java.lang.String)>(\"-shortest\");
"
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
$r57 = new java.lang.Thread;
$r58 = new examples.MosaicExample$1;
specialinvoke $r58.<examples.MosaicExample$1: void <init>(examples.MosaicExample,com.github.kokorin.jaffree.ffmpeg.FFmpeg,java.util.List)>(r4, r77, r1);
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Reader-\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-main\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r58, $r63);
r64 = $r57;
virtualinvoke r64.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r64.<java.lang.Thread: void start()>();
i2 = i2 + 1;
goto [?= $r5 = r4.<examples.MosaicExample: java.util.List inputs>];
"
    "Block 10:
[preds: 1 ] [succs: ]
r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
$r6 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r7 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r6);
$r8 = <com.github.kokorin.jaffree.ffmpeg.ImageFormats: com.github.kokorin.jaffree.ffmpeg.ImageFormats BGR24>;
$r9 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameInput: com.github.kokorin.jaffree.ffmpeg.FrameInput withProducer(com.github.kokorin.jaffree.ffmpeg.FrameProducer,com.github.kokorin.jaffree.ffmpeg.ImageFormat,long)>(r78, $r8, 5000L);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r11 = virtualinvoke $r9.<com.github.kokorin.jaffree.ffmpeg.FrameInput: com.github.kokorin.jaffree.ffmpeg.FrameInput setFrameRate(java.lang.Number)>($r10);
$r12 = virtualinvoke $r7.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r11);
$r13 = virtualinvoke $r12.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setOverwriteOutput(boolean)>(1);
$r14 = <com.github.kokorin.jaffree.LogLevel: com.github.kokorin.jaffree.LogLevel TRACE>;
$r15 = virtualinvoke $r13.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setLogLevel(com.github.kokorin.jaffree.LogLevel)>($r14);
$r16 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlOutput: com.github.kokorin.jaffree.ffmpeg.UrlOutput toUrl(java.lang.String)>(\"mosaic.mp4\");
$r17 = virtualinvoke $r15.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r16);
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"amix=inputs=\");
$r20 = r4.<examples.MosaicExample: java.util.List inputs>;
$i1 = interfaceinvoke $r20.<java.util.List: int size()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
$r23 = virtualinvoke $r17.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addArguments(java.lang.String,java.lang.String)>(\"-filter_complex\", $r22);
$r24 = virtualinvoke $r23.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>(\"result\");
virtualinvoke $r24.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpegResult execute()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r4 := @this: examples.MosaicExample;
$r0 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
r1 = $r0;
$r2 = new java.util.ArrayList;
specialinvoke $r2.<java.util.ArrayList: void <init>()>();
r3 = $r2;
i2 = 0;
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$r5 = r4.<examples.MosaicExample: java.util.List inputs>;
$i0 = interfaceinvoke $r5.<java.util.List: int size()>();
if i2 >= $i0 goto r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$r5 = r4.<examples.MosaicExample: java.util.List inputs>;
$i0 = interfaceinvoke $r5.<java.util.List: int size()>();
if i2 >= $i0 goto r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r25 = r4.<examples.MosaicExample: java.util.List inputs>;
$r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i2);
r73 = (java.lang.String) $r26;
z2 = 0;
$r27 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r28 = staticinvoke <com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe atPath(java.nio.file.Path)>($r27);
$r29 = virtualinvoke $r28.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setShowStreams(boolean)>(1);
$r30 = newarray (java.lang.String)[0];
$r31 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r73, $r30);
$r32 = virtualinvoke $r29.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setInput(java.nio.file.Path)>($r31);
r33 = virtualinvoke $r32.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobeResult execute()>();
$r34 = virtualinvoke r33.<com.github.kokorin.jaffree.ffprobe.FFprobeResult: java.util.List getStreams()>();
r74 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$r5 = r4.<examples.MosaicExample: java.util.List inputs>;
$i0 = interfaceinvoke $r5.<java.util.List: int size()>();
if i2 >= $i0 goto r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
"->"Block 10:
[preds: 1 ] [succs: ]
r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
$r6 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r7 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r6);
$r8 = <com.github.kokorin.jaffree.ffmpeg.ImageFormats: com.github.kokorin.jaffree.ffmpeg.ImageFormats BGR24>;
$r9 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameInput: com.github.kokorin.jaffree.ffmpeg.FrameInput withProducer(com.github.kokorin.jaffree.ffmpeg.FrameProducer,com.github.kokorin.jaffree.ffmpeg.ImageFormat,long)>(r78, $r8, 5000L);
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r11 = virtualinvoke $r9.<com.github.kokorin.jaffree.ffmpeg.FrameInput: com.github.kokorin.jaffree.ffmpeg.FrameInput setFrameRate(java.lang.Number)>($r10);
$r12 = virtualinvoke $r7.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r11);
$r13 = virtualinvoke $r12.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setOverwriteOutput(boolean)>(1);
$r14 = <com.github.kokorin.jaffree.LogLevel: com.github.kokorin.jaffree.LogLevel TRACE>;
$r15 = virtualinvoke $r13.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setLogLevel(com.github.kokorin.jaffree.LogLevel)>($r14);
$r16 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlOutput: com.github.kokorin.jaffree.ffmpeg.UrlOutput toUrl(java.lang.String)>(\"mosaic.mp4\");
$r17 = virtualinvoke $r15.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r16);
$r18 = new java.lang.StringBuilder;
specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"amix=inputs=\");
$r20 = r4.<examples.MosaicExample: java.util.List inputs>;
$i1 = interfaceinvoke $r20.<java.util.List: int size()>();
$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
$r23 = virtualinvoke $r17.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addArguments(java.lang.String,java.lang.String)>(\"-filter_complex\", $r22);
$r24 = virtualinvoke $r23.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>(\"result\");
virtualinvoke $r24.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpegResult execute()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r25 = r4.<examples.MosaicExample: java.util.List inputs>;
$r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i2);
r73 = (java.lang.String) $r26;
z2 = 0;
$r27 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r28 = staticinvoke <com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe atPath(java.nio.file.Path)>($r27);
$r29 = virtualinvoke $r28.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setShowStreams(boolean)>(1);
$r30 = newarray (java.lang.String)[0];
$r31 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(r73, $r30);
$r32 = virtualinvoke $r29.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobe setInput(java.nio.file.Path)>($r31);
r33 = virtualinvoke $r32.<com.github.kokorin.jaffree.ffprobe.FFprobe: com.github.kokorin.jaffree.ffprobe.FFprobeResult execute()>();
$r34 = virtualinvoke r33.<com.github.kokorin.jaffree.ffprobe.FFprobeResult: java.util.List getStreams()>();
r74 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r35 = new examples.MosaicExample$FrameIterator;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r35 = new examples.MosaicExample$FrameIterator;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r70 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();
r75 = (com.github.kokorin.jaffree.ffprobe.Stream) $r70;
$r71 = <com.github.kokorin.jaffree.StreamType: com.github.kokorin.jaffree.StreamType AUDIO>;
$r72 = virtualinvoke r75.<com.github.kokorin.jaffree.ffprobe.Stream: com.github.kokorin.jaffree.StreamType getCodecType()>();
if $r71 != $r72 goto (branch);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r35 = new examples.MosaicExample$FrameIterator;
"->"Block 7:
[preds: 3 5 ] [succs: 8 9 ]
$r35 = new examples.MosaicExample$FrameIterator;
specialinvoke $r35.<examples.MosaicExample$FrameIterator: void <init>()>();
r76 = $r35;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r76);
$r36 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r37 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r36);
$r38 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(r73);
$r39 = virtualinvoke $r38.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setDuration(long)>(15000L);
$r40 = (com.github.kokorin.jaffree.ffmpeg.Input) $r39;
$r41 = virtualinvoke $r37.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r40);
$r42 = virtualinvoke r76.<examples.MosaicExample$FrameIterator: com.github.kokorin.jaffree.ffmpeg.FrameConsumer getConsumer()>();
$r43 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.FrameOutput withConsumer(com.github.kokorin.jaffree.ffmpeg.FrameConsumer)>($r42);
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r45 = virtualinvoke $r43.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFrameRate(java.lang.Number)>($r44);
$r46 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r45;
$r47 = virtualinvoke $r46.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ac\", \"1\");
$r48 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r47;
$r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(44100);
$r50 = virtualinvoke $r48.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ar\", $r49);
$r51 = (com.github.kokorin.jaffree.ffmpeg.Output) $r50;
$r52 = virtualinvoke $r41.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r51);
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"input\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
r77 = virtualinvoke $r52.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>($r56);
if z2 != 0 goto $r57 = new java.lang.Thread;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r70 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();
r75 = (com.github.kokorin.jaffree.ffprobe.Stream) $r70;
$r71 = <com.github.kokorin.jaffree.StreamType: com.github.kokorin.jaffree.StreamType AUDIO>;
$r72 = virtualinvoke r75.<com.github.kokorin.jaffree.ffprobe.Stream: com.github.kokorin.jaffree.StreamType getCodecType()>();
if $r71 != $r72 goto (branch);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
z2 = 1;
goto [?= $r35 = new examples.MosaicExample$FrameIterator];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r70 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();
r75 = (com.github.kokorin.jaffree.ffprobe.Stream) $r70;
$r71 = <com.github.kokorin.jaffree.StreamType: com.github.kokorin.jaffree.StreamType AUDIO>;
$r72 = virtualinvoke r75.<com.github.kokorin.jaffree.ffprobe.Stream: com.github.kokorin.jaffree.StreamType getCodecType()>();
if $r71 != $r72 goto (branch);
"->"Block 6:
[preds: 4 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
z2 = 1;
goto [?= $r35 = new examples.MosaicExample$FrameIterator];
"->"Block 7:
[preds: 3 5 ] [succs: 8 9 ]
$r35 = new examples.MosaicExample$FrameIterator;
specialinvoke $r35.<examples.MosaicExample$FrameIterator: void <init>()>();
r76 = $r35;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r76);
$r36 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r37 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r36);
$r38 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(r73);
$r39 = virtualinvoke $r38.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setDuration(long)>(15000L);
$r40 = (com.github.kokorin.jaffree.ffmpeg.Input) $r39;
$r41 = virtualinvoke $r37.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r40);
$r42 = virtualinvoke r76.<examples.MosaicExample$FrameIterator: com.github.kokorin.jaffree.ffmpeg.FrameConsumer getConsumer()>();
$r43 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.FrameOutput withConsumer(com.github.kokorin.jaffree.ffmpeg.FrameConsumer)>($r42);
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r45 = virtualinvoke $r43.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFrameRate(java.lang.Number)>($r44);
$r46 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r45;
$r47 = virtualinvoke $r46.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ac\", \"1\");
$r48 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r47;
$r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(44100);
$r50 = virtualinvoke $r48.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ar\", $r49);
$r51 = (com.github.kokorin.jaffree.ffmpeg.Output) $r50;
$r52 = virtualinvoke $r41.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r51);
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"input\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
r77 = virtualinvoke $r52.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>($r56);
if z2 != 0 goto $r57 = new java.lang.Thread;
";
    "Block 6:
[preds: 4 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>()];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
$z0 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r35 = new examples.MosaicExample$FrameIterator;
";
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
$r35 = new examples.MosaicExample$FrameIterator;
specialinvoke $r35.<examples.MosaicExample$FrameIterator: void <init>()>();
r76 = $r35;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r76);
$r36 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r37 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r36);
$r38 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(r73);
$r39 = virtualinvoke $r38.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setDuration(long)>(15000L);
$r40 = (com.github.kokorin.jaffree.ffmpeg.Input) $r39;
$r41 = virtualinvoke $r37.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r40);
$r42 = virtualinvoke r76.<examples.MosaicExample$FrameIterator: com.github.kokorin.jaffree.ffmpeg.FrameConsumer getConsumer()>();
$r43 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.FrameOutput withConsumer(com.github.kokorin.jaffree.ffmpeg.FrameConsumer)>($r42);
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r45 = virtualinvoke $r43.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFrameRate(java.lang.Number)>($r44);
$r46 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r45;
$r47 = virtualinvoke $r46.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ac\", \"1\");
$r48 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r47;
$r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(44100);
$r50 = virtualinvoke $r48.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ar\", $r49);
$r51 = (com.github.kokorin.jaffree.ffmpeg.Output) $r50;
$r52 = virtualinvoke $r41.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r51);
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"input\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
r77 = virtualinvoke $r52.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>($r56);
if z2 != 0 goto $r57 = new java.lang.Thread;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
$r65 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(\"anullsrc\");
$r66 = virtualinvoke $r65.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFormat(java.lang.String)>(\"lavfi\");
$r67 = (com.github.kokorin.jaffree.ffmpeg.Input) $r66;
$r68 = virtualinvoke r77.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r67);
virtualinvoke $r68.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addArgument(java.lang.String)>(\"-shortest\");
";
    "Block 7:
[preds: 3 5 ] [succs: 8 9 ]
$r35 = new examples.MosaicExample$FrameIterator;
specialinvoke $r35.<examples.MosaicExample$FrameIterator: void <init>()>();
r76 = $r35;
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r76);
$r36 = r4.<examples.MosaicExample: java.nio.file.Path ffmpegBin>;
$r37 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg atPath(java.nio.file.Path)>($r36);
$r38 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(r73);
$r39 = virtualinvoke $r38.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setDuration(long)>(15000L);
$r40 = (com.github.kokorin.jaffree.ffmpeg.Input) $r39;
$r41 = virtualinvoke $r37.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r40);
$r42 = virtualinvoke r76.<examples.MosaicExample$FrameIterator: com.github.kokorin.jaffree.ffmpeg.FrameConsumer getConsumer()>();
$r43 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.FrameOutput withConsumer(com.github.kokorin.jaffree.ffmpeg.FrameConsumer)>($r42);
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);
$r45 = virtualinvoke $r43.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFrameRate(java.lang.Number)>($r44);
$r46 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r45;
$r47 = virtualinvoke $r46.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ac\", \"1\");
$r48 = (com.github.kokorin.jaffree.ffmpeg.FrameOutput) $r47;
$r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(44100);
$r50 = virtualinvoke $r48.<com.github.kokorin.jaffree.ffmpeg.FrameOutput: com.github.kokorin.jaffree.ffmpeg.BaseInOut addArguments(java.lang.String,java.lang.String)>(\"-ar\", $r49);
$r51 = (com.github.kokorin.jaffree.ffmpeg.Output) $r50;
$r52 = virtualinvoke $r41.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addOutput(com.github.kokorin.jaffree.ffmpeg.Output)>($r51);
$r53 = new java.lang.StringBuilder;
specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"input\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
r77 = virtualinvoke $r52.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg setContextName(java.lang.String)>($r56);
if z2 != 0 goto $r57 = new java.lang.Thread;
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
$r57 = new java.lang.Thread;
$r58 = new examples.MosaicExample$1;
specialinvoke $r58.<examples.MosaicExample$1: void <init>(examples.MosaicExample,com.github.kokorin.jaffree.ffmpeg.FFmpeg,java.util.List)>(r4, r77, r1);
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Reader-\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-main\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r58, $r63);
r64 = $r57;
virtualinvoke r64.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r64.<java.lang.Thread: void start()>();
i2 = i2 + 1;
goto [?= $r5 = r4.<examples.MosaicExample: java.util.List inputs>];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
$r65 = staticinvoke <com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.UrlInput fromUrl(java.lang.String)>(\"anullsrc\");
$r66 = virtualinvoke $r65.<com.github.kokorin.jaffree.ffmpeg.UrlInput: com.github.kokorin.jaffree.ffmpeg.BaseInOut setFormat(java.lang.String)>(\"lavfi\");
$r67 = (com.github.kokorin.jaffree.ffmpeg.Input) $r66;
$r68 = virtualinvoke r77.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addInput(com.github.kokorin.jaffree.ffmpeg.Input)>($r67);
virtualinvoke $r68.<com.github.kokorin.jaffree.ffmpeg.FFmpeg: com.github.kokorin.jaffree.ffmpeg.FFmpeg addArgument(java.lang.String)>(\"-shortest\");
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
$r57 = new java.lang.Thread;
$r58 = new examples.MosaicExample$1;
specialinvoke $r58.<examples.MosaicExample$1: void <init>(examples.MosaicExample,com.github.kokorin.jaffree.ffmpeg.FFmpeg,java.util.List)>(r4, r77, r1);
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Reader-\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-main\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r58, $r63);
r64 = $r57;
virtualinvoke r64.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r64.<java.lang.Thread: void start()>();
i2 = i2 + 1;
goto [?= $r5 = r4.<examples.MosaicExample: java.util.List inputs>];
";
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
$r57 = new java.lang.Thread;
$r58 = new examples.MosaicExample$1;
specialinvoke $r58.<examples.MosaicExample$1: void <init>(examples.MosaicExample,com.github.kokorin.jaffree.ffmpeg.FFmpeg,java.util.List)>(r4, r77, r1);
$r59 = new java.lang.StringBuilder;
specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Reader-\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-main\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r57.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r58, $r63);
r64 = $r57;
virtualinvoke r64.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke r64.<java.lang.Thread: void start()>();
i2 = i2 + 1;
goto [?= $r5 = r4.<examples.MosaicExample: java.util.List inputs>];
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
$r5 = r4.<examples.MosaicExample: java.util.List inputs>;
$i0 = interfaceinvoke $r5.<java.util.List: int size()>();
if i2 >= $i0 goto r78 = specialinvoke r4.<examples.MosaicExample: com.github.kokorin.jaffree.ffmpeg.FrameProducer produceMosaic(java.util.List)>(r3);
";
}
