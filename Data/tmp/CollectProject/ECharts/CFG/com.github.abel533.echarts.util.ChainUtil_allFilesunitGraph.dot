digraph "unitGraph" {
    "r2 := @parameter0: java.io.File"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "$z0 = virtualinvoke r2.<java.io.File: boolean isFile()>()"
    "if $z0 == 0 goto $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2)"
    "goto [?= return r1]"
    "$z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()"
    "if $z1 == 0 goto return r1"
    "$r3 = new com.github.abel533.echarts.util.ChainUtil$1"
    "specialinvoke $r3.<com.github.abel533.echarts.util.ChainUtil$1: void <init>()>()"
    "r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r3)"
    "r5 = r4"
    "i0 = lengthof r5"
    "i1 = 0"
    "if i1 >= i0 goto return r1"
    "r6 = r5[i1]"
    "$r7 = staticinvoke <com.github.abel533.echarts.util.ChainUtil: java.util.List allFiles(java.io.File)>(r6)"
    "interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return r1"
    "r2 := @parameter0: java.io.File"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$z0 = virtualinvoke r2.<java.io.File: boolean isFile()>()";
    "$z0 = virtualinvoke r2.<java.io.File: boolean isFile()>()"->"if $z0 == 0 goto $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()";
    "if $z0 == 0 goto $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2)";
    "if $z0 == 0 goto $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()"->"$z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2)"->"goto [?= return r1]";
    "goto [?= return r1]"->"return r1";
    "$z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()"->"if $z1 == 0 goto return r1";
    "if $z1 == 0 goto return r1"->"$r3 = new com.github.abel533.echarts.util.ChainUtil$1";
    "if $z1 == 0 goto return r1"->"return r1";
    "$r3 = new com.github.abel533.echarts.util.ChainUtil$1"->"specialinvoke $r3.<com.github.abel533.echarts.util.ChainUtil$1: void <init>()>()";
    "specialinvoke $r3.<com.github.abel533.echarts.util.ChainUtil$1: void <init>()>()"->"r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r3)";
    "r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r3)"->"r5 = r4";
    "r5 = r4"->"i0 = lengthof r5";
    "i0 = lengthof r5"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return r1";
    "if i1 >= i0 goto return r1"->"r6 = r5[i1]";
    "if i1 >= i0 goto return r1"->"return r1";
    "r6 = r5[i1]"->"$r7 = staticinvoke <com.github.abel533.echarts.util.ChainUtil: java.util.List allFiles(java.io.File)>(r6)";
    "$r7 = staticinvoke <com.github.abel533.echarts.util.ChainUtil: java.util.List allFiles(java.io.File)>(r6)"->"interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7)";
    "interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return r1";
}
