digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(\"(\");
i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>(\" \", i0);
$i2 = i1 + 1;
r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);
$z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>(\"get\");
if $z0 == 0 goto return r7;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(3);
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return r7;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(\"(\");
i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>(\" \", i0);
$i2 = i1 + 1;
r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);
$z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>(\"get\");
if $z0 == 0 goto return r7;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(3);
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(\"(\");
i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>(\" \", i0);
$i2 = i1 + 1;
r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);
$z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>(\"get\");
if $z0 == 0 goto return r7;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r7;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(3);
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
$r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 2:
[preds: 0 1 ] [succs: ]
return r7;
";
}
