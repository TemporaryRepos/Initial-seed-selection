digraph "unitGraph" {
    "r5 := @parameter0: java.io.File"
    "r14 := @parameter1: java.io.File"
    "r1 := @parameter2: at.favre.tools.apksigner.signing.ZipAlignExecutor"
    "r0 := @parameter3: at.favre.tools.apksigner.ui.Arg"
    "r10 := @parameter4: java.util.List"
    "$z0 = r0.<at.favre.tools.apksigner.ui.Arg: boolean skipZipAlign>"
    "if $z0 != 0 goto return 1"
    "$z1 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: boolean isExecutableFound()>()"
    "if $z1 == 0 goto $r2 = new java.lang.IllegalArgumentException"
    "r18 = \"\t- \""
    "$r3 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: java.lang.String[] getZipAlignExecutable()>()"
    "$r4 = newarray (java.lang.String)[3]"
    "$r4[0] = \"-c\""
    "$r4[1] = \"4\""
    "$r6 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()"
    "$r4[2] = $r6"
    "$r7 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: java.lang.Object[] concat(java.lang.Object[],java.lang.Object[])>($r3, $r4)"
    "$r8 = (java.lang.String[]) $r7"
    "r9 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: at.favre.tools.apksigner.util.CmdUtil$Result runCmd(java.lang.String[])>($r8)"
    "interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)"
    "z3 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()"
    "if z3 == 0 goto $r11 = new java.lang.StringBuilder"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign verified\")"
    "r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"
    "goto [?= $r20 = r19]"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign VERIFY FAILED\")"
    "r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r20 = r19"
    "$z4 = virtualinvoke r5.<java.io.File: boolean equals(java.lang.Object)>(r14)"
    "if $z4 != 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= (branch)]"
    "$z5 = 0"
    "if z3 != 0 goto $z6 = 0"
    "$z6 = 1"
    "goto [?= staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)]"
    "$z6 = 0"
    "staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)"
    "$z7 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()"
    "return $z7"
    "$r2 = new java.lang.IllegalArgumentException"
    "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"could not find zipalign - either skip it or provide a proper location\")"
    "throw $r2"
    "return 1"
    "r5 := @parameter0: java.io.File"->"r14 := @parameter1: java.io.File";
    "r14 := @parameter1: java.io.File"->"r1 := @parameter2: at.favre.tools.apksigner.signing.ZipAlignExecutor";
    "r1 := @parameter2: at.favre.tools.apksigner.signing.ZipAlignExecutor"->"r0 := @parameter3: at.favre.tools.apksigner.ui.Arg";
    "r0 := @parameter3: at.favre.tools.apksigner.ui.Arg"->"r10 := @parameter4: java.util.List";
    "r10 := @parameter4: java.util.List"->"$z0 = r0.<at.favre.tools.apksigner.ui.Arg: boolean skipZipAlign>";
    "$z0 = r0.<at.favre.tools.apksigner.ui.Arg: boolean skipZipAlign>"->"if $z0 != 0 goto return 1";
    "if $z0 != 0 goto return 1"->"$z1 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: boolean isExecutableFound()>()";
    "if $z0 != 0 goto return 1"->"return 1";
    "$z1 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: boolean isExecutableFound()>()"->"if $z1 == 0 goto $r2 = new java.lang.IllegalArgumentException";
    "if $z1 == 0 goto $r2 = new java.lang.IllegalArgumentException"->"r18 = \"\t- \"";
    "if $z1 == 0 goto $r2 = new java.lang.IllegalArgumentException"->"$r2 = new java.lang.IllegalArgumentException";
    "r18 = \"\t- \""->"$r3 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: java.lang.String[] getZipAlignExecutable()>()";
    "$r3 = virtualinvoke r1.<at.favre.tools.apksigner.signing.ZipAlignExecutor: java.lang.String[] getZipAlignExecutable()>()"->"$r4 = newarray (java.lang.String)[3]";
    "$r4 = newarray (java.lang.String)[3]"->"$r4[0] = \"-c\"";
    "$r4[0] = \"-c\""->"$r4[1] = \"4\"";
    "$r4[1] = \"4\""->"$r6 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()";
    "$r6 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()"->"$r4[2] = $r6";
    "$r4[2] = $r6"->"$r7 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: java.lang.Object[] concat(java.lang.Object[],java.lang.Object[])>($r3, $r4)";
    "$r7 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: java.lang.Object[] concat(java.lang.Object[],java.lang.Object[])>($r3, $r4)"->"$r8 = (java.lang.String[]) $r7";
    "$r8 = (java.lang.String[]) $r7"->"r9 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: at.favre.tools.apksigner.util.CmdUtil$Result runCmd(java.lang.String[])>($r8)";
    "r9 = staticinvoke <at.favre.tools.apksigner.util.CmdUtil: at.favre.tools.apksigner.util.CmdUtil$Result runCmd(java.lang.String[])>($r8)"->"interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)";
    "interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)"->"z3 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()";
    "z3 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()"->"if z3 == 0 goto $r11 = new java.lang.StringBuilder";
    "if z3 == 0 goto $r11 = new java.lang.StringBuilder"->"$r15 = new java.lang.StringBuilder";
    "if z3 == 0 goto $r11 = new java.lang.StringBuilder"->"$r11 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign verified\")";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign verified\")"->"r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()"->"goto [?= $r20 = r19]";
    "goto [?= $r20 = r19]"->"$r20 = r19";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign VERIFY FAILED\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"zipalign VERIFY FAILED\")"->"r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r20 = r19";
    "$r20 = r19"->"$z4 = virtualinvoke r5.<java.io.File: boolean equals(java.lang.Object)>(r14)";
    "$z4 = virtualinvoke r5.<java.io.File: boolean equals(java.lang.Object)>(r14)"->"if $z4 != 0 goto $z5 = 0";
    "if $z4 != 0 goto $z5 = 0"->"$z5 = 1";
    "if $z4 != 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z3 != 0 goto $z6 = 0";
    "$z5 = 0"->"if z3 != 0 goto $z6 = 0";
    "if z3 != 0 goto $z6 = 0"->"$z6 = 1";
    "if z3 != 0 goto $z6 = 0"->"$z6 = 0";
    "$z6 = 1"->"goto [?= staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)]";
    "goto [?= staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)]"->"staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)";
    "$z6 = 0"->"staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)";
    "staticinvoke <at.favre.tools.apksigner.SignTool: void logConditionally(java.lang.String,java.io.File,boolean,boolean)>($r20, r5, $z5, $z6)"->"$z7 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()";
    "$z7 = virtualinvoke r9.<at.favre.tools.apksigner.util.CmdUtil$Result: boolean success()>()"->"return $z7";
    "$r2 = new java.lang.IllegalArgumentException"->"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"could not find zipalign - either skip it or provide a proper location\")";
    "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"could not find zipalign - either skip it or provide a proper location\")"->"throw $r2";
}
