digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
d0 := @parameter0: double;
d1 := @parameter1: double;
$i0 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d0);
if $i0 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d1);
if $i1 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$b2 = d1 cmpl 0.0;
if $b2 != 0 goto $d2 = d0 / d1;
"
    "Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);
if $z0 != 0 goto return #NaN;
"
    "Block 5:
[preds: 4 ] [succs: ]
return d0;
"
    "Block 6:
[preds: 3 4 ] [succs: ]
return #NaN;
"
    "Block 7:
[preds: 2 ] [succs: 8 9 ]
$d2 = d0 / d1;
d3 = staticinvoke <org.apache.commons.math4.util.FastMath: double rint(double)>($d2);
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d3);
if $z1 == 0 goto $d4 = d1 * d3;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
$d6 = 0.0;
goto [?= d5 = $d6];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
$d4 = d1 * d3;
$d6 = d0 - $d4;
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
d5 = $d6;
$b3 = d5 cmpl 0.0;
if $b3 != 0 goto $d7 = d5;
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
$d7 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(d5, d0);
goto [?= return $d7];
"
    "Block 12:
[preds: 10 ] [succs: 13 ]
$d7 = d5;
"
    "Block 13:
[preds: 11 12 ] [succs: ]
return $d7;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
d0 := @parameter0: double;
d1 := @parameter1: double;
$i0 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d0);
if $i0 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d1);
if $i1 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
d0 := @parameter0: double;
d1 := @parameter1: double;
$i0 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d0);
if $i0 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d1);
if $i1 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
$b2 = d1 cmpl 0.0;
if $b2 != 0 goto $d2 = d0 / d1;
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
$i1 = staticinvoke <org.apache.commons.math4.util.FastMath: int getExponent(double)>(d1);
if $i1 == 1024 goto $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$b2 = d1 cmpl 0.0;
if $b2 != 0 goto $d2 = d0 / d1;
"->"Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$b2 = d1 cmpl 0.0;
if $b2 != 0 goto $d2 = d0 / d1;
"->"Block 7:
[preds: 2 ] [succs: 8 9 ]
$d2 = d0 / d1;
d3 = staticinvoke <org.apache.commons.math4.util.FastMath: double rint(double)>($d2);
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d3);
if $z1 == 0 goto $d4 = d1 * d3;
";
    "Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);
if $z0 != 0 goto return #NaN;
";
    "Block 3:
[preds: 0 1 2 ] [succs: 4 6 ]
$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);
if $z2 == 0 goto return #NaN;
"->"Block 6:
[preds: 3 4 ] [succs: ]
return #NaN;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);
if $z0 != 0 goto return #NaN;
"->"Block 5:
[preds: 4 ] [succs: ]
return d0;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);
if $z0 != 0 goto return #NaN;
"->"Block 6:
[preds: 3 4 ] [succs: ]
return #NaN;
";
    "Block 7:
[preds: 2 ] [succs: 8 9 ]
$d2 = d0 / d1;
d3 = staticinvoke <org.apache.commons.math4.util.FastMath: double rint(double)>($d2);
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d3);
if $z1 == 0 goto $d4 = d1 * d3;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
$d6 = 0.0;
goto [?= d5 = $d6];
";
    "Block 7:
[preds: 2 ] [succs: 8 9 ]
$d2 = d0 / d1;
d3 = staticinvoke <org.apache.commons.math4.util.FastMath: double rint(double)>($d2);
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d3);
if $z1 == 0 goto $d4 = d1 * d3;
"->"Block 9:
[preds: 7 ] [succs: 10 ]
$d4 = d1 * d3;
$d6 = d0 - $d4;
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
$d6 = 0.0;
goto [?= d5 = $d6];
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
d5 = $d6;
$b3 = d5 cmpl 0.0;
if $b3 != 0 goto $d7 = d5;
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
$d4 = d1 * d3;
$d6 = d0 - $d4;
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
d5 = $d6;
$b3 = d5 cmpl 0.0;
if $b3 != 0 goto $d7 = d5;
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
d5 = $d6;
$b3 = d5 cmpl 0.0;
if $b3 != 0 goto $d7 = d5;
"->"Block 11:
[preds: 10 ] [succs: 13 ]
$d7 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(d5, d0);
goto [?= return $d7];
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
d5 = $d6;
$b3 = d5 cmpl 0.0;
if $b3 != 0 goto $d7 = d5;
"->"Block 12:
[preds: 10 ] [succs: 13 ]
$d7 = d5;
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
$d7 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(d5, d0);
goto [?= return $d7];
"->"Block 13:
[preds: 11 12 ] [succs: ]
return $d7;
";
    "Block 12:
[preds: 10 ] [succs: 13 ]
$d7 = d5;
"->"Block 13:
[preds: 11 12 ] [succs: ]
return $d7;
";
}
