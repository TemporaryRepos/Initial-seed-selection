digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);
if $z0 == 0 goto $b0 = d0 cmpl 1.0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return #NaN;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b0 = d0 cmpl 1.0;
if $b0 > 0 goto return #NaN;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b1 = d0 cmpg -1.0;
if $b1 >= 0 goto $b2 = d0 cmpl -1.0;
"
    "Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
"
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b2 = d0 cmpl -1.0;
if $b2 != 0 goto $b3 = d0 cmpl 1.0;
"
    "Block 6:
[preds: 5 ] [succs: ]
return 3.141592653589793;
"
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl 0.0;
"
    "Block 8:
[preds: 7 ] [succs: ]
return 0.0;
"
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b4 = d0 cmpl 0.0;
if $b4 != 0 goto d42 = d0 * 1.073741824E9;
"
    "Block 10:
[preds: 9 ] [succs: ]
return 1.5707963267948966;
"
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
d42 = d0 * 1.073741824E9;
$d1 = d0 + d42;
d2 = $d1 - d42;
d3 = d0 - d2;
d43 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d44 = $d6 + $d5;
d45 = neg d43;
d46 = neg d44;
d47 = 1.0 + d45;
$d7 = d47 - 1.0;
$d8 = $d7 - d45;
d48 = neg $d8;
d49 = d47 + d46;
$d9 = d49 - d47;
$d10 = $d9 - d46;
$d11 = neg $d10;
d50 = d48 + $d11;
d51 = d49;
d52 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d51);
d53 = d52 * 1.073741824E9;
$d12 = d52 + d53;
d54 = $d12 - d53;
d55 = d52 - d54;
$d13 = d54 * d54;
$d16 = d51 - $d13;
$d14 = 2.0 * d54;
$d15 = $d14 * d55;
$d18 = $d16 - $d15;
$d17 = d55 * d55;
$d20 = $d18 - $d17;
$d19 = 2.0 * d52;
$d21 = $d20 / $d19;
d56 = d55 + $d21;
$d22 = 2.0 * d52;
$d23 = d50 / $d22;
d57 = d56 + $d23;
d58 = d54 + d57;
$d24 = d58 - d54;
$d25 = $d24 - d57;
d59 = neg $d25;
d26 = d58 / d0;
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26);
if $z1 == 0 goto d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
"
    "Block 12:
[preds: 11 ] [succs: ]
return 1.5707963267948966;
"
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
d61 = d26 - d60;
$d27 = d60 * d2;
$d29 = d58 - $d27;
$d28 = d60 * d3;
$d31 = $d29 - $d28;
$d30 = d61 * d2;
$d33 = $d31 - $d30;
$d32 = d61 * d3;
$d34 = $d33 - $d32;
$d35 = $d34 / d0;
d62 = d61 + $d35;
$d36 = d59 / d0;
d63 = d62 + $d36;
d64 = d60 + d63;
$d37 = d64 - d60;
$d38 = $d37 - d63;
d65 = neg $d38;
d66 = d64;
$b5 = d0 cmpg 0.0;
if $b5 >= 0 goto $z2 = 0;
"
    "Block 14:
[preds: 13 ] [succs: 16 ]
$z2 = 1;
goto [?= $d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2)];
"
    "Block 15:
[preds: 13 ] [succs: 16 ]
$z2 = 0;
"
    "Block 16:
[preds: 14 15 ] [succs: ]
$d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2);
return $d39;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);
if $z0 == 0 goto $b0 = d0 cmpl 1.0;
"->"Block 1:
[preds: 0 ] [succs: ]
return #NaN;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d0 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);
if $z0 == 0 goto $b0 = d0 cmpl 1.0;
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
$b0 = d0 cmpl 1.0;
if $b0 > 0 goto return #NaN;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b0 = d0 cmpl 1.0;
if $b0 > 0 goto return #NaN;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$b1 = d0 cmpg -1.0;
if $b1 >= 0 goto $b2 = d0 cmpl -1.0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
$b0 = d0 cmpl 1.0;
if $b0 > 0 goto return #NaN;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b1 = d0 cmpg -1.0;
if $b1 >= 0 goto $b2 = d0 cmpl -1.0;
"->"Block 4:
[preds: 2 3 ] [succs: ]
return #NaN;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$b1 = d0 cmpg -1.0;
if $b1 >= 0 goto $b2 = d0 cmpl -1.0;
"->"Block 5:
[preds: 3 ] [succs: 6 7 ]
$b2 = d0 cmpl -1.0;
if $b2 != 0 goto $b3 = d0 cmpl 1.0;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b2 = d0 cmpl -1.0;
if $b2 != 0 goto $b3 = d0 cmpl 1.0;
"->"Block 6:
[preds: 5 ] [succs: ]
return 3.141592653589793;
";
    "Block 5:
[preds: 3 ] [succs: 6 7 ]
$b2 = d0 cmpl -1.0;
if $b2 != 0 goto $b3 = d0 cmpl 1.0;
"->"Block 7:
[preds: 5 ] [succs: 8 9 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl 0.0;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl 0.0;
"->"Block 8:
[preds: 7 ] [succs: ]
return 0.0;
";
    "Block 7:
[preds: 5 ] [succs: 8 9 ]
$b3 = d0 cmpl 1.0;
if $b3 != 0 goto $b4 = d0 cmpl 0.0;
"->"Block 9:
[preds: 7 ] [succs: 10 11 ]
$b4 = d0 cmpl 0.0;
if $b4 != 0 goto d42 = d0 * 1.073741824E9;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b4 = d0 cmpl 0.0;
if $b4 != 0 goto d42 = d0 * 1.073741824E9;
"->"Block 10:
[preds: 9 ] [succs: ]
return 1.5707963267948966;
";
    "Block 9:
[preds: 7 ] [succs: 10 11 ]
$b4 = d0 cmpl 0.0;
if $b4 != 0 goto d42 = d0 * 1.073741824E9;
"->"Block 11:
[preds: 9 ] [succs: 12 13 ]
d42 = d0 * 1.073741824E9;
$d1 = d0 + d42;
d2 = $d1 - d42;
d3 = d0 - d2;
d43 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d44 = $d6 + $d5;
d45 = neg d43;
d46 = neg d44;
d47 = 1.0 + d45;
$d7 = d47 - 1.0;
$d8 = $d7 - d45;
d48 = neg $d8;
d49 = d47 + d46;
$d9 = d49 - d47;
$d10 = $d9 - d46;
$d11 = neg $d10;
d50 = d48 + $d11;
d51 = d49;
d52 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d51);
d53 = d52 * 1.073741824E9;
$d12 = d52 + d53;
d54 = $d12 - d53;
d55 = d52 - d54;
$d13 = d54 * d54;
$d16 = d51 - $d13;
$d14 = 2.0 * d54;
$d15 = $d14 * d55;
$d18 = $d16 - $d15;
$d17 = d55 * d55;
$d20 = $d18 - $d17;
$d19 = 2.0 * d52;
$d21 = $d20 / $d19;
d56 = d55 + $d21;
$d22 = 2.0 * d52;
$d23 = d50 / $d22;
d57 = d56 + $d23;
d58 = d54 + d57;
$d24 = d58 - d54;
$d25 = $d24 - d57;
d59 = neg $d25;
d26 = d58 / d0;
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26);
if $z1 == 0 goto d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
d42 = d0 * 1.073741824E9;
$d1 = d0 + d42;
d2 = $d1 - d42;
d3 = d0 - d2;
d43 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d44 = $d6 + $d5;
d45 = neg d43;
d46 = neg d44;
d47 = 1.0 + d45;
$d7 = d47 - 1.0;
$d8 = $d7 - d45;
d48 = neg $d8;
d49 = d47 + d46;
$d9 = d49 - d47;
$d10 = $d9 - d46;
$d11 = neg $d10;
d50 = d48 + $d11;
d51 = d49;
d52 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d51);
d53 = d52 * 1.073741824E9;
$d12 = d52 + d53;
d54 = $d12 - d53;
d55 = d52 - d54;
$d13 = d54 * d54;
$d16 = d51 - $d13;
$d14 = 2.0 * d54;
$d15 = $d14 * d55;
$d18 = $d16 - $d15;
$d17 = d55 * d55;
$d20 = $d18 - $d17;
$d19 = 2.0 * d52;
$d21 = $d20 / $d19;
d56 = d55 + $d21;
$d22 = 2.0 * d52;
$d23 = d50 / $d22;
d57 = d56 + $d23;
d58 = d54 + d57;
$d24 = d58 - d54;
$d25 = $d24 - d57;
d59 = neg $d25;
d26 = d58 / d0;
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26);
if $z1 == 0 goto d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
"->"Block 12:
[preds: 11 ] [succs: ]
return 1.5707963267948966;
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
d42 = d0 * 1.073741824E9;
$d1 = d0 + d42;
d2 = $d1 - d42;
d3 = d0 - d2;
d43 = d2 * d2;
$d4 = d2 * d3;
$d6 = $d4 * 2.0;
$d5 = d3 * d3;
d44 = $d6 + $d5;
d45 = neg d43;
d46 = neg d44;
d47 = 1.0 + d45;
$d7 = d47 - 1.0;
$d8 = $d7 - d45;
d48 = neg $d8;
d49 = d47 + d46;
$d9 = d49 - d47;
$d10 = $d9 - d46;
$d11 = neg $d10;
d50 = d48 + $d11;
d51 = d49;
d52 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d51);
d53 = d52 * 1.073741824E9;
$d12 = d52 + d53;
d54 = $d12 - d53;
d55 = d52 - d54;
$d13 = d54 * d54;
$d16 = d51 - $d13;
$d14 = 2.0 * d54;
$d15 = $d14 * d55;
$d18 = $d16 - $d15;
$d17 = d55 * d55;
$d20 = $d18 - $d17;
$d19 = 2.0 * d52;
$d21 = $d20 / $d19;
d56 = d55 + $d21;
$d22 = 2.0 * d52;
$d23 = d50 / $d22;
d57 = d56 + $d23;
d58 = d54 + d57;
$d24 = d58 - d54;
$d25 = $d24 - d57;
d59 = neg $d25;
d26 = d58 / d0;
$z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26);
if $z1 == 0 goto d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
"->"Block 13:
[preds: 11 ] [succs: 14 15 ]
d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
d61 = d26 - d60;
$d27 = d60 * d2;
$d29 = d58 - $d27;
$d28 = d60 * d3;
$d31 = $d29 - $d28;
$d30 = d61 * d2;
$d33 = $d31 - $d30;
$d32 = d61 * d3;
$d34 = $d33 - $d32;
$d35 = $d34 / d0;
d62 = d61 + $d35;
$d36 = d59 / d0;
d63 = d62 + $d36;
d64 = d60 + d63;
$d37 = d64 - d60;
$d38 = $d37 - d63;
d65 = neg $d38;
d66 = d64;
$b5 = d0 cmpg 0.0;
if $b5 >= 0 goto $z2 = 0;
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
d61 = d26 - d60;
$d27 = d60 * d2;
$d29 = d58 - $d27;
$d28 = d60 * d3;
$d31 = $d29 - $d28;
$d30 = d61 * d2;
$d33 = $d31 - $d30;
$d32 = d61 * d3;
$d34 = $d33 - $d32;
$d35 = $d34 / d0;
d62 = d61 + $d35;
$d36 = d59 / d0;
d63 = d62 + $d36;
d64 = d60 + d63;
$d37 = d64 - d60;
$d38 = $d37 - d63;
d65 = neg $d38;
d66 = d64;
$b5 = d0 cmpg 0.0;
if $b5 >= 0 goto $z2 = 0;
"->"Block 14:
[preds: 13 ] [succs: 16 ]
$z2 = 1;
goto [?= $d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2)];
";
    "Block 13:
[preds: 11 ] [succs: 14 15 ]
d60 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d26);
d61 = d26 - d60;
$d27 = d60 * d2;
$d29 = d58 - $d27;
$d28 = d60 * d3;
$d31 = $d29 - $d28;
$d30 = d61 * d2;
$d33 = $d31 - $d30;
$d32 = d61 * d3;
$d34 = $d33 - $d32;
$d35 = $d34 / d0;
d62 = d61 + $d35;
$d36 = d59 / d0;
d63 = d62 + $d36;
d64 = d60 + d63;
$d37 = d64 - d60;
$d38 = $d37 - d63;
d65 = neg $d38;
d66 = d64;
$b5 = d0 cmpg 0.0;
if $b5 >= 0 goto $z2 = 0;
"->"Block 15:
[preds: 13 ] [succs: 16 ]
$z2 = 0;
";
    "Block 14:
[preds: 13 ] [succs: 16 ]
$z2 = 1;
goto [?= $d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2)];
"->"Block 16:
[preds: 14 15 ] [succs: ]
$d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2);
return $d39;
";
    "Block 15:
[preds: 13 ] [succs: 16 ]
$z2 = 0;
"->"Block 16:
[preds: 14 15 ] [succs: ]
$d39 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d66, d65, $z2);
return $d39;
";
}
