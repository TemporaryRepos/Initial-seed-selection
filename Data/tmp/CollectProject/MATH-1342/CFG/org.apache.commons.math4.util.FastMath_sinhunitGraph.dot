digraph "unitGraph" {
    "d75 := @parameter0: double"
    "z1 = 0"
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d75)"
    "if $z0 == 0 goto $b0 = d75 cmpl 20.0"
    "return d75"
    "$b0 = d75 cmpl 20.0"
    "if $b0 <= 0 goto $b1 = d75 cmpg -20.0"
    "$d69 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>"
    "$b6 = d75 cmpl $d69"
    "if $b6 < 0 goto $d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)"
    "$d72 = 0.5 * d75"
    "d76 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d72)"
    "$d73 = 0.5 * d76"
    "$d74 = $d73 * d76"
    "return $d74"
    "$d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)"
    "$d71 = 0.5 * $d70"
    "return $d71"
    "$b1 = d75 cmpg -20.0"
    "if $b1 >= 0 goto $b2 = d75 cmpl 0.0"
    "$d61 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>"
    "$d62 = neg $d61"
    "$b5 = d75 cmpg $d62"
    "if $b5 > 0 goto $d63 = neg d75"
    "$d66 = -0.5 * d75"
    "d77 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d66)"
    "$d67 = -0.5 * d77"
    "$d68 = $d67 * d77"
    "return $d68"
    "$d63 = neg d75"
    "$d64 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d63)"
    "$d65 = -0.5 * $d64"
    "return $d65"
    "$b2 = d75 cmpl 0.0"
    "if $b2 != 0 goto $b3 = d75 cmpg 0.0"
    "$b3 = d75 cmpg 0.0"
    "if $b3 >= 0 goto $b4 = d75 cmpl 0.25"
    "d75 = neg d75"
    "z1 = 1"
    "$b4 = d75 cmpl 0.25"
    "if $b4 <= 0 goto r1 = newarray (double)[2]"
    "r0 = newarray (double)[2]"
    "staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d75, 0.0, r0)"
    "$d36 = r0[0]"
    "$d35 = r0[1]"
    "d78 = $d36 + $d35"
    "$d37 = r0[0]"
    "$d39 = d78 - $d37"
    "$d38 = r0[1]"
    "$d40 = $d39 - $d38"
    "d79 = neg $d40"
    "d80 = d78 * 1.073741824E9"
    "$d41 = d78 + d80"
    "d81 = $d41 - d80"
    "d82 = d78 - d81"
    "d83 = 1.0 / d78"
    "d84 = d83 * 1.073741824E9"
    "$d42 = d83 + d84"
    "d85 = $d42 - d84"
    "d86 = d83 - d85"
    "$d43 = d81 * d85"
    "$d45 = 1.0 - $d43"
    "$d44 = d81 * d86"
    "$d47 = $d45 - $d44"
    "$d46 = d82 * d85"
    "$d49 = $d47 - $d46"
    "$d48 = d82 * d86"
    "$d50 = $d49 - $d48"
    "$d51 = $d50 * d83"
    "d87 = d86 + $d51"
    "$d52 = neg d79"
    "$d53 = $d52 * d83"
    "$d54 = $d53 * d83"
    "d88 = d87 + $d54"
    "d89 = neg d85"
    "d90 = neg d88"
    "d91 = d78 + d89"
    "$d55 = d91 - d78"
    "$d56 = $d55 - d89"
    "$d57 = neg $d56"
    "d92 = d79 + $d57"
    "d93 = d91"
    "d94 = d93 + d90"
    "$d58 = d94 - d93"
    "$d59 = $d58 - d90"
    "$d60 = neg $d59"
    "d95 = d92 + $d60"
    "d96 = d94"
    "d97 = d96 + d95"
    "d98 = d97 * 0.5"
    "goto [?= (branch)]"
    "r1 = newarray (double)[2]"
    "staticinvoke <org.apache.commons.math4.util.FastMath: double expm1(double,double[])>(d75, r1)"
    "$d2 = r1[0]"
    "$d1 = r1[1]"
    "d99 = $d2 + $d1"
    "$d3 = r1[0]"
    "$d5 = d99 - $d3"
    "$d4 = r1[1]"
    "$d6 = $d5 - $d4"
    "d100 = neg $d6"
    "d101 = 1.0 + d99"
    "d102 = 1.0 / d101"
    "$d7 = d101 - 1.0"
    "$d8 = $d7 - d99"
    "$d9 = neg $d8"
    "d103 = $d9 + d100"
    "d104 = d99 * d102"
    "d105 = d104 * 1.073741824E9"
    "$d10 = d104 + d105"
    "d106 = $d10 - d105"
    "d107 = d104 - d106"
    "d108 = d101 * 1.073741824E9"
    "$d11 = d101 + d108"
    "d12 = $d11 - d108"
    "d13 = d101 - d12"
    "$d14 = d12 * d106"
    "$d16 = d99 - $d14"
    "$d15 = d12 * d107"
    "$d18 = $d16 - $d15"
    "$d17 = d13 * d106"
    "$d20 = $d18 - $d17"
    "$d19 = d13 * d107"
    "$d21 = $d20 - $d19"
    "$d22 = $d21 * d102"
    "d109 = d107 + $d22"
    "$d23 = d100 * d102"
    "d110 = d109 + $d23"
    "$d24 = neg d99"
    "$d25 = $d24 * d103"
    "$d26 = $d25 * d102"
    "$d27 = $d26 * d102"
    "d111 = d110 + $d27"
    "d112 = d99 + d106"
    "$d28 = d112 - d99"
    "$d29 = $d28 - d106"
    "$d30 = neg $d29"
    "d113 = d100 + $d30"
    "d114 = d112"
    "d115 = d114 + d111"
    "$d31 = d115 - d114"
    "$d32 = $d31 - d111"
    "$d33 = neg $d32"
    "d116 = d113 + $d33"
    "d117 = d115"
    "d118 = d117 + d116"
    "d98 = d118 * 0.5"
    "if z1 == 0 goto return d98"
    "d98 = neg d98"
    "return d98"
    "d75 := @parameter0: double"->"z1 = 0";
    "z1 = 0"->"$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d75)";
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d75)"->"if $z0 == 0 goto $b0 = d75 cmpl 20.0";
    "if $z0 == 0 goto $b0 = d75 cmpl 20.0"->"return d75";
    "if $z0 == 0 goto $b0 = d75 cmpl 20.0"->"$b0 = d75 cmpl 20.0";
    "$b0 = d75 cmpl 20.0"->"if $b0 <= 0 goto $b1 = d75 cmpg -20.0";
    "if $b0 <= 0 goto $b1 = d75 cmpg -20.0"->"$d69 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>";
    "if $b0 <= 0 goto $b1 = d75 cmpg -20.0"->"$b1 = d75 cmpg -20.0";
    "$d69 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>"->"$b6 = d75 cmpl $d69";
    "$b6 = d75 cmpl $d69"->"if $b6 < 0 goto $d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)";
    "if $b6 < 0 goto $d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)"->"$d72 = 0.5 * d75";
    "if $b6 < 0 goto $d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)"->"$d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)";
    "$d72 = 0.5 * d75"->"d76 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d72)";
    "d76 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d72)"->"$d73 = 0.5 * d76";
    "$d73 = 0.5 * d76"->"$d74 = $d73 * d76";
    "$d74 = $d73 * d76"->"return $d74";
    "$d70 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d75)"->"$d71 = 0.5 * $d70";
    "$d71 = 0.5 * $d70"->"return $d71";
    "$b1 = d75 cmpg -20.0"->"if $b1 >= 0 goto $b2 = d75 cmpl 0.0";
    "if $b1 >= 0 goto $b2 = d75 cmpl 0.0"->"$d61 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>";
    "if $b1 >= 0 goto $b2 = d75 cmpl 0.0"->"$b2 = d75 cmpl 0.0";
    "$d61 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>"->"$d62 = neg $d61";
    "$d62 = neg $d61"->"$b5 = d75 cmpg $d62";
    "$b5 = d75 cmpg $d62"->"if $b5 > 0 goto $d63 = neg d75";
    "if $b5 > 0 goto $d63 = neg d75"->"$d66 = -0.5 * d75";
    "if $b5 > 0 goto $d63 = neg d75"->"$d63 = neg d75";
    "$d66 = -0.5 * d75"->"d77 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d66)";
    "d77 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d66)"->"$d67 = -0.5 * d77";
    "$d67 = -0.5 * d77"->"$d68 = $d67 * d77";
    "$d68 = $d67 * d77"->"return $d68";
    "$d63 = neg d75"->"$d64 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d63)";
    "$d64 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d63)"->"$d65 = -0.5 * $d64";
    "$d65 = -0.5 * $d64"->"return $d65";
    "$b2 = d75 cmpl 0.0"->"if $b2 != 0 goto $b3 = d75 cmpg 0.0";
    "if $b2 != 0 goto $b3 = d75 cmpg 0.0"->"return d75";
    "if $b2 != 0 goto $b3 = d75 cmpg 0.0"->"$b3 = d75 cmpg 0.0";
    "$b3 = d75 cmpg 0.0"->"if $b3 >= 0 goto $b4 = d75 cmpl 0.25";
    "if $b3 >= 0 goto $b4 = d75 cmpl 0.25"->"d75 = neg d75";
    "if $b3 >= 0 goto $b4 = d75 cmpl 0.25"->"$b4 = d75 cmpl 0.25";
    "d75 = neg d75"->"z1 = 1";
    "z1 = 1"->"$b4 = d75 cmpl 0.25";
    "$b4 = d75 cmpl 0.25"->"if $b4 <= 0 goto r1 = newarray (double)[2]";
    "if $b4 <= 0 goto r1 = newarray (double)[2]"->"r0 = newarray (double)[2]";
    "if $b4 <= 0 goto r1 = newarray (double)[2]"->"r1 = newarray (double)[2]";
    "r0 = newarray (double)[2]"->"staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d75, 0.0, r0)";
    "staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d75, 0.0, r0)"->"$d36 = r0[0]";
    "$d36 = r0[0]"->"$d35 = r0[1]";
    "$d35 = r0[1]"->"d78 = $d36 + $d35";
    "d78 = $d36 + $d35"->"$d37 = r0[0]";
    "$d37 = r0[0]"->"$d39 = d78 - $d37";
    "$d39 = d78 - $d37"->"$d38 = r0[1]";
    "$d38 = r0[1]"->"$d40 = $d39 - $d38";
    "$d40 = $d39 - $d38"->"d79 = neg $d40";
    "d79 = neg $d40"->"d80 = d78 * 1.073741824E9";
    "d80 = d78 * 1.073741824E9"->"$d41 = d78 + d80";
    "$d41 = d78 + d80"->"d81 = $d41 - d80";
    "d81 = $d41 - d80"->"d82 = d78 - d81";
    "d82 = d78 - d81"->"d83 = 1.0 / d78";
    "d83 = 1.0 / d78"->"d84 = d83 * 1.073741824E9";
    "d84 = d83 * 1.073741824E9"->"$d42 = d83 + d84";
    "$d42 = d83 + d84"->"d85 = $d42 - d84";
    "d85 = $d42 - d84"->"d86 = d83 - d85";
    "d86 = d83 - d85"->"$d43 = d81 * d85";
    "$d43 = d81 * d85"->"$d45 = 1.0 - $d43";
    "$d45 = 1.0 - $d43"->"$d44 = d81 * d86";
    "$d44 = d81 * d86"->"$d47 = $d45 - $d44";
    "$d47 = $d45 - $d44"->"$d46 = d82 * d85";
    "$d46 = d82 * d85"->"$d49 = $d47 - $d46";
    "$d49 = $d47 - $d46"->"$d48 = d82 * d86";
    "$d48 = d82 * d86"->"$d50 = $d49 - $d48";
    "$d50 = $d49 - $d48"->"$d51 = $d50 * d83";
    "$d51 = $d50 * d83"->"d87 = d86 + $d51";
    "d87 = d86 + $d51"->"$d52 = neg d79";
    "$d52 = neg d79"->"$d53 = $d52 * d83";
    "$d53 = $d52 * d83"->"$d54 = $d53 * d83";
    "$d54 = $d53 * d83"->"d88 = d87 + $d54";
    "d88 = d87 + $d54"->"d89 = neg d85";
    "d89 = neg d85"->"d90 = neg d88";
    "d90 = neg d88"->"d91 = d78 + d89";
    "d91 = d78 + d89"->"$d55 = d91 - d78";
    "$d55 = d91 - d78"->"$d56 = $d55 - d89";
    "$d56 = $d55 - d89"->"$d57 = neg $d56";
    "$d57 = neg $d56"->"d92 = d79 + $d57";
    "d92 = d79 + $d57"->"d93 = d91";
    "d93 = d91"->"d94 = d93 + d90";
    "d94 = d93 + d90"->"$d58 = d94 - d93";
    "$d58 = d94 - d93"->"$d59 = $d58 - d90";
    "$d59 = $d58 - d90"->"$d60 = neg $d59";
    "$d60 = neg $d59"->"d95 = d92 + $d60";
    "d95 = d92 + $d60"->"d96 = d94";
    "d96 = d94"->"d97 = d96 + d95";
    "d97 = d96 + d95"->"d98 = d97 * 0.5";
    "d98 = d97 * 0.5"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z1 == 0 goto return d98";
    "r1 = newarray (double)[2]"->"staticinvoke <org.apache.commons.math4.util.FastMath: double expm1(double,double[])>(d75, r1)";
    "staticinvoke <org.apache.commons.math4.util.FastMath: double expm1(double,double[])>(d75, r1)"->"$d2 = r1[0]";
    "$d2 = r1[0]"->"$d1 = r1[1]";
    "$d1 = r1[1]"->"d99 = $d2 + $d1";
    "d99 = $d2 + $d1"->"$d3 = r1[0]";
    "$d3 = r1[0]"->"$d5 = d99 - $d3";
    "$d5 = d99 - $d3"->"$d4 = r1[1]";
    "$d4 = r1[1]"->"$d6 = $d5 - $d4";
    "$d6 = $d5 - $d4"->"d100 = neg $d6";
    "d100 = neg $d6"->"d101 = 1.0 + d99";
    "d101 = 1.0 + d99"->"d102 = 1.0 / d101";
    "d102 = 1.0 / d101"->"$d7 = d101 - 1.0";
    "$d7 = d101 - 1.0"->"$d8 = $d7 - d99";
    "$d8 = $d7 - d99"->"$d9 = neg $d8";
    "$d9 = neg $d8"->"d103 = $d9 + d100";
    "d103 = $d9 + d100"->"d104 = d99 * d102";
    "d104 = d99 * d102"->"d105 = d104 * 1.073741824E9";
    "d105 = d104 * 1.073741824E9"->"$d10 = d104 + d105";
    "$d10 = d104 + d105"->"d106 = $d10 - d105";
    "d106 = $d10 - d105"->"d107 = d104 - d106";
    "d107 = d104 - d106"->"d108 = d101 * 1.073741824E9";
    "d108 = d101 * 1.073741824E9"->"$d11 = d101 + d108";
    "$d11 = d101 + d108"->"d12 = $d11 - d108";
    "d12 = $d11 - d108"->"d13 = d101 - d12";
    "d13 = d101 - d12"->"$d14 = d12 * d106";
    "$d14 = d12 * d106"->"$d16 = d99 - $d14";
    "$d16 = d99 - $d14"->"$d15 = d12 * d107";
    "$d15 = d12 * d107"->"$d18 = $d16 - $d15";
    "$d18 = $d16 - $d15"->"$d17 = d13 * d106";
    "$d17 = d13 * d106"->"$d20 = $d18 - $d17";
    "$d20 = $d18 - $d17"->"$d19 = d13 * d107";
    "$d19 = d13 * d107"->"$d21 = $d20 - $d19";
    "$d21 = $d20 - $d19"->"$d22 = $d21 * d102";
    "$d22 = $d21 * d102"->"d109 = d107 + $d22";
    "d109 = d107 + $d22"->"$d23 = d100 * d102";
    "$d23 = d100 * d102"->"d110 = d109 + $d23";
    "d110 = d109 + $d23"->"$d24 = neg d99";
    "$d24 = neg d99"->"$d25 = $d24 * d103";
    "$d25 = $d24 * d103"->"$d26 = $d25 * d102";
    "$d26 = $d25 * d102"->"$d27 = $d26 * d102";
    "$d27 = $d26 * d102"->"d111 = d110 + $d27";
    "d111 = d110 + $d27"->"d112 = d99 + d106";
    "d112 = d99 + d106"->"$d28 = d112 - d99";
    "$d28 = d112 - d99"->"$d29 = $d28 - d106";
    "$d29 = $d28 - d106"->"$d30 = neg $d29";
    "$d30 = neg $d29"->"d113 = d100 + $d30";
    "d113 = d100 + $d30"->"d114 = d112";
    "d114 = d112"->"d115 = d114 + d111";
    "d115 = d114 + d111"->"$d31 = d115 - d114";
    "$d31 = d115 - d114"->"$d32 = $d31 - d111";
    "$d32 = $d31 - d111"->"$d33 = neg $d32";
    "$d33 = neg $d32"->"d116 = d113 + $d33";
    "d116 = d113 + $d33"->"d117 = d115";
    "d117 = d115"->"d118 = d117 + d116";
    "d118 = d117 + d116"->"d98 = d118 * 0.5";
    "d98 = d118 * 0.5"->"if z1 == 0 goto return d98";
    "if z1 == 0 goto return d98"->"d98 = neg d98";
    "if z1 == 0 goto return d98"->"return d98";
    "d98 = neg d98"->"return d98";
}
