digraph "unitGraph" {
    "d0 := @parameter0: double"
    "i7 = 0"
    "d8 = d0"
    "$b0 = d0 cmpg 0.0"
    "if $b0 >= 0 goto $b1 = d8 cmpl d8"
    "d8 = neg d8"
    "$b1 = d8 cmpl d8"
    "if $b1 != 0 goto return #NaN"
    "$b2 = d8 cmpl #Infinity"
    "if $b2 != 0 goto d9 = 0.0"
    "return #NaN"
    "d9 = 0.0"
    "$b3 = d8 cmpl 3294198.0"
    "if $b3 <= 0 goto $b4 = d8 cmpl 1.5707963267948966"
    "r1 = newarray (double)[3]"
    "staticinvoke <org.apache.commons.math4.util.FastMath: void reducePayneHanek(double,double[])>(d8, r1)"
    "$d7 = r1[0]"
    "$i6 = (int) $d7"
    "i7 = $i6 & 3"
    "d8 = r1[1]"
    "d9 = r1[2]"
    "goto [?= (branch)]"
    "$b4 = d8 cmpl 1.5707963267948966"
    "if $b4 <= 0 goto (branch)"
    "$r0 = new org.apache.commons.math4.util.FastMath$CodyWaite"
    "specialinvoke $r0.<org.apache.commons.math4.util.FastMath$CodyWaite: void <init>(double)>(d8)"
    "r2 = $r0"
    "$i5 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: int getK()>()"
    "i7 = $i5 & 3"
    "d8 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemA()>()"
    "d9 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemB()>()"
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"
    "$d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)"
    "return $d6"
    "$d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)"
    "$d5 = neg $d4"
    "return $d5"
    "$d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)"
    "$d3 = neg $d2"
    "return $d3"
    "$d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)"
    "return $d1"
    "d0 := @parameter0: double"->"i7 = 0";
    "i7 = 0"->"d8 = d0";
    "d8 = d0"->"$b0 = d0 cmpg 0.0";
    "$b0 = d0 cmpg 0.0"->"if $b0 >= 0 goto $b1 = d8 cmpl d8";
    "if $b0 >= 0 goto $b1 = d8 cmpl d8"->"d8 = neg d8";
    "if $b0 >= 0 goto $b1 = d8 cmpl d8"->"$b1 = d8 cmpl d8";
    "d8 = neg d8"->"$b1 = d8 cmpl d8";
    "$b1 = d8 cmpl d8"->"if $b1 != 0 goto return #NaN";
    "if $b1 != 0 goto return #NaN"->"$b2 = d8 cmpl #Infinity";
    "if $b1 != 0 goto return #NaN"->"return #NaN";
    "$b2 = d8 cmpl #Infinity"->"if $b2 != 0 goto d9 = 0.0";
    "if $b2 != 0 goto d9 = 0.0"->"return #NaN";
    "if $b2 != 0 goto d9 = 0.0"->"d9 = 0.0";
    "d9 = 0.0"->"$b3 = d8 cmpl 3294198.0";
    "$b3 = d8 cmpl 3294198.0"->"if $b3 <= 0 goto $b4 = d8 cmpl 1.5707963267948966";
    "if $b3 <= 0 goto $b4 = d8 cmpl 1.5707963267948966"->"r1 = newarray (double)[3]";
    "if $b3 <= 0 goto $b4 = d8 cmpl 1.5707963267948966"->"$b4 = d8 cmpl 1.5707963267948966";
    "r1 = newarray (double)[3]"->"staticinvoke <org.apache.commons.math4.util.FastMath: void reducePayneHanek(double,double[])>(d8, r1)";
    "staticinvoke <org.apache.commons.math4.util.FastMath: void reducePayneHanek(double,double[])>(d8, r1)"->"$d7 = r1[0]";
    "$d7 = r1[0]"->"$i6 = (int) $d7";
    "$i6 = (int) $d7"->"i7 = $i6 & 3";
    "i7 = $i6 & 3"->"d8 = r1[1]";
    "d8 = r1[1]"->"d9 = r1[2]";
    "d9 = r1[2]"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }";
    "$b4 = d8 cmpl 1.5707963267948966"->"if $b4 <= 0 goto (branch)";
    "if $b4 <= 0 goto (branch)"->"$r0 = new org.apache.commons.math4.util.FastMath$CodyWaite";
    "if $b4 <= 0 goto (branch)"->"tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }";
    "$r0 = new org.apache.commons.math4.util.FastMath$CodyWaite"->"specialinvoke $r0.<org.apache.commons.math4.util.FastMath$CodyWaite: void <init>(double)>(d8)";
    "specialinvoke $r0.<org.apache.commons.math4.util.FastMath$CodyWaite: void <init>(double)>(d8)"->"r2 = $r0";
    "r2 = $r0"->"$i5 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: int getK()>()";
    "$i5 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: int getK()>()"->"i7 = $i5 & 3";
    "i7 = $i5 & 3"->"d8 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemA()>()";
    "d8 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemA()>()"->"d9 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemB()>()";
    "d9 = virtualinvoke r2.<org.apache.commons.math4.util.FastMath$CodyWaite: double getRemB()>()"->"tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }";
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"->"$d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)";
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"->"$d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)";
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"->"$d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)";
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"->"$d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)";
    "tableswitch(i7) {     case 0: goto $d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 1: goto $d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     case 2: goto $d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9);     case 3: goto $d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9);     default: goto return #NaN; }"->"return #NaN";
    "$d6 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)"->"return $d6";
    "$d4 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)"->"$d5 = neg $d4";
    "$d5 = neg $d4"->"return $d5";
    "$d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double cosQ(double,double)>(d8, d9)"->"$d3 = neg $d2";
    "$d3 = neg $d2"->"return $d3";
    "$d1 = staticinvoke <org.apache.commons.math4.util.FastMath: double sinQ(double,double)>(d8, d9)"->"return $d1";
}
