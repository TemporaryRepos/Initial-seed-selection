digraph "unitGraph" {
    "d1 := @parameter0: double"
    "d0 := @parameter1: double"
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)"
    "if $z0 != 0 goto return #NaN"
    "$z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)"
    "if $z1 == 0 goto $b0 = d1 cmpl 0.0"
    "return #NaN"
    "$b0 = d1 cmpl 0.0"
    "if $b0 != 0 goto $b1 = d1 cmpl #Infinity"
    "d29 = d0 * d1"
    "d30 = 1.0 / d0"
    "d31 = 1.0 / d1"
    "$b25 = d30 cmpl 0.0"
    "if $b25 != 0 goto $b26 = d0 cmpg 0.0"
    "$b30 = d0 cmpl 0.0"
    "if $b30 <= 0 goto $d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)"
    "return d1"
    "$d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)"
    "return $d28"
    "$b26 = d0 cmpg 0.0"
    "if $b26 < 0 goto $b27 = d1 cmpg 0.0"
    "$b29 = d30 cmpg 0.0"
    "if $b29 >= 0 goto return d29"
    "$b27 = d1 cmpg 0.0"
    "if $b27 < 0 goto return -3.141592653589793"
    "$b28 = d31 cmpg 0.0"
    "if $b28 >= 0 goto return 3.141592653589793"
    "return -3.141592653589793"
    "return 3.141592653589793"
    "return d29"
    "$b1 = d1 cmpl #Infinity"
    "if $b1 != 0 goto $b2 = d1 cmpl #-Infinity"
    "$b23 = d0 cmpl #Infinity"
    "if $b23 != 0 goto $b24 = d0 cmpl #-Infinity"
    "return 0.7853981633974483"
    "$b24 = d0 cmpl #-Infinity"
    "if $b24 != 0 goto return 1.5707963267948966"
    "return 2.356194490192345"
    "return 1.5707963267948966"
    "$b2 = d1 cmpl #-Infinity"
    "if $b2 != 0 goto $b3 = d0 cmpl #Infinity"
    "$b21 = d0 cmpl #Infinity"
    "if $b21 != 0 goto $b22 = d0 cmpl #-Infinity"
    "return -0.7853981633974483"
    "$b22 = d0 cmpl #-Infinity"
    "if $b22 != 0 goto return -1.5707963267948966"
    "return -2.356194490192345"
    "return -1.5707963267948966"
    "$b3 = d0 cmpl #Infinity"
    "if $b3 != 0 goto $b4 = d0 cmpl #-Infinity"
    "$b17 = d1 cmpl 0.0"
    "if $b17 > 0 goto return 0.0"
    "$d26 = 1.0 / d1"
    "$b18 = $d26 cmpl 0.0"
    "if $b18 <= 0 goto $b19 = d1 cmpg 0.0"
    "return 0.0"
    "$b19 = d1 cmpg 0.0"
    "if $b19 < 0 goto return -0.0"
    "$d27 = 1.0 / d1"
    "$b20 = $d27 cmpg 0.0"
    "if $b20 >= 0 goto $b4 = d0 cmpl #-Infinity"
    "return -0.0"
    "$b4 = d0 cmpl #-Infinity"
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"
    "$b13 = d1 cmpl 0.0"
    "if $b13 > 0 goto return 3.141592653589793"
    "$d24 = 1.0 / d1"
    "$b14 = $d24 cmpl 0.0"
    "if $b14 <= 0 goto $b15 = d1 cmpg 0.0"
    "$b15 = d1 cmpg 0.0"
    "if $b15 < 0 goto return -3.141592653589793"
    "$d25 = 1.0 / d1"
    "$b16 = $d25 cmpg 0.0"
    "if $b16 >= 0 goto $b5 = d0 cmpl 0.0"
    "$b5 = d0 cmpl 0.0"
    "if $b5 != 0 goto d32 = d1 / d0"
    "$b9 = d1 cmpl 0.0"
    "if $b9 > 0 goto return 1.5707963267948966"
    "$d22 = 1.0 / d1"
    "$b10 = $d22 cmpl 0.0"
    "if $b10 <= 0 goto $b11 = d1 cmpg 0.0"
    "$b11 = d1 cmpg 0.0"
    "if $b11 < 0 goto return -1.5707963267948966"
    "$d23 = 1.0 / d1"
    "$b12 = $d23 cmpg 0.0"
    "if $b12 >= 0 goto d32 = d1 / d0"
    "d32 = d1 / d0"
    "$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d32)"
    "if $z2 == 0 goto d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)"
    "$b8 = d0 cmpg 0.0"
    "if $b8 >= 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= $d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)]"
    "$z3 = 0"
    "$d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)"
    "return $d19"
    "d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)"
    "d34 = d32 - d33"
    "d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d0)"
    "d3 = d0 - d2"
    "$d4 = d33 * d2"
    "$d6 = d1 - $d4"
    "$d5 = d33 * d3"
    "$d8 = $d6 - $d5"
    "$d7 = d34 * d2"
    "$d10 = $d8 - $d7"
    "$d9 = d34 * d3"
    "$d11 = $d10 - $d9"
    "$d12 = $d11 / d0"
    "d35 = d34 + $d12"
    "d13 = d33 + d35"
    "$d14 = d13 - d33"
    "$d15 = $d14 - d35"
    "d36 = neg $d15"
    "d37 = d13"
    "$b6 = d37 cmpl 0.0"
    "if $b6 != 0 goto $d17 = d37"
    "d37 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(0.0, d1)"
    "$d17 = d37"
    "$b7 = d0 cmpg 0.0"
    "if $b7 >= 0 goto $z4 = 0"
    "$z4 = 1"
    "goto [?= d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)]"
    "$z4 = 0"
    "d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)"
    "return d16"
    "d1 := @parameter0: double"->"d0 := @parameter1: double";
    "d0 := @parameter1: double"->"$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)";
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)"->"if $z0 != 0 goto return #NaN";
    "if $z0 != 0 goto return #NaN"->"$z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)";
    "if $z0 != 0 goto return #NaN"->"return #NaN";
    "$z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)"->"if $z1 == 0 goto $b0 = d1 cmpl 0.0";
    "if $z1 == 0 goto $b0 = d1 cmpl 0.0"->"return #NaN";
    "if $z1 == 0 goto $b0 = d1 cmpl 0.0"->"$b0 = d1 cmpl 0.0";
    "$b0 = d1 cmpl 0.0"->"if $b0 != 0 goto $b1 = d1 cmpl #Infinity";
    "if $b0 != 0 goto $b1 = d1 cmpl #Infinity"->"d29 = d0 * d1";
    "if $b0 != 0 goto $b1 = d1 cmpl #Infinity"->"$b1 = d1 cmpl #Infinity";
    "d29 = d0 * d1"->"d30 = 1.0 / d0";
    "d30 = 1.0 / d0"->"d31 = 1.0 / d1";
    "d31 = 1.0 / d1"->"$b25 = d30 cmpl 0.0";
    "$b25 = d30 cmpl 0.0"->"if $b25 != 0 goto $b26 = d0 cmpg 0.0";
    "if $b25 != 0 goto $b26 = d0 cmpg 0.0"->"$b30 = d0 cmpl 0.0";
    "if $b25 != 0 goto $b26 = d0 cmpg 0.0"->"$b26 = d0 cmpg 0.0";
    "$b30 = d0 cmpl 0.0"->"if $b30 <= 0 goto $d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)";
    "if $b30 <= 0 goto $d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)"->"return d1";
    "if $b30 <= 0 goto $d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)"->"$d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)";
    "$d28 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(3.141592653589793, d1)"->"return $d28";
    "$b26 = d0 cmpg 0.0"->"if $b26 < 0 goto $b27 = d1 cmpg 0.0";
    "if $b26 < 0 goto $b27 = d1 cmpg 0.0"->"$b29 = d30 cmpg 0.0";
    "if $b26 < 0 goto $b27 = d1 cmpg 0.0"->"$b27 = d1 cmpg 0.0";
    "$b29 = d30 cmpg 0.0"->"if $b29 >= 0 goto return d29";
    "if $b29 >= 0 goto return d29"->"$b27 = d1 cmpg 0.0";
    "if $b29 >= 0 goto return d29"->"return d29";
    "$b27 = d1 cmpg 0.0"->"if $b27 < 0 goto return -3.141592653589793";
    "if $b27 < 0 goto return -3.141592653589793"->"$b28 = d31 cmpg 0.0";
    "if $b27 < 0 goto return -3.141592653589793"->"return -3.141592653589793";
    "$b28 = d31 cmpg 0.0"->"if $b28 >= 0 goto return 3.141592653589793";
    "if $b28 >= 0 goto return 3.141592653589793"->"return -3.141592653589793";
    "if $b28 >= 0 goto return 3.141592653589793"->"return 3.141592653589793";
    "$b1 = d1 cmpl #Infinity"->"if $b1 != 0 goto $b2 = d1 cmpl #-Infinity";
    "if $b1 != 0 goto $b2 = d1 cmpl #-Infinity"->"$b23 = d0 cmpl #Infinity";
    "if $b1 != 0 goto $b2 = d1 cmpl #-Infinity"->"$b2 = d1 cmpl #-Infinity";
    "$b23 = d0 cmpl #Infinity"->"if $b23 != 0 goto $b24 = d0 cmpl #-Infinity";
    "if $b23 != 0 goto $b24 = d0 cmpl #-Infinity"->"return 0.7853981633974483";
    "if $b23 != 0 goto $b24 = d0 cmpl #-Infinity"->"$b24 = d0 cmpl #-Infinity";
    "$b24 = d0 cmpl #-Infinity"->"if $b24 != 0 goto return 1.5707963267948966";
    "if $b24 != 0 goto return 1.5707963267948966"->"return 2.356194490192345";
    "if $b24 != 0 goto return 1.5707963267948966"->"return 1.5707963267948966";
    "$b2 = d1 cmpl #-Infinity"->"if $b2 != 0 goto $b3 = d0 cmpl #Infinity";
    "if $b2 != 0 goto $b3 = d0 cmpl #Infinity"->"$b21 = d0 cmpl #Infinity";
    "if $b2 != 0 goto $b3 = d0 cmpl #Infinity"->"$b3 = d0 cmpl #Infinity";
    "$b21 = d0 cmpl #Infinity"->"if $b21 != 0 goto $b22 = d0 cmpl #-Infinity";
    "if $b21 != 0 goto $b22 = d0 cmpl #-Infinity"->"return -0.7853981633974483";
    "if $b21 != 0 goto $b22 = d0 cmpl #-Infinity"->"$b22 = d0 cmpl #-Infinity";
    "$b22 = d0 cmpl #-Infinity"->"if $b22 != 0 goto return -1.5707963267948966";
    "if $b22 != 0 goto return -1.5707963267948966"->"return -2.356194490192345";
    "if $b22 != 0 goto return -1.5707963267948966"->"return -1.5707963267948966";
    "$b3 = d0 cmpl #Infinity"->"if $b3 != 0 goto $b4 = d0 cmpl #-Infinity";
    "if $b3 != 0 goto $b4 = d0 cmpl #-Infinity"->"$b17 = d1 cmpl 0.0";
    "if $b3 != 0 goto $b4 = d0 cmpl #-Infinity"->"$b4 = d0 cmpl #-Infinity";
    "$b17 = d1 cmpl 0.0"->"if $b17 > 0 goto return 0.0";
    "if $b17 > 0 goto return 0.0"->"$d26 = 1.0 / d1";
    "if $b17 > 0 goto return 0.0"->"return 0.0";
    "$d26 = 1.0 / d1"->"$b18 = $d26 cmpl 0.0";
    "$b18 = $d26 cmpl 0.0"->"if $b18 <= 0 goto $b19 = d1 cmpg 0.0";
    "if $b18 <= 0 goto $b19 = d1 cmpg 0.0"->"return 0.0";
    "if $b18 <= 0 goto $b19 = d1 cmpg 0.0"->"$b19 = d1 cmpg 0.0";
    "$b19 = d1 cmpg 0.0"->"if $b19 < 0 goto return -0.0";
    "if $b19 < 0 goto return -0.0"->"$d27 = 1.0 / d1";
    "if $b19 < 0 goto return -0.0"->"return -0.0";
    "$d27 = 1.0 / d1"->"$b20 = $d27 cmpg 0.0";
    "$b20 = $d27 cmpg 0.0"->"if $b20 >= 0 goto $b4 = d0 cmpl #-Infinity";
    "if $b20 >= 0 goto $b4 = d0 cmpl #-Infinity"->"return -0.0";
    "if $b20 >= 0 goto $b4 = d0 cmpl #-Infinity"->"$b4 = d0 cmpl #-Infinity";
    "$b4 = d0 cmpl #-Infinity"->"if $b4 != 0 goto $b5 = d0 cmpl 0.0";
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"->"$b13 = d1 cmpl 0.0";
    "if $b4 != 0 goto $b5 = d0 cmpl 0.0"->"$b5 = d0 cmpl 0.0";
    "$b13 = d1 cmpl 0.0"->"if $b13 > 0 goto return 3.141592653589793";
    "if $b13 > 0 goto return 3.141592653589793"->"$d24 = 1.0 / d1";
    "if $b13 > 0 goto return 3.141592653589793"->"return 3.141592653589793";
    "$d24 = 1.0 / d1"->"$b14 = $d24 cmpl 0.0";
    "$b14 = $d24 cmpl 0.0"->"if $b14 <= 0 goto $b15 = d1 cmpg 0.0";
    "if $b14 <= 0 goto $b15 = d1 cmpg 0.0"->"return 3.141592653589793";
    "if $b14 <= 0 goto $b15 = d1 cmpg 0.0"->"$b15 = d1 cmpg 0.0";
    "$b15 = d1 cmpg 0.0"->"if $b15 < 0 goto return -3.141592653589793";
    "if $b15 < 0 goto return -3.141592653589793"->"$d25 = 1.0 / d1";
    "if $b15 < 0 goto return -3.141592653589793"->"return -3.141592653589793";
    "$d25 = 1.0 / d1"->"$b16 = $d25 cmpg 0.0";
    "$b16 = $d25 cmpg 0.0"->"if $b16 >= 0 goto $b5 = d0 cmpl 0.0";
    "if $b16 >= 0 goto $b5 = d0 cmpl 0.0"->"return -3.141592653589793";
    "if $b16 >= 0 goto $b5 = d0 cmpl 0.0"->"$b5 = d0 cmpl 0.0";
    "$b5 = d0 cmpl 0.0"->"if $b5 != 0 goto d32 = d1 / d0";
    "if $b5 != 0 goto d32 = d1 / d0"->"$b9 = d1 cmpl 0.0";
    "if $b5 != 0 goto d32 = d1 / d0"->"d32 = d1 / d0";
    "$b9 = d1 cmpl 0.0"->"if $b9 > 0 goto return 1.5707963267948966";
    "if $b9 > 0 goto return 1.5707963267948966"->"$d22 = 1.0 / d1";
    "if $b9 > 0 goto return 1.5707963267948966"->"return 1.5707963267948966";
    "$d22 = 1.0 / d1"->"$b10 = $d22 cmpl 0.0";
    "$b10 = $d22 cmpl 0.0"->"if $b10 <= 0 goto $b11 = d1 cmpg 0.0";
    "if $b10 <= 0 goto $b11 = d1 cmpg 0.0"->"return 1.5707963267948966";
    "if $b10 <= 0 goto $b11 = d1 cmpg 0.0"->"$b11 = d1 cmpg 0.0";
    "$b11 = d1 cmpg 0.0"->"if $b11 < 0 goto return -1.5707963267948966";
    "if $b11 < 0 goto return -1.5707963267948966"->"$d23 = 1.0 / d1";
    "if $b11 < 0 goto return -1.5707963267948966"->"return -1.5707963267948966";
    "$d23 = 1.0 / d1"->"$b12 = $d23 cmpg 0.0";
    "$b12 = $d23 cmpg 0.0"->"if $b12 >= 0 goto d32 = d1 / d0";
    "if $b12 >= 0 goto d32 = d1 / d0"->"return -1.5707963267948966";
    "if $b12 >= 0 goto d32 = d1 / d0"->"d32 = d1 / d0";
    "d32 = d1 / d0"->"$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d32)";
    "$z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d32)"->"if $z2 == 0 goto d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)";
    "if $z2 == 0 goto d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)"->"$b8 = d0 cmpg 0.0";
    "if $z2 == 0 goto d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)"->"d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)";
    "$b8 = d0 cmpg 0.0"->"if $b8 >= 0 goto $z3 = 0";
    "if $b8 >= 0 goto $z3 = 0"->"$z3 = 1";
    "if $b8 >= 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= $d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)]";
    "goto [?= $d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)]"->"$d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)";
    "$z3 = 0"->"$d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)";
    "$d19 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d32, 0.0, $z3)"->"return $d19";
    "d33 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d32)"->"d34 = d32 - d33";
    "d34 = d32 - d33"->"d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d0)";
    "d2 = staticinvoke <org.apache.commons.math4.util.FastMath: double doubleHighPart(double)>(d0)"->"d3 = d0 - d2";
    "d3 = d0 - d2"->"$d4 = d33 * d2";
    "$d4 = d33 * d2"->"$d6 = d1 - $d4";
    "$d6 = d1 - $d4"->"$d5 = d33 * d3";
    "$d5 = d33 * d3"->"$d8 = $d6 - $d5";
    "$d8 = $d6 - $d5"->"$d7 = d34 * d2";
    "$d7 = d34 * d2"->"$d10 = $d8 - $d7";
    "$d10 = $d8 - $d7"->"$d9 = d34 * d3";
    "$d9 = d34 * d3"->"$d11 = $d10 - $d9";
    "$d11 = $d10 - $d9"->"$d12 = $d11 / d0";
    "$d12 = $d11 / d0"->"d35 = d34 + $d12";
    "d35 = d34 + $d12"->"d13 = d33 + d35";
    "d13 = d33 + d35"->"$d14 = d13 - d33";
    "$d14 = d13 - d33"->"$d15 = $d14 - d35";
    "$d15 = $d14 - d35"->"d36 = neg $d15";
    "d36 = neg $d15"->"d37 = d13";
    "d37 = d13"->"$b6 = d37 cmpl 0.0";
    "$b6 = d37 cmpl 0.0"->"if $b6 != 0 goto $d17 = d37";
    "if $b6 != 0 goto $d17 = d37"->"d37 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(0.0, d1)";
    "if $b6 != 0 goto $d17 = d37"->"$d17 = d37";
    "d37 = staticinvoke <org.apache.commons.math4.util.FastMath: double copySign(double,double)>(0.0, d1)"->"$d17 = d37";
    "$d17 = d37"->"$b7 = d0 cmpg 0.0";
    "$b7 = d0 cmpg 0.0"->"if $b7 >= 0 goto $z4 = 0";
    "if $b7 >= 0 goto $z4 = 0"->"$z4 = 1";
    "if $b7 >= 0 goto $z4 = 0"->"$z4 = 0";
    "$z4 = 1"->"goto [?= d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)]";
    "goto [?= d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)]"->"d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)";
    "$z4 = 0"->"d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)";
    "d16 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>($d17, d36, $z4)"->"return d16";
}
