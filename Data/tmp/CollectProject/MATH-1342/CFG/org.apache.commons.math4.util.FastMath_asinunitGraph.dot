digraph "unitGraph" {
    "d0 := @parameter0: double"
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)"
    "if $z0 == 0 goto $b0 = d0 cmpl 1.0"
    "return #NaN"
    "$b0 = d0 cmpl 1.0"
    "if $b0 > 0 goto return #NaN"
    "$b1 = d0 cmpg -1.0"
    "if $b1 >= 0 goto $b2 = d0 cmpl 1.0"
    "$b2 = d0 cmpl 1.0"
    "if $b2 != 0 goto $b3 = d0 cmpl -1.0"
    "return 1.5707963267948966"
    "$b3 = d0 cmpl -1.0"
    "if $b3 != 0 goto $b4 = d0 cmpl 0.0"
    "return -1.5707963267948966"
    "$b4 = d0 cmpl 0.0"
    "if $b4 != 0 goto d43 = d0 * 1.073741824E9"
    "return d0"
    "d43 = d0 * 1.073741824E9"
    "$d1 = d0 + d43"
    "d2 = $d1 - d43"
    "d3 = d0 - d2"
    "d44 = d2 * d2"
    "$d4 = d2 * d3"
    "$d6 = $d4 * 2.0"
    "$d5 = d3 * d3"
    "d45 = $d6 + $d5"
    "d46 = neg d44"
    "d47 = neg d45"
    "d48 = 1.0 + d46"
    "$d7 = d48 - 1.0"
    "$d8 = $d7 - d46"
    "d49 = neg $d8"
    "d50 = d48 + d47"
    "$d9 = d50 - d48"
    "$d10 = $d9 - d47"
    "$d11 = neg $d10"
    "d51 = d49 + $d11"
    "d52 = d50"
    "d12 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d52)"
    "d53 = d12 * 1.073741824E9"
    "$d13 = d12 + d53"
    "d54 = $d13 - d53"
    "d55 = d12 - d54"
    "$d14 = d54 * d54"
    "$d17 = d52 - $d14"
    "$d15 = 2.0 * d54"
    "$d16 = $d15 * d55"
    "$d19 = $d17 - $d16"
    "$d18 = d55 * d55"
    "$d21 = $d19 - $d18"
    "$d20 = 2.0 * d12"
    "$d22 = $d21 / $d20"
    "d56 = d55 + $d22"
    "$d23 = 2.0 * d12"
    "d24 = d51 / $d23"
    "d25 = d0 / d12"
    "d57 = d25 * 1.073741824E9"
    "$d26 = d25 + d57"
    "d58 = $d26 - d57"
    "d59 = d25 - d58"
    "$d27 = d58 * d54"
    "$d29 = d0 - $d27"
    "$d28 = d58 * d56"
    "$d31 = $d29 - $d28"
    "$d30 = d59 * d54"
    "$d33 = $d31 - $d30"
    "$d32 = d59 * d56"
    "$d34 = $d33 - $d32"
    "$d35 = $d34 / d12"
    "d60 = d59 + $d35"
    "$d36 = neg d0"
    "$d37 = $d36 * d24"
    "$d38 = $d37 / d12"
    "$d39 = $d38 / d12"
    "d61 = d60 + $d39"
    "d62 = d58 + d61"
    "$d40 = d62 - d58"
    "$d41 = $d40 - d61"
    "d63 = neg $d41"
    "d64 = d62"
    "$d42 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d64, d63, 0)"
    "return $d42"
    "d0 := @parameter0: double"->"$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)";
    "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)"->"if $z0 == 0 goto $b0 = d0 cmpl 1.0";
    "if $z0 == 0 goto $b0 = d0 cmpl 1.0"->"return #NaN";
    "if $z0 == 0 goto $b0 = d0 cmpl 1.0"->"$b0 = d0 cmpl 1.0";
    "$b0 = d0 cmpl 1.0"->"if $b0 > 0 goto return #NaN";
    "if $b0 > 0 goto return #NaN"->"$b1 = d0 cmpg -1.0";
    "if $b0 > 0 goto return #NaN"->"return #NaN";
    "$b1 = d0 cmpg -1.0"->"if $b1 >= 0 goto $b2 = d0 cmpl 1.0";
    "if $b1 >= 0 goto $b2 = d0 cmpl 1.0"->"return #NaN";
    "if $b1 >= 0 goto $b2 = d0 cmpl 1.0"->"$b2 = d0 cmpl 1.0";
    "$b2 = d0 cmpl 1.0"->"if $b2 != 0 goto $b3 = d0 cmpl -1.0";
    "if $b2 != 0 goto $b3 = d0 cmpl -1.0"->"return 1.5707963267948966";
    "if $b2 != 0 goto $b3 = d0 cmpl -1.0"->"$b3 = d0 cmpl -1.0";
    "$b3 = d0 cmpl -1.0"->"if $b3 != 0 goto $b4 = d0 cmpl 0.0";
    "if $b3 != 0 goto $b4 = d0 cmpl 0.0"->"return -1.5707963267948966";
    "if $b3 != 0 goto $b4 = d0 cmpl 0.0"->"$b4 = d0 cmpl 0.0";
    "$b4 = d0 cmpl 0.0"->"if $b4 != 0 goto d43 = d0 * 1.073741824E9";
    "if $b4 != 0 goto d43 = d0 * 1.073741824E9"->"return d0";
    "if $b4 != 0 goto d43 = d0 * 1.073741824E9"->"d43 = d0 * 1.073741824E9";
    "d43 = d0 * 1.073741824E9"->"$d1 = d0 + d43";
    "$d1 = d0 + d43"->"d2 = $d1 - d43";
    "d2 = $d1 - d43"->"d3 = d0 - d2";
    "d3 = d0 - d2"->"d44 = d2 * d2";
    "d44 = d2 * d2"->"$d4 = d2 * d3";
    "$d4 = d2 * d3"->"$d6 = $d4 * 2.0";
    "$d6 = $d4 * 2.0"->"$d5 = d3 * d3";
    "$d5 = d3 * d3"->"d45 = $d6 + $d5";
    "d45 = $d6 + $d5"->"d46 = neg d44";
    "d46 = neg d44"->"d47 = neg d45";
    "d47 = neg d45"->"d48 = 1.0 + d46";
    "d48 = 1.0 + d46"->"$d7 = d48 - 1.0";
    "$d7 = d48 - 1.0"->"$d8 = $d7 - d46";
    "$d8 = $d7 - d46"->"d49 = neg $d8";
    "d49 = neg $d8"->"d50 = d48 + d47";
    "d50 = d48 + d47"->"$d9 = d50 - d48";
    "$d9 = d50 - d48"->"$d10 = $d9 - d47";
    "$d10 = $d9 - d47"->"$d11 = neg $d10";
    "$d11 = neg $d10"->"d51 = d49 + $d11";
    "d51 = d49 + $d11"->"d52 = d50";
    "d52 = d50"->"d12 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d52)";
    "d12 = staticinvoke <org.apache.commons.math4.util.FastMath: double sqrt(double)>(d52)"->"d53 = d12 * 1.073741824E9";
    "d53 = d12 * 1.073741824E9"->"$d13 = d12 + d53";
    "$d13 = d12 + d53"->"d54 = $d13 - d53";
    "d54 = $d13 - d53"->"d55 = d12 - d54";
    "d55 = d12 - d54"->"$d14 = d54 * d54";
    "$d14 = d54 * d54"->"$d17 = d52 - $d14";
    "$d17 = d52 - $d14"->"$d15 = 2.0 * d54";
    "$d15 = 2.0 * d54"->"$d16 = $d15 * d55";
    "$d16 = $d15 * d55"->"$d19 = $d17 - $d16";
    "$d19 = $d17 - $d16"->"$d18 = d55 * d55";
    "$d18 = d55 * d55"->"$d21 = $d19 - $d18";
    "$d21 = $d19 - $d18"->"$d20 = 2.0 * d12";
    "$d20 = 2.0 * d12"->"$d22 = $d21 / $d20";
    "$d22 = $d21 / $d20"->"d56 = d55 + $d22";
    "d56 = d55 + $d22"->"$d23 = 2.0 * d12";
    "$d23 = 2.0 * d12"->"d24 = d51 / $d23";
    "d24 = d51 / $d23"->"d25 = d0 / d12";
    "d25 = d0 / d12"->"d57 = d25 * 1.073741824E9";
    "d57 = d25 * 1.073741824E9"->"$d26 = d25 + d57";
    "$d26 = d25 + d57"->"d58 = $d26 - d57";
    "d58 = $d26 - d57"->"d59 = d25 - d58";
    "d59 = d25 - d58"->"$d27 = d58 * d54";
    "$d27 = d58 * d54"->"$d29 = d0 - $d27";
    "$d29 = d0 - $d27"->"$d28 = d58 * d56";
    "$d28 = d58 * d56"->"$d31 = $d29 - $d28";
    "$d31 = $d29 - $d28"->"$d30 = d59 * d54";
    "$d30 = d59 * d54"->"$d33 = $d31 - $d30";
    "$d33 = $d31 - $d30"->"$d32 = d59 * d56";
    "$d32 = d59 * d56"->"$d34 = $d33 - $d32";
    "$d34 = $d33 - $d32"->"$d35 = $d34 / d12";
    "$d35 = $d34 / d12"->"d60 = d59 + $d35";
    "d60 = d59 + $d35"->"$d36 = neg d0";
    "$d36 = neg d0"->"$d37 = $d36 * d24";
    "$d37 = $d36 * d24"->"$d38 = $d37 / d12";
    "$d38 = $d37 / d12"->"$d39 = $d38 / d12";
    "$d39 = $d38 / d12"->"d61 = d60 + $d39";
    "d61 = d60 + $d39"->"d62 = d58 + d61";
    "d62 = d58 + d61"->"$d40 = d62 - d58";
    "$d40 = d62 - d58"->"$d41 = $d40 - d61";
    "$d41 = $d40 - d61"->"d63 = neg $d41";
    "d63 = neg $d41"->"d64 = d62";
    "d64 = d62"->"$d42 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d64, d63, 0)";
    "$d42 = staticinvoke <org.apache.commons.math4.util.FastMath: double atan(double,double,boolean)>(d64, d63, 0)"->"return $d42";
}
