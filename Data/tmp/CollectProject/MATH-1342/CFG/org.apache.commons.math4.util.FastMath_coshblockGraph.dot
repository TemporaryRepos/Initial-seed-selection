digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
d45 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d45);
if $z0 == 0 goto $b0 = d45 cmpl 20.0;
"
    "Block 1:
[preds: 0 ] [succs: ]
return d45;
"
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
$b0 = d45 cmpl 20.0;
if $b0 <= 0 goto $b1 = d45 cmpg -20.0;
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$d39 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$b4 = d45 cmpl $d39;
if $b4 < 0 goto $d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
"
    "Block 4:
[preds: 3 ] [succs: ]
$d42 = 0.5 * d45;
d46 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d42);
$d43 = 0.5 * d46;
$d44 = $d43 * d46;
return $d44;
"
    "Block 5:
[preds: 3 ] [succs: ]
$d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
$d41 = 0.5 * $d40;
return $d41;
"
    "Block 6:
[preds: 2 ] [succs: 7 10 ]
$b1 = d45 cmpg -20.0;
if $b1 >= 0 goto r0 = newarray (double)[2];
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$d31 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$d32 = neg $d31;
$b3 = d45 cmpg $d32;
if $b3 > 0 goto $d33 = neg d45;
"
    "Block 8:
[preds: 7 ] [succs: ]
$d36 = -0.5 * d45;
d47 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d36);
$d37 = 0.5 * d47;
$d38 = $d37 * d47;
return $d38;
"
    "Block 9:
[preds: 7 ] [succs: ]
$d33 = neg d45;
$d34 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d33);
$d35 = 0.5 * $d34;
return $d35;
"
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
r0 = newarray (double)[2];
$b2 = d45 cmpg 0.0;
if $b2 >= 0 goto staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
d45 = neg d45;
"
    "Block 12:
[preds: 10 11 ] [succs: ]
staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
$d2 = r0[0];
$d1 = r0[1];
d48 = $d2 + $d1;
$d3 = r0[0];
$d5 = d48 - $d3;
$d4 = r0[1];
$d6 = $d5 - $d4;
d49 = neg $d6;
d50 = d48 * 1.073741824E9;
$d7 = d48 + d50;
d8 = $d7 - d50;
d9 = d48 - d8;
d10 = 1.0 / d48;
d51 = d10 * 1.073741824E9;
$d11 = d10 + d51;
d12 = $d11 - d51;
d52 = d10 - d12;
$d13 = d8 * d12;
$d15 = 1.0 - $d13;
$d14 = d8 * d52;
$d17 = $d15 - $d14;
$d16 = d9 * d12;
$d19 = $d17 - $d16;
$d18 = d9 * d52;
$d20 = $d19 - $d18;
$d21 = $d20 * d10;
d53 = d52 + $d21;
$d22 = neg d49;
$d23 = $d22 * d10;
$d24 = $d23 * d10;
d54 = d53 + $d24;
d55 = d48 + d12;
$d25 = d55 - d48;
$d26 = $d25 - d12;
$d27 = neg $d26;
d56 = d49 + $d27;
d57 = d55;
d58 = d57 + d54;
$d28 = d58 - d57;
$d29 = $d28 - d54;
$d30 = neg $d29;
d59 = d56 + $d30;
d60 = d58;
d61 = d60 + d59;
d62 = d61 * 0.5;
return d62;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
d45 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d45);
if $z0 == 0 goto $b0 = d45 cmpl 20.0;
"->"Block 1:
[preds: 0 ] [succs: ]
return d45;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
d45 := @parameter0: double;
$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d45);
if $z0 == 0 goto $b0 = d45 cmpl 20.0;
"->"Block 2:
[preds: 0 ] [succs: 3 6 ]
$b0 = d45 cmpl 20.0;
if $b0 <= 0 goto $b1 = d45 cmpg -20.0;
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
$b0 = d45 cmpl 20.0;
if $b0 <= 0 goto $b1 = d45 cmpg -20.0;
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
$d39 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$b4 = d45 cmpl $d39;
if $b4 < 0 goto $d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
";
    "Block 2:
[preds: 0 ] [succs: 3 6 ]
$b0 = d45 cmpl 20.0;
if $b0 <= 0 goto $b1 = d45 cmpg -20.0;
"->"Block 6:
[preds: 2 ] [succs: 7 10 ]
$b1 = d45 cmpg -20.0;
if $b1 >= 0 goto r0 = newarray (double)[2];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$d39 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$b4 = d45 cmpl $d39;
if $b4 < 0 goto $d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
"->"Block 4:
[preds: 3 ] [succs: ]
$d42 = 0.5 * d45;
d46 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d42);
$d43 = 0.5 * d46;
$d44 = $d43 * d46;
return $d44;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
$d39 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$b4 = d45 cmpl $d39;
if $b4 < 0 goto $d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
"->"Block 5:
[preds: 3 ] [succs: ]
$d40 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>(d45);
$d41 = 0.5 * $d40;
return $d41;
";
    "Block 6:
[preds: 2 ] [succs: 7 10 ]
$b1 = d45 cmpg -20.0;
if $b1 >= 0 goto r0 = newarray (double)[2];
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$d31 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$d32 = neg $d31;
$b3 = d45 cmpg $d32;
if $b3 > 0 goto $d33 = neg d45;
";
    "Block 6:
[preds: 2 ] [succs: 7 10 ]
$b1 = d45 cmpg -20.0;
if $b1 >= 0 goto r0 = newarray (double)[2];
"->"Block 10:
[preds: 6 ] [succs: 11 12 ]
r0 = newarray (double)[2];
$b2 = d45 cmpg 0.0;
if $b2 >= 0 goto staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$d31 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$d32 = neg $d31;
$b3 = d45 cmpg $d32;
if $b3 > 0 goto $d33 = neg d45;
"->"Block 8:
[preds: 7 ] [succs: ]
$d36 = -0.5 * d45;
d47 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d36);
$d37 = 0.5 * d47;
$d38 = $d37 * d47;
return $d38;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$d31 = <org.apache.commons.math4.util.FastMath: double LOG_MAX_VALUE>;
$d32 = neg $d31;
$b3 = d45 cmpg $d32;
if $b3 > 0 goto $d33 = neg d45;
"->"Block 9:
[preds: 7 ] [succs: ]
$d33 = neg d45;
$d34 = staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double)>($d33);
$d35 = 0.5 * $d34;
return $d35;
";
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
r0 = newarray (double)[2];
$b2 = d45 cmpg 0.0;
if $b2 >= 0 goto staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
"->"Block 11:
[preds: 10 ] [succs: 12 ]
d45 = neg d45;
";
    "Block 10:
[preds: 6 ] [succs: 11 12 ]
r0 = newarray (double)[2];
$b2 = d45 cmpg 0.0;
if $b2 >= 0 goto staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
"->"Block 12:
[preds: 10 11 ] [succs: ]
staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
$d2 = r0[0];
$d1 = r0[1];
d48 = $d2 + $d1;
$d3 = r0[0];
$d5 = d48 - $d3;
$d4 = r0[1];
$d6 = $d5 - $d4;
d49 = neg $d6;
d50 = d48 * 1.073741824E9;
$d7 = d48 + d50;
d8 = $d7 - d50;
d9 = d48 - d8;
d10 = 1.0 / d48;
d51 = d10 * 1.073741824E9;
$d11 = d10 + d51;
d12 = $d11 - d51;
d52 = d10 - d12;
$d13 = d8 * d12;
$d15 = 1.0 - $d13;
$d14 = d8 * d52;
$d17 = $d15 - $d14;
$d16 = d9 * d12;
$d19 = $d17 - $d16;
$d18 = d9 * d52;
$d20 = $d19 - $d18;
$d21 = $d20 * d10;
d53 = d52 + $d21;
$d22 = neg d49;
$d23 = $d22 * d10;
$d24 = $d23 * d10;
d54 = d53 + $d24;
d55 = d48 + d12;
$d25 = d55 - d48;
$d26 = $d25 - d12;
$d27 = neg $d26;
d56 = d49 + $d27;
d57 = d55;
d58 = d57 + d54;
$d28 = d58 - d57;
$d29 = $d28 - d54;
$d30 = neg $d29;
d59 = d56 + $d30;
d60 = d58;
d61 = d60 + d59;
d62 = d61 * 0.5;
return d62;
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
d45 = neg d45;
"->"Block 12:
[preds: 10 11 ] [succs: ]
staticinvoke <org.apache.commons.math4.util.FastMath: double exp(double,double,double[])>(d45, 0.0, r0);
$d2 = r0[0];
$d1 = r0[1];
d48 = $d2 + $d1;
$d3 = r0[0];
$d5 = d48 - $d3;
$d4 = r0[1];
$d6 = $d5 - $d4;
d49 = neg $d6;
d50 = d48 * 1.073741824E9;
$d7 = d48 + d50;
d8 = $d7 - d50;
d9 = d48 - d8;
d10 = 1.0 / d48;
d51 = d10 * 1.073741824E9;
$d11 = d10 + d51;
d12 = $d11 - d51;
d52 = d10 - d12;
$d13 = d8 * d12;
$d15 = 1.0 - $d13;
$d14 = d8 * d52;
$d17 = $d15 - $d14;
$d16 = d9 * d12;
$d19 = $d17 - $d16;
$d18 = d9 * d52;
$d20 = $d19 - $d18;
$d21 = $d20 * d10;
d53 = d52 + $d21;
$d22 = neg d49;
$d23 = $d22 * d10;
$d24 = $d23 * d10;
d54 = d53 + $d24;
d55 = d48 + d12;
$d25 = d55 - d48;
$d26 = $d25 - d12;
$d27 = neg $d26;
d56 = d49 + $d27;
d57 = d55;
d58 = d57 + d54;
$d28 = d58 - d57;
$d29 = $d28 - d54;
$d30 = neg $d29;
d59 = d56 + $d30;
d60 = d58;
d61 = d60 + d59;
d62 = d61 * 0.5;
return d62;
";
}
