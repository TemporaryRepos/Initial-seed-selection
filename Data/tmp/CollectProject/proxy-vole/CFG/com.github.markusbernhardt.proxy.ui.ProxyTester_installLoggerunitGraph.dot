digraph "unitGraph" {
    "r1 := @this: com.github.markusbernhardt.proxy.ui.ProxyTester"
    "$r0 = new com.github.markusbernhardt.proxy.ui.ProxyTester$2"
    "specialinvoke $r0.<com.github.markusbernhardt.proxy.ui.ProxyTester$2: void <init>(com.github.markusbernhardt.proxy.ui.ProxyTester)>(r1)"
    "staticinvoke <com.github.markusbernhardt.proxy.util.Logger: void setBackend(com.github.markusbernhardt.proxy.util.Logger$LogBackEnd)>($r0)"
    "return"
    "r1 := @this: com.github.markusbernhardt.proxy.ui.ProxyTester"->"$r0 = new com.github.markusbernhardt.proxy.ui.ProxyTester$2";
    "$r0 = new com.github.markusbernhardt.proxy.ui.ProxyTester$2"->"specialinvoke $r0.<com.github.markusbernhardt.proxy.ui.ProxyTester$2: void <init>(com.github.markusbernhardt.proxy.ui.ProxyTester)>(r1)";
    "specialinvoke $r0.<com.github.markusbernhardt.proxy.ui.ProxyTester$2: void <init>(com.github.markusbernhardt.proxy.ui.ProxyTester)>(r1)"->"staticinvoke <com.github.markusbernhardt.proxy.util.Logger: void setBackend(com.github.markusbernhardt.proxy.util.Logger$LogBackEnd)>($r0)";
    "staticinvoke <com.github.markusbernhardt.proxy.util.Logger: void setBackend(com.github.markusbernhardt.proxy.util.Logger$LogBackEnd)>($r0)"->"return";
}
