digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String"
    "r0 := @parameter1: java.util.List"
    "z2 = 0"
    "if z2 != 0 goto return r4"
    "z2 = 1"
    "r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto (branch)"
    "$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()"
    "r3 = (java.lang.String) $r2"
    "$z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r3)"
    "if $z1 == 0 goto (branch)"
    "$i0 = virtualinvoke r4.<java.lang.String: int length()>()"
    "$i1 = virtualinvoke r3.<java.lang.String: int length()>()"
    "$i2 = $i0 - $i1"
    "r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2)"
    "goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= (branch)]"
    "return r4"
    "r4 := @parameter0: java.lang.String"->"r0 := @parameter1: java.util.List";
    "r0 := @parameter1: java.util.List"->"z2 = 0";
    "z2 = 0"->"if z2 != 0 goto return r4";
    "if z2 != 0 goto return r4"->"z2 = 1";
    "if z2 != 0 goto return r4"->"return r4";
    "z2 = 1"->"r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()";
    "r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto (branch)";
    "if $z0 == 0 goto (branch)"->"$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto (branch)"->"goto [?= (branch)]";
    "$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()"->"r3 = (java.lang.String) $r2";
    "r3 = (java.lang.String) $r2"->"$z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r3)";
    "$z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r3)"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"$i0 = virtualinvoke r4.<java.lang.String: int length()>()";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]";
    "$i0 = virtualinvoke r4.<java.lang.String: int length()>()"->"$i1 = virtualinvoke r3.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r3.<java.lang.String: int length()>()"->"$i2 = $i0 - $i1";
    "$i2 = $i0 - $i1"->"r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2)";
    "r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2)"->"z2 = 0";
    "z2 = 0"->"goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= (branch)]"->"if z2 != 0 goto return r4";
}
