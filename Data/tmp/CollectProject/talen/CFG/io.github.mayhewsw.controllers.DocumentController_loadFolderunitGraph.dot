digraph "unitGraph" {
    "r28 := @this: io.github.mayhewsw.controllers.DocumentController"
    "r1 := @parameter0: java.lang.String"
    "r13 := @parameter1: java.lang.String"
    "r0 := @parameter2: java.util.HashMap"
    "$r2 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)"
    "r3 = (io.github.mayhewsw.ConfigFile) $r2"
    "r4 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFolderpath()>()"
    "r29 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFormat()>()"
    "if r29 != null goto $r5 = new java.util.TreeMap"
    "r29 = \"tajson\""
    "virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.Object setProperty(java.lang.String,java.lang.String)>(\"format\", \"tajson\")"
    "$r5 = new java.util.TreeMap"
    "$r6 = new io.github.mayhewsw.KeyComparator"
    "specialinvoke $r6.<io.github.mayhewsw.KeyComparator: void <init>()>()"
    "specialinvoke $r5.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6)"
    "r7 = $r5"
    "staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void resetstats()>()"
    "staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r4, r7)"
    "$r8 = virtualinvoke r7.<java.util.TreeMap: java.util.Collection values()>()"
    "r30 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto $r9 = new java.lang.StringBuilder"
    "$r22 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"
    "r23 = (edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation) $r22"
    "$r24 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: java.lang.String[] getTokens()>()"
    "staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void updateCounts(java.lang.String[])>($r24)"
    "$z1 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: boolean hasView(java.lang.String)>(\"NER_CONLL\")"
    "if $z1 != 0 goto (branch)"
    "$r25 = new edu.illinois.cs.cogcomp.core.datastructures.textannotation.View"
    "specialinvoke $r25.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.View: void <init>(java.lang.String,java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation,double)>(\"NER_CONLL\", \"\", r23, 1.0)"
    "r26 = $r25"
    "virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: void addView(java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.View)>(\"NER_CONLL\", r26)"
    "goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"/$\", \"\")"
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-annotation-\")"
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"
    "r31 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$r17 = <io.github.mayhewsw.controllers.DocumentController: org.slf4j.Logger logger>"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Now looking in user annotation folder: \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r20)"
    "$r21 = new java.io.File"
    "specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r31)"
    "$z0 = virtualinvoke $r21.<java.io.File: boolean exists()>()"
    "if $z0 == 0 goto return r7"
    "staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r31, r7)"
    "return r7"
    "r28 := @this: io.github.mayhewsw.controllers.DocumentController"->"r1 := @parameter0: java.lang.String";
    "r1 := @parameter0: java.lang.String"->"r13 := @parameter1: java.lang.String";
    "r13 := @parameter1: java.lang.String"->"r0 := @parameter2: java.util.HashMap";
    "r0 := @parameter2: java.util.HashMap"->"$r2 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)";
    "$r2 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)"->"r3 = (io.github.mayhewsw.ConfigFile) $r2";
    "r3 = (io.github.mayhewsw.ConfigFile) $r2"->"r4 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFolderpath()>()";
    "r4 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFolderpath()>()"->"r29 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFormat()>()";
    "r29 = virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.String getFormat()>()"->"if r29 != null goto $r5 = new java.util.TreeMap";
    "if r29 != null goto $r5 = new java.util.TreeMap"->"r29 = \"tajson\"";
    "if r29 != null goto $r5 = new java.util.TreeMap"->"$r5 = new java.util.TreeMap";
    "r29 = \"tajson\""->"virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.Object setProperty(java.lang.String,java.lang.String)>(\"format\", \"tajson\")";
    "virtualinvoke r3.<io.github.mayhewsw.ConfigFile: java.lang.Object setProperty(java.lang.String,java.lang.String)>(\"format\", \"tajson\")"->"$r5 = new java.util.TreeMap";
    "$r5 = new java.util.TreeMap"->"$r6 = new io.github.mayhewsw.KeyComparator";
    "$r6 = new io.github.mayhewsw.KeyComparator"->"specialinvoke $r6.<io.github.mayhewsw.KeyComparator: void <init>()>()";
    "specialinvoke $r6.<io.github.mayhewsw.KeyComparator: void <init>()>()"->"specialinvoke $r5.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6)";
    "specialinvoke $r5.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6)"->"r7 = $r5";
    "r7 = $r5"->"staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void resetstats()>()";
    "staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void resetstats()>()"->"staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r4, r7)";
    "staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r4, r7)"->"$r8 = virtualinvoke r7.<java.util.TreeMap: java.util.Collection values()>()";
    "$r8 = virtualinvoke r7.<java.util.TreeMap: java.util.Collection values()>()"->"r30 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()";
    "r30 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto $r9 = new java.lang.StringBuilder";
    "if $z2 == 0 goto $r9 = new java.lang.StringBuilder"->"$r22 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto $r9 = new java.lang.StringBuilder"->"$r9 = new java.lang.StringBuilder";
    "$r22 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()"->"r23 = (edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation) $r22";
    "r23 = (edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation) $r22"->"$r24 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: java.lang.String[] getTokens()>()";
    "$r24 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: java.lang.String[] getTokens()>()"->"staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void updateCounts(java.lang.String[])>($r24)";
    "staticinvoke <io.github.mayhewsw.controllers.TextStatisticsController: void updateCounts(java.lang.String[])>($r24)"->"$z1 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: boolean hasView(java.lang.String)>(\"NER_CONLL\")";
    "$z1 = virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: boolean hasView(java.lang.String)>(\"NER_CONLL\")"->"if $z1 != 0 goto (branch)";
    "if $z1 != 0 goto (branch)"->"$r25 = new edu.illinois.cs.cogcomp.core.datastructures.textannotation.View";
    "if $z1 != 0 goto (branch)"->"goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "$r25 = new edu.illinois.cs.cogcomp.core.datastructures.textannotation.View"->"specialinvoke $r25.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.View: void <init>(java.lang.String,java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation,double)>(\"NER_CONLL\", \"\", r23, 1.0)";
    "specialinvoke $r25.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.View: void <init>(java.lang.String,java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation,double)>(\"NER_CONLL\", \"\", r23, 1.0)"->"r26 = $r25";
    "r26 = $r25"->"virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: void addView(java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.View)>(\"NER_CONLL\", r26)";
    "virtualinvoke r23.<edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation: void addView(java.lang.String,edu.illinois.cs.cogcomp.core.datastructures.textannotation.View)>(\"NER_CONLL\", r26)"->"goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"/$\", \"\")";
    "$r10 = virtualinvoke r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"/$\", \"\")"->"$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)";
    "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-annotation-\")";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-annotation-\")"->"$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)";
    "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")"->"r31 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r31 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r17 = <io.github.mayhewsw.controllers.DocumentController: org.slf4j.Logger logger>";
    "$r17 = <io.github.mayhewsw.controllers.DocumentController: org.slf4j.Logger logger>"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Now looking in user annotation folder: \")";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Now looking in user annotation folder: \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r20)";
    "interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r20)"->"$r21 = new java.io.File";
    "$r21 = new java.io.File"->"specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r31)";
    "specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r31)"->"$z0 = virtualinvoke $r21.<java.io.File: boolean exists()>()";
    "$z0 = virtualinvoke $r21.<java.io.File: boolean exists()>()"->"if $z0 == 0 goto return r7";
    "if $z0 == 0 goto return r7"->"staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r31, r7)";
    "if $z0 == 0 goto return r7"->"return r7";
    "staticinvoke <io.github.mayhewsw.utils.IO: void read(java.lang.String,java.lang.String,java.util.Map)>(r29, r31, r7)"->"return r7";
}
