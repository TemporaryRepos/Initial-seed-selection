digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.Map;
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>()>();
r1 = $r0;
$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
$r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
r8 = (java.util.List) $r7;
r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.util.List) $r10;
$r12 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(1);
$r13 = (java.lang.Integer) $r12;
i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);
r22 = (java.lang.Integer) $r15;
if r22 != null goto $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r19 = new java.lang.Integer;
specialinvoke $r19.<java.lang.Integer: void <init>(int)>(1);
r23 = $r19;
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r23);
goto [?= (branch)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$i1 = virtualinvoke r22.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);
"
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 9:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.Map;
$r0 = new java.util.HashMap;
specialinvoke $r0.<java.util.HashMap: void <init>()>();
r1 = $r0;
$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
$r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
r8 = (java.util.List) $r7;
r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 9:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.Map$Entry) $r5;
$r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
r8 = (java.util.List) $r7;
r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.util.List) $r10;
$r12 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(1);
$r13 = (java.lang.Integer) $r12;
i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);
r22 = (java.lang.Integer) $r15;
if r22 != null goto $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
";
    "Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.util.List) $r10;
$r12 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(1);
$r13 = (java.lang.Integer) $r12;
i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);
r22 = (java.lang.Integer) $r15;
if r22 != null goto $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$r19 = new java.lang.Integer;
specialinvoke $r19.<java.lang.Integer: void <init>(int)>(1);
r23 = $r19;
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r23);
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
$r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r11 = (java.util.List) $r10;
$r12 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(1);
$r13 = (java.lang.Integer) $r12;
i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);
r22 = (java.lang.Integer) $r15;
if r22 != null goto $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$i1 = virtualinvoke r22.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r19 = new java.lang.Integer;
specialinvoke $r19.<java.lang.Integer: void <init>(int)>(1);
r23 = $r19;
$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r23);
goto [?= (branch)];
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
$i1 = virtualinvoke r22.<java.lang.Integer: int intValue()>();
$i2 = $i1 + 1;
$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);
"->"Block 7:
[preds: 5 6 ] [succs: 3 ]
goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 5 6 ] [succs: 3 ]
goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"->"Block 3:
[preds: 2 7 ] [succs: 4 8 ]
$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 8:
[preds: 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
}
