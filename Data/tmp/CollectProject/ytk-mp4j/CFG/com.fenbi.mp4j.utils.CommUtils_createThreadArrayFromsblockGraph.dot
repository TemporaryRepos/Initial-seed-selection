digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
i2 := @parameter2: int;
r0 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(i0, i1);
r1 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayTos(int,int)>(i0, i1);
r2 = newmultiarray (int)[i1][i2];
i8 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i8 >= i1 goto return r2;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
i3 = r0[i8];
i4 = r1[i8];
i5 = i4 - i3;
r3 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(i5, i2);
i9 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i9 >= i2 goto r2[i8] = r3;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$i6 = r3[i9];
$i7 = $i6 + i3;
r3[i9] = $i7;
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
r2[i8] = r3;
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
return r2;
"
    "Block 0:
[preds: ] [succs: 1 ]
i0 := @parameter0: int;
i1 := @parameter1: int;
i2 := @parameter2: int;
r0 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(i0, i1);
r1 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayTos(int,int)>(i0, i1);
r2 = newmultiarray (int)[i1][i2];
i8 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i8 >= i1 goto return r2;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i8 >= i1 goto return r2;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
i3 = r0[i8];
i4 = r1[i8];
i5 = i4 - i3;
r3 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(i5, i2);
i9 = 0;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i8 >= i1 goto return r2;
"->"Block 6:
[preds: 1 ] [succs: ]
return r2;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
i3 = r0[i8];
i4 = r1[i8];
i5 = i4 - i3;
r3 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(i5, i2);
i9 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i9 >= i2 goto r2[i8] = r3;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i9 >= i2 goto r2[i8] = r3;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$i6 = r3[i9];
$i7 = $i6 + i3;
r3[i9] = $i7;
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i9 >= i2 goto r2[i8] = r3;
"->"Block 5:
[preds: 3 ] [succs: 1 ]
r2[i8] = r3;
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$i6 = r3[i9];
$i7 = $i6 + i3;
r3[i9] = $i7;
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i9 >= i2 goto r2[i8] = r3;
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
r2[i8] = r3;
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i8 >= i1 goto return r2;
";
}
