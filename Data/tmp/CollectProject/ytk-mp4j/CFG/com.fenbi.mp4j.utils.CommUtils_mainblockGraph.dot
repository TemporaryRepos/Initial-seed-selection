digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r34 := @parameter0: java.lang.String[];
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process froms:\");
$r3 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(101, 4);
$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r3);
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process tos:\");
$r10 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayTos(int,int)>(101, 4);
$r11 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r10);
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);
r14 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[][] createThreadArrayFroms(int,int,int)>(101, 4, 2);
r15 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[][] createThreadArrayTos(int,int,int)>(101, 4, 2);
i1 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r14;
if i1 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadFroms:\");
$r21 = r14[i1];
$r22 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r21);
$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadTos:\");
$r30 = r15[i1];
$r31 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r30);
$r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r33);
i1 = i1 + 1;
goto [?= $i0 = lengthof r14];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r34 := @parameter0: java.lang.String[];
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process froms:\");
$r3 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayFroms(int,int)>(101, 4);
$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r3);
$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process tos:\");
$r10 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[] createProcessArrayTos(int,int)>(101, 4);
$r11 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r10);
$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);
r14 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[][] createThreadArrayFroms(int,int,int)>(101, 4, 2);
r15 = staticinvoke <com.fenbi.mp4j.utils.CommUtils: int[][] createThreadArrayTos(int,int,int)>(101, 4, 2);
i1 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r14;
if i1 >= $i0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r14;
if i1 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadFroms:\");
$r21 = r14[i1];
$r22 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r21);
$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadTos:\");
$r30 = r15[i1];
$r31 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r30);
$r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r33);
i1 = i1 + 1;
goto [?= $i0 = lengthof r14];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r14;
if i1 >= $i0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadFroms:\");
$r21 = r14[i1];
$r22 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r21);
$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);
$r26 = <java.lang.System: java.io.PrintStream out>;
$r25 = new java.lang.StringBuilder;
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"process:\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", threadTos:\");
$r30 = r15[i1];
$r31 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r30);
$r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r33);
i1 = i1 + 1;
goto [?= $i0 = lengthof r14];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r14;
if i1 >= $i0 goto return;
";
}
