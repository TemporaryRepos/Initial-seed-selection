digraph "unitGraph" {
    "i0 := @parameter0: int"
    "i2 := @parameter1: int"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "i1 = i0 / 2"
    "if i2 == 0 goto (branch)"
    "$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21)"
    "$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r22)"
    "$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23)"
    "$i10 = i1 - 1"
    "$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r24)"
    "if i2 == i1 goto $i3 = i1 - 1"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17)"
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18)"
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19)"
    "$i9 = i0 - 1"
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20)"
    "$i3 = i1 - 1"
    "staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(0, $i3, r1)"
    "$i4 = i0 - 1"
    "staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(i1, $i4, r1)"
    "$r2 = new java.util.HashMap"
    "specialinvoke $r2.<java.util.HashMap: void <init>(int)>(i0)"
    "r3 = $r2"
    "i11 = 0"
    "$i12 = interfaceinvoke r1.<java.util.List: int size()>()"
    "if i11 >= $i12 goto return r3"
    "$r4 = new java.util.ArrayList"
    "specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4)"
    "r5 = $r4"
    "$r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r6)"
    "$i5 = i11 + 1"
    "$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i5)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7)"
    "$i6 = i11 + 2"
    "$r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i6)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8)"
    "$i7 = i11 + 3"
    "$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i7)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r9)"
    "$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)"
    "$r11 = (java.lang.Integer) $r10"
    "i8 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "$r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)"
    "r25 = (java.util.List) $r13"
    "if r25 != null goto interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)"
    "$r16 = new java.util.ArrayList"
    "specialinvoke $r16.<java.util.ArrayList: void <init>()>()"
    "r25 = $r16"
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r25)"
    "i11 = i11 + 4"
    "goto [?= $i12 = interfaceinvoke r1.<java.util.List: int size()>()]"
    "return r3"
    "i0 := @parameter0: int"->"i2 := @parameter1: int";
    "i2 := @parameter1: int"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i1 = i0 / 2";
    "i1 = i0 / 2"->"if i2 == 0 goto (branch)";
    "if i2 == 0 goto (branch)"->"$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)";
    "if i2 == 0 goto (branch)"->"if i2 == i1 goto $i3 = i1 - 1";
    "$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21)"->"$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r22)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r22)"->"$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23)"->"$i10 = i1 - 1";
    "$i10 = i1 - 1"->"$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10)";
    "$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r24)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r24)"->"if i2 == i1 goto $i3 = i1 - 1";
    "if i2 == i1 goto $i3 = i1 - 1"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)";
    "if i2 == i1 goto $i3 = i1 - 1"->"$i3 = i1 - 1";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17)"->"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18)"->"$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "$r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19)"->"$i9 = i0 - 1";
    "$i9 = i0 - 1"->"$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)";
    "$r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20)"->"$i3 = i1 - 1";
    "$i3 = i1 - 1"->"staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(0, $i3, r1)";
    "staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(0, $i3, r1)"->"$i4 = i0 - 1";
    "$i4 = i0 - 1"->"staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(i1, $i4, r1)";
    "staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: void split(int,int,java.util.List)>(i1, $i4, r1)"->"$r2 = new java.util.HashMap";
    "$r2 = new java.util.HashMap"->"specialinvoke $r2.<java.util.HashMap: void <init>(int)>(i0)";
    "specialinvoke $r2.<java.util.HashMap: void <init>(int)>(i0)"->"r3 = $r2";
    "r3 = $r2"->"i11 = 0";
    "i11 = 0"->"$i12 = interfaceinvoke r1.<java.util.List: int size()>()";
    "$i12 = interfaceinvoke r1.<java.util.List: int size()>()"->"if i11 >= $i12 goto return r3";
    "if i11 >= $i12 goto return r3"->"$r4 = new java.util.ArrayList";
    "if i11 >= $i12 goto return r3"->"return r3";
    "$r4 = new java.util.ArrayList"->"specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4)";
    "specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4)"->"r5 = $r4";
    "r5 = $r4"->"$r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)";
    "$r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r6)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r6)"->"$i5 = i11 + 1";
    "$i5 = i11 + 1"->"$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i5)";
    "$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i5)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7)"->"$i6 = i11 + 2";
    "$i6 = i11 + 2"->"$r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i6)";
    "$r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i6)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8)"->"$i7 = i11 + 3";
    "$i7 = i11 + 3"->"$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i7)";
    "$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i7)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r9)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r9)"->"$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)";
    "$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11)"->"$r11 = (java.lang.Integer) $r10";
    "$r11 = (java.lang.Integer) $r10"->"i8 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()";
    "i8 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"->"$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"$r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)";
    "$r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)"->"r25 = (java.util.List) $r13";
    "r25 = (java.util.List) $r13"->"if r25 != null goto interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)";
    "if r25 != null goto interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)"->"$r16 = new java.util.ArrayList";
    "if r25 != null goto interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)"->"interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)";
    "$r16 = new java.util.ArrayList"->"specialinvoke $r16.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r16.<java.util.ArrayList: void <init>()>()"->"r25 = $r16";
    "r25 = $r16"->"interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)";
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r5)"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8)"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r25)";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r25)"->"i11 = i11 + 4";
    "i11 = i11 + 4"->"goto [?= $i12 = interfaceinvoke r1.<java.util.List: int size()>()]";
    "goto [?= $i12 = interfaceinvoke r1.<java.util.List: int size()>()]"->"$i12 = interfaceinvoke r1.<java.util.List: int size()>()";
}
