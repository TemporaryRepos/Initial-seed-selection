digraph "unitGraph" {
    "r27 := @parameter0: java.lang.String[]"
    "i2 = 13"
    "if i2 >= 14 goto return"
    "i3 = 0"
    "if i3 >= i2 goto i2 = i2 + 1"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = new java.lang.StringBuilder"
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"root=\")"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-->\")"
    "$r5 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"recvnum>>>\")"
    "$r11 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"
    "$r12 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r11)"
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)"
    "$i0 = i2 % 100"
    "if $i0 != 0 goto $r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"
    "$r23 = <java.lang.System: java.io.PrintStream out>"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"p=\")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)"
    "$r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"
    "r16 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r15)"
    "i4 = 0"
    "if i4 >= i2 goto i3 = i3 + 1"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "$r19 = interfaceinvoke r16.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r17, $r18)"
    "$r20 = (java.lang.Integer) $r19"
    "i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>()"
    "if i1 < 2 goto i4 = i4 + 1"
    "$r21 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(\"error\")"
    "staticinvoke <java.lang.System: void exit(int)>(1)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "i3 = i3 + 1"
    "i2 = i2 + 1"
    "return"
    "r27 := @parameter0: java.lang.String[]"->"i2 = 13";
    "i2 = 13"->"if i2 >= 14 goto return";
    "if i2 >= 14 goto return"->"i3 = 0";
    "if i2 >= 14 goto return"->"return";
    "i3 = 0"->"if i3 >= i2 goto i2 = i2 + 1";
    "if i3 >= i2 goto i2 = i2 + 1"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "if i3 >= i2 goto i2 = i2 + 1"->"i2 = i2 + 1";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = new java.lang.StringBuilder";
    "$r0 = new java.lang.StringBuilder"->"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"root=\")";
    "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"root=\")"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-->\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"-->\")"->"$r5 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)";
    "$r5 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"recvnum>>>\")";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"recvnum>>>\")"->"$r11 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)";
    "$r11 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"->"$r12 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r11)";
    "$r12 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r11)"->"$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)";
    "$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)"->"$i0 = i2 % 100";
    "$i0 = i2 % 100"->"if $i0 != 0 goto $r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)";
    "if $i0 != 0 goto $r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"->"$r23 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 != 0 goto $r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"->"$r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"p=\")";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"p=\")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26)"->"$r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)";
    "$r15 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map allocate(int,int)>(i2, i3)"->"r16 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r15)";
    "r16 = staticinvoke <com.fenbi.mp4j.utils.ScatterAllocate: java.util.Map recvNum(java.util.Map)>($r15)"->"i4 = 0";
    "i4 = 0"->"if i4 >= i2 goto i3 = i3 + 1";
    "if i4 >= i2 goto i3 = i3 + 1"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "if i4 >= i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"$r19 = interfaceinvoke r16.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r17, $r18)";
    "$r19 = interfaceinvoke r16.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r17, $r18)"->"$r20 = (java.lang.Integer) $r19";
    "$r20 = (java.lang.Integer) $r19"->"i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>()";
    "i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>()"->"if i1 < 2 goto i4 = i4 + 1";
    "if i1 < 2 goto i4 = i4 + 1"->"$r21 = <java.lang.System: java.io.PrintStream out>";
    "if i1 < 2 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r21 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(\"error\")";
    "virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(\"error\")"->"staticinvoke <java.lang.System: void exit(int)>(1)";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i2 goto i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i2 goto i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 14 goto return";
}
