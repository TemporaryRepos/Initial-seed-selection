digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"right\")"
    "r1 = \"2020-01-02 22:00:00\""
    "r2 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"Asia/Shanghai\")"
    "r3 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"America/New_York\")"
    "r4 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset ofHours(int)>(9)"
    "r5 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")"
    "$r6 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(r1, r5)"
    "r7 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDateTime,java.time.ZoneId)>($r6, r4)"
    "r8 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss Z\")"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = new java.lang.StringBuilder"
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke r2.<java.time.ZoneId: java.lang.String getId()>()"
    "$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"
    "$r13 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r2)"
    "$r14 = virtualinvoke $r13.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"
    "$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)"
    "$r18 = <java.lang.System: java.io.PrintStream out>"
    "$r17 = new java.lang.StringBuilder"
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"
    "$r19 = virtualinvoke r3.<java.time.ZoneId: java.lang.String getId()>()"
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"
    "$r21 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r3)"
    "$r22 = virtualinvoke $r21.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r24)"
    "$r26 = <java.lang.System: java.io.PrintStream out>"
    "$r25 = new java.lang.StringBuilder"
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"
    "$r27 = virtualinvoke r4.<java.time.ZoneId: java.lang.String getId()>()"
    "$r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)"
    "$r29 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r4)"
    "$r30 = virtualinvoke $r29.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"
    "$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32)"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"right\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"right\")"->"r1 = \"2020-01-02 22:00:00\"";
    "r1 = \"2020-01-02 22:00:00\""->"r2 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"Asia/Shanghai\")";
    "r2 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"Asia/Shanghai\")"->"r3 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"America/New_York\")";
    "r3 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(\"America/New_York\")"->"r4 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset ofHours(int)>(9)";
    "r4 = staticinvoke <java.time.ZoneOffset: java.time.ZoneOffset ofHours(int)>(9)"->"r5 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")";
    "r5 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")"->"$r6 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(r1, r5)";
    "$r6 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(r1, r5)"->"r7 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDateTime,java.time.ZoneId)>($r6, r4)";
    "r7 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDateTime,java.time.ZoneId)>($r6, r4)"->"r8 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss Z\")";
    "r8 = staticinvoke <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss Z\")"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"$r9 = new java.lang.StringBuilder";
    "$r9 = new java.lang.StringBuilder"->"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke r2.<java.time.ZoneId: java.lang.String getId()>()";
    "$r11 = virtualinvoke r2.<java.time.ZoneId: java.lang.String getId()>()"->"$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)";
    "$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)"->"$r13 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r2)";
    "$r13 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r2)"->"$r14 = virtualinvoke $r13.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)";
    "$r14 = virtualinvoke $r13.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"->"$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)";
    "$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)"->"$r18 = <java.lang.System: java.io.PrintStream out>";
    "$r18 = <java.lang.System: java.io.PrintStream out>"->"$r17 = new java.lang.StringBuilder";
    "$r17 = new java.lang.StringBuilder"->"specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()"->"$r19 = virtualinvoke r3.<java.time.ZoneId: java.lang.String getId()>()";
    "$r19 = virtualinvoke r3.<java.time.ZoneId: java.lang.String getId()>()"->"$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)";
    "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)"->"$r21 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r3)";
    "$r21 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r3)"->"$r22 = virtualinvoke $r21.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)";
    "$r22 = virtualinvoke $r21.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"->"$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)";
    "$r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r24)";
    "virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r24)"->"$r26 = <java.lang.System: java.io.PrintStream out>";
    "$r26 = <java.lang.System: java.io.PrintStream out>"->"$r25 = new java.lang.StringBuilder";
    "$r25 = new java.lang.StringBuilder"->"specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()"->"$r27 = virtualinvoke r4.<java.time.ZoneId: java.lang.String getId()>()";
    "$r27 = virtualinvoke r4.<java.time.ZoneId: java.lang.String getId()>()"->"$r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)";
    "$r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)"->"$r29 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r4)";
    "$r29 = virtualinvoke r8.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(r4)"->"$r30 = virtualinvoke $r29.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)";
    "$r30 = virtualinvoke $r29.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(r7)"->"$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)";
    "$r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32)";
    "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32)"->"return";
}
