digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"wrong1\");
r1 = \"2020-01-02 22:00:00\";
$r2 = new java.text.SimpleDateFormat;
specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\");
r3 = $r2;
r4 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);
$r6 = <java.lang.System: java.io.PrintStream out>;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$l0 = virtualinvoke r4.<java.util.Date: long getTime()>();
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
$r11 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(\"America/New_York\");
virtualinvoke r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r11);
r12 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\");
$l1 = virtualinvoke r12.<java.util.Date: long getTime()>();
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);
return;
"
}
