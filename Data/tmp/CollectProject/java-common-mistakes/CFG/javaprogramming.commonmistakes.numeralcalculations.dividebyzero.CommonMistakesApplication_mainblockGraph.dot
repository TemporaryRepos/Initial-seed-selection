digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r42 := @parameter0: java.lang.String[];
$r0 = staticinvoke <javaprogramming.commonmistakes.numeralcalculations.dividebyzero.CommonMistakesApplication$lambda_main_0__122: org.junit.function.ThrowingRunnable bootstrap$()>();
staticinvoke <org.junit.Assert: java.lang.Throwable assertThrows(java.lang.Class,org.junit.function.ThrowingRunnable)>(class \"Ljava/lang/ArithmeticException;\", $r0);
f0 = #InfinityF;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1==Float.POSITIVE_INFINITY:\");
$b0 = f0 cmpl #InfinityF;
if $b0 != 0 goto $z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
f1 = #-InfinityF;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2==Float.NEGATIVE_INFINITY:\");
$b1 = f1 cmpl #-InfinityF;
if $b1 != 0 goto $z2 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
f2 = #NaNF;
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3:\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream out>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3==Float.NaN:\");
$b2 = f2 cmpl #NaNF;
if $b2 != 0 goto $z3 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.compare(result3, Float.NaN)==0:\");
$i3 = staticinvoke <java.lang.Float: int compare(float,float)>(f2, #NaNF);
if $i3 != 0 goto $z4 = 0;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z4 = 1;
goto [?= $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4)];
"
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z4 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: ]
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.isNaN(result3)):\");
$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r42 := @parameter0: java.lang.String[];
$r0 = staticinvoke <javaprogramming.commonmistakes.numeralcalculations.dividebyzero.CommonMistakesApplication$lambda_main_0__122: org.junit.function.ThrowingRunnable bootstrap$()>();
staticinvoke <org.junit.Assert: java.lang.Throwable assertThrows(java.lang.Class,org.junit.function.ThrowingRunnable)>(class \"Ljava/lang/ArithmeticException;\", $r0);
f0 = #InfinityF;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1==Float.POSITIVE_INFINITY:\");
$b0 = f0 cmpl #InfinityF;
if $b0 != 0 goto $z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r42 := @parameter0: java.lang.String[];
$r0 = staticinvoke <javaprogramming.commonmistakes.numeralcalculations.dividebyzero.CommonMistakesApplication$lambda_main_0__122: org.junit.function.ThrowingRunnable bootstrap$()>();
staticinvoke <org.junit.Assert: java.lang.Throwable assertThrows(java.lang.Class,org.junit.function.ThrowingRunnable)>(class \"Ljava/lang/ArithmeticException;\", $r0);
f0 = #InfinityF;
$r3 = <java.lang.System: java.io.PrintStream out>;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1:\");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = new java.lang.StringBuilder;
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result1==Float.POSITIVE_INFINITY:\");
$b0 = f0 cmpl #InfinityF;
if $b0 != 0 goto $z1 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
f1 = #-InfinityF;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2==Float.NEGATIVE_INFINITY:\");
$b1 = f1 cmpl #-InfinityF;
if $b1 != 0 goto $z2 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
f1 = #-InfinityF;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2==Float.NEGATIVE_INFINITY:\");
$b1 = f1 cmpl #-InfinityF;
if $b1 != 0 goto $z2 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
f1 = #-InfinityF;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2==Float.NEGATIVE_INFINITY:\");
$b1 = f1 cmpl #-InfinityF;
if $b1 != 0 goto $z2 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2)];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);
f1 = #-InfinityF;
$r13 = <java.lang.System: java.io.PrintStream out>;
$r12 = new java.lang.StringBuilder;
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2:\");
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = new java.lang.StringBuilder;
specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result2==Float.NEGATIVE_INFINITY:\");
$b1 = f1 cmpl #-InfinityF;
if $b1 != 0 goto $z2 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2)];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
f2 = #NaNF;
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3:\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream out>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3==Float.NaN:\");
$b2 = f2 cmpl #NaNF;
if $b2 != 0 goto $z3 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
f2 = #NaNF;
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3:\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream out>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3==Float.NaN:\");
$b2 = f2 cmpl #NaNF;
if $b2 != 0 goto $z3 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
f2 = #NaNF;
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3:\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream out>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3==Float.NaN:\");
$b2 = f2 cmpl #NaNF;
if $b2 != 0 goto $z3 = 0;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);
f2 = #NaNF;
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3:\");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);
$r28 = <java.lang.System: java.io.PrintStream out>;
$r27 = new java.lang.StringBuilder;
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"result3==Float.NaN:\");
$b2 = f2 cmpl #NaNF;
if $b2 != 0 goto $z3 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z3 = 1;
goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)];
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.compare(result3, Float.NaN)==0:\");
$i3 = staticinvoke <java.lang.Float: int compare(float,float)>(f2, #NaNF);
if $i3 != 0 goto $z4 = 0;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z3 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.compare(result3, Float.NaN)==0:\");
$i3 = staticinvoke <java.lang.Float: int compare(float,float)>(f2, #NaNF);
if $i3 != 0 goto $z4 = 0;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.compare(result3, Float.NaN)==0:\");
$i3 = staticinvoke <java.lang.Float: int compare(float,float)>(f2, #NaNF);
if $i3 != 0 goto $z4 = 0;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$z4 = 1;
goto [?= $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4)];
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);
$r33 = <java.lang.System: java.io.PrintStream out>;
$r32 = new java.lang.StringBuilder;
specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.compare(result3, Float.NaN)==0:\");
$i3 = staticinvoke <java.lang.Float: int compare(float,float)>(f2, #NaNF);
if $i3 != 0 goto $z4 = 0;
"->"Block 11:
[preds: 9 ] [succs: 12 ]
$z4 = 0;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z4 = 1;
goto [?= $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4)];
"->"Block 12:
[preds: 10 11 ] [succs: ]
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.isNaN(result3)):\");
$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);
return;
";
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z4 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: ]
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);
$r38 = <java.lang.System: java.io.PrintStream out>;
$r37 = new java.lang.StringBuilder;
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
$r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Float.isNaN(result3)):\");
$z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2);
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r41);
return;
";
}
