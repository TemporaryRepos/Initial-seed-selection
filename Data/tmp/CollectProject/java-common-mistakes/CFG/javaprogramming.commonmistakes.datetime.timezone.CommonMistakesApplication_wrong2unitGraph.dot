digraph "unitGraph" {
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"wrong2\")"
    "r1 = \"2020-01-02 22:00:00\""
    "$r2 = new java.text.SimpleDateFormat"
    "specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")"
    "r3 = $r2"
    "r4 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = new java.text.SimpleDateFormat"
    "specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")"
    "$r7 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7)"
    "$r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(\"America/New_York\")"
    "staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>($r8)"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = new java.text.SimpleDateFormat"
    "specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")"
    "$r11 = virtualinvoke $r9.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11)"
    "return"
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"wrong2\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"wrong2\")"->"r1 = \"2020-01-02 22:00:00\"";
    "r1 = \"2020-01-02 22:00:00\""->"$r2 = new java.text.SimpleDateFormat";
    "$r2 = new java.text.SimpleDateFormat"->"specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")";
    "specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"yyyy-MM-dd HH:mm:ss\")"->"r3 = $r2";
    "r3 = $r2"->"r4 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1)";
    "r4 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = new java.text.SimpleDateFormat";
    "$r5 = new java.text.SimpleDateFormat"->"specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")";
    "specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")"->"$r7 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)";
    "$r7 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7)";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7)"->"$r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(\"America/New_York\")";
    "$r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(\"America/New_York\")"->"staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>($r8)";
    "staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>($r8)"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"$r9 = new java.text.SimpleDateFormat";
    "$r9 = new java.text.SimpleDateFormat"->"specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")";
    "specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(\"[yyyy-MM-dd HH:mm:ss Z]\")"->"$r11 = virtualinvoke $r9.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)";
    "$r11 = virtualinvoke $r9.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4)"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11)";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"return";
}
