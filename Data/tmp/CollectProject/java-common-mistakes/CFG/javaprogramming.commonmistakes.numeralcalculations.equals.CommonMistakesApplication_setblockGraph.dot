digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
$r0 = new java.util.HashSet;
specialinvoke $r0.<java.util.HashSet: void <init>()>();
r1 = $r0;
$r2 = new java.math.BigDecimal;
specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1.0\");
interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r2);
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = new java.math.BigDecimal;
specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1\");
$z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);
virtualinvoke $r4.<java.io.PrintStream: void println(boolean)>($z1);
$r5 = new java.util.HashSet;
specialinvoke $r5.<java.util.HashSet: void <init>()>();
r6 = $r5;
$r7 = new java.math.BigDecimal;
specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1.0\");
$r8 = virtualinvoke $r7.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();
interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r8);
$r10 = <java.lang.System: java.io.PrintStream out>;
$r9 = new java.math.BigDecimal;
specialinvoke $r9.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1.000\");
$r11 = virtualinvoke $r9.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();
$z3 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r11);
virtualinvoke $r10.<java.io.PrintStream: void println(boolean)>($z3);
$r12 = new java.util.TreeSet;
specialinvoke $r12.<java.util.TreeSet: void <init>()>();
r13 = $r12;
$r14 = new java.math.BigDecimal;
specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1.0\");
interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>($r14);
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.math.BigDecimal;
specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>(\"1\");
$z5 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>($r15);
virtualinvoke $r16.<java.io.PrintStream: void println(boolean)>($z5);
return;
"
}
