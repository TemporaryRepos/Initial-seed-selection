digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "r0 = staticinvoke <net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.parser.SentenceFactory getInstance()>()"
    "$r1 = <net.sf.marineapi.nmea.sentence.TalkerId: net.sf.marineapi.nmea.sentence.TalkerId II>"
    "$r2 = virtualinvoke r0.<net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.sentence.Sentence createParser(net.sf.marineapi.nmea.sentence.TalkerId,java.lang.String)>($r1, \"MWV\")"
    "r3 = (net.sf.marineapi.nmea.sentence.MWVSentence) $r2"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5)"
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setAngle(double)>(43.7)"
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setTrue(boolean)>(1)"
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeed(double)>(4.54)"
    "$r6 = <net.sf.marineapi.nmea.util.Units: net.sf.marineapi.nmea.util.Units METER>"
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeedUnit(net.sf.marineapi.nmea.util.Units)>($r6)"
    "$r7 = <net.sf.marineapi.nmea.util.DataStatus: net.sf.marineapi.nmea.util.DataStatus ACTIVE>"
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setStatus(net.sf.marineapi.nmea.util.DataStatus)>($r7)"
    "$r8 = <java.lang.System: java.io.PrintStream out>"
    "$r9 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()"
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"r0 = staticinvoke <net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.parser.SentenceFactory getInstance()>()";
    "r0 = staticinvoke <net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.parser.SentenceFactory getInstance()>()"->"$r1 = <net.sf.marineapi.nmea.sentence.TalkerId: net.sf.marineapi.nmea.sentence.TalkerId II>";
    "$r1 = <net.sf.marineapi.nmea.sentence.TalkerId: net.sf.marineapi.nmea.sentence.TalkerId II>"->"$r2 = virtualinvoke r0.<net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.sentence.Sentence createParser(net.sf.marineapi.nmea.sentence.TalkerId,java.lang.String)>($r1, \"MWV\")";
    "$r2 = virtualinvoke r0.<net.sf.marineapi.nmea.parser.SentenceFactory: net.sf.marineapi.nmea.sentence.Sentence createParser(net.sf.marineapi.nmea.sentence.TalkerId,java.lang.String)>($r1, \"MWV\")"->"r3 = (net.sf.marineapi.nmea.sentence.MWVSentence) $r2";
    "r3 = (net.sf.marineapi.nmea.sentence.MWVSentence) $r2"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r5 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()";
    "$r5 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5)";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5)"->"interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setAngle(double)>(43.7)";
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setAngle(double)>(43.7)"->"interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setTrue(boolean)>(1)";
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setTrue(boolean)>(1)"->"interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeed(double)>(4.54)";
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeed(double)>(4.54)"->"$r6 = <net.sf.marineapi.nmea.util.Units: net.sf.marineapi.nmea.util.Units METER>";
    "$r6 = <net.sf.marineapi.nmea.util.Units: net.sf.marineapi.nmea.util.Units METER>"->"interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeedUnit(net.sf.marineapi.nmea.util.Units)>($r6)";
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setSpeedUnit(net.sf.marineapi.nmea.util.Units)>($r6)"->"$r7 = <net.sf.marineapi.nmea.util.DataStatus: net.sf.marineapi.nmea.util.DataStatus ACTIVE>";
    "$r7 = <net.sf.marineapi.nmea.util.DataStatus: net.sf.marineapi.nmea.util.DataStatus ACTIVE>"->"interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setStatus(net.sf.marineapi.nmea.util.DataStatus)>($r7)";
    "interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: void setStatus(net.sf.marineapi.nmea.util.DataStatus)>($r7)"->"$r8 = <java.lang.System: java.io.PrintStream out>";
    "$r8 = <java.lang.System: java.io.PrintStream out>"->"$r9 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()";
    "$r9 = interfaceinvoke r3.<net.sf.marineapi.nmea.sentence.MWVSentence: java.lang.String toSentence()>()"->"virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"return";
}
