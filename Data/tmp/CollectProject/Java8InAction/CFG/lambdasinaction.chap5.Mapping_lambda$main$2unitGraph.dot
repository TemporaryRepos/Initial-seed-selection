digraph "unitGraph" {
    "r0 := @parameter0: java.util.List"
    "r2 := @parameter1: java.lang.Integer"
    "$r1 = interfaceinvoke r0.<java.util.List: java.util.stream.Stream stream()>()"
    "$r3 = staticinvoke <lambdasinaction.chap5.Mapping$lambda_null_1__235: java.util.function.Function bootstrap$(java.lang.Integer)>(r2)"
    "$r4 = interfaceinvoke $r1.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r3)"
    "return $r4"
    "r0 := @parameter0: java.util.List"->"r2 := @parameter1: java.lang.Integer";
    "r2 := @parameter1: java.lang.Integer"->"$r1 = interfaceinvoke r0.<java.util.List: java.util.stream.Stream stream()>()";
    "$r1 = interfaceinvoke r0.<java.util.List: java.util.stream.Stream stream()>()"->"$r3 = staticinvoke <lambdasinaction.chap5.Mapping$lambda_null_1__235: java.util.function.Function bootstrap$(java.lang.Integer)>(r2)";
    "$r3 = staticinvoke <lambdasinaction.chap5.Mapping$lambda_null_1__235: java.util.function.Function bootstrap$(java.lang.Integer)>(r2)"->"$r4 = interfaceinvoke $r1.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r3)";
    "$r4 = interfaceinvoke $r1.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r3)"->"return $r4";
}
