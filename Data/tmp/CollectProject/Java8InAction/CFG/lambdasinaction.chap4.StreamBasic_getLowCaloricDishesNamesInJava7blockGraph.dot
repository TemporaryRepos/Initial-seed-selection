digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = new java.util.ArrayList;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r10 = (lambdasinaction.chap4.Dish) $r8;
$i0 = virtualinvoke r10.<lambdasinaction.chap4.Dish: int getCalories()>();
if $i0 >= 400 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r10);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 5:
[preds: 1 ] [succs: 6 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r11 = $r3;
$r4 = new lambdasinaction.chap4.StreamBasic$1;
specialinvoke $r4.<lambdasinaction.chap4.StreamBasic$1: void <init>()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);
r12 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return r11;
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r5 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();
r6 = (lambdasinaction.chap4.Dish) $r5;
$r7 = virtualinvoke r6.<lambdasinaction.chap4.Dish: java.lang.String getName()>();
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r7);
goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 8:
[preds: 6 ] [succs: ]
return r11;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = new java.util.ArrayList;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = new java.util.ArrayList;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r10 = (lambdasinaction.chap4.Dish) $r8;
$i0 = virtualinvoke r10.<lambdasinaction.chap4.Dish: int getCalories()>();
if $i0 >= 400 goto (branch);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = new java.util.ArrayList;
"->"Block 5:
[preds: 1 ] [succs: 6 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r11 = $r3;
$r4 = new lambdasinaction.chap4.StreamBasic$1;
specialinvoke $r4.<lambdasinaction.chap4.StreamBasic$1: void <init>()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);
r12 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r10 = (lambdasinaction.chap4.Dish) $r8;
$i0 = virtualinvoke r10.<lambdasinaction.chap4.Dish: int getCalories()>();
if $i0 >= 400 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r10);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
r10 = (lambdasinaction.chap4.Dish) $r8;
$i0 = virtualinvoke r10.<lambdasinaction.chap4.Dish: int getCalories()>();
if $i0 >= 400 goto (branch);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r10);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r3 = new java.util.ArrayList;
";
    "Block 5:
[preds: 1 ] [succs: 6 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r11 = $r3;
$r4 = new lambdasinaction.chap4.StreamBasic$1;
specialinvoke $r4.<lambdasinaction.chap4.StreamBasic$1: void <init>()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);
r12 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return r11;
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return r11;
"->"Block 7:
[preds: 6 ] [succs: 6 ]
$r5 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();
r6 = (lambdasinaction.chap4.Dish) $r5;
$r7 = virtualinvoke r6.<lambdasinaction.chap4.Dish: java.lang.String getName()>();
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r7);
goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return r11;
"->"Block 8:
[preds: 6 ] [succs: ]
return r11;
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r5 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();
r6 = (lambdasinaction.chap4.Dish) $r5;
$r7 = virtualinvoke r6.<lambdasinaction.chap4.Dish: java.lang.String getName()>();
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r7);
goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto return r11;
";
}
