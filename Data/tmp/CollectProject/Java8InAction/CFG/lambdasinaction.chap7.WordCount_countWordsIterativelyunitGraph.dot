digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i2 = 0"
    "z1 = 1"
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"
    "i0 = lengthof r1"
    "i3 = 0"
    "if i3 >= i0 goto return i2"
    "c1 = r1[i3]"
    "$z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"
    "if $z0 == 0 goto (branch)"
    "goto [?= i3 = i3 + 1]"
    "if z1 == 0 goto z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"
    "i2 = i2 + 1"
    "z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return i2"
    "r0 := @parameter0: java.lang.String"->"i2 = 0";
    "i2 = 0"->"z1 = 1";
    "z1 = 1"->"r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()";
    "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto return i2";
    "if i3 >= i0 goto return i2"->"c1 = r1[i3]";
    "if i3 >= i0 goto return i2"->"return i2";
    "c1 = r1[i3]"->"$z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)";
    "$z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"->"if $z0 == 0 goto (branch)";
    "if $z0 == 0 goto (branch)"->"z1 = 1";
    "if $z0 == 0 goto (branch)"->"if z1 == 0 goto z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)";
    "z1 = 1"->"goto [?= i3 = i3 + 1]";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "if z1 == 0 goto z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"->"i2 = i2 + 1";
    "if z1 == 0 goto z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"->"z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)";
    "i2 = i2 + 1"->"z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)";
    "z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return i2";
}
