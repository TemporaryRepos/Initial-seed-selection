digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r19 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[8];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r0[4] = $r5;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r0[5] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
$r0[6] = $r7;
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r0[7] = $r8;
r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
$r10 = interfaceinvoke r9.<java.util.List: java.util.stream.Stream stream()>();
$r11 = staticinvoke <lambdasinaction.chap5.Laziness$lambda_main_0__226: java.util.function.Predicate bootstrap$()>();
$r12 = interfaceinvoke $r10.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r11);
$r13 = staticinvoke <lambdasinaction.chap5.Laziness$lambda_main_1__227: java.util.function.Function bootstrap$()>();
$r14 = interfaceinvoke $r12.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r13);
$r15 = interfaceinvoke $r14.<java.util.stream.Stream: java.util.stream.Stream limit(long)>(2L);
$r16 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
$r17 = interfaceinvoke $r15.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r16);
r18 = (java.util.List) $r17;
return;
"
}
