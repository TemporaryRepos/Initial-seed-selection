digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r36 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[5];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r0[4] = $r5;
r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
$r7 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r7);
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();
$r11 = staticinvoke <lambdasinaction.chap5.NumericStreams$println__236: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r9);
interfaceinvoke $r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);
$r12 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r13 = interfaceinvoke $r12.<java.util.List: java.util.stream.Stream stream()>();
$r14 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__237: java.util.function.ToIntFunction bootstrap$()>();
$r15 = interfaceinvoke $r13.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r14);
i0 = interfaceinvoke $r15.<java.util.stream.IntStream: int sum()>();
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Number of calories:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
$r21 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r22 = interfaceinvoke $r21.<java.util.List: java.util.stream.Stream stream()>();
$r23 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__238: java.util.function.ToIntFunction bootstrap$()>();
$r24 = interfaceinvoke $r22.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r23);
r25 = interfaceinvoke $r24.<java.util.stream.IntStream: java.util.OptionalInt max()>();
$z0 = virtualinvoke r25.<java.util.OptionalInt: boolean isPresent()>();
if $z0 == 0 goto i2 = 1;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
i2 = virtualinvoke r25.<java.util.OptionalInt: int getAsInt()>();
goto [?= $r26 = <java.lang.System: java.io.PrintStream out>];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
i2 = 1;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r26.<java.io.PrintStream: void println(int)>(i2);
$r27 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r28 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_0__239: java.util.function.IntPredicate bootstrap$()>();
r29 = interfaceinvoke $r27.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r28);
$r30 = <java.lang.System: java.io.PrintStream out>;
$l1 = interfaceinvoke r29.<java.util.stream.IntStream: long count()>();
virtualinvoke $r30.<java.io.PrintStream: void println(long)>($l1);
$r31 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r32 = interfaceinvoke $r31.<java.util.stream.IntStream: java.util.stream.Stream boxed()>();
$r33 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_3__240: java.util.function.Function bootstrap$()>();
r34 = interfaceinvoke $r32.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>($r33);
$r35 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_4__241: java.util.function.Consumer bootstrap$()>();
interfaceinvoke r34.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r35);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r36 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[5];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r0[4] = $r5;
r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
$r7 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r7);
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();
$r11 = staticinvoke <lambdasinaction.chap5.NumericStreams$println__236: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r9);
interfaceinvoke $r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);
$r12 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r13 = interfaceinvoke $r12.<java.util.List: java.util.stream.Stream stream()>();
$r14 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__237: java.util.function.ToIntFunction bootstrap$()>();
$r15 = interfaceinvoke $r13.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r14);
i0 = interfaceinvoke $r15.<java.util.stream.IntStream: int sum()>();
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Number of calories:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
$r21 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r22 = interfaceinvoke $r21.<java.util.List: java.util.stream.Stream stream()>();
$r23 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__238: java.util.function.ToIntFunction bootstrap$()>();
$r24 = interfaceinvoke $r22.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r23);
r25 = interfaceinvoke $r24.<java.util.stream.IntStream: java.util.OptionalInt max()>();
$z0 = virtualinvoke r25.<java.util.OptionalInt: boolean isPresent()>();
if $z0 == 0 goto i2 = 1;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
i2 = virtualinvoke r25.<java.util.OptionalInt: int getAsInt()>();
goto [?= $r26 = <java.lang.System: java.io.PrintStream out>];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r36 := @parameter0: java.lang.String[];
$r0 = newarray (java.lang.Integer)[5];
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r0[0] = $r1;
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r0[1] = $r2;
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r0[2] = $r3;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r0[3] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
$r0[4] = $r5;
r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
$r7 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray()>();
$r8 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r7);
$r9 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();
$r11 = staticinvoke <lambdasinaction.chap5.NumericStreams$println__236: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r9);
interfaceinvoke $r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r11);
$r12 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r13 = interfaceinvoke $r12.<java.util.List: java.util.stream.Stream stream()>();
$r14 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__237: java.util.function.ToIntFunction bootstrap$()>();
$r15 = interfaceinvoke $r13.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r14);
i0 = interfaceinvoke $r15.<java.util.stream.IntStream: int sum()>();
$r17 = <java.lang.System: java.io.PrintStream out>;
$r16 = new java.lang.StringBuilder;
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Number of calories:\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);
$r21 = <lambdasinaction.chap4.Dish: java.util.List menu>;
$r22 = interfaceinvoke $r21.<java.util.List: java.util.stream.Stream stream()>();
$r23 = staticinvoke <lambdasinaction.chap5.NumericStreams$getCalories__238: java.util.function.ToIntFunction bootstrap$()>();
$r24 = interfaceinvoke $r22.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>($r23);
r25 = interfaceinvoke $r24.<java.util.stream.IntStream: java.util.OptionalInt max()>();
$z0 = virtualinvoke r25.<java.util.OptionalInt: boolean isPresent()>();
if $z0 == 0 goto i2 = 1;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
i2 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
i2 = virtualinvoke r25.<java.util.OptionalInt: int getAsInt()>();
goto [?= $r26 = <java.lang.System: java.io.PrintStream out>];
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r26.<java.io.PrintStream: void println(int)>(i2);
$r27 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r28 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_0__239: java.util.function.IntPredicate bootstrap$()>();
r29 = interfaceinvoke $r27.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r28);
$r30 = <java.lang.System: java.io.PrintStream out>;
$l1 = interfaceinvoke r29.<java.util.stream.IntStream: long count()>();
virtualinvoke $r30.<java.io.PrintStream: void println(long)>($l1);
$r31 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r32 = interfaceinvoke $r31.<java.util.stream.IntStream: java.util.stream.Stream boxed()>();
$r33 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_3__240: java.util.function.Function bootstrap$()>();
r34 = interfaceinvoke $r32.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>($r33);
$r35 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_4__241: java.util.function.Consumer bootstrap$()>();
interfaceinvoke r34.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r35);
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
i2 = 1;
"->"Block 3:
[preds: 1 2 ] [succs: ]
$r26 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r26.<java.io.PrintStream: void println(int)>(i2);
$r27 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r28 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_0__239: java.util.function.IntPredicate bootstrap$()>();
r29 = interfaceinvoke $r27.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r28);
$r30 = <java.lang.System: java.io.PrintStream out>;
$l1 = interfaceinvoke r29.<java.util.stream.IntStream: long count()>();
virtualinvoke $r30.<java.io.PrintStream: void println(long)>($l1);
$r31 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream rangeClosed(int,int)>(1, 100);
$r32 = interfaceinvoke $r31.<java.util.stream.IntStream: java.util.stream.Stream boxed()>();
$r33 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_3__240: java.util.function.Function bootstrap$()>();
r34 = interfaceinvoke $r32.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>($r33);
$r35 = staticinvoke <lambdasinaction.chap5.NumericStreams$lambda_main_4__241: java.util.function.Consumer bootstrap$()>();
interfaceinvoke r34.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r35);
return;
";
}
