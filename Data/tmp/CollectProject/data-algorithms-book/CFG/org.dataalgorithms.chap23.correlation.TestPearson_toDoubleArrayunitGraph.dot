digraph "unitGraph" {
    "r0 := @parameter0: java.util.List"
    "$i0 = interfaceinvoke r0.<java.util.List: int size()>()"
    "r1 = newarray (double)[$i0]"
    "i2 = 0"
    "$i1 = interfaceinvoke r0.<java.util.List: int size()>()"
    "if i2 >= $i1 goto return r1"
    "$r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)"
    "$r3 = (java.lang.Double) $r2"
    "$d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()"
    "r1[i2] = $d0"
    "i2 = i2 + 1"
    "goto [?= $i1 = interfaceinvoke r0.<java.util.List: int size()>()]"
    "return r1"
    "r0 := @parameter0: java.util.List"->"$i0 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i0 = interfaceinvoke r0.<java.util.List: int size()>()"->"r1 = newarray (double)[$i0]";
    "r1 = newarray (double)[$i0]"->"i2 = 0";
    "i2 = 0"->"$i1 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i1 = interfaceinvoke r0.<java.util.List: int size()>()"->"if i2 >= $i1 goto return r1";
    "if i2 >= $i1 goto return r1"->"$r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)";
    "if i2 >= $i1 goto return r1"->"return r1";
    "$r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2)"->"$r3 = (java.lang.Double) $r2";
    "$r3 = (java.lang.Double) $r2"->"$d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()";
    "$d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>()"->"r1[i2] = $d0";
    "r1[i2] = $d0"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= $i1 = interfaceinvoke r0.<java.util.List: int size()>()]";
    "goto [?= $i1 = interfaceinvoke r0.<java.util.List: int size()>()]"->"$i1 = interfaceinvoke r0.<java.util.List: int size()>()";
}
