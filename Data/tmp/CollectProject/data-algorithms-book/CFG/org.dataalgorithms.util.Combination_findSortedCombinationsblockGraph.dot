digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.util.Collection;
i0 := @parameter1: int;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
if i0 != 0 goto $i1 = i0 - 1;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r12 = new java.util.ArrayList;
specialinvoke $r12.<java.util.ArrayList: void <init>()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
return r1;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = i0 - 1;
r3 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r2, $i1);
r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 13 ] [succs: 4 14 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.List) $r5;
r7 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
"
    "Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.lang.Comparable) $r8;
$z1 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z1 == 0 goto $r10 = new java.util.ArrayList;
"
    "Block 7:
[preds: 6 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r10 = new java.util.ArrayList;
specialinvoke $r10.<java.util.ArrayList: void <init>()>();
r11 = $r10;
interfaceinvoke r11.<java.util.List: boolean addAll(java.util.Collection)>(r6);
$z3 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z3 == 0 goto interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
"
    "Block 9:
[preds: 8 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
staticinvoke <java.util.Collections: void sort(java.util.List)>(r11);
$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r11);
if $z5 == 0 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
"
    "Block 11:
[preds: 10 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 12:
[preds: 10 ] [succs: 5 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 13:
[preds: 5 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 14:
[preds: 3 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.util.Collection;
i0 := @parameter1: int;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
if i0 != 0 goto $i1 = i0 - 1;
"->"Block 1:
[preds: 0 ] [succs: ]
$r12 = new java.util.ArrayList;
specialinvoke $r12.<java.util.ArrayList: void <init>()>();
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
return r1;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @parameter0: java.util.Collection;
i0 := @parameter1: int;
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
if i0 != 0 goto $i1 = i0 - 1;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = i0 - 1;
r3 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r2, $i1);
r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$i1 = i0 - 1;
r3 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r2, $i1);
r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 13 ] [succs: 4 14 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
    "Block 3:
[preds: 2 13 ] [succs: 4 14 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.List) $r5;
r7 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
";
    "Block 3:
[preds: 2 13 ] [succs: 4 14 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
"->"Block 14:
[preds: 3 ] [succs: ]
return r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
$r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = (java.util.List) $r5;
r7 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
"->"Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.lang.Comparable) $r8;
$z1 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z1 == 0 goto $r10 = new java.util.ArrayList;
";
    "Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
"->"Block 13:
[preds: 5 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.lang.Comparable) $r8;
$z1 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z1 == 0 goto $r10 = new java.util.ArrayList;
"->"Block 7:
[preds: 6 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.lang.Comparable) $r8;
$z1 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z1 == 0 goto $r10 = new java.util.ArrayList;
"->"Block 8:
[preds: 6 ] [succs: 9 10 ]
$r10 = new java.util.ArrayList;
specialinvoke $r10.<java.util.ArrayList: void <init>()>();
r11 = $r10;
interfaceinvoke r11.<java.util.List: boolean addAll(java.util.Collection)>(r6);
$z3 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z3 == 0 goto interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
";
    "Block 7:
[preds: 6 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r10 = new java.util.ArrayList;
specialinvoke $r10.<java.util.ArrayList: void <init>()>();
r11 = $r10;
interfaceinvoke r11.<java.util.List: boolean addAll(java.util.Collection)>(r6);
$z3 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z3 == 0 goto interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
"->"Block 9:
[preds: 8 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r10 = new java.util.ArrayList;
specialinvoke $r10.<java.util.ArrayList: void <init>()>();
r11 = $r10;
interfaceinvoke r11.<java.util.List: boolean addAll(java.util.Collection)>(r6);
$z3 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9);
if $z3 == 0 goto interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
"->"Block 10:
[preds: 8 ] [succs: 11 12 ]
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
staticinvoke <java.util.Collections: void sort(java.util.List)>(r11);
$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r11);
if $z5 == 0 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
";
    "Block 9:
[preds: 8 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
staticinvoke <java.util.Collections: void sort(java.util.List)>(r11);
$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r11);
if $z5 == 0 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
"->"Block 11:
[preds: 10 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9);
staticinvoke <java.util.Collections: void sort(java.util.List)>(r11);
$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r11);
if $z5 == 0 goto interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
"->"Block 12:
[preds: 10 ] [succs: 5 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 11:
[preds: 10 ] [succs: 5 ]
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 12:
[preds: 10 ] [succs: 5 ]
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);
goto [?= $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 7 9 11 12 ] [succs: 6 13 ]
$z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z8 == 0 goto (branch);
";
    "Block 13:
[preds: 5 ] [succs: 3 ]
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"->"Block 3:
[preds: 2 13 ] [succs: 4 14 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto return r1;
";
}
