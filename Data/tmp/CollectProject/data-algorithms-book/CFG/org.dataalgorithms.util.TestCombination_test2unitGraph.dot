digraph "unitGraph" {
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "$r2 = new org.apache.commons.lang3.tuple.ImmutablePair"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "specialinvoke $r2.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d1\", $r3)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)"
    "$r4 = new org.apache.commons.lang3.tuple.ImmutablePair"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "specialinvoke $r4.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d2\", $r5)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)"
    "$r6 = new org.apache.commons.lang3.tuple.ImmutablePair"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "specialinvoke $r6.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d3\", $r7)"
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)"
    "r8 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r1, 2)"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$i0 = interfaceinvoke r8.<java.util.List: int size()>()"
    "virtualinvoke $r9.<java.io.PrintStream: void println(int)>($i0)"
    "$r10 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.Object)>(r8)"
    "r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()"
    "$z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"
    "if $z3 == 0 goto return"
    "$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"
    "r13 = (java.util.List) $r12"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.Object)>(r13)"
    "goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new org.apache.commons.lang3.tuple.ImmutablePair";
    "$r2 = new org.apache.commons.lang3.tuple.ImmutablePair"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"specialinvoke $r2.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d1\", $r3)";
    "specialinvoke $r2.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d1\", $r3)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2)"->"$r4 = new org.apache.commons.lang3.tuple.ImmutablePair";
    "$r4 = new org.apache.commons.lang3.tuple.ImmutablePair"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"specialinvoke $r4.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d2\", $r5)";
    "specialinvoke $r4.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d2\", $r5)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)"->"$r6 = new org.apache.commons.lang3.tuple.ImmutablePair";
    "$r6 = new org.apache.commons.lang3.tuple.ImmutablePair"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"specialinvoke $r6.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d3\", $r7)";
    "specialinvoke $r6.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(\"d3\", $r7)"->"interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)";
    "interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)"->"r8 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r1, 2)";
    "r8 = staticinvoke <org.dataalgorithms.util.Combination: java.util.List findSortedCombinations(java.util.Collection,int)>(r1, 2)"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$i0 = interfaceinvoke r8.<java.util.List: int size()>()";
    "$i0 = interfaceinvoke r8.<java.util.List: int size()>()"->"virtualinvoke $r9.<java.io.PrintStream: void println(int)>($i0)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(int)>($i0)"->"$r10 = <java.lang.System: java.io.PrintStream out>";
    "$r10 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.Object)>(r8)";
    "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.Object)>(r8)"->"r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()";
    "r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()"->"$z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"->"if $z3 == 0 goto return";
    "if $z3 == 0 goto return"->"$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()";
    "if $z3 == 0 goto return"->"return";
    "$r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"->"r13 = (java.util.List) $r12";
    "r13 = (java.util.List) $r12"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.Object)>(r13)";
    "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.Object)>(r13)"->"goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"->"$z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
}
