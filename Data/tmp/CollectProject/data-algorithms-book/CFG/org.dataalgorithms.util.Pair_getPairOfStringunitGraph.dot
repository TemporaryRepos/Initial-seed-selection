digraph "unitGraph" {
    "r1 := @parameter0: java.lang.String"
    "r2 := @parameter1: java.lang.String"
    "r18 = null"
    "$r0 = new java.util.Scanner"
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1)"
    "r18 = $r0"
    "virtualinvoke r18.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r2)"
    "r3 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"
    "$r5 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str1=\")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r8)"
    "r9 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"
    "$r11 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str2=\")"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r11.<org.apache.log4j.Logger: void info(java.lang.Object)>($r14)"
    "$r15 = new org.dataalgorithms.util.Pair"
    "specialinvoke $r15.<org.dataalgorithms.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r9)"
    "r19 = $r15"
    "if r18 == null goto return r19"
    "virtualinvoke r18.<java.util.Scanner: void close()>()"
    "goto [?= return r19]"
    "$r16 := @caughtexception"
    "r17 = $r16"
    "if r18 == null goto throw r17"
    "throw r17"
    "return r19"
    "r1 := @parameter0: java.lang.String"->"r2 := @parameter1: java.lang.String";
    "r2 := @parameter1: java.lang.String"->"r18 = null";
    "r18 = null"->"$r0 = new java.util.Scanner";
    "r18 = null"->"$r16 := @caughtexception";
    "$r0 = new java.util.Scanner"->"specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1)";
    "$r0 = new java.util.Scanner"->"$r16 := @caughtexception";
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1)"->"r18 = $r0";
    "specialinvoke $r0.<java.util.Scanner: void <init>(java.lang.String)>(r1)"->"$r16 := @caughtexception";
    "r18 = $r0"->"virtualinvoke r18.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r2)";
    "r18 = $r0"->"$r16 := @caughtexception";
    "virtualinvoke r18.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r2)"->"r3 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()";
    "virtualinvoke r18.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>(r2)"->"$r16 := @caughtexception";
    "r3 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"->"$r5 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>";
    "r3 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"->"$r16 := @caughtexception";
    "$r5 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"->"$r4 = new java.lang.StringBuilder";
    "$r5 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"->"$r16 := @caughtexception";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "$r4 = new java.lang.StringBuilder"->"$r16 := @caughtexception";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str1=\")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r16 := @caughtexception";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str1=\")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str1=\")"->"$r16 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r16 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r8)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r16 := @caughtexception";
    "virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r8)"->"r9 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()";
    "virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r8)"->"$r16 := @caughtexception";
    "r9 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"->"$r11 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>";
    "r9 = virtualinvoke r18.<java.util.Scanner: java.lang.String next()>()"->"$r16 := @caughtexception";
    "$r11 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"->"$r10 = new java.lang.StringBuilder";
    "$r11 = <org.dataalgorithms.util.Pair: org.apache.log4j.Logger THE_LOGGER>"->"$r16 := @caughtexception";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "$r10 = new java.lang.StringBuilder"->"$r16 := @caughtexception";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str2=\")";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r16 := @caughtexception";
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str2=\")"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)";
    "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"getPairOfString(): str2=\")"->"$r16 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)"->"$r16 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r11.<org.apache.log4j.Logger: void info(java.lang.Object)>($r14)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r16 := @caughtexception";
    "virtualinvoke $r11.<org.apache.log4j.Logger: void info(java.lang.Object)>($r14)"->"$r15 = new org.dataalgorithms.util.Pair";
    "virtualinvoke $r11.<org.apache.log4j.Logger: void info(java.lang.Object)>($r14)"->"$r16 := @caughtexception";
    "$r15 = new org.dataalgorithms.util.Pair"->"specialinvoke $r15.<org.dataalgorithms.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r9)";
    "$r15 = new org.dataalgorithms.util.Pair"->"$r16 := @caughtexception";
    "specialinvoke $r15.<org.dataalgorithms.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r9)"->"r19 = $r15";
    "specialinvoke $r15.<org.dataalgorithms.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r9)"->"$r16 := @caughtexception";
    "r19 = $r15"->"if r18 == null goto return r19";
    "r19 = $r15"->"$r16 := @caughtexception";
    "if r18 == null goto return r19"->"virtualinvoke r18.<java.util.Scanner: void close()>()";
    "if r18 == null goto return r19"->"return r19";
    "virtualinvoke r18.<java.util.Scanner: void close()>()"->"goto [?= return r19]";
    "goto [?= return r19]"->"return r19";
    "$r16 := @caughtexception"->"r17 = $r16";
    "$r16 := @caughtexception"->"$r16 := @caughtexception";
    "r17 = $r16"->"if r18 == null goto throw r17";
    "r17 = $r16"->"$r16 := @caughtexception";
    "if r18 == null goto throw r17"->"virtualinvoke r18.<java.util.Scanner: void close()>()";
    "if r18 == null goto throw r17"->"throw r17";
    "virtualinvoke r18.<java.util.Scanner: void close()>()"->"throw r17";
}
