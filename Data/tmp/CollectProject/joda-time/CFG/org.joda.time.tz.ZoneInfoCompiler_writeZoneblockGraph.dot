digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r28 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r8 := @parameter1: org.joda.time.tz.DateTimeZoneBuilder;
r2 := @parameter2: org.joda.time.DateTimeZone;
$z0 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z0 == 0 goto $r0 = new java.io.File;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Writing \");
$r24 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r0 = new java.io.File;
$r3 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r3);
r4 = $r0;
$r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
$z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();
if $z1 != 0 goto $r6 = new java.io.FileOutputStream;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r20 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r20.<java.io.File: boolean mkdirs()>();
"
    "Block 4:
[preds: 2 3 ] [succs: 5 8 ]
$r6 = new java.io.FileOutputStream;
specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
r7 = $r6;
"
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r9 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke r8.<org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)>($r9, r7);
"
    "Block 7:
[preds: 6 ] [succs: 11 ]
virtualinvoke r7.<java.io.OutputStream: void close()>();
goto [?= $r10 = new java.io.FileInputStream];
"
    "Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
"
    "Block 9:
[preds: 8 ] [succs: 10 8 ]
r29 = $r27;
"
    "Block 10:
[preds: 9 ] [succs: ]
virtualinvoke r7.<java.io.OutputStream: void close()>();
throw r29;
"
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
$r10 = new java.io.FileInputStream;
specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
r30 = $r10;
$r11 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
r12 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>(r30, $r11);
virtualinvoke r30.<java.io.InputStream: void close()>();
$z2 = virtualinvoke r2.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>(r12);
if $z2 != 0 goto return;
"
    "Block 12:
[preds: 11 ] [succs: 13 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*e* Error in \");
$r16 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Didn\'t read properly from file\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
"
    "Block 13:
[preds: 11 12 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r28 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r8 := @parameter1: org.joda.time.tz.DateTimeZoneBuilder;
r2 := @parameter2: org.joda.time.DateTimeZone;
$z0 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z0 == 0 goto $r0 = new java.io.File;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Writing \");
$r24 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r28 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r8 := @parameter1: org.joda.time.tz.DateTimeZoneBuilder;
r2 := @parameter2: org.joda.time.DateTimeZone;
$z0 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z0 == 0 goto $r0 = new java.io.File;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r0 = new java.io.File;
$r3 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r3);
r4 = $r0;
$r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
$z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();
if $z1 != 0 goto $r6 = new java.io.FileOutputStream;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r22 = <java.lang.System: java.io.PrintStream out>;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Writing \");
$r24 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r0 = new java.io.File;
$r3 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r3);
r4 = $r0;
$r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
$z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();
if $z1 != 0 goto $r6 = new java.io.FileOutputStream;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r0 = new java.io.File;
$r3 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r3);
r4 = $r0;
$r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
$z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();
if $z1 != 0 goto $r6 = new java.io.FileOutputStream;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r20 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r20.<java.io.File: boolean mkdirs()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$r0 = new java.io.File;
$r3 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r3);
r4 = $r0;
$r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
$z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();
if $z1 != 0 goto $r6 = new java.io.FileOutputStream;
"->"Block 4:
[preds: 2 3 ] [succs: 5 8 ]
$r6 = new java.io.FileOutputStream;
specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
r7 = $r6;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r20 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r20.<java.io.File: boolean mkdirs()>();
"->"Block 4:
[preds: 2 3 ] [succs: 5 8 ]
$r6 = new java.io.FileOutputStream;
specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
r7 = $r6;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 8 ]
$r6 = new java.io.FileOutputStream;
specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
r7 = $r6;
"->"Block 5:
[preds: 4 ] [succs: 6 8 ]
$r9 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
";
    "Block 4:
[preds: 2 3 ] [succs: 5 8 ]
$r6 = new java.io.FileOutputStream;
specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
r7 = $r6;
"->"Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r9 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke r8.<org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)>($r9, r7);
";
    "Block 5:
[preds: 4 ] [succs: 6 8 ]
$r9 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke r8.<org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)>($r9, r7);
"->"Block 7:
[preds: 6 ] [succs: 11 ]
virtualinvoke r7.<java.io.OutputStream: void close()>();
goto [?= $r10 = new java.io.FileInputStream];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
virtualinvoke r8.<org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)>($r9, r7);
"->"Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 11 ]
virtualinvoke r7.<java.io.OutputStream: void close()>();
goto [?= $r10 = new java.io.FileInputStream];
"->"Block 11:
[preds: 7 ] [succs: 12 13 ]
$r10 = new java.io.FileInputStream;
specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
r30 = $r10;
$r11 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
r12 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>(r30, $r11);
virtualinvoke r30.<java.io.InputStream: void close()>();
$z2 = virtualinvoke r2.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>(r12);
if $z2 != 0 goto return;
";
    "Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
"->"Block 9:
[preds: 8 ] [succs: 10 8 ]
r29 = $r27;
";
    "Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
"->"Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
";
    "Block 9:
[preds: 8 ] [succs: 10 8 ]
r29 = $r27;
"->"Block 10:
[preds: 9 ] [succs: ]
virtualinvoke r7.<java.io.OutputStream: void close()>();
throw r29;
";
    "Block 9:
[preds: 8 ] [succs: 10 8 ]
r29 = $r27;
"->"Block 8:
[preds: 4 5 6 8 9 ] [succs: 9 8 ]
$r27 := @caughtexception;
";
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
$r10 = new java.io.FileInputStream;
specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
r30 = $r10;
$r11 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
r12 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>(r30, $r11);
virtualinvoke r30.<java.io.InputStream: void close()>();
$z2 = virtualinvoke r2.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>(r12);
if $z2 != 0 goto return;
"->"Block 12:
[preds: 11 ] [succs: 13 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*e* Error in \");
$r16 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Didn\'t read properly from file\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
";
    "Block 11:
[preds: 7 ] [succs: 12 13 ]
$r10 = new java.io.FileInputStream;
specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
r30 = $r10;
$r11 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
r12 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>(r30, $r11);
virtualinvoke r30.<java.io.InputStream: void close()>();
$z2 = virtualinvoke r2.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>(r12);
if $z2 != 0 goto return;
"->"Block 13:
[preds: 11 12 ] [succs: ]
return;
";
    "Block 12:
[preds: 11 ] [succs: 13 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*e* Error in \");
$r16 = virtualinvoke r2.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": Didn\'t read properly from file\");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);
"->"Block 13:
[preds: 11 12 ] [succs: ]
return;
";
}
