digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 23 ]
r5 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r0 := @parameter1: java.io.File[];
if r0 == null goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
i5 = 0;
"
    "Block 2:
[preds: 1 22 ] [succs: 3 23 ]
$i4 = lengthof r0;
if i5 >= $i4 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 17 ]
r95 = null;
"
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$r86 = new java.io.BufferedReader;
"
    "Block 5:
[preds: 4 ] [succs: 6 17 ]
$r87 = new java.io.FileReader;
"
    "Block 6:
[preds: 5 ] [succs: 7 17 ]
$r88 = r0[i5];
"
    "Block 7:
[preds: 6 ] [succs: 8 17 ]
specialinvoke $r87.<java.io.FileReader: void <init>(java.io.File)>($r88);
"
    "Block 8:
[preds: 7 ] [succs: 9 17 ]
specialinvoke $r86.<java.io.BufferedReader: void <init>(java.io.Reader)>($r87);
"
    "Block 9:
[preds: 8 ] [succs: 10 17 ]
r95 = $r86;
"
    "Block 10:
[preds: 9 ] [succs: 11 17 ]
$r90 = \"backward\";
"
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
$r89 = r0[i5];
"
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r91 = virtualinvoke $r89.<java.io.File: java.lang.String getName()>();
"
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$z8 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r91);
"
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
virtualinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader,boolean)>(r95, $z8);
"
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
if r95 == null goto i5 = i5 + 1;
"
    "Block 16:
[preds: 15 ] [succs: 22 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
goto [?= i5 = i5 + 1];
"
    "Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
"
    "Block 18:
[preds: 17 ] [succs: 19 17 ]
r96 = $r94;
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if r95 == null goto throw r96;
"
    "Block 20:
[preds: 19 ] [succs: 21 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
"
    "Block 21:
[preds: 19 20 ] [succs: ]
throw r96;
"
    "Block 22:
[preds: 15 16 ] [succs: 2 ]
i5 = i5 + 1;
goto [?= $i4 = lengthof r0];
"
    "Block 23:
[preds: 0 2 ] [succs: 24 29 ]
if r1 == null goto $r2 = new java.util.TreeMap;
"
    "Block 24:
[preds: 23 ] [succs: 25 27 ]
$z5 = virtualinvoke r1.<java.io.File: boolean exists()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z7 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();
if $z7 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"
    "Block 26:
[preds: 25 ] [succs: ]
$r81 = new java.io.IOException;
$r82 = new java.lang.StringBuilder;
specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();
$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Destination directory doesn\'t exist and cannot be created: \");
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r81.<java.io.IOException: void <init>(java.lang.String)>($r85);
throw $r81;
"
    "Block 27:
[preds: 24 25 ] [succs: 28 29 ]
$z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
if $z6 != 0 goto $r2 = new java.util.TreeMap;
"
    "Block 28:
[preds: 27 ] [succs: ]
$r76 = new java.io.IOException;
$r77 = new java.lang.StringBuilder;
specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Destination is not a directory: \");
$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r76.<java.io.IOException: void <init>(java.lang.String)>($r80);
throw $r76;
"
    "Block 29:
[preds: 23 27 ] [succs: 30 ]
$r2 = new java.util.TreeMap;
specialinvoke $r2.<java.util.TreeMap: void <init>()>();
r97 = $r2;
$r3 = new java.util.TreeMap;
specialinvoke $r3.<java.util.TreeMap: void <init>()>();
r98 = $r3;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Writing zoneinfo files\");
i6 = 0;
"
    "Block 30:
[preds: 29 34 ] [succs: 31 35 ]
$r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$i7 = interfaceinvoke $r99.<java.util.List: int size()>();
if i6 >= $i7 goto i8 = 0;
"
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r66 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$r67 = interfaceinvoke $r66.<java.util.List: java.lang.Object get(int)>(i6);
r100 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r67;
$r68 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r68.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r101 = $r68;
$r69 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r101, $r69);
$r70 = r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: java.lang.String iName>;
r102 = virtualinvoke r101.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>($r70, 1);
$r71 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z4 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r71, r102);
if $z4 == 0 goto i6 = i6 + 1;
"
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r72 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, r102);
$r74 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r74, r100);
if r1 == null goto i6 = i6 + 1;
"
    "Block 33:
[preds: 32 ] [succs: 34 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r101, r102);
"
    "Block 34:
[preds: 31 32 33 ] [succs: 30 ]
i6 = i6 + 1;
goto [?= $r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>];
"
    "Block 35:
[preds: 30 ] [succs: 36 ]
i8 = 0;
"
    "Block 36:
[preds: 35 44 ] [succs: 37 45 ]
$r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i0 = interfaceinvoke $r6.<java.util.List: int size()>();
if i8 >= $i0 goto i9 = 0;
"
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r38 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i8);
r103 = (java.lang.String) $r39;
$r40 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i3 = i8 + 1;
$r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>($i3);
r104 = (java.lang.String) $r41;
$r42 = interfaceinvoke r98.<java.util.Map: java.lang.Object get(java.lang.Object)>(r103);
r105 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r42;
if r105 != null goto $r43 = new org.joda.time.tz.DateTimeZoneBuilder;
"
    "Block 38:
[preds: 37 ] [succs: 44 ]
$r59 = <java.lang.System: java.io.PrintStream out>;
$r58 = new java.lang.StringBuilder;
specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find source zone \'\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r65);
goto [?= i8 = i8 + 2];
"
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
$r43 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r43.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r106 = $r43;
$r44 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r105.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r106, $r44);
r45 = virtualinvoke r106.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>(r104, 1);
$r46 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z3 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r46, r45);
if $z3 == 0 goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r56 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, r45);
if r1 == null goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"
    "Block 41:
[preds: 40 ] [succs: 42 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r106, r45);
"
    "Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
"
    "Block 43:
[preds: 42 ] [succs: 44 ]
$r49 = <java.lang.System: java.io.PrintStream out>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Good link: \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" revived\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);
"
    "Block 44:
[preds: 38 42 43 ] [succs: 36 ]
i8 = i8 + 2;
goto [?= $r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>];
"
    "Block 45:
[preds: 36 ] [succs: 46 ]
i9 = 0;
"
    "Block 46:
[preds: 45 55 ] [succs: 47 56 ]
if i9 >= 2 goto (branch);
"
    "Block 47:
[preds: 46 ] [succs: 48 ]
i10 = 0;
"
    "Block 48:
[preds: 47 54 ] [succs: 49 55 ]
$r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i1 = interfaceinvoke $r15.<java.util.List: int size()>();
if i10 >= $i1 goto i9 = i9 + 1;
"
    "Block 49:
[preds: 48 ] [succs: 50 52 ]
$r16 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i10);
r108 = (java.lang.String) $r17;
$r18 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i2 = i10 + 1;
$r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i2);
r109 = (java.lang.String) $r19;
$r20 = interfaceinvoke r97.<java.util.Map: java.lang.Object get(java.lang.Object)>(r108);
r110 = (org.joda.time.DateTimeZone) $r20;
if r110 != null goto interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
"
    "Block 50:
[preds: 49 ] [succs: 51 54 ]
if i9 <= 0 goto i10 = i10 + 2;
"
    "Block 51:
[preds: 50 ] [succs: 54 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find time zone \'\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r108);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r37);
goto [?= i10 = i10 + 2];
"
    "Block 52:
[preds: 49 ] [succs: 53 54 ]
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
$z2 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z2 == 0 goto i10 = i10 + 2;
"
    "Block 53:
[preds: 52 ] [succs: 54 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Back link: \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r27 = virtualinvoke r110.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29);
"
    "Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
"
    "Block 55:
[preds: 48 ] [succs: 46 ]
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 56:
[preds: 46 ] [succs: 57 70 ]
if r1 == null goto return r97;
"
    "Block 57:
[preds: 56 ] [succs: 58 59 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Writing ZoneInfoMap\");
$r8 = new java.io.File;
specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"ZoneInfoMap\");
r111 = $r8;
$r9 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
$z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r10 = new java.io.FileOutputStream;
"
    "Block 58:
[preds: 57 ] [succs: 59 ]
$r14 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r14.<java.io.File: boolean mkdirs()>();
"
    "Block 59:
[preds: 57 58 ] [succs: 60 67 ]
$r10 = new java.io.FileOutputStream;
specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r111);
r112 = $r10;
$r11 = new java.io.DataOutputStream;
specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r112);
r113 = $r11;
"
    "Block 60:
[preds: 59 ] [succs: 61 67 ]
$r12 = new java.util.TreeMap;
"
    "Block 61:
[preds: 60 ] [succs: 62 67 ]
$r13 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
"
    "Block 62:
[preds: 61 ] [succs: 63 67 ]
specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r13);
"
    "Block 63:
[preds: 62 ] [succs: 64 67 ]
r114 = $r12;
"
    "Block 64:
[preds: 63 ] [succs: 65 67 ]
interfaceinvoke r114.<java.util.Map: void putAll(java.util.Map)>(r97);
"
    "Block 65:
[preds: 64 ] [succs: 66 67 ]
staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>(r113, r114);
"
    "Block 66:
[preds: 65 ] [succs: 70 ]
virtualinvoke r113.<java.io.DataOutputStream: void close()>();
goto [?= return r97];
"
    "Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
"
    "Block 68:
[preds: 67 ] [succs: 69 67 ]
r93 = $r92;
"
    "Block 69:
[preds: 68 ] [succs: ]
virtualinvoke r113.<java.io.DataOutputStream: void close()>();
throw r93;
"
    "Block 70:
[preds: 56 66 ] [succs: ]
return r97;
"
    "Block 0:
[preds: ] [succs: 1 23 ]
r5 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r0 := @parameter1: java.io.File[];
if r0 == null goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
i5 = 0;
";
    "Block 0:
[preds: ] [succs: 1 23 ]
r5 := @this: org.joda.time.tz.ZoneInfoCompiler;
r1 := @parameter0: java.io.File;
r0 := @parameter1: java.io.File[];
if r0 == null goto (branch);
"->"Block 23:
[preds: 0 2 ] [succs: 24 29 ]
if r1 == null goto $r2 = new java.util.TreeMap;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
i5 = 0;
"->"Block 2:
[preds: 1 22 ] [succs: 3 23 ]
$i4 = lengthof r0;
if i5 >= $i4 goto (branch);
";
    "Block 2:
[preds: 1 22 ] [succs: 3 23 ]
$i4 = lengthof r0;
if i5 >= $i4 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 17 ]
r95 = null;
";
    "Block 2:
[preds: 1 22 ] [succs: 3 23 ]
$i4 = lengthof r0;
if i5 >= $i4 goto (branch);
"->"Block 23:
[preds: 0 2 ] [succs: 24 29 ]
if r1 == null goto $r2 = new java.util.TreeMap;
";
    "Block 3:
[preds: 2 ] [succs: 4 17 ]
r95 = null;
"->"Block 4:
[preds: 3 ] [succs: 5 17 ]
$r86 = new java.io.BufferedReader;
";
    "Block 3:
[preds: 2 ] [succs: 4 17 ]
r95 = null;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$r86 = new java.io.BufferedReader;
"->"Block 5:
[preds: 4 ] [succs: 6 17 ]
$r87 = new java.io.FileReader;
";
    "Block 4:
[preds: 3 ] [succs: 5 17 ]
$r86 = new java.io.BufferedReader;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 5:
[preds: 4 ] [succs: 6 17 ]
$r87 = new java.io.FileReader;
"->"Block 6:
[preds: 5 ] [succs: 7 17 ]
$r88 = r0[i5];
";
    "Block 5:
[preds: 4 ] [succs: 6 17 ]
$r87 = new java.io.FileReader;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 6:
[preds: 5 ] [succs: 7 17 ]
$r88 = r0[i5];
"->"Block 7:
[preds: 6 ] [succs: 8 17 ]
specialinvoke $r87.<java.io.FileReader: void <init>(java.io.File)>($r88);
";
    "Block 6:
[preds: 5 ] [succs: 7 17 ]
$r88 = r0[i5];
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 8 17 ]
specialinvoke $r87.<java.io.FileReader: void <init>(java.io.File)>($r88);
"->"Block 8:
[preds: 7 ] [succs: 9 17 ]
specialinvoke $r86.<java.io.BufferedReader: void <init>(java.io.Reader)>($r87);
";
    "Block 7:
[preds: 6 ] [succs: 8 17 ]
specialinvoke $r87.<java.io.FileReader: void <init>(java.io.File)>($r88);
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 8:
[preds: 7 ] [succs: 9 17 ]
specialinvoke $r86.<java.io.BufferedReader: void <init>(java.io.Reader)>($r87);
"->"Block 9:
[preds: 8 ] [succs: 10 17 ]
r95 = $r86;
";
    "Block 8:
[preds: 7 ] [succs: 9 17 ]
specialinvoke $r86.<java.io.BufferedReader: void <init>(java.io.Reader)>($r87);
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 9:
[preds: 8 ] [succs: 10 17 ]
r95 = $r86;
"->"Block 10:
[preds: 9 ] [succs: 11 17 ]
$r90 = \"backward\";
";
    "Block 9:
[preds: 8 ] [succs: 10 17 ]
r95 = $r86;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 10:
[preds: 9 ] [succs: 11 17 ]
$r90 = \"backward\";
"->"Block 11:
[preds: 10 ] [succs: 12 17 ]
$r89 = r0[i5];
";
    "Block 10:
[preds: 9 ] [succs: 11 17 ]
$r90 = \"backward\";
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
$r89 = r0[i5];
"->"Block 12:
[preds: 11 ] [succs: 13 17 ]
$r91 = virtualinvoke $r89.<java.io.File: java.lang.String getName()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 17 ]
$r89 = r0[i5];
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r91 = virtualinvoke $r89.<java.io.File: java.lang.String getName()>();
"->"Block 13:
[preds: 12 ] [succs: 14 17 ]
$z8 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r91);
";
    "Block 12:
[preds: 11 ] [succs: 13 17 ]
$r91 = virtualinvoke $r89.<java.io.File: java.lang.String getName()>();
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$z8 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r91);
"->"Block 14:
[preds: 13 ] [succs: 15 17 ]
virtualinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader,boolean)>(r95, $z8);
";
    "Block 13:
[preds: 12 ] [succs: 14 17 ]
$z8 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>($r91);
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
virtualinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader,boolean)>(r95, $z8);
"->"Block 15:
[preds: 14 ] [succs: 16 22 ]
if r95 == null goto i5 = i5 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 17 ]
virtualinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader,boolean)>(r95, $z8);
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
if r95 == null goto i5 = i5 + 1;
"->"Block 16:
[preds: 15 ] [succs: 22 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
goto [?= i5 = i5 + 1];
";
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
if r95 == null goto i5 = i5 + 1;
"->"Block 22:
[preds: 15 16 ] [succs: 2 ]
i5 = i5 + 1;
goto [?= $i4 = lengthof r0];
";
    "Block 16:
[preds: 15 ] [succs: 22 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
goto [?= i5 = i5 + 1];
"->"Block 22:
[preds: 15 16 ] [succs: 2 ]
i5 = i5 + 1;
goto [?= $i4 = lengthof r0];
";
    "Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
"->"Block 18:
[preds: 17 ] [succs: 19 17 ]
r96 = $r94;
";
    "Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 18:
[preds: 17 ] [succs: 19 17 ]
r96 = $r94;
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
if r95 == null goto throw r96;
";
    "Block 18:
[preds: 17 ] [succs: 19 17 ]
r96 = $r94;
"->"Block 17:
[preds: 3 4 5 6 7 8 9 10 11 12 13 14 17 18 ] [succs: 18 17 ]
$r94 := @caughtexception;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if r95 == null goto throw r96;
"->"Block 20:
[preds: 19 ] [succs: 21 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if r95 == null goto throw r96;
"->"Block 21:
[preds: 19 20 ] [succs: ]
throw r96;
";
    "Block 20:
[preds: 19 ] [succs: 21 ]
virtualinvoke r95.<java.io.BufferedReader: void close()>();
"->"Block 21:
[preds: 19 20 ] [succs: ]
throw r96;
";
    "Block 22:
[preds: 15 16 ] [succs: 2 ]
i5 = i5 + 1;
goto [?= $i4 = lengthof r0];
"->"Block 2:
[preds: 1 22 ] [succs: 3 23 ]
$i4 = lengthof r0;
if i5 >= $i4 goto (branch);
";
    "Block 23:
[preds: 0 2 ] [succs: 24 29 ]
if r1 == null goto $r2 = new java.util.TreeMap;
"->"Block 24:
[preds: 23 ] [succs: 25 27 ]
$z5 = virtualinvoke r1.<java.io.File: boolean exists()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
";
    "Block 23:
[preds: 0 2 ] [succs: 24 29 ]
if r1 == null goto $r2 = new java.util.TreeMap;
"->"Block 29:
[preds: 23 27 ] [succs: 30 ]
$r2 = new java.util.TreeMap;
specialinvoke $r2.<java.util.TreeMap: void <init>()>();
r97 = $r2;
$r3 = new java.util.TreeMap;
specialinvoke $r3.<java.util.TreeMap: void <init>()>();
r98 = $r3;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Writing zoneinfo files\");
i6 = 0;
";
    "Block 24:
[preds: 23 ] [succs: 25 27 ]
$z5 = virtualinvoke r1.<java.io.File: boolean exists()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"->"Block 25:
[preds: 24 ] [succs: 26 27 ]
$z7 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();
if $z7 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
";
    "Block 24:
[preds: 23 ] [succs: 25 27 ]
$z5 = virtualinvoke r1.<java.io.File: boolean exists()>();
if $z5 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 29 ]
$z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
if $z6 != 0 goto $r2 = new java.util.TreeMap;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z7 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();
if $z7 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"->"Block 26:
[preds: 25 ] [succs: ]
$r81 = new java.io.IOException;
$r82 = new java.lang.StringBuilder;
specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();
$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Destination directory doesn\'t exist and cannot be created: \");
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r81.<java.io.IOException: void <init>(java.lang.String)>($r85);
throw $r81;
";
    "Block 25:
[preds: 24 ] [succs: 26 27 ]
$z7 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();
if $z7 != 0 goto $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
"->"Block 27:
[preds: 24 25 ] [succs: 28 29 ]
$z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
if $z6 != 0 goto $r2 = new java.util.TreeMap;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 29 ]
$z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
if $z6 != 0 goto $r2 = new java.util.TreeMap;
"->"Block 28:
[preds: 27 ] [succs: ]
$r76 = new java.io.IOException;
$r77 = new java.lang.StringBuilder;
specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Destination is not a directory: \");
$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r76.<java.io.IOException: void <init>(java.lang.String)>($r80);
throw $r76;
";
    "Block 27:
[preds: 24 25 ] [succs: 28 29 ]
$z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
if $z6 != 0 goto $r2 = new java.util.TreeMap;
"->"Block 29:
[preds: 23 27 ] [succs: 30 ]
$r2 = new java.util.TreeMap;
specialinvoke $r2.<java.util.TreeMap: void <init>()>();
r97 = $r2;
$r3 = new java.util.TreeMap;
specialinvoke $r3.<java.util.TreeMap: void <init>()>();
r98 = $r3;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Writing zoneinfo files\");
i6 = 0;
";
    "Block 29:
[preds: 23 27 ] [succs: 30 ]
$r2 = new java.util.TreeMap;
specialinvoke $r2.<java.util.TreeMap: void <init>()>();
r97 = $r2;
$r3 = new java.util.TreeMap;
specialinvoke $r3.<java.util.TreeMap: void <init>()>();
r98 = $r3;
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Writing zoneinfo files\");
i6 = 0;
"->"Block 30:
[preds: 29 34 ] [succs: 31 35 ]
$r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$i7 = interfaceinvoke $r99.<java.util.List: int size()>();
if i6 >= $i7 goto i8 = 0;
";
    "Block 30:
[preds: 29 34 ] [succs: 31 35 ]
$r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$i7 = interfaceinvoke $r99.<java.util.List: int size()>();
if i6 >= $i7 goto i8 = 0;
"->"Block 31:
[preds: 30 ] [succs: 32 34 ]
$r66 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$r67 = interfaceinvoke $r66.<java.util.List: java.lang.Object get(int)>(i6);
r100 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r67;
$r68 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r68.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r101 = $r68;
$r69 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r101, $r69);
$r70 = r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: java.lang.String iName>;
r102 = virtualinvoke r101.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>($r70, 1);
$r71 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z4 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r71, r102);
if $z4 == 0 goto i6 = i6 + 1;
";
    "Block 30:
[preds: 29 34 ] [succs: 31 35 ]
$r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$i7 = interfaceinvoke $r99.<java.util.List: int size()>();
if i6 >= $i7 goto i8 = 0;
"->"Block 35:
[preds: 30 ] [succs: 36 ]
i8 = 0;
";
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r66 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$r67 = interfaceinvoke $r66.<java.util.List: java.lang.Object get(int)>(i6);
r100 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r67;
$r68 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r68.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r101 = $r68;
$r69 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r101, $r69);
$r70 = r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: java.lang.String iName>;
r102 = virtualinvoke r101.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>($r70, 1);
$r71 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z4 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r71, r102);
if $z4 == 0 goto i6 = i6 + 1;
"->"Block 32:
[preds: 31 ] [succs: 33 34 ]
$r72 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, r102);
$r74 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r74, r100);
if r1 == null goto i6 = i6 + 1;
";
    "Block 31:
[preds: 30 ] [succs: 32 34 ]
$r66 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$r67 = interfaceinvoke $r66.<java.util.List: java.lang.Object get(int)>(i6);
r100 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r67;
$r68 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r68.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r101 = $r68;
$r69 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r101, $r69);
$r70 = r100.<org.joda.time.tz.ZoneInfoCompiler$Zone: java.lang.String iName>;
r102 = virtualinvoke r101.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>($r70, 1);
$r71 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z4 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r71, r102);
if $z4 == 0 goto i6 = i6 + 1;
"->"Block 34:
[preds: 31 32 33 ] [succs: 30 ]
i6 = i6 + 1;
goto [?= $r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>];
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r72 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, r102);
$r74 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r74, r100);
if r1 == null goto i6 = i6 + 1;
"->"Block 33:
[preds: 32 ] [succs: 34 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r101, r102);
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r72 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, r102);
$r74 = virtualinvoke r102.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r74, r100);
if r1 == null goto i6 = i6 + 1;
"->"Block 34:
[preds: 31 32 33 ] [succs: 30 ]
i6 = i6 + 1;
goto [?= $r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>];
";
    "Block 33:
[preds: 32 ] [succs: 34 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r101, r102);
"->"Block 34:
[preds: 31 32 33 ] [succs: 30 ]
i6 = i6 + 1;
goto [?= $r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>];
";
    "Block 34:
[preds: 31 32 33 ] [succs: 30 ]
i6 = i6 + 1;
goto [?= $r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>];
"->"Block 30:
[preds: 29 34 ] [succs: 31 35 ]
$r99 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iZones>;
$i7 = interfaceinvoke $r99.<java.util.List: int size()>();
if i6 >= $i7 goto i8 = 0;
";
    "Block 35:
[preds: 30 ] [succs: 36 ]
i8 = 0;
"->"Block 36:
[preds: 35 44 ] [succs: 37 45 ]
$r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i0 = interfaceinvoke $r6.<java.util.List: int size()>();
if i8 >= $i0 goto i9 = 0;
";
    "Block 36:
[preds: 35 44 ] [succs: 37 45 ]
$r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i0 = interfaceinvoke $r6.<java.util.List: int size()>();
if i8 >= $i0 goto i9 = 0;
"->"Block 37:
[preds: 36 ] [succs: 38 39 ]
$r38 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i8);
r103 = (java.lang.String) $r39;
$r40 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i3 = i8 + 1;
$r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>($i3);
r104 = (java.lang.String) $r41;
$r42 = interfaceinvoke r98.<java.util.Map: java.lang.Object get(java.lang.Object)>(r103);
r105 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r42;
if r105 != null goto $r43 = new org.joda.time.tz.DateTimeZoneBuilder;
";
    "Block 36:
[preds: 35 44 ] [succs: 37 45 ]
$r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i0 = interfaceinvoke $r6.<java.util.List: int size()>();
if i8 >= $i0 goto i9 = 0;
"->"Block 45:
[preds: 36 ] [succs: 46 ]
i9 = 0;
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r38 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i8);
r103 = (java.lang.String) $r39;
$r40 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i3 = i8 + 1;
$r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>($i3);
r104 = (java.lang.String) $r41;
$r42 = interfaceinvoke r98.<java.util.Map: java.lang.Object get(java.lang.Object)>(r103);
r105 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r42;
if r105 != null goto $r43 = new org.joda.time.tz.DateTimeZoneBuilder;
"->"Block 38:
[preds: 37 ] [succs: 44 ]
$r59 = <java.lang.System: java.io.PrintStream out>;
$r58 = new java.lang.StringBuilder;
specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find source zone \'\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r65);
goto [?= i8 = i8 + 2];
";
    "Block 37:
[preds: 36 ] [succs: 38 39 ]
$r38 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i8);
r103 = (java.lang.String) $r39;
$r40 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i3 = i8 + 1;
$r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>($i3);
r104 = (java.lang.String) $r41;
$r42 = interfaceinvoke r98.<java.util.Map: java.lang.Object get(java.lang.Object)>(r103);
r105 = (org.joda.time.tz.ZoneInfoCompiler$Zone) $r42;
if r105 != null goto $r43 = new org.joda.time.tz.DateTimeZoneBuilder;
"->"Block 39:
[preds: 37 ] [succs: 40 42 ]
$r43 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r43.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r106 = $r43;
$r44 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r105.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r106, $r44);
r45 = virtualinvoke r106.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>(r104, 1);
$r46 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z3 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r46, r45);
if $z3 == 0 goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
";
    "Block 38:
[preds: 37 ] [succs: 44 ]
$r59 = <java.lang.System: java.io.PrintStream out>;
$r58 = new java.lang.StringBuilder;
specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
$r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find source zone \'\");
$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r65);
goto [?= i8 = i8 + 2];
"->"Block 44:
[preds: 38 42 43 ] [succs: 36 ]
i8 = i8 + 2;
goto [?= $r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>];
";
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
$r43 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r43.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r106 = $r43;
$r44 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r105.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r106, $r44);
r45 = virtualinvoke r106.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>(r104, 1);
$r46 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z3 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r46, r45);
if $z3 == 0 goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 40:
[preds: 39 ] [succs: 41 42 ]
$r56 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, r45);
if r1 == null goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
";
    "Block 39:
[preds: 37 ] [succs: 40 42 ]
$r43 = new org.joda.time.tz.DateTimeZoneBuilder;
specialinvoke $r43.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>();
r106 = $r43;
$r44 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map iRuleSets>;
virtualinvoke r105.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>(r106, $r44);
r45 = virtualinvoke r106.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>(r104, 1);
$r46 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$z3 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r46, r45);
if $z3 == 0 goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r56 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, r45);
if r1 == null goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 41:
[preds: 40 ] [succs: 42 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r106, r45);
";
    "Block 40:
[preds: 39 ] [succs: 41 42 ]
$r56 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, r45);
if r1 == null goto $r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
"->"Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
";
    "Block 41:
[preds: 40 ] [succs: 42 ]
specialinvoke r5.<org.joda.time.tz.ZoneInfoCompiler: void writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)>(r1, r106, r45);
"->"Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
";
    "Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
"->"Block 43:
[preds: 42 ] [succs: 44 ]
$r49 = <java.lang.System: java.io.PrintStream out>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Good link: \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" revived\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);
";
    "Block 42:
[preds: 39 40 41 ] [succs: 43 44 ]
$r107 = virtualinvoke r45.<org.joda.time.DateTimeZone: java.lang.String getID()>();
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, r45);
$z9 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z9 == 0 goto i8 = i8 + 2;
"->"Block 44:
[preds: 38 42 43 ] [succs: 36 ]
i8 = i8 + 2;
goto [?= $r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>];
";
    "Block 43:
[preds: 42 ] [succs: 44 ]
$r49 = <java.lang.System: java.io.PrintStream out>;
$r48 = new java.lang.StringBuilder;
specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
$r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Good link: \");
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" revived\");
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);
"->"Block 44:
[preds: 38 42 43 ] [succs: 36 ]
i8 = i8 + 2;
goto [?= $r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>];
";
    "Block 44:
[preds: 38 42 43 ] [succs: 36 ]
i8 = i8 + 2;
goto [?= $r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>];
"->"Block 36:
[preds: 35 44 ] [succs: 37 45 ]
$r6 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iGoodLinks>;
$i0 = interfaceinvoke $r6.<java.util.List: int size()>();
if i8 >= $i0 goto i9 = 0;
";
    "Block 45:
[preds: 36 ] [succs: 46 ]
i9 = 0;
"->"Block 46:
[preds: 45 55 ] [succs: 47 56 ]
if i9 >= 2 goto (branch);
";
    "Block 46:
[preds: 45 55 ] [succs: 47 56 ]
if i9 >= 2 goto (branch);
"->"Block 47:
[preds: 46 ] [succs: 48 ]
i10 = 0;
";
    "Block 46:
[preds: 45 55 ] [succs: 47 56 ]
if i9 >= 2 goto (branch);
"->"Block 56:
[preds: 46 ] [succs: 57 70 ]
if r1 == null goto return r97;
";
    "Block 47:
[preds: 46 ] [succs: 48 ]
i10 = 0;
"->"Block 48:
[preds: 47 54 ] [succs: 49 55 ]
$r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i1 = interfaceinvoke $r15.<java.util.List: int size()>();
if i10 >= $i1 goto i9 = i9 + 1;
";
    "Block 48:
[preds: 47 54 ] [succs: 49 55 ]
$r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i1 = interfaceinvoke $r15.<java.util.List: int size()>();
if i10 >= $i1 goto i9 = i9 + 1;
"->"Block 49:
[preds: 48 ] [succs: 50 52 ]
$r16 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i10);
r108 = (java.lang.String) $r17;
$r18 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i2 = i10 + 1;
$r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i2);
r109 = (java.lang.String) $r19;
$r20 = interfaceinvoke r97.<java.util.Map: java.lang.Object get(java.lang.Object)>(r108);
r110 = (org.joda.time.DateTimeZone) $r20;
if r110 != null goto interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
";
    "Block 48:
[preds: 47 54 ] [succs: 49 55 ]
$r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i1 = interfaceinvoke $r15.<java.util.List: int size()>();
if i10 >= $i1 goto i9 = i9 + 1;
"->"Block 55:
[preds: 48 ] [succs: 46 ]
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 49:
[preds: 48 ] [succs: 50 52 ]
$r16 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i10);
r108 = (java.lang.String) $r17;
$r18 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i2 = i10 + 1;
$r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i2);
r109 = (java.lang.String) $r19;
$r20 = interfaceinvoke r97.<java.util.Map: java.lang.Object get(java.lang.Object)>(r108);
r110 = (org.joda.time.DateTimeZone) $r20;
if r110 != null goto interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
"->"Block 50:
[preds: 49 ] [succs: 51 54 ]
if i9 <= 0 goto i10 = i10 + 2;
";
    "Block 49:
[preds: 48 ] [succs: 50 52 ]
$r16 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i10);
r108 = (java.lang.String) $r17;
$r18 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i2 = i10 + 1;
$r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i2);
r109 = (java.lang.String) $r19;
$r20 = interfaceinvoke r97.<java.util.Map: java.lang.Object get(java.lang.Object)>(r108);
r110 = (org.joda.time.DateTimeZone) $r20;
if r110 != null goto interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
"->"Block 52:
[preds: 49 ] [succs: 53 54 ]
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
$z2 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z2 == 0 goto i10 = i10 + 2;
";
    "Block 50:
[preds: 49 ] [succs: 51 54 ]
if i9 <= 0 goto i10 = i10 + 2;
"->"Block 51:
[preds: 50 ] [succs: 54 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find time zone \'\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r108);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r37);
goto [?= i10 = i10 + 2];
";
    "Block 50:
[preds: 49 ] [succs: 51 54 ]
if i9 <= 0 goto i10 = i10 + 2;
"->"Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
";
    "Block 51:
[preds: 50 ] [succs: 54 ]
$r31 = <java.lang.System: java.io.PrintStream out>;
$r30 = new java.lang.StringBuilder;
specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot find time zone \'\");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r108);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to link alias \'\");
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' to\");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r37);
goto [?= i10 = i10 + 2];
"->"Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
";
    "Block 52:
[preds: 49 ] [succs: 53 54 ]
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
$z2 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z2 == 0 goto i10 = i10 + 2;
"->"Block 53:
[preds: 52 ] [succs: 54 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Back link: \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r27 = virtualinvoke r110.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29);
";
    "Block 52:
[preds: 49 ] [succs: 53 54 ]
interfaceinvoke r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, r110);
$z2 = staticinvoke <org.joda.time.tz.ZoneInfoLogger: boolean verbose()>();
if $z2 == 0 goto i10 = i10 + 2;
"->"Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
";
    "Block 53:
[preds: 52 ] [succs: 54 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r22 = new java.lang.StringBuilder;
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Back link: \");
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r109);
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" -> \");
$r27 = virtualinvoke r110.<org.joda.time.DateTimeZone: java.lang.String getID()>();
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29);
"->"Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
";
    "Block 54:
[preds: 50 51 52 53 ] [succs: 48 ]
i10 = i10 + 2;
goto [?= $r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>];
"->"Block 48:
[preds: 47 54 ] [succs: 49 55 ]
$r15 = r5.<org.joda.time.tz.ZoneInfoCompiler: java.util.List iBackLinks>;
$i1 = interfaceinvoke $r15.<java.util.List: int size()>();
if i10 >= $i1 goto i9 = i9 + 1;
";
    "Block 55:
[preds: 48 ] [succs: 46 ]
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 46:
[preds: 45 55 ] [succs: 47 56 ]
if i9 >= 2 goto (branch);
";
    "Block 56:
[preds: 46 ] [succs: 57 70 ]
if r1 == null goto return r97;
"->"Block 57:
[preds: 56 ] [succs: 58 59 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Writing ZoneInfoMap\");
$r8 = new java.io.File;
specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"ZoneInfoMap\");
r111 = $r8;
$r9 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
$z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r10 = new java.io.FileOutputStream;
";
    "Block 56:
[preds: 46 ] [succs: 57 70 ]
if r1 == null goto return r97;
"->"Block 70:
[preds: 56 66 ] [succs: ]
return r97;
";
    "Block 57:
[preds: 56 ] [succs: 58 59 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Writing ZoneInfoMap\");
$r8 = new java.io.File;
specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"ZoneInfoMap\");
r111 = $r8;
$r9 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
$z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r10 = new java.io.FileOutputStream;
"->"Block 58:
[preds: 57 ] [succs: 59 ]
$r14 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r14.<java.io.File: boolean mkdirs()>();
";
    "Block 57:
[preds: 56 ] [succs: 58 59 ]
$r7 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(\"Writing ZoneInfoMap\");
$r8 = new java.io.File;
specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, \"ZoneInfoMap\");
r111 = $r8;
$r9 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
$z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();
if $z0 != 0 goto $r10 = new java.io.FileOutputStream;
"->"Block 59:
[preds: 57 58 ] [succs: 60 67 ]
$r10 = new java.io.FileOutputStream;
specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r111);
r112 = $r10;
$r11 = new java.io.DataOutputStream;
specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r112);
r113 = $r11;
";
    "Block 58:
[preds: 57 ] [succs: 59 ]
$r14 = virtualinvoke r111.<java.io.File: java.io.File getParentFile()>();
virtualinvoke $r14.<java.io.File: boolean mkdirs()>();
"->"Block 59:
[preds: 57 58 ] [succs: 60 67 ]
$r10 = new java.io.FileOutputStream;
specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r111);
r112 = $r10;
$r11 = new java.io.DataOutputStream;
specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r112);
r113 = $r11;
";
    "Block 59:
[preds: 57 58 ] [succs: 60 67 ]
$r10 = new java.io.FileOutputStream;
specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r111);
r112 = $r10;
$r11 = new java.io.DataOutputStream;
specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r112);
r113 = $r11;
"->"Block 60:
[preds: 59 ] [succs: 61 67 ]
$r12 = new java.util.TreeMap;
";
    "Block 59:
[preds: 57 58 ] [succs: 60 67 ]
$r10 = new java.io.FileOutputStream;
specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r111);
r112 = $r10;
$r11 = new java.io.DataOutputStream;
specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r112);
r113 = $r11;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 60:
[preds: 59 ] [succs: 61 67 ]
$r12 = new java.util.TreeMap;
"->"Block 61:
[preds: 60 ] [succs: 62 67 ]
$r13 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
";
    "Block 60:
[preds: 59 ] [succs: 61 67 ]
$r12 = new java.util.TreeMap;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 61:
[preds: 60 ] [succs: 62 67 ]
$r13 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
"->"Block 62:
[preds: 61 ] [succs: 63 67 ]
specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r13);
";
    "Block 61:
[preds: 60 ] [succs: 62 67 ]
$r13 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 62:
[preds: 61 ] [succs: 63 67 ]
specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r13);
"->"Block 63:
[preds: 62 ] [succs: 64 67 ]
r114 = $r12;
";
    "Block 62:
[preds: 61 ] [succs: 63 67 ]
specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r13);
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 63:
[preds: 62 ] [succs: 64 67 ]
r114 = $r12;
"->"Block 64:
[preds: 63 ] [succs: 65 67 ]
interfaceinvoke r114.<java.util.Map: void putAll(java.util.Map)>(r97);
";
    "Block 63:
[preds: 62 ] [succs: 64 67 ]
r114 = $r12;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 64:
[preds: 63 ] [succs: 65 67 ]
interfaceinvoke r114.<java.util.Map: void putAll(java.util.Map)>(r97);
"->"Block 65:
[preds: 64 ] [succs: 66 67 ]
staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>(r113, r114);
";
    "Block 64:
[preds: 63 ] [succs: 65 67 ]
interfaceinvoke r114.<java.util.Map: void putAll(java.util.Map)>(r97);
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 65:
[preds: 64 ] [succs: 66 67 ]
staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>(r113, r114);
"->"Block 66:
[preds: 65 ] [succs: 70 ]
virtualinvoke r113.<java.io.DataOutputStream: void close()>();
goto [?= return r97];
";
    "Block 65:
[preds: 64 ] [succs: 66 67 ]
staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>(r113, r114);
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 66:
[preds: 65 ] [succs: 70 ]
virtualinvoke r113.<java.io.DataOutputStream: void close()>();
goto [?= return r97];
"->"Block 70:
[preds: 56 66 ] [succs: ]
return r97;
";
    "Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
"->"Block 68:
[preds: 67 ] [succs: 69 67 ]
r93 = $r92;
";
    "Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
    "Block 68:
[preds: 67 ] [succs: 69 67 ]
r93 = $r92;
"->"Block 69:
[preds: 68 ] [succs: ]
virtualinvoke r113.<java.io.DataOutputStream: void close()>();
throw r93;
";
    "Block 68:
[preds: 67 ] [succs: 69 67 ]
r93 = $r92;
"->"Block 67:
[preds: 59 60 61 62 63 64 65 67 68 ] [succs: 68 67 ]
$r92 := @caughtexception;
";
}
