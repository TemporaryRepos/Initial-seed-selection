digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String;
r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();
$r1 = new org.joda.time.MutableDateTime;
$r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>();
specialinvoke $r1.<org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)>(0L, $r2);
r3 = $r1;
b3 = 0;
$z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\");
if $z0 == 0 goto i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
b3 = 1;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
$i1 = b3 ^ -1;
if i0 != $i1 goto $l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r4);
throw $r5;
"
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
i4 = (int) $l2;
if b3 != 1 goto return i4;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = neg i4;
"
    "Block 6:
[preds: 4 5 ] [succs: ]
return i4;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String;
r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();
$r1 = new org.joda.time.MutableDateTime;
$r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>();
specialinvoke $r1.<org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)>(0L, $r2);
r3 = $r1;
b3 = 0;
$z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\");
if $z0 == 0 goto i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
b3 = 1;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r4 := @parameter0: java.lang.String;
r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();
$r1 = new org.joda.time.MutableDateTime;
$r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>();
specialinvoke $r1.<org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)>(0L, $r2);
r3 = $r1;
b3 = 0;
$z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(\"-\");
if $z0 == 0 goto i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
$i1 = b3 ^ -1;
if i0 != $i1 goto $l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
b3 = 1;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
$i1 = b3 ^ -1;
if i0 != $i1 goto $l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
$i1 = b3 ^ -1;
if i0 != $i1 goto $l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
"->"Block 3:
[preds: 2 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r4);
throw $r5;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
i0 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>(r3, r4, b3);
$i1 = b3 ^ -1;
if i0 != $i1 goto $l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
"->"Block 4:
[preds: 2 ] [succs: 5 6 ]
$l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
i4 = (int) $l2;
if b3 != 1 goto return i4;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
i4 = (int) $l2;
if b3 != 1 goto return i4;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i4 = neg i4;
";
    "Block 4:
[preds: 2 ] [succs: 5 6 ]
$l2 = virtualinvoke r3.<org.joda.time.MutableDateTime: long getMillis()>();
i4 = (int) $l2;
if b3 != 1 goto return i4;
"->"Block 6:
[preds: 4 5 ] [succs: ]
return i4;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i4 = neg i4;
"->"Block 6:
[preds: 4 5 ] [succs: ]
return i4;
";
}
