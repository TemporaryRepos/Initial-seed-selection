digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 != 0 goto r19 = null"
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"
    "return"
    "r19 = null"
    "r20 = null"
    "z4 = 0"
    "i7 = 0"
    "$i1 = lengthof r0"
    "if i7 >= $i1 goto $i2 = lengthof r0"
    "$r7 = \"-src\""
    "$r6 = r0[i7]"
    "$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)"
    "if $z0 == 0 goto $r9 = \"-dst\""
    "$r16 = new java.io.File"
    "i7 = i7 + 1"
    "$r17 = r0[i7]"
    "specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17)"
    "r19 = $r16"
    "goto [?= (branch)]"
    "$r9 = \"-dst\""
    "$r8 = r0[i7]"
    "$z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8)"
    "if $z1 == 0 goto $r11 = \"-verbose\""
    "$r14 = new java.io.File"
    "$r15 = r0[i7]"
    "specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r15)"
    "r20 = $r14"
    "$r11 = \"-verbose\""
    "$r10 = r0[i7]"
    "$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10)"
    "if $z2 == 0 goto $r13 = \"-?\""
    "z4 = 1"
    "$r13 = \"-?\""
    "$r12 = r0[i7]"
    "$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)"
    "if $z3 == 0 goto (branch)"
    "goto [?= $i2 = lengthof r0]"
    "goto [?= i7 = i7 + 1]"
    "$r18 := @caughtexception"
    "r21 = $r18"
    "goto [?= $i1 = lengthof r0]"
    "$i2 = lengthof r0"
    "if i7 < $i2 goto $i3 = lengthof r0"
    "$i3 = lengthof r0"
    "$i4 = $i3 - i7"
    "r22 = newarray (java.io.File)[$i4]"
    "i8 = 0"
    "$i5 = lengthof r0"
    "if i7 >= $i5 goto staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)"
    "$i6 = i8"
    "if r19 != null goto $r23 = new java.io.File"
    "$r23 = new java.io.File"
    "$r4 = r0[i7]"
    "specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r4)"
    "goto [?= r22[$i6] = $r23]"
    "$r3 = r0[i7]"
    "specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>(r19, $r3)"
    "r22[$i6] = $r23"
    "i8 = i8 + 1"
    "goto [?= $i5 = lengthof r0]"
    "staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)"
    "$r1 = new org.joda.time.tz.ZoneInfoCompiler"
    "specialinvoke $r1.<org.joda.time.tz.ZoneInfoCompiler: void <init>()>()"
    "r24 = $r1"
    "virtualinvoke r24.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>(r20, r22)"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 0 goto r19 = null";
    "if $i0 != 0 goto r19 = null"->"staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()";
    "if $i0 != 0 goto r19 = null"->"r19 = null";
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"->"return";
    "r19 = null"->"r20 = null";
    "r20 = null"->"z4 = 0";
    "z4 = 0"->"i7 = 0";
    "i7 = 0"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if i7 >= $i1 goto $i2 = lengthof r0";
    "if i7 >= $i1 goto $i2 = lengthof r0"->"$r7 = \"-src\"";
    "if i7 >= $i1 goto $i2 = lengthof r0"->"$i2 = lengthof r0";
    "if i7 >= $i1 goto $i2 = lengthof r0"->"$r18 := @caughtexception";
    "$r7 = \"-src\""->"$r6 = r0[i7]";
    "$r7 = \"-src\""->"$r18 := @caughtexception";
    "$r6 = r0[i7]"->"$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)";
    "$r6 = r0[i7]"->"$r18 := @caughtexception";
    "$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)"->"if $z0 == 0 goto $r9 = \"-dst\"";
    "$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)"->"$r18 := @caughtexception";
    "if $z0 == 0 goto $r9 = \"-dst\""->"$r16 = new java.io.File";
    "if $z0 == 0 goto $r9 = \"-dst\""->"$r9 = \"-dst\"";
    "if $z0 == 0 goto $r9 = \"-dst\""->"$r18 := @caughtexception";
    "$r16 = new java.io.File"->"i7 = i7 + 1";
    "$r16 = new java.io.File"->"$r18 := @caughtexception";
    "i7 = i7 + 1"->"$r17 = r0[i7]";
    "i7 = i7 + 1"->"$r18 := @caughtexception";
    "$r17 = r0[i7]"->"specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17)";
    "$r17 = r0[i7]"->"$r18 := @caughtexception";
    "specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17)"->"r19 = $r16";
    "specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17)"->"$r18 := @caughtexception";
    "r19 = $r16"->"goto [?= (branch)]";
    "r19 = $r16"->"$r18 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i7 = i7 + 1]";
    "goto [?= (branch)]"->"$r18 := @caughtexception";
    "$r9 = \"-dst\""->"$r8 = r0[i7]";
    "$r9 = \"-dst\""->"$r18 := @caughtexception";
    "$r8 = r0[i7]"->"$z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8)";
    "$r8 = r0[i7]"->"$r18 := @caughtexception";
    "$z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8)"->"if $z1 == 0 goto $r11 = \"-verbose\"";
    "$z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8)"->"$r18 := @caughtexception";
    "if $z1 == 0 goto $r11 = \"-verbose\""->"$r14 = new java.io.File";
    "if $z1 == 0 goto $r11 = \"-verbose\""->"$r11 = \"-verbose\"";
    "if $z1 == 0 goto $r11 = \"-verbose\""->"$r18 := @caughtexception";
    "$r14 = new java.io.File"->"i7 = i7 + 1";
    "$r14 = new java.io.File"->"$r18 := @caughtexception";
    "i7 = i7 + 1"->"$r15 = r0[i7]";
    "i7 = i7 + 1"->"$r18 := @caughtexception";
    "$r15 = r0[i7]"->"specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r15)";
    "$r15 = r0[i7]"->"$r18 := @caughtexception";
    "specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r15)"->"r20 = $r14";
    "specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r15)"->"$r18 := @caughtexception";
    "r20 = $r14"->"goto [?= (branch)]";
    "r20 = $r14"->"$r18 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i7 = i7 + 1]";
    "goto [?= (branch)]"->"$r18 := @caughtexception";
    "$r11 = \"-verbose\""->"$r10 = r0[i7]";
    "$r11 = \"-verbose\""->"$r18 := @caughtexception";
    "$r10 = r0[i7]"->"$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10)";
    "$r10 = r0[i7]"->"$r18 := @caughtexception";
    "$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"if $z2 == 0 goto $r13 = \"-?\"";
    "$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10)"->"$r18 := @caughtexception";
    "if $z2 == 0 goto $r13 = \"-?\""->"z4 = 1";
    "if $z2 == 0 goto $r13 = \"-?\""->"$r13 = \"-?\"";
    "if $z2 == 0 goto $r13 = \"-?\""->"$r18 := @caughtexception";
    "z4 = 1"->"goto [?= (branch)]";
    "z4 = 1"->"$r18 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= i7 = i7 + 1]";
    "goto [?= (branch)]"->"$r18 := @caughtexception";
    "$r13 = \"-?\""->"$r12 = r0[i7]";
    "$r13 = \"-?\""->"$r18 := @caughtexception";
    "$r12 = r0[i7]"->"$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)";
    "$r12 = r0[i7]"->"$r18 := @caughtexception";
    "$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)"->"if $z3 == 0 goto (branch)";
    "$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)"->"$r18 := @caughtexception";
    "if $z3 == 0 goto (branch)"->"staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()";
    "if $z3 == 0 goto (branch)"->"goto [?= $i2 = lengthof r0]";
    "if $z3 == 0 goto (branch)"->"$r18 := @caughtexception";
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"->"return";
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"->"$r18 := @caughtexception";
    "goto [?= $i2 = lengthof r0]"->"$i2 = lengthof r0";
    "goto [?= i7 = i7 + 1]"->"i7 = i7 + 1";
    "$r18 := @caughtexception"->"r21 = $r18";
    "r21 = $r18"->"staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()";
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"->"return";
    "i7 = i7 + 1"->"goto [?= $i1 = lengthof r0]";
    "goto [?= $i1 = lengthof r0]"->"$i1 = lengthof r0";
    "$i2 = lengthof r0"->"if i7 < $i2 goto $i3 = lengthof r0";
    "if i7 < $i2 goto $i3 = lengthof r0"->"staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()";
    "if i7 < $i2 goto $i3 = lengthof r0"->"$i3 = lengthof r0";
    "staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()"->"return";
    "$i3 = lengthof r0"->"$i4 = $i3 - i7";
    "$i4 = $i3 - i7"->"r22 = newarray (java.io.File)[$i4]";
    "r22 = newarray (java.io.File)[$i4]"->"i8 = 0";
    "i8 = 0"->"$i5 = lengthof r0";
    "$i5 = lengthof r0"->"if i7 >= $i5 goto staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)";
    "if i7 >= $i5 goto staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)"->"$i6 = i8";
    "if i7 >= $i5 goto staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)"->"staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)";
    "$i6 = i8"->"if r19 != null goto $r23 = new java.io.File";
    "if r19 != null goto $r23 = new java.io.File"->"$r23 = new java.io.File";
    "if r19 != null goto $r23 = new java.io.File"->"$r23 = new java.io.File";
    "$r23 = new java.io.File"->"$r4 = r0[i7]";
    "$r4 = r0[i7]"->"specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r4)";
    "specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r4)"->"goto [?= r22[$i6] = $r23]";
    "goto [?= r22[$i6] = $r23]"->"r22[$i6] = $r23";
    "$r23 = new java.io.File"->"$r3 = r0[i7]";
    "$r3 = r0[i7]"->"specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>(r19, $r3)";
    "specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>(r19, $r3)"->"r22[$i6] = $r23";
    "r22[$i6] = $r23"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i5 = lengthof r0]";
    "goto [?= $i5 = lengthof r0]"->"$i5 = lengthof r0";
    "staticinvoke <org.joda.time.tz.ZoneInfoLogger: void set(boolean)>(z4)"->"$r1 = new org.joda.time.tz.ZoneInfoCompiler";
    "$r1 = new org.joda.time.tz.ZoneInfoCompiler"->"specialinvoke $r1.<org.joda.time.tz.ZoneInfoCompiler: void <init>()>()";
    "specialinvoke $r1.<org.joda.time.tz.ZoneInfoCompiler: void <init>()>()"->"r24 = $r1";
    "r24 = $r1"->"virtualinvoke r24.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>(r20, r22)";
    "virtualinvoke r24.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>(r20, r22)"->"return";
}
