digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
$r0 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
r1 = staticinvoke <java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open(java.net.ProtocolFamily)>($r0);
$r2 = <java.net.StandardSocketOptions: java.net.SocketOption SO_REUSEADDR>;
$r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r2, $r3);
$r5 = <java.net.StandardSocketOptions: java.net.SocketOption SO_SNDBUF>;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097152);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r5, $r6);
$r8 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_IF>;
$r9 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>(\"lo\");
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r8, $r9);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(1);
r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(8);
$r13 = new java.net.InetSocketAddress;
specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(\"239.8.128.3\", 9999);
r14 = $r13;
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 5000000 goto virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l0 = staticinvoke <java.lang.System: long nanoTime()>();
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
virtualinvoke r1.<java.nio.channels.DatagramChannel: int send(java.nio.ByteBuffer,java.net.SocketAddress)>(r12, r14);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"done\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r19 := @parameter0: java.lang.String[];
$r0 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
r1 = staticinvoke <java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open(java.net.ProtocolFamily)>($r0);
$r2 = <java.net.StandardSocketOptions: java.net.SocketOption SO_REUSEADDR>;
$r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r2, $r3);
$r5 = <java.net.StandardSocketOptions: java.net.SocketOption SO_SNDBUF>;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097152);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r5, $r6);
$r8 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_IF>;
$r9 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>(\"lo\");
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>($r8, $r9);
virtualinvoke r1.<java.nio.channels.DatagramChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(1);
r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(8);
$r13 = new java.net.InetSocketAddress;
specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(\"239.8.128.3\", 9999);
r14 = $r13;
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 5000000 goto virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 5000000 goto virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$l0 = staticinvoke <java.lang.System: long nanoTime()>();
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
virtualinvoke r1.<java.nio.channels.DatagramChannel: int send(java.nio.ByteBuffer,java.net.SocketAddress)>(r12, r14);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 5000000 goto virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
$r15 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(\"done\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$l0 = staticinvoke <java.lang.System: long nanoTime()>();
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
virtualinvoke r1.<java.nio.channels.DatagramChannel: int send(java.nio.ByteBuffer,java.net.SocketAddress)>(r12, r14);
virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 5000000 goto virtualinvoke r1.<java.nio.channels.DatagramChannel: void close()>();
";
}
