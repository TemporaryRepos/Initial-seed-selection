digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
r3 := @parameter0: java.lang.String[];
"
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = newarray (java.lang.String)[1];
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
$r0[0] = \"Hello\";
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
"
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
r3 := @parameter0: java.lang.String[];
"->"Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = newarray (java.lang.String)[1];
";
    "Block 0:
[preds: ] [succs: 1 6 ]
r3 := @parameter0: java.lang.String[];
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = newarray (java.lang.String)[1];
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
$r0[0] = \"Hello\";
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = newarray (java.lang.String)[1];
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
$r0[0] = \"Hello\";
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
$r0[0] = \"Hello\";
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r2 := @caughtexception;
r5 = $r2;
virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
}
