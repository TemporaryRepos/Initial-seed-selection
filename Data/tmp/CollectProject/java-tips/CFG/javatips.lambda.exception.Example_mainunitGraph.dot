digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.String)[1]"
    "$r0[0] = \"Hello\""
    "$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"
    "staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1)"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r5 = $r2"
    "virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.String)[1]";
    "r3 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "$r0 = newarray (java.lang.String)[1]"->"$r0[0] = \"Hello\"";
    "$r0 = newarray (java.lang.String)[1]"->"$r2 := @caughtexception";
    "$r0[0] = \"Hello\""->"$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)";
    "$r0[0] = \"Hello\""->"$r2 := @caughtexception";
    "$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"->"staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1)";
    "$r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"->"$r2 := @caughtexception";
    "staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1)"->"goto [?= return]";
    "staticinvoke <javatips.lambda.exception.Example: java.util.List findClasses(java.util.List)>($r1)"->"$r2 := @caughtexception";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r5 = $r2";
    "r5 = $r2"->"virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r5.<java.lang.Exception: void printStackTrace()>()"->"return";
}
