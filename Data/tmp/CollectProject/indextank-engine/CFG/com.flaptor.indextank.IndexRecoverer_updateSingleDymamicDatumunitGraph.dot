digraph "unitGraph" {
    "r1 := @this: com.flaptor.indextank.IndexRecoverer"
    "$r0 = new org.apache.thrift.transport.TSocket"
    "$r3 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.String indexServerHost>"
    "$r2 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.Integer indexServerPort>"
    "$i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()"
    "$i1 = $i0 + 1"
    "specialinvoke $r0.<org.apache.thrift.transport.TSocket: void <init>(java.lang.String,int)>($r3, $i1)"
    "r4 = $r0"
    "$r5 = new org.apache.thrift.protocol.TBinaryProtocol"
    "specialinvoke $r5.<org.apache.thrift.protocol.TBinaryProtocol: void <init>(org.apache.thrift.transport.TTransport)>(r4)"
    "r6 = $r5"
    "$r7 = new com.flaptor.indextank.rpc.Indexer$Client"
    "specialinvoke $r7.<com.flaptor.indextank.rpc.Indexer$Client: void <init>(org.apache.thrift.protocol.TProtocol)>(r6)"
    "r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client> = $r7"
    "virtualinvoke r4.<org.apache.thrift.transport.TSocket: void open()>()"
    "r48 = specialinvoke r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.storage.alternatives.IndexStorage getStorage()>()"
    "$r8 = new java.io.BufferedReader"
    "$r9 = new java.io.InputStreamReader"
    "$r10 = <java.lang.System: java.io.InputStream in>"
    "specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10)"
    "specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 200)"
    "r11 = $r8"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Enter the document Ids to recover, separated by enters.\nHit ctr-d to end.\")"
    "$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()"
    "r13 = $r49"
    "if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"
    "$i2 = virtualinvoke r13.<java.lang.String: int length()>()"
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"
    "r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)"
    "goto [?= r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()]"
    "$r40 := @caughtexception"
    "r50 = $r40"
    "$r42 = <java.lang.System: java.io.PrintStream out>"
    "$r41 = new java.lang.StringBuilder"
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"document \")"
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the storage.\nDELETING DOCUMENT.\")"
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)"
    "$r47 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"
    "virtualinvoke $r47.<com.flaptor.indextank.rpc.Indexer$Client: void delDoc(java.lang.String)>(r13)"
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()"
    "$r15 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getBoosts()>()"
    "$r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()"
    "r52 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"
    "$r29 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()"
    "r30 = (java.util.Map$Entry) $r29"
    "$r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "$r33 = (java.lang.Float) $r32"
    "$f0 = virtualinvoke $r33.<java.lang.Float: float floatValue()>()"
    "$d0 = (double) $f0"
    "$r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"
    "interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r34)"
    "goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]"
    "r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"
    "$r17 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"
    "virtualinvoke $r17.<com.flaptor.indextank.rpc.Indexer$Client: void updateBoost(java.lang.String,java.util.Map)>(r13, r51)"
    "$r18 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"
    "$r19 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: com.flaptor.indextank.index.Document getDocument()>()"
    "$r20 = virtualinvoke $r19.<com.flaptor.indextank.index.Document: java.lang.String getField(java.lang.String)>(\"timestamp\")"
    "$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20)"
    "virtualinvoke $r18.<com.flaptor.indextank.rpc.Indexer$Client: void updateTimestampBoost(java.lang.String,int)>(r13, $i3)"
    "$r21 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"
    "virtualinvoke $r21.<com.flaptor.indextank.rpc.Indexer$Client: void updateCategories(java.lang.String,java.util.Map)>(r13, r53)"
    "$r23 = <java.lang.System: java.io.PrintStream out>"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Updated boosts for document \")"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", boosts: \")"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)"
    "staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"
    "goto [?= return]"
    "$r38 := @caughtexception"
    "r54 = $r38"
    "$r39 = new java.lang.RuntimeException"
    "specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Something BAD happened: \", r54)"
    "throw $r39"
    "$r36 := @caughtexception"
    "r37 = $r36"
    "throw r37"
    "return"
    "r1 := @this: com.flaptor.indextank.IndexRecoverer"->"$r0 = new org.apache.thrift.transport.TSocket";
    "$r0 = new org.apache.thrift.transport.TSocket"->"$r3 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.String indexServerHost>";
    "$r3 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.String indexServerHost>"->"$r2 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.Integer indexServerPort>";
    "$r2 = r1.<com.flaptor.indextank.IndexRecoverer: java.lang.Integer indexServerPort>"->"$i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>()"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"specialinvoke $r0.<org.apache.thrift.transport.TSocket: void <init>(java.lang.String,int)>($r3, $i1)";
    "specialinvoke $r0.<org.apache.thrift.transport.TSocket: void <init>(java.lang.String,int)>($r3, $i1)"->"r4 = $r0";
    "r4 = $r0"->"$r5 = new org.apache.thrift.protocol.TBinaryProtocol";
    "$r5 = new org.apache.thrift.protocol.TBinaryProtocol"->"specialinvoke $r5.<org.apache.thrift.protocol.TBinaryProtocol: void <init>(org.apache.thrift.transport.TTransport)>(r4)";
    "specialinvoke $r5.<org.apache.thrift.protocol.TBinaryProtocol: void <init>(org.apache.thrift.transport.TTransport)>(r4)"->"r6 = $r5";
    "r6 = $r5"->"$r7 = new com.flaptor.indextank.rpc.Indexer$Client";
    "$r7 = new com.flaptor.indextank.rpc.Indexer$Client"->"specialinvoke $r7.<com.flaptor.indextank.rpc.Indexer$Client: void <init>(org.apache.thrift.protocol.TProtocol)>(r6)";
    "specialinvoke $r7.<com.flaptor.indextank.rpc.Indexer$Client: void <init>(org.apache.thrift.protocol.TProtocol)>(r6)"->"r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client> = $r7";
    "r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client> = $r7"->"$r38 := @caughtexception";
    "r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client> = $r7"->"$r36 := @caughtexception";
    "r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client> = $r7"->"virtualinvoke r4.<org.apache.thrift.transport.TSocket: void open()>()";
    "virtualinvoke r4.<org.apache.thrift.transport.TSocket: void open()>()"->"$r38 := @caughtexception";
    "virtualinvoke r4.<org.apache.thrift.transport.TSocket: void open()>()"->"$r36 := @caughtexception";
    "virtualinvoke r4.<org.apache.thrift.transport.TSocket: void open()>()"->"r48 = specialinvoke r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.storage.alternatives.IndexStorage getStorage()>()";
    "r48 = specialinvoke r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.storage.alternatives.IndexStorage getStorage()>()"->"$r38 := @caughtexception";
    "r48 = specialinvoke r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.storage.alternatives.IndexStorage getStorage()>()"->"$r36 := @caughtexception";
    "r48 = specialinvoke r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.storage.alternatives.IndexStorage getStorage()>()"->"$r8 = new java.io.BufferedReader";
    "$r8 = new java.io.BufferedReader"->"$r38 := @caughtexception";
    "$r8 = new java.io.BufferedReader"->"$r36 := @caughtexception";
    "$r8 = new java.io.BufferedReader"->"$r9 = new java.io.InputStreamReader";
    "$r9 = new java.io.InputStreamReader"->"$r38 := @caughtexception";
    "$r9 = new java.io.InputStreamReader"->"$r36 := @caughtexception";
    "$r9 = new java.io.InputStreamReader"->"$r10 = <java.lang.System: java.io.InputStream in>";
    "$r10 = <java.lang.System: java.io.InputStream in>"->"$r38 := @caughtexception";
    "$r10 = <java.lang.System: java.io.InputStream in>"->"$r36 := @caughtexception";
    "$r10 = <java.lang.System: java.io.InputStream in>"->"specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10)";
    "specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10)"->"$r38 := @caughtexception";
    "specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10)"->"$r36 := @caughtexception";
    "specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10)"->"specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 200)";
    "specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 200)"->"$r38 := @caughtexception";
    "specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 200)"->"$r36 := @caughtexception";
    "specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 200)"->"r11 = $r8";
    "r11 = $r8"->"$r38 := @caughtexception";
    "r11 = $r8"->"$r36 := @caughtexception";
    "r11 = $r8"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r38 := @caughtexception";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r36 := @caughtexception";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Enter the document Ids to recover, separated by enters.\nHit ctr-d to end.\")";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Enter the document Ids to recover, separated by enters.\nHit ctr-d to end.\")"->"$r38 := @caughtexception";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Enter the document Ids to recover, separated by enters.\nHit ctr-d to end.\")"->"$r36 := @caughtexception";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"Enter the document Ids to recover, separated by enters.\nHit ctr-d to end.\")"->"$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()";
    "$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r38 := @caughtexception";
    "$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r36 := @caughtexception";
    "$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()"->"r13 = $r49";
    "r13 = $r49"->"$r38 := @caughtexception";
    "r13 = $r49"->"$r36 := @caughtexception";
    "r13 = $r49"->"if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)";
    "if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$i2 = virtualinvoke r13.<java.lang.String: int length()>()";
    "if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)";
    "if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$r38 := @caughtexception";
    "if $r49 == null goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$r36 := @caughtexception";
    "$i2 = virtualinvoke r13.<java.lang.String: int length()>()"->"$r38 := @caughtexception";
    "$i2 = virtualinvoke r13.<java.lang.String: int length()>()"->"$r36 := @caughtexception";
    "$i2 = virtualinvoke r13.<java.lang.String: int length()>()"->"if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)";
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$r40 := @caughtexception";
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$r38 := @caughtexception";
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"$r36 := @caughtexception";
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)";
    "if $i2 == 0 goto staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)";
    "r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)"->"$r40 := @caughtexception";
    "r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)"->"$r38 := @caughtexception";
    "r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)"->"$r36 := @caughtexception";
    "r14 = interfaceinvoke r48.<com.flaptor.indextank.storage.alternatives.IndexStorage: com.flaptor.indextank.index.BoostedDocument getDocument(java.lang.String,boolean)>(r13, 0)"->"goto [?= r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()]";
    "goto [?= r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()]"->"$r38 := @caughtexception";
    "goto [?= r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()]"->"$r36 := @caughtexception";
    "goto [?= r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()]"->"r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()";
    "$r40 := @caughtexception"->"$r38 := @caughtexception";
    "$r40 := @caughtexception"->"$r36 := @caughtexception";
    "$r40 := @caughtexception"->"r50 = $r40";
    "r50 = $r40"->"$r38 := @caughtexception";
    "r50 = $r40"->"$r36 := @caughtexception";
    "r50 = $r40"->"$r42 = <java.lang.System: java.io.PrintStream out>";
    "$r42 = <java.lang.System: java.io.PrintStream out>"->"$r38 := @caughtexception";
    "$r42 = <java.lang.System: java.io.PrintStream out>"->"$r36 := @caughtexception";
    "$r42 = <java.lang.System: java.io.PrintStream out>"->"$r41 = new java.lang.StringBuilder";
    "$r41 = new java.lang.StringBuilder"->"$r38 := @caughtexception";
    "$r41 = new java.lang.StringBuilder"->"$r36 := @caughtexception";
    "$r41 = new java.lang.StringBuilder"->"specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"->"$r38 := @caughtexception";
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"->"$r36 := @caughtexception";
    "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()"->"$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"document \")";
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"document \")"->"$r38 := @caughtexception";
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"document \")"->"$r36 := @caughtexception";
    "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"document \")"->"$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r38 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r36 := @caughtexception";
    "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the storage.\nDELETING DOCUMENT.\")";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the storage.\nDELETING DOCUMENT.\")"->"$r38 := @caughtexception";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the storage.\nDELETING DOCUMENT.\")"->"$r36 := @caughtexception";
    "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the storage.\nDELETING DOCUMENT.\")"->"$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r38 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r36 := @caughtexception";
    "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)";
    "virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)"->"$r38 := @caughtexception";
    "virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)"->"$r36 := @caughtexception";
    "virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)"->"$r47 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>";
    "$r47 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r38 := @caughtexception";
    "$r47 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r36 := @caughtexception";
    "$r47 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"virtualinvoke $r47.<com.flaptor.indextank.rpc.Indexer$Client: void delDoc(java.lang.String)>(r13)";
    "virtualinvoke $r47.<com.flaptor.indextank.rpc.Indexer$Client: void delDoc(java.lang.String)>(r13)"->"$r38 := @caughtexception";
    "virtualinvoke $r47.<com.flaptor.indextank.rpc.Indexer$Client: void delDoc(java.lang.String)>(r13)"->"$r36 := @caughtexception";
    "virtualinvoke $r47.<com.flaptor.indextank.rpc.Indexer$Client: void delDoc(java.lang.String)>(r13)"->"goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r38 := @caughtexception";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r36 := @caughtexception";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()";
    "r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()"->"$r38 := @caughtexception";
    "r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()"->"$r36 := @caughtexception";
    "r51 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()"->"$r15 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getBoosts()>()";
    "$r15 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getBoosts()>()"->"$r38 := @caughtexception";
    "$r15 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getBoosts()>()"->"$r36 := @caughtexception";
    "$r15 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getBoosts()>()"->"$r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()";
    "$r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()"->"$r38 := @caughtexception";
    "$r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()"->"$r36 := @caughtexception";
    "$r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()"->"r52 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()";
    "r52 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()"->"$r38 := @caughtexception";
    "r52 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()"->"$r36 := @caughtexception";
    "r52 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()"->"$r38 := @caughtexception";
    "$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()"->"$r36 := @caughtexception";
    "$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()";
    "if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r29 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()";
    "if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r38 := @caughtexception";
    "if $z0 == 0 goto r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r36 := @caughtexception";
    "$r29 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()"->"$r38 := @caughtexception";
    "$r29 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()"->"$r36 := @caughtexception";
    "$r29 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()"->"r30 = (java.util.Map$Entry) $r29";
    "r30 = (java.util.Map$Entry) $r29"->"$r38 := @caughtexception";
    "r30 = (java.util.Map$Entry) $r29"->"$r36 := @caughtexception";
    "r30 = (java.util.Map$Entry) $r29"->"$r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r38 := @caughtexception";
    "$r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r36 := @caughtexception";
    "$r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "$r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r38 := @caughtexception";
    "$r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r36 := @caughtexception";
    "$r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r33 = (java.lang.Float) $r32";
    "$r33 = (java.lang.Float) $r32"->"$r38 := @caughtexception";
    "$r33 = (java.lang.Float) $r32"->"$r36 := @caughtexception";
    "$r33 = (java.lang.Float) $r32"->"$f0 = virtualinvoke $r33.<java.lang.Float: float floatValue()>()";
    "$f0 = virtualinvoke $r33.<java.lang.Float: float floatValue()>()"->"$r38 := @caughtexception";
    "$f0 = virtualinvoke $r33.<java.lang.Float: float floatValue()>()"->"$r36 := @caughtexception";
    "$f0 = virtualinvoke $r33.<java.lang.Float: float floatValue()>()"->"$d0 = (double) $f0";
    "$d0 = (double) $f0"->"$r38 := @caughtexception";
    "$d0 = (double) $f0"->"$r36 := @caughtexception";
    "$d0 = (double) $f0"->"$r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)";
    "$r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"$r38 := @caughtexception";
    "$r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"$r36 := @caughtexception";
    "$r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)"->"interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r34)";
    "interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r34)"->"$r38 := @caughtexception";
    "interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r34)"->"$r36 := @caughtexception";
    "interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r34)"->"goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]"->"$r38 := @caughtexception";
    "goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]"->"$r36 := @caughtexception";
    "goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()";
    "r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r38 := @caughtexception";
    "r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r36 := @caughtexception";
    "r53 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: java.util.Map getCategories()>()"->"$r17 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>";
    "$r17 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r38 := @caughtexception";
    "$r17 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r36 := @caughtexception";
    "$r17 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"virtualinvoke $r17.<com.flaptor.indextank.rpc.Indexer$Client: void updateBoost(java.lang.String,java.util.Map)>(r13, r51)";
    "virtualinvoke $r17.<com.flaptor.indextank.rpc.Indexer$Client: void updateBoost(java.lang.String,java.util.Map)>(r13, r51)"->"$r38 := @caughtexception";
    "virtualinvoke $r17.<com.flaptor.indextank.rpc.Indexer$Client: void updateBoost(java.lang.String,java.util.Map)>(r13, r51)"->"$r36 := @caughtexception";
    "virtualinvoke $r17.<com.flaptor.indextank.rpc.Indexer$Client: void updateBoost(java.lang.String,java.util.Map)>(r13, r51)"->"$r18 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>";
    "$r18 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r38 := @caughtexception";
    "$r18 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r36 := @caughtexception";
    "$r18 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r19 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: com.flaptor.indextank.index.Document getDocument()>()";
    "$r19 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: com.flaptor.indextank.index.Document getDocument()>()"->"$r38 := @caughtexception";
    "$r19 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: com.flaptor.indextank.index.Document getDocument()>()"->"$r36 := @caughtexception";
    "$r19 = virtualinvoke r14.<com.flaptor.indextank.index.BoostedDocument: com.flaptor.indextank.index.Document getDocument()>()"->"$r20 = virtualinvoke $r19.<com.flaptor.indextank.index.Document: java.lang.String getField(java.lang.String)>(\"timestamp\")";
    "$r20 = virtualinvoke $r19.<com.flaptor.indextank.index.Document: java.lang.String getField(java.lang.String)>(\"timestamp\")"->"$r38 := @caughtexception";
    "$r20 = virtualinvoke $r19.<com.flaptor.indextank.index.Document: java.lang.String getField(java.lang.String)>(\"timestamp\")"->"$r36 := @caughtexception";
    "$r20 = virtualinvoke $r19.<com.flaptor.indextank.index.Document: java.lang.String getField(java.lang.String)>(\"timestamp\")"->"$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20)";
    "$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20)"->"$r38 := @caughtexception";
    "$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20)"->"$r36 := @caughtexception";
    "$i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20)"->"virtualinvoke $r18.<com.flaptor.indextank.rpc.Indexer$Client: void updateTimestampBoost(java.lang.String,int)>(r13, $i3)";
    "virtualinvoke $r18.<com.flaptor.indextank.rpc.Indexer$Client: void updateTimestampBoost(java.lang.String,int)>(r13, $i3)"->"$r38 := @caughtexception";
    "virtualinvoke $r18.<com.flaptor.indextank.rpc.Indexer$Client: void updateTimestampBoost(java.lang.String,int)>(r13, $i3)"->"$r36 := @caughtexception";
    "virtualinvoke $r18.<com.flaptor.indextank.rpc.Indexer$Client: void updateTimestampBoost(java.lang.String,int)>(r13, $i3)"->"$r21 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>";
    "$r21 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r38 := @caughtexception";
    "$r21 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"$r36 := @caughtexception";
    "$r21 = r1.<com.flaptor.indextank.IndexRecoverer: com.flaptor.indextank.rpc.Indexer$Client client>"->"virtualinvoke $r21.<com.flaptor.indextank.rpc.Indexer$Client: void updateCategories(java.lang.String,java.util.Map)>(r13, r53)";
    "virtualinvoke $r21.<com.flaptor.indextank.rpc.Indexer$Client: void updateCategories(java.lang.String,java.util.Map)>(r13, r53)"->"$r38 := @caughtexception";
    "virtualinvoke $r21.<com.flaptor.indextank.rpc.Indexer$Client: void updateCategories(java.lang.String,java.util.Map)>(r13, r53)"->"$r36 := @caughtexception";
    "virtualinvoke $r21.<com.flaptor.indextank.rpc.Indexer$Client: void updateCategories(java.lang.String,java.util.Map)>(r13, r53)"->"$r23 = <java.lang.System: java.io.PrintStream out>";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"$r38 := @caughtexception";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"$r36 := @caughtexception";
    "$r23 = <java.lang.System: java.io.PrintStream out>"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"$r38 := @caughtexception";
    "$r22 = new java.lang.StringBuilder"->"$r36 := @caughtexception";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r38 := @caughtexception";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r36 := @caughtexception";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Updated boosts for document \")";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Updated boosts for document \")"->"$r38 := @caughtexception";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Updated boosts for document \")"->"$r36 := @caughtexception";
    "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Updated boosts for document \")"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r38 := @caughtexception";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r36 := @caughtexception";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", boosts: \")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", boosts: \")"->"$r38 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", boosts: \")"->"$r36 := @caughtexception";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", boosts: \")"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r38 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r36 := @caughtexception";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51)"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r38 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r36 := @caughtexception";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)"->"$r38 := @caughtexception";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)"->"$r36 := @caughtexception";
    "virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)"->"goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r38 := @caughtexception";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r36 := @caughtexception";
    "goto [?= $r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r49 = virtualinvoke r11.<java.io.BufferedReader: java.lang.String readLine()>()";
    "staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r38 := @caughtexception"->"r54 = $r38";
    "$r38 := @caughtexception"->"$r36 := @caughtexception";
    "r54 = $r38"->"$r39 = new java.lang.RuntimeException";
    "r54 = $r38"->"$r36 := @caughtexception";
    "$r39 = new java.lang.RuntimeException"->"specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Something BAD happened: \", r54)";
    "$r39 = new java.lang.RuntimeException"->"$r36 := @caughtexception";
    "specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Something BAD happened: \", r54)"->"throw $r39";
    "specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(\"Something BAD happened: \", r54)"->"$r36 := @caughtexception";
    "throw $r39"->"$r36 := @caughtexception";
    "$r36 := @caughtexception"->"r37 = $r36";
    "$r36 := @caughtexception"->"$r36 := @caughtexception";
    "r37 = $r36"->"staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)";
    "r37 = $r36"->"$r36 := @caughtexception";
    "staticinvoke <com.flaptor.util.Execute: void close(java.lang.Object)>(r4)"->"throw r37";
}
