digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 >= 4 goto r13 = \"\""
    "staticinvoke <com.flaptor.indextank.IndexRecoverer: void help()>()"
    "r13 = \"\""
    "r14 = \"\""
    "r15 = \"\""
    "i7 = 0"
    "l8 = 0L"
    "z0 = 0"
    "r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue SIMPLEDB>"
    "r17 = null"
    "r13 = r0[0]"
    "$r1 = r0[1]"
    "i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"
    "r14 = r0[2]"
    "r15 = r0[3]"
    "$i1 = lengthof r0"
    "if $i1 <= 4 goto (branch)"
    "$r6 = r0[4]"
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6)"
    "$i3 = lengthof r0"
    "if $i3 <= 5 goto (branch)"
    "$r7 = r0[5]"
    "z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r7)"
    "$i4 = lengthof r0"
    "if $i4 <= 6 goto (branch)"
    "$r8 = r0[6]"
    "if $r8 != \"cassandra\" goto (branch)"
    "$i5 = lengthof r0"
    "if $i5 == 7 goto $r9 = new java.lang.IllegalArgumentException"
    "$r10 = r0[7]"
    "$r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>()"
    "$i6 = virtualinvoke $r11.<java.lang.String: int length()>()"
    "if $i6 != 0 goto r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"
    "$r9 = new java.lang.IllegalArgumentException"
    "specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Expecting cassandra cluster hosts\")"
    "throw $r9"
    "r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"
    "r17 = r0[7]"
    "goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]"
    "$r12 := @caughtexception"
    "r18 = $r12"
    "$r2 = new com.flaptor.indextank.IndexRecoverer"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"
    "specialinvoke $r2.<com.flaptor.indextank.IndexRecoverer: void <init>(com.flaptor.indextank.index.IndexEngine,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,long,boolean,com.flaptor.indextank.IndexRecoverer$IndexStorageValue,java.lang.String)>(null, r13, $r3, r14, r15, l8, z0, r16, r17)"
    "r19 = $r2"
    "$i2 = lengthof r0"
    "if $i2 <= 4 goto virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Starting recovery...\")"
    "virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void run()>()"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Recovery finished\")"
    "goto [?= return]"
    "virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 >= 4 goto r13 = \"\"";
    "if $i0 >= 4 goto r13 = \"\""->"staticinvoke <com.flaptor.indextank.IndexRecoverer: void help()>()";
    "if $i0 >= 4 goto r13 = \"\""->"r13 = \"\"";
    "staticinvoke <com.flaptor.indextank.IndexRecoverer: void help()>()"->"r13 = \"\"";
    "r13 = \"\""->"r14 = \"\"";
    "r14 = \"\""->"r15 = \"\"";
    "r15 = \"\""->"i7 = 0";
    "i7 = 0"->"l8 = 0L";
    "l8 = 0L"->"z0 = 0";
    "z0 = 0"->"r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue SIMPLEDB>";
    "r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue SIMPLEDB>"->"r17 = null";
    "r17 = null"->"r13 = r0[0]";
    "r17 = null"->"$r12 := @caughtexception";
    "r13 = r0[0]"->"$r1 = r0[1]";
    "r13 = r0[0]"->"$r12 := @caughtexception";
    "$r1 = r0[1]"->"i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)";
    "$r1 = r0[1]"->"$r12 := @caughtexception";
    "i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"->"r14 = r0[2]";
    "i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)"->"$r12 := @caughtexception";
    "r14 = r0[2]"->"r15 = r0[3]";
    "r14 = r0[2]"->"$r12 := @caughtexception";
    "r15 = r0[3]"->"$i1 = lengthof r0";
    "r15 = r0[3]"->"$r12 := @caughtexception";
    "$i1 = lengthof r0"->"if $i1 <= 4 goto (branch)";
    "$i1 = lengthof r0"->"$r12 := @caughtexception";
    "if $i1 <= 4 goto (branch)"->"$r6 = r0[4]";
    "if $i1 <= 4 goto (branch)"->"goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]";
    "if $i1 <= 4 goto (branch)"->"$r12 := @caughtexception";
    "$r6 = r0[4]"->"l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6)";
    "$r6 = r0[4]"->"$r12 := @caughtexception";
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6)"->"$i3 = lengthof r0";
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6)"->"$r12 := @caughtexception";
    "$i3 = lengthof r0"->"if $i3 <= 5 goto (branch)";
    "$i3 = lengthof r0"->"$r12 := @caughtexception";
    "if $i3 <= 5 goto (branch)"->"$r7 = r0[5]";
    "if $i3 <= 5 goto (branch)"->"goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]";
    "if $i3 <= 5 goto (branch)"->"$r12 := @caughtexception";
    "$r7 = r0[5]"->"z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r7)";
    "$r7 = r0[5]"->"$r12 := @caughtexception";
    "z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r7)"->"$i4 = lengthof r0";
    "z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r7)"->"$r12 := @caughtexception";
    "$i4 = lengthof r0"->"if $i4 <= 6 goto (branch)";
    "$i4 = lengthof r0"->"$r12 := @caughtexception";
    "if $i4 <= 6 goto (branch)"->"$r8 = r0[6]";
    "if $i4 <= 6 goto (branch)"->"goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]";
    "if $i4 <= 6 goto (branch)"->"$r12 := @caughtexception";
    "$r8 = r0[6]"->"if $r8 != \"cassandra\" goto (branch)";
    "$r8 = r0[6]"->"$r12 := @caughtexception";
    "if $r8 != \"cassandra\" goto (branch)"->"$i5 = lengthof r0";
    "if $r8 != \"cassandra\" goto (branch)"->"goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]";
    "if $r8 != \"cassandra\" goto (branch)"->"$r12 := @caughtexception";
    "$i5 = lengthof r0"->"if $i5 == 7 goto $r9 = new java.lang.IllegalArgumentException";
    "$i5 = lengthof r0"->"$r12 := @caughtexception";
    "if $i5 == 7 goto $r9 = new java.lang.IllegalArgumentException"->"$r10 = r0[7]";
    "if $i5 == 7 goto $r9 = new java.lang.IllegalArgumentException"->"$r9 = new java.lang.IllegalArgumentException";
    "if $i5 == 7 goto $r9 = new java.lang.IllegalArgumentException"->"$r12 := @caughtexception";
    "$r10 = r0[7]"->"$r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>()";
    "$r10 = r0[7]"->"$r12 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>()"->"$i6 = virtualinvoke $r11.<java.lang.String: int length()>()";
    "$r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>()"->"$r12 := @caughtexception";
    "$i6 = virtualinvoke $r11.<java.lang.String: int length()>()"->"if $i6 != 0 goto r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>";
    "$i6 = virtualinvoke $r11.<java.lang.String: int length()>()"->"$r12 := @caughtexception";
    "if $i6 != 0 goto r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"->"$r9 = new java.lang.IllegalArgumentException";
    "if $i6 != 0 goto r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"->"r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>";
    "if $i6 != 0 goto r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"->"$r12 := @caughtexception";
    "$r9 = new java.lang.IllegalArgumentException"->"specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Expecting cassandra cluster hosts\")";
    "$r9 = new java.lang.IllegalArgumentException"->"$r12 := @caughtexception";
    "specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Expecting cassandra cluster hosts\")"->"throw $r9";
    "specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Expecting cassandra cluster hosts\")"->"$r12 := @caughtexception";
    "throw $r9"->"$r12 := @caughtexception";
    "r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"->"r17 = r0[7]";
    "r16 = <com.flaptor.indextank.IndexRecoverer$IndexStorageValue: com.flaptor.indextank.IndexRecoverer$IndexStorageValue CASSANDRA>"->"$r12 := @caughtexception";
    "r17 = r0[7]"->"goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]";
    "r17 = r0[7]"->"$r12 := @caughtexception";
    "goto [?= $r2 = new com.flaptor.indextank.IndexRecoverer]"->"$r2 = new com.flaptor.indextank.IndexRecoverer";
    "$r12 := @caughtexception"->"r18 = $r12";
    "r18 = $r12"->"staticinvoke <com.flaptor.indextank.IndexRecoverer: void help()>()";
    "staticinvoke <com.flaptor.indextank.IndexRecoverer: void help()>()"->"$r2 = new com.flaptor.indextank.IndexRecoverer";
    "$r2 = new com.flaptor.indextank.IndexRecoverer"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)"->"specialinvoke $r2.<com.flaptor.indextank.IndexRecoverer: void <init>(com.flaptor.indextank.index.IndexEngine,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,long,boolean,com.flaptor.indextank.IndexRecoverer$IndexStorageValue,java.lang.String)>(null, r13, $r3, r14, r15, l8, z0, r16, r17)";
    "specialinvoke $r2.<com.flaptor.indextank.IndexRecoverer: void <init>(com.flaptor.indextank.index.IndexEngine,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,long,boolean,com.flaptor.indextank.IndexRecoverer$IndexStorageValue,java.lang.String)>(null, r13, $r3, r14, r15, l8, z0, r16, r17)"->"r19 = $r2";
    "r19 = $r2"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if $i2 <= 4 goto virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()";
    "if $i2 <= 4 goto virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "if $i2 <= 4 goto virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()"->"virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Starting recovery...\")";
    "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Starting recovery...\")"->"virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void run()>()";
    "virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void run()>()"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Recovery finished\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Recovery finished\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "virtualinvoke r19.<com.flaptor.indextank.IndexRecoverer: void updateSingleDymamicDatum()>()"->"return";
}
