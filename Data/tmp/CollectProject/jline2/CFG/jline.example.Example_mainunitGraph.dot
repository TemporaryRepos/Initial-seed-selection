digraph "unitGraph" {
    "r2 := @parameter0: java.lang.String[]"
    "r30 = null"
    "r31 = null"
    "z11 = 0"
    "$r0 = new jline.console.ConsoleReader"
    "specialinvoke $r0.<jline.console.ConsoleReader: void <init>()>()"
    "r1 = $r0"
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"prompt> \")"
    "if r2 == null goto staticinvoke <jline.example.Example: void usage()>()"
    "$i0 = lengthof r2"
    "if $i0 != 0 goto $r3 = new java.util.LinkedList"
    "staticinvoke <jline.example.Example: void usage()>()"
    "return"
    "$r3 = new java.util.LinkedList"
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"
    "r4 = $r3"
    "$i1 = lengthof r2"
    "if $i1 <= 0 goto $i4 = lengthof r2"
    "$r19 = r2[0]"
    "$z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(\"none\")"
    "if $z4 == 0 goto $r20 = r2[0]"
    "goto [?= $i4 = lengthof r2]"
    "$r20 = r2[0]"
    "$z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"files\")"
    "if $z5 == 0 goto $r21 = r2[0]"
    "$r28 = new jline.console.completer.FileNameCompleter"
    "specialinvoke $r28.<jline.console.completer.FileNameCompleter: void <init>()>()"
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28)"
    "$r21 = r2[0]"
    "$z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"simple\")"
    "if $z6 == 0 goto $r22 = r2[0]"
    "$r26 = new jline.console.completer.StringsCompleter"
    "$r27 = newarray (java.lang.String)[3]"
    "$r27[0] = \"foo\""
    "$r27[1] = \"bar\""
    "$r27[2] = \"baz\""
    "specialinvoke $r26.<jline.console.completer.StringsCompleter: void <init>(java.lang.String[])>($r27)"
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26)"
    "$r22 = r2[0]"
    "$z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"color\")"
    "if $z7 == 0 goto staticinvoke <jline.example.Example: void usage()>()"
    "z11 = 1"
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"\u001b[42mfoo\u001b[0m@bar\u001b[32m@baz\u001b[0m> \")"
    "$r23 = new jline.console.completer.AnsiStringsCompleter"
    "$r24 = newarray (java.lang.String)[3]"
    "$r24[0] = \"\u001b[1mfoo\u001b[0m\""
    "$r24[1] = \"bar\""
    "$r24[2] = \"\u001b[32mbaz\u001b[0m\""
    "specialinvoke $r23.<jline.console.completer.AnsiStringsCompleter: void <init>(java.lang.String[])>($r24)"
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r23)"
    "$r25 = new jline.console.completer.CandidateListCompletionHandler"
    "specialinvoke $r25.<jline.console.completer.CandidateListCompletionHandler: void <init>()>()"
    "r32 = $r25"
    "virtualinvoke r32.<jline.console.completer.CandidateListCompletionHandler: void setStripAnsi(boolean)>(1)"
    "virtualinvoke r1.<jline.console.ConsoleReader: void setCompletionHandler(jline.console.completer.CompletionHandler)>(r32)"
    "$i4 = lengthof r2"
    "if $i4 != 3 goto r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"
    "$r18 = r2[2]"
    "$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)"
    "r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)"
    "r31 = r2[1]"
    "r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"
    "$z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()"
    "if $z12 == 0 goto $r5 = new java.io.PrintWriter"
    "$r17 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()"
    "r34 = (jline.console.completer.Completer) $r17"
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean addCompleter(jline.console.completer.Completer)>(r34)"
    "goto [?= $z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]"
    "$r5 = new java.io.PrintWriter"
    "$r6 = virtualinvoke r1.<jline.console.ConsoleReader: java.io.Writer getOutput()>()"
    "specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6)"
    "r35 = $r5"
    "$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"
    "r37 = $r36"
    "if $r36 == null goto (branch)"
    "if z11 == 0 goto $r7 = new java.lang.StringBuilder"
    "$r12 = new java.lang.StringBuilder"
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u001b[33m======>\u001b[0m\\\"\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r16)"
    "goto [?= virtualinvoke r35.<java.io.PrintWriter: void flush()>()]"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"======>\\\"\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r11)"
    "virtualinvoke r35.<java.io.PrintWriter: void flush()>()"
    "if r31 == null goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"
    "$i2 = virtualinvoke r37.<java.lang.String: int compareTo(java.lang.String)>(r31)"
    "if $i2 != 0 goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"
    "r37 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>(\"password> \", r30)"
    "$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"
    "if $z13 != 0 goto (branch)"
    "$z0 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"exit\")"
    "if $z0 == 0 goto $z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"
    "goto [?= (branch)]"
    "$z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"
    "if $z1 == 0 goto $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean clearScreen()>()"
    "goto [?= $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()]"
    "goto [?= return]"
    "$r29 := @caughtexception"
    "r38 = $r29"
    "virtualinvoke r38.<java.lang.Throwable: void printStackTrace()>()"
    "r2 := @parameter0: java.lang.String[]"->"r30 = null";
    "r2 := @parameter0: java.lang.String[]"->"$r29 := @caughtexception";
    "r30 = null"->"r31 = null";
    "r30 = null"->"$r29 := @caughtexception";
    "r31 = null"->"z11 = 0";
    "r31 = null"->"$r29 := @caughtexception";
    "z11 = 0"->"$r0 = new jline.console.ConsoleReader";
    "z11 = 0"->"$r29 := @caughtexception";
    "$r0 = new jline.console.ConsoleReader"->"specialinvoke $r0.<jline.console.ConsoleReader: void <init>()>()";
    "$r0 = new jline.console.ConsoleReader"->"$r29 := @caughtexception";
    "specialinvoke $r0.<jline.console.ConsoleReader: void <init>()>()"->"r1 = $r0";
    "specialinvoke $r0.<jline.console.ConsoleReader: void <init>()>()"->"$r29 := @caughtexception";
    "r1 = $r0"->"virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"prompt> \")";
    "r1 = $r0"->"$r29 := @caughtexception";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"prompt> \")"->"if r2 == null goto staticinvoke <jline.example.Example: void usage()>()";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"prompt> \")"->"$r29 := @caughtexception";
    "if r2 == null goto staticinvoke <jline.example.Example: void usage()>()"->"$i0 = lengthof r2";
    "if r2 == null goto staticinvoke <jline.example.Example: void usage()>()"->"staticinvoke <jline.example.Example: void usage()>()";
    "if r2 == null goto staticinvoke <jline.example.Example: void usage()>()"->"$r29 := @caughtexception";
    "$i0 = lengthof r2"->"if $i0 != 0 goto $r3 = new java.util.LinkedList";
    "$i0 = lengthof r2"->"$r29 := @caughtexception";
    "if $i0 != 0 goto $r3 = new java.util.LinkedList"->"staticinvoke <jline.example.Example: void usage()>()";
    "if $i0 != 0 goto $r3 = new java.util.LinkedList"->"$r3 = new java.util.LinkedList";
    "if $i0 != 0 goto $r3 = new java.util.LinkedList"->"$r29 := @caughtexception";
    "staticinvoke <jline.example.Example: void usage()>()"->"return";
    "staticinvoke <jline.example.Example: void usage()>()"->"$r29 := @caughtexception";
    "$r3 = new java.util.LinkedList"->"specialinvoke $r3.<java.util.LinkedList: void <init>()>()";
    "$r3 = new java.util.LinkedList"->"$r29 := @caughtexception";
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"->"r4 = $r3";
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"->"$r29 := @caughtexception";
    "r4 = $r3"->"$i1 = lengthof r2";
    "r4 = $r3"->"$r29 := @caughtexception";
    "$i1 = lengthof r2"->"if $i1 <= 0 goto $i4 = lengthof r2";
    "$i1 = lengthof r2"->"$r29 := @caughtexception";
    "if $i1 <= 0 goto $i4 = lengthof r2"->"$r19 = r2[0]";
    "if $i1 <= 0 goto $i4 = lengthof r2"->"$i4 = lengthof r2";
    "if $i1 <= 0 goto $i4 = lengthof r2"->"$r29 := @caughtexception";
    "$r19 = r2[0]"->"$z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(\"none\")";
    "$r19 = r2[0]"->"$r29 := @caughtexception";
    "$z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(\"none\")"->"if $z4 == 0 goto $r20 = r2[0]";
    "$z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(\"none\")"->"$r29 := @caughtexception";
    "if $z4 == 0 goto $r20 = r2[0]"->"goto [?= $i4 = lengthof r2]";
    "if $z4 == 0 goto $r20 = r2[0]"->"$r20 = r2[0]";
    "if $z4 == 0 goto $r20 = r2[0]"->"$r29 := @caughtexception";
    "goto [?= $i4 = lengthof r2]"->"$i4 = lengthof r2";
    "goto [?= $i4 = lengthof r2]"->"$r29 := @caughtexception";
    "$r20 = r2[0]"->"$z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"files\")";
    "$r20 = r2[0]"->"$r29 := @caughtexception";
    "$z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"files\")"->"if $z5 == 0 goto $r21 = r2[0]";
    "$z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(\"files\")"->"$r29 := @caughtexception";
    "if $z5 == 0 goto $r21 = r2[0]"->"$r28 = new jline.console.completer.FileNameCompleter";
    "if $z5 == 0 goto $r21 = r2[0]"->"$r21 = r2[0]";
    "if $z5 == 0 goto $r21 = r2[0]"->"$r29 := @caughtexception";
    "$r28 = new jline.console.completer.FileNameCompleter"->"specialinvoke $r28.<jline.console.completer.FileNameCompleter: void <init>()>()";
    "$r28 = new jline.console.completer.FileNameCompleter"->"$r29 := @caughtexception";
    "specialinvoke $r28.<jline.console.completer.FileNameCompleter: void <init>()>()"->"interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28)";
    "specialinvoke $r28.<jline.console.completer.FileNameCompleter: void <init>()>()"->"$r29 := @caughtexception";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28)"->"goto [?= $i4 = lengthof r2]";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28)"->"$r29 := @caughtexception";
    "goto [?= $i4 = lengthof r2]"->"$i4 = lengthof r2";
    "goto [?= $i4 = lengthof r2]"->"$r29 := @caughtexception";
    "$r21 = r2[0]"->"$z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"simple\")";
    "$r21 = r2[0]"->"$r29 := @caughtexception";
    "$z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"simple\")"->"if $z6 == 0 goto $r22 = r2[0]";
    "$z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"simple\")"->"$r29 := @caughtexception";
    "if $z6 == 0 goto $r22 = r2[0]"->"$r26 = new jline.console.completer.StringsCompleter";
    "if $z6 == 0 goto $r22 = r2[0]"->"$r22 = r2[0]";
    "if $z6 == 0 goto $r22 = r2[0]"->"$r29 := @caughtexception";
    "$r26 = new jline.console.completer.StringsCompleter"->"$r27 = newarray (java.lang.String)[3]";
    "$r26 = new jline.console.completer.StringsCompleter"->"$r29 := @caughtexception";
    "$r27 = newarray (java.lang.String)[3]"->"$r27[0] = \"foo\"";
    "$r27 = newarray (java.lang.String)[3]"->"$r29 := @caughtexception";
    "$r27[0] = \"foo\""->"$r27[1] = \"bar\"";
    "$r27[0] = \"foo\""->"$r29 := @caughtexception";
    "$r27[1] = \"bar\""->"$r27[2] = \"baz\"";
    "$r27[1] = \"bar\""->"$r29 := @caughtexception";
    "$r27[2] = \"baz\""->"specialinvoke $r26.<jline.console.completer.StringsCompleter: void <init>(java.lang.String[])>($r27)";
    "$r27[2] = \"baz\""->"$r29 := @caughtexception";
    "specialinvoke $r26.<jline.console.completer.StringsCompleter: void <init>(java.lang.String[])>($r27)"->"interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26)";
    "specialinvoke $r26.<jline.console.completer.StringsCompleter: void <init>(java.lang.String[])>($r27)"->"$r29 := @caughtexception";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26)"->"goto [?= $i4 = lengthof r2]";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26)"->"$r29 := @caughtexception";
    "goto [?= $i4 = lengthof r2]"->"$i4 = lengthof r2";
    "goto [?= $i4 = lengthof r2]"->"$r29 := @caughtexception";
    "$r22 = r2[0]"->"$z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"color\")";
    "$r22 = r2[0]"->"$r29 := @caughtexception";
    "$z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"color\")"->"if $z7 == 0 goto staticinvoke <jline.example.Example: void usage()>()";
    "$z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(\"color\")"->"$r29 := @caughtexception";
    "if $z7 == 0 goto staticinvoke <jline.example.Example: void usage()>()"->"z11 = 1";
    "if $z7 == 0 goto staticinvoke <jline.example.Example: void usage()>()"->"staticinvoke <jline.example.Example: void usage()>()";
    "if $z7 == 0 goto staticinvoke <jline.example.Example: void usage()>()"->"$r29 := @caughtexception";
    "z11 = 1"->"virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"\u001b[42mfoo\u001b[0m@bar\u001b[32m@baz\u001b[0m> \")";
    "z11 = 1"->"$r29 := @caughtexception";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"\u001b[42mfoo\u001b[0m@bar\u001b[32m@baz\u001b[0m> \")"->"$r23 = new jline.console.completer.AnsiStringsCompleter";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setPrompt(java.lang.String)>(\"\u001b[42mfoo\u001b[0m@bar\u001b[32m@baz\u001b[0m> \")"->"$r29 := @caughtexception";
    "$r23 = new jline.console.completer.AnsiStringsCompleter"->"$r24 = newarray (java.lang.String)[3]";
    "$r23 = new jline.console.completer.AnsiStringsCompleter"->"$r29 := @caughtexception";
    "$r24 = newarray (java.lang.String)[3]"->"$r24[0] = \"\u001b[1mfoo\u001b[0m\"";
    "$r24 = newarray (java.lang.String)[3]"->"$r29 := @caughtexception";
    "$r24[0] = \"\u001b[1mfoo\u001b[0m\""->"$r24[1] = \"bar\"";
    "$r24[0] = \"\u001b[1mfoo\u001b[0m\""->"$r29 := @caughtexception";
    "$r24[1] = \"bar\""->"$r24[2] = \"\u001b[32mbaz\u001b[0m\"";
    "$r24[1] = \"bar\""->"$r29 := @caughtexception";
    "$r24[2] = \"\u001b[32mbaz\u001b[0m\""->"specialinvoke $r23.<jline.console.completer.AnsiStringsCompleter: void <init>(java.lang.String[])>($r24)";
    "$r24[2] = \"\u001b[32mbaz\u001b[0m\""->"$r29 := @caughtexception";
    "specialinvoke $r23.<jline.console.completer.AnsiStringsCompleter: void <init>(java.lang.String[])>($r24)"->"interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r23)";
    "specialinvoke $r23.<jline.console.completer.AnsiStringsCompleter: void <init>(java.lang.String[])>($r24)"->"$r29 := @caughtexception";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r23)"->"$r25 = new jline.console.completer.CandidateListCompletionHandler";
    "interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r23)"->"$r29 := @caughtexception";
    "$r25 = new jline.console.completer.CandidateListCompletionHandler"->"specialinvoke $r25.<jline.console.completer.CandidateListCompletionHandler: void <init>()>()";
    "$r25 = new jline.console.completer.CandidateListCompletionHandler"->"$r29 := @caughtexception";
    "specialinvoke $r25.<jline.console.completer.CandidateListCompletionHandler: void <init>()>()"->"r32 = $r25";
    "specialinvoke $r25.<jline.console.completer.CandidateListCompletionHandler: void <init>()>()"->"$r29 := @caughtexception";
    "r32 = $r25"->"virtualinvoke r32.<jline.console.completer.CandidateListCompletionHandler: void setStripAnsi(boolean)>(1)";
    "r32 = $r25"->"$r29 := @caughtexception";
    "virtualinvoke r32.<jline.console.completer.CandidateListCompletionHandler: void setStripAnsi(boolean)>(1)"->"virtualinvoke r1.<jline.console.ConsoleReader: void setCompletionHandler(jline.console.completer.CompletionHandler)>(r32)";
    "virtualinvoke r32.<jline.console.completer.CandidateListCompletionHandler: void setStripAnsi(boolean)>(1)"->"$r29 := @caughtexception";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setCompletionHandler(jline.console.completer.CompletionHandler)>(r32)"->"goto [?= $i4 = lengthof r2]";
    "virtualinvoke r1.<jline.console.ConsoleReader: void setCompletionHandler(jline.console.completer.CompletionHandler)>(r32)"->"$r29 := @caughtexception";
    "goto [?= $i4 = lengthof r2]"->"$i4 = lengthof r2";
    "goto [?= $i4 = lengthof r2]"->"$r29 := @caughtexception";
    "staticinvoke <jline.example.Example: void usage()>()"->"return";
    "staticinvoke <jline.example.Example: void usage()>()"->"$r29 := @caughtexception";
    "$i4 = lengthof r2"->"if $i4 != 3 goto r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()";
    "$i4 = lengthof r2"->"$r29 := @caughtexception";
    "if $i4 != 3 goto r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$r18 = r2[2]";
    "if $i4 != 3 goto r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()";
    "if $i4 != 3 goto r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$r29 := @caughtexception";
    "$r18 = r2[2]"->"$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)";
    "$r18 = r2[2]"->"$r29 := @caughtexception";
    "$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)"->"r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)";
    "$c3 = virtualinvoke $r18.<java.lang.String: char charAt(int)>(0)"->"$r29 := @caughtexception";
    "r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)"->"r31 = r2[1]";
    "r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3)"->"$r29 := @caughtexception";
    "r31 = r2[1]"->"r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()";
    "r31 = r2[1]"->"$r29 := @caughtexception";
    "r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()";
    "r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()"->"$r29 := @caughtexception";
    "$z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()"->"if $z12 == 0 goto $r5 = new java.io.PrintWriter";
    "$z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()"->"$r29 := @caughtexception";
    "if $z12 == 0 goto $r5 = new java.io.PrintWriter"->"$r17 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()";
    "if $z12 == 0 goto $r5 = new java.io.PrintWriter"->"$r5 = new java.io.PrintWriter";
    "if $z12 == 0 goto $r5 = new java.io.PrintWriter"->"$r29 := @caughtexception";
    "$r17 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()"->"r34 = (jline.console.completer.Completer) $r17";
    "$r17 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()"->"$r29 := @caughtexception";
    "r34 = (jline.console.completer.Completer) $r17"->"virtualinvoke r1.<jline.console.ConsoleReader: boolean addCompleter(jline.console.completer.Completer)>(r34)";
    "r34 = (jline.console.completer.Completer) $r17"->"$r29 := @caughtexception";
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean addCompleter(jline.console.completer.Completer)>(r34)"->"goto [?= $z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]";
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean addCompleter(jline.console.completer.Completer)>(r34)"->"$r29 := @caughtexception";
    "goto [?= $z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]"->"$z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z12 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]"->"$r29 := @caughtexception";
    "$r5 = new java.io.PrintWriter"->"$r6 = virtualinvoke r1.<jline.console.ConsoleReader: java.io.Writer getOutput()>()";
    "$r5 = new java.io.PrintWriter"->"$r29 := @caughtexception";
    "$r6 = virtualinvoke r1.<jline.console.ConsoleReader: java.io.Writer getOutput()>()"->"specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6)";
    "$r6 = virtualinvoke r1.<jline.console.ConsoleReader: java.io.Writer getOutput()>()"->"$r29 := @caughtexception";
    "specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6)"->"r35 = $r5";
    "specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6)"->"$r29 := @caughtexception";
    "r35 = $r5"->"$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()";
    "r35 = $r5"->"$r29 := @caughtexception";
    "$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"->"r37 = $r36";
    "$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"->"$r29 := @caughtexception";
    "r37 = $r36"->"if $r36 == null goto (branch)";
    "r37 = $r36"->"$r29 := @caughtexception";
    "if $r36 == null goto (branch)"->"if z11 == 0 goto $r7 = new java.lang.StringBuilder";
    "if $r36 == null goto (branch)"->"goto [?= return]";
    "if $r36 == null goto (branch)"->"$r29 := @caughtexception";
    "if z11 == 0 goto $r7 = new java.lang.StringBuilder"->"$r12 = new java.lang.StringBuilder";
    "if z11 == 0 goto $r7 = new java.lang.StringBuilder"->"$r7 = new java.lang.StringBuilder";
    "if z11 == 0 goto $r7 = new java.lang.StringBuilder"->"$r29 := @caughtexception";
    "$r12 = new java.lang.StringBuilder"->"specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()";
    "$r12 = new java.lang.StringBuilder"->"$r29 := @caughtexception";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u001b[33m======>\u001b[0m\\\"\")";
    "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()"->"$r29 := @caughtexception";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u001b[33m======>\u001b[0m\\\"\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\u001b[33m======>\u001b[0m\\\"\")"->"$r29 := @caughtexception";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"->"$r29 := @caughtexception";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"->"$r29 := @caughtexception";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r16)";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r29 := @caughtexception";
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r16)"->"goto [?= virtualinvoke r35.<java.io.PrintWriter: void flush()>()]";
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r16)"->"$r29 := @caughtexception";
    "goto [?= virtualinvoke r35.<java.io.PrintWriter: void flush()>()]"->"virtualinvoke r35.<java.io.PrintWriter: void flush()>()";
    "goto [?= virtualinvoke r35.<java.io.PrintWriter: void flush()>()]"->"$r29 := @caughtexception";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "$r7 = new java.lang.StringBuilder"->"$r29 := @caughtexception";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"======>\\\"\")";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r29 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"======>\\\"\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"======>\\\"\")"->"$r29 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)"->"$r29 := @caughtexception";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")"->"$r29 := @caughtexception";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r11)";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r29 := @caughtexception";
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r11)"->"virtualinvoke r35.<java.io.PrintWriter: void flush()>()";
    "virtualinvoke r35.<java.io.PrintWriter: void println(java.lang.String)>($r11)"->"$r29 := @caughtexception";
    "virtualinvoke r35.<java.io.PrintWriter: void flush()>()"->"if r31 == null goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")";
    "virtualinvoke r35.<java.io.PrintWriter: void flush()>()"->"$r29 := @caughtexception";
    "if r31 == null goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$i2 = virtualinvoke r37.<java.lang.String: int compareTo(java.lang.String)>(r31)";
    "if r31 == null goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")";
    "if r31 == null goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$r29 := @caughtexception";
    "$i2 = virtualinvoke r37.<java.lang.String: int compareTo(java.lang.String)>(r31)"->"if $i2 != 0 goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")";
    "$i2 = virtualinvoke r37.<java.lang.String: int compareTo(java.lang.String)>(r31)"->"$r29 := @caughtexception";
    "if $i2 != 0 goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"r37 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>(\"password> \", r30)";
    "if $i2 != 0 goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")";
    "if $i2 != 0 goto $z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$r29 := @caughtexception";
    "r37 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>(\"password> \", r30)"->"$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")";
    "r37 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>(\"password> \", r30)"->"$r29 := @caughtexception";
    "$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"if $z13 != 0 goto (branch)";
    "$z13 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"quit\")"->"$r29 := @caughtexception";
    "if $z13 != 0 goto (branch)"->"$z0 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"exit\")";
    "if $z13 != 0 goto (branch)"->"goto [?= return]";
    "if $z13 != 0 goto (branch)"->"$r29 := @caughtexception";
    "$z0 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"exit\")"->"if $z0 == 0 goto $z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")";
    "$z0 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"exit\")"->"$r29 := @caughtexception";
    "if $z0 == 0 goto $z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"->"goto [?= (branch)]";
    "if $z0 == 0 goto $z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"->"$z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")";
    "if $z0 == 0 goto $z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"->"$r29 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return]";
    "goto [?= (branch)]"->"$r29 := @caughtexception";
    "$z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"->"if $z1 == 0 goto $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()";
    "$z1 = virtualinvoke r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"cls\")"->"$r29 := @caughtexception";
    "if $z1 == 0 goto $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"->"virtualinvoke r1.<jline.console.ConsoleReader: boolean clearScreen()>()";
    "if $z1 == 0 goto $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"->"$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()";
    "if $z1 == 0 goto $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()"->"$r29 := @caughtexception";
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean clearScreen()>()"->"goto [?= $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()]";
    "virtualinvoke r1.<jline.console.ConsoleReader: boolean clearScreen()>()"->"$r29 := @caughtexception";
    "goto [?= $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()]"->"$r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()";
    "goto [?= $r36 = virtualinvoke r1.<jline.console.ConsoleReader: java.lang.String readLine()>()]"->"$r29 := @caughtexception";
    "goto [?= return]"->"return";
    "$r29 := @caughtexception"->"r38 = $r29";
    "r38 = $r29"->"virtualinvoke r38.<java.lang.Throwable: void printStackTrace()>()";
    "virtualinvoke r38.<java.lang.Throwable: void printStackTrace()>()"->"return";
}
