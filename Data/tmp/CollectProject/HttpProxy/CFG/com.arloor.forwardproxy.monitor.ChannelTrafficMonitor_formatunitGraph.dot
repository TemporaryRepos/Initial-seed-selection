digraph "unitGraph" {
    "l0 := @parameter0: long"
    "d0 = (double) l0"
    "i8 = 0"
    "d1 = d0"
    "$b1 = d1 cmpl 1024.0"
    "if $b1 < 0 goto $r0 = new java.math.BigDecimal"
    "$r10 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"
    "$i6 = lengthof $r10"
    "$i7 = $i6 - 1"
    "if i8 >= $i7 goto $r0 = new java.math.BigDecimal"
    "d1 = d1 / 1024.0"
    "i8 = i8 + 1"
    "d0 = d1"
    "goto [?= $b1 = d1 cmpl 1024.0]"
    "$r0 = new java.math.BigDecimal"
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d0)"
    "r11 = $r0"
    "$r1 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"
    "$i2 = lengthof $r1"
    "$i3 = $i2 - 1"
    "if i8 != $i3 goto $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"
    "$r9 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"
    "r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r9)"
    "goto [?= r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()]"
    "$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"
    "r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r2)"
    "r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()"
    "$z0 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>(\".00\")"
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"
    "$i4 = virtualinvoke r13.<java.lang.String: int length()>()"
    "$i5 = $i4 - 3"
    "r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"
    "$r5 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"
    "$r6 = $r5[i8]"
    "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "return $r8"
    "l0 := @parameter0: long"->"d0 = (double) l0";
    "d0 = (double) l0"->"i8 = 0";
    "i8 = 0"->"d1 = d0";
    "d1 = d0"->"$b1 = d1 cmpl 1024.0";
    "$b1 = d1 cmpl 1024.0"->"if $b1 < 0 goto $r0 = new java.math.BigDecimal";
    "if $b1 < 0 goto $r0 = new java.math.BigDecimal"->"$r10 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>";
    "if $b1 < 0 goto $r0 = new java.math.BigDecimal"->"$r0 = new java.math.BigDecimal";
    "$r10 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"->"$i6 = lengthof $r10";
    "$i6 = lengthof $r10"->"$i7 = $i6 - 1";
    "$i7 = $i6 - 1"->"if i8 >= $i7 goto $r0 = new java.math.BigDecimal";
    "if i8 >= $i7 goto $r0 = new java.math.BigDecimal"->"d1 = d1 / 1024.0";
    "if i8 >= $i7 goto $r0 = new java.math.BigDecimal"->"$r0 = new java.math.BigDecimal";
    "d1 = d1 / 1024.0"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"d0 = d1";
    "d0 = d1"->"goto [?= $b1 = d1 cmpl 1024.0]";
    "goto [?= $b1 = d1 cmpl 1024.0]"->"$b1 = d1 cmpl 1024.0";
    "$r0 = new java.math.BigDecimal"->"specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d0)";
    "specialinvoke $r0.<java.math.BigDecimal: void <init>(double)>(d0)"->"r11 = $r0";
    "r11 = $r0"->"$r1 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>";
    "$r1 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"->"$i2 = lengthof $r1";
    "$i2 = lengthof $r1"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"if i8 != $i3 goto $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>";
    "if i8 != $i3 goto $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"->"$r9 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>";
    "if i8 != $i3 goto $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"->"$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>";
    "$r9 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"->"r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r9)";
    "r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(2, $r9)"->"goto [?= r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()]";
    "goto [?= r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()]"->"r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()";
    "$r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>"->"r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r2)";
    "r12 = virtualinvoke r11.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r2)"->"r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()";
    "r13 = virtualinvoke r12.<java.math.BigDecimal: java.lang.String toString()>()"->"$z0 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>(\".00\")";
    "$z0 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>(\".00\")"->"if $z0 == 0 goto $r3 = new java.lang.StringBuilder";
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"->"$i4 = virtualinvoke r13.<java.lang.String: int length()>()";
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "$i4 = virtualinvoke r13.<java.lang.String: int length()>()"->"$i5 = $i4 - 3";
    "$i5 = $i4 - 3"->"r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)";
    "r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)"->"$r5 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>";
    "$r5 = <com.arloor.forwardproxy.monitor.ChannelTrafficMonitor: java.lang.String[] array>"->"$r6 = $r5[i8]";
    "$r6 = $r5[i8]"->"$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)";
    "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"return $r8";
}
