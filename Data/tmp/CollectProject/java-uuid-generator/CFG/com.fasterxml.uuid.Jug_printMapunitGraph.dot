digraph "unitGraph" {
    "r0 := @parameter0: java.util.Map"
    "r5 := @parameter1: java.io.PrintStream"
    "z1 := @parameter2: boolean"
    "i1 = 0"
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()"
    "r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return"
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"
    "r4 = (java.util.Map$Entry) $r3"
    "i1 = i1 + 1"
    "if i1 <= 1 goto (branch)"
    "if i1 >= i0 goto virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\", \")"
    "goto [?= (branch)]"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")"
    "if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"--\")"
    "$r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r7 = (java.lang.String) $r6"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r7)"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" (\")"
    "if z1 == 0 goto $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"-\")"
    "$r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "$r9 = (java.lang.String) $r8"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r9)"
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\")\")"
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r0 := @parameter0: java.util.Map"->"r5 := @parameter1: java.io.PrintStream";
    "r5 := @parameter1: java.io.PrintStream"->"z1 := @parameter2: boolean";
    "z1 := @parameter2: boolean"->"i1 = 0";
    "i1 = 0"->"i0 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()";
    "$r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()"->"r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()";
    "r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return"->"return";
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"->"r4 = (java.util.Map$Entry) $r3";
    "r4 = (java.util.Map$Entry) $r3"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"if i1 <= 1 goto (branch)";
    "if i1 <= 1 goto (branch)"->"if i1 >= i0 goto virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")";
    "if i1 <= 1 goto (branch)"->"if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "if i1 >= i0 goto virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\", \")";
    "if i1 >= i0 goto virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\", \")"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" and \")"->"if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"--\")";
    "if z1 == 0 goto $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"--\")"->"$r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r7 = (java.lang.String) $r6";
    "$r7 = (java.lang.String) $r6"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r7)";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r7)"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" (\")";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\" (\")"->"if z1 == 0 goto $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "if z1 == 0 goto $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"-\")";
    "if z1 == 0 goto $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\"-\")"->"$r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "$r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r9 = (java.lang.String) $r8";
    "$r9 = (java.lang.String) $r8"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r9)";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>($r9)"->"virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\")\")";
    "virtualinvoke r5.<java.io.PrintStream: void print(java.lang.String)>(\")\")"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
}
