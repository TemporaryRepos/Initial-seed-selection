digraph "unitGraph" {
    "r0 := @this: org.snomed.otf.owltoolkit.Application"
    "r3 := @parameter0: java.lang.String"
    "r6 := @parameter1: java.util.List"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting parameter \")"
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$z0 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r3)"
    "specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r5, $z0)"
    "$i0 = interfaceinvoke r6.<java.util.List: int indexOf(java.lang.Object)>(r3)"
    "i1 = $i0 + 1"
    "$r7 = new java.lang.StringBuilder"
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting a value with parameter \")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "$i2 = interfaceinvoke r6.<java.util.List: int size()>()"
    "if i1 >= $i2 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)]"
    "$z1 = 0"
    "specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)"
    "$r11 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1)"
    "$r12 = (java.lang.String) $r11"
    "return $r12"
    "r0 := @this: org.snomed.otf.owltoolkit.Application"->"r3 := @parameter0: java.lang.String";
    "r3 := @parameter0: java.lang.String"->"r6 := @parameter1: java.util.List";
    "r6 := @parameter1: java.util.List"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting parameter \")";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting parameter \")"->"$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"$z0 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r3)";
    "$z0 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r3)"->"specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r5, $z0)";
    "specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r5, $z0)"->"$i0 = interfaceinvoke r6.<java.util.List: int indexOf(java.lang.Object)>(r3)";
    "$i0 = interfaceinvoke r6.<java.util.List: int indexOf(java.lang.Object)>(r3)"->"i1 = $i0 + 1";
    "i1 = $i0 + 1"->"$r7 = new java.lang.StringBuilder";
    "$r7 = new java.lang.StringBuilder"->"specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting a value with parameter \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting a value with parameter \")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"$i2 = interfaceinvoke r6.<java.util.List: int size()>()";
    "$i2 = interfaceinvoke r6.<java.util.List: int size()>()"->"if i1 >= $i2 goto $z1 = 0";
    "if i1 >= $i2 goto $z1 = 0"->"$z1 = 1";
    "if i1 >= $i2 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)]";
    "goto [?= specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)]"->"specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)";
    "$z1 = 0"->"specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)";
    "specialinvoke r0.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>($r10, $z1)"->"$r11 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1)";
    "$r11 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1)"->"$r12 = (java.lang.String) $r11";
    "$r12 = (java.lang.String) $r11"->"return $r12";
}
