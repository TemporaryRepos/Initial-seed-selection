digraph "unitGraph" {
    "r2 := @this: org.snomed.otf.owltoolkit.Application"
    "r0 := @parameter0: java.lang.String[]"
    "r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r0)"
    "z10 = 0"
    "$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()"
    "if $z0 != 0 goto z11 = 1"
    "$z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-help\")"
    "if $z1 == 0 goto r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"
    "z11 = 1"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void printHelp()>()"
    "goto [?= return]"
    "r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto $z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")"
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"
    "r5 = (java.lang.String) $r4"
    "$z8 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(\",\")"
    "if $z8 != 0 goto $z12 = 0"
    "$z9 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(\",\")"
    "if $z9 != 0 goto $z12 = 0"
    "$z12 = 1"
    "goto [?= specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)]"
    "$z12 = 0"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)"
    "goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"
    "$z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")"
    "if $z3 == 0 goto $z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")"
    "z10 = 1"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void classify(java.util.List)>(r1)"
    "goto [?= (branch)]"
    "$z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")"
    "if $z4 == 0 goto $z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void statedRelationshipsToOwlReferenceSet(java.util.List)>(r1)"
    "$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")"
    "if $z5 == 0 goto $z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void owlReferenceSetToStatedRelationships(java.util.List)>(r1)"
    "$z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")"
    "if $z6 == 0 goto (branch)"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void convertStatedRelationshipsToOwlReferenceSetAndReconcile(java.util.List)>(r1)"
    "if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)"
    "$z7 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-to-owl\")"
    "if $z7 == 0 goto return"
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)"
    "return"
    "r2 := @this: org.snomed.otf.owltoolkit.Application"->"r0 := @parameter0: java.lang.String[]";
    "r0 := @parameter0: java.lang.String[]"->"r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r0)";
    "r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r0)"->"z10 = 0";
    "z10 = 0"->"$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()";
    "$z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()"->"if $z0 != 0 goto z11 = 1";
    "if $z0 != 0 goto z11 = 1"->"$z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-help\")";
    "if $z0 != 0 goto z11 = 1"->"z11 = 1";
    "$z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-help\")"->"if $z1 == 0 goto r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()";
    "if $z1 == 0 goto r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"->"z11 = 1";
    "if $z1 == 0 goto r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"->"r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()";
    "z11 = 1"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void printHelp()>()";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void printHelp()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto $z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")";
    "if $z2 == 0 goto $z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")"->"$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto $z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")"->"$z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")";
    "$r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()"->"r5 = (java.lang.String) $r4";
    "r5 = (java.lang.String) $r4"->"$z8 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(\",\")";
    "$z8 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(\",\")"->"if $z8 != 0 goto $z12 = 0";
    "if $z8 != 0 goto $z12 = 0"->"$z9 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(\",\")";
    "if $z8 != 0 goto $z12 = 0"->"$z12 = 0";
    "$z9 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(\",\")"->"if $z9 != 0 goto $z12 = 0";
    "if $z9 != 0 goto $z12 = 0"->"$z12 = 1";
    "if $z9 != 0 goto $z12 = 0"->"$z12 = 0";
    "$z12 = 1"->"goto [?= specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)]";
    "goto [?= specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)]"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)";
    "$z12 = 0"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void assertTrue(java.lang.String,boolean)>(\"When specifying multiple archives please include no whitespace before or after the comma.\", $z12)"->"goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-classify\")"->"if $z3 == 0 goto $z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")";
    "if $z3 == 0 goto $z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")"->"z10 = 1";
    "if $z3 == 0 goto $z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")"->"$z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")";
    "z10 = 1"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void classify(java.util.List)>(r1)";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void classify(java.util.List)>(r1)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "$z4 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl\")"->"if $z4 == 0 goto $z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")";
    "if $z4 == 0 goto $z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")"->"z10 = 1";
    "if $z4 == 0 goto $z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")"->"$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")";
    "z10 = 1"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void statedRelationshipsToOwlReferenceSet(java.util.List)>(r1)";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void statedRelationshipsToOwlReferenceSet(java.util.List)>(r1)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "$z5 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-owl-to-stated\")"->"if $z5 == 0 goto $z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")";
    "if $z5 == 0 goto $z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")"->"z10 = 1";
    "if $z5 == 0 goto $z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")"->"$z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")";
    "z10 = 1"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void owlReferenceSetToStatedRelationships(java.util.List)>(r1)";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void owlReferenceSetToStatedRelationships(java.util.List)>(r1)"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "$z6 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-stated-to-complete-owl-reconcile\")"->"if $z6 == 0 goto (branch)";
    "if $z6 == 0 goto (branch)"->"z10 = 1";
    "if $z6 == 0 goto (branch)"->"if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "z10 = 1"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void convertStatedRelationshipsToOwlReferenceSetAndReconcile(java.util.List)>(r1)";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void convertStatedRelationshipsToOwlReferenceSetAndReconcile(java.util.List)>(r1)"->"if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)"->"$z7 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-to-owl\")";
    "if z10 == 0 goto specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "$z7 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(\"-rf2-to-owl\")"->"if $z7 == 0 goto return";
    "if $z7 == 0 goto return"->"specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)";
    "if $z7 == 0 goto return"->"return";
    "specialinvoke r2.<org.snomed.otf.owltoolkit.Application: void rf2ToOwl(java.util.List)>(r1)"->"return";
}
