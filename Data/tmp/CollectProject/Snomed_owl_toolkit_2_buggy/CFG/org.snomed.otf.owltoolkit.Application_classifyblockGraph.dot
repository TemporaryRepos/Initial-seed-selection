digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @this: org.snomed.otf.owltoolkit.Application;
r1 := @parameter0: java.util.List;
r2 = specialinvoke r0.<org.snomed.otf.owltoolkit.Application: java.util.Set getSnapshotFiles(java.util.List)>(r1);
r3 = specialinvoke r0.<org.snomed.otf.owltoolkit.Application: java.io.File getDeltaFiles(java.util.List)>(r1);
$r4 = new java.io.File;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"classification-results-\");
$r8 = <org.snomed.otf.owltoolkit.Application: java.text.SimpleDateFormat DATETIME_FORMAT>;
$r7 = new java.util.Date;
specialinvoke $r7.<java.util.Date: void <init>()>();
$r9 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);
$r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".zip\");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r12);
r13 = $r4;
$r14 = new org.snomed.otf.owltoolkit.service.SnomedReasonerService;
specialinvoke $r14.<org.snomed.otf.owltoolkit.service.SnomedReasonerService: void <init>()>();
virtualinvoke $r14.<org.snomed.otf.owltoolkit.service.SnomedReasonerService: void classify(java.lang.String,java.util.Set,java.io.File,java.io.File,java.lang.String,boolean)>(\"command-line\", r2, r3, r13, \"org.semanticweb.elk.owlapi.ElkReasonerFactory\", 0);
$r16 = <java.lang.System: java.io.PrintStream out>;
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Classification results written to \");
$r18 = virtualinvoke r13.<java.io.File: java.lang.String getAbsolutePath()>();
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);
return;
"
}
