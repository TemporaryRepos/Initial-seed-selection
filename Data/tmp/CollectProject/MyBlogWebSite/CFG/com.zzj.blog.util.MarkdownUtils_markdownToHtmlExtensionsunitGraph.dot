digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String"
    "$r0 = staticinvoke <org.commonmark.ext.heading.anchor.HeadingAnchorExtension: org.commonmark.Extension create()>()"
    "r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0)"
    "$r2 = newarray (org.commonmark.Extension)[1]"
    "$r3 = staticinvoke <org.commonmark.ext.gfm.tables.TablesExtension: org.commonmark.Extension create()>()"
    "$r2[0] = $r3"
    "r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)"
    "$r5 = staticinvoke <org.commonmark.parser.Parser: org.commonmark.parser.Parser$Builder builder()>()"
    "$r6 = virtualinvoke $r5.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser$Builder extensions(java.lang.Iterable)>(r4)"
    "r7 = virtualinvoke $r6.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser build()>()"
    "r9 = virtualinvoke r7.<org.commonmark.parser.Parser: org.commonmark.node.Node parse(java.lang.String)>(r8)"
    "$r10 = staticinvoke <org.commonmark.renderer.html.HtmlRenderer: org.commonmark.renderer.html.HtmlRenderer$Builder builder()>()"
    "$r11 = virtualinvoke $r10.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r1)"
    "$r12 = virtualinvoke $r11.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r4)"
    "$r13 = new com.zzj.blog.util.MarkdownUtils$1"
    "specialinvoke $r13.<com.zzj.blog.util.MarkdownUtils$1: void <init>()>()"
    "$r14 = virtualinvoke $r12.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder attributeProviderFactory(org.commonmark.renderer.html.AttributeProviderFactory)>($r13)"
    "r15 = virtualinvoke $r14.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer build()>()"
    "$r16 = virtualinvoke r15.<org.commonmark.renderer.html.HtmlRenderer: java.lang.String render(org.commonmark.node.Node)>(r9)"
    "return $r16"
    "r8 := @parameter0: java.lang.String"->"$r0 = staticinvoke <org.commonmark.ext.heading.anchor.HeadingAnchorExtension: org.commonmark.Extension create()>()";
    "$r0 = staticinvoke <org.commonmark.ext.heading.anchor.HeadingAnchorExtension: org.commonmark.Extension create()>()"->"r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0)";
    "r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0)"->"$r2 = newarray (org.commonmark.Extension)[1]";
    "$r2 = newarray (org.commonmark.Extension)[1]"->"$r3 = staticinvoke <org.commonmark.ext.gfm.tables.TablesExtension: org.commonmark.Extension create()>()";
    "$r3 = staticinvoke <org.commonmark.ext.gfm.tables.TablesExtension: org.commonmark.Extension create()>()"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)";
    "r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)"->"$r5 = staticinvoke <org.commonmark.parser.Parser: org.commonmark.parser.Parser$Builder builder()>()";
    "$r5 = staticinvoke <org.commonmark.parser.Parser: org.commonmark.parser.Parser$Builder builder()>()"->"$r6 = virtualinvoke $r5.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser$Builder extensions(java.lang.Iterable)>(r4)";
    "$r6 = virtualinvoke $r5.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser$Builder extensions(java.lang.Iterable)>(r4)"->"r7 = virtualinvoke $r6.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser build()>()";
    "r7 = virtualinvoke $r6.<org.commonmark.parser.Parser$Builder: org.commonmark.parser.Parser build()>()"->"r9 = virtualinvoke r7.<org.commonmark.parser.Parser: org.commonmark.node.Node parse(java.lang.String)>(r8)";
    "r9 = virtualinvoke r7.<org.commonmark.parser.Parser: org.commonmark.node.Node parse(java.lang.String)>(r8)"->"$r10 = staticinvoke <org.commonmark.renderer.html.HtmlRenderer: org.commonmark.renderer.html.HtmlRenderer$Builder builder()>()";
    "$r10 = staticinvoke <org.commonmark.renderer.html.HtmlRenderer: org.commonmark.renderer.html.HtmlRenderer$Builder builder()>()"->"$r11 = virtualinvoke $r10.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r1)";
    "$r11 = virtualinvoke $r10.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r1)"->"$r12 = virtualinvoke $r11.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r4)";
    "$r12 = virtualinvoke $r11.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder extensions(java.lang.Iterable)>(r4)"->"$r13 = new com.zzj.blog.util.MarkdownUtils$1";
    "$r13 = new com.zzj.blog.util.MarkdownUtils$1"->"specialinvoke $r13.<com.zzj.blog.util.MarkdownUtils$1: void <init>()>()";
    "specialinvoke $r13.<com.zzj.blog.util.MarkdownUtils$1: void <init>()>()"->"$r14 = virtualinvoke $r12.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder attributeProviderFactory(org.commonmark.renderer.html.AttributeProviderFactory)>($r13)";
    "$r14 = virtualinvoke $r12.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer$Builder attributeProviderFactory(org.commonmark.renderer.html.AttributeProviderFactory)>($r13)"->"r15 = virtualinvoke $r14.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer build()>()";
    "r15 = virtualinvoke $r14.<org.commonmark.renderer.html.HtmlRenderer$Builder: org.commonmark.renderer.html.HtmlRenderer build()>()"->"$r16 = virtualinvoke r15.<org.commonmark.renderer.html.HtmlRenderer: java.lang.String render(org.commonmark.node.Node)>(r9)";
    "$r16 = virtualinvoke r15.<org.commonmark.renderer.html.HtmlRenderer: java.lang.String render(org.commonmark.node.Node)>(r9)"->"return $r16";
}
