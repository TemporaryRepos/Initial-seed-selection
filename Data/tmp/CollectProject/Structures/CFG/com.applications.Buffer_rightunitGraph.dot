digraph "unitGraph" {
    "r0 := @this: com.applications.Buffer"
    "i1 := @parameter0: int"
    "$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>"
    "i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>()"
    "if i1 <= i0 goto (branch)"
    "$r5 = new java.lang.IllegalArgumentException"
    "specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"k is outside buffer size\")"
    "throw $r5"
    "if i1 == 0 goto return"
    "$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>"
    "$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>"
    "$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>()"
    "virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4)"
    "i1 = i1 + -1"
    "goto [?= (branch)]"
    "return"
    "r0 := @this: com.applications.Buffer"->"i1 := @parameter0: int";
    "i1 := @parameter0: int"->"$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>";
    "$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>"->"i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>()";
    "i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>()"->"if i1 <= i0 goto (branch)";
    "if i1 <= i0 goto (branch)"->"$r5 = new java.lang.IllegalArgumentException";
    "if i1 <= i0 goto (branch)"->"if i1 == 0 goto return";
    "$r5 = new java.lang.IllegalArgumentException"->"specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"k is outside buffer size\")";
    "specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"k is outside buffer size\")"->"throw $r5";
    "if i1 == 0 goto return"->"$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>";
    "if i1 == 0 goto return"->"return";
    "$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>"->"$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>";
    "$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>"->"$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>()";
    "$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>()"->"virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4)";
    "virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4)"->"i1 = i1 + -1";
    "i1 = i1 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 == 0 goto return";
}
