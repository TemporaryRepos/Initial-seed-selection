digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
r20 := @parameter0: java.lang.String[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Unit testing elementary data structures!\");
z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$z0 = <com.AcceptanceTester: boolean $assertionsDisabled>;
"
    "Block 2:
[preds: 1 ] [succs: 3 6 7 ]
if $z0 != 0 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r14 = new java.lang.AssertionError;
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
throw $r14;
"
    "Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= z2 = 0];
"
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
z2 = 0;
if z1 != 0 goto i1 = 0;
"
    "Block 9:
[preds: 8 ] [succs: 18 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Please enable assertions, run with java -ea\");
z2 = 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 8 ] [succs: 11 ]
i1 = 0;
"
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <com.AcceptanceTester: com.Test[] tests>;
$i0 = lengthof $r1;
if i1 >= $i0 goto (branch);
"
    "Block 12:
[preds: 11 ] [succs: 13 18 ]
if z2 != 0 goto (branch);
"
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
$r6 = <com.AcceptanceTester: com.Test[] tests>;
r7 = $r6[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
"
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
interfaceinvoke r7.<com.Test: void run()>();
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= i1 = i1 + 1];
"
    "Block 16:
[preds: 13 14 ] [succs: 17 ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"TEST FAILED\");
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Printing stack trace...\");
virtualinvoke r16.<java.lang.Throwable: void printStackTrace()>();
z2 = 1;
"
    "Block 17:
[preds: 15 16 ] [succs: 11 ]
i1 = i1 + 1;
goto [?= $r1 = <com.AcceptanceTester: com.Test[] tests>];
"
    "Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Not accepted!\");
goto [?= return];
"
    "Block 20:
[preds: 18 ] [succs: 21 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"ACCEPTED\");
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"You are awesome!\");
"
    "Block 21:
[preds: 19 20 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
r20 := @parameter0: java.lang.String[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Unit testing elementary data structures!\");
z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
$z0 = <com.AcceptanceTester: boolean $assertionsDisabled>;
";
    "Block 0:
[preds: ] [succs: 1 7 ]
r20 := @parameter0: java.lang.String[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Unit testing elementary data structures!\");
z1 = 0;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$z0 = <com.AcceptanceTester: boolean $assertionsDisabled>;
"->"Block 2:
[preds: 1 ] [succs: 3 6 7 ]
if $z0 != 0 goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
$z0 = <com.AcceptanceTester: boolean $assertionsDisabled>;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 7 ]
if $z0 != 0 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
$r14 = new java.lang.AssertionError;
";
    "Block 2:
[preds: 1 ] [succs: 3 6 7 ]
if $z0 != 0 goto (branch);
"->"Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= z2 = 0];
";
    "Block 2:
[preds: 1 ] [succs: 3 6 7 ]
if $z0 != 0 goto (branch);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r14 = new java.lang.AssertionError;
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r14 = new java.lang.AssertionError;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
"->"Block 5:
[preds: 4 ] [succs: 7 ]
throw $r14;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
throw $r14;
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
";
    "Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= z2 = 0];
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
z2 = 0;
if z1 != 0 goto i1 = 0;
";
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: 8 ]
$r19 := @caughtexception;
r21 = $r19;
z1 = 1;
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
z2 = 0;
if z1 != 0 goto i1 = 0;
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
z2 = 0;
if z1 != 0 goto i1 = 0;
"->"Block 9:
[preds: 8 ] [succs: 18 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Please enable assertions, run with java -ea\");
z2 = 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
z2 = 0;
if z1 != 0 goto i1 = 0;
"->"Block 10:
[preds: 8 ] [succs: 11 ]
i1 = 0;
";
    "Block 9:
[preds: 8 ] [succs: 18 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(\"Please enable assertions, run with java -ea\");
z2 = 1;
goto [?= (branch)];
"->"Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 10:
[preds: 8 ] [succs: 11 ]
i1 = 0;
"->"Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <com.AcceptanceTester: com.Test[] tests>;
$i0 = lengthof $r1;
if i1 >= $i0 goto (branch);
";
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <com.AcceptanceTester: com.Test[] tests>;
$i0 = lengthof $r1;
if i1 >= $i0 goto (branch);
"->"Block 12:
[preds: 11 ] [succs: 13 18 ]
if z2 != 0 goto (branch);
";
    "Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <com.AcceptanceTester: com.Test[] tests>;
$i0 = lengthof $r1;
if i1 >= $i0 goto (branch);
"->"Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 12:
[preds: 11 ] [succs: 13 18 ]
if z2 != 0 goto (branch);
"->"Block 13:
[preds: 12 ] [succs: 14 16 ]
$r6 = <com.AcceptanceTester: com.Test[] tests>;
r7 = $r6[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
";
    "Block 12:
[preds: 11 ] [succs: 13 18 ]
if z2 != 0 goto (branch);
"->"Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
$r6 = <com.AcceptanceTester: com.Test[] tests>;
r7 = $r6[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
"->"Block 14:
[preds: 13 ] [succs: 15 16 ]
interfaceinvoke r7.<com.Test: void run()>();
";
    "Block 13:
[preds: 12 ] [succs: 14 16 ]
$r6 = <com.AcceptanceTester: com.Test[] tests>;
r7 = $r6[i1];
$r9 = <java.lang.System: java.io.PrintStream out>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Running \");
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);
"->"Block 16:
[preds: 13 14 ] [succs: 17 ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"TEST FAILED\");
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Printing stack trace...\");
virtualinvoke r16.<java.lang.Throwable: void printStackTrace()>();
z2 = 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
interfaceinvoke r7.<com.Test: void run()>();
"->"Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= i1 = i1 + 1];
";
    "Block 14:
[preds: 13 ] [succs: 15 16 ]
interfaceinvoke r7.<com.Test: void run()>();
"->"Block 16:
[preds: 13 14 ] [succs: 17 ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"TEST FAILED\");
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Printing stack trace...\");
virtualinvoke r16.<java.lang.Throwable: void printStackTrace()>();
z2 = 1;
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
goto [?= i1 = i1 + 1];
"->"Block 17:
[preds: 15 16 ] [succs: 11 ]
i1 = i1 + 1;
goto [?= $r1 = <com.AcceptanceTester: com.Test[] tests>];
";
    "Block 16:
[preds: 13 14 ] [succs: 17 ]
$r15 := @caughtexception;
r16 = $r15;
$r17 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(\"TEST FAILED\");
$r18 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(\"Printing stack trace...\");
virtualinvoke r16.<java.lang.Throwable: void printStackTrace()>();
z2 = 1;
"->"Block 17:
[preds: 15 16 ] [succs: 11 ]
i1 = i1 + 1;
goto [?= $r1 = <com.AcceptanceTester: com.Test[] tests>];
";
    "Block 17:
[preds: 15 16 ] [succs: 11 ]
i1 = i1 + 1;
goto [?= $r1 = <com.AcceptanceTester: com.Test[] tests>];
"->"Block 11:
[preds: 10 17 ] [succs: 12 18 ]
$r1 = <com.AcceptanceTester: com.Test[] tests>;
$i0 = lengthof $r1;
if i1 >= $i0 goto (branch);
";
    "Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 19:
[preds: 18 ] [succs: 21 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Not accepted!\");
goto [?= return];
";
    "Block 18:
[preds: 9 11 12 ] [succs: 19 20 ]
if z2 == 0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 20:
[preds: 18 ] [succs: 21 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"ACCEPTED\");
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"You are awesome!\");
";
    "Block 19:
[preds: 18 ] [succs: 21 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"FAILED\");
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Not accepted!\");
goto [?= return];
"->"Block 21:
[preds: 19 20 ] [succs: ]
return;
";
    "Block 20:
[preds: 18 ] [succs: 21 ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"ACCEPTED\");
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"You are awesome!\");
"->"Block 21:
[preds: 19 20 ] [succs: ]
return;
";
}
