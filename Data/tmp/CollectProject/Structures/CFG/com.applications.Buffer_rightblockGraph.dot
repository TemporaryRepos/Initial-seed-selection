digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.applications.Buffer;
i1 := @parameter0: int;
$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>;
i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>();
if i1 <= i0 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"k is outside buffer size\");
throw $r5;
"
    "Block 2:
[preds: 0 3 ] [succs: 3 4 ]
if i1 == 0 goto return;
"
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>;
$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>;
$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>();
virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4);
i1 = i1 + -1;
goto [?= (branch)];
"
    "Block 4:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.applications.Buffer;
i1 := @parameter0: int;
$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>;
i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>();
if i1 <= i0 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: ]
$r5 = new java.lang.IllegalArgumentException;
specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"k is outside buffer size\");
throw $r5;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @this: com.applications.Buffer;
i1 := @parameter0: int;
$r1 = r0.<com.applications.Buffer: com.stacks.Stack second>;
i0 = virtualinvoke $r1.<com.stacks.Stack: int size()>();
if i1 <= i0 goto (branch);
"->"Block 2:
[preds: 0 3 ] [succs: 3 4 ]
if i1 == 0 goto return;
";
    "Block 2:
[preds: 0 3 ] [succs: 3 4 ]
if i1 == 0 goto return;
"->"Block 3:
[preds: 2 ] [succs: 2 ]
$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>;
$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>;
$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>();
virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4);
i1 = i1 + -1;
goto [?= (branch)];
";
    "Block 2:
[preds: 0 3 ] [succs: 3 4 ]
if i1 == 0 goto return;
"->"Block 4:
[preds: 2 ] [succs: ]
return;
";
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r3 = r0.<com.applications.Buffer: com.stacks.Stack first>;
$r2 = r0.<com.applications.Buffer: com.stacks.Stack second>;
$r4 = virtualinvoke $r2.<com.stacks.Stack: java.lang.Object pop()>();
virtualinvoke $r3.<com.stacks.Stack: void push(java.lang.Object)>($r4);
i1 = i1 + -1;
goto [?= (branch)];
"->"Block 2:
[preds: 0 3 ] [succs: 3 4 ]
if i1 == 0 goto return;
";
}
