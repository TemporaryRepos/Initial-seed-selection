digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r7 = staticinvoke <io.github.biezhi.wechat.utils.MD5Checksum: byte[] createChecksum(java.lang.String)>(r0)"
    "r8 = \"\""
    "i4 = 0"
    "$i0 = lengthof r7"
    "if i4 >= $i0 goto return r8"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"
    "$b1 = r7[i4]"
    "$i2 = $b1 & 255"
    "$i3 = $i2 + 256"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i3, 16)"
    "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1)"
    "$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)"
    "r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i4 = i4 + 1"
    "goto [?= $i0 = lengthof r7]"
    "return r8"
    "$r6 := @caughtexception"
    "r9 = $r6"
    "return \"\""
    "r0 := @parameter0: java.lang.String"->"r7 = staticinvoke <io.github.biezhi.wechat.utils.MD5Checksum: byte[] createChecksum(java.lang.String)>(r0)";
    "r0 := @parameter0: java.lang.String"->"$r6 := @caughtexception";
    "r7 = staticinvoke <io.github.biezhi.wechat.utils.MD5Checksum: byte[] createChecksum(java.lang.String)>(r0)"->"r8 = \"\"";
    "r7 = staticinvoke <io.github.biezhi.wechat.utils.MD5Checksum: byte[] createChecksum(java.lang.String)>(r0)"->"$r6 := @caughtexception";
    "r8 = \"\""->"i4 = 0";
    "r8 = \"\""->"$r6 := @caughtexception";
    "i4 = 0"->"$i0 = lengthof r7";
    "i4 = 0"->"$r6 := @caughtexception";
    "$i0 = lengthof r7"->"if i4 >= $i0 goto return r8";
    "$i0 = lengthof r7"->"$r6 := @caughtexception";
    "if i4 >= $i0 goto return r8"->"$r1 = new java.lang.StringBuilder";
    "if i4 >= $i0 goto return r8"->"return r8";
    "if i4 >= $i0 goto return r8"->"$r6 := @caughtexception";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "$r1 = new java.lang.StringBuilder"->"$r6 := @caughtexception";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r6 := @caughtexception";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"->"$b1 = r7[i4]";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)"->"$r6 := @caughtexception";
    "$b1 = r7[i4]"->"$i2 = $b1 & 255";
    "$b1 = r7[i4]"->"$r6 := @caughtexception";
    "$i2 = $b1 & 255"->"$i3 = $i2 + 256";
    "$i2 = $b1 & 255"->"$r6 := @caughtexception";
    "$i3 = $i2 + 256"->"$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i3, 16)";
    "$i3 = $i2 + 256"->"$r6 := @caughtexception";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i3, 16)"->"$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i3, 16)"->"$r6 := @caughtexception";
    "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1)"->"$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)";
    "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1)"->"$r6 := @caughtexception";
    "$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)"->"r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)"->"$r6 := @caughtexception";
    "r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"i4 = i4 + 1";
    "r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r6 := @caughtexception";
    "i4 = i4 + 1"->"goto [?= $i0 = lengthof r7]";
    "i4 = i4 + 1"->"$r6 := @caughtexception";
    "goto [?= $i0 = lengthof r7]"->"$i0 = lengthof r7";
    "goto [?= $i0 = lengthof r7]"->"$r6 := @caughtexception";
    "$r6 := @caughtexception"->"r9 = $r6";
    "r9 = $r6"->"return \"\"";
}
