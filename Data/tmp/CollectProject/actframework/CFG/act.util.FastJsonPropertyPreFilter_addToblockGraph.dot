digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: act.util.FastJsonPropertyPreFilter;
r8 := @parameter0: java.util.Set;
r0 := @parameter1: java.lang.String[];
r1 = r0;
i0 = lengthof r1;
i2 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i2 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i2];
$z0 = staticinvoke <org.osgl.util.S: boolean blank(java.lang.String)>(r2);
if $z0 == 0 goto $r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
"
    "Block 3:
[preds: 2 ] [succs: 7 ]
goto [?= i2 = i2 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r2);
r5 = r4;
i1 = lengthof r5;
i3 = 0;
"
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
if i3 >= i1 goto i2 = i2 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 5 ]
r6 = r5[i3];
specialinvoke r7.<act.util.FastJsonPropertyPreFilter: void addOneTo(java.util.Set,java.lang.String)>(r8, r6);
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 5 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: act.util.FastJsonPropertyPreFilter;
r8 := @parameter0: java.util.Set;
r0 := @parameter1: java.lang.String[];
r1 = r0;
i0 = lengthof r1;
i2 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i2 >= i0 goto return;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i2 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i2];
$z0 = staticinvoke <org.osgl.util.S: boolean blank(java.lang.String)>(r2);
if $z0 == 0 goto $r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i2 >= i0 goto return;
"->"Block 8:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i2];
$z0 = staticinvoke <org.osgl.util.S: boolean blank(java.lang.String)>(r2);
if $z0 == 0 goto $r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
"->"Block 3:
[preds: 2 ] [succs: 7 ]
goto [?= i2 = i2 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i2];
$z0 = staticinvoke <org.osgl.util.S: boolean blank(java.lang.String)>(r2);
if $z0 == 0 goto $r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r2);
r5 = r4;
i1 = lengthof r5;
i3 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 7 ]
goto [?= i2 = i2 + 1];
"->"Block 7:
[preds: 3 5 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r3 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern PROPERTY_SEPARATOR>;
r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r2);
r5 = r4;
i1 = lengthof r5;
i3 = 0;
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
if i3 >= i1 goto i2 = i2 + 1;
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
if i3 >= i1 goto i2 = i2 + 1;
"->"Block 6:
[preds: 5 ] [succs: 5 ]
r6 = r5[i3];
specialinvoke r7.<act.util.FastJsonPropertyPreFilter: void addOneTo(java.util.Set,java.lang.String)>(r8, r6);
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 6 ] [succs: 6 7 ]
if i3 >= i1 goto i2 = i2 + 1;
"->"Block 7:
[preds: 3 5 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 5 ]
r6 = r5[i3];
specialinvoke r7.<act.util.FastJsonPropertyPreFilter: void addOneTo(java.util.Set,java.lang.String)>(r8, r6);
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 5:
[preds: 4 6 ] [succs: 6 7 ]
if i3 >= i1 goto i2 = i2 + 1;
";
    "Block 7:
[preds: 3 5 ] [succs: 1 ]
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i2 >= i0 goto return;
";
}
