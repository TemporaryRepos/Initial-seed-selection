digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: act.util.FastJsonPropertyPreFilter;
r0 := @parameter0: java.util.Set;
r10 := @parameter1: java.lang.String;
z4 := @parameter2: boolean;
$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\");
if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>;
$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);
r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\");
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 ] [succs: ]
return 1;
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r6;
$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\");
$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7);
if $z8 == 0 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: ]
return 1;
"
    "Block 8:
[preds: 6 ] [succs: 5 ]
goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 9:
[preds: 5 ] [succs: 10 11 ]
$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
if $z3 == 0 goto (branch);
"
    "Block 10:
[preds: 9 ] [succs: ]
$z7 = specialinvoke r5.<act.util.FastJsonPropertyPreFilter: boolean patternMatches(java.util.Set,java.lang.String,boolean)>(r0, r10, z4);
return $z7;
"
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if z4 == 0 goto $r1 = new java.lang.StringBuilder;
"
    "Block 12:
[preds: 11 ] [succs: ]
return 0;
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 14:
[preds: 13 17 ] [succs: 15 18 ]
$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z5 == 0 goto return 0;
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r15 = (java.lang.String) $r4;
$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13);
if $z6 == 0 goto (branch);
"
    "Block 16:
[preds: 15 ] [succs: ]
return 1;
"
    "Block 17:
[preds: 15 ] [succs: 14 ]
goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 18:
[preds: 14 ] [succs: ]
return 0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: act.util.FastJsonPropertyPreFilter;
r0 := @parameter0: java.util.Set;
r10 := @parameter1: java.lang.String;
z4 := @parameter2: boolean;
$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\");
if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>;
$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);
r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\");
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r5 := @this: act.util.FastJsonPropertyPreFilter;
r0 := @parameter0: java.util.Set;
r10 := @parameter1: java.lang.String;
z4 := @parameter2: boolean;
$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\");
if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>;
$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);
r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\");
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 ] [succs: ]
return 1;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10);
if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 2 ] [succs: 5 ]
r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r6;
$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\");
$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7);
if $z8 == 0 goto (branch);
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
"->"Block 9:
[preds: 5 ] [succs: 10 11 ]
$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
if $z3 == 0 goto (branch);
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r6;
$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\");
$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7);
if $z8 == 0 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: ]
return 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
r12 = (java.lang.String) $r6;
$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\");
$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7);
if $z8 == 0 goto (branch);
"->"Block 8:
[preds: 6 ] [succs: 5 ]
goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 8:
[preds: 6 ] [succs: 5 ]
goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
";
    "Block 9:
[preds: 5 ] [succs: 10 11 ]
$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
if $z3 == 0 goto (branch);
"->"Block 10:
[preds: 9 ] [succs: ]
$z7 = specialinvoke r5.<act.util.FastJsonPropertyPreFilter: boolean patternMatches(java.util.Set,java.lang.String,boolean)>(r0, r10, z4);
return $z7;
";
    "Block 9:
[preds: 5 ] [succs: 10 11 ]
$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0);
if $z3 == 0 goto (branch);
"->"Block 11:
[preds: 9 ] [succs: 12 13 ]
if z4 == 0 goto $r1 = new java.lang.StringBuilder;
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if z4 == 0 goto $r1 = new java.lang.StringBuilder;
"->"Block 12:
[preds: 11 ] [succs: ]
return 0;
";
    "Block 11:
[preds: 9 ] [succs: 12 13 ]
if z4 == 0 goto $r1 = new java.lang.StringBuilder;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$r1 = new java.lang.StringBuilder;
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\");
r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 14:
[preds: 13 17 ] [succs: 15 18 ]
$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z5 == 0 goto return 0;
";
    "Block 14:
[preds: 13 17 ] [succs: 15 18 ]
$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z5 == 0 goto return 0;
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r15 = (java.lang.String) $r4;
$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13);
if $z6 == 0 goto (branch);
";
    "Block 14:
[preds: 13 17 ] [succs: 15 18 ]
$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z5 == 0 goto return 0;
"->"Block 18:
[preds: 14 ] [succs: ]
return 0;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r15 = (java.lang.String) $r4;
$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13);
if $z6 == 0 goto (branch);
"->"Block 16:
[preds: 15 ] [succs: ]
return 1;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
r15 = (java.lang.String) $r4;
$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13);
if $z6 == 0 goto (branch);
"->"Block 17:
[preds: 15 ] [succs: 14 ]
goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 17:
[preds: 15 ] [succs: 14 ]
goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()];
"->"Block 14:
[preds: 13 17 ] [succs: 15 18 ]
$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
if $z5 == 0 goto return 0;
";
}
