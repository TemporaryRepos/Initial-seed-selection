digraph "unitGraph" {
    "r0 := @parameter0: java.util.Collection"
    "$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"
    "$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)"
    "r10 = (java.util.List) $r2"
    "if null != r10 goto return r10"
    "$r3 = new java.util.ArrayList"
    "specialinvoke $r3.<java.util.ArrayList: void <init>()>()"
    "r10 = $r3"
    "r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"
    "$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "r8 = (java.lang.String) $r7"
    "$r9 = new act.data.util.StringOrPattern"
    "specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8)"
    "interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9)"
    "goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]"
    "$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"
    "interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10)"
    "return r10"
    "r0 := @parameter0: java.util.Collection"->"$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>";
    "$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"->"$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)";
    "$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)"->"r10 = (java.util.List) $r2";
    "r10 = (java.util.List) $r2"->"if null != r10 goto return r10";
    "if null != r10 goto return r10"->"$r3 = new java.util.ArrayList";
    "if null != r10 goto return r10"->"return r10";
    "$r3 = new java.util.ArrayList"->"specialinvoke $r3.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r3.<java.util.ArrayList: void <init>()>()"->"r10 = $r3";
    "r10 = $r3"->"r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()";
    "r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>";
    "if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"->"$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"->"$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>";
    "$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"r8 = (java.lang.String) $r7";
    "r8 = (java.lang.String) $r7"->"$r9 = new act.data.util.StringOrPattern";
    "$r9 = new act.data.util.StringOrPattern"->"specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8)";
    "specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8)"->"interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9)";
    "interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9)"->"goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()";
    "$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>"->"interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10)";
    "interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10)"->"return r10";
}
