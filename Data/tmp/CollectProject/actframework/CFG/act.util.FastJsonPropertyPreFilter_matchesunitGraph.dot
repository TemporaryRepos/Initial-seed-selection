digraph "unitGraph" {
    "r5 := @this: act.util.FastJsonPropertyPreFilter"
    "r0 := @parameter0: java.util.Set"
    "r10 := @parameter1: java.lang.String"
    "z4 := @parameter2: boolean"
    "$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\")"
    "if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)"
    "$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>"
    "$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10)"
    "r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\")"
    "$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)"
    "if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"
    "return 1"
    "r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"
    "$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"
    "if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)"
    "$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"
    "r12 = (java.lang.String) $r6"
    "$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\")"
    "$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7)"
    "if $z8 == 0 goto (branch)"
    "goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"
    "$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)"
    "if $z3 == 0 goto (branch)"
    "$z7 = specialinvoke r5.<act.util.FastJsonPropertyPreFilter: boolean patternMatches(java.util.Set,java.lang.String,boolean)>(r0, r10, z4)"
    "return $z7"
    "if z4 == 0 goto $r1 = new java.lang.StringBuilder"
    "return 0"
    "$r1 = new java.lang.StringBuilder"
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"
    "r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"
    "$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"
    "if $z5 == 0 goto return 0"
    "$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"
    "r15 = (java.lang.String) $r4"
    "$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13)"
    "if $z6 == 0 goto (branch)"
    "goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"
    "r5 := @this: act.util.FastJsonPropertyPreFilter"->"r0 := @parameter0: java.util.Set";
    "r0 := @parameter0: java.util.Set"->"r10 := @parameter1: java.lang.String";
    "r10 := @parameter1: java.lang.String"->"z4 := @parameter2: boolean";
    "z4 := @parameter2: boolean"->"$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\")";
    "$z0 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(\"[\")"->"if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)";
    "if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)"->"$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>";
    "if $z0 == 0 goto $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)"->"$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)";
    "$r8 = <act.util.FastJsonPropertyPreFilter: java.util.regex.Pattern SQUARE_BLOCK>"->"$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10)";
    "$r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10)"->"r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\")";
    "r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\")"->"$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)";
    "$z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r10)"->"if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()";
    "if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"return 1";
    "if $z1 == 0 goto r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()";
    "r11 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"->"if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)";
    "if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)"->"$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()";
    "if $z2 == 0 goto $z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)"->"$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)";
    "$r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"->"r12 = (java.lang.String) $r6";
    "r12 = (java.lang.String) $r6"->"$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\")";
    "$r7 = staticinvoke <org.osgl.util.S: java.lang.String concat(java.lang.String,java.lang.String)>(r12, \".\")"->"$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7)";
    "$z8 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>($r7)"->"if $z8 == 0 goto (branch)";
    "if $z8 == 0 goto (branch)"->"return 1";
    "if $z8 == 0 goto (branch)"->"goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"->"$z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = staticinvoke <act.util.FastJsonPropertyPreFilter: boolean hasPattern(java.util.Collection)>(r0)"->"if $z3 == 0 goto (branch)";
    "if $z3 == 0 goto (branch)"->"$z7 = specialinvoke r5.<act.util.FastJsonPropertyPreFilter: boolean patternMatches(java.util.Set,java.lang.String,boolean)>(r0, r10, z4)";
    "if $z3 == 0 goto (branch)"->"if z4 == 0 goto $r1 = new java.lang.StringBuilder";
    "$z7 = specialinvoke r5.<act.util.FastJsonPropertyPreFilter: boolean patternMatches(java.util.Set,java.lang.String,boolean)>(r0, r10, z4)"->"return $z7";
    "if z4 == 0 goto $r1 = new java.lang.StringBuilder"->"return 0";
    "if z4 == 0 goto $r1 = new java.lang.StringBuilder"->"$r1 = new java.lang.StringBuilder";
    "$r1 = new java.lang.StringBuilder"->"specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()"->"$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)";
    "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")"->"r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()"->"r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()";
    "r14 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()"->"$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
    "$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()"->"if $z5 == 0 goto return 0";
    "if $z5 == 0 goto return 0"->"$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()";
    "if $z5 == 0 goto return 0"->"return 0";
    "$r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()"->"r15 = (java.lang.String) $r4";
    "r15 = (java.lang.String) $r4"->"$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13)";
    "$z6 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>(r13)"->"if $z6 == 0 goto (branch)";
    "if $z6 == 0 goto (branch)"->"return 1";
    "if $z6 == 0 goto (branch)"->"goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]"->"$z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()";
}
