digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.util.Collection;
$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
r10 = (java.util.List) $r2;
if null != r10 goto return r10;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r10 = $r3;
r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();
"
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
"
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
$r9 = new act.data.util.StringOrPattern;
specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8);
interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9);
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10);
"
    "Block 5:
[preds: 0 4 ] [succs: ]
return r10;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.util.Collection;
$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
r10 = (java.util.List) $r2;
if null != r10 goto return r10;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r10 = $r3;
r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();
";
    "Block 0:
[preds: ] [succs: 1 5 ]
r0 := @parameter0: java.util.Collection;
$r1 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
$r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
r10 = (java.util.List) $r2;
if null != r10 goto return r10;
"->"Block 5:
[preds: 0 4 ] [succs: ]
return r10;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$r3 = new java.util.ArrayList;
specialinvoke $r3.<java.util.ArrayList: void <init>()>();
r10 = $r3;
r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();
"->"Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
";
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
"->"Block 3:
[preds: 2 ] [succs: 2 ]
$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
$r9 = new act.data.util.StringOrPattern;
specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8);
interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9);
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10);
";
    "Block 3:
[preds: 2 ] [succs: 2 ]
$r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r8 = (java.lang.String) $r7;
$r9 = new act.data.util.StringOrPattern;
specialinvoke $r9.<act.data.util.StringOrPattern: void <init>(java.lang.String)>(r8);
interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r9);
goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()];
"->"Block 2:
[preds: 1 3 ] [succs: 3 4 ]
$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r5 = <act.util.FastJsonPropertyPreFilter: java.util.Map spCache>;
interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10);
"->"Block 5:
[preds: 0 4 ] [succs: ]
return r10;
";
}
