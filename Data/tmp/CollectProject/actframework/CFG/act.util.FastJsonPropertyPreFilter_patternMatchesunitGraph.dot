digraph "unitGraph" {
    "r13 := @this: act.util.FastJsonPropertyPreFilter"
    "r0 := @parameter0: java.util.Set"
    "r5 := @parameter1: java.lang.String"
    "z2 := @parameter2: boolean"
    "r1 = staticinvoke <act.util.FastJsonPropertyPreFilter: java.util.List spList(java.util.Collection)>(r0)"
    "r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto return 0"
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"
    "r4 = (act.data.util.StringOrPattern) $r3"
    "$z1 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean matches(java.lang.String)>(r5)"
    "if $z1 == 0 goto (branch)"
    "return 1"
    "if z2 != 0 goto (branch)"
    "$z3 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean isPattern()>()"
    "if $z3 == 0 goto (branch)"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\\.)?\")"
    "$r9 = virtualinvoke r4.<act.data.util.StringOrPattern: java.lang.String s()>()"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)"
    "$r14 = r13.<act.util.FastJsonPropertyPreFilter: java.util.List fullPaths>"
    "r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()"
    "$z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()"
    "if $z4 == 0 goto (branch)"
    "$r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()"
    "r17 = (java.lang.String) $r16"
    "$r18 = virtualinvoke r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r17)"
    "$z5 = virtualinvoke $r18.<java.util.regex.Matcher: boolean matches()>()"
    "if $z5 == 0 goto (branch)"
    "goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"
    "return 0"
    "r13 := @this: act.util.FastJsonPropertyPreFilter"->"r0 := @parameter0: java.util.Set";
    "r0 := @parameter0: java.util.Set"->"r5 := @parameter1: java.lang.String";
    "r5 := @parameter1: java.lang.String"->"z2 := @parameter2: boolean";
    "z2 := @parameter2: boolean"->"r1 = staticinvoke <act.util.FastJsonPropertyPreFilter: java.util.List spList(java.util.Collection)>(r0)";
    "r1 = staticinvoke <act.util.FastJsonPropertyPreFilter: java.util.List spList(java.util.Collection)>(r0)"->"r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()";
    "r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto return 0";
    "if $z0 == 0 goto return 0"->"$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto return 0"->"return 0";
    "$r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()"->"r4 = (act.data.util.StringOrPattern) $r3";
    "r4 = (act.data.util.StringOrPattern) $r3"->"$z1 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean matches(java.lang.String)>(r5)";
    "$z1 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean matches(java.lang.String)>(r5)"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"return 1";
    "if $z1 == 0 goto (branch)"->"if z2 != 0 goto (branch)";
    "if z2 != 0 goto (branch)"->"$z3 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean isPattern()>()";
    "if z2 != 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "$z3 = virtualinvoke r4.<act.data.util.StringOrPattern: boolean isPattern()>()"->"if $z3 == 0 goto (branch)";
    "if $z3 == 0 goto (branch)"->"$r6 = new java.lang.StringBuilder";
    "if $z3 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\\.)?\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\\.)?\")"->"$r9 = virtualinvoke r4.<act.data.util.StringOrPattern: java.lang.String s()>()";
    "$r9 = virtualinvoke r4.<act.data.util.StringOrPattern: java.lang.String s()>()"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()"->"r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)";
    "r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)"->"$r14 = r13.<act.util.FastJsonPropertyPreFilter: java.util.List fullPaths>";
    "$r14 = r13.<act.util.FastJsonPropertyPreFilter: java.util.List fullPaths>"->"r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()";
    "r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()"->"$z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()";
    "$z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()"->"if $z4 == 0 goto (branch)";
    "if $z4 == 0 goto (branch)"->"$r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()";
    "if $z4 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]";
    "$r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()"->"r17 = (java.lang.String) $r16";
    "r17 = (java.lang.String) $r16"->"$r18 = virtualinvoke r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r17)";
    "$r18 = virtualinvoke r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r17)"->"$z5 = virtualinvoke $r18.<java.util.regex.Matcher: boolean matches()>()";
    "$z5 = virtualinvoke $r18.<java.util.regex.Matcher: boolean matches()>()"->"if $z5 == 0 goto (branch)";
    "if $z5 == 0 goto (branch)"->"return 1";
    "if $z5 == 0 goto (branch)"->"goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]"->"$z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()";
}
