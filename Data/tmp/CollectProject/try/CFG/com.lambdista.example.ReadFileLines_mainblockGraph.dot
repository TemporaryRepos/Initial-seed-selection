digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r8 := @parameter0: java.lang.String[];
r9 = staticinvoke <com.lambdista.example.ReadFileLines: java.util.List readFileWithoutTry(java.lang.String)>(\"test.txt\");
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"File read using the try-catch block\");
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
$r3 = staticinvoke <com.lambdista.example.ReadFileLines$println__314: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r1);
interfaceinvoke r9.<java.util.List: void forEach(java.util.function.Consumer)>($r3);
r10 = staticinvoke <com.lambdista.example.ReadFileLines: java.util.List readFileWithTry(java.lang.String)>(\"test.txt\");
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"File read using the Try-Success-Failure API\");
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
$r7 = staticinvoke <com.lambdista.example.ReadFileLines$println__315: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r5);
interfaceinvoke r10.<java.util.List: void forEach(java.util.function.Consumer)>($r7);
return;
"
}
