digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.lang.String;
"
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = new java.io.File;
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = virtualinvoke $r0.<java.io.File: java.nio.file.Path toPath()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r10 = staticinvoke <java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path)>($r2);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return r10];
"
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return r10;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.lang.String;
"->"Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = new java.io.File;
";
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.lang.String;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = new java.io.File;
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = new java.io.File;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = virtualinvoke $r0.<java.io.File: java.nio.file.Path toPath()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = virtualinvoke $r0.<java.io.File: java.nio.file.Path toPath()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
r10 = staticinvoke <java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path)>($r2);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
$r2 = virtualinvoke $r0.<java.io.File: java.nio.file.Path toPath()>();
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r10 = staticinvoke <java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path)>($r2);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return r10];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r10 = staticinvoke <java.nio.file.Files: java.util.List readAllLines(java.nio.file.Path)>($r2);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return r10];
"->"Block 7:
[preds: 5 6 ] [succs: ]
return r10;
";
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
$r5 = newarray (java.lang.String)[1];
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not read the file: \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
$r5[0] = $r9;
r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);
"->"Block 7:
[preds: 5 6 ] [succs: ]
return r10;
";
}
