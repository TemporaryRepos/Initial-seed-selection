digraph "unitGraph" {
    "r0 := @this: cn.edu.hfut.dmic.webcollector.util.FileIdGenerator"
    "$r1 = new java.util.concurrent.atomic.AtomicInteger"
    "specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1)"
    "r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId> = $r1"
    "$r2 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>"
    "$z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()"
    "if $z0 == 0 goto return"
    "$r3 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>"
    "r4 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>()"
    "i0 = lengthof r4"
    "i3 = 0"
    "if i3 >= i0 goto return"
    "r5 = r4[i3]"
    "$r6 = virtualinvoke r5.<java.io.File: java.lang.String getName()>()"
    "$r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")"
    "$r8 = $r7[0]"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r8)"
    "i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()"
    "$r10 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>"
    "$i2 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>()"
    "if i1 <= $i2 goto i3 = i3 + 1"
    "$r11 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>"
    "virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i1)"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 := @this: cn.edu.hfut.dmic.webcollector.util.FileIdGenerator"->"$r1 = new java.util.concurrent.atomic.AtomicInteger";
    "$r1 = new java.util.concurrent.atomic.AtomicInteger"->"specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1)";
    "specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1)"->"r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId> = $r1";
    "r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId> = $r1"->"$r2 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>";
    "$r2 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>"->"$z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()";
    "$z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()"->"if $z0 == 0 goto return";
    "if $z0 == 0 goto return"->"$r3 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>";
    "if $z0 == 0 goto return"->"return";
    "$r3 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.io.File baseDir>"->"r4 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>()";
    "r4 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>()"->"i0 = lengthof r4";
    "i0 = lengthof r4"->"i3 = 0";
    "i3 = 0"->"if i3 >= i0 goto return";
    "if i3 >= i0 goto return"->"r5 = r4[i3]";
    "if i3 >= i0 goto return"->"return";
    "r5 = r4[i3]"->"$r6 = virtualinvoke r5.<java.io.File: java.lang.String getName()>()";
    "$r6 = virtualinvoke r5.<java.io.File: java.lang.String getName()>()"->"$r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")";
    "$r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\.\")"->"$r8 = $r7[0]";
    "$r8 = $r7[0]"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r8)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r8)"->"i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()";
    "i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()"->"$r10 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>";
    "$r10 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>"->"$i2 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>()";
    "$i2 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int get()>()"->"if i1 <= $i2 goto i3 = i3 + 1";
    "if i1 <= $i2 goto i3 = i3 + 1"->"$r11 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>";
    "if i1 <= $i2 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r11 = r0.<cn.edu.hfut.dmic.webcollector.util.FileIdGenerator: java.util.concurrent.atomic.AtomicInteger lastId>"->"virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i1)";
    "virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i1)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return";
}
