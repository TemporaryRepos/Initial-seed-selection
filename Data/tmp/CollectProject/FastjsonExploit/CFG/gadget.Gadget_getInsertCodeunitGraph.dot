digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r21 = \"\""
    "r22 = \"\""
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"code:\")"
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")"
    "r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5)"
    "$r7 = new java.io.File"
    "specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r23)"
    "r24 = $r7"
    "$z2 = virtualinvoke r24.<java.io.File: boolean exists()>()"
    "if $z2 == 0 goto $r9 = <java.lang.System: java.io.PrintStream err>"
    "$r11 = new java.io.FileReader"
    "specialinvoke $r11.<java.io.FileReader: void <init>(java.io.File)>(r24)"
    "r12 = $r11"
    "$r13 = new java.io.BufferedReader"
    "specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r12)"
    "r14 = $r13"
    "$r15 = new java.lang.StringBuffer"
    "specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\")"
    "r16 = $r15"
    "r25 = \"\""
    "$r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()"
    "r26 = $r17"
    "if $r17 == null goto r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26)"
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\r\n\")"
    "goto [?= $r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()]"
    "r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"
    "goto [?= r21 = r22]"
    "$r9 = <java.lang.System: java.io.PrintStream err>"
    "$r8 = newarray (java.lang.Object)[1]"
    "$r8[0] = r23"
    "$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"[-] %s is not exists!\", $r8)"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"
    "staticinvoke <java.lang.System: void exit(int)>(0)"
    "r21 = r22"
    "goto [?= (branch)]"
    "$r20 := @caughtexception"
    "r27 = $r20"
    "virtualinvoke r27.<java.io.IOException: void printStackTrace()>()"
    "goto [?= return r21]"
    "$z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")"
    "if $z1 == 0 goto return r21"
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4)"
    "$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\\\\", \"\\\\\\\\\\")"
    "r28 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\"\", \"\\\\\"\")"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\n            String cmd = \\\"\")"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\";\n            String[] cmds = System.getProperty(\\\"os.name\\\").toLowerCase().contains(\\\"win\\\")\n                    ? new String[]{\\\"cmd\\\", \\\"/c\\\", cmd}\n                    : new String[]{\\\"/bin/bash\\\", \\\"-c\\\", cmd};\n            java.lang.Process pc = Runtime.getRuntime().exec(cmds);\n            pc.waitFor();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\")"
    "r29 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"
    "r21 = r29"
    "return r21"
    "r0 := @parameter0: java.lang.String"->"r21 = \"\"";
    "r21 = \"\""->"r22 = \"\"";
    "r22 = \"\""->"$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"code:\")";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"code:\")"->"if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")"->"r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5)";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")"->"$z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")";
    "r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5)"->"$r7 = new java.io.File";
    "r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5)"->"$r20 := @caughtexception";
    "$r7 = new java.io.File"->"specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r23)";
    "$r7 = new java.io.File"->"$r20 := @caughtexception";
    "specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r23)"->"r24 = $r7";
    "specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r23)"->"$r20 := @caughtexception";
    "r24 = $r7"->"$z2 = virtualinvoke r24.<java.io.File: boolean exists()>()";
    "r24 = $r7"->"$r20 := @caughtexception";
    "$z2 = virtualinvoke r24.<java.io.File: boolean exists()>()"->"if $z2 == 0 goto $r9 = <java.lang.System: java.io.PrintStream err>";
    "$z2 = virtualinvoke r24.<java.io.File: boolean exists()>()"->"$r20 := @caughtexception";
    "if $z2 == 0 goto $r9 = <java.lang.System: java.io.PrintStream err>"->"$r11 = new java.io.FileReader";
    "if $z2 == 0 goto $r9 = <java.lang.System: java.io.PrintStream err>"->"$r9 = <java.lang.System: java.io.PrintStream err>";
    "if $z2 == 0 goto $r9 = <java.lang.System: java.io.PrintStream err>"->"$r20 := @caughtexception";
    "$r11 = new java.io.FileReader"->"specialinvoke $r11.<java.io.FileReader: void <init>(java.io.File)>(r24)";
    "$r11 = new java.io.FileReader"->"$r20 := @caughtexception";
    "specialinvoke $r11.<java.io.FileReader: void <init>(java.io.File)>(r24)"->"r12 = $r11";
    "specialinvoke $r11.<java.io.FileReader: void <init>(java.io.File)>(r24)"->"$r20 := @caughtexception";
    "r12 = $r11"->"$r13 = new java.io.BufferedReader";
    "r12 = $r11"->"$r20 := @caughtexception";
    "$r13 = new java.io.BufferedReader"->"specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r12)";
    "$r13 = new java.io.BufferedReader"->"$r20 := @caughtexception";
    "specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r12)"->"r14 = $r13";
    "specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r12)"->"$r20 := @caughtexception";
    "r14 = $r13"->"$r15 = new java.lang.StringBuffer";
    "r14 = $r13"->"$r20 := @caughtexception";
    "$r15 = new java.lang.StringBuffer"->"specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\")";
    "$r15 = new java.lang.StringBuffer"->"$r20 := @caughtexception";
    "specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\")"->"r16 = $r15";
    "specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"\")"->"$r20 := @caughtexception";
    "r16 = $r15"->"r25 = \"\"";
    "r16 = $r15"->"$r20 := @caughtexception";
    "r25 = \"\""->"$r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()";
    "r25 = \"\""->"$r20 := @caughtexception";
    "$r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()"->"r26 = $r17";
    "$r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()"->"$r20 := @caughtexception";
    "r26 = $r17"->"if $r17 == null goto r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()";
    "r26 = $r17"->"$r20 := @caughtexception";
    "if $r17 == null goto r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"->"virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26)";
    "if $r17 == null goto r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"->"r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()";
    "if $r17 == null goto r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r20 := @caughtexception";
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26)"->"virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\r\n\")";
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26)"->"$r20 := @caughtexception";
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\r\n\")"->"goto [?= $r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()]";
    "virtualinvoke r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"\r\n\")"->"$r20 := @caughtexception";
    "goto [?= $r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()";
    "goto [?= $r17 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>()]"->"$r20 := @caughtexception";
    "r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"->"goto [?= r21 = r22]";
    "r22 = virtualinvoke r16.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r20 := @caughtexception";
    "goto [?= r21 = r22]"->"r21 = r22";
    "goto [?= r21 = r22]"->"$r20 := @caughtexception";
    "$r9 = <java.lang.System: java.io.PrintStream err>"->"$r8 = newarray (java.lang.Object)[1]";
    "$r9 = <java.lang.System: java.io.PrintStream err>"->"$r20 := @caughtexception";
    "$r8 = newarray (java.lang.Object)[1]"->"$r8[0] = r23";
    "$r8 = newarray (java.lang.Object)[1]"->"$r20 := @caughtexception";
    "$r8[0] = r23"->"$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"[-] %s is not exists!\", $r8)";
    "$r8[0] = r23"->"$r20 := @caughtexception";
    "$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"[-] %s is not exists!\", $r8)"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)";
    "$r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"[-] %s is not exists!\", $r8)"->"$r20 := @caughtexception";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"staticinvoke <java.lang.System: void exit(int)>(0)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10)"->"$r20 := @caughtexception";
    "staticinvoke <java.lang.System: void exit(int)>(0)"->"r21 = r22";
    "staticinvoke <java.lang.System: void exit(int)>(0)"->"$r20 := @caughtexception";
    "r21 = r22"->"goto [?= (branch)]";
    "r21 = r22"->"$r20 := @caughtexception";
    "goto [?= (branch)]"->"goto [?= return r21]";
    "$r20 := @caughtexception"->"r27 = $r20";
    "r27 = $r20"->"virtualinvoke r27.<java.io.IOException: void printStackTrace()>()";
    "virtualinvoke r27.<java.io.IOException: void printStackTrace()>()"->"goto [?= return r21]";
    "goto [?= return r21]"->"return r21";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"cmd:\")"->"if $z1 == 0 goto return r21";
    "if $z1 == 0 goto return r21"->"$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4)";
    "if $z1 == 0 goto return r21"->"return r21";
    "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4)"->"$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\\\\", \"\\\\\\\\\\")";
    "$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\\\\", \"\\\\\\\\\\")"->"r28 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\"\", \"\\\\\"\")";
    "r28 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(\"\\\"\", \"\\\\\"\")"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\n            String cmd = \\\"\")";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\n            String cmd = \\\"\")"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\";\n            String[] cmds = System.getProperty(\\\"os.name\\\").toLowerCase().contains(\\\"win\\\")\n                    ? new String[]{\\\"cmd\\\", \\\"/c\\\", cmd}\n                    : new String[]{\\\"/bin/bash\\\", \\\"-c\\\", cmd};\n            java.lang.Process pc = Runtime.getRuntime().exec(cmds);\n            pc.waitFor();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\";\n            String[] cmds = System.getProperty(\\\"os.name\\\").toLowerCase().contains(\\\"win\\\")\n                    ? new String[]{\\\"cmd\\\", \\\"/c\\\", cmd}\n                    : new String[]{\\\"/bin/bash\\\", \\\"-c\\\", cmd};\n            java.lang.Process pc = Runtime.getRuntime().exec(cmds);\n            pc.waitFor();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\")"->"r29 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r29 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()"->"r21 = r29";
    "r21 = r29"->"return r21";
}
