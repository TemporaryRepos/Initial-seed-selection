digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i0 := @parameter1: int"
    "z0 = 0"
    "r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0)"
    "$r1 = new java.net.Socket"
    "specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r4, i0)"
    "r2 = $r1"
    "z1 = 1"
    "goto [?= return z1]"
    "$r3 := @caughtexception"
    "r5 = $r3"
    "z1 = 0"
    "return z1"
    "r0 := @parameter0: java.lang.String"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"z0 = 0";
    "z0 = 0"->"r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0)";
    "z0 = 0"->"$r3 := @caughtexception";
    "r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0)"->"$r1 = new java.net.Socket";
    "r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0)"->"$r3 := @caughtexception";
    "$r1 = new java.net.Socket"->"specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r4, i0)";
    "$r1 = new java.net.Socket"->"$r3 := @caughtexception";
    "specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r4, i0)"->"r2 = $r1";
    "specialinvoke $r1.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r4, i0)"->"$r3 := @caughtexception";
    "r2 = $r1"->"z1 = 1";
    "r2 = $r1"->"$r3 := @caughtexception";
    "z1 = 1"->"goto [?= return z1]";
    "z1 = 1"->"$r3 := @caughtexception";
    "goto [?= return z1]"->"return z1";
    "$r3 := @caughtexception"->"r5 = $r3";
    "r5 = $r3"->"z1 = 0";
    "z1 = 0"->"return z1";
}
