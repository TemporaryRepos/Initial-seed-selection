digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "l6 = 0L"
    "i7 = 0"
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)"
    "$i1 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i2 = $i1 - i7"
    "$i3 = $i2 - 1"
    "d5 = (double) $i3"
    "$d0 = (double) l6"
    "$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>"
    "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7)"
    "$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4)"
    "$d1 = (double) $i5"
    "$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5)"
    "$d3 = $d1 * $d2"
    "$d4 = $d0 + $d3"
    "l6 = (long) $d4"
    "i7 = i7 + 1"
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)"
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48)"
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6)"
    "return l8"
    "$r5 := @caughtexception"
    "r7 = $r5"
    "return l6"
    "$r3 := @caughtexception"
    "r4 = $r3"
    "r0 := @parameter0: java.lang.String"->"l6 = 0L";
    "l6 = 0L"->"i7 = 0";
    "i7 = 0"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)";
    "if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)"->"$i1 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)"->"$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)";
    "$i1 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i2 = $i1 - i7";
    "$i2 = $i1 - i7"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"d5 = (double) $i3";
    "d5 = (double) $i3"->"$d0 = (double) l6";
    "$d0 = (double) l6"->"$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>";
    "$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>"->"$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7)";
    "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7)"->"$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4)";
    "$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4)"->"$d1 = (double) $i5";
    "$d1 = (double) $i5"->"$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5)";
    "$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5)"->"$d3 = $d1 * $d2";
    "$d3 = $d1 * $d2"->"$d4 = $d0 + $d3";
    "$d4 = $d0 + $d3"->"l6 = (long) $d4";
    "l6 = (long) $d4"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6)"->"r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48)";
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48)"->"$r5 := @caughtexception";
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48)"->"$r3 := @caughtexception";
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48)"->"l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6)";
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6)"->"$r5 := @caughtexception";
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6)"->"$r3 := @caughtexception";
    "l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6)"->"return l8";
    "$r5 := @caughtexception"->"r7 = $r5";
    "$r5 := @caughtexception"->"$r3 := @caughtexception";
    "r7 = $r5"->"return l6";
    "r7 = $r5"->"$r3 := @caughtexception";
    "$r3 := @caughtexception"->"r4 = $r3";
    "$r3 := @caughtexception"->"$r3 := @caughtexception";
    "r4 = $r3"->"return l6";
    "r4 = $r3"->"$r3 := @caughtexception";
}
