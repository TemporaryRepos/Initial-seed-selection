digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r5 = \"\""
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"
    "i5 = $i0 - 4"
    "if i5 <= -4 goto return r5"
    "if i5 >= 0 goto $i6 = i5"
    "$i6 = 0"
    "goto [?= i1 = $i6]"
    "$i6 = i5"
    "i1 = $i6"
    "if i5 >= 0 goto $i7 = 4"
    "$i4 = virtualinvoke r0.<java.lang.String: int length()>()"
    "$i7 = $i4 % 4"
    "goto [?= i2 = $i7]"
    "$i7 = 4"
    "i2 = $i7"
    "$r1 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String left(java.lang.String,int,int)>(r0, i1, i2)"
    "l3 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: long encode62ToInt(java.lang.String)>($r1)"
    "r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l3)"
    "if i1 <= 0 goto $r2 = new java.lang.StringBuilder"
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>(r6, 7, 48)"
    "$r2 = new java.lang.StringBuilder"
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"
    "r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"
    "i5 = i5 - 4"
    "goto [?= (branch)]"
    "return r5"
    "r0 := @parameter0: java.lang.String"->"r5 = \"\"";
    "r5 = \"\""->"$i0 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int length()>()"->"i5 = $i0 - 4";
    "i5 = $i0 - 4"->"if i5 <= -4 goto return r5";
    "if i5 <= -4 goto return r5"->"if i5 >= 0 goto $i6 = i5";
    "if i5 <= -4 goto return r5"->"return r5";
    "if i5 >= 0 goto $i6 = i5"->"$i6 = 0";
    "if i5 >= 0 goto $i6 = i5"->"$i6 = i5";
    "$i6 = 0"->"goto [?= i1 = $i6]";
    "goto [?= i1 = $i6]"->"i1 = $i6";
    "$i6 = i5"->"i1 = $i6";
    "i1 = $i6"->"if i5 >= 0 goto $i7 = 4";
    "if i5 >= 0 goto $i7 = 4"->"$i4 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if i5 >= 0 goto $i7 = 4"->"$i7 = 4";
    "$i4 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i7 = $i4 % 4";
    "$i7 = $i4 % 4"->"goto [?= i2 = $i7]";
    "goto [?= i2 = $i7]"->"i2 = $i7";
    "$i7 = 4"->"i2 = $i7";
    "i2 = $i7"->"$r1 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String left(java.lang.String,int,int)>(r0, i1, i2)";
    "$r1 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String left(java.lang.String,int,int)>(r0, i1, i2)"->"l3 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: long encode62ToInt(java.lang.String)>($r1)";
    "l3 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: long encode62ToInt(java.lang.String)>($r1)"->"r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l3)";
    "r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l3)"->"if i1 <= 0 goto $r2 = new java.lang.StringBuilder";
    "if i1 <= 0 goto $r2 = new java.lang.StringBuilder"->"r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>(r6, 7, 48)";
    "if i1 <= 0 goto $r2 = new java.lang.StringBuilder"->"$r2 = new java.lang.StringBuilder";
    "r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>(r6, 7, 48)"->"$r2 = new java.lang.StringBuilder";
    "$r2 = new java.lang.StringBuilder"->"specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()"->"$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)";
    "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)"->"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)";
    "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)"->"r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()";
    "r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()"->"i5 = i5 - 4";
    "i5 = i5 - 4"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 <= -4 goto return r5";
}
