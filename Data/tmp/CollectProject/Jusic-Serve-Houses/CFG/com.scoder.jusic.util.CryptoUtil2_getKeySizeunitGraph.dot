digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DES\")"
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")"
    "return 56"
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")"
    "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")"
    "return 112"
    "$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")"
    "if $z2 == 0 goto return 0"
    "return 128"
    "return 0"
    "r0 := @parameter0: java.lang.String"->"$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DES\")";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DES\")"->"if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")"->"return 56";
    "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")"->"$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"DESede\")"->"if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")";
    "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")"->"return 112";
    "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")"->"$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")";
    "$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"AES\")"->"if $z2 == 0 goto return 0";
    "if $z2 == 0 goto return 0"->"return 128";
    "if $z2 == 0 goto return 0"->"return 0";
}
