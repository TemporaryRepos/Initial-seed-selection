digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
c2 := @parameter1: char;
if i0 >= 0 goto r0 = newarray (char)[i0];
"
    "Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.IndexOutOfBoundsException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot pad a negative amount: \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);
throw $r2;
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
r0 = newarray (char)[i0];
i3 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i1 = lengthof r0;
if i3 >= $i1 goto $r1 = new java.lang.String;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
r0[i3] = c2;
i3 = i3 + 1;
goto [?= $i1 = lengthof r0];
"
    "Block 5:
[preds: 3 ] [succs: ]
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);
return $r1;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
c2 := @parameter1: char;
if i0 >= 0 goto r0 = newarray (char)[i0];
"->"Block 1:
[preds: 0 ] [succs: ]
$r2 = new java.lang.IndexOutOfBoundsException;
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot pad a negative amount: \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);
throw $r2;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
i0 := @parameter0: int;
c2 := @parameter1: char;
if i0 >= 0 goto r0 = newarray (char)[i0];
"->"Block 2:
[preds: 0 ] [succs: 3 ]
r0 = newarray (char)[i0];
i3 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
r0 = newarray (char)[i0];
i3 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i1 = lengthof r0;
if i3 >= $i1 goto $r1 = new java.lang.String;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i1 = lengthof r0;
if i3 >= $i1 goto $r1 = new java.lang.String;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
r0[i3] = c2;
i3 = i3 + 1;
goto [?= $i1 = lengthof r0];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i1 = lengthof r0;
if i3 >= $i1 goto $r1 = new java.lang.String;
"->"Block 5:
[preds: 3 ] [succs: ]
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);
return $r1;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
r0[i3] = c2;
i3 = i3 + 1;
goto [?= $i1 = lengthof r0];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$i1 = lengthof r0;
if i3 >= $i1 goto $r1 = new java.lang.String;
";
}
