digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);
r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(\"MD5\");
"
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r3 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: java.lang.String base64Encode(byte[])>($r2);
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 12);
"
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r5 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: byte[] base64Decode(java.lang.String)>($r4);
"
    "Block 6:
[preds: 5 ] [succs: ]
return $r5;
"
    "Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);
r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(\"MD5\");
";
    "Block 0:
[preds: ] [succs: 1 7 ]
l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);
r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(\"MD5\");
"->"Block 2:
[preds: 1 ] [succs: 3 7 ]
$r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(\"MD5\");
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
$r3 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: java.lang.String base64Encode(byte[])>($r2);
";
    "Block 2:
[preds: 1 ] [succs: 3 7 ]
$r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r3 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: java.lang.String base64Encode(byte[])>($r2);
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 12);
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
$r3 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: java.lang.String base64Encode(byte[])>($r2);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 12);
"->"Block 5:
[preds: 4 ] [succs: 6 7 ]
$r5 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: byte[] base64Decode(java.lang.String)>($r4);
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 12);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r5 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: byte[] base64Decode(java.lang.String)>($r4);
"->"Block 6:
[preds: 5 ] [succs: ]
return $r5;
";
    "Block 5:
[preds: 4 ] [succs: 6 7 ]
$r5 = staticinvoke <com.scoder.jusic.util.CryptoUtil2: byte[] base64Decode(java.lang.String)>($r4);
"->"Block 7:
[preds: 0 1 2 3 4 5 ] [succs: ]
$r6 := @caughtexception;
r8 = $r6;
return r1;
";
}
