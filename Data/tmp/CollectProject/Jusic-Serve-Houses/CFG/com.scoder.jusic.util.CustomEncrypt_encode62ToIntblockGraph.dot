digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
l6 = 0L;
i7 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
$i2 = $i1 - i7;
$i3 = $i2 - 1;
d5 = (double) $i3;
$d0 = (double) l6;
$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>;
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);
$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4);
$d1 = (double) $i5;
$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5);
$d3 = $d1 * $d2;
$d4 = $d0 + $d3;
l6 = (long) $d4;
i7 = i7 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
"
    "Block 3:
[preds: 1 ] [succs: 6 9 4 ]
$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48);
"
    "Block 4:
[preds: 3 ] [succs: 6 9 5 ]
l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);
"
    "Block 5:
[preds: 4 ] [succs: ]
return l8;
"
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$r5 := @caughtexception;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r7 = $r5;
"
    "Block 8:
[preds: 7 ] [succs: ]
return l6;
"
    "Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
"
    "Block 10:
[preds: 9 ] [succs: 11 9 ]
r4 = $r3;
"
    "Block 11:
[preds: 10 ] [succs: ]
return l6;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String;
l6 = 0L;
i7 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
$i2 = $i1 - i7;
$i3 = $i2 - 1;
d5 = (double) $i3;
$d0 = (double) l6;
$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>;
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);
$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4);
$d1 = (double) $i5;
$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5);
$d3 = $d1 * $d2;
$d4 = $d0 + $d3;
l6 = (long) $d4;
i7 = i7 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
"->"Block 3:
[preds: 1 ] [succs: 6 9 4 ]
$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48);
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = virtualinvoke r0.<java.lang.String: int length()>();
$i2 = $i1 - i7;
$i3 = $i2 - 1;
d5 = (double) $i3;
$d0 = (double) l6;
$r2 = <com.scoder.jusic.util.CustomEncrypt: java.lang.String str62keys>;
$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);
$i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c4);
$d1 = (double) $i5;
$d2 = staticinvoke <java.lang.Math: double pow(double,double)>(62.0, d5);
$d3 = $d1 * $d2;
$d4 = $d0 + $d3;
l6 = (long) $d4;
i7 = i7 + 1;
goto [?= $i0 = virtualinvoke r0.<java.lang.String: int length()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.lang.String: int length()>();
if i7 >= $i0 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
";
    "Block 3:
[preds: 1 ] [succs: 6 9 4 ]
$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48);
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$r5 := @caughtexception;
";
    "Block 3:
[preds: 1 ] [succs: 6 9 4 ]
$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48);
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
    "Block 3:
[preds: 1 ] [succs: 6 9 4 ]
$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l6);
r6 = staticinvoke <com.scoder.jusic.util.CustomEncrypt: java.lang.String leftPad(java.lang.String,int,char)>($r1, 7, 48);
"->"Block 4:
[preds: 3 ] [succs: 6 9 5 ]
l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);
";
    "Block 4:
[preds: 3 ] [succs: 6 9 5 ]
l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);
"->"Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$r5 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 6 9 5 ]
l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
    "Block 4:
[preds: 3 ] [succs: 6 9 5 ]
l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);
"->"Block 5:
[preds: 4 ] [succs: ]
return l8;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$r5 := @caughtexception;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
r7 = $r5;
";
    "Block 6:
[preds: 3 4 ] [succs: 7 9 ]
$r5 := @caughtexception;
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r7 = $r5;
"->"Block 8:
[preds: 7 ] [succs: ]
return l6;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r7 = $r5;
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
    "Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
"->"Block 10:
[preds: 9 ] [succs: 11 9 ]
r4 = $r3;
";
    "Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
    "Block 10:
[preds: 9 ] [succs: 11 9 ]
r4 = $r3;
"->"Block 11:
[preds: 10 ] [succs: ]
return l6;
";
    "Block 10:
[preds: 9 ] [succs: 11 9 ]
r4 = $r3;
"->"Block 9:
[preds: 3 4 6 7 9 10 ] [succs: 10 9 ]
$r3 := @caughtexception;
";
}
