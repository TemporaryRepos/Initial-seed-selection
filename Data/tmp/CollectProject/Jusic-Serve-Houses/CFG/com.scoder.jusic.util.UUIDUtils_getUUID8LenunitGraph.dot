digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String"
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"-\", \"\")"
    "$r0 = new java.lang.StringBuffer"
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"
    "r1 = $r0"
    "i5 = 0"
    "if i5 >= 8 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"
    "$i2 = i5 * 4"
    "$i0 = i5 * 4"
    "$i1 = $i0 + 4"
    "r3 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1)"
    "i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16)"
    "$r4 = <com.scoder.jusic.util.UUIDUtils: java.lang.String[] chars>"
    "$i4 = i3 % 62"
    "$r5 = $r4[$i4]"
    "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)"
    "i5 = i5 + 1"
    "goto [?= (branch)]"
    "$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"
    "return $r2"
    "r7 := @parameter0: java.lang.String"->"r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"-\", \"\")";
    "r8 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(\"-\", \"\")"->"$r0 = new java.lang.StringBuffer";
    "$r0 = new java.lang.StringBuffer"->"specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()";
    "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i5 = 0";
    "i5 = 0"->"if i5 >= 8 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "if i5 >= 8 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"$i2 = i5 * 4";
    "if i5 >= 8 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$i2 = i5 * 4"->"$i0 = i5 * 4";
    "$i0 = i5 * 4"->"$i1 = $i0 + 4";
    "$i1 = $i0 + 4"->"r3 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1)";
    "r3 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1)"->"i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16)";
    "i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16)"->"$r4 = <com.scoder.jusic.util.UUIDUtils: java.lang.String[] chars>";
    "$r4 = <com.scoder.jusic.util.UUIDUtils: java.lang.String[] chars>"->"$i4 = i3 % 62";
    "$i4 = i3 % 62"->"$r5 = $r4[$i4]";
    "$r5 = $r4[$i4]"->"virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)";
    "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= 8 goto $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()";
    "$r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()"->"return $r2";
}
