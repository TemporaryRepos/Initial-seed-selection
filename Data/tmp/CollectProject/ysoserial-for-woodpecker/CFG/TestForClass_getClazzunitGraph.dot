digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"
    "return $r1"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "$r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"
    "$r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()"
    "$r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)"
    "return $r8"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "return null"
    "r0 := @parameter0: java.lang.String"->"$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)";
    "r0 := @parameter0: java.lang.String"->"$r4 := @caughtexception";
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"return $r1";
    "$r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)"->"$r4 := @caughtexception";
    "$r4 := @caughtexception"->"r5 = $r4";
    "r5 = $r4"->"$r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()";
    "r5 = $r4"->"$r2 := @caughtexception";
    "$r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"$r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()";
    "$r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()"->"$r2 := @caughtexception";
    "$r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()"->"$r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)";
    "$r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()"->"$r2 := @caughtexception";
    "$r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)"->"return $r8";
    "$r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)"->"$r2 := @caughtexception";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"return null";
}
