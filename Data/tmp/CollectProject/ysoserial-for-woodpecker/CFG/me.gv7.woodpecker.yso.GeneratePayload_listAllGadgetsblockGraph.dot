digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"  Available payload types:\");
$r1 = new java.util.ArrayList;
$r2 = staticinvoke <me.gv7.woodpecker.yso.payloads.ObjectPayload$Utils: java.util.Set getPayloadClasses()>();
specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
r3 = $r1;
$r4 = new me.gv7.woodpecker.yso.Strings$ToStringComparator;
specialinvoke $r4.<me.gv7.woodpecker.yso.Strings$ToStringComparator: void <init>()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r4);
$r5 = new java.util.LinkedList;
specialinvoke $r5.<java.util.LinkedList: void <init>()>();
r6 = $r5;
$r7 = newarray (java.lang.String)[3];
$r7[0] = \"Payload\";
$r7[1] = \"Authors\";
$r7[2] = \"Dependencies\";
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r7);
$r8 = newarray (java.lang.String)[3];
$r8[0] = \"-------\";
$r8[1] = \"-------\";
$r8[2] = \"------------\";
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r8);
r25 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r16 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
r26 = (java.lang.Class) $r16;
$r17 = newarray (java.lang.String)[3];
$r18 = virtualinvoke r26.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r18;
$r19 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Authors$Utils: java.lang.String[] getAuthors(java.lang.reflect.AnnotatedElement)>(r26);
$r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);
$r21 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r20, \", \", \"@\", \"\");
$r17[1] = $r21;
$r22 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Dependencies$Utils: java.lang.String[] getDependenciesSimple(java.lang.reflect.AnnotatedElement)>(r26);
$r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);
$r24 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r23, \", \", \"\", \"\");
$r17[2] = $r24;
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r17);
goto [?= $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
r28 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto return;
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r9 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream err>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
goto [?= $z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
$r0 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"  Available payload types:\");
$r1 = new java.util.ArrayList;
$r2 = staticinvoke <me.gv7.woodpecker.yso.payloads.ObjectPayload$Utils: java.util.Set getPayloadClasses()>();
specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
r3 = $r1;
$r4 = new me.gv7.woodpecker.yso.Strings$ToStringComparator;
specialinvoke $r4.<me.gv7.woodpecker.yso.Strings$ToStringComparator: void <init>()>();
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r4);
$r5 = new java.util.LinkedList;
specialinvoke $r5.<java.util.LinkedList: void <init>()>();
r6 = $r5;
$r7 = newarray (java.lang.String)[3];
$r7[0] = \"Payload\";
$r7[1] = \"Authors\";
$r7[2] = \"Dependencies\";
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r7);
$r8 = newarray (java.lang.String)[3];
$r8[0] = \"-------\";
$r8[1] = \"-------\";
$r8[2] = \"------------\";
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r8);
r25 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r16 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
r26 = (java.lang.Class) $r16;
$r17 = newarray (java.lang.String)[3];
$r18 = virtualinvoke r26.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r18;
$r19 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Authors$Utils: java.lang.String[] getAuthors(java.lang.reflect.AnnotatedElement)>(r26);
$r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);
$r21 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r20, \", \", \"@\", \"\");
$r17[1] = $r21;
$r22 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Dependencies$Utils: java.lang.String[] getDependenciesSimple(java.lang.reflect.AnnotatedElement)>(r26);
$r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);
$r24 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r23, \", \", \"\", \"\");
$r17[2] = $r24;
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r17);
goto [?= $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
r28 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r16 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
r26 = (java.lang.Class) $r16;
$r17 = newarray (java.lang.String)[3];
$r18 = virtualinvoke r26.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r18;
$r19 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Authors$Utils: java.lang.String[] getAuthors(java.lang.reflect.AnnotatedElement)>(r26);
$r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);
$r21 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r20, \", \", \"@\", \"\");
$r17[1] = $r21;
$r22 = staticinvoke <me.gv7.woodpecker.yso.payloads.'annotation'.Dependencies$Utils: java.lang.String[] getDependenciesSimple(java.lang.reflect.AnnotatedElement)>(r26);
$r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);
$r24 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.lang.String join(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)>($r23, \", \", \"\", \"\");
$r17[2] = $r24;
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r17);
goto [?= $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z2 == 0 goto r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r27 = staticinvoke <me.gv7.woodpecker.yso.Strings: java.util.List formatTable(java.util.List)>(r6);
r28 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto return;
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto return;
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r9 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream err>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
goto [?= $z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto return;
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r9 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();
r10 = (java.lang.String) $r9;
$r12 = <java.lang.System: java.io.PrintStream err>;
$r11 = new java.lang.StringBuilder;
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"     \");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);
goto [?= $z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto return;
";
}
