digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"
    "Block 1:
[preds: 0 ] [succs: ]
$r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);
return $r16;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r15 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r3, $r14);
return $r15;
"
    "Block 3:
[preds: 0 ] [succs: ]
$i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();
$i2 = virtualinvoke r0.<entity.Rule: int getnEnd()>();
$r13 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByPosistion(java.lang.String,int,int)>(r3, $i1, $i2);
return $r13;
"
    "Block 4:
[preds: 0 ] [succs: ]
$r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();
$r11 = virtualinvoke r0.<entity.Rule: java.lang.String getStrEnd()>();
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r3, $r10, $r11);
return $r12;
"
    "Block 5:
[preds: 0 ] [succs: ]
$r6 = new matcher.impl.JsonMatcher;
specialinvoke $r6.<matcher.impl.JsonMatcher: void <init>()>();
r7 = $r6;
$r8 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r9 = virtualinvoke r7.<matcher.impl.JsonMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r8);
return $r9;
"
    "Block 6:
[preds: 0 ] [succs: ]
$r1 = new matcher.impl.XmlMatcher;
specialinvoke $r1.<matcher.impl.XmlMatcher: void <init>()>();
r2 = $r1;
$r4 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r5 = virtualinvoke r2.<matcher.impl.XmlMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r4);
return $r5;
"
    "Block 7:
[preds: 0 ] [succs: ]
$r17 = new entity.MatchResult;
specialinvoke $r17.<entity.MatchResult: void <init>()>();
r18 = $r17;
virtualinvoke r18.<entity.MatchResult: void setResult(java.lang.String)>(\"unkown rule type\");
return r18;
"
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 1:
[preds: 0 ] [succs: ]
$r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);
return $r16;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 2:
[preds: 0 ] [succs: ]
$r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r15 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r3, $r14);
return $r15;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 3:
[preds: 0 ] [succs: ]
$i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();
$i2 = virtualinvoke r0.<entity.Rule: int getnEnd()>();
$r13 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByPosistion(java.lang.String,int,int)>(r3, $i1, $i2);
return $r13;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 4:
[preds: 0 ] [succs: ]
$r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();
$r11 = virtualinvoke r0.<entity.Rule: java.lang.String getStrEnd()>();
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r3, $r10, $r11);
return $r12;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 5:
[preds: 0 ] [succs: ]
$r6 = new matcher.impl.JsonMatcher;
specialinvoke $r6.<matcher.impl.JsonMatcher: void <init>()>();
r7 = $r6;
$r8 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r9 = virtualinvoke r7.<matcher.impl.JsonMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r8);
return $r9;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 6:
[preds: 0 ] [succs: ]
$r1 = new matcher.impl.XmlMatcher;
specialinvoke $r1.<matcher.impl.XmlMatcher: void <init>()>();
r2 = $r1;
$r4 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();
$r5 = virtualinvoke r2.<matcher.impl.XmlMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r4);
return $r5;
";
    "Block 0:
[preds: ] [succs: 1 2 3 4 5 6 7 ]
r3 := @parameter0: java.lang.String;
r0 := @parameter1: entity.Rule;
$i0 = virtualinvoke r0.<entity.Rule: int getType()>();
tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; };
"->"Block 7:
[preds: 0 ] [succs: ]
$r17 = new entity.MatchResult;
specialinvoke $r17.<entity.MatchResult: void <init>()>();
r18 = $r17;
virtualinvoke r18.<entity.MatchResult: void setResult(java.lang.String)>(\"unkown rule type\");
return r18;
";
}
