digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "i0 := @parameter1: int"
    "i1 := @parameter2: int"
    "r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1)"
    "i4 = i0"
    "r5 = \"\""
    "i5 = i1"
    "r6 = \"\""
    "if i4 < 0 goto $i7 = virtualinvoke r0.<java.lang.String: int length()>()"
    "r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0)"
    "$i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r5)"
    "$i3 = virtualinvoke r5.<java.lang.String: int length()>()"
    "i6 = $i2 + $i3"
    "if i6 != i0 goto i4 = i4 + -1"
    "goto [?= $i7 = virtualinvoke r0.<java.lang.String: int length()>()]"
    "i4 = i4 + -1"
    "goto [?= (branch)]"
    "$i7 = virtualinvoke r0.<java.lang.String: int length()>()"
    "if i5 > $i7 goto r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)"
    "r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5)"
    "i8 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r6)"
    "if i8 != i1 goto i5 = i5 + 1"
    "goto [?= r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)]"
    "i5 = i5 + 1"
    "r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)"
    "r8 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r6)"
    "$r2 = newarray (java.lang.Object)[2]"
    "$r2[0] = r7"
    "$r2[1] = r8"
    "r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"{\\\"start\\\":\\\"%s\\\",\\\"end\\\":\\\"%s\\\"}\", $r2)"
    "$r3 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r0, r7, r8)"
    "$r4 = virtualinvoke $r3.<entity.MatchResult: java.lang.String getResult()>()"
    "$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)"
    "if $z0 == 0 goto return \"generate rule fail,try again\""
    "return r9"
    "return \"generate rule fail,try again\""
    "r0 := @parameter0: java.lang.String"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"i1 := @parameter2: int";
    "i1 := @parameter2: int"->"r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1)";
    "r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1)"->"i4 = i0";
    "i4 = i0"->"r5 = \"\"";
    "r5 = \"\""->"i5 = i1";
    "i5 = i1"->"r6 = \"\"";
    "r6 = \"\""->"if i4 < 0 goto $i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "if i4 < 0 goto $i7 = virtualinvoke r0.<java.lang.String: int length()>()"->"r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0)";
    "if i4 < 0 goto $i7 = virtualinvoke r0.<java.lang.String: int length()>()"->"$i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0)"->"$i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r5)";
    "$i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r5)"->"$i3 = virtualinvoke r5.<java.lang.String: int length()>()";
    "$i3 = virtualinvoke r5.<java.lang.String: int length()>()"->"i6 = $i2 + $i3";
    "i6 = $i2 + $i3"->"if i6 != i0 goto i4 = i4 + -1";
    "if i6 != i0 goto i4 = i4 + -1"->"goto [?= $i7 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "if i6 != i0 goto i4 = i4 + -1"->"i4 = i4 + -1";
    "goto [?= $i7 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "i4 = i4 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 < 0 goto $i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "$i7 = virtualinvoke r0.<java.lang.String: int length()>()"->"if i5 > $i7 goto r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)";
    "if i5 > $i7 goto r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)"->"r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5)";
    "if i5 > $i7 goto r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)"->"r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)";
    "r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5)"->"i8 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r6)";
    "i8 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r6)"->"if i8 != i1 goto i5 = i5 + 1";
    "if i8 != i1 goto i5 = i5 + 1"->"goto [?= r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)]";
    "if i8 != i1 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "goto [?= r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)]"->"r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)";
    "i5 = i5 + 1"->"goto [?= $i7 = virtualinvoke r0.<java.lang.String: int length()>()]";
    "goto [?= $i7 = virtualinvoke r0.<java.lang.String: int length()>()]"->"$i7 = virtualinvoke r0.<java.lang.String: int length()>()";
    "r7 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r5)"->"r8 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r6)";
    "r8 = staticinvoke <utils.Util: java.lang.String escapeJsonString(java.lang.String)>(r6)"->"$r2 = newarray (java.lang.Object)[2]";
    "$r2 = newarray (java.lang.Object)[2]"->"$r2[0] = r7";
    "$r2[0] = r7"->"$r2[1] = r8";
    "$r2[1] = r8"->"r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"{\\\"start\\\":\\\"%s\\\",\\\"end\\\":\\\"%s\\\"}\", $r2)";
    "r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"{\\\"start\\\":\\\"%s\\\",\\\"end\\\":\\\"%s\\\"}\", $r2)"->"$r3 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r0, r7, r8)";
    "$r3 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r0, r7, r8)"->"$r4 = virtualinvoke $r3.<entity.MatchResult: java.lang.String getResult()>()";
    "$r4 = virtualinvoke $r3.<entity.MatchResult: java.lang.String getResult()>()"->"$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)";
    "$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)"->"if $z0 == 0 goto return \"generate rule fail,try again\"";
    "if $z0 == 0 goto return \"generate rule fail,try again\""->"return r9";
    "if $z0 == 0 goto return \"generate rule fail,try again\""->"return \"generate rule fail,try again\"";
}
