digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
i4 = i0;
i5 = i1;
r14 = \"\";
r15 = \"\";
r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
r16 = \"\";
if i0 <= 3 goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 4 ]
i4 = i4 + -3;
goto [?= $i6 = virtualinvoke r0.<java.lang.String: int length()>()];
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i0 <= 1 goto $i6 = virtualinvoke r0.<java.lang.String: int length()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
i4 = i4 + -1;
"
    "Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 3;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
i8 = 0;
"
    "Block 7:
[preds: 6 17 ] [succs: 8 18 ]
$i9 = virtualinvoke r0.<java.lang.String: int length()>();
if i8 >= $i9 goto return r16;
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0);
r18 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r17);
r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);
r20 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r19);
$r2 = newarray (java.lang.Object)[2];
$r2[0] = r18;
$r2[1] = r20;
r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s(.*?)%s\", $r2);
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------\");
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r16);
$r5 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>(\"------------------------------\");
$r7 = <burp.BurpExtender: java.io.PrintWriter stderr>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[+] \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r10);
$r11 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>(r16);
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r0, r16);
$r13 = virtualinvoke $r12.<entity.MatchResult: java.lang.String getResult()>();
$z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto (branch);
"
    "Block 9:
[preds: 8 ] [succs: 18 ]
goto [?= return r16];
"
    "Block 10:
[preds: 8 ] [succs: 11 13 ]
if i4 != 0 goto (branch);
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 != $i3 goto (branch);
"
    "Block 12:
[preds: 11 ] [succs: 18 ]
goto [?= return r16];
"
    "Block 13:
[preds: 10 11 ] [succs: 14 15 ]
if i4 <= 0 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>();
"
    "Block 14:
[preds: 13 ] [succs: 15 ]
i4 = i4 + -1;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$i2 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 >= $i2 goto i8 = i8 + 1;
"
    "Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
"
    "Block 17:
[preds: 15 16 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= $i9 = virtualinvoke r0.<java.lang.String: int length()>()];
"
    "Block 18:
[preds: 7 9 12 ] [succs: ]
return r16;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
i4 = i0;
i5 = i1;
r14 = \"\";
r15 = \"\";
r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
r16 = \"\";
if i0 <= 3 goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 4 ]
i4 = i4 + -3;
goto [?= $i6 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String;
i0 := @parameter1: int;
i1 := @parameter2: int;
i4 = i0;
i5 = i1;
r14 = \"\";
r15 = \"\";
r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
r16 = \"\";
if i0 <= 3 goto (branch);
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
if i0 <= 1 goto $i6 = virtualinvoke r0.<java.lang.String: int length()>();
";
    "Block 1:
[preds: 0 ] [succs: 4 ]
i4 = i4 + -3;
goto [?= $i6 = virtualinvoke r0.<java.lang.String: int length()>()];
"->"Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i0 <= 1 goto $i6 = virtualinvoke r0.<java.lang.String: int length()>();
"->"Block 3:
[preds: 2 ] [succs: 4 ]
i4 = i4 + -1;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
if i0 <= 1 goto $i6 = virtualinvoke r0.<java.lang.String: int length()>();
"->"Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
i4 = i4 + -1;
"->"Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
";
    "Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 3;
";
    "Block 4:
[preds: 1 2 3 ] [succs: 5 6 ]
$i6 = virtualinvoke r0.<java.lang.String: int length()>();
$i7 = $i6 - 3;
if i1 >= $i7 goto i8 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
i8 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i5 = i5 + 3;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
i8 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
i8 = 0;
"->"Block 7:
[preds: 6 17 ] [succs: 8 18 ]
$i9 = virtualinvoke r0.<java.lang.String: int length()>();
if i8 >= $i9 goto return r16;
";
    "Block 7:
[preds: 6 17 ] [succs: 8 18 ]
$i9 = virtualinvoke r0.<java.lang.String: int length()>();
if i8 >= $i9 goto return r16;
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0);
r18 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r17);
r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);
r20 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r19);
$r2 = newarray (java.lang.Object)[2];
$r2[0] = r18;
$r2[1] = r20;
r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s(.*?)%s\", $r2);
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------\");
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r16);
$r5 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>(\"------------------------------\");
$r7 = <burp.BurpExtender: java.io.PrintWriter stderr>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[+] \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r10);
$r11 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>(r16);
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r0, r16);
$r13 = virtualinvoke $r12.<entity.MatchResult: java.lang.String getResult()>();
$z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto (branch);
";
    "Block 7:
[preds: 6 17 ] [succs: 8 18 ]
$i9 = virtualinvoke r0.<java.lang.String: int length()>();
if i8 >= $i9 goto return r16;
"->"Block 18:
[preds: 7 9 12 ] [succs: ]
return r16;
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0);
r18 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r17);
r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);
r20 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r19);
$r2 = newarray (java.lang.Object)[2];
$r2[0] = r18;
$r2[1] = r20;
r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s(.*?)%s\", $r2);
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------\");
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r16);
$r5 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>(\"------------------------------\");
$r7 = <burp.BurpExtender: java.io.PrintWriter stderr>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[+] \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r10);
$r11 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>(r16);
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r0, r16);
$r13 = virtualinvoke $r12.<entity.MatchResult: java.lang.String getResult()>();
$z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto (branch);
"->"Block 9:
[preds: 8 ] [succs: 18 ]
goto [?= return r16];
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i0);
r18 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r17);
r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);
r20 = staticinvoke <utils.Util: java.lang.String escapeExprSpecialWord(java.lang.String)>(r19);
$r2 = newarray (java.lang.Object)[2];
$r2[0] = r18;
$r2[1] = r20;
r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s(.*?)%s\", $r2);
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(\"---------------------------------------\");
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r16);
$r5 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>(\"------------------------------\");
$r7 = <burp.BurpExtender: java.io.PrintWriter stderr>;
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[+] \");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r10);
$r11 = <burp.BurpExtender: java.io.PrintWriter stderr>;
virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>(r16);
$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r0, r16);
$r13 = virtualinvoke $r12.<entity.MatchResult: java.lang.String getResult()>();
$z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto (branch);
"->"Block 10:
[preds: 8 ] [succs: 11 13 ]
if i4 != 0 goto (branch);
";
    "Block 9:
[preds: 8 ] [succs: 18 ]
goto [?= return r16];
"->"Block 18:
[preds: 7 9 12 ] [succs: ]
return r16;
";
    "Block 10:
[preds: 8 ] [succs: 11 13 ]
if i4 != 0 goto (branch);
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 != $i3 goto (branch);
";
    "Block 10:
[preds: 8 ] [succs: 11 13 ]
if i4 != 0 goto (branch);
"->"Block 13:
[preds: 10 11 ] [succs: 14 15 ]
if i4 <= 0 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>();
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 != $i3 goto (branch);
"->"Block 12:
[preds: 11 ] [succs: 18 ]
goto [?= return r16];
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$i3 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 != $i3 goto (branch);
"->"Block 13:
[preds: 10 11 ] [succs: 14 15 ]
if i4 <= 0 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>();
";
    "Block 12:
[preds: 11 ] [succs: 18 ]
goto [?= return r16];
"->"Block 18:
[preds: 7 9 12 ] [succs: ]
return r16;
";
    "Block 13:
[preds: 10 11 ] [succs: 14 15 ]
if i4 <= 0 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>();
"->"Block 14:
[preds: 13 ] [succs: 15 ]
i4 = i4 + -1;
";
    "Block 13:
[preds: 10 11 ] [succs: 14 15 ]
if i4 <= 0 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>();
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$i2 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 >= $i2 goto i8 = i8 + 1;
";
    "Block 14:
[preds: 13 ] [succs: 15 ]
i4 = i4 + -1;
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$i2 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 >= $i2 goto i8 = i8 + 1;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$i2 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 >= $i2 goto i8 = i8 + 1;
"->"Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
$i2 = virtualinvoke r0.<java.lang.String: int length()>();
if i5 >= $i2 goto i8 = i8 + 1;
"->"Block 17:
[preds: 15 16 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= $i9 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 16:
[preds: 15 ] [succs: 17 ]
i5 = i5 + 1;
"->"Block 17:
[preds: 15 16 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= $i9 = virtualinvoke r0.<java.lang.String: int length()>()];
";
    "Block 17:
[preds: 15 16 ] [succs: 7 ]
i8 = i8 + 1;
goto [?= $i9 = virtualinvoke r0.<java.lang.String: int length()>()];
"->"Block 7:
[preds: 6 17 ] [succs: 8 18 ]
$i9 = virtualinvoke r0.<java.lang.String: int length()>();
if i8 >= $i9 goto return r16;
";
}
