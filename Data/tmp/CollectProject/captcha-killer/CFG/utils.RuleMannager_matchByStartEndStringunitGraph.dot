digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String"
    "r1 := @parameter1: java.lang.String"
    "r2 := @parameter2: java.lang.String"
    "$i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)"
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"
    "i2 = $i0 + $i1"
    "i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r2)"
    "$r3 = new entity.MatchResult"
    "specialinvoke $r3.<entity.MatchResult: void <init>()>()"
    "r4 = $r3"
    "virtualinvoke r4.<entity.MatchResult: void setStart(int)>(i2)"
    "virtualinvoke r4.<entity.MatchResult: void setEnd(int)>(i3)"
    "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)"
    "virtualinvoke r4.<entity.MatchResult: void setResult(java.lang.String)>($r5)"
    "return r4"
    "r0 := @parameter0: java.lang.String"->"r1 := @parameter1: java.lang.String";
    "r1 := @parameter1: java.lang.String"->"r2 := @parameter2: java.lang.String";
    "r2 := @parameter2: java.lang.String"->"$i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)";
    "$i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)"->"$i1 = virtualinvoke r1.<java.lang.String: int length()>()";
    "$i1 = virtualinvoke r1.<java.lang.String: int length()>()"->"i2 = $i0 + $i1";
    "i2 = $i0 + $i1"->"i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r2)";
    "i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r2)"->"$r3 = new entity.MatchResult";
    "$r3 = new entity.MatchResult"->"specialinvoke $r3.<entity.MatchResult: void <init>()>()";
    "specialinvoke $r3.<entity.MatchResult: void <init>()>()"->"r4 = $r3";
    "r4 = $r3"->"virtualinvoke r4.<entity.MatchResult: void setStart(int)>(i2)";
    "virtualinvoke r4.<entity.MatchResult: void setStart(int)>(i2)"->"virtualinvoke r4.<entity.MatchResult: void setEnd(int)>(i3)";
    "virtualinvoke r4.<entity.MatchResult: void setEnd(int)>(i3)"->"$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)";
    "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3)"->"virtualinvoke r4.<entity.MatchResult: void setResult(java.lang.String)>($r5)";
    "virtualinvoke r4.<entity.MatchResult: void setResult(java.lang.String)>($r5)"->"return r4";
}
